   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "cdc_class_device.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.Endpoint_SelectEndpoint,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	Endpoint_SelectEndpoint:
  25              	.LFB173:
  26              	 .file 1 "d:\\xmc\\projekte\\temp\\cf_xmc4700\\cleanflight\\lib\\main\\xmc4000\\usbd\\usb\\core\\xmc4000\\usbd_endpoint_xmc4000.h"
   1:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** /**
   2:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * @file usbd_endpoint_xmc4000.h
   3:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * @date 2015-06-20 
   4:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * NOTE:
   5:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   6:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *
   7:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * @cond
   8:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  **************************************************************************************************
   9:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * The USB core driver for XMC4000 family of controllers. It does the USB protocol handling.
  10:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *
  11:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * Copyright (c) 2015, Infineon Technologies AG
  12:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * All rights reserved.                        
  13:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *                                             
  14:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  15:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * following conditions are met:   
  16:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *                                                                              
  17:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  18:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *   disclaimer.                        
  19:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * 
  20:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  21:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  22:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *                         
  23:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  24:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *   products derived from this software without specific prior written permission. 
  25:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *                                             
  26:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  27:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  28:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  29:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  30:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  31:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  32:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  33:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *                                                                              
  34:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  35:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * with Infineon Technologies AG (dave@infineon.com).        
  36:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  **************************************************************************************************
  37:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *
  38:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * Change History
  39:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * --------------
  40:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *
  41:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * 2015-02-16:
  42:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *     - Initial version.      
  43:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * 2015-06-20:
  44:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *     - Updated the file header.
  45:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *     
  46:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  * @endcond 
  47:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  *
  48:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****  */
  49:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** /*
  50:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  51:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
  52:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   Permission to use, copy, modify, distribute, and sell this
  53:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   software and its documentation for any purpose is hereby granted
  54:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   without fee, provided that the above copyright notice appear in
  55:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   all copies and that both that the copyright notice and this
  56:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   permission notice and warranty disclaimer appear in supporting
  57:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   documentation, and that the name of the author not be used in
  58:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   advertising or publicity pertaining to distribution of the
  59:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   software without specific, written prior permission.
  60:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
  61:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   The author disclaims all warranties with regard to this
  62:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   software, including all implied warranties of merchantability
  63:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   and fitness.  In no event shall the author be liable for any
  64:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   special, indirect or consequential damages or any damages
  65:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   whatsoever resulting from loss of use, data or profits, whether
  66:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   in an action of contract, negligence or other tortious action,
  67:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   arising out of or in connection with the use or performance of
  68:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h ****   this software.
  69:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** */
  70:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
  71:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
  72:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** #ifndef USBD_ENDPOINT_XMC4000_H
  73:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** #define USBD_ENDPOINT_XMC4000_H
  74:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
  75:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** #include "../../common/common.h"
  76:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** #include "../endpoint.h"
  77:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** #include "../usb_controller.h"
  78:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** #include "../../../usbd.h" /* IXF */
  79:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
  80:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
  81:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** /* Enable C linkage for C++ Compilers: */
  82:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** #if defined(__cplusplus)
  83:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	extern "C" {
  84:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** #endif
  85:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/**
  86:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * @ingroup USBD_enumerations
  87:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * @{
  88:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
  89:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
  90:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Enum for the possible error return codes of the
  91:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * \ref Endpoint_WaitUntilReady() function.
  92:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	*
  93:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	*/
  94:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	enum Endpoint_WaitUntilReady_ErrorCodes_t
  95:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
  96:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no error.
  97:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
  98:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 *   transfer by the host or device.
  99:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 */
 100:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host while
 101:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 *   waiting for the endpoint to become ready.
 102:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 */
 103:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host a
 104:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 *   no USB endpoint traffic can occur until the bus
 105:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 *   has resumed.
 106:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 */
 107:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next p
 108:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 *   within the software timeout period set by the
 109:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 *   \ref USB_STREAM_TIMEOUT_MS macro.
 110:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 														 */
 111:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	};
 112:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/**
 113:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * @}
 114:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 115:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 116:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/**
 117:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * @ingroup USBD_apidoc
 118:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * @{
 119:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 120:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Get the endpoint address of the currently selected endpoint. This is
 121:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * typically used to save the currently selected endpoint so that it can be
 122:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * restored after another endpoint has been  manipulated.
 123:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 124:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \return Index of the currently selected endpoint.
 125:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 126:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline uint8_t Endpoint_GetCurrentEndpoint(void);
 127:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 128:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
 129:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		return device.CurrentDirection | device.CurrentEndpoint;
 130:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	}
 131:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 132:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Selects the given endpoint address.
 133:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 134:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  Any endpoint operations which do not require the endpoint address to be
 135:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  indicated will operate on
 136:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  the currently selected endpoint.
 137:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 138:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \param[in] Address Endpoint address to select.
 139:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 140:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline void Endpoint_SelectEndpoint(const uint8_t Address);
 141:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 142:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
  27              	 .loc 1 142 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 0346     	 mov r3,r0
  43 0008 FB71     	 strb r3,[r7,#7]
 143:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		device.CurrentEndpoint = Address & ENDPOINT_EPNUM_MASK;
  44              	 .loc 1 143 0
  45 000a FB79     	 ldrb r3,[r7,#7]
  46 000c 03F00F03 	 and r3,r3,#15
  47 0010 DAB2     	 uxtb r2,r3
  48 0012 074B     	 ldr r3,.L2
  49 0014 83F81921 	 strb r2,[r3,#281]
 144:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		device.CurrentDirection = (Address & ENDPOINT_DIR_MASK);
  50              	 .loc 1 144 0
  51 0018 FB79     	 ldrb r3,[r7,#7]
  52 001a 23F07F03 	 bic r3,r3,#127
  53 001e DAB2     	 uxtb r2,r3
  54 0020 034B     	 ldr r3,.L2
  55 0022 83F81A21 	 strb r2,[r3,#282]
 145:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	}
  56              	 .loc 1 145 0
  57 0026 0C37     	 adds r7,r7,#12
  58              	.LCFI3:
  59              	 .cfi_def_cfa_offset 4
  60 0028 BD46     	 mov sp,r7
  61              	.LCFI4:
  62              	 .cfi_def_cfa_register 13
  63              	 
  64 002a 5DF8047B 	 ldr r7,[sp],#4
  65              	.LCFI5:
  66              	 .cfi_restore 7
  67              	 .cfi_def_cfa_offset 0
  68 002e 7047     	 bx lr
  69              	.L3:
  70              	 .align 2
  71              	.L2:
  72 0030 00000000 	 .word device
  73              	 .cfi_endproc
  74              	.LFE173:
  76              	 .section .text.Endpoint_IsSETUPReceived,"ax",%progbits
  77              	 .align 2
  78              	 .thumb
  79              	 .thumb_func
  81              	Endpoint_IsSETUPReceived:
  82              	.LFB174:
 146:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 147:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Determines if the current CONTROL type endpoint has received a SETUP
 148:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * packet.
 149:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 150:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \ingroup Group_EndpointPacketManagement_AVR8
 151:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 152:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \return Boolean \c true if the selected endpoint has received a SETUP
 153:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  packet, \c false otherwise.
 154:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 155:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline bool Endpoint_IsSETUPReceived(void);
 156:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline bool Endpoint_IsSETUPReceived(void)
 157:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
  83              	 .loc 1 157 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87              	 
  88 0000 80B4     	 push {r7}
  89              	.LCFI6:
  90              	 .cfi_def_cfa_offset 4
  91              	 .cfi_offset 7,-4
  92 0002 00AF     	 add r7,sp,#0
  93              	.LCFI7:
  94              	 .cfi_def_cfa_register 7
 158:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		return device.IsSetupRecieved;
  95              	 .loc 1 158 0
  96 0004 084B     	 ldr r3,.L6
  97 0006 93F81B31 	 ldrb r3,[r3,#283]
  98 000a DBB2     	 uxtb r3,r3
  99 000c 5B08     	 lsrs r3,r3,#1
 100 000e 03F00103 	 and r3,r3,#1
 101 0012 DBB2     	 uxtb r3,r3
 102 0014 002B     	 cmp r3,#0
 103 0016 14BF     	 ite ne
 104 0018 0123     	 movne r3,#1
 105 001a 0023     	 moveq r3,#0
 106 001c DBB2     	 uxtb r3,r3
 159:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	}
 107              	 .loc 1 159 0
 108 001e 1846     	 mov r0,r3
 109 0020 BD46     	 mov sp,r7
 110              	.LCFI8:
 111              	 .cfi_def_cfa_register 13
 112              	 
 113 0022 5DF8047B 	 ldr r7,[sp],#4
 114              	.LCFI9:
 115              	 .cfi_restore 7
 116              	 .cfi_def_cfa_offset 0
 117 0026 7047     	 bx lr
 118              	.L7:
 119              	 .align 2
 120              	.L6:
 121 0028 00000000 	 .word device
 122              	 .cfi_endproc
 123              	.LFE174:
 125              	 .section .text.Endpoint_ClearSETUP,"ax",%progbits
 126              	 .align 2
 127              	 .thumb
 128              	 .thumb_func
 130              	Endpoint_ClearSETUP:
 131              	.LFB175:
 160:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 161:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 162:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Clears a received SETUP packet on the currently selected CONTROL type
 163:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * endpoint, freeing up the
 164:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  endpoint for the next packet.
 165:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 166:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \ingroup Group_EndpointPacketManagement_AVR8
 167:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 168:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \note This is not applicable for non CONTROL type endpoints.
 169:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 170:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline void Endpoint_ClearSETUP(void);
 171:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline void Endpoint_ClearSETUP(void)
 172:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
 132              	 .loc 1 172 0
 133              	 .cfi_startproc
 134              	 
 135              	 
 136              	 
 137 0000 80B4     	 push {r7}
 138              	.LCFI10:
 139              	 .cfi_def_cfa_offset 4
 140              	 .cfi_offset 7,-4
 141 0002 00AF     	 add r7,sp,#0
 142              	.LCFI11:
 143              	 .cfi_def_cfa_register 7
 173:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		device.IsSetupRecieved = 0;
 144              	 .loc 1 173 0
 145 0004 054B     	 ldr r3,.L9
 146 0006 93F81B21 	 ldrb r2,[r3,#283]
 147 000a 22F00202 	 bic r2,r2,#2
 148 000e 83F81B21 	 strb r2,[r3,#283]
 174:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	}
 149              	 .loc 1 174 0
 150 0012 BD46     	 mov sp,r7
 151              	.LCFI12:
 152              	 .cfi_def_cfa_register 13
 153              	 
 154 0014 5DF8047B 	 ldr r7,[sp],#4
 155              	.LCFI13:
 156              	 .cfi_restore 7
 157              	 .cfi_def_cfa_offset 0
 158 0018 7047     	 bx lr
 159              	.L10:
 160 001a 00BF     	 .align 2
 161              	.L9:
 162 001c 00000000 	 .word device
 163              	 .cfi_endproc
 164              	.LFE175:
 166              	 .section .text.Endpoint_ClearStatusStage,"ax",%progbits
 167              	 .align 2
 168              	 .thumb
 169              	 .thumb_func
 171              	Endpoint_ClearStatusStage:
 172              	.LFB176:
 175:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 176:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Nothing done in this function
 177:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 178:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 179:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline void Endpoint_ClearStatusStage(void);
 180:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline void Endpoint_ClearStatusStage(void)
 181:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
 173              	 .loc 1 181 0
 174              	 .cfi_startproc
 175              	 
 176              	 
 177              	 
 178 0000 80B4     	 push {r7}
 179              	.LCFI14:
 180              	 .cfi_def_cfa_offset 4
 181              	 .cfi_offset 7,-4
 182 0002 00AF     	 add r7,sp,#0
 183              	.LCFI15:
 184              	 .cfi_def_cfa_register 7
 182:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 183:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	}
 185              	 .loc 1 183 0
 186 0004 BD46     	 mov sp,r7
 187              	.LCFI16:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 0006 5DF8047B 	 ldr r7,[sp],#4
 191              	.LCFI17:
 192              	 .cfi_restore 7
 193              	 .cfi_def_cfa_offset 0
 194 000a 7047     	 bx lr
 195              	 .cfi_endproc
 196              	.LFE176:
 198              	 .section .text.Endpoint_IsINReady,"ax",%progbits
 199              	 .align 2
 200              	 .thumb
 201              	 .thumb_func
 203              	Endpoint_IsINReady:
 204              	.LFB177:
 184:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 185:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Determines if the selected IN endpoint is ready for a new packet to be
 186:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 * sent to the host.
 187:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 188:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \ingroup Group_EndpointPacketManagement_AVR8
 189:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 190:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \return Boolean \c true if the current endpoint is ready for an IN
 191:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  packet, \c false otherwise.
 192:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 193:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline bool Endpoint_IsINReady(void);
 194:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline bool Endpoint_IsINReady(void)
 195:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
 205              	 .loc 1 195 0
 206              	 .cfi_startproc
 207              	 
 208              	 
 209              	 
 210 0000 80B4     	 push {r7}
 211              	.LCFI18:
 212              	 .cfi_def_cfa_offset 4
 213              	 .cfi_offset 7,-4
 214 0002 83B0     	 sub sp,sp,#12
 215              	.LCFI19:
 216              	 .cfi_def_cfa_offset 16
 217 0004 00AF     	 add r7,sp,#0
 218              	.LCFI20:
 219              	 .cfi_def_cfa_register 7
 196:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		USBD_Endpoint_t *ep = &device.Endpoints[device.CurrentEndpoint];
 220              	 .loc 1 196 0
 221 0006 144B     	 ldr r3,.L16
 222 0008 93F81931 	 ldrb r3,[r3,#281]
 223 000c 1A46     	 mov r2,r3
 224 000e 1346     	 mov r3,r2
 225 0010 9B00     	 lsls r3,r3,#2
 226 0012 1344     	 add r3,r3,r2
 227 0014 DB00     	 lsls r3,r3,#3
 228 0016 9B1A     	 subs r3,r3,r2
 229 0018 0F4A     	 ldr r2,.L16
 230 001a 1344     	 add r3,r3,r2
 231 001c 0433     	 adds r3,r3,#4
 232 001e 7B60     	 str r3,[r7,#4]
 197:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		return ep->InInUse == 0 && ep->IsEnabled;
 233              	 .loc 1 197 0
 234 0020 7B68     	 ldr r3,[r7,#4]
 235 0022 1B68     	 ldr r3,[r3]
 236 0024 1B0B     	 lsrs r3,r3,#12
 237 0026 03F00103 	 and r3,r3,#1
 238 002a DBB2     	 uxtb r3,r3
 239 002c 002B     	 cmp r3,#0
 240 002e 08D1     	 bne .L13
 241              	 .loc 1 197 0 is_stmt 0 discriminator 1
 242 0030 7B68     	 ldr r3,[r7,#4]
 243 0032 5B78     	 ldrb r3,[r3,#1]
 244 0034 03F00203 	 and r3,r3,#2
 245 0038 DBB2     	 uxtb r3,r3
 246 003a 002B     	 cmp r3,#0
 247 003c 01D0     	 beq .L13
 248              	 .loc 1 197 0 discriminator 3
 249 003e 0123     	 movs r3,#1
 250 0040 00E0     	 b .L14
 251              	.L13:
 252              	 .loc 1 197 0 discriminator 4
 253 0042 0023     	 movs r3,#0
 254              	.L14:
 255              	 .loc 1 197 0 discriminator 6
 256 0044 03F00103 	 and r3,r3,#1
 257 0048 DBB2     	 uxtb r3,r3
 198:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	}
 258              	 .loc 1 198 0 is_stmt 1 discriminator 6
 259 004a 1846     	 mov r0,r3
 260 004c 0C37     	 adds r7,r7,#12
 261              	.LCFI21:
 262              	 .cfi_def_cfa_offset 4
 263 004e BD46     	 mov sp,r7
 264              	.LCFI22:
 265              	 .cfi_def_cfa_register 13
 266              	 
 267 0050 5DF8047B 	 ldr r7,[sp],#4
 268              	.LCFI23:
 269              	 .cfi_restore 7
 270              	 .cfi_def_cfa_offset 0
 271 0054 7047     	 bx lr
 272              	.L17:
 273 0056 00BF     	 .align 2
 274              	.L16:
 275 0058 00000000 	 .word device
 276              	 .cfi_endproc
 277              	.LFE177:
 279              	 .section .text.Endpoint_IsOUTReceived,"ax",%progbits
 280              	 .align 2
 281              	 .thumb
 282              	 .thumb_func
 284              	Endpoint_IsOUTReceived:
 285              	.LFB178:
 199:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 200:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Determines if the selected OUT endpoint has received new packet from the
 201:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  host.
 202:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 203:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \ingroup Group_EndpointPacketManagement_AVR8
 204:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 205:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \return Boolean \c true if current endpoint is has received an OUT
 206:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  packet, \c false otherwise.
 207:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 208:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline bool Endpoint_IsOUTReceived(void);
 209:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline bool Endpoint_IsOUTReceived(void)
 210:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
 286              	 .loc 1 210 0
 287              	 .cfi_startproc
 288              	 
 289              	 
 290              	 
 291 0000 80B4     	 push {r7}
 292              	.LCFI24:
 293              	 .cfi_def_cfa_offset 4
 294              	 .cfi_offset 7,-4
 295 0002 83B0     	 sub sp,sp,#12
 296              	.LCFI25:
 297              	 .cfi_def_cfa_offset 16
 298 0004 00AF     	 add r7,sp,#0
 299              	.LCFI26:
 300              	 .cfi_def_cfa_register 7
 211:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		USBD_Endpoint_t *ep = &device.Endpoints[device.CurrentEndpoint];
 301              	 .loc 1 211 0
 302 0006 0F4B     	 ldr r3,.L20
 303 0008 93F81931 	 ldrb r3,[r3,#281]
 304 000c 1A46     	 mov r2,r3
 305 000e 1346     	 mov r3,r2
 306 0010 9B00     	 lsls r3,r3,#2
 307 0012 1344     	 add r3,r3,r2
 308 0014 DB00     	 lsls r3,r3,#3
 309 0016 9B1A     	 subs r3,r3,r2
 310 0018 0A4A     	 ldr r2,.L20
 311 001a 1344     	 add r3,r3,r2
 312 001c 0433     	 adds r3,r3,#4
 313 001e 7B60     	 str r3,[r7,#4]
 212:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		return ep->IsOutRecieved;
 314              	 .loc 1 212 0
 315 0020 7B68     	 ldr r3,[r7,#4]
 316 0022 1B68     	 ldr r3,[r3]
 317 0024 5B0B     	 lsrs r3,r3,#13
 318 0026 03F00103 	 and r3,r3,#1
 319 002a DBB2     	 uxtb r3,r3
 320 002c 002B     	 cmp r3,#0
 321 002e 14BF     	 ite ne
 322 0030 0123     	 movne r3,#1
 323 0032 0023     	 moveq r3,#0
 324 0034 DBB2     	 uxtb r3,r3
 213:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	}
 325              	 .loc 1 213 0
 326 0036 1846     	 mov r0,r3
 327 0038 0C37     	 adds r7,r7,#12
 328              	.LCFI27:
 329              	 .cfi_def_cfa_offset 4
 330 003a BD46     	 mov sp,r7
 331              	.LCFI28:
 332              	 .cfi_def_cfa_register 13
 333              	 
 334 003c 5DF8047B 	 ldr r7,[sp],#4
 335              	.LCFI29:
 336              	 .cfi_restore 7
 337              	 .cfi_def_cfa_offset 0
 338 0040 7047     	 bx lr
 339              	.L21:
 340 0042 00BF     	 .align 2
 341              	.L20:
 342 0044 00000000 	 .word device
 343              	 .cfi_endproc
 344              	.LFE178:
 346              	 .section .text.Endpoint_BytesInEndpoint,"ax",%progbits
 347              	 .align 2
 348              	 .thumb
 349              	 .thumb_func
 351              	Endpoint_BytesInEndpoint:
 352              	.LFB180:
 214:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 215:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Determines the currently selected endpoint's direction.
 216:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 217:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \return The currently selected endpoint's direction, as a
 218:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \c ENDPOINT_DIR_* mask.
 219:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 220:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline uint8_t Endpoint_GetEndpointDirection(void);
 221:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline uint8_t Endpoint_GetEndpointDirection(void)
 222:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
 223:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		USBD_Endpoint_t *ep = &device.Endpoints[device.CurrentEndpoint];
 224:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		return ep->Address & ENDPOINT_DIR_MASK;
 225:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	}
 226:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 
 227:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	/** Indicates the number of bytes currently stored in the current endpoint's
 228:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  selected bank.
 229:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 230:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \ingroup Group_EndpointRW_AVR8
 231:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *
 232:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  \return Total number of bytes in the currently selected Endpoint's FIFO
 233:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 *  buffer.
 234:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	 */
 235:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline uint16_t Endpoint_BytesInEndpoint(void);
 236:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	static inline uint16_t Endpoint_BytesInEndpoint(void)
 237:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	{
 353              	 .loc 1 237 0
 354              	 .cfi_startproc
 355              	 
 356              	 
 357              	 
 358 0000 80B4     	 push {r7}
 359              	.LCFI30:
 360              	 .cfi_def_cfa_offset 4
 361              	 .cfi_offset 7,-4
 362 0002 83B0     	 sub sp,sp,#12
 363              	.LCFI31:
 364              	 .cfi_def_cfa_offset 16
 365 0004 00AF     	 add r7,sp,#0
 366              	.LCFI32:
 367              	 .cfi_def_cfa_register 7
 238:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		USBD_Endpoint_t *ep = &device.Endpoints[device.CurrentEndpoint];
 368              	 .loc 1 238 0
 369 0006 114B     	 ldr r3,.L25
 370 0008 93F81931 	 ldrb r3,[r3,#281]
 371 000c 1A46     	 mov r2,r3
 372 000e 1346     	 mov r3,r2
 373 0010 9B00     	 lsls r3,r3,#2
 374 0012 1344     	 add r3,r3,r2
 375 0014 DB00     	 lsls r3,r3,#3
 376 0016 9B1A     	 subs r3,r3,r2
 377 0018 0C4A     	 ldr r2,.L25
 378 001a 1344     	 add r3,r3,r2
 379 001c 0433     	 adds r3,r3,#4
 380 001e 7B60     	 str r3,[r7,#4]
 239:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		if (ep->Direction)
 381              	 .loc 1 239 0
 382 0020 7B68     	 ldr r3,[r7,#4]
 383 0022 1B78     	 ldrb r3,[r3]
 384 0024 23F07F03 	 bic r3,r3,#127
 385 0028 DBB2     	 uxtb r3,r3
 386 002a 002B     	 cmp r3,#0
 387 002c 04D0     	 beq .L23
 240:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 			return (uint16_t)(ep->InBytesAvailable);
 388              	 .loc 1 240 0
 389 002e 7B68     	 ldr r3,[r7,#4]
 390 0030 D3F81330 	 ldr r3,[r3,#19]
 391 0034 9BB2     	 uxth r3,r3
 392 0036 03E0     	 b .L24
 393              	.L23:
 241:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 		else
 242:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 			return (uint16_t)(ep->OutBytesAvailable);
 394              	 .loc 1 242 0
 395 0038 7B68     	 ldr r3,[r7,#4]
 396 003a D3F80330 	 ldr r3,[r3,#3]
 397 003e 9BB2     	 uxth r3,r3
 398              	.L24:
 243:d:\xmc\projekte\temp\cf_xmc4700\cleanflight\lib\main\xmc4000\usbd\usb\core\xmc4000\usbd_endpoint_xmc4000.h **** 	}
 399              	 .loc 1 243 0
 400 0040 1846     	 mov r0,r3
 401 0042 0C37     	 adds r7,r7,#12
 402              	.LCFI33:
 403              	 .cfi_def_cfa_offset 4
 404 0044 BD46     	 mov sp,r7
 405              	.LCFI34:
 406              	 .cfi_def_cfa_register 13
 407              	 
 408 0046 5DF8047B 	 ldr r7,[sp],#4
 409              	.LCFI35:
 410              	 .cfi_restore 7
 411              	 .cfi_def_cfa_offset 0
 412 004a 7047     	 bx lr
 413              	.L26:
 414              	 .align 2
 415              	.L25:
 416 004c 00000000 	 .word device
 417              	 .cfi_endproc
 418              	.LFE180:
 420              	 .section .text.CDC_Device_ProcessControlRequest,"ax",%progbits
 421              	 .align 2
 422              	 .global CDC_Device_ProcessControlRequest
 423              	 .thumb
 424              	 .thumb_func
 426              	CDC_Device_ProcessControlRequest:
 427              	.LFB187:
 428              	 .file 2 "../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c"
   1:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** /**
   2:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * @file cdc_class_device.c
   3:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * @date 2015-06-20 
   4:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *
   5:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  **************************************************************************************************
   7:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * The USB virtual COM port driver for XMC4000 family of controllers.
   8:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *
   9:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  16:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *   disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * 
  18:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  19:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  20:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *                         
  21:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  22:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *   products derived from this software without specific prior written permission. 
  23:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *                                             
  24:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  31:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *                                                                              
  32:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * with Infineon Technologies AG (dave@infineon.com).        
  34:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  **************************************************************************************************
  35:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *
  36:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * Change History
  37:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * --------------
  38:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *
  39:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * 2015-02-16:
  40:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *     - Initial version.      
  41:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * 2015-06-20:
  42:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *     - Updated the file header.
  43:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *     
  44:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * @endcond 
  45:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  *
  46:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  */
  47:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** /*
  48:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  49:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  50:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   Permission to use, copy, modify, distribute, and sell this
  51:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   software and its documentation for any purpose is hereby granted
  52:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   without fee, provided that the above copyright notice appear in
  53:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   all copies and that both that the copyright notice and this
  54:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   permission notice and warranty disclaimer appear in supporting
  55:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   documentation, and that the name of the author not be used in
  56:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   advertising or publicity pertaining to distribution of the
  57:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   software without specific, written prior permission.
  58:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  59:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   The author disclaims all warranties with regard to this
  60:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   software, including all implied warranties of merchantability
  61:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   and fitness.  In no event shall the author be liable for any
  62:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   special, indirect or consequential damages or any damages
  63:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   whatsoever resulting from loss of use, data or profits, whether
  64:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   in an action of contract, negligence or other tortious action,
  65:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   arising out of or in connection with the use or performance of
  66:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****   this software.
  67:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** */
  68:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  69:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  70:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** #define  __INCLUDE_FROM_USB_DRIVER
  71:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  72:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** /**************************************************************************************************
  73:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * HEADER FILES                                                                                    
  74:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  **************************************************************************************************
  75:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** #include  "../../../USBD/usb/core/usb_mode.h" /*IFX*/
  76:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  77:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** #if defined(USB_CAN_BE_DEVICE)
  78:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  79:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** #define  __INCLUDE_FROM_CDC_DRIVER
  80:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** #define  __INCLUDE_FROM_CDC_DEVICE_C
  81:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** #include "cdc_class_device.h"
  82:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** #include "../../usbd_vcom.h"
  83:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  84:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** extern USB_CDCClass_event_CB_t cdc_class_events;
  85:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  86:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** /**************************************************************************************************
  87:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  * API IMPLEMENTATION
  88:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****  **************************************************************************************************
  89:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** void CDC_Device_ProcessControlRequest(
  90:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
  91:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 429              	 .loc 2 91 0
 430              	 .cfi_startproc
 431              	 
 432              	 
 433 0000 80B5     	 push {r7,lr}
 434              	.LCFI36:
 435              	 .cfi_def_cfa_offset 8
 436              	 .cfi_offset 7,-8
 437              	 .cfi_offset 14,-4
 438 0002 82B0     	 sub sp,sp,#8
 439              	.LCFI37:
 440              	 .cfi_def_cfa_offset 16
 441 0004 00AF     	 add r7,sp,#0
 442              	.LCFI38:
 443              	 .cfi_def_cfa_register 7
 444 0006 7860     	 str r0,[r7,#4]
  92:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((Endpoint_IsSETUPReceived() != 0) && (USB_ControlRequest.wIndex ==
 445              	 .loc 2 92 0
 446 0008 FFF7FEFF 	 bl Endpoint_IsSETUPReceived
 447 000c 0346     	 mov r3,r0
 448 000e 002B     	 cmp r3,#0
 449 0010 00F0AE80 	 beq .L27
 450              	 .loc 2 92 0 is_stmt 0 discriminator 1
 451 0014 584B     	 ldr r3,.L41
 452 0016 9B88     	 ldrh r3,[r3,#4]
 453 0018 9AB2     	 uxth r2,r3
  93:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			CDCInterfaceInfo->Config.ControlInterfaceNumber))
 454              	 .loc 2 93 0 is_stmt 1 discriminator 1
 455 001a 7B68     	 ldr r3,[r7,#4]
 456 001c DB7B     	 ldrb r3,[r3,#15]
  92:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((Endpoint_IsSETUPReceived() != 0) && (USB_ControlRequest.wIndex ==
 457              	 .loc 2 92 0 discriminator 1
 458 001e 9BB2     	 uxth r3,r3
 459 0020 9A42     	 cmp r2,r3
 460 0022 40F0A580 	 bne .L27
  94:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
  95:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
  96:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		switch (USB_ControlRequest.bRequest)
 461              	 .loc 2 96 0
 462 0026 544B     	 ldr r3,.L41
 463 0028 5B78     	 ldrb r3,[r3,#1]
 464 002a DBB2     	 uxtb r3,r3
 465 002c 203B     	 subs r3,r3,#32
 466 002e 032B     	 cmp r3,#3
 467 0030 00F29E80 	 bhi .L27
 468 0034 01A2     	 adr r2,.L30
 469 0036 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 470 003a 00BF     	 .p2align 2
 471              	.L30:
 472 003c A1000000 	 .word .L29+1
 473 0040 4D000000 	 .word .L31+1
 474 0044 13010000 	 .word .L32+1
 475 0048 43010000 	 .word .L33+1
 476              	 .p2align 1
 477              	.L31:
  97:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
  98:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			case CDC_REQ_GetLineEncoding:
  99:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				if ((REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE) == USB_ControlRequest.bmRequestTyp
 478              	 .loc 2 99 0
 479 004c 4A4B     	 ldr r3,.L41
 480 004e 1B78     	 ldrb r3,[r3]
 481 0050 DBB2     	 uxtb r3,r3
 482 0052 A12B     	 cmp r3,#161
 483 0054 23D1     	 bne .L34
 100:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				{
 101:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_ClearSETUP();
 484              	 .loc 2 101 0
 485 0056 FFF7FEFF 	 bl Endpoint_ClearSETUP
 102:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 103:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					while (!(Endpoint_IsINReady()));
 486              	 .loc 2 103 0
 487 005a 00BF     	 nop
 488              	.L35:
 489              	 .loc 2 103 0 is_stmt 0 discriminator 1
 490 005c FFF7FEFF 	 bl Endpoint_IsINReady
 491 0060 0346     	 mov r3,r0
 492 0062 83F00103 	 eor r3,r3,#1
 493 0066 DBB2     	 uxtb r3,r3
 494 0068 002B     	 cmp r3,#0
 495 006a F7D1     	 bne .L35
 104:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 105:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_Write_32_LE(CDCInterfaceInfo->State.LineEncoding.BaudRateBPS);
 496              	 .loc 2 105 0 is_stmt 1
 497 006c 7B68     	 ldr r3,[r7,#4]
 498 006e 5B69     	 ldr r3,[r3,#20]
 499 0070 1846     	 mov r0,r3
 500 0072 FFF7FEFF 	 bl Endpoint_Write_32_LE
 106:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.CharFormat);
 501              	 .loc 2 106 0
 502 0076 7B68     	 ldr r3,[r7,#4]
 503 0078 1B7E     	 ldrb r3,[r3,#24]
 504 007a 1846     	 mov r0,r3
 505 007c FFF7FEFF 	 bl Endpoint_Write_8
 107:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.ParityType);
 506              	 .loc 2 107 0
 507 0080 7B68     	 ldr r3,[r7,#4]
 508 0082 5B7E     	 ldrb r3,[r3,#25]
 509 0084 1846     	 mov r0,r3
 510 0086 FFF7FEFF 	 bl Endpoint_Write_8
 108:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.DataBits);
 511              	 .loc 2 108 0
 512 008a 7B68     	 ldr r3,[r7,#4]
 513 008c 9B7E     	 ldrb r3,[r3,#26]
 514 008e 1846     	 mov r0,r3
 515 0090 FFF7FEFF 	 bl Endpoint_Write_8
 109:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 110:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_ClearIN();
 516              	 .loc 2 110 0
 517 0094 FFF7FEFF 	 bl Endpoint_ClearIN
 111:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_ClearStatusStage();
 518              	 .loc 2 111 0
 519 0098 FFF7FEFF 	 bl Endpoint_ClearStatusStage
 112:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				}
 113:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 114:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				break;
 520              	 .loc 2 114 0
 521 009c 68E0     	 b .L27
 522              	.L34:
 523 009e 67E0     	 b .L27
 524              	.L29:
 115:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			case CDC_REQ_SetLineEncoding:
 116:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				if ((REQDIR_HOSTTODEVICE |REQTYPE_CLASS | REQREC_INTERFACE) == USB_ControlRequest.bmRequestType
 525              	 .loc 2 116 0
 526 00a0 354B     	 ldr r3,.L41
 527 00a2 1B78     	 ldrb r3,[r3]
 528 00a4 DBB2     	 uxtb r3,r3
 529 00a6 212B     	 cmp r3,#33
 530 00a8 32D1     	 bne .L36
 117:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				{
 118:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_ClearSETUP();
 531              	 .loc 2 118 0
 532 00aa FFF7FEFF 	 bl Endpoint_ClearSETUP
 119:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 120:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					while (!(Endpoint_IsOUTReceived()))
 533              	 .loc 2 120 0
 534 00ae 05E0     	 b .L37
 535              	.L38:
 121:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					{
 122:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 						if (USB_DeviceState == DEVICE_STATE_Unattached)
 536              	 .loc 2 122 0
 537 00b0 324B     	 ldr r3,.L41+4
 538 00b2 1B78     	 ldrb r3,[r3]
 539 00b4 DBB2     	 uxtb r3,r3
 540 00b6 002B     	 cmp r3,#0
 541 00b8 00D1     	 bne .L37
 123:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 						  return;
 542              	 .loc 2 123 0
 543 00ba 59E0     	 b .L27
 544              	.L37:
 120:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					{
 545              	 .loc 2 120 0
 546 00bc FFF7FEFF 	 bl Endpoint_IsOUTReceived
 547 00c0 0346     	 mov r3,r0
 548 00c2 83F00103 	 eor r3,r3,#1
 549 00c6 DBB2     	 uxtb r3,r3
 550 00c8 002B     	 cmp r3,#0
 551 00ca F1D1     	 bne .L38
 124:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					}
 125:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 126:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					CDCInterfaceInfo->State.LineEncoding.BaudRateBPS = Endpoint_Read_32_LE();
 552              	 .loc 2 126 0
 553 00cc FFF7FEFF 	 bl Endpoint_Read_32_LE
 554 00d0 0246     	 mov r2,r0
 555 00d2 7B68     	 ldr r3,[r7,#4]
 556 00d4 5A61     	 str r2,[r3,#20]
 127:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					CDCInterfaceInfo->State.LineEncoding.CharFormat  = Endpoint_Read_8();
 557              	 .loc 2 127 0
 558 00d6 FFF7FEFF 	 bl Endpoint_Read_8
 559 00da 0346     	 mov r3,r0
 560 00dc 1A46     	 mov r2,r3
 561 00de 7B68     	 ldr r3,[r7,#4]
 562 00e0 1A76     	 strb r2,[r3,#24]
 128:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					CDCInterfaceInfo->State.LineEncoding.ParityType  = Endpoint_Read_8();
 563              	 .loc 2 128 0
 564 00e2 FFF7FEFF 	 bl Endpoint_Read_8
 565 00e6 0346     	 mov r3,r0
 566 00e8 1A46     	 mov r2,r3
 567 00ea 7B68     	 ldr r3,[r7,#4]
 568 00ec 5A76     	 strb r2,[r3,#25]
 129:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					CDCInterfaceInfo->State.LineEncoding.DataBits    = Endpoint_Read_8();
 569              	 .loc 2 129 0
 570 00ee FFF7FEFF 	 bl Endpoint_Read_8
 571 00f2 0346     	 mov r3,r0
 572 00f4 1A46     	 mov r2,r3
 573 00f6 7B68     	 ldr r3,[r7,#4]
 574 00f8 9A76     	 strb r2,[r3,#26]
 130:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 131:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					//Endpoint_ClearOUT();
 132:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_ClearStatusStage();
 575              	 .loc 2 132 0
 576 00fa FFF7FEFF 	 bl Endpoint_ClearStatusStage
 133:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 134:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					if(0 != cdc_class_events.LineEncodingChanged)
 577              	 .loc 2 134 0
 578 00fe 204B     	 ldr r3,.L41+8
 579 0100 1B68     	 ldr r3,[r3]
 580 0102 002B     	 cmp r3,#0
 581 0104 04D0     	 beq .L36
 135:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					{
 136:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 						cdc_class_events.LineEncodingChanged(CDCInterfaceInfo);
 582              	 .loc 2 136 0
 583 0106 1E4B     	 ldr r3,.L41+8
 584 0108 1B68     	 ldr r3,[r3]
 585 010a 7868     	 ldr r0,[r7,#4]
 586 010c 9847     	 blx r3
 137:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					}
 138:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 139:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				}
 140:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 141:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				break;
 587              	 .loc 2 141 0
 588 010e 2FE0     	 b .L27
 589              	.L36:
 590 0110 2EE0     	 b .L27
 591              	.L32:
 142:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			case CDC_REQ_SetControlLineState:
 143:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				if ((REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE) == USB_ControlRequest.bmRequestTyp
 592              	 .loc 2 143 0
 593 0112 194B     	 ldr r3,.L41
 594 0114 1B78     	 ldrb r3,[r3]
 595 0116 DBB2     	 uxtb r3,r3
 596 0118 212B     	 cmp r3,#33
 597 011a 11D1     	 bne .L39
 144:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				{
 145:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_ClearSETUP();
 598              	 .loc 2 145 0
 599 011c FFF7FEFF 	 bl Endpoint_ClearSETUP
 146:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_ClearStatusStage();
 600              	 .loc 2 146 0
 601 0120 FFF7FEFF 	 bl Endpoint_ClearStatusStage
 147:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 148:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					CDCInterfaceInfo->State.ControlLineStates.HostToDevice = USB_ControlRequest.wValue;
 602              	 .loc 2 148 0
 603 0124 144B     	 ldr r3,.L41
 604 0126 5B88     	 ldrh r3,[r3,#2]
 605 0128 9AB2     	 uxth r2,r3
 606 012a 7B68     	 ldr r3,[r7,#4]
 607 012c 1A82     	 strh r2,[r3,#16]
 149:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 150:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					if(0 != cdc_class_events.ControLineStateChanged)
 608              	 .loc 2 150 0
 609 012e 144B     	 ldr r3,.L41+8
 610 0130 5B68     	 ldr r3,[r3,#4]
 611 0132 002B     	 cmp r3,#0
 612 0134 04D0     	 beq .L39
 151:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					{
 152:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 						cdc_class_events.ControLineStateChanged(CDCInterfaceInfo);
 613              	 .loc 2 152 0
 614 0136 124B     	 ldr r3,.L41+8
 615 0138 5B68     	 ldr r3,[r3,#4]
 616 013a 7868     	 ldr r0,[r7,#4]
 617 013c 9847     	 blx r3
 153:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					}
 154:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 155:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				}
 156:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 157:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				break;
 618              	 .loc 2 157 0
 619 013e 17E0     	 b .L27
 620              	.L39:
 621 0140 16E0     	 b .L27
 622              	.L33:
 158:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			case CDC_REQ_SendBreak:
 159:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				if ((REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE) == USB_ControlRequest.bmRequestTyp
 623              	 .loc 2 159 0
 624 0142 0D4B     	 ldr r3,.L41
 625 0144 1B78     	 ldrb r3,[r3]
 626 0146 DBB2     	 uxtb r3,r3
 627 0148 212B     	 cmp r3,#33
 628 014a 10D1     	 bne .L40
 160:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				{
 161:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_ClearSETUP();
 629              	 .loc 2 161 0
 630 014c FFF7FEFF 	 bl Endpoint_ClearSETUP
 162:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					Endpoint_ClearStatusStage();
 631              	 .loc 2 162 0
 632 0150 FFF7FEFF 	 bl Endpoint_ClearStatusStage
 163:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 164:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					if(0 != cdc_class_events.Device_BreakSent)
 633              	 .loc 2 164 0
 634 0154 0A4B     	 ldr r3,.L41+8
 635 0156 9B68     	 ldr r3,[r3,#8]
 636 0158 002B     	 cmp r3,#0
 637 015a 08D0     	 beq .L40
 165:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					{
 166:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 						cdc_class_events.Device_BreakSent(CDCInterfaceInfo,	(uint8_t)USB_ControlRequest.wValue);
 638              	 .loc 2 166 0
 639 015c 084B     	 ldr r3,.L41+8
 640 015e 9B68     	 ldr r3,[r3,#8]
 641 0160 054A     	 ldr r2,.L41
 642 0162 5288     	 ldrh r2,[r2,#2]
 643 0164 92B2     	 uxth r2,r2
 644 0166 D2B2     	 uxtb r2,r2
 645 0168 7868     	 ldr r0,[r7,#4]
 646 016a 1146     	 mov r1,r2
 647 016c 9847     	 blx r3
 648              	.L40:
 167:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 					}
 168:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 169:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				}
 170:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 171:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				break;
 649              	 .loc 2 171 0
 650 016e 00BF     	 nop
 651              	.L27:
 172:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		}
 173:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 174:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 652              	 .loc 2 174 0
 653 0170 0837     	 adds r7,r7,#8
 654              	.LCFI39:
 655              	 .cfi_def_cfa_offset 8
 656 0172 BD46     	 mov sp,r7
 657              	.LCFI40:
 658              	 .cfi_def_cfa_register 13
 659              	 
 660 0174 80BD     	 pop {r7,pc}
 661              	.L42:
 662 0176 00BF     	 .align 2
 663              	.L41:
 664 0178 00000000 	 .word USB_ControlRequest
 665 017c 00000000 	 .word USB_DeviceState
 666 0180 00000000 	 .word cdc_class_events
 667              	 .cfi_endproc
 668              	.LFE187:
 670              	 .section .text.CDC_Device_ConfigureEndpoints,"ax",%progbits
 671              	 .align 2
 672              	 .global CDC_Device_ConfigureEndpoints
 673              	 .thumb
 674              	 .thumb_func
 676              	CDC_Device_ConfigureEndpoints:
 677              	.LFB188:
 175:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 176:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 177:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 178:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 179:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** bool CDC_Device_ConfigureEndpoints(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 180:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 678              	 .loc 2 180 0
 679              	 .cfi_startproc
 680              	 
 681              	 
 682 0000 80B5     	 push {r7,lr}
 683              	.LCFI41:
 684              	 .cfi_def_cfa_offset 8
 685              	 .cfi_offset 7,-8
 686              	 .cfi_offset 14,-4
 687 0002 84B0     	 sub sp,sp,#16
 688              	.LCFI42:
 689              	 .cfi_def_cfa_offset 24
 690 0004 00AF     	 add r7,sp,#0
 691              	.LCFI43:
 692              	 .cfi_def_cfa_register 7
 693 0006 7860     	 str r0,[r7,#4]
 181:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	bool status = true;
 694              	 .loc 2 181 0
 695 0008 0123     	 movs r3,#1
 696 000a FB73     	 strb r3,[r7,#15]
 182:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	memset(&CDCInterfaceInfo->State, 0x00, sizeof(CDCInterfaceInfo->State));
 697              	 .loc 2 182 0
 698 000c 7B68     	 ldr r3,[r7,#4]
 699 000e 1033     	 adds r3,r3,#16
 700 0010 1846     	 mov r0,r3
 701 0012 0021     	 movs r1,#0
 702 0014 0B22     	 movs r2,#11
 703 0016 FFF7FEFF 	 bl memset
 183:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 184:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	CDCInterfaceInfo->Config.DataINEndpoint.Type       = EP_TYPE_BULK;
 704              	 .loc 2 184 0
 705 001a 7B68     	 ldr r3,[r7,#4]
 706 001c 0222     	 movs r2,#2
 707 001e DA70     	 strb r2,[r3,#3]
 185:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	CDCInterfaceInfo->Config.DataOUTEndpoint.Type      = EP_TYPE_BULK;
 708              	 .loc 2 185 0
 709 0020 7B68     	 ldr r3,[r7,#4]
 710 0022 0222     	 movs r2,#2
 711 0024 1A72     	 strb r2,[r3,#8]
 186:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	CDCInterfaceInfo->Config.NotificationEndpoint.Type = EP_TYPE_INTERRUPT;
 712              	 .loc 2 186 0
 713 0026 7B68     	 ldr r3,[r7,#4]
 714 0028 0322     	 movs r2,#3
 715 002a 5A73     	 strb r2,[r3,#13]
 187:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 188:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if (!(Endpoint_ConfigureEndpointTable(&CDCInterfaceInfo->Config.DataINEndpoint, 1)))
 716              	 .loc 2 188 0
 717 002c 7B68     	 ldr r3,[r7,#4]
 718 002e 1846     	 mov r0,r3
 719 0030 0121     	 movs r1,#1
 720 0032 FFF7FEFF 	 bl Endpoint_ConfigureEndpointTable
 721 0036 0346     	 mov r3,r0
 722 0038 83F00103 	 eor r3,r3,#1
 723 003c DBB2     	 uxtb r3,r3
 724 003e 002B     	 cmp r3,#0
 725 0040 01D0     	 beq .L44
 189:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 190:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = false;
 726              	 .loc 2 190 0
 727 0042 0023     	 movs r3,#0
 728 0044 FB73     	 strb r3,[r7,#15]
 729              	.L44:
 191:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 192:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 193:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if (!(Endpoint_ConfigureEndpointTable(
 194:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 							&CDCInterfaceInfo->Config.DataOUTEndpoint, 1)))
 730              	 .loc 2 194 0
 731 0046 7B68     	 ldr r3,[r7,#4]
 732 0048 0533     	 adds r3,r3,#5
 193:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 							&CDCInterfaceInfo->Config.DataOUTEndpoint, 1)))
 733              	 .loc 2 193 0
 734 004a 1846     	 mov r0,r3
 735 004c 0121     	 movs r1,#1
 736 004e FFF7FEFF 	 bl Endpoint_ConfigureEndpointTable
 737 0052 0346     	 mov r3,r0
 738 0054 83F00103 	 eor r3,r3,#1
 739 0058 DBB2     	 uxtb r3,r3
 740 005a 002B     	 cmp r3,#0
 741 005c 01D0     	 beq .L45
 195:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 196:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = false;
 742              	 .loc 2 196 0
 743 005e 0023     	 movs r3,#0
 744 0060 FB73     	 strb r3,[r7,#15]
 745              	.L45:
 197:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 198:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 199:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if (!(Endpoint_ConfigureEndpointTable(
 200:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 						&CDCInterfaceInfo->Config.NotificationEndpoint, 1)))
 746              	 .loc 2 200 0
 747 0062 7B68     	 ldr r3,[r7,#4]
 748 0064 0A33     	 adds r3,r3,#10
 199:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 						&CDCInterfaceInfo->Config.NotificationEndpoint, 1)))
 749              	 .loc 2 199 0
 750 0066 1846     	 mov r0,r3
 751 0068 0121     	 movs r1,#1
 752 006a FFF7FEFF 	 bl Endpoint_ConfigureEndpointTable
 753 006e 0346     	 mov r3,r0
 754 0070 83F00103 	 eor r3,r3,#1
 755 0074 DBB2     	 uxtb r3,r3
 756 0076 002B     	 cmp r3,#0
 757 0078 01D0     	 beq .L46
 201:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 202:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = false;
 758              	 .loc 2 202 0
 759 007a 0023     	 movs r3,#0
 760 007c FB73     	 strb r3,[r7,#15]
 761              	.L46:
 203:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 204:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 205:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	return status;
 762              	 .loc 2 205 0
 763 007e FB7B     	 ldrb r3,[r7,#15]
 206:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 764              	 .loc 2 206 0
 765 0080 1846     	 mov r0,r3
 766 0082 1037     	 adds r7,r7,#16
 767              	.LCFI44:
 768              	 .cfi_def_cfa_offset 8
 769 0084 BD46     	 mov sp,r7
 770              	.LCFI45:
 771              	 .cfi_def_cfa_register 13
 772              	 
 773 0086 80BD     	 pop {r7,pc}
 774              	 .cfi_endproc
 775              	.LFE188:
 777              	 .section .text.CDC_Device_USBTask,"ax",%progbits
 778              	 .align 2
 779              	 .global CDC_Device_USBTask
 780              	 .thumb
 781              	 .thumb_func
 783              	CDC_Device_USBTask:
 784              	.LFB189:
 207:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 208:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** void CDC_Device_USBTask(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 209:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 785              	 .loc 2 209 0
 786              	 .cfi_startproc
 787              	 
 788              	 
 789 0000 80B5     	 push {r7,lr}
 790              	.LCFI46:
 791              	 .cfi_def_cfa_offset 8
 792              	 .cfi_offset 7,-8
 793              	 .cfi_offset 14,-4
 794 0002 82B0     	 sub sp,sp,#8
 795              	.LCFI47:
 796              	 .cfi_def_cfa_offset 16
 797 0004 00AF     	 add r7,sp,#0
 798              	.LCFI48:
 799              	 .cfi_def_cfa_register 7
 800 0006 7860     	 str r0,[r7,#4]
 210:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((USB_DeviceState == DEVICE_STATE_Configured) &&	(CDCInterfaceInfo->State.LineEncoding.BaudRate
 801              	 .loc 2 210 0
 802 0008 0C4B     	 ldr r3,.L50
 803 000a 1B78     	 ldrb r3,[r3]
 804 000c DBB2     	 uxtb r3,r3
 805 000e 042B     	 cmp r3,#4
 806 0010 10D1     	 bne .L48
 807              	 .loc 2 210 0 is_stmt 0 discriminator 1
 808 0012 7B68     	 ldr r3,[r7,#4]
 809 0014 5B69     	 ldr r3,[r3,#20]
 810 0016 002B     	 cmp r3,#0
 811 0018 0CD0     	 beq .L48
 211:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 212:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		#if !defined(NO_CLASS_DRIVER_AUTOFLUSH)
 213:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataINEndpoint.Address);
 812              	 .loc 2 213 0 is_stmt 1
 813 001a 7B68     	 ldr r3,[r7,#4]
 814 001c 1B78     	 ldrb r3,[r3]
 815 001e 1846     	 mov r0,r3
 816 0020 FFF7FEFF 	 bl Endpoint_SelectEndpoint
 214:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 215:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		if (Endpoint_IsINReady())
 817              	 .loc 2 215 0
 818 0024 FFF7FEFF 	 bl Endpoint_IsINReady
 819 0028 0346     	 mov r3,r0
 820 002a 002B     	 cmp r3,#0
 821 002c 02D0     	 beq .L48
 216:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
 217:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		  CDC_Device_Flush(CDCInterfaceInfo);
 822              	 .loc 2 217 0
 823 002e 7868     	 ldr r0,[r7,#4]
 824 0030 FFF7FEFF 	 bl CDC_Device_Flush
 825              	.L48:
 218:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		}
 219:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		#endif
 220:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 221:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 826              	 .loc 2 221 0
 827 0034 0837     	 adds r7,r7,#8
 828              	.LCFI49:
 829              	 .cfi_def_cfa_offset 8
 830 0036 BD46     	 mov sp,r7
 831              	.LCFI50:
 832              	 .cfi_def_cfa_register 13
 833              	 
 834 0038 80BD     	 pop {r7,pc}
 835              	.L51:
 836 003a 00BF     	 .align 2
 837              	.L50:
 838 003c 00000000 	 .word USB_DeviceState
 839              	 .cfi_endproc
 840              	.LFE189:
 842              	 .section .text.CDC_Device_SendString,"ax",%progbits
 843              	 .align 2
 844              	 .global CDC_Device_SendString
 845              	 .thumb
 846              	 .thumb_func
 848              	CDC_Device_SendString:
 849              	.LFB190:
 222:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 223:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** uint8_t CDC_Device_SendString(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo, const char* const
 224:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 850              	 .loc 2 224 0
 851              	 .cfi_startproc
 852              	 
 853              	 
 854 0000 80B5     	 push {r7,lr}
 855              	.LCFI51:
 856              	 .cfi_def_cfa_offset 8
 857              	 .cfi_offset 7,-8
 858              	 .cfi_offset 14,-4
 859 0002 84B0     	 sub sp,sp,#16
 860              	.LCFI52:
 861              	 .cfi_def_cfa_offset 24
 862 0004 00AF     	 add r7,sp,#0
 863              	.LCFI53:
 864              	 .cfi_def_cfa_register 7
 865 0006 7860     	 str r0,[r7,#4]
 866 0008 3960     	 str r1,[r7]
 225:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	uint8_t status = 0;
 867              	 .loc 2 225 0
 868 000a 0023     	 movs r3,#0
 869 000c FB73     	 strb r3,[r7,#15]
 226:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((USB_DeviceState == DEVICE_STATE_Configured) &&	(CDCInterfaceInfo->State.LineEncoding.BaudRate
 870              	 .loc 2 226 0
 871 000e 114B     	 ldr r3,.L56
 872 0010 1B78     	 ldrb r3,[r3]
 873 0012 DBB2     	 uxtb r3,r3
 874 0014 042B     	 cmp r3,#4
 875 0016 15D1     	 bne .L53
 876              	 .loc 2 226 0 is_stmt 0 discriminator 1
 877 0018 7B68     	 ldr r3,[r7,#4]
 878 001a 5B69     	 ldr r3,[r3,#20]
 879 001c 002B     	 cmp r3,#0
 880 001e 11D0     	 beq .L53
 227:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 228:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 229:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataINEndpoint.Address);
 881              	 .loc 2 229 0 is_stmt 1
 882 0020 7B68     	 ldr r3,[r7,#4]
 883 0022 1B78     	 ldrb r3,[r3]
 884 0024 1846     	 mov r0,r3
 885 0026 FFF7FEFF 	 bl Endpoint_SelectEndpoint
 230:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = Endpoint_Write_Stream_LE(String, strlen(String), NULL);
 886              	 .loc 2 230 0
 887 002a 3868     	 ldr r0,[r7]
 888 002c FFF7FEFF 	 bl strlen
 889 0030 0346     	 mov r3,r0
 890 0032 9BB2     	 uxth r3,r3
 891 0034 3868     	 ldr r0,[r7]
 892 0036 1946     	 mov r1,r3
 893 0038 0022     	 movs r2,#0
 894 003a FFF7FEFF 	 bl Endpoint_Write_Stream_LE
 895 003e 0346     	 mov r3,r0
 896 0040 FB73     	 strb r3,[r7,#15]
 897 0042 01E0     	 b .L54
 898              	.L53:
 231:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 232:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	else
 233:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 234:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = ENDPOINT_RWSTREAM_DeviceDisconnected;
 899              	 .loc 2 234 0
 900 0044 0223     	 movs r3,#2
 901 0046 FB73     	 strb r3,[r7,#15]
 902              	.L54:
 235:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 236:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 237:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	return status;
 903              	 .loc 2 237 0
 904 0048 FB7B     	 ldrb r3,[r7,#15]
 238:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 905              	 .loc 2 238 0
 906 004a 1846     	 mov r0,r3
 907 004c 1037     	 adds r7,r7,#16
 908              	.LCFI54:
 909              	 .cfi_def_cfa_offset 8
 910 004e BD46     	 mov sp,r7
 911              	.LCFI55:
 912              	 .cfi_def_cfa_register 13
 913              	 
 914 0050 80BD     	 pop {r7,pc}
 915              	.L57:
 916 0052 00BF     	 .align 2
 917              	.L56:
 918 0054 00000000 	 .word USB_DeviceState
 919              	 .cfi_endproc
 920              	.LFE190:
 922              	 .section .text.CDC_Device_SendData,"ax",%progbits
 923              	 .align 2
 924              	 .global CDC_Device_SendData
 925              	 .thumb
 926              	 .thumb_func
 928              	CDC_Device_SendData:
 929              	.LFB191:
 239:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 240:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** uint8_t CDC_Device_SendData(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo,
 241:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****                             const void* const Buffer,
 242:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****                             const uint16_t Length)
 243:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 930              	 .loc 2 243 0
 931              	 .cfi_startproc
 932              	 
 933              	 
 934 0000 80B5     	 push {r7,lr}
 935              	.LCFI56:
 936              	 .cfi_def_cfa_offset 8
 937              	 .cfi_offset 7,-8
 938              	 .cfi_offset 14,-4
 939 0002 86B0     	 sub sp,sp,#24
 940              	.LCFI57:
 941              	 .cfi_def_cfa_offset 32
 942 0004 00AF     	 add r7,sp,#0
 943              	.LCFI58:
 944              	 .cfi_def_cfa_register 7
 945 0006 F860     	 str r0,[r7,#12]
 946 0008 B960     	 str r1,[r7,#8]
 947 000a 1346     	 mov r3,r2
 948 000c FB80     	 strh r3,[r7,#6]
 244:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	uint8_t status = 0;
 949              	 .loc 2 244 0
 950 000e 0023     	 movs r3,#0
 951 0010 FB75     	 strb r3,[r7,#23]
 245:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((USB_DeviceState == DEVICE_STATE_Configured) &&	(CDCInterfaceInfo->State.LineEncoding.BaudRate
 952              	 .loc 2 245 0
 953 0012 0F4B     	 ldr r3,.L62
 954 0014 1B78     	 ldrb r3,[r3]
 955 0016 DBB2     	 uxtb r3,r3
 956 0018 042B     	 cmp r3,#4
 957 001a 11D1     	 bne .L59
 958              	 .loc 2 245 0 is_stmt 0 discriminator 1
 959 001c FB68     	 ldr r3,[r7,#12]
 960 001e 5B69     	 ldr r3,[r3,#20]
 961 0020 002B     	 cmp r3,#0
 962 0022 0DD0     	 beq .L59
 246:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 247:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 248:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataINEndpoint.Address);
 963              	 .loc 2 248 0 is_stmt 1
 964 0024 FB68     	 ldr r3,[r7,#12]
 965 0026 1B78     	 ldrb r3,[r3]
 966 0028 1846     	 mov r0,r3
 967 002a FFF7FEFF 	 bl Endpoint_SelectEndpoint
 249:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = Endpoint_Write_Stream_LE(Buffer, Length, NULL);
 968              	 .loc 2 249 0
 969 002e FB88     	 ldrh r3,[r7,#6]
 970 0030 B868     	 ldr r0,[r7,#8]
 971 0032 1946     	 mov r1,r3
 972 0034 0022     	 movs r2,#0
 973 0036 FFF7FEFF 	 bl Endpoint_Write_Stream_LE
 974 003a 0346     	 mov r3,r0
 975 003c FB75     	 strb r3,[r7,#23]
 976 003e 01E0     	 b .L60
 977              	.L59:
 250:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 251:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	else
 252:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 253:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = ENDPOINT_RWSTREAM_DeviceDisconnected;
 978              	 .loc 2 253 0
 979 0040 0223     	 movs r3,#2
 980 0042 FB75     	 strb r3,[r7,#23]
 981              	.L60:
 254:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 255:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	return status;
 982              	 .loc 2 255 0
 983 0044 FB7D     	 ldrb r3,[r7,#23]
 256:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 984              	 .loc 2 256 0
 985 0046 1846     	 mov r0,r3
 986 0048 1837     	 adds r7,r7,#24
 987              	.LCFI59:
 988              	 .cfi_def_cfa_offset 8
 989 004a BD46     	 mov sp,r7
 990              	.LCFI60:
 991              	 .cfi_def_cfa_register 13
 992              	 
 993 004c 80BD     	 pop {r7,pc}
 994              	.L63:
 995 004e 00BF     	 .align 2
 996              	.L62:
 997 0050 00000000 	 .word USB_DeviceState
 998              	 .cfi_endproc
 999              	.LFE191:
 1001              	 .section .text.CDC_Device_SendByte,"ax",%progbits
 1002              	 .align 2
 1003              	 .global CDC_Device_SendByte
 1004              	 .thumb
 1005              	 .thumb_func
 1007              	CDC_Device_SendByte:
 1008              	.LFB192:
 257:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 258:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** uint8_t CDC_Device_SendByte(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo,
 259:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c ****                             const uint8_t Data)
 260:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 1009              	 .loc 2 260 0
 1010              	 .cfi_startproc
 1011              	 
 1012              	 
 1013 0000 80B5     	 push {r7,lr}
 1014              	.LCFI61:
 1015              	 .cfi_def_cfa_offset 8
 1016              	 .cfi_offset 7,-8
 1017              	 .cfi_offset 14,-4
 1018 0002 84B0     	 sub sp,sp,#16
 1019              	.LCFI62:
 1020              	 .cfi_def_cfa_offset 24
 1021 0004 00AF     	 add r7,sp,#0
 1022              	.LCFI63:
 1023              	 .cfi_def_cfa_register 7
 1024 0006 7860     	 str r0,[r7,#4]
 1025 0008 0B46     	 mov r3,r1
 1026 000a FB70     	 strb r3,[r7,#3]
 261:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	uint8_t status = 0;
 1027              	 .loc 2 261 0
 1028 000c 0023     	 movs r3,#0
 1029 000e FB73     	 strb r3,[r7,#15]
 262:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((USB_DeviceState == DEVICE_STATE_Configured) &&	(CDCInterfaceInfo->State.LineEncoding.BaudRate
 1030              	 .loc 2 262 0
 1031 0010 134B     	 ldr r3,.L70
 1032 0012 1B78     	 ldrb r3,[r3]
 1033 0014 DBB2     	 uxtb r3,r3
 1034 0016 042B     	 cmp r3,#4
 1035 0018 1BD1     	 bne .L65
 1036              	 .loc 2 262 0 is_stmt 0 discriminator 1
 1037 001a 7B68     	 ldr r3,[r7,#4]
 1038 001c 5B69     	 ldr r3,[r3,#20]
 1039 001e 002B     	 cmp r3,#0
 1040 0020 17D0     	 beq .L65
 263:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 264:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 265:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataINEndpoint.Address);
 1041              	 .loc 2 265 0 is_stmt 1
 1042 0022 7B68     	 ldr r3,[r7,#4]
 1043 0024 1B78     	 ldrb r3,[r3]
 1044 0026 1846     	 mov r0,r3
 1045 0028 FFF7FEFF 	 bl Endpoint_SelectEndpoint
 266:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 267:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		if (Endpoint_IsReadWriteAllowed())
 1046              	 .loc 2 267 0
 1047 002c FFF7FEFF 	 bl Endpoint_IsReadWriteAllowed
 1048 0030 0346     	 mov r3,r0
 1049 0032 002B     	 cmp r3,#0
 1050 0034 06D0     	 beq .L66
 268:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
 269:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			Endpoint_Write_8(Data);
 1051              	 .loc 2 269 0
 1052 0036 FB78     	 ldrb r3,[r7,#3]
 1053 0038 1846     	 mov r0,r3
 1054 003a FFF7FEFF 	 bl Endpoint_Write_8
 270:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			status = ENDPOINT_READYWAIT_NoError;
 1055              	 .loc 2 270 0
 1056 003e 0023     	 movs r3,#0
 1057 0040 FB73     	 strb r3,[r7,#15]
 267:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
 1058              	 .loc 2 267 0
 1059 0042 08E0     	 b .L68
 1060              	.L66:
 271:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		}
 272:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		else
 273:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
 274:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			Endpoint_ClearIN();
 1061              	 .loc 2 274 0
 1062 0044 FFF7FEFF 	 bl Endpoint_ClearIN
 275:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			status = Endpoint_WaitUntilReady();
 1063              	 .loc 2 275 0
 1064 0048 FFF7FEFF 	 bl Endpoint_WaitUntilReady
 1065 004c 0346     	 mov r3,r0
 1066 004e FB73     	 strb r3,[r7,#15]
 267:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
 1067              	 .loc 2 267 0
 1068 0050 01E0     	 b .L68
 1069              	.L65:
 276:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		}
 277:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 278:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	else
 279:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 280:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = ENDPOINT_RWSTREAM_DeviceDisconnected;
 1070              	 .loc 2 280 0
 1071 0052 0223     	 movs r3,#2
 1072 0054 FB73     	 strb r3,[r7,#15]
 1073              	.L68:
 281:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 282:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 283:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	return status;
 1074              	 .loc 2 283 0
 1075 0056 FB7B     	 ldrb r3,[r7,#15]
 284:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 285:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 1076              	 .loc 2 285 0
 1077 0058 1846     	 mov r0,r3
 1078 005a 1037     	 adds r7,r7,#16
 1079              	.LCFI64:
 1080              	 .cfi_def_cfa_offset 8
 1081 005c BD46     	 mov sp,r7
 1082              	.LCFI65:
 1083              	 .cfi_def_cfa_register 13
 1084              	 
 1085 005e 80BD     	 pop {r7,pc}
 1086              	.L71:
 1087              	 .align 2
 1088              	.L70:
 1089 0060 00000000 	 .word USB_DeviceState
 1090              	 .cfi_endproc
 1091              	.LFE192:
 1093              	 .section .text.CDC_Device_Flush,"ax",%progbits
 1094              	 .align 2
 1095              	 .global CDC_Device_Flush
 1096              	 .thumb
 1097              	 .thumb_func
 1099              	CDC_Device_Flush:
 1100              	.LFB193:
 286:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 287:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** uint8_t CDC_Device_Flush(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 288:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 1101              	 .loc 2 288 0
 1102              	 .cfi_startproc
 1103              	 
 1104              	 
 1105 0000 80B5     	 push {r7,lr}
 1106              	.LCFI66:
 1107              	 .cfi_def_cfa_offset 8
 1108              	 .cfi_offset 7,-8
 1109              	 .cfi_offset 14,-4
 1110 0002 84B0     	 sub sp,sp,#16
 1111              	.LCFI67:
 1112              	 .cfi_def_cfa_offset 24
 1113 0004 00AF     	 add r7,sp,#0
 1114              	.LCFI68:
 1115              	 .cfi_def_cfa_register 7
 1116 0006 7860     	 str r0,[r7,#4]
 289:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	uint8_t status = 0;
 1117              	 .loc 2 289 0
 1118 0008 0023     	 movs r3,#0
 1119 000a FB73     	 strb r3,[r7,#15]
 290:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((USB_DeviceState == DEVICE_STATE_Configured) &&	(CDCInterfaceInfo->State.LineEncoding.BaudRate
 1120              	 .loc 2 290 0
 1121 000c 0F4B     	 ldr r3,.L77
 1122 000e 1B78     	 ldrb r3,[r3]
 1123 0010 DBB2     	 uxtb r3,r3
 1124 0012 042B     	 cmp r3,#4
 1125 0014 12D1     	 bne .L73
 1126              	 .loc 2 290 0 is_stmt 0 discriminator 1
 1127 0016 7B68     	 ldr r3,[r7,#4]
 1128 0018 5B69     	 ldr r3,[r3,#20]
 1129 001a 002B     	 cmp r3,#0
 1130 001c 0ED0     	 beq .L73
 291:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 292:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataINEndpoint.Address);
 1131              	 .loc 2 292 0 is_stmt 1
 1132 001e 7B68     	 ldr r3,[r7,#4]
 1133 0020 1B78     	 ldrb r3,[r3]
 1134 0022 1846     	 mov r0,r3
 1135 0024 FFF7FEFF 	 bl Endpoint_SelectEndpoint
 293:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 294:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		if (Endpoint_BytesInEndpoint())
 1136              	 .loc 2 294 0
 1137 0028 FFF7FEFF 	 bl Endpoint_BytesInEndpoint
 1138 002c 0346     	 mov r3,r0
 1139 002e 002B     	 cmp r3,#0
 1140 0030 01D0     	 beq .L74
 295:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
 296:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			Endpoint_ClearIN();
 1141              	 .loc 2 296 0
 1142 0032 FFF7FEFF 	 bl Endpoint_ClearIN
 1143              	.L74:
 297:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		}
 298:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 299:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = ENDPOINT_READYWAIT_NoError;
 1144              	 .loc 2 299 0
 1145 0036 0023     	 movs r3,#0
 1146 0038 FB73     	 strb r3,[r7,#15]
 1147 003a 01E0     	 b .L75
 1148              	.L73:
 300:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 301:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	else
 302:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 303:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		status = ENDPOINT_RWSTREAM_DeviceDisconnected;
 1149              	 .loc 2 303 0
 1150 003c 0223     	 movs r3,#2
 1151 003e FB73     	 strb r3,[r7,#15]
 1152              	.L75:
 304:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 305:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 306:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	return status;
 1153              	 .loc 2 306 0
 1154 0040 FB7B     	 ldrb r3,[r7,#15]
 307:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 1155              	 .loc 2 307 0
 1156 0042 1846     	 mov r0,r3
 1157 0044 1037     	 adds r7,r7,#16
 1158              	.LCFI69:
 1159              	 .cfi_def_cfa_offset 8
 1160 0046 BD46     	 mov sp,r7
 1161              	.LCFI70:
 1162              	 .cfi_def_cfa_register 13
 1163              	 
 1164 0048 80BD     	 pop {r7,pc}
 1165              	.L78:
 1166 004a 00BF     	 .align 2
 1167              	.L77:
 1168 004c 00000000 	 .word USB_DeviceState
 1169              	 .cfi_endproc
 1170              	.LFE193:
 1172              	 .section .text.CDC_Device_BytesReceived,"ax",%progbits
 1173              	 .align 2
 1174              	 .global CDC_Device_BytesReceived
 1175              	 .thumb
 1176              	 .thumb_func
 1178              	CDC_Device_BytesReceived:
 1179              	.LFB194:
 308:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 309:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** uint16_t CDC_Device_BytesReceived(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 310:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 1180              	 .loc 2 310 0
 1181              	 .cfi_startproc
 1182              	 
 1183              	 
 1184 0000 80B5     	 push {r7,lr}
 1185              	.LCFI71:
 1186              	 .cfi_def_cfa_offset 8
 1187              	 .cfi_offset 7,-8
 1188              	 .cfi_offset 14,-4
 1189 0002 84B0     	 sub sp,sp,#16
 1190              	.LCFI72:
 1191              	 .cfi_def_cfa_offset 24
 1192 0004 00AF     	 add r7,sp,#0
 1193              	.LCFI73:
 1194              	 .cfi_def_cfa_register 7
 1195 0006 7860     	 str r0,[r7,#4]
 311:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	uint16_t bytes = 0;
 1196              	 .loc 2 311 0
 1197 0008 0023     	 movs r3,#0
 1198 000a FB81     	 strh r3,[r7,#14]
 312:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((USB_DeviceState == DEVICE_STATE_Configured) &&	(CDCInterfaceInfo->State.LineEncoding.BaudRate
 1199              	 .loc 2 312 0
 1200 000c 144B     	 ldr r3,.L85
 1201 000e 1B78     	 ldrb r3,[r3]
 1202 0010 DBB2     	 uxtb r3,r3
 1203 0012 042B     	 cmp r3,#4
 1204 0014 1ED1     	 bne .L80
 1205              	 .loc 2 312 0 is_stmt 0 discriminator 1
 1206 0016 7B68     	 ldr r3,[r7,#4]
 1207 0018 5B69     	 ldr r3,[r3,#20]
 1208 001a 002B     	 cmp r3,#0
 1209 001c 1AD0     	 beq .L80
 313:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 314:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 315:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataOUTEndpoint.Address);
 1210              	 .loc 2 315 0 is_stmt 1
 1211 001e 7B68     	 ldr r3,[r7,#4]
 1212 0020 5B79     	 ldrb r3,[r3,#5]
 1213 0022 1846     	 mov r0,r3
 1214 0024 FFF7FEFF 	 bl Endpoint_SelectEndpoint
 316:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 317:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		if (Endpoint_IsOUTReceived())
 1215              	 .loc 2 317 0
 1216 0028 FFF7FEFF 	 bl Endpoint_IsOUTReceived
 1217 002c 0346     	 mov r3,r0
 1218 002e 002B     	 cmp r3,#0
 1219 0030 0ED0     	 beq .L81
 318:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
 319:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			if (!(Endpoint_BytesInEndpoint()))
 1220              	 .loc 2 319 0
 1221 0032 FFF7FEFF 	 bl Endpoint_BytesInEndpoint
 1222 0036 0346     	 mov r3,r0
 1223 0038 002B     	 cmp r3,#0
 1224 003a 04D1     	 bne .L82
 320:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			{
 321:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				Endpoint_ClearOUT();
 1225              	 .loc 2 321 0
 1226 003c FFF7FEFF 	 bl Endpoint_ClearOUT
 322:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				bytes = 0;
 1227              	 .loc 2 322 0
 1228 0040 0023     	 movs r3,#0
 1229 0042 FB81     	 strh r3,[r7,#14]
 1230 0044 06E0     	 b .L80
 1231              	.L82:
 323:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			}
 324:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			else
 325:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			{
 326:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				bytes = Endpoint_BytesInEndpoint();
 1232              	 .loc 2 326 0
 1233 0046 FFF7FEFF 	 bl Endpoint_BytesInEndpoint
 1234 004a 0346     	 mov r3,r0
 1235 004c FB81     	 strh r3,[r7,#14]
 1236 004e 01E0     	 b .L80
 1237              	.L81:
 327:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			}
 328:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		}
 329:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		else
 330:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
 331:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			bytes = 0;
 1238              	 .loc 2 331 0
 1239 0050 0023     	 movs r3,#0
 1240 0052 FB81     	 strh r3,[r7,#14]
 1241              	.L80:
 332:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		}
 333:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 334:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 335:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	return bytes;
 1242              	 .loc 2 335 0
 1243 0054 FB89     	 ldrh r3,[r7,#14]
 336:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 1244              	 .loc 2 336 0
 1245 0056 1846     	 mov r0,r3
 1246 0058 1037     	 adds r7,r7,#16
 1247              	.LCFI74:
 1248              	 .cfi_def_cfa_offset 8
 1249 005a BD46     	 mov sp,r7
 1250              	.LCFI75:
 1251              	 .cfi_def_cfa_register 13
 1252              	 
 1253 005c 80BD     	 pop {r7,pc}
 1254              	.L86:
 1255 005e 00BF     	 .align 2
 1256              	.L85:
 1257 0060 00000000 	 .word USB_DeviceState
 1258              	 .cfi_endproc
 1259              	.LFE194:
 1261              	 .section .text.CDC_Device_ReceiveByte,"ax",%progbits
 1262              	 .align 2
 1263              	 .global CDC_Device_ReceiveByte
 1264              	 .thumb
 1265              	 .thumb_func
 1267              	CDC_Device_ReceiveByte:
 1268              	.LFB195:
 337:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 338:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** int16_t CDC_Device_ReceiveByte(
 339:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 						USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 340:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 1269              	 .loc 2 340 0
 1270              	 .cfi_startproc
 1271              	 
 1272              	 
 1273 0000 80B5     	 push {r7,lr}
 1274              	.LCFI76:
 1275              	 .cfi_def_cfa_offset 8
 1276              	 .cfi_offset 7,-8
 1277              	 .cfi_offset 14,-4
 1278 0002 84B0     	 sub sp,sp,#16
 1279              	.LCFI77:
 1280              	 .cfi_def_cfa_offset 24
 1281 0004 00AF     	 add r7,sp,#0
 1282              	.LCFI78:
 1283              	 .cfi_def_cfa_register 7
 1284 0006 7860     	 str r0,[r7,#4]
 341:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	int16_t Rx_bytes = -1;
 1285              	 .loc 2 341 0
 1286 0008 4FF6FF73 	 movw r3,#65535
 1287 000c FB81     	 strh r3,[r7,#14]
 342:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((USB_DeviceState == DEVICE_STATE_Configured) &&	(CDCInterfaceInfo->State.LineEncoding.BaudRate
 1288              	 .loc 2 342 0
 1289 000e 124B     	 ldr r3,.L91
 1290 0010 1B78     	 ldrb r3,[r3]
 1291 0012 DBB2     	 uxtb r3,r3
 1292 0014 042B     	 cmp r3,#4
 1293 0016 19D1     	 bne .L88
 1294              	 .loc 2 342 0 is_stmt 0 discriminator 1
 1295 0018 7B68     	 ldr r3,[r7,#4]
 1296 001a 5B69     	 ldr r3,[r3,#20]
 1297 001c 002B     	 cmp r3,#0
 1298 001e 15D0     	 beq .L88
 343:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 344:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.DataOUTEndpoint.Address);
 1299              	 .loc 2 344 0 is_stmt 1
 1300 0020 7B68     	 ldr r3,[r7,#4]
 1301 0022 5B79     	 ldrb r3,[r3,#5]
 1302 0024 1846     	 mov r0,r3
 1303 0026 FFF7FEFF 	 bl Endpoint_SelectEndpoint
 345:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 346:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		if (Endpoint_IsOUTReceived())
 1304              	 .loc 2 346 0
 1305 002a FFF7FEFF 	 bl Endpoint_IsOUTReceived
 1306 002e 0346     	 mov r3,r0
 1307 0030 002B     	 cmp r3,#0
 1308 0032 0BD0     	 beq .L88
 347:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		{
 348:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			if (Endpoint_BytesInEndpoint())
 1309              	 .loc 2 348 0
 1310 0034 FFF7FEFF 	 bl Endpoint_BytesInEndpoint
 1311 0038 0346     	 mov r3,r0
 1312 003a 002B     	 cmp r3,#0
 1313 003c 04D0     	 beq .L89
 349:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			{
 350:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				Rx_bytes = Endpoint_Read_8();
 1314              	 .loc 2 350 0
 1315 003e FFF7FEFF 	 bl Endpoint_Read_8
 1316 0042 0346     	 mov r3,r0
 1317 0044 FB81     	 strh r3,[r7,#14]
 1318 0046 01E0     	 b .L88
 1319              	.L89:
 351:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			}
 352:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			else
 353:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			{
 354:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				Endpoint_ClearOUT();
 1320              	 .loc 2 354 0
 1321 0048 FFF7FEFF 	 bl Endpoint_ClearOUT
 1322              	.L88:
 355:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			}
 356:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 357:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		}
 358:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 359:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 360:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	return Rx_bytes;
 1323              	 .loc 2 360 0
 1324 004c FB89     	 ldrh r3,[r7,#14]
 1325 004e 1BB2     	 sxth r3,r3
 361:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 1326              	 .loc 2 361 0
 1327 0050 1846     	 mov r0,r3
 1328 0052 1037     	 adds r7,r7,#16
 1329              	.LCFI79:
 1330              	 .cfi_def_cfa_offset 8
 1331 0054 BD46     	 mov sp,r7
 1332              	.LCFI80:
 1333              	 .cfi_def_cfa_register 13
 1334              	 
 1335 0056 80BD     	 pop {r7,pc}
 1336              	.L92:
 1337              	 .align 2
 1338              	.L91:
 1339 0058 00000000 	 .word USB_DeviceState
 1340              	 .cfi_endproc
 1341              	.LFE195:
 1343              	 .section .rodata
 1344              	 .align 2
 1345              	.LC0:
 1346 0000 A1       	 .byte -95
 1347 0001 20       	 .byte 32
 1348 0002 0000     	 .short 0
 1349 0004 0000     	 .short 0
 1350 0006 0200     	 .short 2
 1351              	 .section .text.CDC_Device_SendControlLineStateChange,"ax",%progbits
 1352              	 .align 2
 1353              	 .global CDC_Device_SendControlLineStateChange
 1354              	 .thumb
 1355              	 .thumb_func
 1357              	CDC_Device_SendControlLineStateChange:
 1358              	.LFB196:
 362:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 363:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** void CDC_Device_SendControlLineStateChange(
 364:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 						USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
 365:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** {
 1359              	 .loc 2 365 0
 1360              	 .cfi_startproc
 1361              	 
 1362              	 
 1363 0000 80B5     	 push {r7,lr}
 1364              	.LCFI81:
 1365              	 .cfi_def_cfa_offset 8
 1366              	 .cfi_offset 7,-8
 1367              	 .cfi_offset 14,-4
 1368 0002 84B0     	 sub sp,sp,#16
 1369              	.LCFI82:
 1370              	 .cfi_def_cfa_offset 24
 1371 0004 00AF     	 add r7,sp,#0
 1372              	.LCFI83:
 1373              	 .cfi_def_cfa_register 7
 1374 0006 7860     	 str r0,[r7,#4]
 366:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	if ((USB_DeviceState == DEVICE_STATE_Configured) &&	(CDCInterfaceInfo->State.LineEncoding.BaudRate
 1375              	 .loc 2 366 0
 1376 0008 134B     	 ldr r3,.L95
 1377 000a 1B78     	 ldrb r3,[r3]
 1378 000c DBB2     	 uxtb r3,r3
 1379 000e 042B     	 cmp r3,#4
 1380 0010 1ED1     	 bne .L93
 1381              	 .loc 2 366 0 is_stmt 0 discriminator 1
 1382 0012 7B68     	 ldr r3,[r7,#4]
 1383 0014 5B69     	 ldr r3,[r3,#20]
 1384 0016 002B     	 cmp r3,#0
 1385 0018 1AD0     	 beq .L93
 1386              	.LBB2:
 367:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	{
 368:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 369:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_SelectEndpoint(CDCInterfaceInfo->Config.NotificationEndpoint.Address);
 1387              	 .loc 2 369 0 is_stmt 1
 1388 001a 7B68     	 ldr r3,[r7,#4]
 1389 001c 9B7A     	 ldrb r3,[r3,#10]
 1390 001e 1846     	 mov r0,r3
 1391 0020 FFF7FEFF 	 bl Endpoint_SelectEndpoint
 370:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 371:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 1392              	 .loc 2 371 0
 1393 0024 0D4A     	 ldr r2,.L95+4
 1394 0026 07F10803 	 add r3,r7,#8
 1395 002a 1068     	 ldr r0,[r2]
 1396 002c 5168     	 ldr r1,[r2,#4]
 1397 002e 03C3     	 stmia r3!,{r0,r1}
 372:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			{
 373:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_CLASS |	REQREC_INTERFACE),
 374:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				.bRequest      = CDC_NOTIF_SerialState,
 375:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				.wValue        = 0,
 376:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				.wIndex        = 0,
 377:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				.wLength       = sizeof(CDCInterfaceInfo->State.ControlLineStates.DeviceToHost),
 378:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 			};
 379:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 
 380:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(USB_Request_Header_t), NULL);
 1398              	 .loc 2 380 0
 1399 0030 07F10803 	 add r3,r7,#8
 1400 0034 1846     	 mov r0,r3
 1401 0036 0821     	 movs r1,#8
 1402 0038 0022     	 movs r2,#0
 1403 003a FFF7FEFF 	 bl Endpoint_Write_Stream_LE
 381:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_Write_Stream_LE(&CDCInterfaceInfo->State.ControlLineStates.DeviceToHost,
 1404              	 .loc 2 381 0
 1405 003e 7B68     	 ldr r3,[r7,#4]
 1406 0040 1233     	 adds r3,r3,#18
 1407 0042 1846     	 mov r0,r3
 1408 0044 0221     	 movs r1,#2
 1409 0046 0022     	 movs r2,#0
 1410 0048 FFF7FEFF 	 bl Endpoint_Write_Stream_LE
 382:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 				sizeof(CDCInterfaceInfo->State.ControlLineStates.DeviceToHost), NULL);
 383:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 		Endpoint_ClearIN();
 1411              	 .loc 2 383 0
 1412 004c FFF7FEFF 	 bl Endpoint_ClearIN
 1413              	.L93:
 1414              	.LBE2:
 384:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** 	}
 385:../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.c **** }
 1415              	 .loc 2 385 0
 1416 0050 1037     	 adds r7,r7,#16
 1417              	.LCFI84:
 1418              	 .cfi_def_cfa_offset 8
 1419 0052 BD46     	 mov sp,r7
 1420              	.LCFI85:
 1421              	 .cfi_def_cfa_register 13
 1422              	 
 1423 0054 80BD     	 pop {r7,pc}
 1424              	.L96:
 1425 0056 00BF     	 .align 2
 1426              	.L95:
 1427 0058 00000000 	 .word USB_DeviceState
 1428 005c 00000000 	 .word .LC0
 1429              	 .cfi_endproc
 1430              	.LFE196:
 1432              	 .text
 1433              	.Letext0:
 1434              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1435              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1436              	 .file 5 "d:\\xmc\\projekte\\temp\\cf_xmc4700\\cleanflight\\lib\\main\\xmc4000\\usbd\\usb\\core\\endpoint.h"
 1437              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 1438              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usbd_regs.h"
 1439              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usbd.h"
 1440              	 .file 9 "d:\\xmc\\projekte\\temp\\cf_xmc4700\\cleanflight\\lib\\main\\xmc4000\\usbd\\usbd.h"
 1441              	 .file 10 "d:\\xmc\\projekte\\temp\\cf_xmc4700\\cleanflight\\lib\\main\\xmc4000\\usbd\\usb\\core\\endpoint_stream.h"
 1442              	 .file 11 "d:\\xmc\\projekte\\temp\\cf_xmc4700\\cleanflight\\lib\\main\\xmc4000\\usbd\\usb\\core\\std_request_type.h"
 1443              	 .file 12 "d:\\xmc\\projekte\\temp\\cf_xmc4700\\cleanflight\\lib\\main\\xmc4000\\usbd\\usb\\core\\device.h"
 1444              	 .file 13 "../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/../common/cdc_class_common.h"
 1445              	 .file 14 "../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/cdc_class_device.h"
 1446              	 .file 15 "../cleanflight/lib/main/XMC4000/USBD_VCOM/class_driver/device/../../usbd_vcom.h"
 1447              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 1448              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
 1449              	 .file 18 "d:\\xmc\\projekte\\temp\\cf_xmc4700\\cleanflight\\lib\\main\\xmc4000\\usbd\\usbd_extern.h"
 1450              	 .file 19 "d:\\xmc\\projekte\\temp\\cf_xmc4700\\cleanflight\\lib\\main\\xmc4000\\usbd\\usb\\core\\usb_task.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cdc_class_device.c
    {standard input}:20     .text.Endpoint_SelectEndpoint:00000000 $t
    {standard input}:24     .text.Endpoint_SelectEndpoint:00000000 Endpoint_SelectEndpoint
    {standard input}:72     .text.Endpoint_SelectEndpoint:00000030 $d
    {standard input}:77     .text.Endpoint_IsSETUPReceived:00000000 $t
    {standard input}:81     .text.Endpoint_IsSETUPReceived:00000000 Endpoint_IsSETUPReceived
    {standard input}:121    .text.Endpoint_IsSETUPReceived:00000028 $d
    {standard input}:126    .text.Endpoint_ClearSETUP:00000000 $t
    {standard input}:130    .text.Endpoint_ClearSETUP:00000000 Endpoint_ClearSETUP
    {standard input}:162    .text.Endpoint_ClearSETUP:0000001c $d
    {standard input}:167    .text.Endpoint_ClearStatusStage:00000000 $t
    {standard input}:171    .text.Endpoint_ClearStatusStage:00000000 Endpoint_ClearStatusStage
    {standard input}:199    .text.Endpoint_IsINReady:00000000 $t
    {standard input}:203    .text.Endpoint_IsINReady:00000000 Endpoint_IsINReady
    {standard input}:275    .text.Endpoint_IsINReady:00000058 $d
    {standard input}:280    .text.Endpoint_IsOUTReceived:00000000 $t
    {standard input}:284    .text.Endpoint_IsOUTReceived:00000000 Endpoint_IsOUTReceived
    {standard input}:342    .text.Endpoint_IsOUTReceived:00000044 $d
    {standard input}:347    .text.Endpoint_BytesInEndpoint:00000000 $t
    {standard input}:351    .text.Endpoint_BytesInEndpoint:00000000 Endpoint_BytesInEndpoint
    {standard input}:416    .text.Endpoint_BytesInEndpoint:0000004c $d
    {standard input}:421    .text.CDC_Device_ProcessControlRequest:00000000 $t
    {standard input}:426    .text.CDC_Device_ProcessControlRequest:00000000 CDC_Device_ProcessControlRequest
    {standard input}:472    .text.CDC_Device_ProcessControlRequest:0000003c $d
    {standard input}:476    .text.CDC_Device_ProcessControlRequest:0000004c $t
    {standard input}:664    .text.CDC_Device_ProcessControlRequest:00000178 $d
    {standard input}:671    .text.CDC_Device_ConfigureEndpoints:00000000 $t
    {standard input}:676    .text.CDC_Device_ConfigureEndpoints:00000000 CDC_Device_ConfigureEndpoints
    {standard input}:778    .text.CDC_Device_USBTask:00000000 $t
    {standard input}:783    .text.CDC_Device_USBTask:00000000 CDC_Device_USBTask
    {standard input}:1099   .text.CDC_Device_Flush:00000000 CDC_Device_Flush
    {standard input}:838    .text.CDC_Device_USBTask:0000003c $d
    {standard input}:843    .text.CDC_Device_SendString:00000000 $t
    {standard input}:848    .text.CDC_Device_SendString:00000000 CDC_Device_SendString
    {standard input}:918    .text.CDC_Device_SendString:00000054 $d
    {standard input}:923    .text.CDC_Device_SendData:00000000 $t
    {standard input}:928    .text.CDC_Device_SendData:00000000 CDC_Device_SendData
    {standard input}:997    .text.CDC_Device_SendData:00000050 $d
    {standard input}:1002   .text.CDC_Device_SendByte:00000000 $t
    {standard input}:1007   .text.CDC_Device_SendByte:00000000 CDC_Device_SendByte
    {standard input}:1089   .text.CDC_Device_SendByte:00000060 $d
    {standard input}:1094   .text.CDC_Device_Flush:00000000 $t
    {standard input}:1168   .text.CDC_Device_Flush:0000004c $d
    {standard input}:1173   .text.CDC_Device_BytesReceived:00000000 $t
    {standard input}:1178   .text.CDC_Device_BytesReceived:00000000 CDC_Device_BytesReceived
    {standard input}:1257   .text.CDC_Device_BytesReceived:00000060 $d
    {standard input}:1262   .text.CDC_Device_ReceiveByte:00000000 $t
    {standard input}:1267   .text.CDC_Device_ReceiveByte:00000000 CDC_Device_ReceiveByte
    {standard input}:1339   .text.CDC_Device_ReceiveByte:00000058 $d
    {standard input}:1344   .rodata:00000000 $d
    {standard input}:1352   .text.CDC_Device_SendControlLineStateChange:00000000 $t
    {standard input}:1357   .text.CDC_Device_SendControlLineStateChange:00000000 CDC_Device_SendControlLineStateChange
    {standard input}:1427   .text.CDC_Device_SendControlLineStateChange:00000058 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
device
Endpoint_Write_32_LE
Endpoint_Write_8
Endpoint_ClearIN
Endpoint_Read_32_LE
Endpoint_Read_8
USB_ControlRequest
USB_DeviceState
cdc_class_events
memset
Endpoint_ConfigureEndpointTable
strlen
Endpoint_Write_Stream_LE
Endpoint_IsReadWriteAllowed
Endpoint_WaitUntilReady
Endpoint_ClearOUT
