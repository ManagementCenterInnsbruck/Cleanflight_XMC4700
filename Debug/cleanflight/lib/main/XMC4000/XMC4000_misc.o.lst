   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "XMC4000_misc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.NVIC_PriorityGroupConfig,"ax",%progbits
  20              	 .align 2
  21              	 .global NVIC_PriorityGroupConfig
  22              	 .thumb
  23              	 .thumb_func
  25              	NVIC_PriorityGroupConfig:
  26              	.LFB519:
  27              	 .file 1 "../cleanflight/lib/main/XMC4000/XMC4000_misc.c"
   1:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* Includes ------------------------------------------------------------------*/
   2:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** #include <XMC4000_misc.h>
   3:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
   4:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /** @addtogroup STM32F30x_StdPeriph_Driver
   5:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @{
   6:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   */
   7:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
   8:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /** @defgroup MISC 
   9:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @brief MISC driver modules
  10:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @{
  11:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   */
  12:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
  13:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* Private typedef -----------------------------------------------------------*/
  14:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* Private define ------------------------------------------------------------*/
  15:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  16:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
  17:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* Private macro -------------------------------------------------------------*/
  18:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* Private variables ---------------------------------------------------------*/
  19:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* Private function prototypes -----------------------------------------------*/
  20:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* Private functions ---------------------------------------------------------*/
  21:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
  22:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /** @defgroup MISC_Private_Functions
  23:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @{
  24:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   */
  25:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
  26:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /**
  27:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  28:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  29:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *   This parameter can be one of the following values:
  30:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority.
  31:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *                                4 bits for subpriority.
  32:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority.
  33:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *                                3 bits for subpriority.
  34:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority.
  35:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *                                2 bits for subpriority.
  36:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority.
  37:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *                                1 bits for subpriority.
  38:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority.
  39:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *                                0 bits for subpriority.
  40:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @note When NVIC_PriorityGroup_0 is selected, it will no be any nested 
  41:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *           interrupt. This interrupts priority is managed only with subpriority.                
  42:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @retval None
  43:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   */
  44:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
  45:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** {
  28              	 .loc 1 45 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  46:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   /* Check the parameters */
  47:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
  48:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   
  49:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
  50:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  44              	 .loc 1 50 0
  45 0008 074A     	 ldr r2,.L2
  46 000a 7B68     	 ldr r3,[r7,#4]
  47 000c 43F0BF63 	 orr r3,r3,#100139008
  48 0010 43F40033 	 orr r3,r3,#131072
  49 0014 D168     	 ldr r1,[r2,#12]
  50 0016 0021     	 movs r1,#0
  51 0018 0B43     	 orrs r3,r3,r1
  52 001a D360     	 str r3,[r2,#12]
  51:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** }
  53              	 .loc 1 51 0
  54 001c 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 001e BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0020 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 0024 7047     	 bx lr
  66              	.L3:
  67 0026 00BF     	 .align 2
  68              	.L2:
  69 0028 00ED00E0 	 .word -536810240
  70              	 .cfi_endproc
  71              	.LFE519:
  73              	 .section .text.NVIC_Init,"ax",%progbits
  74              	 .align 2
  75              	 .global NVIC_Init
  76              	 .thumb
  77              	 .thumb_func
  79              	NVIC_Init:
  80              	.LFB520:
  52:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
  53:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /**
  54:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
  55:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *         parameters in the NVIC_InitStruct.
  56:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
  57:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *         function should be called before. 
  58:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
  59:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *         the configuration information for the specified NVIC peripheral.
  60:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @retval None
  61:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   */
  62:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
  63:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** {
  81              	 .loc 1 63 0
  82              	 .cfi_startproc
  83              	 
  84              	 
  85              	 
  86 0000 80B4     	 push {r7}
  87              	.LCFI6:
  88              	 .cfi_def_cfa_offset 4
  89              	 .cfi_offset 7,-4
  90 0002 87B0     	 sub sp,sp,#28
  91              	.LCFI7:
  92              	 .cfi_def_cfa_offset 32
  93 0004 00AF     	 add r7,sp,#0
  94              	.LCFI8:
  95              	 .cfi_def_cfa_register 7
  96 0006 7860     	 str r0,[r7,#4]
  64:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
  97              	 .loc 1 64 0
  98 0008 0023     	 movs r3,#0
  99 000a 7B61     	 str r3,[r7,#20]
 100 000c 0023     	 movs r3,#0
 101 000e 3B61     	 str r3,[r7,#16]
 102 0010 0F23     	 movs r3,#15
 103 0012 FB60     	 str r3,[r7,#12]
  65:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   
  66:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   /* Check the parameters */
  67:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
  68:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
  69:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
  70:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     
  71:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
 104              	 .loc 1 71 0
 105 0014 7B68     	 ldr r3,[r7,#4]
 106 0016 DB78     	 ldrb r3,[r3,#3]
 107 0018 002B     	 cmp r3,#0
 108 001a 3DD0     	 beq .L5
  72:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   {
  73:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
  74:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
 109              	 .loc 1 74 0
 110 001c 2B4B     	 ldr r3,.L7
 111 001e DB68     	 ldr r3,[r3,#12]
 112 0020 DB43     	 mvns r3,r3
 113 0022 03F4E063 	 and r3,r3,#1792
 114 0026 1B0A     	 lsrs r3,r3,#8
 115 0028 7B61     	 str r3,[r7,#20]
  75:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     tmppre = (0x4 - tmppriority);
 116              	 .loc 1 75 0
 117 002a 7B69     	 ldr r3,[r7,#20]
 118 002c C3F10403 	 rsb r3,r3,#4
 119 0030 3B61     	 str r3,[r7,#16]
  76:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     tmpsub = tmpsub >> tmppriority;
 120              	 .loc 1 76 0
 121 0032 7B69     	 ldr r3,[r7,#20]
 122 0034 FA68     	 ldr r2,[r7,#12]
 123 0036 22FA03F3 	 lsr r3,r2,r3
 124 003a FB60     	 str r3,[r7,#12]
  77:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
  78:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 125              	 .loc 1 78 0
 126 003c 7B68     	 ldr r3,[r7,#4]
 127 003e 5B78     	 ldrb r3,[r3,#1]
 128 0040 1A46     	 mov r2,r3
 129 0042 3B69     	 ldr r3,[r7,#16]
 130 0044 02FA03F3 	 lsl r3,r2,r3
 131 0048 7B61     	 str r3,[r7,#20]
  79:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
 132              	 .loc 1 79 0
 133 004a 7B68     	 ldr r3,[r7,#4]
 134 004c 9B78     	 ldrb r3,[r3,#2]
 135 004e 1A46     	 mov r2,r3
 136 0050 FB68     	 ldr r3,[r7,#12]
 137 0052 1340     	 ands r3,r3,r2
 138 0054 7A69     	 ldr r2,[r7,#20]
 139 0056 1343     	 orrs r3,r3,r2
 140 0058 7B61     	 str r3,[r7,#20]
  80:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     tmppriority = tmppriority << 0x04;
 141              	 .loc 1 80 0
 142 005a 7B69     	 ldr r3,[r7,#20]
 143 005c 1B01     	 lsls r3,r3,#4
 144 005e 7B61     	 str r3,[r7,#20]
  81:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****         
  82:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 145              	 .loc 1 82 0
 146 0060 1B4A     	 ldr r2,.L7+4
 147 0062 7B68     	 ldr r3,[r7,#4]
 148 0064 1B78     	 ldrb r3,[r3]
 149 0066 7969     	 ldr r1,[r7,#20]
 150 0068 C9B2     	 uxtb r1,r1
 151 006a 1344     	 add r3,r3,r2
 152 006c 0A46     	 mov r2,r1
 153 006e 83F80023 	 strb r2,[r3,#768]
  83:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     
  84:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
  85:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 154              	 .loc 1 85 0
 155 0072 174B     	 ldr r3,.L7+4
 156 0074 7A68     	 ldr r2,[r7,#4]
 157 0076 1278     	 ldrb r2,[r2]
 158 0078 5209     	 lsrs r2,r2,#5
 159 007a D2B2     	 uxtb r2,r2
  86:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 160              	 .loc 1 86 0
 161 007c 7968     	 ldr r1,[r7,#4]
 162 007e 0978     	 ldrb r1,[r1]
 163 0080 01F01F01 	 and r1,r1,#31
 164 0084 0120     	 movs r0,#1
 165 0086 00FA01F1 	 lsl r1,r0,r1
  85:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 166              	 .loc 1 85 0
 167 008a 53F82200 	 ldr r0,[r3,r2,lsl#2]
 168 008e 0020     	 movs r0,#0
 169 0090 0143     	 orrs r1,r1,r0
 170 0092 43F82210 	 str r1,[r3,r2,lsl#2]
 171 0096 13E0     	 b .L4
 172              	.L5:
  87:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   }
  88:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   else
  89:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   {
  90:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
  91:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 173              	 .loc 1 91 0
 174 0098 0D4A     	 ldr r2,.L7+4
 175 009a 7B68     	 ldr r3,[r7,#4]
 176 009c 1B78     	 ldrb r3,[r3]
 177 009e 5B09     	 lsrs r3,r3,#5
 178 00a0 DBB2     	 uxtb r3,r3
 179 00a2 1846     	 mov r0,r3
  92:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 180              	 .loc 1 92 0
 181 00a4 7B68     	 ldr r3,[r7,#4]
 182 00a6 1B78     	 ldrb r3,[r3]
 183 00a8 03F01F03 	 and r3,r3,#31
 184 00ac 0121     	 movs r1,#1
 185 00ae 9940     	 lsls r1,r1,r3
  91:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 186              	 .loc 1 91 0
 187 00b0 00F12003 	 add r3,r0,#32
 188 00b4 52F82300 	 ldr r0,[r2,r3,lsl#2]
 189 00b8 0020     	 movs r0,#0
 190 00ba 0143     	 orrs r1,r1,r0
 191 00bc 42F82310 	 str r1,[r2,r3,lsl#2]
 192              	.L4:
  93:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   }
  94:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** }
 193              	 .loc 1 94 0
 194 00c0 1C37     	 adds r7,r7,#28
 195              	.LCFI9:
 196              	 .cfi_def_cfa_offset 4
 197 00c2 BD46     	 mov sp,r7
 198              	.LCFI10:
 199              	 .cfi_def_cfa_register 13
 200              	 
 201 00c4 5DF8047B 	 ldr r7,[sp],#4
 202              	.LCFI11:
 203              	 .cfi_restore 7
 204              	 .cfi_def_cfa_offset 0
 205 00c8 7047     	 bx lr
 206              	.L8:
 207 00ca 00BF     	 .align 2
 208              	.L7:
 209 00cc 00ED00E0 	 .word -536810240
 210 00d0 00E100E0 	 .word -536813312
 211              	 .cfi_endproc
 212              	.LFE520:
 214              	 .section .text.NVIC_SetVectorTable,"ax",%progbits
 215              	 .align 2
 216              	 .global NVIC_SetVectorTable
 217              	 .thumb
 218              	 .thumb_func
 220              	NVIC_SetVectorTable:
 221              	.LFB521:
  95:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
  96:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /**
  97:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @brief  Sets the vector table location and Offset.
  98:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
  99:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *   This parameter can be one of the following values:
 100:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_VectTab_RAM
 101:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_VectTab_FLASH
 102:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x200.
 103:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @retval None
 104:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   */
 105:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 106:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** { 
 222              	 .loc 1 106 0
 223              	 .cfi_startproc
 224              	 
 225              	 
 226              	 
 227 0000 80B4     	 push {r7}
 228              	.LCFI12:
 229              	 .cfi_def_cfa_offset 4
 230              	 .cfi_offset 7,-4
 231 0002 83B0     	 sub sp,sp,#12
 232              	.LCFI13:
 233              	 .cfi_def_cfa_offset 16
 234 0004 00AF     	 add r7,sp,#0
 235              	.LCFI14:
 236              	 .cfi_def_cfa_register 7
 237 0006 7860     	 str r0,[r7,#4]
 238 0008 3960     	 str r1,[r7]
 107:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   /* Check the parameters */
 108:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 109:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 110:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****    
 111:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 239              	 .loc 1 111 0
 240 000a 084A     	 ldr r2,.L10
 241 000c 3B68     	 ldr r3,[r7]
 242 000e 23F06043 	 bic r3,r3,#-536870912
 243 0012 23F07F03 	 bic r3,r3,#127
 244 0016 7968     	 ldr r1,[r7,#4]
 245 0018 0B43     	 orrs r3,r3,r1
 246 001a 9168     	 ldr r1,[r2,#8]
 247 001c 0021     	 movs r1,#0
 248 001e 0B43     	 orrs r3,r3,r1
 249 0020 9360     	 str r3,[r2,#8]
 112:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** }
 250              	 .loc 1 112 0
 251 0022 0C37     	 adds r7,r7,#12
 252              	.LCFI15:
 253              	 .cfi_def_cfa_offset 4
 254 0024 BD46     	 mov sp,r7
 255              	.LCFI16:
 256              	 .cfi_def_cfa_register 13
 257              	 
 258 0026 5DF8047B 	 ldr r7,[sp],#4
 259              	.LCFI17:
 260              	 .cfi_restore 7
 261              	 .cfi_def_cfa_offset 0
 262 002a 7047     	 bx lr
 263              	.L11:
 264              	 .align 2
 265              	.L10:
 266 002c 00ED00E0 	 .word -536810240
 267              	 .cfi_endproc
 268              	.LFE521:
 270              	 .section .text.NVIC_SystemLPConfig,"ax",%progbits
 271              	 .align 2
 272              	 .global NVIC_SystemLPConfig
 273              	 .thumb
 274              	 .thumb_func
 276              	NVIC_SystemLPConfig:
 277              	.LFB522:
 113:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 114:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /**
 115:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 116:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 117:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *   This parameter can be one of the following values:
 118:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_LP_SEVONPEND
 119:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_LP_SLEEPDEEP
 120:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT
 121:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 122:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @retval None
 123:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   */
 124:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 125:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** {
 278              	 .loc 1 125 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282              	 
 283 0000 80B4     	 push {r7}
 284              	.LCFI18:
 285              	 .cfi_def_cfa_offset 4
 286              	 .cfi_offset 7,-4
 287 0002 83B0     	 sub sp,sp,#12
 288              	.LCFI19:
 289              	 .cfi_def_cfa_offset 16
 290 0004 00AF     	 add r7,sp,#0
 291              	.LCFI20:
 292              	 .cfi_def_cfa_register 7
 293 0006 0346     	 mov r3,r0
 294 0008 0A46     	 mov r2,r1
 295 000a FB71     	 strb r3,[r7,#7]
 296 000c 1346     	 mov r3,r2
 297 000e BB71     	 strb r3,[r7,#6]
 126:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   /* Check the parameters */
 127:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 128:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 129:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   
 130:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   if (NewState != DISABLE)
 298              	 .loc 1 130 0
 299 0010 BB79     	 ldrb r3,[r7,#6]
 300 0012 002B     	 cmp r3,#0
 301 0014 09D0     	 beq .L13
 131:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   {
 132:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     SCB->SCR |= LowPowerMode;
 302              	 .loc 1 132 0
 303 0016 0C4B     	 ldr r3,.L15
 304 0018 0B4A     	 ldr r2,.L15
 305 001a 1169     	 ldr r1,[r2,#16]
 306 001c FA79     	 ldrb r2,[r7,#7]
 307 001e 0A43     	 orrs r2,r2,r1
 308 0020 1969     	 ldr r1,[r3,#16]
 309 0022 0021     	 movs r1,#0
 310 0024 0A43     	 orrs r2,r2,r1
 311 0026 1A61     	 str r2,[r3,#16]
 312 0028 09E0     	 b .L12
 313              	.L13:
 133:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   }
 134:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   else
 135:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   {
 136:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 314              	 .loc 1 136 0
 315 002a 074B     	 ldr r3,.L15
 316 002c 064A     	 ldr r2,.L15
 317 002e 1169     	 ldr r1,[r2,#16]
 318 0030 FA79     	 ldrb r2,[r7,#7]
 319 0032 D243     	 mvns r2,r2
 320 0034 0A40     	 ands r2,r2,r1
 321 0036 1969     	 ldr r1,[r3,#16]
 322 0038 0021     	 movs r1,#0
 323 003a 0A43     	 orrs r2,r2,r1
 324 003c 1A61     	 str r2,[r3,#16]
 325              	.L12:
 137:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   }
 138:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** }
 326              	 .loc 1 138 0
 327 003e 0C37     	 adds r7,r7,#12
 328              	.LCFI21:
 329              	 .cfi_def_cfa_offset 4
 330 0040 BD46     	 mov sp,r7
 331              	.LCFI22:
 332              	 .cfi_def_cfa_register 13
 333              	 
 334 0042 5DF8047B 	 ldr r7,[sp],#4
 335              	.LCFI23:
 336              	 .cfi_restore 7
 337              	 .cfi_def_cfa_offset 0
 338 0046 7047     	 bx lr
 339              	.L16:
 340              	 .align 2
 341              	.L15:
 342 0048 00ED00E0 	 .word -536810240
 343              	 .cfi_endproc
 344              	.LFE522:
 346              	 .section .text.SysTick_CLKSourceConfig,"ax",%progbits
 347              	 .align 2
 348              	 .global SysTick_CLKSourceConfig
 349              	 .thumb
 350              	 .thumb_func
 352              	SysTick_CLKSourceConfig:
 353              	.LFB523:
 139:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 140:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /**
 141:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @brief  Configures the SysTick clock source.
 142:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 143:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *   This parameter can be one of the following values:
 144:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 145:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 146:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   * @retval None
 147:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   */
 148:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 149:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** {
 354              	 .loc 1 149 0
 355              	 .cfi_startproc
 356              	 
 357              	 
 358              	 
 359 0000 80B4     	 push {r7}
 360              	.LCFI24:
 361              	 .cfi_def_cfa_offset 4
 362              	 .cfi_offset 7,-4
 363 0002 83B0     	 sub sp,sp,#12
 364              	.LCFI25:
 365              	 .cfi_def_cfa_offset 16
 366 0004 00AF     	 add r7,sp,#0
 367              	.LCFI26:
 368              	 .cfi_def_cfa_register 7
 369 0006 7860     	 str r0,[r7,#4]
 150:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   /* Check the parameters */
 151:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 152:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 370              	 .loc 1 152 0
 371 0008 7B68     	 ldr r3,[r7,#4]
 372 000a 042B     	 cmp r3,#4
 373 000c 09D1     	 bne .L18
 153:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   {
 154:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 374              	 .loc 1 154 0
 375 000e 0C4B     	 ldr r3,.L20
 376 0010 0B4A     	 ldr r2,.L20
 377 0012 1268     	 ldr r2,[r2]
 378 0014 42F00402 	 orr r2,r2,#4
 379 0018 1968     	 ldr r1,[r3]
 380 001a 0021     	 movs r1,#0
 381 001c 0A43     	 orrs r2,r2,r1
 382 001e 1A60     	 str r2,[r3]
 383 0020 08E0     	 b .L17
 384              	.L18:
 155:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   }
 156:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   else
 157:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   {
 158:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 385              	 .loc 1 158 0
 386 0022 074B     	 ldr r3,.L20
 387 0024 064A     	 ldr r2,.L20
 388 0026 1268     	 ldr r2,[r2]
 389 0028 22F00402 	 bic r2,r2,#4
 390 002c 1968     	 ldr r1,[r3]
 391 002e 0021     	 movs r1,#0
 392 0030 0A43     	 orrs r2,r2,r1
 393 0032 1A60     	 str r2,[r3]
 394              	.L17:
 159:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   }
 160:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** }
 395              	 .loc 1 160 0
 396 0034 0C37     	 adds r7,r7,#12
 397              	.LCFI27:
 398              	 .cfi_def_cfa_offset 4
 399 0036 BD46     	 mov sp,r7
 400              	.LCFI28:
 401              	 .cfi_def_cfa_register 13
 402              	 
 403 0038 5DF8047B 	 ldr r7,[sp],#4
 404              	.LCFI29:
 405              	 .cfi_restore 7
 406              	 .cfi_def_cfa_offset 0
 407 003c 7047     	 bx lr
 408              	.L21:
 409 003e 00BF     	 .align 2
 410              	.L20:
 411 0040 10E000E0 	 .word -536813552
 412              	 .cfi_endproc
 413              	.LFE523:
 415              	 .weak __dso_handle
 416              	 .section .bss.__dso_handle,"aw",%nobits
 417              	 .align 2
 420              	__dso_handle:
 421 0000 00000000 	 .space 4
 422              	 .section .text._sbrk,"ax",%progbits
 423              	 .align 2
 424              	 .global _sbrk
 425              	 .thumb
 426              	 .thumb_func
 428              	_sbrk:
 429              	.LFB524:
 161:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 162:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** #if defined ( __GNUC__ )
 163:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 164:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** #include <stdint.h>
 165:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** #include <errno.h>
 166:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** #include <sys/types.h>
 167:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 168:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* Forward prototypes.  */
 169:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** caddr_t _sbrk(int nbytes) __attribute__((externally_visible));
 170:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** void _init(void) __attribute__((externally_visible));
 171:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 172:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* c++ destructor dynamic shared object needed if -fuse-cxa-atexit is used*/
 173:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** void *__dso_handle __attribute__ ((weak));
 174:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 175:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** // defined in linker script
 176:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** extern caddr_t Heap_Bank1_Start;
 177:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** extern caddr_t Heap_Bank1_End;
 178:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** caddr_t _sbrk(int nbytes)
 179:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** {
 430              	 .loc 1 179 0
 431              	 .cfi_startproc
 432              	 
 433              	 
 434 0000 80B5     	 push {r7,lr}
 435              	.LCFI30:
 436              	 .cfi_def_cfa_offset 8
 437              	 .cfi_offset 7,-8
 438              	 .cfi_offset 14,-4
 439 0002 84B0     	 sub sp,sp,#16
 440              	.LCFI31:
 441              	 .cfi_def_cfa_offset 24
 442 0004 00AF     	 add r7,sp,#0
 443              	.LCFI32:
 444              	 .cfi_def_cfa_register 7
 445 0006 7860     	 str r0,[r7,#4]
 180:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   static caddr_t heap_ptr = NULL;
 181:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   caddr_t base;
 182:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 183:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   if (heap_ptr == NULL) {
 446              	 .loc 1 183 0
 447 0008 144B     	 ldr r3,.L26
 448 000a 1B68     	 ldr r3,[r3]
 449 000c 002B     	 cmp r3,#0
 450 000e 02D1     	 bne .L23
 184:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     heap_ptr = (caddr_t)&Heap_Bank1_Start;
 451              	 .loc 1 184 0
 452 0010 124B     	 ldr r3,.L26
 453 0012 134A     	 ldr r2,.L26+4
 454 0014 1A60     	 str r2,[r3]
 455              	.L23:
 185:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   }
 186:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 187:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   base = heap_ptr;
 456              	 .loc 1 187 0
 457 0016 114B     	 ldr r3,.L26
 458 0018 1B68     	 ldr r3,[r3]
 459 001a FB60     	 str r3,[r7,#12]
 188:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 189:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   /* heap word alignment */
 190:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   nbytes = (nbytes + 3) & ~0x3U;
 460              	 .loc 1 190 0
 461 001c 7B68     	 ldr r3,[r7,#4]
 462 001e 0333     	 adds r3,r3,#3
 463 0020 23F00303 	 bic r3,r3,#3
 464 0024 7B60     	 str r3,[r7,#4]
 191:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   if ((caddr_t)&Heap_Bank1_End > (heap_ptr + nbytes))
 465              	 .loc 1 191 0
 466 0026 0D4B     	 ldr r3,.L26
 467 0028 1A68     	 ldr r2,[r3]
 468 002a 7B68     	 ldr r3,[r7,#4]
 469 002c 1344     	 add r3,r3,r2
 470 002e 0D4A     	 ldr r2,.L26+8
 471 0030 9342     	 cmp r3,r2
 472 0032 07D2     	 bcs .L24
 192:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   {
 193:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     heap_ptr += nbytes;
 473              	 .loc 1 193 0
 474 0034 094B     	 ldr r3,.L26
 475 0036 1A68     	 ldr r2,[r3]
 476 0038 7B68     	 ldr r3,[r7,#4]
 477 003a 1344     	 add r3,r3,r2
 478 003c 074A     	 ldr r2,.L26
 479 003e 1360     	 str r3,[r2]
 194:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     return (base);
 480              	 .loc 1 194 0
 481 0040 FB68     	 ldr r3,[r7,#12]
 482 0042 06E0     	 b .L25
 483              	.L24:
 195:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   }
 196:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   else
 197:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   {
 198:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     /* Heap overflow */
 199:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     errno = ENOMEM;
 484              	 .loc 1 199 0
 485 0044 FFF7FEFF 	 bl __errno
 486 0048 0246     	 mov r2,r0
 487 004a 0C23     	 movs r3,#12
 488 004c 1360     	 str r3,[r2]
 200:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****     return ((caddr_t)-1);
 489              	 .loc 1 200 0
 490 004e 4FF0FF33 	 mov r3,#-1
 491              	.L25:
 201:../cleanflight/lib/main/XMC4000/XMC4000_misc.c ****   }
 202:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** }
 492              	 .loc 1 202 0
 493 0052 1846     	 mov r0,r3
 494 0054 1037     	 adds r7,r7,#16
 495              	.LCFI33:
 496              	 .cfi_def_cfa_offset 8
 497 0056 BD46     	 mov sp,r7
 498              	.LCFI34:
 499              	 .cfi_def_cfa_register 13
 500              	 
 501 0058 80BD     	 pop {r7,pc}
 502              	.L27:
 503 005a 00BF     	 .align 2
 504              	.L26:
 505 005c 00000000 	 .word heap_ptr.11472
 506 0060 00000000 	 .word Heap_Bank1_Start
 507 0064 00000000 	 .word Heap_Bank1_End
 508              	 .cfi_endproc
 509              	.LFE524:
 511              	 .section .text._init,"ax",%progbits
 512              	 .align 2
 513              	 .global _init
 514              	 .thumb
 515              	 .thumb_func
 517              	_init:
 518              	.LFB525:
 203:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** 
 204:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** /* Init */
 205:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** void _init(void)
 206:../cleanflight/lib/main/XMC4000/XMC4000_misc.c **** {}
 519              	 .loc 1 206 0
 520              	 .cfi_startproc
 521              	 
 522              	 
 523              	 
 524 0000 80B4     	 push {r7}
 525              	.LCFI35:
 526              	 .cfi_def_cfa_offset 4
 527              	 .cfi_offset 7,-4
 528 0002 00AF     	 add r7,sp,#0
 529              	.LCFI36:
 530              	 .cfi_def_cfa_register 7
 531              	 .loc 1 206 0
 532 0004 BD46     	 mov sp,r7
 533              	.LCFI37:
 534              	 .cfi_def_cfa_register 13
 535              	 
 536 0006 5DF8047B 	 ldr r7,[sp],#4
 537              	.LCFI38:
 538              	 .cfi_restore 7
 539              	 .cfi_def_cfa_offset 0
 540 000a 7047     	 bx lr
 541              	 .cfi_endproc
 542              	.LFE525:
 544              	 .section .bss.heap_ptr.11472,"aw",%nobits
 545              	 .align 2
 548              	heap_ptr.11472:
 549 0000 00000000 	 .space 4
 550              	 .text
 551              	.Letext0:
 552              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 553              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 554              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 555              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 556              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4000_misc.h"
 557              	 .file 7 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\sys\\types.h"
 558              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 XMC4000_misc.c
    {standard input}:20     .text.NVIC_PriorityGroupConfig:00000000 $t
    {standard input}:25     .text.NVIC_PriorityGroupConfig:00000000 NVIC_PriorityGroupConfig
    {standard input}:69     .text.NVIC_PriorityGroupConfig:00000028 $d
    {standard input}:74     .text.NVIC_Init:00000000 $t
    {standard input}:79     .text.NVIC_Init:00000000 NVIC_Init
    {standard input}:209    .text.NVIC_Init:000000cc $d
    {standard input}:215    .text.NVIC_SetVectorTable:00000000 $t
    {standard input}:220    .text.NVIC_SetVectorTable:00000000 NVIC_SetVectorTable
    {standard input}:266    .text.NVIC_SetVectorTable:0000002c $d
    {standard input}:271    .text.NVIC_SystemLPConfig:00000000 $t
    {standard input}:276    .text.NVIC_SystemLPConfig:00000000 NVIC_SystemLPConfig
    {standard input}:342    .text.NVIC_SystemLPConfig:00000048 $d
    {standard input}:347    .text.SysTick_CLKSourceConfig:00000000 $t
    {standard input}:352    .text.SysTick_CLKSourceConfig:00000000 SysTick_CLKSourceConfig
    {standard input}:411    .text.SysTick_CLKSourceConfig:00000040 $d
    {standard input}:420    .bss.__dso_handle:00000000 __dso_handle
    {standard input}:417    .bss.__dso_handle:00000000 $d
    {standard input}:423    .text._sbrk:00000000 $t
    {standard input}:428    .text._sbrk:00000000 _sbrk
    {standard input}:505    .text._sbrk:0000005c $d
    {standard input}:548    .bss.heap_ptr.11472:00000000 heap_ptr.11472
    {standard input}:512    .text._init:00000000 $t
    {standard input}:517    .text._init:00000000 _init
    {standard input}:545    .bss.heap_ptr.11472:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__errno
Heap_Bank1_Start
Heap_Bank1_End
