   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_flash.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_FLASH_lEnterPageModeCommand,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_FLASH_lEnterPageModeCommand
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_FLASH_lEnterPageModeCommand:
  26              	.LFB149:
  27              	 .file 1 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /**
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * @file xmc4_flash.c
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * @date 2016-01-08
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * 
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * 
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * products derived from this software without specific prior written permission.                  
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *                                                                              
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *                                                                              
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Change History
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * --------------
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * 2015-02-10:
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *     - Initial <br>
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * 2015-06-20: 
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *     - Removed definition of GetDriverVersion API 
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * 2015-08-17: 
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *     - Added the below API's to the public interface.
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_Reset
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ErasePhysicalSector
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_EraseUCB
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_ResumeProtection
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_RepairPhysicalSector
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * 2016-01-08: 
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *     - Wait until operation is finished for the next functions:
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       1. XMC_FLASH_InstallProtection
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       2. XMC_FLASH_ConfirmProtection
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       3. XMC_FLASH_ProgramPage
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       4. XMC_FLASH_EraseSector
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       5. XMC_FLASH_ErasePhysicalSector
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *       6. XMC_FLASH_EraseUCB
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *     - Fix XMC_FLASH_VerifyReadProtection and XMC_FLASH_VerifyWriteProtection
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * 2018-02-08
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *     - Added implementation of XMC_FLASH_InstallBMI()
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * @endcond 
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  *
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** #include "xmc_flash.h"
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** #if UC_FAMILY == XMC4
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * MACROS
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROTECTION_CONFIGURATION_WORDS (8UL) /* Used to upadte the assembly buffer during
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_BMI_STRING_WORDS (10UL) /* Used to upadte the assembly buffer during BMI String
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****                                                           configuration */
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_OFFSET (512UL) /* Offset address for UCB page */
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_WORDS  (4UL)
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** #define XMC_FLASH_PROT_CONFIRM_CODE   (0x8AFE15C3UL)
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * LOCAL FUNCTIONS
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void);
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word);
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address);
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address);
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address);
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1);
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void);
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address);
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void);
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to program the PFLASH in to page mode, so that assembly buffer is used 
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEnterPageModeCommand(void)
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
  28              	 .loc 1 105 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
  43              	 .loc 1 108 0
  44 0006 054B     	 ldr r3,.L2
  45 0008 7B60     	 str r3,[r7,#4]
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = (uint32_t)0x50U;
  46              	 .loc 1 109 0
  47 000a 7B68     	 ldr r3,[r7,#4]
  48 000c 5022     	 movs r2,#80
  49 000e 1A60     	 str r2,[r3]
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
  50              	 .loc 1 110 0
  51 0010 0C37     	 adds r7,r7,#12
  52              	.LCFI3:
  53              	 .cfi_def_cfa_offset 4
  54 0012 BD46     	 mov sp,r7
  55              	.LCFI4:
  56              	 .cfi_def_cfa_register 13
  57              	 
  58 0014 5DF8047B 	 ldr r7,[sp],#4
  59              	.LCFI5:
  60              	 .cfi_restore 7
  61              	 .cfi_def_cfa_offset 0
  62 0018 7047     	 bx lr
  63              	.L3:
  64 001a 00BF     	 .align 2
  65              	.L2:
  66 001c 5455000C 	 .word 201348436
  67              	 .cfi_endproc
  68              	.LFE149:
  70              	 .section .text.XMC_FLASH_lLoadPageCommand,"ax",%progbits
  71              	 .align 2
  72              	 .global XMC_FLASH_lLoadPageCommand
  73              	 .thumb
  74              	 .thumb_func
  76              	XMC_FLASH_lLoadPageCommand:
  77              	.LFB150:
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to load the data into the page assembly buffer 
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lLoadPageCommand(uint32_t low_word, uint32_t high_word)
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
  78              	 .loc 1 116 0
  79              	 .cfi_startproc
  80              	 
  81              	 
  82              	 
  83 0000 80B4     	 push {r7}
  84              	.LCFI6:
  85              	 .cfi_def_cfa_offset 4
  86              	 .cfi_offset 7,-4
  87 0002 85B0     	 sub sp,sp,#20
  88              	.LCFI7:
  89              	 .cfi_def_cfa_offset 24
  90 0004 00AF     	 add r7,sp,#0
  91              	.LCFI8:
  92              	 .cfi_def_cfa_register 7
  93 0006 7860     	 str r0,[r7,#4]
  94 0008 3960     	 str r1,[r7]
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f0U);
  95              	 .loc 1 119 0
  96 000a 074B     	 ldr r3,.L5
  97 000c FB60     	 str r3,[r7,#12]
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = low_word;
  98              	 .loc 1 120 0
  99 000e FB68     	 ldr r3,[r7,#12]
 100 0010 7A68     	 ldr r2,[r7,#4]
 101 0012 1A60     	 str r2,[r3]
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x55f4U);
 102              	 .loc 1 121 0
 103 0014 054B     	 ldr r3,.L5+4
 104 0016 FB60     	 str r3,[r7,#12]
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = high_word;
 105              	 .loc 1 122 0
 106 0018 FB68     	 ldr r3,[r7,#12]
 107 001a 3A68     	 ldr r2,[r7]
 108 001c 1A60     	 str r2,[r3]
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 109              	 .loc 1 123 0
 110 001e 1437     	 adds r7,r7,#20
 111              	.LCFI9:
 112              	 .cfi_def_cfa_offset 4
 113 0020 BD46     	 mov sp,r7
 114              	.LCFI10:
 115              	 .cfi_def_cfa_register 13
 116              	 
 117 0022 5DF8047B 	 ldr r7,[sp],#4
 118              	.LCFI11:
 119              	 .cfi_restore 7
 120              	 .cfi_def_cfa_offset 0
 121 0026 7047     	 bx lr
 122              	.L6:
 123              	 .align 2
 124              	.L5:
 125 0028 F055000C 	 .word 201348592
 126 002c F455000C 	 .word 201348596
 127              	 .cfi_endproc
 128              	.LFE150:
 130              	 .section .text.XMC_FLASH_lWritePageCommand,"ax",%progbits
 131              	 .align 2
 132              	 .global XMC_FLASH_lWritePageCommand
 133              	 .thumb
 134              	 .thumb_func
 136              	XMC_FLASH_lWritePageCommand:
 137              	.LFB151:
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of one page with data from the assembly buffer
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWritePageCommand(uint32_t *page_start_address)
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 138              	 .loc 1 129 0
 139              	 .cfi_startproc
 140              	 
 141              	 
 142              	 
 143 0000 80B4     	 push {r7}
 144              	.LCFI12:
 145              	 .cfi_def_cfa_offset 4
 146              	 .cfi_offset 7,-4
 147 0002 85B0     	 sub sp,sp,#20
 148              	.LCFI13:
 149              	 .cfi_def_cfa_offset 24
 150 0004 00AF     	 add r7,sp,#0
 151              	.LCFI14:
 152              	 .cfi_def_cfa_register 7
 153 0006 7860     	 str r0,[r7,#4]
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 154              	 .loc 1 132 0
 155 0008 0C4B     	 ldr r3,.L8
 156 000a FB60     	 str r3,[r7,#12]
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 157              	 .loc 1 133 0
 158 000c FB68     	 ldr r3,[r7,#12]
 159 000e AA22     	 movs r2,#170
 160 0010 1A60     	 str r2,[r3]
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 161              	 .loc 1 134 0
 162 0012 0B4B     	 ldr r3,.L8+4
 163 0014 FB60     	 str r3,[r7,#12]
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 164              	 .loc 1 135 0
 165 0016 FB68     	 ldr r3,[r7,#12]
 166 0018 5522     	 movs r2,#85
 167 001a 1A60     	 str r2,[r3]
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 168              	 .loc 1 136 0
 169 001c 074B     	 ldr r3,.L8
 170 001e FB60     	 str r3,[r7,#12]
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xa0U;
 171              	 .loc 1 137 0
 172 0020 FB68     	 ldr r3,[r7,#12]
 173 0022 A022     	 movs r2,#160
 174 0024 1A60     	 str r2,[r3]
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 175              	 .loc 1 138 0
 176 0026 7B68     	 ldr r3,[r7,#4]
 177 0028 FB60     	 str r3,[r7,#12]
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 178              	 .loc 1 139 0
 179 002a FB68     	 ldr r3,[r7,#12]
 180 002c AA22     	 movs r2,#170
 181 002e 1A60     	 str r2,[r3]
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 182              	 .loc 1 140 0
 183 0030 1437     	 adds r7,r7,#20
 184              	.LCFI15:
 185              	 .cfi_def_cfa_offset 4
 186 0032 BD46     	 mov sp,r7
 187              	.LCFI16:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 0034 5DF8047B 	 ldr r7,[sp],#4
 191              	.LCFI17:
 192              	 .cfi_restore 7
 193              	 .cfi_def_cfa_offset 0
 194 0038 7047     	 bx lr
 195              	.L9:
 196 003a 00BF     	 .align 2
 197              	.L8:
 198 003c 5455000C 	 .word 201348436
 199 0040 A8AA000C 	 .word 201370280
 200              	 .cfi_endproc
 201              	.LFE151:
 203              	 .section .text.XMC_FLASH_lWriteUCBPageCommand,"ax",%progbits
 204              	 .align 2
 205              	 .global XMC_FLASH_lWriteUCBPageCommand
 206              	 .thumb
 207              	 .thumb_func
 209              	XMC_FLASH_lWriteUCBPageCommand:
 210              	.LFB152:
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to start the programming of UCB page with data from the assembly buffer
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lWriteUCBPageCommand(uint32_t *page_start_address)
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 211              	 .loc 1 146 0
 212              	 .cfi_startproc
 213              	 
 214              	 
 215              	 
 216 0000 80B4     	 push {r7}
 217              	.LCFI18:
 218              	 .cfi_def_cfa_offset 4
 219              	 .cfi_offset 7,-4
 220 0002 85B0     	 sub sp,sp,#20
 221              	.LCFI19:
 222              	 .cfi_def_cfa_offset 24
 223 0004 00AF     	 add r7,sp,#0
 224              	.LCFI20:
 225              	 .cfi_def_cfa_register 7
 226 0006 7860     	 str r0,[r7,#4]
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 227              	 .loc 1 149 0
 228 0008 0C4B     	 ldr r3,.L11
 229 000a FB60     	 str r3,[r7,#12]
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 230              	 .loc 1 150 0
 231 000c FB68     	 ldr r3,[r7,#12]
 232 000e AA22     	 movs r2,#170
 233 0010 1A60     	 str r2,[r3]
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 234              	 .loc 1 151 0
 235 0012 0B4B     	 ldr r3,.L11+4
 236 0014 FB60     	 str r3,[r7,#12]
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 237              	 .loc 1 152 0
 238 0016 FB68     	 ldr r3,[r7,#12]
 239 0018 5522     	 movs r2,#85
 240 001a 1A60     	 str r2,[r3]
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 241              	 .loc 1 153 0
 242 001c 074B     	 ldr r3,.L11
 243 001e FB60     	 str r3,[r7,#12]
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 244              	 .loc 1 154 0
 245 0020 FB68     	 ldr r3,[r7,#12]
 246 0022 C022     	 movs r2,#192
 247 0024 1A60     	 str r2,[r3]
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = page_start_address;
 248              	 .loc 1 155 0
 249 0026 7B68     	 ldr r3,[r7,#4]
 250 0028 FB60     	 str r3,[r7,#12]
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 251              	 .loc 1 156 0
 252 002a FB68     	 ldr r3,[r7,#12]
 253 002c AA22     	 movs r2,#170
 254 002e 1A60     	 str r2,[r3]
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 255              	 .loc 1 157 0
 256 0030 1437     	 adds r7,r7,#20
 257              	.LCFI21:
 258              	 .cfi_def_cfa_offset 4
 259 0032 BD46     	 mov sp,r7
 260              	.LCFI22:
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 0034 5DF8047B 	 ldr r7,[sp],#4
 264              	.LCFI23:
 265              	 .cfi_restore 7
 266              	 .cfi_def_cfa_offset 0
 267 0038 7047     	 bx lr
 268              	.L12:
 269 003a 00BF     	 .align 2
 270              	.L11:
 271 003c 5455000C 	 .word 201348436
 272 0040 A8AA000C 	 .word 201370280
 273              	 .cfi_endproc
 274              	.LFE152:
 276              	 .section .text.XMC_FLASH_lEraseSectorCommand,"ax",%progbits
 277              	 .align 2
 278              	 .global XMC_FLASH_lEraseSectorCommand
 279              	 .thumb
 280              	 .thumb_func
 282              	XMC_FLASH_lEraseSectorCommand:
 283              	.LFB153:
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to erase sector which is starting with the specified address
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lEraseSectorCommand(uint32_t *sector_start_address)
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 284              	 .loc 1 163 0
 285              	 .cfi_startproc
 286              	 
 287              	 
 288              	 
 289 0000 80B4     	 push {r7}
 290              	.LCFI24:
 291              	 .cfi_def_cfa_offset 4
 292              	 .cfi_offset 7,-4
 293 0002 85B0     	 sub sp,sp,#20
 294              	.LCFI25:
 295              	 .cfi_def_cfa_offset 24
 296 0004 00AF     	 add r7,sp,#0
 297              	.LCFI26:
 298              	 .cfi_def_cfa_register 7
 299 0006 7860     	 str r0,[r7,#4]
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 300              	 .loc 1 166 0
 301 0008 114B     	 ldr r3,.L14
 302 000a FB60     	 str r3,[r7,#12]
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 303              	 .loc 1 167 0
 304 000c FB68     	 ldr r3,[r7,#12]
 305 000e AA22     	 movs r2,#170
 306 0010 1A60     	 str r2,[r3]
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 307              	 .loc 1 168 0
 308 0012 104B     	 ldr r3,.L14+4
 309 0014 FB60     	 str r3,[r7,#12]
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 310              	 .loc 1 169 0
 311 0016 FB68     	 ldr r3,[r7,#12]
 312 0018 5522     	 movs r2,#85
 313 001a 1A60     	 str r2,[r3]
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 314              	 .loc 1 170 0
 315 001c 0C4B     	 ldr r3,.L14
 316 001e FB60     	 str r3,[r7,#12]
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 317              	 .loc 1 171 0
 318 0020 FB68     	 ldr r3,[r7,#12]
 319 0022 8022     	 movs r2,#128
 320 0024 1A60     	 str r2,[r3]
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 321              	 .loc 1 172 0
 322 0026 0A4B     	 ldr r3,.L14
 323 0028 FB60     	 str r3,[r7,#12]
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 324              	 .loc 1 173 0
 325 002a FB68     	 ldr r3,[r7,#12]
 326 002c AA22     	 movs r2,#170
 327 002e 1A60     	 str r2,[r3]
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 328              	 .loc 1 174 0
 329 0030 084B     	 ldr r3,.L14+4
 330 0032 FB60     	 str r3,[r7,#12]
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 331              	 .loc 1 175 0
 332 0034 FB68     	 ldr r3,[r7,#12]
 333 0036 5522     	 movs r2,#85
 334 0038 1A60     	 str r2,[r3]
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 335              	 .loc 1 176 0
 336 003a 7B68     	 ldr r3,[r7,#4]
 337 003c FB60     	 str r3,[r7,#12]
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x30U;
 338              	 .loc 1 177 0
 339 003e FB68     	 ldr r3,[r7,#12]
 340 0040 3022     	 movs r2,#48
 341 0042 1A60     	 str r2,[r3]
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 342              	 .loc 1 178 0
 343 0044 1437     	 adds r7,r7,#20
 344              	.LCFI27:
 345              	 .cfi_def_cfa_offset 4
 346 0046 BD46     	 mov sp,r7
 347              	.LCFI28:
 348              	 .cfi_def_cfa_register 13
 349              	 
 350 0048 5DF8047B 	 ldr r7,[sp],#4
 351              	.LCFI29:
 352              	 .cfi_restore 7
 353              	 .cfi_def_cfa_offset 0
 354 004c 7047     	 bx lr
 355              	.L15:
 356 004e 00BF     	 .align 2
 357              	.L14:
 358 0050 5455000C 	 .word 201348436
 359 0054 A8AA000C 	 .word 201370280
 360              	 .cfi_endproc
 361              	.LFE153:
 363              	 .section .text.XMC_FLASH_lDisableSectorWriteProtectionCommand,"ax",%progbits
 364              	 .align 2
 365              	 .global XMC_FLASH_lDisableSectorWriteProtectionCommand
 366              	 .thumb
 367              	 .thumb_func
 369              	XMC_FLASH_lDisableSectorWriteProtectionCommand:
 370              	.LFB154:
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the write protection belonging to the the USER specified, when p
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * configured values
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableSectorWriteProtectionCommand(uint32_t user, uint32_t password_0, uint32_t pa
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 371              	 .loc 1 186 0
 372              	 .cfi_startproc
 373              	 
 374              	 
 375              	 
 376 0000 80B4     	 push {r7}
 377              	.LCFI30:
 378              	 .cfi_def_cfa_offset 4
 379              	 .cfi_offset 7,-4
 380 0002 87B0     	 sub sp,sp,#28
 381              	.LCFI31:
 382              	 .cfi_def_cfa_offset 32
 383 0004 00AF     	 add r7,sp,#0
 384              	.LCFI32:
 385              	 .cfi_def_cfa_register 7
 386 0006 F860     	 str r0,[r7,#12]
 387 0008 B960     	 str r1,[r7,#8]
 388 000a 7A60     	 str r2,[r7,#4]
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 389              	 .loc 1 189 0
 390 000c 114B     	 ldr r3,.L17
 391 000e 7B61     	 str r3,[r7,#20]
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 392              	 .loc 1 190 0
 393 0010 7B69     	 ldr r3,[r7,#20]
 394 0012 AA22     	 movs r2,#170
 395 0014 1A60     	 str r2,[r3]
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 396              	 .loc 1 191 0
 397 0016 104B     	 ldr r3,.L17+4
 398 0018 7B61     	 str r3,[r7,#20]
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 399              	 .loc 1 192 0
 400 001a 7B69     	 ldr r3,[r7,#20]
 401 001c 5522     	 movs r2,#85
 402 001e 1A60     	 str r2,[r3]
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 403              	 .loc 1 193 0
 404 0020 0E4B     	 ldr r3,.L17+8
 405 0022 7B61     	 str r3,[r7,#20]
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = user;
 406              	 .loc 1 194 0
 407 0024 7B69     	 ldr r3,[r7,#20]
 408 0026 FA68     	 ldr r2,[r7,#12]
 409 0028 1A60     	 str r2,[r3]
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 410              	 .loc 1 195 0
 411 002a 0B4B     	 ldr r3,.L17+4
 412 002c 7B61     	 str r3,[r7,#20]
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 413              	 .loc 1 196 0
 414 002e 7B69     	 ldr r3,[r7,#20]
 415 0030 BA68     	 ldr r2,[r7,#8]
 416 0032 1A60     	 str r2,[r3]
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 417              	 .loc 1 197 0
 418 0034 084B     	 ldr r3,.L17+4
 419 0036 7B61     	 str r3,[r7,#20]
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 420              	 .loc 1 198 0
 421 0038 7B69     	 ldr r3,[r7,#20]
 422 003a 7A68     	 ldr r2,[r7,#4]
 423 003c 1A60     	 str r2,[r3]
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 424              	 .loc 1 199 0
 425 003e 084B     	 ldr r3,.L17+12
 426 0040 7B61     	 str r3,[r7,#20]
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x05U;
 427              	 .loc 1 200 0
 428 0042 7B69     	 ldr r3,[r7,#20]
 429 0044 0522     	 movs r2,#5
 430 0046 1A60     	 str r2,[r3]
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 431              	 .loc 1 201 0
 432 0048 1C37     	 adds r7,r7,#28
 433              	.LCFI33:
 434              	 .cfi_def_cfa_offset 4
 435 004a BD46     	 mov sp,r7
 436              	.LCFI34:
 437              	 .cfi_def_cfa_register 13
 438              	 
 439 004c 5DF8047B 	 ldr r7,[sp],#4
 440              	.LCFI35:
 441              	 .cfi_restore 7
 442              	 .cfi_def_cfa_offset 0
 443 0050 7047     	 bx lr
 444              	.L18:
 445 0052 00BF     	 .align 2
 446              	.L17:
 447 0054 5455000C 	 .word 201348436
 448 0058 A8AA000C 	 .word 201370280
 449 005c 3C55000C 	 .word 201348412
 450 0060 5855000C 	 .word 201348440
 451              	 .cfi_endproc
 452              	.LFE154:
 454              	 .section .text.XMC_FLASH_lDisableReadProtectionCommand,"ax",%progbits
 455              	 .align 2
 456              	 .global XMC_FLASH_lDisableReadProtectionCommand
 457              	 .thumb
 458              	 .thumb_func
 460              	XMC_FLASH_lDisableReadProtectionCommand:
 461              	.LFB155:
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to temporarily disables the read protection along with write protection, when passwords 
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * configured values
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lDisableReadProtectionCommand(uint32_t password_0, uint32_t password_1)
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 462              	 .loc 1 208 0
 463              	 .cfi_startproc
 464              	 
 465              	 
 466              	 
 467 0000 80B4     	 push {r7}
 468              	.LCFI36:
 469              	 .cfi_def_cfa_offset 4
 470              	 .cfi_offset 7,-4
 471 0002 85B0     	 sub sp,sp,#20
 472              	.LCFI37:
 473              	 .cfi_def_cfa_offset 24
 474 0004 00AF     	 add r7,sp,#0
 475              	.LCFI38:
 476              	 .cfi_def_cfa_register 7
 477 0006 7860     	 str r0,[r7,#4]
 478 0008 3960     	 str r1,[r7]
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 479              	 .loc 1 211 0
 480 000a 114B     	 ldr r3,.L20
 481 000c FB60     	 str r3,[r7,#12]
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 482              	 .loc 1 212 0
 483 000e FB68     	 ldr r3,[r7,#12]
 484 0010 AA22     	 movs r2,#170
 485 0012 1A60     	 str r2,[r3]
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 486              	 .loc 1 213 0
 487 0014 0F4B     	 ldr r3,.L20+4
 488 0016 FB60     	 str r3,[r7,#12]
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 489              	 .loc 1 214 0
 490 0018 FB68     	 ldr r3,[r7,#12]
 491 001a 5522     	 movs r2,#85
 492 001c 1A60     	 str r2,[r3]
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x553cU);
 493              	 .loc 1 215 0
 494 001e 0E4B     	 ldr r3,.L20+8
 495 0020 FB60     	 str r3,[r7,#12]
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x00U;
 496              	 .loc 1 216 0
 497 0022 FB68     	 ldr r3,[r7,#12]
 498 0024 0022     	 movs r2,#0
 499 0026 1A60     	 str r2,[r3]
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 500              	 .loc 1 217 0
 501 0028 0A4B     	 ldr r3,.L20+4
 502 002a FB60     	 str r3,[r7,#12]
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = password_0;
 503              	 .loc 1 218 0
 504 002c FB68     	 ldr r3,[r7,#12]
 505 002e 7A68     	 ldr r2,[r7,#4]
 506 0030 1A60     	 str r2,[r3]
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 507              	 .loc 1 219 0
 508 0032 084B     	 ldr r3,.L20+4
 509 0034 FB60     	 str r3,[r7,#12]
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = password_1;
 510              	 .loc 1 220 0
 511 0036 FB68     	 ldr r3,[r7,#12]
 512 0038 3A68     	 ldr r2,[r7]
 513 003a 1A60     	 str r2,[r3]
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5558U);
 514              	 .loc 1 221 0
 515 003c 074B     	 ldr r3,.L20+12
 516 003e FB60     	 str r3,[r7,#12]
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x08U;
 517              	 .loc 1 222 0
 518 0040 FB68     	 ldr r3,[r7,#12]
 519 0042 0822     	 movs r2,#8
 520 0044 1A60     	 str r2,[r3]
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 521              	 .loc 1 223 0
 522 0046 1437     	 adds r7,r7,#20
 523              	.LCFI39:
 524              	 .cfi_def_cfa_offset 4
 525 0048 BD46     	 mov sp,r7
 526              	.LCFI40:
 527              	 .cfi_def_cfa_register 13
 528              	 
 529 004a 5DF8047B 	 ldr r7,[sp],#4
 530              	.LCFI41:
 531              	 .cfi_restore 7
 532              	 .cfi_def_cfa_offset 0
 533 004e 7047     	 bx lr
 534              	.L21:
 535              	 .align 2
 536              	.L20:
 537 0050 5455000C 	 .word 201348436
 538 0054 A8AA000C 	 .word 201370280
 539 0058 3C55000C 	 .word 201348412
 540 005c 5855000C 	 .word 201348440
 541              	 .cfi_endproc
 542              	.LFE155:
 544              	 .section .text.XMC_FLASH_lClearStatusCommand,"ax",%progbits
 545              	 .align 2
 546              	 .global XMC_FLASH_lClearStatusCommand
 547              	 .thumb
 548              	 .thumb_func
 550              	XMC_FLASH_lClearStatusCommand:
 551              	.LFB156:
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to clear FSR.PROG and FSR.ERASE and the error flags in FSR such as PFOPER, SQER, PROER, 
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lClearStatusCommand(void)
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 552              	 .loc 1 229 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556              	 
 557 0000 80B4     	 push {r7}
 558              	.LCFI42:
 559              	 .cfi_def_cfa_offset 4
 560              	 .cfi_offset 7,-4
 561 0002 83B0     	 sub sp,sp,#12
 562              	.LCFI43:
 563              	 .cfi_def_cfa_offset 16
 564 0004 00AF     	 add r7,sp,#0
 565              	.LCFI44:
 566              	 .cfi_def_cfa_register 7
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 567              	 .loc 1 232 0
 568 0006 054B     	 ldr r3,.L23
 569 0008 7B60     	 str r3,[r7,#4]
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xf5U;
 570              	 .loc 1 233 0
 571 000a 7B68     	 ldr r3,[r7,#4]
 572 000c F522     	 movs r2,#245
 573 000e 1A60     	 str r2,[r3]
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 574              	 .loc 1 234 0
 575 0010 0C37     	 adds r7,r7,#12
 576              	.LCFI45:
 577              	 .cfi_def_cfa_offset 4
 578 0012 BD46     	 mov sp,r7
 579              	.LCFI46:
 580              	 .cfi_def_cfa_register 13
 581              	 
 582 0014 5DF8047B 	 ldr r7,[sp],#4
 583              	.LCFI47:
 584              	 .cfi_restore 7
 585              	 .cfi_def_cfa_offset 0
 586 0018 7047     	 bx lr
 587              	.L24:
 588 001a 00BF     	 .align 2
 589              	.L23:
 590 001c 5455000C 	 .word 201348436
 591              	 .cfi_endproc
 592              	.LFE156:
 594              	 .section .text.XMC_FLASH_ClearStatus,"ax",%progbits
 595              	 .align 2
 596              	 .global XMC_FLASH_ClearStatus
 597              	 .thumb
 598              	 .thumb_func
 600              	XMC_FLASH_ClearStatus:
 601              	.LFB157:
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /**************************************************************************************************
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * API IMPLEMENTATION
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  **************************************************************************************************
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  /*
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API shall clear Program, erase and error flags(PFOPER, SQER, PROER, PFDBER, ORIER, VER) of 
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ClearStatus(void)
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 602              	 .loc 1 244 0
 603              	 .cfi_startproc
 604              	 
 605              	 
 606 0000 80B5     	 push {r7,lr}
 607              	.LCFI48:
 608              	 .cfi_def_cfa_offset 8
 609              	 .cfi_offset 7,-8
 610              	 .cfi_offset 14,-4
 611 0002 00AF     	 add r7,sp,#0
 612              	.LCFI49:
 613              	 .cfi_def_cfa_register 7
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 614              	 .loc 1 245 0
 615 0004 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 616              	 .loc 1 246 0
 617 0008 80BD     	 pop {r7,pc}
 618              	 .cfi_endproc
 619              	.LFE157:
 621 000a 00BF     	 .section .text.XMC_FLASH_GetStatus,"ax",%progbits
 622              	 .align 2
 623              	 .global XMC_FLASH_GetStatus
 624              	 .thumb
 625              	 .thumb_func
 627              	XMC_FLASH_GetStatus:
 628              	.LFB158:
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API returns the FSR register value
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** uint32_t XMC_FLASH_GetStatus(void)
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 629              	 .loc 1 252 0
 630              	 .cfi_startproc
 631              	 
 632              	 
 633              	 
 634 0000 80B4     	 push {r7}
 635              	.LCFI50:
 636              	 .cfi_def_cfa_offset 4
 637              	 .cfi_offset 7,-4
 638 0002 00AF     	 add r7,sp,#0
 639              	.LCFI51:
 640              	 .cfi_def_cfa_register 7
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   return FLASH0->FSR;
 641              	 .loc 1 253 0
 642 0004 044B     	 ldr r3,.L28
 643 0006 03F58053 	 add r3,r3,#4096
 644 000a 1033     	 adds r3,r3,#16
 645 000c 1B68     	 ldr r3,[r3]
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 646              	 .loc 1 254 0
 647 000e 1846     	 mov r0,r3
 648 0010 BD46     	 mov sp,r7
 649              	.LCFI52:
 650              	 .cfi_def_cfa_register 13
 651              	 
 652 0012 5DF8047B 	 ldr r7,[sp],#4
 653              	.LCFI53:
 654              	 .cfi_restore 7
 655              	 .cfi_def_cfa_offset 0
 656 0016 7047     	 bx lr
 657              	.L29:
 658              	 .align 2
 659              	.L28:
 660 0018 00100058 	 .word 1476399104
 661              	 .cfi_endproc
 662              	.LFE158:
 664              	 .section .text.XMC_FLASH_EnableEvent,"ax",%progbits
 665              	 .align 2
 666              	 .global XMC_FLASH_EnableEvent
 667              	 .thumb
 668              	 .thumb_func
 670              	XMC_FLASH_EnableEvent:
 671              	.LFB159:
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API enables the events which required to trigger the ISR 
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EnableEvent(const uint32_t event_msk)
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 672              	 .loc 1 260 0
 673              	 .cfi_startproc
 674              	 
 675              	 
 676              	 
 677 0000 80B4     	 push {r7}
 678              	.LCFI54:
 679              	 .cfi_def_cfa_offset 4
 680              	 .cfi_offset 7,-4
 681 0002 83B0     	 sub sp,sp,#12
 682              	.LCFI55:
 683              	 .cfi_def_cfa_offset 16
 684 0004 00AF     	 add r7,sp,#0
 685              	.LCFI56:
 686              	 .cfi_def_cfa_register 7
 687 0006 7860     	 str r0,[r7,#4]
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON |= event_msk;
 688              	 .loc 1 261 0
 689 0008 0949     	 ldr r1,.L31
 690 000a 094B     	 ldr r3,.L31
 691 000c 03F58053 	 add r3,r3,#4096
 692 0010 1433     	 adds r3,r3,#20
 693 0012 1A68     	 ldr r2,[r3]
 694 0014 7B68     	 ldr r3,[r7,#4]
 695 0016 1A43     	 orrs r2,r2,r3
 696 0018 01F58053 	 add r3,r1,#4096
 697 001c 1433     	 adds r3,r3,#20
 698 001e 1968     	 ldr r1,[r3]
 699 0020 0021     	 movs r1,#0
 700 0022 0A43     	 orrs r2,r2,r1
 701 0024 1A60     	 str r2,[r3]
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 702              	 .loc 1 262 0
 703 0026 0C37     	 adds r7,r7,#12
 704              	.LCFI57:
 705              	 .cfi_def_cfa_offset 4
 706 0028 BD46     	 mov sp,r7
 707              	.LCFI58:
 708              	 .cfi_def_cfa_register 13
 709              	 
 710 002a 5DF8047B 	 ldr r7,[sp],#4
 711              	.LCFI59:
 712              	 .cfi_restore 7
 713              	 .cfi_def_cfa_offset 0
 714 002e 7047     	 bx lr
 715              	.L32:
 716              	 .align 2
 717              	.L31:
 718 0030 00100058 	 .word 1476399104
 719              	 .cfi_endproc
 720              	.LFE159:
 722              	 .section .text.XMC_FLASH_DisableEvent,"ax",%progbits
 723              	 .align 2
 724              	 .global XMC_FLASH_DisableEvent
 725              	 .thumb
 726              	 .thumb_func
 728              	XMC_FLASH_DisableEvent:
 729              	.LFB160:
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API disables the event generation 
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_DisableEvent(const uint32_t event_msk)
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 730              	 .loc 1 268 0
 731              	 .cfi_startproc
 732              	 
 733              	 
 734              	 
 735 0000 80B4     	 push {r7}
 736              	.LCFI60:
 737              	 .cfi_def_cfa_offset 4
 738              	 .cfi_offset 7,-4
 739 0002 83B0     	 sub sp,sp,#12
 740              	.LCFI61:
 741              	 .cfi_def_cfa_offset 16
 742 0004 00AF     	 add r7,sp,#0
 743              	.LCFI62:
 744              	 .cfi_def_cfa_register 7
 745 0006 7860     	 str r0,[r7,#4]
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   FLASH0->FCON &= ~event_msk;
 746              	 .loc 1 269 0
 747 0008 0A49     	 ldr r1,.L34
 748 000a 0A4B     	 ldr r3,.L34
 749 000c 03F58053 	 add r3,r3,#4096
 750 0010 1433     	 adds r3,r3,#20
 751 0012 1A68     	 ldr r2,[r3]
 752 0014 7B68     	 ldr r3,[r7,#4]
 753 0016 DB43     	 mvns r3,r3
 754 0018 1A40     	 ands r2,r2,r3
 755 001a 01F58053 	 add r3,r1,#4096
 756 001e 1433     	 adds r3,r3,#20
 757 0020 1968     	 ldr r1,[r3]
 758 0022 0021     	 movs r1,#0
 759 0024 0A43     	 orrs r2,r2,r1
 760 0026 1A60     	 str r2,[r3]
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 761              	 .loc 1 270 0
 762 0028 0C37     	 adds r7,r7,#12
 763              	.LCFI63:
 764              	 .cfi_def_cfa_offset 4
 765 002a BD46     	 mov sp,r7
 766              	.LCFI64:
 767              	 .cfi_def_cfa_register 13
 768              	 
 769 002c 5DF8047B 	 ldr r7,[sp],#4
 770              	.LCFI65:
 771              	 .cfi_restore 7
 772              	 .cfi_def_cfa_offset 0
 773 0030 7047     	 bx lr
 774              	.L35:
 775 0032 00BF     	 .align 2
 776              	.L34:
 777 0034 00100058 	 .word 1476399104
 778              	 .cfi_endproc
 779              	.LFE160:
 781              	 .section .text.XMC_FLASH_ProgramPage,"ax",%progbits
 782              	 .align 2
 783              	 .global XMC_FLASH_ProgramPage
 784              	 .thumb
 785              	 .thumb_func
 787              	XMC_FLASH_ProgramPage:
 788              	.LFB161:
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API write the PFLASH page
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ProgramPage(uint32_t *address, const uint32_t *data)
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 789              	 .loc 1 276 0
 790              	 .cfi_startproc
 791              	 
 792              	 
 793 0000 80B5     	 push {r7,lr}
 794              	.LCFI66:
 795              	 .cfi_def_cfa_offset 8
 796              	 .cfi_offset 7,-8
 797              	 .cfi_offset 14,-4
 798 0002 84B0     	 sub sp,sp,#16
 799              	.LCFI67:
 800              	 .cfi_def_cfa_offset 24
 801 0004 00AF     	 add r7,sp,#0
 802              	.LCFI68:
 803              	 .cfi_def_cfa_register 7
 804 0006 7860     	 str r0,[r7,#4]
 805 0008 3960     	 str r1,[r7]
 277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();  
 806              	 .loc 1 279 0
 807 000a FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 808              	 .loc 1 280 0
 809 000e FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < XMC_FLASH_WORDS_PER_PAGE; idx += 2U)
 810              	 .loc 1 282 0
 811 0012 0023     	 movs r3,#0
 812 0014 FB60     	 str r3,[r7,#12]
 813 0016 11E0     	 b .L37
 814              	.L38:
 283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(data[idx], data[idx + 1U]);
 815              	 .loc 1 284 0 discriminator 3
 816 0018 FB68     	 ldr r3,[r7,#12]
 817 001a 9B00     	 lsls r3,r3,#2
 818 001c 3A68     	 ldr r2,[r7]
 819 001e 1344     	 add r3,r3,r2
 820 0020 1968     	 ldr r1,[r3]
 821 0022 FB68     	 ldr r3,[r7,#12]
 822 0024 0133     	 adds r3,r3,#1
 823 0026 9B00     	 lsls r3,r3,#2
 824 0028 3A68     	 ldr r2,[r7]
 825 002a 1344     	 add r3,r3,r2
 826 002c 1B68     	 ldr r3,[r3]
 827 002e 0846     	 mov r0,r1
 828 0030 1946     	 mov r1,r3
 829 0032 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 830              	 .loc 1 282 0 discriminator 3
 831 0036 FB68     	 ldr r3,[r7,#12]
 832 0038 0233     	 adds r3,r3,#2
 833 003a FB60     	 str r3,[r7,#12]
 834              	.L37:
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 835              	 .loc 1 282 0 is_stmt 0 discriminator 1
 836 003c FB68     	 ldr r3,[r7,#12]
 837 003e 3F2B     	 cmp r3,#63
 838 0040 EAD9     	 bls .L38
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   }
 286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWritePageCommand(address);    
 839              	 .loc 1 287 0 is_stmt 1
 840 0042 7868     	 ldr r0,[r7,#4]
 841 0044 FFF7FEFF 	 bl XMC_FLASH_lWritePageCommand
 288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 842              	 .loc 1 290 0
 843 0048 00BF     	 nop
 844              	.L39:
 845              	 .loc 1 290 0 is_stmt 0 discriminator 1
 846 004a 064B     	 ldr r3,.L40
 847 004c 03F58053 	 add r3,r3,#4096
 848 0050 1033     	 adds r3,r3,#16
 849 0052 1B68     	 ldr r3,[r3]
 850 0054 03F00103 	 and r3,r3,#1
 851 0058 002B     	 cmp r3,#0
 852 005a F6D1     	 bne .L39
 291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 853              	 .loc 1 291 0 is_stmt 1
 854 005c 1037     	 adds r7,r7,#16
 855              	.LCFI69:
 856              	 .cfi_def_cfa_offset 8
 857 005e BD46     	 mov sp,r7
 858              	.LCFI70:
 859              	 .cfi_def_cfa_register 13
 860              	 
 861 0060 80BD     	 pop {r7,pc}
 862              	.L41:
 863 0062 00BF     	 .align 2
 864              	.L40:
 865 0064 00100058 	 .word 1476399104
 866              	 .cfi_endproc
 867              	.LFE161:
 869              	 .section .text.XMC_FLASH_EraseSector,"ax",%progbits
 870              	 .align 2
 871              	 .global XMC_FLASH_EraseSector
 872              	 .thumb
 873              	 .thumb_func
 875              	XMC_FLASH_EraseSector:
 876              	.LFB162:
 292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API erase the logical sector
 295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseSector(uint32_t *address)
 297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 877              	 .loc 1 297 0
 878              	 .cfi_startproc
 879              	 
 880              	 
 881 0000 80B5     	 push {r7,lr}
 882              	.LCFI71:
 883              	 .cfi_def_cfa_offset 8
 884              	 .cfi_offset 7,-8
 885              	 .cfi_offset 14,-4
 886 0002 82B0     	 sub sp,sp,#8
 887              	.LCFI72:
 888              	 .cfi_def_cfa_offset 16
 889 0004 00AF     	 add r7,sp,#0
 890              	.LCFI73:
 891              	 .cfi_def_cfa_register 7
 892 0006 7860     	 str r0,[r7,#4]
 298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 893              	 .loc 1 298 0
 894 0008 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEraseSectorCommand(address);
 895              	 .loc 1 299 0
 896 000c 7868     	 ldr r0,[r7,#4]
 897 000e FFF7FEFF 	 bl XMC_FLASH_lEraseSectorCommand
 300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 898              	 .loc 1 302 0
 899 0012 00BF     	 nop
 900              	.L43:
 901              	 .loc 1 302 0 is_stmt 0 discriminator 1
 902 0014 054B     	 ldr r3,.L44
 903 0016 03F58053 	 add r3,r3,#4096
 904 001a 1033     	 adds r3,r3,#16
 905 001c 1B68     	 ldr r3,[r3]
 906 001e 03F00103 	 and r3,r3,#1
 907 0022 002B     	 cmp r3,#0
 908 0024 F6D1     	 bne .L43
 303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 909              	 .loc 1 303 0 is_stmt 1
 910 0026 0837     	 adds r7,r7,#8
 911              	.LCFI74:
 912              	 .cfi_def_cfa_offset 8
 913 0028 BD46     	 mov sp,r7
 914              	.LCFI75:
 915              	 .cfi_def_cfa_register 13
 916              	 
 917 002a 80BD     	 pop {r7,pc}
 918              	.L45:
 919              	 .align 2
 920              	.L44:
 921 002c 00100058 	 .word 1476399104
 922              	 .cfi_endproc
 923              	.LFE162:
 925              	 .section .text.XMC_FLASH_lErasePhysicalSectorCommand,"ax",%progbits
 926              	 .align 2
 927              	 .global XMC_FLASH_lErasePhysicalSectorCommand
 928              	 .thumb
 929              	 .thumb_func
 931              	XMC_FLASH_lErasePhysicalSectorCommand:
 932              	.LFB163:
 304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector which is starting with the specified address
 307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lErasePhysicalSectorCommand(uint32_t *sector_start_address)
 309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 933              	 .loc 1 309 0
 934              	 .cfi_startproc
 935              	 
 936              	 
 937              	 
 938 0000 80B4     	 push {r7}
 939              	.LCFI76:
 940              	 .cfi_def_cfa_offset 4
 941              	 .cfi_offset 7,-4
 942 0002 85B0     	 sub sp,sp,#20
 943              	.LCFI77:
 944              	 .cfi_def_cfa_offset 24
 945 0004 00AF     	 add r7,sp,#0
 946              	.LCFI78:
 947              	 .cfi_def_cfa_register 7
 948 0006 7860     	 str r0,[r7,#4]
 310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 949              	 .loc 1 312 0
 950 0008 114B     	 ldr r3,.L47
 951 000a FB60     	 str r3,[r7,#12]
 313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 952              	 .loc 1 313 0
 953 000c FB68     	 ldr r3,[r7,#12]
 954 000e AA22     	 movs r2,#170
 955 0010 1A60     	 str r2,[r3]
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 956              	 .loc 1 314 0
 957 0012 104B     	 ldr r3,.L47+4
 958 0014 FB60     	 str r3,[r7,#12]
 315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 959              	 .loc 1 315 0
 960 0016 FB68     	 ldr r3,[r7,#12]
 961 0018 5522     	 movs r2,#85
 962 001a 1A60     	 str r2,[r3]
 316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 963              	 .loc 1 316 0
 964 001c 0C4B     	 ldr r3,.L47
 965 001e FB60     	 str r3,[r7,#12]
 317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 966              	 .loc 1 317 0
 967 0020 FB68     	 ldr r3,[r7,#12]
 968 0022 8022     	 movs r2,#128
 969 0024 1A60     	 str r2,[r3]
 318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 970              	 .loc 1 318 0
 971 0026 0A4B     	 ldr r3,.L47
 972 0028 FB60     	 str r3,[r7,#12]
 319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 973              	 .loc 1 319 0
 974 002a FB68     	 ldr r3,[r7,#12]
 975 002c AA22     	 movs r2,#170
 976 002e 1A60     	 str r2,[r3]
 320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 977              	 .loc 1 320 0
 978 0030 084B     	 ldr r3,.L47+4
 979 0032 FB60     	 str r3,[r7,#12]
 321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 980              	 .loc 1 321 0
 981 0034 FB68     	 ldr r3,[r7,#12]
 982 0036 5522     	 movs r2,#85
 983 0038 1A60     	 str r2,[r3]
 322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = sector_start_address;
 984              	 .loc 1 322 0
 985 003a 7B68     	 ldr r3,[r7,#4]
 986 003c FB60     	 str r3,[r7,#12]
 323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 987              	 .loc 1 323 0
 988 003e FB68     	 ldr r3,[r7,#12]
 989 0040 4022     	 movs r2,#64
 990 0042 1A60     	 str r2,[r3]
 324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 991              	 .loc 1 324 0
 992 0044 1437     	 adds r7,r7,#20
 993              	.LCFI79:
 994              	 .cfi_def_cfa_offset 4
 995 0046 BD46     	 mov sp,r7
 996              	.LCFI80:
 997              	 .cfi_def_cfa_register 13
 998              	 
 999 0048 5DF8047B 	 ldr r7,[sp],#4
 1000              	.LCFI81:
 1001              	 .cfi_restore 7
 1002              	 .cfi_def_cfa_offset 0
 1003 004c 7047     	 bx lr
 1004              	.L48:
 1005 004e 00BF     	 .align 2
 1006              	.L47:
 1007 0050 5455000C 	 .word 201348436
 1008 0054 A8AA000C 	 .word 201370280
 1009              	 .cfi_endproc
 1010              	.LFE163:
 1012              	 .section .text.XMC_FLASH_lRepairPhysicalSectorCommand,"ax",%progbits
 1013              	 .align 2
 1014              	 .global XMC_FLASH_lRepairPhysicalSectorCommand
 1015              	 .thumb
 1016              	 .thumb_func
 1018              	XMC_FLASH_lRepairPhysicalSectorCommand:
 1019              	.LFB164:
 325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to erase physical sector-4 which is starting with the specified address
 328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This command is only available if PROCON1.PRS = 1.
 329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_lRepairPhysicalSectorCommand(void)
 331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1020              	 .loc 1 331 0
 1021              	 .cfi_startproc
 1022              	 
 1023              	 
 1024              	 
 1025 0000 80B4     	 push {r7}
 1026              	.LCFI82:
 1027              	 .cfi_def_cfa_offset 4
 1028              	 .cfi_offset 7,-4
 1029 0002 83B0     	 sub sp,sp,#12
 1030              	.LCFI83:
 1031              	 .cfi_def_cfa_offset 16
 1032 0004 00AF     	 add r7,sp,#0
 1033              	.LCFI84:
 1034              	 .cfi_def_cfa_register 7
 332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1035              	 .loc 1 334 0
 1036 0006 114B     	 ldr r3,.L50
 1037 0008 7B60     	 str r3,[r7,#4]
 335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1038              	 .loc 1 335 0
 1039 000a 7B68     	 ldr r3,[r7,#4]
 1040 000c AA22     	 movs r2,#170
 1041 000e 1A60     	 str r2,[r3]
 336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1042              	 .loc 1 336 0
 1043 0010 0F4B     	 ldr r3,.L50+4
 1044 0012 7B60     	 str r3,[r7,#4]
 337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1045              	 .loc 1 337 0
 1046 0014 7B68     	 ldr r3,[r7,#4]
 1047 0016 5522     	 movs r2,#85
 1048 0018 1A60     	 str r2,[r3]
 338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1049              	 .loc 1 338 0
 1050 001a 0C4B     	 ldr r3,.L50
 1051 001c 7B60     	 str r3,[r7,#4]
 339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 1052              	 .loc 1 339 0
 1053 001e 7B68     	 ldr r3,[r7,#4]
 1054 0020 8022     	 movs r2,#128
 1055 0022 1A60     	 str r2,[r3]
 340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1056              	 .loc 1 340 0
 1057 0024 094B     	 ldr r3,.L50
 1058 0026 7B60     	 str r3,[r7,#4]
 341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1059              	 .loc 1 341 0
 1060 0028 7B68     	 ldr r3,[r7,#4]
 1061 002a AA22     	 movs r2,#170
 1062 002c 1A60     	 str r2,[r3]
 342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1063              	 .loc 1 342 0
 1064 002e 084B     	 ldr r3,.L50+4
 1065 0030 7B60     	 str r3,[r7,#4]
 343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1066              	 .loc 1 343 0
 1067 0032 7B68     	 ldr r3,[r7,#4]
 1068 0034 5522     	 movs r2,#85
 1069 0036 1A60     	 str r2,[r3]
 344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = XMC_FLASH_PHY_SECTOR_4;
 1070              	 .loc 1 344 0
 1071 0038 064B     	 ldr r3,.L50+8
 1072 003a 7B60     	 str r3,[r7,#4]
 345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x40U;
 1073              	 .loc 1 345 0
 1074 003c 7B68     	 ldr r3,[r7,#4]
 1075 003e 4022     	 movs r2,#64
 1076 0040 1A60     	 str r2,[r3]
 346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1077              	 .loc 1 346 0
 1078 0042 0C37     	 adds r7,r7,#12
 1079              	.LCFI85:
 1080              	 .cfi_def_cfa_offset 4
 1081 0044 BD46     	 mov sp,r7
 1082              	.LCFI86:
 1083              	 .cfi_def_cfa_register 13
 1084              	 
 1085 0046 5DF8047B 	 ldr r7,[sp],#4
 1086              	.LCFI87:
 1087              	 .cfi_restore 7
 1088              	 .cfi_def_cfa_offset 0
 1089 004a 7047     	 bx lr
 1090              	.L51:
 1091              	 .align 2
 1092              	.L50:
 1093 004c 5455000C 	 .word 201348436
 1094 0050 A8AA000C 	 .word 201370280
 1095 0054 0000010C 	 .word 201392128
 1096              	 .cfi_endproc
 1097              	.LFE164:
 1099              	 .section .text.XMC_FLASH_ErasePhysicalSector,"ax",%progbits
 1100              	 .align 2
 1101              	 .global XMC_FLASH_ErasePhysicalSector
 1102              	 .thumb
 1103              	 .thumb_func
 1105              	XMC_FLASH_ErasePhysicalSector:
 1106              	.LFB165:
 347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  /* 
 349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   * This API erase the physical sector
 350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   */
 351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ErasePhysicalSector(uint32_t *address)
 352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1107              	 .loc 1 352 0
 1108              	 .cfi_startproc
 1109              	 
 1110              	 
 1111 0000 80B5     	 push {r7,lr}
 1112              	.LCFI88:
 1113              	 .cfi_def_cfa_offset 8
 1114              	 .cfi_offset 7,-8
 1115              	 .cfi_offset 14,-4
 1116 0002 82B0     	 sub sp,sp,#8
 1117              	.LCFI89:
 1118              	 .cfi_def_cfa_offset 16
 1119 0004 00AF     	 add r7,sp,#0
 1120              	.LCFI90:
 1121              	 .cfi_def_cfa_register 7
 1122 0006 7860     	 str r0,[r7,#4]
 353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1123              	 .loc 1 353 0
 1124 0008 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lErasePhysicalSectorCommand(address);
 1125              	 .loc 1 354 0
 1126 000c 7868     	 ldr r0,[r7,#4]
 1127 000e FFF7FEFF 	 bl XMC_FLASH_lErasePhysicalSectorCommand
 355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1128              	 .loc 1 357 0
 1129 0012 00BF     	 nop
 1130              	.L53:
 1131              	 .loc 1 357 0 is_stmt 0 discriminator 1
 1132 0014 054B     	 ldr r3,.L54
 1133 0016 03F58053 	 add r3,r3,#4096
 1134 001a 1033     	 adds r3,r3,#16
 1135 001c 1B68     	 ldr r3,[r3]
 1136 001e 03F00103 	 and r3,r3,#1
 1137 0022 002B     	 cmp r3,#0
 1138 0024 F6D1     	 bne .L53
 358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1139              	 .loc 1 358 0 is_stmt 1
 1140 0026 0837     	 adds r7,r7,#8
 1141              	.LCFI91:
 1142              	 .cfi_def_cfa_offset 8
 1143 0028 BD46     	 mov sp,r7
 1144              	.LCFI92:
 1145              	 .cfi_def_cfa_register 13
 1146              	 
 1147 002a 80BD     	 pop {r7,pc}
 1148              	.L55:
 1149              	 .align 2
 1150              	.L54:
 1151 002c 00100058 	 .word 1476399104
 1152              	 .cfi_endproc
 1153              	.LFE165:
 1155              	 .section .text.XMC_FLASH_RepairPhysicalSector,"ax",%progbits
 1156              	 .align 2
 1157              	 .global XMC_FLASH_RepairPhysicalSector
 1158              	 .thumb
 1159              	 .thumb_func
 1161              	XMC_FLASH_RepairPhysicalSector:
 1162              	.LFB166:
 359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API repair the physical sector
 362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_RepairPhysicalSector(void)
 364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1163              	 .loc 1 364 0
 1164              	 .cfi_startproc
 1165              	 
 1166              	 
 1167 0000 80B5     	 push {r7,lr}
 1168              	.LCFI93:
 1169              	 .cfi_def_cfa_offset 8
 1170              	 .cfi_offset 7,-8
 1171              	 .cfi_offset 14,-4
 1172 0002 00AF     	 add r7,sp,#0
 1173              	.LCFI94:
 1174              	 .cfi_def_cfa_register 7
 365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lClearStatusCommand();
 1175              	 .loc 1 365 0
 1176 0004 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lRepairPhysicalSectorCommand();
 1177              	 .loc 1 366 0
 1178 0008 FFF7FEFF 	 bl XMC_FLASH_lRepairPhysicalSectorCommand
 367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1179              	 .loc 1 367 0
 1180 000c 80BD     	 pop {r7,pc}
 1181              	 .cfi_endproc
 1182              	.LFE166:
 1184 000e 00BF     	 .section .text.XMC_FLASH_EraseUCB,"ax",%progbits
 1185              	 .align 2
 1186              	 .global XMC_FLASH_EraseUCB
 1187              	 .thumb
 1188              	 .thumb_func
 1190              	XMC_FLASH_EraseUCB:
 1191              	.LFB167:
 368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to erase UCB sector which is starting with the specified address
 371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_EraseUCB(uint32_t *ucb_sector_start_address)
 373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1192              	 .loc 1 373 0
 1193              	 .cfi_startproc
 1194              	 
 1195              	 
 1196              	 
 1197 0000 80B4     	 push {r7}
 1198              	.LCFI95:
 1199              	 .cfi_def_cfa_offset 4
 1200              	 .cfi_offset 7,-4
 1201 0002 85B0     	 sub sp,sp,#20
 1202              	.LCFI96:
 1203              	 .cfi_def_cfa_offset 24
 1204 0004 00AF     	 add r7,sp,#0
 1205              	.LCFI97:
 1206              	 .cfi_def_cfa_register 7
 1207 0006 7860     	 str r0,[r7,#4]
 374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1208              	 .loc 1 376 0
 1209 0008 164B     	 ldr r3,.L59
 1210 000a FB60     	 str r3,[r7,#12]
 377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1211              	 .loc 1 377 0
 1212 000c FB68     	 ldr r3,[r7,#12]
 1213 000e AA22     	 movs r2,#170
 1214 0010 1A60     	 str r2,[r3]
 378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1215              	 .loc 1 378 0
 1216 0012 154B     	 ldr r3,.L59+4
 1217 0014 FB60     	 str r3,[r7,#12]
 379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1218              	 .loc 1 379 0
 1219 0016 FB68     	 ldr r3,[r7,#12]
 1220 0018 5522     	 movs r2,#85
 1221 001a 1A60     	 str r2,[r3]
 380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1222              	 .loc 1 380 0
 1223 001c 114B     	 ldr r3,.L59
 1224 001e FB60     	 str r3,[r7,#12]
 381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x80U;
 1225              	 .loc 1 381 0
 1226 0020 FB68     	 ldr r3,[r7,#12]
 1227 0022 8022     	 movs r2,#128
 1228 0024 1A60     	 str r2,[r3]
 382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1229              	 .loc 1 382 0
 1230 0026 0F4B     	 ldr r3,.L59
 1231 0028 FB60     	 str r3,[r7,#12]
 383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xaaU;
 1232              	 .loc 1 383 0
 1233 002a FB68     	 ldr r3,[r7,#12]
 1234 002c AA22     	 movs r2,#170
 1235 002e 1A60     	 str r2,[r3]
 384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0xaaa8U);
 1236              	 .loc 1 384 0
 1237 0030 0D4B     	 ldr r3,.L59+4
 1238 0032 FB60     	 str r3,[r7,#12]
 385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x55U;
 1239              	 .loc 1 385 0
 1240 0034 FB68     	 ldr r3,[r7,#12]
 1241 0036 5522     	 movs r2,#85
 1242 0038 1A60     	 str r2,[r3]
 386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = ucb_sector_start_address;
 1243              	 .loc 1 386 0
 1244 003a 7B68     	 ldr r3,[r7,#4]
 1245 003c FB60     	 str r3,[r7,#12]
 387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xc0U;
 1246              	 .loc 1 387 0
 1247 003e FB68     	 ldr r3,[r7,#12]
 1248 0040 C022     	 movs r2,#192
 1249 0042 1A60     	 str r2,[r3]
 388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1250              	 .loc 1 390 0
 1251 0044 00BF     	 nop
 1252              	.L58:
 1253              	 .loc 1 390 0 is_stmt 0 discriminator 1
 1254 0046 094B     	 ldr r3,.L59+8
 1255 0048 03F58053 	 add r3,r3,#4096
 1256 004c 1033     	 adds r3,r3,#16
 1257 004e 1B68     	 ldr r3,[r3]
 1258 0050 03F00103 	 and r3,r3,#1
 1259 0054 002B     	 cmp r3,#0
 1260 0056 F6D1     	 bne .L58
 391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1261              	 .loc 1 391 0 is_stmt 1
 1262 0058 1437     	 adds r7,r7,#20
 1263              	.LCFI98:
 1264              	 .cfi_def_cfa_offset 4
 1265 005a BD46     	 mov sp,r7
 1266              	.LCFI99:
 1267              	 .cfi_def_cfa_register 13
 1268              	 
 1269 005c 5DF8047B 	 ldr r7,[sp],#4
 1270              	.LCFI100:
 1271              	 .cfi_restore 7
 1272              	 .cfi_def_cfa_offset 0
 1273 0060 7047     	 bx lr
 1274              	.L60:
 1275 0062 00BF     	 .align 2
 1276              	.L59:
 1277 0064 5455000C 	 .word 201348436
 1278 0068 A8AA000C 	 .word 201370280
 1279 006c 00100058 	 .word 1476399104
 1280              	 .cfi_endproc
 1281              	.LFE167:
 1283              	 .section .text.XMC_FLASH_Reset,"ax",%progbits
 1284              	 .align 2
 1285              	 .global XMC_FLASH_Reset
 1286              	 .thumb
 1287              	 .thumb_func
 1289              	XMC_FLASH_Reset:
 1290              	.LFB168:
 392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to reset the status of the PFLASH
 395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_Reset(void)
 397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1291              	 .loc 1 397 0
 1292              	 .cfi_startproc
 1293              	 
 1294              	 
 1295              	 
 1296 0000 80B4     	 push {r7}
 1297              	.LCFI101:
 1298              	 .cfi_def_cfa_offset 4
 1299              	 .cfi_offset 7,-4
 1300 0002 83B0     	 sub sp,sp,#12
 1301              	.LCFI102:
 1302              	 .cfi_def_cfa_offset 16
 1303 0004 00AF     	 add r7,sp,#0
 1304              	.LCFI103:
 1305              	 .cfi_def_cfa_register 7
 398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1306              	 .loc 1 400 0
 1307 0006 054B     	 ldr r3,.L62
 1308 0008 7B60     	 str r3,[r7,#4]
 401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0xf0U;
 1309              	 .loc 1 401 0
 1310 000a 7B68     	 ldr r3,[r7,#4]
 1311 000c F022     	 movs r2,#240
 1312 000e 1A60     	 str r2,[r3]
 402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1313              	 .loc 1 402 0
 1314 0010 0C37     	 adds r7,r7,#12
 1315              	.LCFI104:
 1316              	 .cfi_def_cfa_offset 4
 1317 0012 BD46     	 mov sp,r7
 1318              	.LCFI105:
 1319              	 .cfi_def_cfa_register 13
 1320              	 
 1321 0014 5DF8047B 	 ldr r7,[sp],#4
 1322              	.LCFI106:
 1323              	 .cfi_restore 7
 1324              	 .cfi_def_cfa_offset 0
 1325 0018 7047     	 bx lr
 1326              	.L63:
 1327 001a 00BF     	 .align 2
 1328              	.L62:
 1329 001c 5455000C 	 .word 201348436
 1330              	 .cfi_endproc
 1331              	.LFE168:
 1333              	 .section .text.XMC_FLASH_InstallBMI,"ax",%progbits
 1334              	 .align 2
 1335              	 .global XMC_FLASH_InstallBMI
 1336              	 .thumb
 1337              	 .thumb_func
 1339              	XMC_FLASH_InstallBMI:
 1340              	.LFB169:
 403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** #define BMI_STRING_BYTE_CNT 30
 405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallBMI(XMC_FLASH_BMI_STRING_t *const bmi_string)
 407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1341              	 .loc 1 407 0
 1342              	 .cfi_startproc
 1343              	 
 1344              	 
 1345 0000 80B5     	 push {r7,lr}
 1346              	.LCFI107:
 1347              	 .cfi_def_cfa_offset 8
 1348              	 .cfi_offset 7,-8
 1349              	 .cfi_offset 14,-4
 1350 0002 86B0     	 sub sp,sp,#24
 1351              	.LCFI108:
 1352              	 .cfi_def_cfa_offset 32
 1353 0004 00AF     	 add r7,sp,#0
 1354              	.LCFI109:
 1355              	 .cfi_def_cfa_register 7
 1356 0006 7860     	 str r0,[r7,#4]
 408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   uint32_t checksum = 0;
 1357              	 .loc 1 408 0
 1358 0008 0023     	 movs r3,#0
 1359 000a 7B61     	 str r3,[r7,#20]
 1360              	.LBB2:
 409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1361              	 .loc 1 409 0
 1362 000c 0023     	 movs r3,#0
 1363 000e 3B61     	 str r3,[r7,#16]
 1364 0010 0AE0     	 b .L65
 1365              	.L66:
 410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 	checksum ^= ((const uint8_t *)bmi_string)[i];
 1366              	 .loc 1 411 0 discriminator 3
 1367 0012 3B69     	 ldr r3,[r7,#16]
 1368 0014 7A68     	 ldr r2,[r7,#4]
 1369 0016 1344     	 add r3,r3,r2
 1370 0018 1B78     	 ldrb r3,[r3]
 1371 001a 1A46     	 mov r2,r3
 1372 001c 7B69     	 ldr r3,[r7,#20]
 1373 001e 5340     	 eors r3,r3,r2
 1374 0020 7B61     	 str r3,[r7,#20]
 409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1375              	 .loc 1 409 0 discriminator 3
 1376 0022 3B69     	 ldr r3,[r7,#16]
 1377 0024 0133     	 adds r3,r3,#1
 1378 0026 3B61     	 str r3,[r7,#16]
 1379              	.L65:
 409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   for (int i = 0; i < BMI_STRING_BYTE_CNT; ++i)
 1380              	 .loc 1 409 0 is_stmt 0 discriminator 1
 1381 0028 3B69     	 ldr r3,[r7,#16]
 1382 002a 1D2B     	 cmp r3,#29
 1383 002c F1DD     	 ble .L66
 1384              	.LBE2:
 412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   }
 413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   bmi_string->reserved = checksum;
 1385              	 .loc 1 414 0 is_stmt 1
 1386 002e 7B68     	 ldr r3,[r7,#4]
 1387 0030 7A69     	 ldr r2,[r7,#20]
 1388 0032 C3F81E20 	 str r2,[r3,#30]
 415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1389              	 .loc 1 416 0
 1390 0036 FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[0], ((const uint32_t *)bmi_string)[1]);
 1391              	 .loc 1 418 0
 1392 003a 7B68     	 ldr r3,[r7,#4]
 1393 003c 1A68     	 ldr r2,[r3]
 1394 003e 7B68     	 ldr r3,[r7,#4]
 1395 0040 0433     	 adds r3,r3,#4
 1396 0042 1B68     	 ldr r3,[r3]
 1397 0044 1046     	 mov r0,r2
 1398 0046 1946     	 mov r1,r3
 1399 0048 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[2], ((const uint32_t *)bmi_string)[3]);
 1400              	 .loc 1 419 0
 1401 004c 7B68     	 ldr r3,[r7,#4]
 1402 004e 0833     	 adds r3,r3,#8
 1403 0050 1A68     	 ldr r2,[r3]
 1404 0052 7B68     	 ldr r3,[r7,#4]
 1405 0054 0C33     	 adds r3,r3,#12
 1406 0056 1B68     	 ldr r3,[r3]
 1407 0058 1046     	 mov r0,r2
 1408 005a 1946     	 mov r1,r3
 1409 005c FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[4], ((const uint32_t *)bmi_string)[5]);
 1410              	 .loc 1 420 0
 1411 0060 7B68     	 ldr r3,[r7,#4]
 1412 0062 1033     	 adds r3,r3,#16
 1413 0064 1A68     	 ldr r2,[r3]
 1414 0066 7B68     	 ldr r3,[r7,#4]
 1415 0068 1433     	 adds r3,r3,#20
 1416 006a 1B68     	 ldr r3,[r3]
 1417 006c 1046     	 mov r0,r2
 1418 006e 1946     	 mov r1,r3
 1419 0070 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[6], ((const uint32_t *)bmi_string)[7]);
 1420              	 .loc 1 421 0
 1421 0074 7B68     	 ldr r3,[r7,#4]
 1422 0076 1833     	 adds r3,r3,#24
 1423 0078 1A68     	 ldr r2,[r3]
 1424 007a 7B68     	 ldr r3,[r7,#4]
 1425 007c 1C33     	 adds r3,r3,#28
 1426 007e 1B68     	 ldr r3,[r3]
 1427 0080 1046     	 mov r0,r2
 1428 0082 1946     	 mov r1,r3
 1429 0084 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(((const uint32_t *)bmi_string)[8], 0);
 1430              	 .loc 1 422 0
 1431 0088 7B68     	 ldr r3,[r7,#4]
 1432 008a 2033     	 adds r3,r3,#32
 1433 008c 1B68     	 ldr r3,[r3]
 1434 008e 1846     	 mov r0,r3
 1435 0090 0021     	 movs r1,#0
 1436 0092 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 1437              	.LBB3:
 423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   for (uint32_t idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_BMI_STRING_WORDS); idx += 2U)
 1438              	 .loc 1 424 0
 1439 0096 0023     	 movs r3,#0
 1440 0098 FB60     	 str r3,[r7,#12]
 1441 009a 06E0     	 b .L67
 1442              	.L68:
 425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1443              	 .loc 1 426 0 discriminator 3
 1444 009c 0020     	 movs r0,#0
 1445 009e 0021     	 movs r1,#0
 1446 00a0 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 1447              	 .loc 1 424 0 discriminator 3
 1448 00a4 FB68     	 ldr r3,[r7,#12]
 1449 00a6 0233     	 adds r3,r3,#2
 1450 00a8 FB60     	 str r3,[r7,#12]
 1451              	.L67:
 424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 1452              	 .loc 1 424 0 is_stmt 0 discriminator 1
 1453 00aa FB68     	 ldr r3,[r7,#12]
 1454 00ac 352B     	 cmp r3,#53
 1455 00ae F5D9     	 bls .L68
 1456              	.LBE3:
 427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   }
 428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB2 + XMC_FLASH_BYTES_PER_PAGE))
 1457              	 .loc 1 429 0 is_stmt 1
 1458 00b0 0748     	 ldr r0,.L70
 1459 00b2 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1460              	 .loc 1 432 0
 1461 00b6 00BF     	 nop
 1462              	.L69:
 1463              	 .loc 1 432 0 is_stmt 0 discriminator 1
 1464 00b8 064B     	 ldr r3,.L70+4
 1465 00ba 03F58053 	 add r3,r3,#4096
 1466 00be 1033     	 adds r3,r3,#16
 1467 00c0 1B68     	 ldr r3,[r3]
 1468 00c2 03F00103 	 and r3,r3,#1
 1469 00c6 002B     	 cmp r3,#0
 1470 00c8 F6D1     	 bne .L69
 433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1471              	 .loc 1 433 0 is_stmt 1
 1472 00ca 1837     	 adds r7,r7,#24
 1473              	.LCFI110:
 1474              	 .cfi_def_cfa_offset 8
 1475 00cc BD46     	 mov sp,r7
 1476              	.LCFI111:
 1477              	 .cfi_def_cfa_register 13
 1478              	 
 1479 00ce 80BD     	 pop {r7,pc}
 1480              	.L71:
 1481              	 .align 2
 1482              	.L70:
 1483 00d0 0009000C 	 .word 201328896
 1484 00d4 00100058 	 .word 1476399104
 1485              	 .cfi_endproc
 1486              	.LFE169:
 1488              	 .section .text.XMC_FLASH_InstallProtection,"ax",%progbits
 1489              	 .align 2
 1490              	 .global XMC_FLASH_InstallProtection
 1491              	 .thumb
 1492              	 .thumb_func
 1494              	XMC_FLASH_InstallProtection:
 1495              	.LFB170:
 434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API install the global read and sector write protection for the specified user
 437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_InstallProtection(uint8_t user,
 439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****                                  uint32_t protection_mask,
 440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 	                             uint32_t password_0,
 441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****                                  uint32_t password_1)
 442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1496              	 .loc 1 442 0
 1497              	 .cfi_startproc
 1498              	 
 1499              	 
 1500 0000 80B5     	 push {r7,lr}
 1501              	.LCFI112:
 1502              	 .cfi_def_cfa_offset 8
 1503              	 .cfi_offset 7,-8
 1504              	 .cfi_offset 14,-4
 1505 0002 86B0     	 sub sp,sp,#24
 1506              	.LCFI113:
 1507              	 .cfi_def_cfa_offset 32
 1508 0004 00AF     	 add r7,sp,#0
 1509              	.LCFI114:
 1510              	 .cfi_def_cfa_register 7
 1511 0006 B960     	 str r1,[r7,#8]
 1512 0008 7A60     	 str r2,[r7,#4]
 1513 000a 3B60     	 str r3,[r7]
 1514 000c 0346     	 mov r3,r0
 1515 000e FB73     	 strb r3,[r7,#15]
 443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   
 445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfigureProtection: User level out of range", (user < 3U))
 446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1516              	 .loc 1 447 0
 1517 0010 FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1518              	 .loc 1 449 0
 1519 0014 B868     	 ldr r0,[r7,#8]
 1520 0016 0021     	 movs r1,#0
 1521 0018 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(protection_mask, 0UL);
 1522              	 .loc 1 450 0
 1523 001c B868     	 ldr r0,[r7,#8]
 1524 001e 0021     	 movs r1,#0
 1525 0020 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1526              	 .loc 1 451 0
 1527 0024 7868     	 ldr r0,[r7,#4]
 1528 0026 3968     	 ldr r1,[r7]
 1529 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(password_0, password_1);
 1530              	 .loc 1 452 0
 1531 002c 7868     	 ldr r0,[r7,#4]
 1532 002e 3968     	 ldr r1,[r7]
 1533 0030 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   
 454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   for (idx = 0U; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROTECTION_CONFIGURATION_WORDS); idx +
 1534              	 .loc 1 454 0
 1535 0034 0023     	 movs r3,#0
 1536 0036 7B61     	 str r3,[r7,#20]
 1537 0038 06E0     	 b .L73
 1538              	.L74:
 455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1539              	 .loc 1 456 0 discriminator 3
 1540 003a 0020     	 movs r0,#0
 1541 003c 0021     	 movs r1,#0
 1542 003e FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 1543              	 .loc 1 454 0 discriminator 3
 1544 0042 7B69     	 ldr r3,[r7,#20]
 1545 0044 0233     	 adds r3,r3,#2
 1546 0046 7B61     	 str r3,[r7,#20]
 1547              	.L73:
 454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 1548              	 .loc 1 454 0 is_stmt 0 discriminator 1
 1549 0048 7B69     	 ldr r3,[r7,#20]
 1550 004a 372B     	 cmp r3,#55
 1551 004c F5D9     	 bls .L74
 457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   }
 458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + (user * XMC_FLASH_BYTES_PE
 1552              	 .loc 1 459 0 is_stmt 1
 1553 004e FB7B     	 ldrb r3,[r7,#15]
 1554 0050 03F54033 	 add r3,r3,#196608
 1555 0054 9B02     	 lsls r3,r3,#10
 1556 0056 1846     	 mov r0,r3
 1557 0058 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1558              	 .loc 1 462 0
 1559 005c 00BF     	 nop
 1560              	.L75:
 1561              	 .loc 1 462 0 is_stmt 0 discriminator 1
 1562 005e 064B     	 ldr r3,.L76
 1563 0060 03F58053 	 add r3,r3,#4096
 1564 0064 1033     	 adds r3,r3,#16
 1565 0066 1B68     	 ldr r3,[r3]
 1566 0068 03F00103 	 and r3,r3,#1
 1567 006c 002B     	 cmp r3,#0
 1568 006e F6D1     	 bne .L75
 463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1569              	 .loc 1 463 0 is_stmt 1
 1570 0070 1837     	 adds r7,r7,#24
 1571              	.LCFI115:
 1572              	 .cfi_def_cfa_offset 8
 1573 0072 BD46     	 mov sp,r7
 1574              	.LCFI116:
 1575              	 .cfi_def_cfa_register 13
 1576              	 
 1577 0074 80BD     	 pop {r7,pc}
 1578              	.L77:
 1579 0076 00BF     	 .align 2
 1580              	.L76:
 1581 0078 00100058 	 .word 1476399104
 1582              	 .cfi_endproc
 1583              	.LFE170:
 1585              	 .section .text.XMC_FLASH_ConfirmProtection,"ax",%progbits
 1586              	 .align 2
 1587              	 .global XMC_FLASH_ConfirmProtection
 1588              	 .thumb
 1589              	 .thumb_func
 1591              	XMC_FLASH_ConfirmProtection:
 1592              	.LFB171:
 464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API confirm the protection. So that This sectors are locked with the specified protection.
 467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ConfirmProtection(uint8_t user)
 469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1593              	 .loc 1 469 0
 1594              	 .cfi_startproc
 1595              	 
 1596              	 
 1597 0000 80B5     	 push {r7,lr}
 1598              	.LCFI117:
 1599              	 .cfi_def_cfa_offset 8
 1600              	 .cfi_offset 7,-8
 1601              	 .cfi_offset 14,-4
 1602 0002 84B0     	 sub sp,sp,#16
 1603              	.LCFI118:
 1604              	 .cfi_def_cfa_offset 24
 1605 0004 00AF     	 add r7,sp,#0
 1606              	.LCFI119:
 1607              	 .cfi_def_cfa_register 7
 1608 0006 0346     	 mov r3,r0
 1609 0008 FB71     	 strb r3,[r7,#7]
 470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   uint32_t idx;
 471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_ConfirmProtection: User level out of range", (user < 3U))
 473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lEnterPageModeCommand();
 1610              	 .loc 1 474 0
 1611 000a FFF7FEFF 	 bl XMC_FLASH_lEnterPageModeCommand
 475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 1612              	 .loc 1 476 0
 1613 000e 1548     	 ldr r0,.L82
 1614 0010 0021     	 movs r1,#0
 1615 0012 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lLoadPageCommand(XMC_FLASH_PROT_CONFIRM_CODE, 0U);
 1616              	 .loc 1 477 0
 1617 0016 1348     	 ldr r0,.L82
 1618 0018 0021     	 movs r1,#0
 1619 001a FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* Fill the rest of page buffer with zeros*/
 480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   for (idx = 0UL; idx < (XMC_FLASH_WORDS_PER_PAGE - XMC_FLASH_PROT_CONFIRM_WORDS); idx += 2U)
 1620              	 .loc 1 480 0
 1621 001e 0023     	 movs r3,#0
 1622 0020 FB60     	 str r3,[r7,#12]
 1623 0022 06E0     	 b .L79
 1624              	.L80:
 481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lLoadPageCommand(0UL, 0UL);
 1625              	 .loc 1 482 0 discriminator 3
 1626 0024 0020     	 movs r0,#0
 1627 0026 0021     	 movs r1,#0
 1628 0028 FFF7FEFF 	 bl XMC_FLASH_lLoadPageCommand
 480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 1629              	 .loc 1 480 0 discriminator 3
 1630 002c FB68     	 ldr r3,[r7,#12]
 1631 002e 0233     	 adds r3,r3,#2
 1632 0030 FB60     	 str r3,[r7,#12]
 1633              	.L79:
 480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {
 1634              	 .loc 1 480 0 is_stmt 0 discriminator 1
 1635 0032 FB68     	 ldr r3,[r7,#12]
 1636 0034 3B2B     	 cmp r3,#59
 1637 0036 F5D9     	 bls .L80
 483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   }
 484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_FLASH_lWriteUCBPageCommand((uint32_t *)((uint32_t)XMC_FLASH_UCB0 + 
 1638              	 .loc 1 485 0 is_stmt 1
 1639 0038 FB79     	 ldrb r3,[r7,#7]
 1640 003a 03F54033 	 add r3,r3,#196608
 1641 003e 9B02     	 lsls r3,r3,#10
 486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 1642              	 .loc 1 486 0
 1643 0040 03F50073 	 add r3,r3,#512
 485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****                                  (user * XMC_FLASH_BYTES_PER_UCB) + XMC_FLASH_PROT_CONFIRM_OFFSET))
 1644              	 .loc 1 485 0
 1645 0044 1846     	 mov r0,r3
 1646 0046 FFF7FEFF 	 bl XMC_FLASH_lWriteUCBPageCommand
 487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* wait until the operation is completed */
 489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   while ((FLASH0->FSR & (uint32_t)FLASH_FSR_PBUSY_Msk) != 0U){}
 1647              	 .loc 1 489 0
 1648 004a 00BF     	 nop
 1649              	.L81:
 1650              	 .loc 1 489 0 is_stmt 0 discriminator 1
 1651 004c 064B     	 ldr r3,.L82+4
 1652 004e 03F58053 	 add r3,r3,#4096
 1653 0052 1033     	 adds r3,r3,#16
 1654 0054 1B68     	 ldr r3,[r3]
 1655 0056 03F00103 	 and r3,r3,#1
 1656 005a 002B     	 cmp r3,#0
 1657 005c F6D1     	 bne .L81
 490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1658              	 .loc 1 490 0 is_stmt 1
 1659 005e 1037     	 adds r7,r7,#16
 1660              	.LCFI120:
 1661              	 .cfi_def_cfa_offset 8
 1662 0060 BD46     	 mov sp,r7
 1663              	.LCFI121:
 1664              	 .cfi_def_cfa_register 13
 1665              	 
 1666 0062 80BD     	 pop {r7,pc}
 1667              	.L83:
 1668              	 .align 2
 1669              	.L82:
 1670 0064 C315FE8A 	 .word -1963059773
 1671 0068 00100058 	 .word 1476399104
 1672              	 .cfi_endproc
 1673              	.LFE171:
 1675              	 .section .text.XMC_FLASH_VerifyReadProtection,"ax",%progbits
 1676              	 .align 2
 1677              	 .global XMC_FLASH_VerifyReadProtection
 1678              	 .thumb
 1679              	 .thumb_func
 1681              	XMC_FLASH_VerifyReadProtection:
 1682              	.LFB172:
 491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API verify read protection configuration. And returns true if passwords are matching.
 494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyReadProtection(uint32_t password_0, uint32_t password_1)
 496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1683              	 .loc 1 496 0
 1684              	 .cfi_startproc
 1685              	 
 1686              	 
 1687 0000 80B5     	 push {r7,lr}
 1688              	.LCFI122:
 1689              	 .cfi_def_cfa_offset 8
 1690              	 .cfi_offset 7,-8
 1691              	 .cfi_offset 14,-4
 1692 0002 84B0     	 sub sp,sp,#16
 1693              	.LCFI123:
 1694              	 .cfi_def_cfa_offset 24
 1695 0004 00AF     	 add r7,sp,#0
 1696              	.LCFI124:
 1697              	 .cfi_def_cfa_register 7
 1698 0006 7860     	 str r0,[r7,#4]
 1699 0008 3960     	 str r1,[r7]
 497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   bool status = false;
 1700              	 .loc 1 497 0
 1701 000a 0023     	 movs r3,#0
 1702 000c FB73     	 strb r3,[r7,#15]
 498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   
 499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* Check if read protection is installed */
 500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_INSTALLED) != 0U)
 1703              	 .loc 1 500 0
 1704 000e FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1705 0012 0346     	 mov r3,r0
 1706 0014 03F48023 	 and r3,r3,#262144
 1707 0018 002B     	 cmp r3,#0
 1708 001a 0FD0     	 beq .L85
 501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {  
 502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 1709              	 .loc 1 502 0
 1710 001c FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableReadProtectionCommand(password_0, password_1);
 1711              	 .loc 1 503 0
 1712 0020 7868     	 ldr r0,[r7,#4]
 1713 0022 3968     	 ldr r1,[r7]
 1714 0024 FFF7FEFF 	 bl XMC_FLASH_lDisableReadProtectionCommand
 504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     status = (bool)(XMC_FLASH_GetStatus() & (uint32_t)XMC_FLASH_STATUS_READ_PROTECTION_DISABLED_STA
 1715              	 .loc 1 505 0
 1716 0028 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1717 002c 0346     	 mov r3,r0
 1718 002e 03F40023 	 and r3,r3,#524288
 1719 0032 002B     	 cmp r3,#0
 1720 0034 14BF     	 ite ne
 1721 0036 0123     	 movne r3,#1
 1722 0038 0023     	 moveq r3,#0
 1723 003a FB73     	 strb r3,[r7,#15]
 1724              	.L85:
 506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   }
 507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   return status;
 1725              	 .loc 1 508 0
 1726 003c FB7B     	 ldrb r3,[r7,#15]
 509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1727              	 .loc 1 509 0
 1728 003e 1846     	 mov r0,r3
 1729 0040 1037     	 adds r7,r7,#16
 1730              	.LCFI125:
 1731              	 .cfi_def_cfa_offset 8
 1732 0042 BD46     	 mov sp,r7
 1733              	.LCFI126:
 1734              	 .cfi_def_cfa_register 13
 1735              	 
 1736 0044 80BD     	 pop {r7,pc}
 1737              	 .cfi_endproc
 1738              	.LFE172:
 1740 0046 00BF     	 .section .text.XMC_FLASH_VerifyWriteProtection,"ax",%progbits
 1741              	 .align 2
 1742              	 .global XMC_FLASH_VerifyWriteProtection
 1743              	 .thumb
 1744              	 .thumb_func
 1746              	XMC_FLASH_VerifyWriteProtection:
 1747              	.LFB173:
 510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * This API verify sector write protection configuration. And returns true if passwords are matchin
 513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * specified user.
 514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** bool XMC_FLASH_VerifyWriteProtection(uint32_t user,
 516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****                                      uint32_t protection_mask, 
 517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_0, 
 518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****                                      uint32_t password_1)
 519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1748              	 .loc 1 519 0
 1749              	 .cfi_startproc
 1750              	 
 1751              	 
 1752 0000 80B5     	 push {r7,lr}
 1753              	.LCFI127:
 1754              	 .cfi_def_cfa_offset 8
 1755              	 .cfi_offset 7,-8
 1756              	 .cfi_offset 14,-4
 1757 0002 86B0     	 sub sp,sp,#24
 1758              	.LCFI128:
 1759              	 .cfi_def_cfa_offset 32
 1760 0004 00AF     	 add r7,sp,#0
 1761              	.LCFI129:
 1762              	 .cfi_def_cfa_register 7
 1763 0006 F860     	 str r0,[r7,#12]
 1764 0008 B960     	 str r1,[r7,#8]
 1765 000a 7A60     	 str r2,[r7,#4]
 1766 000c 3B60     	 str r3,[r7]
 520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   bool status = false;
 1767              	 .loc 1 520 0
 1768 000e 0023     	 movs r3,#0
 1769 0010 FB75     	 strb r3,[r7,#23]
 521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   uint32_t *flash_procon_ptr = (uint32_t *)(void*)(&(FLASH0->PROCON0) + user);
 1770              	 .loc 1 521 0
 1771 0012 FB68     	 ldr r3,[r7,#12]
 1772 0014 9A00     	 lsls r2,r3,#2
 1773 0016 1A4B     	 ldr r3,.L92
 1774 0018 1344     	 add r3,r3,r2
 1775 001a 3B61     	 str r3,[r7,#16]
 522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   XMC_ASSERT(" XMC_FLASH_VerifyWriteProtection: User level out of range", (user < 2U))
 524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   /* Check if write protection for selected user is installed */
 526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   if ((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_FSR_WPROIN0_Po
 1776              	 .loc 1 526 0
 1777 001c FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1778 0020 0246     	 mov r2,r0
 1779 0022 FB68     	 ldr r3,[r7,#12]
 1780 0024 1533     	 adds r3,r3,#21
 1781 0026 22FA03F3 	 lsr r3,r2,r3
 1782 002a 03F00103 	 and r3,r3,#1
 1783 002e 002B     	 cmp r3,#0
 1784 0030 20D0     	 beq .L88
 527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   {  
 528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lClearStatusCommand();
 1785              	 .loc 1 528 0
 1786 0032 FFF7FEFF 	 bl XMC_FLASH_lClearStatusCommand
 529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     XMC_FLASH_lDisableSectorWriteProtectionCommand(user, password_0, password_1);
 1787              	 .loc 1 529 0
 1788 0036 F868     	 ldr r0,[r7,#12]
 1789 0038 7968     	 ldr r1,[r7,#4]
 1790 003a 3A68     	 ldr r2,[r7]
 1791 003c FFF7FEFF 	 bl XMC_FLASH_lDisableSectorWriteProtectionCommand
 530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****     status = (bool)((XMC_FLASH_GetStatus() & (uint32_t)((uint32_t)1U << (uint32_t)((uint32_t)FLASH_
 1792              	 .loc 1 531 0
 1793 0040 FFF7FEFF 	 bl XMC_FLASH_GetStatus
 1794 0044 0246     	 mov r2,r0
 1795 0046 FB68     	 ldr r3,[r7,#12]
 1796 0048 1933     	 adds r3,r3,#25
 1797 004a 22FA03F3 	 lsr r3,r2,r3
 1798 004e 03F00103 	 and r3,r3,#1
 1799 0052 002B     	 cmp r3,#0
 1800 0054 08D0     	 beq .L89
 532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1801              	 .loc 1 532 0 discriminator 1
 1802 0056 3B69     	 ldr r3,[r7,#16]
 1803 0058 1A68     	 ldr r2,[r3]
 1804 005a BB68     	 ldr r3,[r7,#8]
 1805 005c 23F40043 	 bic r3,r3,#32768
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1806              	 .loc 1 531 0 discriminator 1
 1807 0060 9A42     	 cmp r2,r3
 1808 0062 01D1     	 bne .L89
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1809              	 .loc 1 531 0 is_stmt 0 discriminator 3
 1810 0064 0123     	 movs r3,#1
 1811 0066 00E0     	 b .L90
 1812              	.L89:
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1813              	 .loc 1 531 0 discriminator 4
 1814 0068 0023     	 movs r3,#0
 1815              	.L90:
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****              (*flash_procon_ptr == (protection_mask & (uint32_t)(~(uint32_t)XMC_FLASH_PROTECTION_RE
 1816              	 .loc 1 531 0 discriminator 6
 1817 006a FB75     	 strb r3,[r7,#23]
 1818 006c FB7D     	 ldrb r3,[r7,#23]
 1819 006e 03F00103 	 and r3,r3,#1
 1820 0072 FB75     	 strb r3,[r7,#23]
 1821              	.L88:
 533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   }
 534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   return status;
 1822              	 .loc 1 535 0 is_stmt 1
 1823 0074 FB7D     	 ldrb r3,[r7,#23]
 536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1824              	 .loc 1 536 0
 1825 0076 1846     	 mov r0,r3
 1826 0078 1837     	 adds r7,r7,#24
 1827              	.LCFI130:
 1828              	 .cfi_def_cfa_offset 8
 1829 007a BD46     	 mov sp,r7
 1830              	.LCFI131:
 1831              	 .cfi_def_cfa_register 13
 1832              	 
 1833 007c 80BD     	 pop {r7,pc}
 1834              	.L93:
 1835 007e 00BF     	 .align 2
 1836              	.L92:
 1837 0080 20200058 	 .word 1476403232
 1838              	 .cfi_endproc
 1839              	.LFE173:
 1841              	 .section .text.XMC_FLASH_ResumeProtection,"ax",%progbits
 1842              	 .align 2
 1843              	 .global XMC_FLASH_ResumeProtection
 1844              	 .thumb
 1845              	 .thumb_func
 1847              	XMC_FLASH_ResumeProtection:
 1848              	.LFB174:
 537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** /*
 539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  * Command to enables the protection as it was configured
 540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****  */
 541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** void XMC_FLASH_ResumeProtection(void)
 542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** {
 1849              	 .loc 1 542 0
 1850              	 .cfi_startproc
 1851              	 
 1852              	 
 1853              	 
 1854 0000 80B4     	 push {r7}
 1855              	.LCFI132:
 1856              	 .cfi_def_cfa_offset 4
 1857              	 .cfi_offset 7,-4
 1858 0002 83B0     	 sub sp,sp,#12
 1859              	.LCFI133:
 1860              	 .cfi_def_cfa_offset 16
 1861 0004 00AF     	 add r7,sp,#0
 1862              	.LCFI134:
 1863              	 .cfi_def_cfa_register 7
 543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   volatile uint32_t *address;
 544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** 
 545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   address = (uint32_t *)(XMC_FLASH_UNCACHED_BASE + 0x5554U);
 1864              	 .loc 1 545 0
 1865 0006 054B     	 ldr r3,.L95
 1866 0008 7B60     	 str r3,[r7,#4]
 546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c ****   *address = 0x5eU;
 1867              	 .loc 1 546 0
 1868 000a 7B68     	 ldr r3,[r7,#4]
 1869 000c 5E22     	 movs r2,#94
 1870 000e 1A60     	 str r2,[r3]
 547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_flash.c **** }
 1871              	 .loc 1 547 0
 1872 0010 0C37     	 adds r7,r7,#12
 1873              	.LCFI135:
 1874              	 .cfi_def_cfa_offset 4
 1875 0012 BD46     	 mov sp,r7
 1876              	.LCFI136:
 1877              	 .cfi_def_cfa_register 13
 1878              	 
 1879 0014 5DF8047B 	 ldr r7,[sp],#4
 1880              	.LCFI137:
 1881              	 .cfi_restore 7
 1882              	 .cfi_def_cfa_offset 0
 1883 0018 7047     	 bx lr
 1884              	.L96:
 1885 001a 00BF     	 .align 2
 1886              	.L95:
 1887 001c 5455000C 	 .word 201348436
 1888              	 .cfi_endproc
 1889              	.LFE174:
 1891              	 .text
 1892              	.Letext0:
 1893              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1894              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1895              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 1896              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_flash.h"
 1897              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_flash.c
    {standard input}:20     .text.XMC_FLASH_lEnterPageModeCommand:00000000 $t
    {standard input}:25     .text.XMC_FLASH_lEnterPageModeCommand:00000000 XMC_FLASH_lEnterPageModeCommand
    {standard input}:66     .text.XMC_FLASH_lEnterPageModeCommand:0000001c $d
    {standard input}:71     .text.XMC_FLASH_lLoadPageCommand:00000000 $t
    {standard input}:76     .text.XMC_FLASH_lLoadPageCommand:00000000 XMC_FLASH_lLoadPageCommand
    {standard input}:125    .text.XMC_FLASH_lLoadPageCommand:00000028 $d
    {standard input}:131    .text.XMC_FLASH_lWritePageCommand:00000000 $t
    {standard input}:136    .text.XMC_FLASH_lWritePageCommand:00000000 XMC_FLASH_lWritePageCommand
    {standard input}:198    .text.XMC_FLASH_lWritePageCommand:0000003c $d
    {standard input}:204    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 $t
    {standard input}:209    .text.XMC_FLASH_lWriteUCBPageCommand:00000000 XMC_FLASH_lWriteUCBPageCommand
    {standard input}:271    .text.XMC_FLASH_lWriteUCBPageCommand:0000003c $d
    {standard input}:277    .text.XMC_FLASH_lEraseSectorCommand:00000000 $t
    {standard input}:282    .text.XMC_FLASH_lEraseSectorCommand:00000000 XMC_FLASH_lEraseSectorCommand
    {standard input}:358    .text.XMC_FLASH_lEraseSectorCommand:00000050 $d
    {standard input}:364    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 $t
    {standard input}:369    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000000 XMC_FLASH_lDisableSectorWriteProtectionCommand
    {standard input}:447    .text.XMC_FLASH_lDisableSectorWriteProtectionCommand:00000054 $d
    {standard input}:455    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 $t
    {standard input}:460    .text.XMC_FLASH_lDisableReadProtectionCommand:00000000 XMC_FLASH_lDisableReadProtectionCommand
    {standard input}:537    .text.XMC_FLASH_lDisableReadProtectionCommand:00000050 $d
    {standard input}:545    .text.XMC_FLASH_lClearStatusCommand:00000000 $t
    {standard input}:550    .text.XMC_FLASH_lClearStatusCommand:00000000 XMC_FLASH_lClearStatusCommand
    {standard input}:590    .text.XMC_FLASH_lClearStatusCommand:0000001c $d
    {standard input}:595    .text.XMC_FLASH_ClearStatus:00000000 $t
    {standard input}:600    .text.XMC_FLASH_ClearStatus:00000000 XMC_FLASH_ClearStatus
    {standard input}:622    .text.XMC_FLASH_GetStatus:00000000 $t
    {standard input}:627    .text.XMC_FLASH_GetStatus:00000000 XMC_FLASH_GetStatus
    {standard input}:660    .text.XMC_FLASH_GetStatus:00000018 $d
    {standard input}:665    .text.XMC_FLASH_EnableEvent:00000000 $t
    {standard input}:670    .text.XMC_FLASH_EnableEvent:00000000 XMC_FLASH_EnableEvent
    {standard input}:718    .text.XMC_FLASH_EnableEvent:00000030 $d
    {standard input}:723    .text.XMC_FLASH_DisableEvent:00000000 $t
    {standard input}:728    .text.XMC_FLASH_DisableEvent:00000000 XMC_FLASH_DisableEvent
    {standard input}:777    .text.XMC_FLASH_DisableEvent:00000034 $d
    {standard input}:782    .text.XMC_FLASH_ProgramPage:00000000 $t
    {standard input}:787    .text.XMC_FLASH_ProgramPage:00000000 XMC_FLASH_ProgramPage
    {standard input}:865    .text.XMC_FLASH_ProgramPage:00000064 $d
    {standard input}:870    .text.XMC_FLASH_EraseSector:00000000 $t
    {standard input}:875    .text.XMC_FLASH_EraseSector:00000000 XMC_FLASH_EraseSector
    {standard input}:921    .text.XMC_FLASH_EraseSector:0000002c $d
    {standard input}:926    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 $t
    {standard input}:931    .text.XMC_FLASH_lErasePhysicalSectorCommand:00000000 XMC_FLASH_lErasePhysicalSectorCommand
    {standard input}:1007   .text.XMC_FLASH_lErasePhysicalSectorCommand:00000050 $d
    {standard input}:1013   .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 $t
    {standard input}:1018   .text.XMC_FLASH_lRepairPhysicalSectorCommand:00000000 XMC_FLASH_lRepairPhysicalSectorCommand
    {standard input}:1093   .text.XMC_FLASH_lRepairPhysicalSectorCommand:0000004c $d
    {standard input}:1100   .text.XMC_FLASH_ErasePhysicalSector:00000000 $t
    {standard input}:1105   .text.XMC_FLASH_ErasePhysicalSector:00000000 XMC_FLASH_ErasePhysicalSector
    {standard input}:1151   .text.XMC_FLASH_ErasePhysicalSector:0000002c $d
    {standard input}:1156   .text.XMC_FLASH_RepairPhysicalSector:00000000 $t
    {standard input}:1161   .text.XMC_FLASH_RepairPhysicalSector:00000000 XMC_FLASH_RepairPhysicalSector
    {standard input}:1185   .text.XMC_FLASH_EraseUCB:00000000 $t
    {standard input}:1190   .text.XMC_FLASH_EraseUCB:00000000 XMC_FLASH_EraseUCB
    {standard input}:1277   .text.XMC_FLASH_EraseUCB:00000064 $d
    {standard input}:1284   .text.XMC_FLASH_Reset:00000000 $t
    {standard input}:1289   .text.XMC_FLASH_Reset:00000000 XMC_FLASH_Reset
    {standard input}:1329   .text.XMC_FLASH_Reset:0000001c $d
    {standard input}:1334   .text.XMC_FLASH_InstallBMI:00000000 $t
    {standard input}:1339   .text.XMC_FLASH_InstallBMI:00000000 XMC_FLASH_InstallBMI
    {standard input}:1483   .text.XMC_FLASH_InstallBMI:000000d0 $d
    {standard input}:1489   .text.XMC_FLASH_InstallProtection:00000000 $t
    {standard input}:1494   .text.XMC_FLASH_InstallProtection:00000000 XMC_FLASH_InstallProtection
    {standard input}:1581   .text.XMC_FLASH_InstallProtection:00000078 $d
    {standard input}:1586   .text.XMC_FLASH_ConfirmProtection:00000000 $t
    {standard input}:1591   .text.XMC_FLASH_ConfirmProtection:00000000 XMC_FLASH_ConfirmProtection
    {standard input}:1670   .text.XMC_FLASH_ConfirmProtection:00000064 $d
    {standard input}:1676   .text.XMC_FLASH_VerifyReadProtection:00000000 $t
    {standard input}:1681   .text.XMC_FLASH_VerifyReadProtection:00000000 XMC_FLASH_VerifyReadProtection
    {standard input}:1741   .text.XMC_FLASH_VerifyWriteProtection:00000000 $t
    {standard input}:1746   .text.XMC_FLASH_VerifyWriteProtection:00000000 XMC_FLASH_VerifyWriteProtection
    {standard input}:1837   .text.XMC_FLASH_VerifyWriteProtection:00000080 $d
    {standard input}:1842   .text.XMC_FLASH_ResumeProtection:00000000 $t
    {standard input}:1847   .text.XMC_FLASH_ResumeProtection:00000000 XMC_FLASH_ResumeProtection
    {standard input}:1887   .text.XMC_FLASH_ResumeProtection:0000001c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
