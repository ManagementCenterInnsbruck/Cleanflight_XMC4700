   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc4_scu.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_CLOCK_GetUsbClockSource,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_CLOCK_GetUsbClockSource:
  25              	.LFB136:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_scu.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @date 2016-06-15
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.                        
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                                             
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * following conditions are met:   
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * disclaimer.                        
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Change History
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * --------------
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *      
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks       
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @endcond 
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @{
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @{
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * MACROS
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  purpose. 
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP 
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */ 
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */  
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */ 
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */ 
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */ 
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */ 
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_DSRAM2_MEM)
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */ 
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC1_MEM)
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC2_MEM)
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */ 
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register. 
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */ 
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */ 
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */  
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */ 
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */ 
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */ 
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */ 
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)  
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)  
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating. 
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register. 
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  register. 
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock. 
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock. 
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock 
 549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock 
 551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock 
 596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration: 
 610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE 
 621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled. 
 656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  state.
 661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  
 662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  stopped. 
 697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled. 
 700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control  
 746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   */
 777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin. 
 780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin. 
 783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))      
 862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired 
 906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** extern "C" {
 954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
 958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
 964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
 977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
 983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
 986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
 987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
 989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
 994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
 997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
 998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result. 
1045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n 
1065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (UC_SERIES != XMC45)
1130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in 
1139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
1184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  
1236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the 
1309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the 
1341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit 
1357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced. 
1373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time. 
1374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);  
1397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API. 
1408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state. 
1473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n 
1476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  
1479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to 
1490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the 
1492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors 
1493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the 
1579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);  
1585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register. 
1635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency. 
1655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
  27              	 .loc 1 1708 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
  39              	 .loc 1 1709 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 9B69     	 ldr r3,[r3,#24]
  42 0008 03F48033 	 and r3,r3,#65536
1710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
  43              	 .loc 1 1710 0
  44 000c 1846     	 mov r0,r3
  45 000e BD46     	 mov sp,r7
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 13
  48              	 
  49 0010 5DF8047B 	 ldr r7,[sp],#4
  50              	.LCFI3:
  51              	 .cfi_restore 7
  52              	 .cfi_def_cfa_offset 0
  53 0014 7047     	 bx lr
  54              	.L4:
  55 0016 00BF     	 .align 2
  56              	.L3:
  57 0018 00460050 	 .word 1342195200
  58              	 .cfi_endproc
  59              	.LFE136:
  61              	 .section .text.XMC_SCU_CLOCK_GetWdtClockSource,"ax",%progbits
  62              	 .align 2
  63              	 .thumb
  64              	 .thumb_func
  66              	XMC_SCU_CLOCK_GetWdtClockSource:
  67              	.LFB137:
1711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on 
1744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
  68              	 .loc 1 1749 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72              	 
  73 0000 80B4     	 push {r7}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 4
  76              	 .cfi_offset 7,-4
  77 0002 00AF     	 add r7,sp,#0
  78              	.LCFI5:
  79              	 .cfi_def_cfa_register 7
1750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
  80              	 .loc 1 1750 0
  81 0004 044B     	 ldr r3,.L7
  82 0006 5B6A     	 ldr r3,[r3,#36]
  83 0008 03F44033 	 and r3,r3,#196608
1751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
  84              	 .loc 1 1751 0
  85 000c 1846     	 mov r0,r3
  86 000e BD46     	 mov sp,r7
  87              	.LCFI6:
  88              	 .cfi_def_cfa_register 13
  89              	 
  90 0010 5DF8047B 	 ldr r7,[sp],#4
  91              	.LCFI7:
  92              	 .cfi_restore 7
  93              	 .cfi_def_cfa_offset 0
  94 0014 7047     	 bx lr
  95              	.L8:
  96 0016 00BF     	 .align 2
  97              	.L7:
  98 0018 00460050 	 .word 1342195200
  99              	 .cfi_endproc
 100              	.LFE137:
 102              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockSource,"ax",%progbits
 103              	 .align 2
 104              	 .thumb
 105              	 .thumb_func
 107              	XMC_SCU_CLOCK_GetExternalOutputClockSource:
 108              	.LFB140:
1752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \note
1768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \note
1808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \endif
1844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \endif
1847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \endif
1867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \endif
1870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 109              	 .loc 1 1878 0
 110              	 .cfi_startproc
 111              	 
 112              	 
 113              	 
 114 0000 80B4     	 push {r7}
 115              	.LCFI8:
 116              	 .cfi_def_cfa_offset 4
 117              	 .cfi_offset 7,-4
 118 0002 00AF     	 add r7,sp,#0
 119              	.LCFI9:
 120              	 .cfi_def_cfa_register 7
1879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
 121              	 .loc 1 1879 0
 122 0004 054B     	 ldr r3,.L11
 123 0006 9B6A     	 ldr r3,[r3,#40]
 124 0008 DBB2     	 uxtb r3,r3
 125 000a 03F00303 	 and r3,r3,#3
 126 000e DBB2     	 uxtb r3,r3
1880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
 127              	 .loc 1 1880 0
 128 0010 1846     	 mov r0,r3
 129 0012 BD46     	 mov sp,r7
 130              	.LCFI10:
 131              	 .cfi_def_cfa_register 13
 132              	 
 133 0014 5DF8047B 	 ldr r7,[sp],#4
 134              	.LCFI11:
 135              	 .cfi_restore 7
 136              	 .cfi_def_cfa_offset 0
 137 0018 7047     	 bx lr
 138              	.L12:
 139 001a 00BF     	 .align 2
 140              	.L11:
 141 001c 00460050 	 .word 1342195200
 142              	 .cfi_endproc
 143              	.LFE140:
 145              	 .section .text.XMC_SCU_CLOCK_GetSystemClockFrequency,"ax",%progbits
 146              	 .align 2
 147              	 .thumb
 148              	 .thumb_func
 150              	XMC_SCU_CLOCK_GetSystemClockFrequency:
 151              	.LFB150:
1881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
1909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
1910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
1912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
1914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
1916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
1919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
1922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
1930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
1931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
1933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
1935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
1937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                       ((uint32_t)source);
1938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
1942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
1948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
1949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
1953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
1955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
1957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
1961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
1962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
1967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is 
1968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
1969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
1973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
1976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
1977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
1980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
1981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
1985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
1987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
1992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
1993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
1994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
1995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
2000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
2001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
2002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
2005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
2007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
2161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
2264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the 
2272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status 
2274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the 
2286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * external oscillator. 
2287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays 
2347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status 
2349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() 
2352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \note
2390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \note
2406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin 
2415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 152              	 .loc 1 2486 0
 153              	 .cfi_startproc
 154              	 
 155              	 
 156              	 
 157 0000 80B4     	 push {r7}
 158              	.LCFI12:
 159              	 .cfi_def_cfa_offset 4
 160              	 .cfi_offset 7,-4
 161 0002 00AF     	 add r7,sp,#0
 162              	.LCFI13:
 163              	 .cfi_def_cfa_register 7
2487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 164              	 .loc 1 2487 0
 165 0004 064B     	 ldr r3,.L15
 166 0006 1A68     	 ldr r2,[r3]
 167 0008 064B     	 ldr r3,.L15+4
 168 000a 1B69     	 ldr r3,[r3,#16]
 169 000c 03F00103 	 and r3,r3,#1
 170 0010 02FA03F3 	 lsl r3,r2,r3
2488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
 171              	 .loc 1 2488 0
 172 0014 1846     	 mov r0,r3
 173 0016 BD46     	 mov sp,r7
 174              	.LCFI14:
 175              	 .cfi_def_cfa_register 13
 176              	 
 177 0018 5DF8047B 	 ldr r7,[sp],#4
 178              	.LCFI15:
 179              	 .cfi_restore 7
 180              	 .cfi_def_cfa_offset 0
 181 001c 7047     	 bx lr
 182              	.L16:
 183 001e 00BF     	 .align 2
 184              	.L15:
 185 0020 00000000 	 .word SystemCoreClock
 186 0024 00460050 	 .word 1342195200
 187              	 .cfi_endproc
 188              	.LFE150:
 190              	 .section .text.XMC_SCU_CLOCK_GetCpuClockFrequency,"ax",%progbits
 191              	 .align 2
 192              	 .thumb
 193              	 .thumb_func
 195              	XMC_SCU_CLOCK_GetCpuClockFrequency:
 196              	.LFB167:
 197              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_scu.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @cond
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                                             
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Change History
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * --------------
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *      
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *      
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @{
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @{
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #else
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #endif
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #endif
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the cause of reset. 
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None 
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 198              	 .loc 2 426 0
 199              	 .cfi_startproc
 200              	 
 201              	 
 202              	 
 203 0000 80B4     	 push {r7}
 204              	.LCFI16:
 205              	 .cfi_def_cfa_offset 4
 206              	 .cfi_offset 7,-4
 207 0002 00AF     	 add r7,sp,#0
 208              	.LCFI17:
 209              	 .cfi_def_cfa_register 7
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 210              	 .loc 2 427 0
 211 0004 034B     	 ldr r3,.L19
 212 0006 1B68     	 ldr r3,[r3]
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 213              	 .loc 2 428 0
 214 0008 1846     	 mov r0,r3
 215 000a BD46     	 mov sp,r7
 216              	.LCFI18:
 217              	 .cfi_def_cfa_register 13
 218              	 
 219 000c 5DF8047B 	 ldr r7,[sp],#4
 220              	.LCFI19:
 221              	 .cfi_restore 7
 222              	 .cfi_def_cfa_offset 0
 223 0010 7047     	 bx lr
 224              	.L20:
 225 0012 00BF     	 .align 2
 226              	.L19:
 227 0014 00000000 	 .word SystemCoreClock
 228              	 .cfi_endproc
 229              	.LFE167:
 231              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
 232              	 .align 2
 233              	 .thumb
 234              	 .thumb_func
 236              	XMC_SCU_GetMirrorStatus:
 237              	.LFB168:
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #endif
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 238              	 .loc 2 544 0
 239              	 .cfi_startproc
 240              	 
 241              	 
 242              	 
 243 0000 80B4     	 push {r7}
 244              	.LCFI20:
 245              	 .cfi_def_cfa_offset 4
 246              	 .cfi_offset 7,-4
 247 0002 00AF     	 add r7,sp,#0
 248              	.LCFI21:
 249              	 .cfi_def_cfa_register 7
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
 250              	 .loc 2 545 0
 251 0004 034B     	 ldr r3,.L23
 252 0006 D3F8C430 	 ldr r3,[r3,#196]
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 253              	 .loc 2 546 0
 254 000a 1846     	 mov r0,r3
 255 000c BD46     	 mov sp,r7
 256              	.LCFI22:
 257              	 .cfi_def_cfa_register 13
 258              	 
 259 000e 5DF8047B 	 ldr r7,[sp],#4
 260              	.LCFI23:
 261              	 .cfi_restore 7
 262              	 .cfi_def_cfa_offset 0
 263 0012 7047     	 bx lr
 264              	.L24:
 265              	 .align 2
 266              	.L23:
 267 0014 00400050 	 .word 1342193664
 268              	 .cfi_endproc
 269              	.LFE168:
 271              	 .comm event_handler_list,128,4
 272              	 .section .text.XMC_SCU_lDelay,"ax",%progbits
 273              	 .align 2
 274              	 .thumb
 275              	 .thumb_func
 277              	XMC_SCU_lDelay:
 278              	.LFB169:
 279              	 .file 3 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /**
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * @file xmc4_scu.c
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * @date 2018-06-21
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * products derived from this software without specific prior written permission.                  
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *                                                                              
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *                                                                              
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * Change History
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * --------------
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2015-02-20:
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Initial <br>
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *      
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2015-05-20:
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - XMC_ASSERT() hanging issues have fixed.  <br>
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Line indentation aligned with 120 characters. <br>
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2015-06-20:
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_EnableEvent,XMC_SCU_INTERRUPT_DisableEvent,
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_TriggerEvent,XMC_SCU_INTERUPT_GetEventStatus,
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_INTERRUPT_ClearEventStatus are added
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Added Weak implementation for OSCHP_GetFrequency()
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2015-11-30:
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Documentation improved <br>
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Following API functionalities are improved
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_CLOCK_GatePeripheralClock, XMC_SCU_CLOCK_UngatePeripheralClock, XMC_SCU_CLOCK_IsPe
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *       XMC_SCU_RESET_AssertPeripheralReset, XMC_SCU_RESET_DeassertPeripheralReset, XMC_SCU_RESET_
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2015-12-08:
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - XMC_SCU_GetTemperature renamed to XMC_SCU_GetTemperatureMeasurement
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2016-03-09:
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Optimize write only registers
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetPinMode
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2016-04-06:
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_ReadFromRetentionMemory functionality
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2016-05-19:
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Changed XMC_SCU_CLOCK_StartSystemPll to avoid using floating point calculation which might
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2016-06-15:
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * 2018-06-21:
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_HIB_SetSR1Input()
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *     - Fixed XMC_SCU_CLOCK_EnableLowPowerOscillator()
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * @endcond 
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /**
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * @brief SCU low level driver API prototype definition for XMC4 family of microcontrollers. 
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * <b>Detailed description of file:</b> <br>
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * APIs provided in this file cover the following functional blocks of SCU: <br>
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * -- GCU (APIs prefixed with XMC_SCU_GEN_) <br>
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * ------ Temperature Monitoring, Bootmode selection, CCU Start, Comparator configuration etc  <br>
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * -- CCU (APIs prefixed with XMC_SCU_CLOCK_) <br>
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * ------ Clock sources init, Clock tree init, Clock gating, Sleep Management etc <br>
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * -- RCU (APIs prefixed with XMC_SCU_RESET_) <br>
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * ------ Reset Init, Cause, Manual Reset Assert/Deassert <br>
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * -- INTERRUPT (APIs prefixed with XMC_SCU_INTERRUPT_) <br>
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * ------ Init, Manual Assert/Deassert, Acknowledge etc <br>
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * -- PARITY (APIs prefixed with XMC_SCU_PARITY_) <br>
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * ------ Init, Acknowledge etc <br>
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * -- HIBERNATION (APIs prefixed with XMC_SCU_HIB_) <br>
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * ------ Hibernation entry/exit config, entry/wakeup sequences, LPAC configuration etc <br>
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * -- TRAP (APIs prefixed with XMC_SCU_TRAP_) <br>
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * ------ Init, Enable/Disable, Acknowledge etc <br>
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  *
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * HEADER FILES
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #include <xmc_scu.h>
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if UC_FAMILY == XMC4
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * MACROS
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define FOSCREF   (2500000UL)    /**< Oscillator reference frequency (fOSCREF) monitored by Oscilla
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define FREQ_1MHZ (1000000UL)    /**< Used during calculation. */
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #ifndef OFI_FREQUENCY
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define OFI_FREQUENCY (24000000UL)    /**< Fast internal backup clock source. */
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #ifndef OSI_FREQUENCY
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define OSI_FREQUENCY (32768UL)    /**< Internal slow clock source. */
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #ifndef OSCHP_FREQUENCY
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define OSCHP_FREQUENCY (12000000U)    /**< External crystal High Precision Oscillator. */
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLLV_Msk | \
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                          SCU_PLL_PLLSTAT_PLLSP_Msk)  /**< Used to verify the OSC fr
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                           usable or not.*/
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_START_GROUP    (0UL)    /**< The ADC group whose channel input is compared 
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_ADC_END_GROUP      (1UL)    /**< The ADC group whose channel input is compared 
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC end 
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      this group number. */
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_START_ADC_CHANNEL  (6UL)    /**< The ADC channel whose channel input is compare
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC star
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_ORC_END_ADC_CHANNEL    (7UL)    /**< The ADC channel whose channel input is compare
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      Comparator (ORC) to serves the purpose of over
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      for analog input pins of the chip and ORC ends
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                      this channel number. */
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_GRPNUM(GROUP_NUM)   (((GROUP_NUM) == XMC_SCU_ORC_ADC_START_GROUP) || \
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                         ((GROUP_NUM) == XMC_SCU_ORC_ADC_END_GROUP) ) /**< Used to v
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                                       end group num
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                         
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_CHECK_CHNUM(CH_NUM)       (((CH_NUM) == XMC_SCU_ORC_START_ADC_CHANNEL) || \
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                         ((CH_NUM) == XMC_SCU_ORC_END_ADC_CHANNEL) )  /**< Used to v
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                                       provided ADC 
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                                       within specif
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                                       end channel n
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_INTERRUPT_EVENT_MAX            (32U)      /**< Maximum supported SCU events. */
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_HDCR_HIBIOSEL_Size (4U)
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN (0x2U)
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB13V (0.0058F)
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #define XMC_SCU_POWER_LSB33V (0.0225F)
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * LOCAL DATA
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler_list[XMC_SCU_INTERRUPT_EVENT_MAX]; /**< For registe
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                                         functions o
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                                         occurrence.
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * LOCAL ROUTINES
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  #if defined(UC_ID)
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* This is a non-weak function, which retrieves high precision external oscillator frequency. */
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (OSCHP_FREQUENCY);
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** static void XMC_SCU_lDelay(uint32_t cycles);
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /**************************************************************************************************
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API IMPLEMENTATION
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  **************************************************************************************************
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* This is a local function used to generate the delay until register get updated with new configur
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_lDelay(uint32_t delay)
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 280              	 .loc 3 213 0
 281              	 .cfi_startproc
 282              	 
 283              	 
 284 0000 80B5     	 push {r7,lr}
 285              	.LCFI24:
 286              	 .cfi_def_cfa_offset 8
 287              	 .cfi_offset 7,-8
 288              	 .cfi_offset 14,-4
 289 0002 84B0     	 sub sp,sp,#16
 290              	.LCFI25:
 291              	 .cfi_def_cfa_offset 24
 292 0004 00AF     	 add r7,sp,#0
 293              	.LCFI26:
 294              	 .cfi_def_cfa_register 7
 295 0006 7860     	 str r0,[r7,#4]
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t i;
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 296              	 .loc 3 216 0
 297 0008 FFF7FEFF 	 bl SystemCoreClockUpdate
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   delay =  delay * (uint32_t)(SystemCoreClock / FREQ_1MHZ);
 298              	 .loc 3 217 0
 299 000c 0B4B     	 ldr r3,.L28
 300 000e 1B68     	 ldr r3,[r3]
 301 0010 0B4A     	 ldr r2,.L28+4
 302 0012 A2FB0323 	 umull r2,r3,r2,r3
 303 0016 9A0C     	 lsrs r2,r3,#18
 304 0018 7B68     	 ldr r3,[r7,#4]
 305 001a 02FB03F3 	 mul r3,r2,r3
 306 001e 7B60     	 str r3,[r7,#4]
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   for (i = 0U; i < delay; ++i)
 307              	 .loc 3 219 0
 308 0020 0023     	 movs r3,#0
 309 0022 FB60     	 str r3,[r7,#12]
 310 0024 03E0     	 b .L26
 311              	.L27:
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     __NOP();
 312              	 .loc 3 221 0 discriminator 3
 313              	
 314 0026 00BF     	 nop
 315              	
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 316              	 .loc 3 219 0 discriminator 3
 317              	 .thumb
 318 0028 FB68     	 ldr r3,[r7,#12]
 319 002a 0133     	 adds r3,r3,#1
 320 002c FB60     	 str r3,[r7,#12]
 321              	.L26:
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 322              	 .loc 3 219 0 is_stmt 0 discriminator 1
 323 002e FA68     	 ldr r2,[r7,#12]
 324 0030 7B68     	 ldr r3,[r7,#4]
 325 0032 9A42     	 cmp r2,r3
 326 0034 F7D3     	 bcc .L27
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 327              	 .loc 3 223 0 is_stmt 1
 328 0036 1037     	 adds r7,r7,#16
 329              	.LCFI27:
 330              	 .cfi_def_cfa_offset 8
 331 0038 BD46     	 mov sp,r7
 332              	.LCFI28:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 003a 80BD     	 pop {r7,pc}
 336              	.L29:
 337              	 .align 2
 338              	.L28:
 339 003c 00000000 	 .word SystemCoreClock
 340 0040 83DE1B43 	 .word 1125899907
 341              	 .cfi_endproc
 342              	.LFE169:
 344              	 .section .text.XMC_SCU_INTERRUPT_EnableEvent,"ax",%progbits
 345              	 .align 2
 346              	 .global XMC_SCU_INTERRUPT_EnableEvent
 347              	 .thumb
 348              	 .thumb_func
 350              	XMC_SCU_INTERRUPT_EnableEvent:
 351              	.LFB170:
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable the SCU event */
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 352              	 .loc 3 227 0
 353              	 .cfi_startproc
 354              	 
 355              	 
 356              	 
 357 0000 80B4     	 push {r7}
 358              	.LCFI29:
 359              	 .cfi_def_cfa_offset 4
 360              	 .cfi_offset 7,-4
 361 0002 83B0     	 sub sp,sp,#12
 362              	.LCFI30:
 363              	 .cfi_def_cfa_offset 16
 364 0004 00AF     	 add r7,sp,#0
 365              	.LCFI31:
 366              	 .cfi_def_cfa_register 7
 367 0006 7860     	 str r0,[r7,#4]
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK |= (uint32_t)event;
 368              	 .loc 3 228 0
 369 0008 064B     	 ldr r3,.L31
 370 000a 064A     	 ldr r2,.L31
 371 000c 9168     	 ldr r1,[r2,#8]
 372 000e 7A68     	 ldr r2,[r7,#4]
 373 0010 0A43     	 orrs r2,r2,r1
 374 0012 9968     	 ldr r1,[r3,#8]
 375 0014 0021     	 movs r1,#0
 376 0016 0A43     	 orrs r2,r2,r1
 377 0018 9A60     	 str r2,[r3,#8]
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 378              	 .loc 3 229 0
 379 001a 0C37     	 adds r7,r7,#12
 380              	.LCFI32:
 381              	 .cfi_def_cfa_offset 4
 382 001c BD46     	 mov sp,r7
 383              	.LCFI33:
 384              	 .cfi_def_cfa_register 13
 385              	 
 386 001e 5DF8047B 	 ldr r7,[sp],#4
 387              	.LCFI34:
 388              	 .cfi_restore 7
 389              	 .cfi_def_cfa_offset 0
 390 0022 7047     	 bx lr
 391              	.L32:
 392              	 .align 2
 393              	.L31:
 394 0024 74400050 	 .word 1342193780
 395              	 .cfi_endproc
 396              	.LFE170:
 398              	 .section .text.XMC_SCU_INTERRUPT_DisableEvent,"ax",%progbits
 399              	 .align 2
 400              	 .global XMC_SCU_INTERRUPT_DisableEvent
 401              	 .thumb
 402              	 .thumb_func
 404              	XMC_SCU_INTERRUPT_DisableEvent:
 405              	.LFB171:
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable the SCU event */
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 406              	 .loc 3 233 0
 407              	 .cfi_startproc
 408              	 
 409              	 
 410              	 
 411 0000 80B4     	 push {r7}
 412              	.LCFI35:
 413              	 .cfi_def_cfa_offset 4
 414              	 .cfi_offset 7,-4
 415 0002 83B0     	 sub sp,sp,#12
 416              	.LCFI36:
 417              	 .cfi_def_cfa_offset 16
 418 0004 00AF     	 add r7,sp,#0
 419              	.LCFI37:
 420              	 .cfi_def_cfa_register 7
 421 0006 7860     	 str r0,[r7,#4]
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRMSK &= (uint32_t)~event;
 422              	 .loc 3 234 0
 423 0008 074B     	 ldr r3,.L34
 424 000a 074A     	 ldr r2,.L34
 425 000c 9168     	 ldr r1,[r2,#8]
 426 000e 7A68     	 ldr r2,[r7,#4]
 427 0010 D243     	 mvns r2,r2
 428 0012 0A40     	 ands r2,r2,r1
 429 0014 9968     	 ldr r1,[r3,#8]
 430 0016 0021     	 movs r1,#0
 431 0018 0A43     	 orrs r2,r2,r1
 432 001a 9A60     	 str r2,[r3,#8]
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 433              	 .loc 3 235 0
 434 001c 0C37     	 adds r7,r7,#12
 435              	.LCFI38:
 436              	 .cfi_def_cfa_offset 4
 437 001e BD46     	 mov sp,r7
 438              	.LCFI39:
 439              	 .cfi_def_cfa_register 13
 440              	 
 441 0020 5DF8047B 	 ldr r7,[sp],#4
 442              	.LCFI40:
 443              	 .cfi_restore 7
 444              	 .cfi_def_cfa_offset 0
 445 0024 7047     	 bx lr
 446              	.L35:
 447 0026 00BF     	 .align 2
 448              	.L34:
 449 0028 74400050 	 .word 1342193780
 450              	 .cfi_endproc
 451              	.LFE171:
 453              	 .section .text.XMC_SCU_INTERRUPT_TriggerEvent,"ax",%progbits
 454              	 .align 2
 455              	 .global XMC_SCU_INTERRUPT_TriggerEvent
 456              	 .thumb
 457              	 .thumb_func
 459              	XMC_SCU_INTERRUPT_TriggerEvent:
 460              	.LFB172:
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to trigger the SCU event */
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t event)
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 461              	 .loc 3 239 0
 462              	 .cfi_startproc
 463              	 
 464              	 
 465              	 
 466 0000 80B4     	 push {r7}
 467              	.LCFI41:
 468              	 .cfi_def_cfa_offset 4
 469              	 .cfi_offset 7,-4
 470 0002 83B0     	 sub sp,sp,#12
 471              	.LCFI42:
 472              	 .cfi_def_cfa_offset 16
 473 0004 00AF     	 add r7,sp,#0
 474              	.LCFI43:
 475              	 .cfi_def_cfa_register 7
 476 0006 7860     	 str r0,[r7,#4]
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRSET |= (uint32_t)event;
 477              	 .loc 3 240 0
 478 0008 064B     	 ldr r3,.L37
 479 000a 064A     	 ldr r2,.L37
 480 000c 1169     	 ldr r1,[r2,#16]
 481 000e 7A68     	 ldr r2,[r7,#4]
 482 0010 0A43     	 orrs r2,r2,r1
 483 0012 1969     	 ldr r1,[r3,#16]
 484 0014 0021     	 movs r1,#0
 485 0016 0A43     	 orrs r2,r2,r1
 486 0018 1A61     	 str r2,[r3,#16]
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 487              	 .loc 3 241 0
 488 001a 0C37     	 adds r7,r7,#12
 489              	.LCFI44:
 490              	 .cfi_def_cfa_offset 4
 491 001c BD46     	 mov sp,r7
 492              	.LCFI45:
 493              	 .cfi_def_cfa_register 13
 494              	 
 495 001e 5DF8047B 	 ldr r7,[sp],#4
 496              	.LCFI46:
 497              	 .cfi_restore 7
 498              	 .cfi_def_cfa_offset 0
 499 0022 7047     	 bx lr
 500              	.L38:
 501              	 .align 2
 502              	.L37:
 503 0024 74400050 	 .word 1342193780
 504              	 .cfi_endproc
 505              	.LFE172:
 507              	 .section .text.XMC_SCU_INTERUPT_GetEventStatus,"ax",%progbits
 508              	 .align 2
 509              	 .global XMC_SCU_INTERUPT_GetEventStatus
 510              	 .thumb
 511              	 .thumb_func
 513              	XMC_SCU_INTERUPT_GetEventStatus:
 514              	.LFB173:
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to retrieve the SCU event status */
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void)
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 515              	 .loc 3 245 0
 516              	 .cfi_startproc
 517              	 
 518              	 
 519              	 
 520 0000 80B4     	 push {r7}
 521              	.LCFI47:
 522              	 .cfi_def_cfa_offset 4
 523              	 .cfi_offset 7,-4
 524 0002 00AF     	 add r7,sp,#0
 525              	.LCFI48:
 526              	 .cfi_def_cfa_register 7
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (SCU_INTERRUPT->SRRAW);
 527              	 .loc 3 246 0
 528 0004 034B     	 ldr r3,.L41
 529 0006 5B68     	 ldr r3,[r3,#4]
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 530              	 .loc 3 247 0
 531 0008 1846     	 mov r0,r3
 532 000a BD46     	 mov sp,r7
 533              	.LCFI49:
 534              	 .cfi_def_cfa_register 13
 535              	 
 536 000c 5DF8047B 	 ldr r7,[sp],#4
 537              	.LCFI50:
 538              	 .cfi_restore 7
 539              	 .cfi_def_cfa_offset 0
 540 0010 7047     	 bx lr
 541              	.L42:
 542 0012 00BF     	 .align 2
 543              	.L41:
 544 0014 74400050 	 .word 1342193780
 545              	 .cfi_endproc
 546              	.LFE173:
 548              	 .section .text.XMC_SCU_INTERRUPT_ClearEventStatus,"ax",%progbits
 549              	 .align 2
 550              	 .global XMC_SCU_INTERRUPT_ClearEventStatus
 551              	 .thumb
 552              	 .thumb_func
 554              	XMC_SCU_INTERRUPT_ClearEventStatus:
 555              	.LFB174:
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to clear the SCU event status */
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event)
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 556              	 .loc 3 251 0
 557              	 .cfi_startproc
 558              	 
 559              	 
 560              	 
 561 0000 80B4     	 push {r7}
 562              	.LCFI51:
 563              	 .cfi_def_cfa_offset 4
 564              	 .cfi_offset 7,-4
 565 0002 83B0     	 sub sp,sp,#12
 566              	.LCFI52:
 567              	 .cfi_def_cfa_offset 16
 568 0004 00AF     	 add r7,sp,#0
 569              	.LCFI53:
 570              	 .cfi_def_cfa_register 7
 571 0006 7860     	 str r0,[r7,#4]
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->SRCLR = (uint32_t)event;
 572              	 .loc 3 252 0
 573 0008 054B     	 ldr r3,.L44
 574 000a DA68     	 ldr r2,[r3,#12]
 575 000c 0021     	 movs r1,#0
 576 000e 7A68     	 ldr r2,[r7,#4]
 577 0010 0A43     	 orrs r2,r2,r1
 578 0012 DA60     	 str r2,[r3,#12]
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 579              	 .loc 3 253 0
 580 0014 0C37     	 adds r7,r7,#12
 581              	.LCFI54:
 582              	 .cfi_def_cfa_offset 4
 583 0016 BD46     	 mov sp,r7
 584              	.LCFI55:
 585              	 .cfi_def_cfa_register 13
 586              	 
 587 0018 5DF8047B 	 ldr r7,[sp],#4
 588              	.LCFI56:
 589              	 .cfi_restore 7
 590              	 .cfi_def_cfa_offset 0
 591 001c 7047     	 bx lr
 592              	.L45:
 593 001e 00BF     	 .align 2
 594              	.L44:
 595 0020 74400050 	 .word 1342193780
 596              	 .cfi_endproc
 597              	.LFE174:
 599              	 .section .text.XMC_SCU_GetBootMode,"ax",%progbits
 600              	 .align 2
 601              	 .global XMC_SCU_GetBootMode
 602              	 .thumb
 603              	 .thumb_func
 605              	XMC_SCU_GetBootMode:
 606              	.LFB175:
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to retrieve the currently deployed device bootmode */
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetBootMode(void)
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 607              	 .loc 3 258 0
 608              	 .cfi_startproc
 609              	 
 610              	 
 611              	 
 612 0000 80B4     	 push {r7}
 613              	.LCFI57:
 614              	 .cfi_def_cfa_offset 4
 615              	 .cfi_offset 7,-4
 616 0002 00AF     	 add r7,sp,#0
 617              	.LCFI58:
 618              	 .cfi_def_cfa_register 7
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(SCU_GENERAL->STCON & SCU_GENERAL_STCON_SWCON_Msk);
 619              	 .loc 3 259 0
 620 0004 044B     	 ldr r3,.L48
 621 0006 1B69     	 ldr r3,[r3,#16]
 622 0008 03F47063 	 and r3,r3,#3840
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 623              	 .loc 3 260 0
 624 000c 1846     	 mov r0,r3
 625 000e BD46     	 mov sp,r7
 626              	.LCFI59:
 627              	 .cfi_def_cfa_register 13
 628              	 
 629 0010 5DF8047B 	 ldr r7,[sp],#4
 630              	.LCFI60:
 631              	 .cfi_restore 7
 632              	 .cfi_def_cfa_offset 0
 633 0014 7047     	 bx lr
 634              	.L49:
 635 0016 00BF     	 .align 2
 636              	.L48:
 637 0018 00400050 	 .word 1342193664
 638              	 .cfi_endproc
 639              	.LFE175:
 641              	 .section .text.XMC_SCU_SetBootMode,"ax",%progbits
 642              	 .align 2
 643              	 .global XMC_SCU_SetBootMode
 644              	 .thumb
 645              	 .thumb_func
 647              	XMC_SCU_SetBootMode:
 648              	.LFB176:
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program a new device bootmode */
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t bootmode)
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 649              	 .loc 3 264 0
 650              	 .cfi_startproc
 651              	 
 652              	 
 653              	 
 654 0000 80B4     	 push {r7}
 655              	.LCFI61:
 656              	 .cfi_def_cfa_offset 4
 657              	 .cfi_offset 7,-4
 658 0002 83B0     	 sub sp,sp,#12
 659              	.LCFI62:
 660              	 .cfi_def_cfa_offset 16
 661 0004 00AF     	 add r7,sp,#0
 662              	.LCFI63:
 663              	 .cfi_def_cfa_register 7
 664 0006 0346     	 mov r3,r0
 665 0008 FB80     	 strh r3,[r7,#6]
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->STCON = (uint32_t)bootmode;
 666              	 .loc 3 265 0
 667 000a 054B     	 ldr r3,.L51
 668 000c FA88     	 ldrh r2,[r7,#6]
 669 000e 1969     	 ldr r1,[r3,#16]
 670 0010 0021     	 movs r1,#0
 671 0012 0A43     	 orrs r2,r2,r1
 672 0014 1A61     	 str r2,[r3,#16]
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 673              	 .loc 3 266 0
 674 0016 0C37     	 adds r7,r7,#12
 675              	.LCFI64:
 676              	 .cfi_def_cfa_offset 4
 677 0018 BD46     	 mov sp,r7
 678              	.LCFI65:
 679              	 .cfi_def_cfa_register 13
 680              	 
 681 001a 5DF8047B 	 ldr r7,[sp],#4
 682              	.LCFI66:
 683              	 .cfi_restore 7
 684              	 .cfi_def_cfa_offset 0
 685 001e 7047     	 bx lr
 686              	.L52:
 687              	 .align 2
 688              	.L51:
 689 0020 00400050 	 .word 1342193664
 690              	 .cfi_endproc
 691              	.LFE176:
 693              	 .section .text.XMC_SCU_ReadGPR,"ax",%progbits
 694              	 .align 2
 695              	 .global XMC_SCU_ReadGPR
 696              	 .thumb
 697              	 .thumb_func
 699              	XMC_SCU_ReadGPR:
 700              	.LFB177:
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to read from General purpose register */
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadGPR(const uint32_t index)
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 701              	 .loc 3 270 0
 702              	 .cfi_startproc
 703              	 
 704              	 
 705              	 
 706 0000 80B4     	 push {r7}
 707              	.LCFI67:
 708              	 .cfi_def_cfa_offset 4
 709              	 .cfi_offset 7,-4
 710 0002 83B0     	 sub sp,sp,#12
 711              	.LCFI68:
 712              	 .cfi_def_cfa_offset 16
 713 0004 00AF     	 add r7,sp,#0
 714              	.LCFI69:
 715              	 .cfi_def_cfa_register 7
 716 0006 7860     	 str r0,[r7,#4]
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->GPR[index]);
 717              	 .loc 3 271 0
 718 0008 054A     	 ldr r2,.L55
 719 000a 7B68     	 ldr r3,[r7,#4]
 720 000c 0A33     	 adds r3,r3,#10
 721 000e 9B00     	 lsls r3,r3,#2
 722 0010 1344     	 add r3,r3,r2
 723 0012 5B68     	 ldr r3,[r3,#4]
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 724              	 .loc 3 272 0
 725 0014 1846     	 mov r0,r3
 726 0016 0C37     	 adds r7,r7,#12
 727              	.LCFI70:
 728              	 .cfi_def_cfa_offset 4
 729 0018 BD46     	 mov sp,r7
 730              	.LCFI71:
 731              	 .cfi_def_cfa_register 13
 732              	 
 733 001a 5DF8047B 	 ldr r7,[sp],#4
 734              	.LCFI72:
 735              	 .cfi_restore 7
 736              	 .cfi_def_cfa_offset 0
 737 001e 7047     	 bx lr
 738              	.L56:
 739              	 .align 2
 740              	.L55:
 741 0020 00400050 	 .word 1342193664
 742              	 .cfi_endproc
 743              	.LFE177:
 745              	 .section .text.XMC_SCU_WriteGPR,"ax",%progbits
 746              	 .align 2
 747              	 .global XMC_SCU_WriteGPR
 748              	 .thumb
 749              	 .thumb_func
 751              	XMC_SCU_WriteGPR:
 752              	.LFB178:
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to write to GPR */
 275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data)
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 753              	 .loc 3 276 0
 754              	 .cfi_startproc
 755              	 
 756              	 
 757              	 
 758 0000 80B4     	 push {r7}
 759              	.LCFI73:
 760              	 .cfi_def_cfa_offset 4
 761              	 .cfi_offset 7,-4
 762 0002 83B0     	 sub sp,sp,#12
 763              	.LCFI74:
 764              	 .cfi_def_cfa_offset 16
 765 0004 00AF     	 add r7,sp,#0
 766              	.LCFI75:
 767              	 .cfi_def_cfa_register 7
 768 0006 7860     	 str r0,[r7,#4]
 769 0008 3960     	 str r1,[r7]
 277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GPR[index] = data;
 770              	 .loc 3 277 0
 771 000a 074A     	 ldr r2,.L58
 772 000c 7B68     	 ldr r3,[r7,#4]
 773 000e 0A33     	 adds r3,r3,#10
 774 0010 9B00     	 lsls r3,r3,#2
 775 0012 1344     	 add r3,r3,r2
 776 0014 5A68     	 ldr r2,[r3,#4]
 777 0016 0021     	 movs r1,#0
 778 0018 3A68     	 ldr r2,[r7]
 779 001a 0A43     	 orrs r2,r2,r1
 780 001c 5A60     	 str r2,[r3,#4]
 278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 781              	 .loc 3 278 0
 782 001e 0C37     	 adds r7,r7,#12
 783              	.LCFI76:
 784              	 .cfi_def_cfa_offset 4
 785 0020 BD46     	 mov sp,r7
 786              	.LCFI77:
 787              	 .cfi_def_cfa_register 13
 788              	 
 789 0022 5DF8047B 	 ldr r7,[sp],#4
 790              	.LCFI78:
 791              	 .cfi_restore 7
 792              	 .cfi_def_cfa_offset 0
 793 0026 7047     	 bx lr
 794              	.L59:
 795              	 .align 2
 796              	.L58:
 797 0028 00400050 	 .word 1342193664
 798              	 .cfi_endproc
 799              	.LFE178:
 801              	 .section .text.XMC_SCU_EnableOutOfRangeComparator,"ax",%progbits
 802              	 .align 2
 803              	 .global XMC_SCU_EnableOutOfRangeComparator
 804              	 .thumb
 805              	 .thumb_func
 807              	XMC_SCU_EnableOutOfRangeComparator:
 808              	.LFB179:
 279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 809              	 .loc 3 282 0
 810              	 .cfi_startproc
 811              	 
 812              	 
 813              	 
 814 0000 80B4     	 push {r7}
 815              	.LCFI79:
 816              	 .cfi_def_cfa_offset 4
 817              	 .cfi_offset 7,-4
 818 0002 83B0     	 sub sp,sp,#12
 819              	.LCFI80:
 820              	 .cfi_def_cfa_offset 16
 821 0004 00AF     	 add r7,sp,#0
 822              	.LCFI81:
 823              	 .cfi_def_cfa_register 7
 824 0006 7860     	 str r0,[r7,#4]
 825 0008 3960     	 str r1,[r7]
 283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_EnableOutOfangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel))
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****    
 286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] |= (uint32_t)(1UL << channel);
 826              	 .loc 3 286 0
 827 000a 0C4A     	 ldr r2,.L61
 828 000c 0B49     	 ldr r1,.L61
 829 000e 7B68     	 ldr r3,[r7,#4]
 830 0010 2833     	 adds r3,r3,#40
 831 0012 51F82310 	 ldr r1,[r1,r3,lsl#2]
 832 0016 3B68     	 ldr r3,[r7]
 833 0018 0120     	 movs r0,#1
 834 001a 00FA03F3 	 lsl r3,r0,r3
 835 001e 1943     	 orrs r1,r1,r3
 836 0020 7B68     	 ldr r3,[r7,#4]
 837 0022 2833     	 adds r3,r3,#40
 838 0024 52F82300 	 ldr r0,[r2,r3,lsl#2]
 839 0028 0020     	 movs r0,#0
 840 002a 0143     	 orrs r1,r1,r0
 841 002c 42F82310 	 str r1,[r2,r3,lsl#2]
 287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 842              	 .loc 3 287 0
 843 0030 0C37     	 adds r7,r7,#12
 844              	.LCFI82:
 845              	 .cfi_def_cfa_offset 4
 846 0032 BD46     	 mov sp,r7
 847              	.LCFI83:
 848              	 .cfi_def_cfa_register 13
 849              	 
 850 0034 5DF8047B 	 ldr r7,[sp],#4
 851              	.LCFI84:
 852              	 .cfi_restore 7
 853              	 .cfi_def_cfa_offset 0
 854 0038 7047     	 bx lr
 855              	.L62:
 856 003a 00BF     	 .align 2
 857              	.L61:
 858 003c 00400050 	 .word 1342193664
 859              	 .cfi_endproc
 860              	.LFE179:
 862              	 .section .text.XMC_SCU_DisableOutOfRangeComparator,"ax",%progbits
 863              	 .align 2
 864              	 .global XMC_SCU_DisableOutOfRangeComparator
 865              	 .thumb
 866              	 .thumb_func
 868              	XMC_SCU_DisableOutOfRangeComparator:
 869              	.LFB180:
 288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable Out of Range Comparator(ORC) for a desired group and a desired channel input */
 290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel)
 291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 870              	 .loc 3 291 0
 871              	 .cfi_startproc
 872              	 
 873              	 
 874              	 
 875 0000 80B4     	 push {r7}
 876              	.LCFI85:
 877              	 .cfi_def_cfa_offset 4
 878              	 .cfi_offset 7,-4
 879 0002 83B0     	 sub sp,sp,#12
 880              	.LCFI86:
 881              	 .cfi_def_cfa_offset 16
 882 0004 00AF     	 add r7,sp,#0
 883              	.LCFI87:
 884              	 .cfi_def_cfa_register 7
 885 0006 7860     	 str r0,[r7,#4]
 886 0008 3960     	 str r1,[r7]
 292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Group Number",XMC_SCU_CHECK_GRPNUM(group));
 293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_DisableOutOfRangeComparator:Wrong Channel Number",XMC_SCU_CHECK_CHNUM(channel
 294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****    
 295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->GORCEN[group] &= (uint32_t)~(1UL << channel);
 887              	 .loc 3 295 0
 888 000a 0C4A     	 ldr r2,.L64
 889 000c 0B49     	 ldr r1,.L64
 890 000e 7B68     	 ldr r3,[r7,#4]
 891 0010 2833     	 adds r3,r3,#40
 892 0012 51F82310 	 ldr r1,[r1,r3,lsl#2]
 893 0016 3B68     	 ldr r3,[r7]
 894 0018 0120     	 movs r0,#1
 895 001a 00FA03F3 	 lsl r3,r0,r3
 896 001e DB43     	 mvns r3,r3
 897 0020 1940     	 ands r1,r1,r3
 898 0022 7B68     	 ldr r3,[r7,#4]
 899 0024 2833     	 adds r3,r3,#40
 900 0026 52F82300 	 ldr r0,[r2,r3,lsl#2]
 901 002a 0020     	 movs r0,#0
 902 002c 0143     	 orrs r1,r1,r0
 903 002e 42F82310 	 str r1,[r2,r3,lsl#2]
 296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 904              	 .loc 3 296 0
 905 0032 0C37     	 adds r7,r7,#12
 906              	.LCFI88:
 907              	 .cfi_def_cfa_offset 4
 908 0034 BD46     	 mov sp,r7
 909              	.LCFI89:
 910              	 .cfi_def_cfa_register 13
 911              	 
 912 0036 5DF8047B 	 ldr r7,[sp],#4
 913              	.LCFI90:
 914              	 .cfi_restore 7
 915              	 .cfi_def_cfa_offset 0
 916 003a 7047     	 bx lr
 917              	.L65:
 918              	 .align 2
 919              	.L64:
 920 003c 00400050 	 .word 1342193664
 921              	 .cfi_endproc
 922              	.LFE180:
 924              	 .section .text.XMC_SCU_CalibrateTemperatureSensor,"ax",%progbits
 925              	 .align 2
 926              	 .global XMC_SCU_CalibrateTemperatureSensor
 927              	 .thumb
 928              	 .thumb_func
 930              	XMC_SCU_CalibrateTemperatureSensor:
 931              	.LFB181:
 297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to calibrate temperature sensor */
 299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain)
 300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 932              	 .loc 3 300 0
 933              	 .cfi_startproc
 934              	 
 935              	 
 936              	 
 937 0000 80B4     	 push {r7}
 938              	.LCFI91:
 939              	 .cfi_def_cfa_offset 4
 940              	 .cfi_offset 7,-4
 941 0002 83B0     	 sub sp,sp,#12
 942              	.LCFI92:
 943              	 .cfi_def_cfa_offset 16
 944 0004 00AF     	 add r7,sp,#0
 945              	.LCFI93:
 946              	 .cfi_def_cfa_register 7
 947 0006 7860     	 str r0,[r7,#4]
 948 0008 3960     	 str r1,[r7]
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 949              	 .loc 3 301 0
 950 000a 094B     	 ldr r3,.L67
 951 000c 7A68     	 ldr r2,[r7,#4]
 952 000e 1101     	 lsls r1,r2,#4
 302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(gain << SCU_GENERAL_DTSCON_GAIN_Pos) |
 953              	 .loc 3 302 0
 954 0010 3A68     	 ldr r2,[r7]
 955 0012 D202     	 lsls r2,r2,#11
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 956              	 .loc 3 301 0
 957 0014 0A43     	 orrs r2,r2,r1
 303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(0x4UL << SCU_GENERAL_DTSCON_REFTRIM_Pos) |
 958              	 .loc 3 303 0
 959 0016 42F40802 	 orr r2,r2,#8912896
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON = ((uint32_t)(offset << SCU_GENERAL_DTSCON_OFFSET_Pos) |
 960              	 .loc 3 301 0
 961 001a D3F88C10 	 ldr r1,[r3,#140]
 962 001e 0021     	 movs r1,#0
 963 0020 0A43     	 orrs r2,r2,r1
 964 0022 C3F88C20 	 str r2,[r3,#140]
 304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         (uint32_t)(0x8UL << SCU_GENERAL_DTSCON_BGTRIM_Pos));
 305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 965              	 .loc 3 305 0
 966 0026 0C37     	 adds r7,r7,#12
 967              	.LCFI94:
 968              	 .cfi_def_cfa_offset 4
 969 0028 BD46     	 mov sp,r7
 970              	.LCFI95:
 971              	 .cfi_def_cfa_register 13
 972              	 
 973 002a 5DF8047B 	 ldr r7,[sp],#4
 974              	.LCFI96:
 975              	 .cfi_restore 7
 976              	 .cfi_def_cfa_offset 0
 977 002e 7047     	 bx lr
 978              	.L68:
 979              	 .align 2
 980              	.L67:
 981 0030 00400050 	 .word 1342193664
 982              	 .cfi_endproc
 983              	.LFE181:
 985              	 .section .text.XMC_SCU_EnableTemperatureSensor,"ax",%progbits
 986              	 .align 2
 987              	 .global XMC_SCU_EnableTemperatureSensor
 988              	 .thumb
 989              	 .thumb_func
 991              	XMC_SCU_EnableTemperatureSensor:
 992              	.LFB182:
 306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable die temperature measurement by powering the DTS module. */
 307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_EnableTemperatureSensor(void)
 308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 993              	 .loc 3 308 0
 994              	 .cfi_startproc
 995              	 
 996              	 
 997              	 
 998 0000 80B4     	 push {r7}
 999              	.LCFI97:
 1000              	 .cfi_def_cfa_offset 4
 1001              	 .cfi_offset 7,-4
 1002 0002 00AF     	 add r7,sp,#0
 1003              	.LCFI98:
 1004              	 .cfi_def_cfa_register 7
 309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~(SCU_GENERAL_DTSCON_PWD_Msk);
 1005              	 .loc 3 309 0
 1006 0004 074B     	 ldr r3,.L70
 1007 0006 074A     	 ldr r2,.L70
 1008 0008 D2F88C20 	 ldr r2,[r2,#140]
 1009 000c 22F00102 	 bic r2,r2,#1
 1010 0010 D3F88C10 	 ldr r1,[r3,#140]
 1011 0014 0021     	 movs r1,#0
 1012 0016 0A43     	 orrs r2,r2,r1
 1013 0018 C3F88C20 	 str r2,[r3,#140]
 310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1014              	 .loc 3 310 0
 1015 001c BD46     	 mov sp,r7
 1016              	.LCFI99:
 1017              	 .cfi_def_cfa_register 13
 1018              	 
 1019 001e 5DF8047B 	 ldr r7,[sp],#4
 1020              	.LCFI100:
 1021              	 .cfi_restore 7
 1022              	 .cfi_def_cfa_offset 0
 1023 0022 7047     	 bx lr
 1024              	.L71:
 1025              	 .align 2
 1026              	.L70:
 1027 0024 00400050 	 .word 1342193664
 1028              	 .cfi_endproc
 1029              	.LFE182:
 1031              	 .section .text.XMC_SCU_DisableTemperatureSensor,"ax",%progbits
 1032              	 .align 2
 1033              	 .global XMC_SCU_DisableTemperatureSensor
 1034              	 .thumb
 1035              	 .thumb_func
 1037              	XMC_SCU_DisableTemperatureSensor:
 1038              	.LFB183:
 311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable die temperature measurement by powering the DTS module off. */
 313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_DisableTemperatureSensor(void)
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1039              	 .loc 3 314 0
 1040              	 .cfi_startproc
 1041              	 
 1042              	 
 1043              	 
 1044 0000 80B4     	 push {r7}
 1045              	.LCFI101:
 1046              	 .cfi_def_cfa_offset 4
 1047              	 .cfi_offset 7,-4
 1048 0002 00AF     	 add r7,sp,#0
 1049              	.LCFI102:
 1050              	 .cfi_def_cfa_register 7
 315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_PWD_Msk;
 1051              	 .loc 3 315 0
 1052 0004 074B     	 ldr r3,.L73
 1053 0006 074A     	 ldr r2,.L73
 1054 0008 D2F88C20 	 ldr r2,[r2,#140]
 1055 000c 42F00102 	 orr r2,r2,#1
 1056 0010 D3F88C10 	 ldr r1,[r3,#140]
 1057 0014 0021     	 movs r1,#0
 1058 0016 0A43     	 orrs r2,r2,r1
 1059 0018 C3F88C20 	 str r2,[r3,#140]
 316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1060              	 .loc 3 316 0
 1061 001c BD46     	 mov sp,r7
 1062              	.LCFI103:
 1063              	 .cfi_def_cfa_register 13
 1064              	 
 1065 001e 5DF8047B 	 ldr r7,[sp],#4
 1066              	.LCFI104:
 1067              	 .cfi_restore 7
 1068              	 .cfi_def_cfa_offset 0
 1069 0022 7047     	 bx lr
 1070              	.L74:
 1071              	 .align 2
 1072              	.L73:
 1073 0024 00400050 	 .word 1342193664
 1074              	 .cfi_endproc
 1075              	.LFE183:
 1077              	 .section .text.XMC_SCU_IsTemperatureSensorEnabled,"ax",%progbits
 1078              	 .align 2
 1079              	 .global XMC_SCU_IsTemperatureSensorEnabled
 1080              	 .thumb
 1081              	 .thumb_func
 1083              	XMC_SCU_IsTemperatureSensorEnabled:
 1084              	.LFB184:
 317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to provide the die temperature sensor power status. */
 319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorEnabled(void)
 320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1085              	 .loc 3 320 0
 1086              	 .cfi_startproc
 1087              	 
 1088              	 
 1089              	 
 1090 0000 80B4     	 push {r7}
 1091              	.LCFI105:
 1092              	 .cfi_def_cfa_offset 4
 1093              	 .cfi_offset 7,-4
 1094 0002 00AF     	 add r7,sp,#0
 1095              	.LCFI106:
 1096              	 .cfi_def_cfa_register 7
 321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSCON & SCU_GENERAL_DTSCON_PWD_Msk) == 0U);
 1097              	 .loc 3 321 0
 1098 0004 074B     	 ldr r3,.L77
 1099 0006 D3F88C30 	 ldr r3,[r3,#140]
 1100 000a 03F00103 	 and r3,r3,#1
 1101 000e 002B     	 cmp r3,#0
 1102 0010 0CBF     	 ite eq
 1103 0012 0123     	 moveq r3,#1
 1104 0014 0023     	 movne r3,#0
 1105 0016 DBB2     	 uxtb r3,r3
 322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1106              	 .loc 3 322 0
 1107 0018 1846     	 mov r0,r3
 1108 001a BD46     	 mov sp,r7
 1109              	.LCFI107:
 1110              	 .cfi_def_cfa_register 13
 1111              	 
 1112 001c 5DF8047B 	 ldr r7,[sp],#4
 1113              	.LCFI108:
 1114              	 .cfi_restore 7
 1115              	 .cfi_def_cfa_offset 0
 1116 0020 7047     	 bx lr
 1117              	.L78:
 1118 0022 00BF     	 .align 2
 1119              	.L77:
 1120 0024 00400050 	 .word 1342193664
 1121              	 .cfi_endproc
 1122              	.LFE184:
 1124              	 .section .text.XMC_SCU_IsTemperatureSensorReady,"ax",%progbits
 1125              	 .align 2
 1126              	 .global XMC_SCU_IsTemperatureSensorReady
 1127              	 .thumb
 1128              	 .thumb_func
 1130              	XMC_SCU_IsTemperatureSensorReady:
 1131              	.LFB185:
 323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to check if the die temperature sensor is ready to start a measurement. */
 325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorReady(void)
 326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1132              	 .loc 3 326 0
 1133              	 .cfi_startproc
 1134              	 
 1135              	 
 1136              	 
 1137 0000 80B4     	 push {r7}
 1138              	.LCFI109:
 1139              	 .cfi_def_cfa_offset 4
 1140              	 .cfi_offset 7,-4
 1141 0002 00AF     	 add r7,sp,#0
 1142              	.LCFI110:
 1143              	 .cfi_def_cfa_register 7
 327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RDY_Msk) != 0U);
 1144              	 .loc 3 327 0
 1145 0004 074B     	 ldr r3,.L81
 1146 0006 D3F89030 	 ldr r3,[r3,#144]
 1147 000a 03F48043 	 and r3,r3,#16384
 1148 000e 002B     	 cmp r3,#0
 1149 0010 14BF     	 ite ne
 1150 0012 0123     	 movne r3,#1
 1151 0014 0023     	 moveq r3,#0
 1152 0016 DBB2     	 uxtb r3,r3
 328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1153              	 .loc 3 328 0
 1154 0018 1846     	 mov r0,r3
 1155 001a BD46     	 mov sp,r7
 1156              	.LCFI111:
 1157              	 .cfi_def_cfa_register 13
 1158              	 
 1159 001c 5DF8047B 	 ldr r7,[sp],#4
 1160              	.LCFI112:
 1161              	 .cfi_restore 7
 1162              	 .cfi_def_cfa_offset 0
 1163 0020 7047     	 bx lr
 1164              	.L82:
 1165 0022 00BF     	 .align 2
 1166              	.L81:
 1167 0024 00400050 	 .word 1342193664
 1168              	 .cfi_endproc
 1169              	.LFE185:
 1171              	 .section .text.XMC_SCU_StartTemperatureMeasurement,"ax",%progbits
 1172              	 .align 2
 1173              	 .global XMC_SCU_StartTemperatureMeasurement
 1174              	 .thumb
 1175              	 .thumb_func
 1177              	XMC_SCU_StartTemperatureMeasurement:
 1178              	.LFB186:
 329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to start device temperature measurements */
 330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void)
 331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1179              	 .loc 3 331 0
 1180              	 .cfi_startproc
 1181              	 
 1182              	 
 1183 0000 80B5     	 push {r7,lr}
 1184              	.LCFI113:
 1185              	 .cfi_def_cfa_offset 8
 1186              	 .cfi_offset 7,-8
 1187              	 .cfi_offset 14,-4
 1188 0002 82B0     	 sub sp,sp,#8
 1189              	.LCFI114:
 1190              	 .cfi_def_cfa_offset 16
 1191 0004 00AF     	 add r7,sp,#0
 1192              	.LCFI115:
 1193              	 .cfi_def_cfa_register 7
 332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status = XMC_SCU_STATUS_OK;
 1194              	 .loc 3 332 0
 1195 0006 0023     	 movs r3,#0
 1196 0008 FB71     	 strb r3,[r7,#7]
 333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1197              	 .loc 3 334 0
 1198 000a FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1199 000e 0346     	 mov r3,r0
 1200 0010 83F00103 	 eor r3,r3,#1
 1201 0014 DBB2     	 uxtb r3,r3
 1202 0016 002B     	 cmp r3,#0
 1203 0018 01D0     	 beq .L84
 335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 1204              	 .loc 3 336 0
 1205 001a 0123     	 movs r3,#1
 1206 001c FB71     	 strb r3,[r7,#7]
 1207              	.L84:
 337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****    
 339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorBusy() == true)
 1208              	 .loc 3 339 0
 1209 001e FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorBusy
 1210 0022 0346     	 mov r3,r0
 1211 0024 002B     	 cmp r3,#0
 1212 0026 01D0     	 beq .L85
 340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_BUSY;
 1213              	 .loc 3 341 0
 1214 0028 0223     	 movs r3,#2
 1215 002a FB71     	 strb r3,[r7,#7]
 1216              	.L85:
 342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* And start the measurement */
 345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON |= (uint32_t)SCU_GENERAL_DTSCON_START_Msk;
 1217              	 .loc 3 345 0
 1218 002c 084B     	 ldr r3,.L87
 1219 002e 084A     	 ldr r2,.L87
 1220 0030 D2F88C20 	 ldr r2,[r2,#140]
 1221 0034 42F00202 	 orr r2,r2,#2
 1222 0038 D3F88C10 	 ldr r1,[r3,#140]
 1223 003c 0021     	 movs r1,#0
 1224 003e 0A43     	 orrs r2,r2,r1
 1225 0040 C3F88C20 	 str r2,[r3,#140]
 346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (status);
 1226              	 .loc 3 347 0
 1227 0044 FB79     	 ldrb r3,[r7,#7]
 348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1228              	 .loc 3 348 0
 1229 0046 1846     	 mov r0,r3
 1230 0048 0837     	 adds r7,r7,#8
 1231              	.LCFI116:
 1232              	 .cfi_def_cfa_offset 8
 1233 004a BD46     	 mov sp,r7
 1234              	.LCFI117:
 1235              	 .cfi_def_cfa_register 13
 1236              	 
 1237 004c 80BD     	 pop {r7,pc}
 1238              	.L88:
 1239 004e 00BF     	 .align 2
 1240              	.L87:
 1241 0050 00400050 	 .word 1342193664
 1242              	 .cfi_endproc
 1243              	.LFE186:
 1245              	 .section .text.XMC_SCU_GetTemperatureMeasurement,"ax",%progbits
 1246              	 .align 2
 1247              	 .global XMC_SCU_GetTemperatureMeasurement
 1248              	 .thumb
 1249              	 .thumb_func
 1251              	XMC_SCU_GetTemperatureMeasurement:
 1252              	.LFB187:
 349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to retrieve the temperature measured */
 351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_GetTemperatureMeasurement(void)
 352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1253              	 .loc 3 352 0
 1254              	 .cfi_startproc
 1255              	 
 1256              	 
 1257 0000 80B5     	 push {r7,lr}
 1258              	.LCFI118:
 1259              	 .cfi_def_cfa_offset 8
 1260              	 .cfi_offset 7,-8
 1261              	 .cfi_offset 14,-4
 1262 0002 82B0     	 sub sp,sp,#8
 1263              	.LCFI119:
 1264              	 .cfi_def_cfa_offset 16
 1265 0004 00AF     	 add r7,sp,#0
 1266              	.LCFI120:
 1267              	 .cfi_def_cfa_register 7
 353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t temperature;
 354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (XMC_SCU_IsTemperatureSensorEnabled() == false)
 1268              	 .loc 3 355 0
 1269 0006 FFF7FEFF 	 bl XMC_SCU_IsTemperatureSensorEnabled
 1270 000a 0346     	 mov r3,r0
 1271 000c 83F00103 	 eor r3,r3,#1
 1272 0010 DBB2     	 uxtb r3,r3
 1273 0012 002B     	 cmp r3,#0
 1274 0014 03D0     	 beq .L90
 356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     temperature = 0x7FFFFFFFUL;
 1275              	 .loc 3 357 0
 1276 0016 6FF00043 	 mvn r3,#-2147483648
 1277 001a 7B60     	 str r3,[r7,#4]
 1278 001c 05E0     	 b .L91
 1279              	.L90:
 358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     temperature = (uint32_t)((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_RESULT_Msk) >> SCU_GENERAL
 1280              	 .loc 3 361 0
 1281 001e 054B     	 ldr r3,.L93
 1282 0020 D3F89030 	 ldr r3,[r3,#144]
 1283 0024 C3F30903 	 ubfx r3,r3,#0,#10
 1284 0028 7B60     	 str r3,[r7,#4]
 1285              	.L91:
 362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((uint32_t)temperature);
 1286              	 .loc 3 364 0
 1287 002a 7B68     	 ldr r3,[r7,#4]
 365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1288              	 .loc 3 365 0
 1289 002c 1846     	 mov r0,r3
 1290 002e 0837     	 adds r7,r7,#8
 1291              	.LCFI121:
 1292              	 .cfi_def_cfa_offset 8
 1293 0030 BD46     	 mov sp,r7
 1294              	.LCFI122:
 1295              	 .cfi_def_cfa_register 13
 1296              	 
 1297 0032 80BD     	 pop {r7,pc}
 1298              	.L94:
 1299              	 .align 2
 1300              	.L93:
 1301 0034 00400050 	 .word 1342193664
 1302              	 .cfi_endproc
 1303              	.LFE187:
 1305              	 .section .text.XMC_SCU_IsTemperatureSensorBusy,"ax",%progbits
 1306              	 .align 2
 1307              	 .global XMC_SCU_IsTemperatureSensorBusy
 1308              	 .thumb
 1309              	 .thumb_func
 1311              	XMC_SCU_IsTemperatureSensorBusy:
 1312              	.LFB188:
 366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to know whether Die temperature sensor is busy */
 368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_IsTemperatureSensorBusy(void)
 369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1313              	 .loc 3 369 0
 1314              	 .cfi_startproc
 1315              	 
 1316              	 
 1317              	 
 1318 0000 80B4     	 push {r7}
 1319              	.LCFI123:
 1320              	 .cfi_def_cfa_offset 4
 1321              	 .cfi_offset 7,-4
 1322 0002 00AF     	 add r7,sp,#0
 1323              	.LCFI124:
 1324              	 .cfi_def_cfa_register 7
 370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((SCU_GENERAL->DTSSTAT & SCU_GENERAL_DTSSTAT_BUSY_Msk) != 0U);
 1325              	 .loc 3 370 0
 1326 0004 074B     	 ldr r3,.L97
 1327 0006 D3F89030 	 ldr r3,[r3,#144]
 1328 000a 03F40043 	 and r3,r3,#32768
 1329 000e 002B     	 cmp r3,#0
 1330 0010 14BF     	 ite ne
 1331 0012 0123     	 movne r3,#1
 1332 0014 0023     	 moveq r3,#0
 1333 0016 DBB2     	 uxtb r3,r3
 371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1334              	 .loc 3 371 0
 1335 0018 1846     	 mov r0,r3
 1336 001a BD46     	 mov sp,r7
 1337              	.LCFI125:
 1338              	 .cfi_def_cfa_register 13
 1339              	 
 1340 001c 5DF8047B 	 ldr r7,[sp],#4
 1341              	.LCFI126:
 1342              	 .cfi_restore 7
 1343              	 .cfi_def_cfa_offset 0
 1344 0020 7047     	 bx lr
 1345              	.L98:
 1346 0022 00BF     	 .align 2
 1347              	.L97:
 1348 0024 00400050 	 .word 1342193664
 1349              	 .cfi_endproc
 1350              	.LFE188:
 1352              	 .section .text.XMC_SCU_WriteToRetentionMemory,"ax",%progbits
 1353              	 .align 2
 1354              	 .global XMC_SCU_WriteToRetentionMemory
 1355              	 .thumb
 1356              	 .thumb_func
 1358              	XMC_SCU_WriteToRetentionMemory:
 1359              	.LFB189:
 372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if defined(SCU_GENERAL_DTEMPLIM_LOWER_Msk) && defined(SCU_GENERAL_DTEMPLIM_UPPER_Msk)
 375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone past the ceiling */
 376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HighTemperature(void)
 377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if(dtscon)
 388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_OVERFL_Msk;
 397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     
 398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     if(dtempalarm)
 399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
 400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
 402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     else
 403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
 404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
 406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program raw values of temperature limits into the DTS */
 411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp)
 412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Power up the DTS module */
 414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTSCON &= (uint32_t)~SCU_GENERAL_DTSCON_PWD_Msk;
 415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = 0;
 416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM = (lower_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk);
 417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->DTEMPLIM |= (uint32_t)((upper_temp & SCU_GENERAL_DTEMPLIM_LOWER_Msk) << SCU_GENERAL_
 418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to determine if device temperature has gone below the stipulated limit */
 421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_LowTemperature(void)
 422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   bool ret_val;
 424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t   dtscon;
 425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t   dtempalarm;
 426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   dtscon = SCU_GENERAL->DTSCON;
 427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   dtscon = dtscon & SCU_GENERAL_DTSCON_PWD_Msk;
 428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   ret_val = false;
 430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Any audit makes sense only if the DTS were powered up */  
 432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if(dtscon)
 433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Powered down - return false */
 435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     ret_val = false;
 436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Powered up - Read the overflow bit and decide accordingly*/
 440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     dtempalarm = SCU_GENERAL->DTEMPALARM;
 441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     dtempalarm = dtempalarm & SCU_GENERAL_DTEMPALARM_UNDERFL_Msk;
 442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     
 443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     if(dtempalarm)
 444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
 445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       ret_val = true;
 446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
 447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     else
 448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
 449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       ret_val = false;
 450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
 451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (ret_val);
 454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif  
 456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to write into Retention memory in hibernate domain */
 458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data)
 459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1360              	 .loc 3 459 0
 1361              	 .cfi_startproc
 1362              	 
 1363              	 
 1364              	 
 1365 0000 80B4     	 push {r7}
 1366              	.LCFI127:
 1367              	 .cfi_def_cfa_offset 4
 1368              	 .cfi_offset 7,-4
 1369 0002 85B0     	 sub sp,sp,#20
 1370              	.LCFI128:
 1371              	 .cfi_def_cfa_offset 24
 1372 0004 00AF     	 add r7,sp,#0
 1373              	.LCFI129:
 1374              	 .cfi_def_cfa_register 7
 1375 0006 7860     	 str r0,[r7,#4]
 1376 0008 3960     	 str r1,[r7]
 460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Get the address right */  
 463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   rmacr = (uint32_t)((address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1377              	 .loc 3 463 0
 1378 000a 7B68     	 ldr r3,[r7,#4]
 1379 000c 1B04     	 lsls r3,r3,#16
 1380 000e 03F47023 	 and r3,r3,#983040
 1381 0012 FB60     	 str r3,[r7,#12]
 464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   rmacr |= (uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk);
 1382              	 .loc 3 466 0
 1383 0014 FB68     	 ldr r3,[r7,#12]
 1384 0016 43F00103 	 orr r3,r3,#1
 1385 001a FB60     	 str r3,[r7,#12]
 467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Write desired data into RMDATA register */  
 469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMDATA = data;
 1386              	 .loc 3 469 0
 1387 001c 0E4B     	 ldr r3,.L101
 1388 001e D3F8CC20 	 ldr r2,[r3,#204]
 1389 0022 0021     	 movs r1,#0
 1390 0024 3A68     	 ldr r2,[r7]
 1391 0026 0A43     	 orrs r2,r2,r1
 1392 0028 C3F8CC20 	 str r2,[r3,#204]
 470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Write address & direction of transfer into RMACR register */  
 472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1393              	 .loc 3 472 0
 1394 002c 0A4B     	 ldr r3,.L101
 1395 002e D3F8C820 	 ldr r2,[r3,#200]
 1396 0032 0021     	 movs r1,#0
 1397 0034 FA68     	 ldr r2,[r7,#12]
 1398 0036 0A43     	 orrs r2,r2,r1
 1399 0038 C3F8C820 	 str r2,[r3,#200]
 473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1400              	 .loc 3 475 0
 1401 003c 00BF     	 nop
 1402              	.L100:
 1403              	 .loc 3 475 0 is_stmt 0 discriminator 1
 1404 003e 064B     	 ldr r3,.L101
 1405 0040 D3F8C430 	 ldr r3,[r3,#196]
 1406 0044 03F40053 	 and r3,r3,#8192
 1407 0048 002B     	 cmp r3,#0
 1408 004a F8D1     	 bne .L100
 476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1409              	 .loc 3 478 0 is_stmt 1
 1410 004c 1437     	 adds r7,r7,#20
 1411              	.LCFI130:
 1412              	 .cfi_def_cfa_offset 4
 1413 004e BD46     	 mov sp,r7
 1414              	.LCFI131:
 1415              	 .cfi_def_cfa_register 13
 1416              	 
 1417 0050 5DF8047B 	 ldr r7,[sp],#4
 1418              	.LCFI132:
 1419              	 .cfi_restore 7
 1420              	 .cfi_def_cfa_offset 0
 1421 0054 7047     	 bx lr
 1422              	.L102:
 1423 0056 00BF     	 .align 2
 1424              	.L101:
 1425 0058 00400050 	 .word 1342193664
 1426              	 .cfi_endproc
 1427              	.LFE189:
 1429              	 .section .text.XMC_SCU_ReadFromRetentionMemory,"ax",%progbits
 1430              	 .align 2
 1431              	 .global XMC_SCU_ReadFromRetentionMemory
 1432              	 .thumb
 1433              	 .thumb_func
 1435              	XMC_SCU_ReadFromRetentionMemory:
 1436              	.LFB190:
 479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to read from Retention memory in hibernate domain */
 481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address)
 482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1437              	 .loc 3 482 0
 1438              	 .cfi_startproc
 1439              	 
 1440              	 
 1441              	 
 1442 0000 80B4     	 push {r7}
 1443              	.LCFI133:
 1444              	 .cfi_def_cfa_offset 4
 1445              	 .cfi_offset 7,-4
 1446 0002 85B0     	 sub sp,sp,#20
 1447              	.LCFI134:
 1448              	 .cfi_def_cfa_offset 24
 1449 0004 00AF     	 add r7,sp,#0
 1450              	.LCFI135:
 1451              	 .cfi_def_cfa_register 7
 1452 0006 7860     	 str r0,[r7,#4]
 483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t rmacr;
 484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Get the address right */  
 486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   rmacr = ((uint32_t)(address << SCU_GENERAL_RMACR_ADDR_Pos) & (uint32_t)SCU_GENERAL_RMACR_ADDR_Msk
 1453              	 .loc 3 486 0
 1454 0008 7B68     	 ldr r3,[r7,#4]
 1455 000a 1B04     	 lsls r3,r3,#16
 1456 000c 03F47023 	 and r3,r3,#983040
 1457 0010 FB60     	 str r3,[r7,#12]
 487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Transfer from RMDATA to Retention memory */
 489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   rmacr &= ~((uint32_t)(SCU_GENERAL_RMACR_RDWR_Msk));
 1458              	 .loc 3 489 0
 1459 0012 FB68     	 ldr r3,[r7,#12]
 1460 0014 23F00103 	 bic r3,r3,#1
 1461 0018 FB60     	 str r3,[r7,#12]
 490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Writing an adress & direction of transfer into RMACR register */  
 492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_GENERAL->RMACR = rmacr;
 1462              	 .loc 3 492 0
 1463 001a 0C4B     	 ldr r3,.L106
 1464 001c D3F8C820 	 ldr r2,[r3,#200]
 1465 0020 0021     	 movs r1,#0
 1466 0022 FA68     	 ldr r2,[r7,#12]
 1467 0024 0A43     	 orrs r2,r2,r1
 1468 0026 C3F8C820 	 str r2,[r3,#200]
 493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of RMX register in hibernate domain is completed */
 495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_RMX_Msk)
 1469              	 .loc 3 495 0
 1470 002a 00BF     	 nop
 1471              	.L104:
 1472              	 .loc 3 495 0 is_stmt 0 discriminator 1
 1473 002c 074B     	 ldr r3,.L106
 1474 002e D3F8C430 	 ldr r3,[r3,#196]
 1475 0032 03F40053 	 and r3,r3,#8192
 1476 0036 002B     	 cmp r3,#0
 1477 0038 F8D1     	 bne .L104
 496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (SCU_GENERAL->RMDATA);
 1478              	 .loc 3 499 0 is_stmt 1
 1479 003a 044B     	 ldr r3,.L106
 1480 003c D3F8CC30 	 ldr r3,[r3,#204]
 500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1481              	 .loc 3 500 0
 1482 0040 1846     	 mov r0,r3
 1483 0042 1437     	 adds r7,r7,#20
 1484              	.LCFI136:
 1485              	 .cfi_def_cfa_offset 4
 1486 0044 BD46     	 mov sp,r7
 1487              	.LCFI137:
 1488              	 .cfi_def_cfa_register 13
 1489              	 
 1490 0046 5DF8047B 	 ldr r7,[sp],#4
 1491              	.LCFI138:
 1492              	 .cfi_restore 7
 1493              	 .cfi_def_cfa_offset 0
 1494 004a 7047     	 bx lr
 1495              	.L107:
 1496              	 .align 2
 1497              	.L106:
 1498 004c 00400050 	 .word 1342193664
 1499              	 .cfi_endproc
 1500              	.LFE190:
 1502              	 .section .text.XMC_SCU_CLOCK_Init,"ax",%progbits
 1503              	 .align 2
 1504              	 .global XMC_SCU_CLOCK_Init
 1505              	 .thumb
 1506              	 .thumb_func
 1508              	XMC_SCU_CLOCK_Init:
 1509              	.LFB191:
 501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to initialize the clock tree */
 503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config)
 504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1510              	 .loc 3 504 0
 1511              	 .cfi_startproc
 1512              	 
 1513              	 
 1514 0000 B0B5     	 push {r4,r5,r7,lr}
 1515              	.LCFI139:
 1516              	 .cfi_def_cfa_offset 16
 1517              	 .cfi_offset 4,-16
 1518              	 .cfi_offset 5,-12
 1519              	 .cfi_offset 7,-8
 1520              	 .cfi_offset 14,-4
 1521 0002 84B0     	 sub sp,sp,#16
 1522              	.LCFI140:
 1523              	 .cfi_def_cfa_offset 32
 1524 0004 02AF     	 add r7,sp,#8
 1525              	.LCFI141:
 1526              	 .cfi_def_cfa 7,24
 1527 0006 7860     	 str r0,[r7,#4]
 505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fsys_clkdiv != 0);
 506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fcpu_clkdiv != 0);
 507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fccu_clkdiv != 0);
 508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", config->fperipheral_clkdiv != 0);
 509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.p_div != 0) &&
 510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.n_div != 0) &&
 513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)) ||
 514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR));
 515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", (config->syspll_config.k_div != 0) &&
 516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL) ||
 519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                  (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_OFI)) &&
 520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                  ((config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL) ||
 521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                   (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR)));
 522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->fstdby_clksrc == XMC_SCU_HIB_STDBYCLKSRC_OSCULP) && (config->enable_oscu
 523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                  (config->fstdby_clksrc != XMC_SCU_HIB_STDBYCLKSRC_OSCULP));
 524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("", ((config->syspll_config.clksrc == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) &&
 525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                  (config->enable_oschp == true)) || (config->syspll_config.clksrc != XMC_SCU_CLOCK_
 526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_OFI);
 1528              	 .loc 3 527 0
 1529 0008 0020     	 movs r0,#0
 1530 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_EnableHibernateDomain();
 1531              	 .loc 3 529 0
 1532 000e FFF7FEFF 	 bl XMC_SCU_HIB_EnableHibernateDomain
 530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (config->enable_osculp == true)
 1533              	 .loc 3 531 0
 1534 0012 7B68     	 ldr r3,[r7,#4]
 1535 0014 DB79     	 ldrb r3,[r3,#7]
 1536 0016 002B     	 cmp r3,#0
 1537 0018 0AD0     	 beq .L109
 532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableLowPowerOscillator();
 1538              	 .loc 3 533 0
 1539 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableLowPowerOscillator
 534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     while (XMC_SCU_CLOCK_IsLowPowerOscillatorStable() == false);
 1540              	 .loc 3 534 0
 1541 001e 00BF     	 nop
 1542              	.L110:
 1543              	 .loc 3 534 0 is_stmt 0 discriminator 1
 1544 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 1545 0024 0346     	 mov r3,r0
 1546 0026 83F00103 	 eor r3,r3,#1
 1547 002a DBB2     	 uxtb r3,r3
 1548 002c 002B     	 cmp r3,#0
 1549 002e F7D1     	 bne .L110
 1550              	.L109:
 535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_HIB_SetStandbyClockSource(config->fstdby_clksrc);  
 1551              	 .loc 3 537 0 is_stmt 1
 1552 0030 7B68     	 ldr r3,[r7,#4]
 1553 0032 5B7A     	 ldrb r3,[r3,#9]
 1554 0034 1846     	 mov r0,r3
 1555 0036 FFF7FEFF 	 bl XMC_SCU_HIB_SetStandbyClockSource
 538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while (XMC_SCU_GetMirrorStatus() != 0)
 1556              	 .loc 3 538 0
 1557 003a 00BF     	 nop
 1558              	.L111:
 1559              	 .loc 3 538 0 is_stmt 0 discriminator 1
 1560 003c FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 1561 0040 0346     	 mov r3,r0
 1562 0042 002B     	 cmp r3,#0
 1563 0044 FAD1     	 bne .L111
 539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until update of the stanby clock source is done in the HIB domain */    
 541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetBackupClockCalibrationMode(config->calibration_mode);
 1564              	 .loc 3 543 0 is_stmt 1
 1565 0046 7B68     	 ldr r3,[r7,#4]
 1566 0048 1B7A     	 ldrb r3,[r3,#8]
 1567 004a 1846     	 mov r0,r3
 1568 004c FFF7FEFF 	 bl XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemClockDivider((uint32_t)config->fsys_clkdiv);
 1569              	 .loc 3 545 0
 1570 0050 7B68     	 ldr r3,[r7,#4]
 1571 0052 9B7B     	 ldrb r3,[r3,#14]
 1572 0054 1846     	 mov r0,r3
 1573 0056 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockDivider
 546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCpuClockDivider((uint32_t)config->fcpu_clkdiv);
 1574              	 .loc 3 546 0
 1575 005a 7B68     	 ldr r3,[r7,#4]
 1576 005c DB7B     	 ldrb r3,[r3,#15]
 1577 005e 1846     	 mov r0,r3
 1578 0060 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCpuClockDivider
 547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetCcuClockDivider((uint32_t)config->fccu_clkdiv);
 1579              	 .loc 3 547 0
 1580 0064 7B68     	 ldr r3,[r7,#4]
 1581 0066 1B7C     	 ldrb r3,[r3,#16]
 1582 0068 1846     	 mov r0,r3
 1583 006a FFF7FEFF 	 bl XMC_SCU_CLOCK_SetCcuClockDivider
 548:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetPeripheralClockDivider((uint32_t)config->fperipheral_clkdiv);
 1584              	 .loc 3 548 0
 1585 006e 7B68     	 ldr r3,[r7,#4]
 1586 0070 5B7C     	 ldrb r3,[r3,#17]
 1587 0072 1846     	 mov r0,r3
 1588 0074 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetPeripheralClockDivider
 549:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 550:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (config->enable_oschp == true)
 1589              	 .loc 3 550 0
 1590 0078 7B68     	 ldr r3,[r7,#4]
 1591 007a 9B79     	 ldrb r3,[r3,#6]
 1592 007c 002B     	 cmp r3,#0
 1593 007e 0AD0     	 beq .L112
 551:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableHighPerformanceOscillator();
 1594              	 .loc 3 552 0
 1595 0080 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 553:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     while(XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable() == false);
 1596              	 .loc 3 553 0
 1597 0084 00BF     	 nop
 1598              	.L113:
 1599              	 .loc 3 553 0 is_stmt 0 discriminator 1
 1600 0086 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 1601 008a 0346     	 mov r3,r0
 1602 008c 83F00103 	 eor r3,r3,#1
 1603 0090 DBB2     	 uxtb r3,r3
 1604 0092 002B     	 cmp r3,#0
 1605 0094 F7D1     	 bne .L113
 1606              	.L112:
 554:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 555:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 556:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (config->syspll_config.mode == XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED)
 1607              	 .loc 3 556 0 is_stmt 1
 1608 0096 7B68     	 ldr r3,[r7,#4]
 1609 0098 DB78     	 ldrb r3,[r3,#3]
 1610 009a 002B     	 cmp r3,#0
 1611 009c 02D1     	 bne .L114
 557:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 558:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_DisableSystemPll();
 1612              	 .loc 3 558 0
 1613 009e FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableSystemPll
 1614 00a2 15E0     	 b .L115
 1615              	.L114:
 559:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 560:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 561:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 562:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 563:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_EnableSystemPll();
 1616              	 .loc 3 563 0
 1617 00a4 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableSystemPll
 564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1618              	 .loc 3 564 0
 1619 00a8 7B68     	 ldr r3,[r7,#4]
 1620 00aa 9B88     	 ldrh r3,[r3,#4]
 1621 00ac 99B2     	 uxth r1,r3
 1622 00ae 7B68     	 ldr r3,[r7,#4]
 1623 00b0 DA78     	 ldrb r2,[r3,#3]
 565:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 566:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.p_div,
 1624              	 .loc 3 566 0
 1625 00b2 7B68     	 ldr r3,[r7,#4]
 1626 00b4 5B78     	 ldrb r3,[r3,#1]
 564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1627              	 .loc 3 564 0
 1628 00b6 1D46     	 mov r5,r3
 567:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.n_div,
 1629              	 .loc 3 567 0
 1630 00b8 7B68     	 ldr r3,[r7,#4]
 1631 00ba 1B78     	 ldrb r3,[r3]
 564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StartSystemPll(config->syspll_config.clksrc,
 1632              	 .loc 3 564 0
 1633 00bc 1C46     	 mov r4,r3
 568:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                  (uint32_t)config->syspll_config.k_div);
 1634              	 .loc 3 568 0
 1635 00be 7B68     	 ldr r3,[r7,#4]
 1636 00c0 9B78     	 ldrb r3,[r3,#2]
 564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                  config->syspll_config.mode,
 1637              	 .loc 3 564 0
 1638 00c2 0093     	 str r3,[sp]
 1639 00c4 0846     	 mov r0,r1
 1640 00c6 1146     	 mov r1,r2
 1641 00c8 2A46     	 mov r2,r5
 1642 00ca 2346     	 mov r3,r4
 1643 00cc FFF7FEFF 	 bl XMC_SCU_CLOCK_StartSystemPll
 1644              	.L115:
 569:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 570:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 571:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* use SYSPLL? */
 572:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (config->fsys_clksrc == XMC_SCU_CLOCK_SYSCLKSRC_PLL)
 1645              	 .loc 3 572 0
 1646 00d0 7B68     	 ldr r3,[r7,#4]
 1647 00d2 D3F80A30 	 ldr r3,[r3,#10]
 1648 00d6 B3F5803F 	 cmp r3,#65536
 1649 00da 03D1     	 bne .L116
 573:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 574:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_SetSystemClockSource(XMC_SCU_CLOCK_SYSCLKSRC_PLL);    
 1650              	 .loc 3 574 0
 1651 00dc 4FF48030 	 mov r0,#65536
 1652 00e0 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemClockSource
 1653              	.L116:
 575:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 576:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SystemCoreClockUpdate();
 1654              	 .loc 3 576 0
 1655 00e4 FFF7FEFF 	 bl SystemCoreClockUpdate
 577:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1656              	 .loc 3 577 0
 1657 00e8 0837     	 adds r7,r7,#8
 1658              	.LCFI142:
 1659              	 .cfi_def_cfa_offset 16
 1660 00ea BD46     	 mov sp,r7
 1661              	.LCFI143:
 1662              	 .cfi_def_cfa_register 13
 1663              	 
 1664 00ec B0BD     	 pop {r4,r5,r7,pc}
 1665              	 .cfi_endproc
 1666              	.LFE191:
 1668 00ee 00BF     	 .section .text.XMC_SCU_TRAP_Enable,"ax",%progbits
 1669              	 .align 2
 1670              	 .global XMC_SCU_TRAP_Enable
 1671              	 .thumb
 1672              	 .thumb_func
 1674              	XMC_SCU_TRAP_Enable:
 1675              	.LFB192:
 578:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 579:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable a trap source */
 580:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Enable(const uint32_t trap)
 581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1676              	 .loc 3 581 0
 1677              	 .cfi_startproc
 1678              	 
 1679              	 
 1680              	 
 1681 0000 80B4     	 push {r7}
 1682              	.LCFI144:
 1683              	 .cfi_def_cfa_offset 4
 1684              	 .cfi_offset 7,-4
 1685 0002 83B0     	 sub sp,sp,#12
 1686              	.LCFI145:
 1687              	 .cfi_def_cfa_offset 16
 1688 0004 00AF     	 add r7,sp,#0
 1689              	.LCFI146:
 1690              	 .cfi_def_cfa_register 7
 1691 0006 7860     	 str r0,[r7,#4]
 582:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS &= (uint32_t)~trap;
 1692              	 .loc 3 582 0
 1693 0008 074B     	 ldr r3,.L118
 1694 000a 074A     	 ldr r2,.L118
 1695 000c 9168     	 ldr r1,[r2,#8]
 1696 000e 7A68     	 ldr r2,[r7,#4]
 1697 0010 D243     	 mvns r2,r2
 1698 0012 0A40     	 ands r2,r2,r1
 1699 0014 9968     	 ldr r1,[r3,#8]
 1700 0016 0021     	 movs r1,#0
 1701 0018 0A43     	 orrs r2,r2,r1
 1702 001a 9A60     	 str r2,[r3,#8]
 583:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1703              	 .loc 3 583 0
 1704 001c 0C37     	 adds r7,r7,#12
 1705              	.LCFI147:
 1706              	 .cfi_def_cfa_offset 4
 1707 001e BD46     	 mov sp,r7
 1708              	.LCFI148:
 1709              	 .cfi_def_cfa_register 13
 1710              	 
 1711 0020 5DF8047B 	 ldr r7,[sp],#4
 1712              	.LCFI149:
 1713              	 .cfi_restore 7
 1714              	 .cfi_def_cfa_offset 0
 1715 0024 7047     	 bx lr
 1716              	.L119:
 1717 0026 00BF     	 .align 2
 1718              	.L118:
 1719 0028 60410050 	 .word 1342194016
 1720              	 .cfi_endproc
 1721              	.LFE192:
 1723              	 .section .text.XMC_SCU_TRAP_Disable,"ax",%progbits
 1724              	 .align 2
 1725              	 .global XMC_SCU_TRAP_Disable
 1726              	 .thumb
 1727              	 .thumb_func
 1729              	XMC_SCU_TRAP_Disable:
 1730              	.LFB193:
 584:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 585:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable a trap source */
 586:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Disable(const uint32_t trap)
 587:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1731              	 .loc 3 587 0
 1732              	 .cfi_startproc
 1733              	 
 1734              	 
 1735              	 
 1736 0000 80B4     	 push {r7}
 1737              	.LCFI150:
 1738              	 .cfi_def_cfa_offset 4
 1739              	 .cfi_offset 7,-4
 1740 0002 83B0     	 sub sp,sp,#12
 1741              	.LCFI151:
 1742              	 .cfi_def_cfa_offset 16
 1743 0004 00AF     	 add r7,sp,#0
 1744              	.LCFI152:
 1745              	 .cfi_def_cfa_register 7
 1746 0006 7860     	 str r0,[r7,#4]
 588:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPDIS |= (uint32_t)trap;
 1747              	 .loc 3 588 0
 1748 0008 064B     	 ldr r3,.L121
 1749 000a 064A     	 ldr r2,.L121
 1750 000c 9168     	 ldr r1,[r2,#8]
 1751 000e 7A68     	 ldr r2,[r7,#4]
 1752 0010 0A43     	 orrs r2,r2,r1
 1753 0012 9968     	 ldr r1,[r3,#8]
 1754 0014 0021     	 movs r1,#0
 1755 0016 0A43     	 orrs r2,r2,r1
 1756 0018 9A60     	 str r2,[r3,#8]
 589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1757              	 .loc 3 589 0
 1758 001a 0C37     	 adds r7,r7,#12
 1759              	.LCFI153:
 1760              	 .cfi_def_cfa_offset 4
 1761 001c BD46     	 mov sp,r7
 1762              	.LCFI154:
 1763              	 .cfi_def_cfa_register 13
 1764              	 
 1765 001e 5DF8047B 	 ldr r7,[sp],#4
 1766              	.LCFI155:
 1767              	 .cfi_restore 7
 1768              	 .cfi_def_cfa_offset 0
 1769 0022 7047     	 bx lr
 1770              	.L122:
 1771              	 .align 2
 1772              	.L121:
 1773 0024 60410050 	 .word 1342194016
 1774              	 .cfi_endproc
 1775              	.LFE193:
 1777              	 .section .text.XMC_SCU_TRAP_GetStatus,"ax",%progbits
 1778              	 .align 2
 1779              	 .global XMC_SCU_TRAP_GetStatus
 1780              	 .thumb
 1781              	 .thumb_func
 1783              	XMC_SCU_TRAP_GetStatus:
 1784              	.LFB194:
 590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 591:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to determine if a trap source has generated event */
 592:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_TRAP_GetStatus(void)
 593:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1785              	 .loc 3 593 0
 1786              	 .cfi_startproc
 1787              	 
 1788              	 
 1789              	 
 1790 0000 80B4     	 push {r7}
 1791              	.LCFI156:
 1792              	 .cfi_def_cfa_offset 4
 1793              	 .cfi_offset 7,-4
 1794 0002 00AF     	 add r7,sp,#0
 1795              	.LCFI157:
 1796              	 .cfi_def_cfa_register 7
 594:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (SCU_TRAP->TRAPRAW);
 1797              	 .loc 3 594 0
 1798 0004 034B     	 ldr r3,.L125
 1799 0006 5B68     	 ldr r3,[r3,#4]
 595:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1800              	 .loc 3 595 0
 1801 0008 1846     	 mov r0,r3
 1802 000a BD46     	 mov sp,r7
 1803              	.LCFI158:
 1804              	 .cfi_def_cfa_register 13
 1805              	 
 1806 000c 5DF8047B 	 ldr r7,[sp],#4
 1807              	.LCFI159:
 1808              	 .cfi_restore 7
 1809              	 .cfi_def_cfa_offset 0
 1810 0010 7047     	 bx lr
 1811              	.L126:
 1812 0012 00BF     	 .align 2
 1813              	.L125:
 1814 0014 60410050 	 .word 1342194016
 1815              	 .cfi_endproc
 1816              	.LFE194:
 1818              	 .section .text.XMC_SCU_TRAP_Trigger,"ax",%progbits
 1819              	 .align 2
 1820              	 .global XMC_SCU_TRAP_Trigger
 1821              	 .thumb
 1822              	 .thumb_func
 1824              	XMC_SCU_TRAP_Trigger:
 1825              	.LFB195:
 596:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 597:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to manually trigger a trap event */
 598:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_Trigger(const uint32_t trap)
 599:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1826              	 .loc 3 599 0
 1827              	 .cfi_startproc
 1828              	 
 1829              	 
 1830              	 
 1831 0000 80B4     	 push {r7}
 1832              	.LCFI160:
 1833              	 .cfi_def_cfa_offset 4
 1834              	 .cfi_offset 7,-4
 1835 0002 83B0     	 sub sp,sp,#12
 1836              	.LCFI161:
 1837              	 .cfi_def_cfa_offset 16
 1838 0004 00AF     	 add r7,sp,#0
 1839              	.LCFI162:
 1840              	 .cfi_def_cfa_register 7
 1841 0006 7860     	 str r0,[r7,#4]
 600:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPSET = (uint32_t)trap;
 1842              	 .loc 3 600 0
 1843 0008 054B     	 ldr r3,.L128
 1844 000a 1A69     	 ldr r2,[r3,#16]
 1845 000c 0021     	 movs r1,#0
 1846 000e 7A68     	 ldr r2,[r7,#4]
 1847 0010 0A43     	 orrs r2,r2,r1
 1848 0012 1A61     	 str r2,[r3,#16]
 601:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1849              	 .loc 3 601 0
 1850 0014 0C37     	 adds r7,r7,#12
 1851              	.LCFI163:
 1852              	 .cfi_def_cfa_offset 4
 1853 0016 BD46     	 mov sp,r7
 1854              	.LCFI164:
 1855              	 .cfi_def_cfa_register 13
 1856              	 
 1857 0018 5DF8047B 	 ldr r7,[sp],#4
 1858              	.LCFI165:
 1859              	 .cfi_restore 7
 1860              	 .cfi_def_cfa_offset 0
 1861 001c 7047     	 bx lr
 1862              	.L129:
 1863 001e 00BF     	 .align 2
 1864              	.L128:
 1865 0020 60410050 	 .word 1342194016
 1866              	 .cfi_endproc
 1867              	.LFE195:
 1869              	 .section .text.XMC_SCU_TRAP_ClearStatus,"ax",%progbits
 1870              	 .align 2
 1871              	 .global XMC_SCU_TRAP_ClearStatus
 1872              	 .thumb
 1873              	 .thumb_func
 1875              	XMC_SCU_TRAP_ClearStatus:
 1876              	.LFB196:
 602:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 603:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to clear a trap event */
 604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap)
 605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1877              	 .loc 3 605 0
 1878              	 .cfi_startproc
 1879              	 
 1880              	 
 1881              	 
 1882 0000 80B4     	 push {r7}
 1883              	.LCFI166:
 1884              	 .cfi_def_cfa_offset 4
 1885              	 .cfi_offset 7,-4
 1886 0002 83B0     	 sub sp,sp,#12
 1887              	.LCFI167:
 1888              	 .cfi_def_cfa_offset 16
 1889 0004 00AF     	 add r7,sp,#0
 1890              	.LCFI168:
 1891              	 .cfi_def_cfa_register 7
 1892 0006 7860     	 str r0,[r7,#4]
 606:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_TRAP->TRAPCLR = (uint32_t)trap;
 1893              	 .loc 3 606 0
 1894 0008 054B     	 ldr r3,.L131
 1895 000a DA68     	 ldr r2,[r3,#12]
 1896 000c 0021     	 movs r1,#0
 1897 000e 7A68     	 ldr r2,[r7,#4]
 1898 0010 0A43     	 orrs r2,r2,r1
 1899 0012 DA60     	 str r2,[r3,#12]
 607:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1900              	 .loc 3 607 0
 1901 0014 0C37     	 adds r7,r7,#12
 1902              	.LCFI169:
 1903              	 .cfi_def_cfa_offset 4
 1904 0016 BD46     	 mov sp,r7
 1905              	.LCFI170:
 1906              	 .cfi_def_cfa_register 13
 1907              	 
 1908 0018 5DF8047B 	 ldr r7,[sp],#4
 1909              	.LCFI171:
 1910              	 .cfi_restore 7
 1911              	 .cfi_def_cfa_offset 0
 1912 001c 7047     	 bx lr
 1913              	.L132:
 1914 001e 00BF     	 .align 2
 1915              	.L131:
 1916 0020 60410050 	 .word 1342194016
 1917              	 .cfi_endproc
 1918              	.LFE196:
 1920              	 .section .text.XMC_SCU_PARITY_ClearStatus,"ax",%progbits
 1921              	 .align 2
 1922              	 .global XMC_SCU_PARITY_ClearStatus
 1923              	 .thumb
 1924              	 .thumb_func
 1926              	XMC_SCU_PARITY_ClearStatus:
 1927              	.LFB197:
 608:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 609:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to clear parity error event */
 610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory)
 611:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1928              	 .loc 3 611 0
 1929              	 .cfi_startproc
 1930              	 
 1931              	 
 1932              	 
 1933 0000 80B4     	 push {r7}
 1934              	.LCFI172:
 1935              	 .cfi_def_cfa_offset 4
 1936              	 .cfi_offset 7,-4
 1937 0002 83B0     	 sub sp,sp,#12
 1938              	.LCFI173:
 1939              	 .cfi_def_cfa_offset 16
 1940 0004 00AF     	 add r7,sp,#0
 1941              	.LCFI174:
 1942              	 .cfi_def_cfa_register 7
 1943 0006 7860     	 str r0,[r7,#4]
 612:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEFLAG |= (uint32_t)memory; 
 1944              	 .loc 3 612 0
 1945 0008 064B     	 ldr r3,.L134
 1946 000a 064A     	 ldr r2,.L134
 1947 000c 5169     	 ldr r1,[r2,#20]
 1948 000e 7A68     	 ldr r2,[r7,#4]
 1949 0010 0A43     	 orrs r2,r2,r1
 1950 0012 5969     	 ldr r1,[r3,#20]
 1951 0014 0021     	 movs r1,#0
 1952 0016 0A43     	 orrs r2,r2,r1
 1953 0018 5A61     	 str r2,[r3,#20]
 613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 1954              	 .loc 3 613 0
 1955 001a 0C37     	 adds r7,r7,#12
 1956              	.LCFI175:
 1957              	 .cfi_def_cfa_offset 4
 1958 001c BD46     	 mov sp,r7
 1959              	.LCFI176:
 1960              	 .cfi_def_cfa_register 13
 1961              	 
 1962 001e 5DF8047B 	 ldr r7,[sp],#4
 1963              	.LCFI177:
 1964              	 .cfi_restore 7
 1965              	 .cfi_def_cfa_offset 0
 1966 0022 7047     	 bx lr
 1967              	.L135:
 1968              	 .align 2
 1969              	.L134:
 1970 0024 3C410050 	 .word 1342193980
 1971              	 .cfi_endproc
 1972              	.LFE197:
 1974              	 .section .text.XMC_SCU_PARITY_GetStatus,"ax",%progbits
 1975              	 .align 2
 1976              	 .global XMC_SCU_PARITY_GetStatus
 1977              	 .thumb
 1978              	 .thumb_func
 1980              	XMC_SCU_PARITY_GetStatus:
 1981              	.LFB198:
 614:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 615:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to determine if the specified parity error has occured or not */
 616:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_PARITY_GetStatus(void)
 617:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 1982              	 .loc 3 617 0
 1983              	 .cfi_startproc
 1984              	 
 1985              	 
 1986              	 
 1987 0000 80B4     	 push {r7}
 1988              	.LCFI178:
 1989              	 .cfi_def_cfa_offset 4
 1990              	 .cfi_offset 7,-4
 1991 0002 00AF     	 add r7,sp,#0
 1992              	.LCFI179:
 1993              	 .cfi_def_cfa_register 7
 618:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (SCU_PARITY->PEFLAG);
 1994              	 .loc 3 618 0
 1995 0004 034B     	 ldr r3,.L138
 1996 0006 5B69     	 ldr r3,[r3,#20]
 619:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** } 
 1997              	 .loc 3 619 0
 1998 0008 1846     	 mov r0,r3
 1999 000a BD46     	 mov sp,r7
 2000              	.LCFI180:
 2001              	 .cfi_def_cfa_register 13
 2002              	 
 2003 000c 5DF8047B 	 ldr r7,[sp],#4
 2004              	.LCFI181:
 2005              	 .cfi_restore 7
 2006              	 .cfi_def_cfa_offset 0
 2007 0010 7047     	 bx lr
 2008              	.L139:
 2009 0012 00BF     	 .align 2
 2010              	.L138:
 2011 0014 3C410050 	 .word 1342193980
 2012              	 .cfi_endproc
 2013              	.LFE198:
 2015              	 .section .text.XMC_SCU_PARITY_Enable,"ax",%progbits
 2016              	 .align 2
 2017              	 .global XMC_SCU_PARITY_Enable
 2018              	 .thumb
 2019              	 .thumb_func
 2021              	XMC_SCU_PARITY_Enable:
 2022              	.LFB199:
 620:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 621:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable parity error checking for the selected on-chip RAM type */
 622:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Enable(const uint32_t memory)
 623:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2023              	 .loc 3 623 0
 2024              	 .cfi_startproc
 2025              	 
 2026              	 
 2027              	 
 2028 0000 80B4     	 push {r7}
 2029              	.LCFI182:
 2030              	 .cfi_def_cfa_offset 4
 2031              	 .cfi_offset 7,-4
 2032 0002 83B0     	 sub sp,sp,#12
 2033              	.LCFI183:
 2034              	 .cfi_def_cfa_offset 16
 2035 0004 00AF     	 add r7,sp,#0
 2036              	.LCFI184:
 2037              	 .cfi_def_cfa_register 7
 2038 0006 7860     	 str r0,[r7,#4]
 624:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN |= (uint32_t)memory; 
 2039              	 .loc 3 624 0
 2040 0008 064B     	 ldr r3,.L141
 2041 000a 064A     	 ldr r2,.L141
 2042 000c 1168     	 ldr r1,[r2]
 2043 000e 7A68     	 ldr r2,[r7,#4]
 2044 0010 0A43     	 orrs r2,r2,r1
 2045 0012 1968     	 ldr r1,[r3]
 2046 0014 0021     	 movs r1,#0
 2047 0016 0A43     	 orrs r2,r2,r1
 2048 0018 1A60     	 str r2,[r3]
 625:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2049              	 .loc 3 625 0
 2050 001a 0C37     	 adds r7,r7,#12
 2051              	.LCFI185:
 2052              	 .cfi_def_cfa_offset 4
 2053 001c BD46     	 mov sp,r7
 2054              	.LCFI186:
 2055              	 .cfi_def_cfa_register 13
 2056              	 
 2057 001e 5DF8047B 	 ldr r7,[sp],#4
 2058              	.LCFI187:
 2059              	 .cfi_restore 7
 2060              	 .cfi_def_cfa_offset 0
 2061 0022 7047     	 bx lr
 2062              	.L142:
 2063              	 .align 2
 2064              	.L141:
 2065 0024 3C410050 	 .word 1342193980
 2066              	 .cfi_endproc
 2067              	.LFE199:
 2069              	 .section .text.XMC_SCU_PARITY_Disable,"ax",%progbits
 2070              	 .align 2
 2071              	 .global XMC_SCU_PARITY_Disable
 2072              	 .thumb
 2073              	 .thumb_func
 2075              	XMC_SCU_PARITY_Disable:
 2076              	.LFB200:
 626:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 627:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable parity error checking for the selected on-chip RAM type */
 628:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_Disable(const uint32_t memory)
 629:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2077              	 .loc 3 629 0
 2078              	 .cfi_startproc
 2079              	 
 2080              	 
 2081              	 
 2082 0000 80B4     	 push {r7}
 2083              	.LCFI188:
 2084              	 .cfi_def_cfa_offset 4
 2085              	 .cfi_offset 7,-4
 2086 0002 83B0     	 sub sp,sp,#12
 2087              	.LCFI189:
 2088              	 .cfi_def_cfa_offset 16
 2089 0004 00AF     	 add r7,sp,#0
 2090              	.LCFI190:
 2091              	 .cfi_def_cfa_register 7
 2092 0006 7860     	 str r0,[r7,#4]
 630:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PEEN &= (uint32_t)~memory; 
 2093              	 .loc 3 630 0
 2094 0008 074B     	 ldr r3,.L144
 2095 000a 074A     	 ldr r2,.L144
 2096 000c 1168     	 ldr r1,[r2]
 2097 000e 7A68     	 ldr r2,[r7,#4]
 2098 0010 D243     	 mvns r2,r2
 2099 0012 0A40     	 ands r2,r2,r1
 2100 0014 1968     	 ldr r1,[r3]
 2101 0016 0021     	 movs r1,#0
 2102 0018 0A43     	 orrs r2,r2,r1
 2103 001a 1A60     	 str r2,[r3]
 631:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2104              	 .loc 3 631 0
 2105 001c 0C37     	 adds r7,r7,#12
 2106              	.LCFI191:
 2107              	 .cfi_def_cfa_offset 4
 2108 001e BD46     	 mov sp,r7
 2109              	.LCFI192:
 2110              	 .cfi_def_cfa_register 13
 2111              	 
 2112 0020 5DF8047B 	 ldr r7,[sp],#4
 2113              	.LCFI193:
 2114              	 .cfi_restore 7
 2115              	 .cfi_def_cfa_offset 0
 2116 0024 7047     	 bx lr
 2117              	.L145:
 2118 0026 00BF     	 .align 2
 2119              	.L144:
 2120 0028 3C410050 	 .word 1342193980
 2121              	 .cfi_endproc
 2122              	.LFE200:
 2124              	 .section .text.XMC_SCU_PARITY_EnableTrapGeneration,"ax",%progbits
 2125              	 .align 2
 2126              	 .global XMC_SCU_PARITY_EnableTrapGeneration
 2127              	 .thumb
 2128              	 .thumb_func
 2130              	XMC_SCU_PARITY_EnableTrapGeneration:
 2131              	.LFB201:
 632:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 633:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable trap assertion for the parity error source */
 634:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory)
 635:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2132              	 .loc 3 635 0
 2133              	 .cfi_startproc
 2134              	 
 2135              	 
 2136              	 
 2137 0000 80B4     	 push {r7}
 2138              	.LCFI194:
 2139              	 .cfi_def_cfa_offset 4
 2140              	 .cfi_offset 7,-4
 2141 0002 83B0     	 sub sp,sp,#12
 2142              	.LCFI195:
 2143              	 .cfi_def_cfa_offset 16
 2144 0004 00AF     	 add r7,sp,#0
 2145              	.LCFI196:
 2146              	 .cfi_def_cfa_register 7
 2147 0006 7860     	 str r0,[r7,#4]
 636:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE |= (uint32_t)memory; 
 2148              	 .loc 3 636 0
 2149 0008 064B     	 ldr r3,.L147
 2150 000a 064A     	 ldr r2,.L147
 2151 000c 9168     	 ldr r1,[r2,#8]
 2152 000e 7A68     	 ldr r2,[r7,#4]
 2153 0010 0A43     	 orrs r2,r2,r1
 2154 0012 9968     	 ldr r1,[r3,#8]
 2155 0014 0021     	 movs r1,#0
 2156 0016 0A43     	 orrs r2,r2,r1
 2157 0018 9A60     	 str r2,[r3,#8]
 637:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2158              	 .loc 3 637 0
 2159 001a 0C37     	 adds r7,r7,#12
 2160              	.LCFI197:
 2161              	 .cfi_def_cfa_offset 4
 2162 001c BD46     	 mov sp,r7
 2163              	.LCFI198:
 2164              	 .cfi_def_cfa_register 13
 2165              	 
 2166 001e 5DF8047B 	 ldr r7,[sp],#4
 2167              	.LCFI199:
 2168              	 .cfi_restore 7
 2169              	 .cfi_def_cfa_offset 0
 2170 0022 7047     	 bx lr
 2171              	.L148:
 2172              	 .align 2
 2173              	.L147:
 2174 0024 3C410050 	 .word 1342193980
 2175              	 .cfi_endproc
 2176              	.LFE201:
 2178              	 .section .text.XMC_SCU_PARITY_DisableTrapGeneration,"ax",%progbits
 2179              	 .align 2
 2180              	 .global XMC_SCU_PARITY_DisableTrapGeneration
 2181              	 .thumb
 2182              	 .thumb_func
 2184              	XMC_SCU_PARITY_DisableTrapGeneration:
 2185              	.LFB202:
 638:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 639:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable the assertion of trap for the parity error source */
 640:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory)
 641:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2186              	 .loc 3 641 0
 2187              	 .cfi_startproc
 2188              	 
 2189              	 
 2190              	 
 2191 0000 80B4     	 push {r7}
 2192              	.LCFI200:
 2193              	 .cfi_def_cfa_offset 4
 2194              	 .cfi_offset 7,-4
 2195 0002 83B0     	 sub sp,sp,#12
 2196              	.LCFI201:
 2197              	 .cfi_def_cfa_offset 16
 2198 0004 00AF     	 add r7,sp,#0
 2199              	.LCFI202:
 2200              	 .cfi_def_cfa_register 7
 2201 0006 7860     	 str r0,[r7,#4]
 642:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PARITY->PETE &= (uint32_t)~memory; 
 2202              	 .loc 3 642 0
 2203 0008 074B     	 ldr r3,.L150
 2204 000a 074A     	 ldr r2,.L150
 2205 000c 9168     	 ldr r1,[r2,#8]
 2206 000e 7A68     	 ldr r2,[r7,#4]
 2207 0010 D243     	 mvns r2,r2
 2208 0012 0A40     	 ands r2,r2,r1
 2209 0014 9968     	 ldr r1,[r3,#8]
 2210 0016 0021     	 movs r1,#0
 2211 0018 0A43     	 orrs r2,r2,r1
 2212 001a 9A60     	 str r2,[r3,#8]
 643:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2213              	 .loc 3 643 0
 2214 001c 0C37     	 adds r7,r7,#12
 2215              	.LCFI203:
 2216              	 .cfi_def_cfa_offset 4
 2217 001e BD46     	 mov sp,r7
 2218              	.LCFI204:
 2219              	 .cfi_def_cfa_register 13
 2220              	 
 2221 0020 5DF8047B 	 ldr r7,[sp],#4
 2222              	.LCFI205:
 2223              	 .cfi_restore 7
 2224              	 .cfi_def_cfa_offset 0
 2225 0024 7047     	 bx lr
 2226              	.L151:
 2227 0026 00BF     	 .align 2
 2228              	.L150:
 2229 0028 3C410050 	 .word 1342193980
 2230              	 .cfi_endproc
 2231              	.LFE202:
 2233              	 .section .text.XMC_SCU_INTERRUPT_EnableNmiRequest,"ax",%progbits
 2234              	 .align 2
 2235              	 .global XMC_SCU_INTERRUPT_EnableNmiRequest
 2236              	 .thumb
 2237              	 .thumb_func
 2239              	XMC_SCU_INTERRUPT_EnableNmiRequest:
 2240              	.LFB203:
 644:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 645:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* Enables a NMI source */
 646:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request)
 647:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2241              	 .loc 3 647 0
 2242              	 .cfi_startproc
 2243              	 
 2244              	 
 2245              	 
 2246 0000 80B4     	 push {r7}
 2247              	.LCFI206:
 2248              	 .cfi_def_cfa_offset 4
 2249              	 .cfi_offset 7,-4
 2250 0002 83B0     	 sub sp,sp,#12
 2251              	.LCFI207:
 2252              	 .cfi_def_cfa_offset 16
 2253 0004 00AF     	 add r7,sp,#0
 2254              	.LCFI208:
 2255              	 .cfi_def_cfa_register 7
 2256 0006 7860     	 str r0,[r7,#4]
 648:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN |= (uint32_t)request;
 2257              	 .loc 3 648 0
 2258 0008 064B     	 ldr r3,.L153
 2259 000a 064A     	 ldr r2,.L153
 2260 000c 5169     	 ldr r1,[r2,#20]
 2261 000e 7A68     	 ldr r2,[r7,#4]
 2262 0010 0A43     	 orrs r2,r2,r1
 2263 0012 5969     	 ldr r1,[r3,#20]
 2264 0014 0021     	 movs r1,#0
 2265 0016 0A43     	 orrs r2,r2,r1
 2266 0018 5A61     	 str r2,[r3,#20]
 649:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2267              	 .loc 3 649 0
 2268 001a 0C37     	 adds r7,r7,#12
 2269              	.LCFI209:
 2270              	 .cfi_def_cfa_offset 4
 2271 001c BD46     	 mov sp,r7
 2272              	.LCFI210:
 2273              	 .cfi_def_cfa_register 13
 2274              	 
 2275 001e 5DF8047B 	 ldr r7,[sp],#4
 2276              	.LCFI211:
 2277              	 .cfi_restore 7
 2278              	 .cfi_def_cfa_offset 0
 2279 0022 7047     	 bx lr
 2280              	.L154:
 2281              	 .align 2
 2282              	.L153:
 2283 0024 74400050 	 .word 1342193780
 2284              	 .cfi_endproc
 2285              	.LFE203:
 2287              	 .section .text.XMC_SCU_INTERRUPT_DisableNmiRequest,"ax",%progbits
 2288              	 .align 2
 2289              	 .global XMC_SCU_INTERRUPT_DisableNmiRequest
 2290              	 .thumb
 2291              	 .thumb_func
 2293              	XMC_SCU_INTERRUPT_DisableNmiRequest:
 2294              	.LFB204:
 650:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 651:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* Disables a NMI source */
 652:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request)
 653:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2295              	 .loc 3 653 0
 2296              	 .cfi_startproc
 2297              	 
 2298              	 
 2299              	 
 2300 0000 80B4     	 push {r7}
 2301              	.LCFI212:
 2302              	 .cfi_def_cfa_offset 4
 2303              	 .cfi_offset 7,-4
 2304 0002 83B0     	 sub sp,sp,#12
 2305              	.LCFI213:
 2306              	 .cfi_def_cfa_offset 16
 2307 0004 00AF     	 add r7,sp,#0
 2308              	.LCFI214:
 2309              	 .cfi_def_cfa_register 7
 2310 0006 7860     	 str r0,[r7,#4]
 654:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_INTERRUPT->NMIREQEN &= (uint32_t)~request;
 2311              	 .loc 3 654 0
 2312 0008 074B     	 ldr r3,.L156
 2313 000a 074A     	 ldr r2,.L156
 2314 000c 5169     	 ldr r1,[r2,#20]
 2315 000e 7A68     	 ldr r2,[r7,#4]
 2316 0010 D243     	 mvns r2,r2
 2317 0012 0A40     	 ands r2,r2,r1
 2318 0014 5969     	 ldr r1,[r3,#20]
 2319 0016 0021     	 movs r1,#0
 2320 0018 0A43     	 orrs r2,r2,r1
 2321 001a 5A61     	 str r2,[r3,#20]
 655:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2322              	 .loc 3 655 0
 2323 001c 0C37     	 adds r7,r7,#12
 2324              	.LCFI215:
 2325              	 .cfi_def_cfa_offset 4
 2326 001e BD46     	 mov sp,r7
 2327              	.LCFI216:
 2328              	 .cfi_def_cfa_register 13
 2329              	 
 2330 0020 5DF8047B 	 ldr r7,[sp],#4
 2331              	.LCFI217:
 2332              	 .cfi_restore 7
 2333              	 .cfi_def_cfa_offset 0
 2334 0024 7047     	 bx lr
 2335              	.L157:
 2336 0026 00BF     	 .align 2
 2337              	.L156:
 2338 0028 74400050 	 .word 1342193780
 2339              	 .cfi_endproc
 2340              	.LFE204:
 2342              	 .section .text.XMC_SCU_RESET_AssertPeripheralReset,"ax",%progbits
 2343              	 .align 2
 2344              	 .global XMC_SCU_RESET_AssertPeripheralReset
 2345              	 .thumb
 2346              	 .thumb_func
 2348              	XMC_SCU_RESET_AssertPeripheralReset:
 2349              	.LFB205:
 656:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 657:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to manually assert a reset request */
 658:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 659:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2350              	 .loc 3 659 0
 2351              	 .cfi_startproc
 2352              	 
 2353              	 
 2354              	 
 2355 0000 80B4     	 push {r7}
 2356              	.LCFI218:
 2357              	 .cfi_def_cfa_offset 4
 2358              	 .cfi_offset 7,-4
 2359 0002 85B0     	 sub sp,sp,#20
 2360              	.LCFI219:
 2361              	 .cfi_def_cfa_offset 24
 2362 0004 00AF     	 add r7,sp,#0
 2363              	.LCFI220:
 2364              	 .cfi_def_cfa_register 7
 2365 0006 7860     	 str r0,[r7,#4]
 660:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2366              	 .loc 3 660 0
 2367 0008 7B68     	 ldr r3,[r7,#4]
 2368 000a 1B0F     	 lsrs r3,r3,#28
 2369 000c FB60     	 str r3,[r7,#12]
 661:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2370              	 .loc 3 661 0
 2371 000e 7B68     	 ldr r3,[r7,#4]
 2372 0010 23F07043 	 bic r3,r3,#-268435456
 2373 0014 BB60     	 str r3,[r7,#8]
 662:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 663:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRSET0) + (index * 3U)) = (uint32_t)mask;
 2374              	 .loc 3 663 0
 2375 0016 FA68     	 ldr r2,[r7,#12]
 2376 0018 1346     	 mov r3,r2
 2377 001a 5B00     	 lsls r3,r3,#1
 2378 001c 1344     	 add r3,r3,r2
 2379 001e 9B00     	 lsls r3,r3,#2
 2380 0020 1A46     	 mov r2,r3
 2381 0022 044B     	 ldr r3,.L159
 2382 0024 1344     	 add r3,r3,r2
 2383 0026 BA68     	 ldr r2,[r7,#8]
 2384 0028 1A60     	 str r2,[r3]
 664:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2385              	 .loc 3 664 0
 2386 002a 1437     	 adds r7,r7,#20
 2387              	.LCFI221:
 2388              	 .cfi_def_cfa_offset 4
 2389 002c BD46     	 mov sp,r7
 2390              	.LCFI222:
 2391              	 .cfi_def_cfa_register 13
 2392              	 
 2393 002e 5DF8047B 	 ldr r7,[sp],#4
 2394              	.LCFI223:
 2395              	 .cfi_restore 7
 2396              	 .cfi_def_cfa_offset 0
 2397 0032 7047     	 bx lr
 2398              	.L160:
 2399              	 .align 2
 2400              	.L159:
 2401 0034 10440050 	 .word 1342194704
 2402              	 .cfi_endproc
 2403              	.LFE205:
 2405              	 .section .text.XMC_SCU_RESET_DeassertPeripheralReset,"ax",%progbits
 2406              	 .align 2
 2407              	 .global XMC_SCU_RESET_DeassertPeripheralReset
 2408              	 .thumb
 2409              	 .thumb_func
 2411              	XMC_SCU_RESET_DeassertPeripheralReset:
 2412              	.LFB206:
 665:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 666:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to manually de-assert a reset request */
 667:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 668:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2413              	 .loc 3 668 0
 2414              	 .cfi_startproc
 2415              	 
 2416              	 
 2417              	 
 2418 0000 80B4     	 push {r7}
 2419              	.LCFI224:
 2420              	 .cfi_def_cfa_offset 4
 2421              	 .cfi_offset 7,-4
 2422 0002 85B0     	 sub sp,sp,#20
 2423              	.LCFI225:
 2424              	 .cfi_def_cfa_offset 24
 2425 0004 00AF     	 add r7,sp,#0
 2426              	.LCFI226:
 2427              	 .cfi_def_cfa_register 7
 2428 0006 7860     	 str r0,[r7,#4]
 669:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2429              	 .loc 3 669 0
 2430 0008 7B68     	 ldr r3,[r7,#4]
 2431 000a 1B0F     	 lsrs r3,r3,#28
 2432 000c FB60     	 str r3,[r7,#12]
 670:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2433              	 .loc 3 670 0
 2434 000e 7B68     	 ldr r3,[r7,#4]
 2435 0010 23F07043 	 bic r3,r3,#-268435456
 2436 0014 BB60     	 str r3,[r7,#8]
 671:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 672:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_RESET->PRCLR0) + (index * 3U)) = (uint32_t)mask;
 2437              	 .loc 3 672 0
 2438 0016 FA68     	 ldr r2,[r7,#12]
 2439 0018 1346     	 mov r3,r2
 2440 001a 5B00     	 lsls r3,r3,#1
 2441 001c 1344     	 add r3,r3,r2
 2442 001e 9B00     	 lsls r3,r3,#2
 2443 0020 1A46     	 mov r2,r3
 2444 0022 044B     	 ldr r3,.L162
 2445 0024 1344     	 add r3,r3,r2
 2446 0026 BA68     	 ldr r2,[r7,#8]
 2447 0028 1A60     	 str r2,[r3]
 673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2448              	 .loc 3 673 0
 2449 002a 1437     	 adds r7,r7,#20
 2450              	.LCFI227:
 2451              	 .cfi_def_cfa_offset 4
 2452 002c BD46     	 mov sp,r7
 2453              	.LCFI228:
 2454              	 .cfi_def_cfa_register 13
 2455              	 
 2456 002e 5DF8047B 	 ldr r7,[sp],#4
 2457              	.LCFI229:
 2458              	 .cfi_restore 7
 2459              	 .cfi_def_cfa_offset 0
 2460 0032 7047     	 bx lr
 2461              	.L163:
 2462              	 .align 2
 2463              	.L162:
 2464 0034 14440050 	 .word 1342194708
 2465              	 .cfi_endproc
 2466              	.LFE206:
 2468              	 .section .text.XMC_SCU_RESET_IsPeripheralResetAsserted,"ax",%progbits
 2469              	 .align 2
 2470              	 .global XMC_SCU_RESET_IsPeripheralResetAsserted
 2471              	 .thumb
 2472              	 .thumb_func
 2474              	XMC_SCU_RESET_IsPeripheralResetAsserted:
 2475              	.LFB207:
 674:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 675:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* Find out if the peripheral reset is asserted */
 676:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral)
 677:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2476              	 .loc 3 677 0
 2477              	 .cfi_startproc
 2478              	 
 2479              	 
 2480              	 
 2481 0000 80B4     	 push {r7}
 2482              	.LCFI230:
 2483              	 .cfi_def_cfa_offset 4
 2484              	 .cfi_offset 7,-4
 2485 0002 85B0     	 sub sp,sp,#20
 2486              	.LCFI231:
 2487              	 .cfi_def_cfa_offset 24
 2488 0004 00AF     	 add r7,sp,#0
 2489              	.LCFI232:
 2490              	 .cfi_def_cfa_register 7
 2491 0006 7860     	 str r0,[r7,#4]
 678:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((((uint32_t)peripheral) & 0xf0000000UL) >> 28UL);
 2492              	 .loc 3 678 0
 2493 0008 7B68     	 ldr r3,[r7,#4]
 2494 000a 1B0F     	 lsrs r3,r3,#28
 2495 000c FB60     	 str r3,[r7,#12]
 679:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (((uint32_t)peripheral) & ((uint32_t)~0xf0000000UL));
 2496              	 .loc 3 679 0
 2497 000e 7B68     	 ldr r3,[r7,#4]
 2498 0010 23F07043 	 bic r3,r3,#-268435456
 2499 0014 BB60     	 str r3,[r7,#8]
 680:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 681:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_RESET->PRSTAT0) + (index * 3U)) & mask) != 0U);
 2500              	 .loc 3 681 0
 2501 0016 FA68     	 ldr r2,[r7,#12]
 2502 0018 1346     	 mov r3,r2
 2503 001a 5B00     	 lsls r3,r3,#1
 2504 001c 1344     	 add r3,r3,r2
 2505 001e 9B00     	 lsls r3,r3,#2
 2506 0020 1A46     	 mov r2,r3
 2507 0022 084B     	 ldr r3,.L166
 2508 0024 1344     	 add r3,r3,r2
 2509 0026 1A68     	 ldr r2,[r3]
 2510 0028 BB68     	 ldr r3,[r7,#8]
 2511 002a 1340     	 ands r3,r3,r2
 2512 002c 002B     	 cmp r3,#0
 2513 002e 14BF     	 ite ne
 2514 0030 0123     	 movne r3,#1
 2515 0032 0023     	 moveq r3,#0
 2516 0034 DBB2     	 uxtb r3,r3
 682:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2517              	 .loc 3 682 0
 2518 0036 1846     	 mov r0,r3
 2519 0038 1437     	 adds r7,r7,#20
 2520              	.LCFI233:
 2521              	 .cfi_def_cfa_offset 4
 2522 003a BD46     	 mov sp,r7
 2523              	.LCFI234:
 2524              	 .cfi_def_cfa_register 13
 2525              	 
 2526 003c 5DF8047B 	 ldr r7,[sp],#4
 2527              	.LCFI235:
 2528              	 .cfi_restore 7
 2529              	 .cfi_def_cfa_offset 0
 2530 0040 7047     	 bx lr
 2531              	.L167:
 2532 0042 00BF     	 .align 2
 2533              	.L166:
 2534 0044 0C440050 	 .word 1342194700
 2535              	 .cfi_endproc
 2536              	.LFE207:
 2538              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency,"ax",%progbits
 2539              	 .align 2
 2540              	 .global XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2541              	 .thumb
 2542              	 .thumb_func
 2544              	XMC_SCU_CLOCK_GetSystemPllClockFrequency:
 2545              	.LFB208:
 683:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 684:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
 685:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL output clock
 686:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 687:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void)
 688:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2546              	 .loc 3 688 0
 2547              	 .cfi_startproc
 2548              	 
 2549              	 
 2550 0000 80B5     	 push {r7,lr}
 2551              	.LCFI236:
 2552              	 .cfi_def_cfa_offset 8
 2553              	 .cfi_offset 7,-8
 2554              	 .cfi_offset 14,-4
 2555 0002 84B0     	 sub sp,sp,#16
 2556              	.LCFI237:
 2557              	 .cfi_def_cfa_offset 24
 2558 0004 00AF     	 add r7,sp,#0
 2559              	.LCFI238:
 2560              	 .cfi_def_cfa_register 7
 689:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 690:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 691:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 692:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t k2_div;
 693:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 694:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   clock_frequency = XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency();
 2561              	 .loc 3 694 0
 2562 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2563 000a F860     	 str r0,[r7,#12]
 695:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if(SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk)
 2564              	 .loc 3 695 0
 2565 000c 1A4B     	 ldr r3,.L172
 2566 000e 1B68     	 ldr r3,[r3]
 2567 0010 03F00103 	 and r3,r3,#1
 2568 0014 002B     	 cmp r3,#0
 2569 0016 09D0     	 beq .L169
 696:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 697:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Prescalar mode - fOSC is the parent*/
 698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)(clock_frequency / 
 699:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 2570              	 .loc 3 699 0
 2571 0018 174B     	 ldr r3,.L172
 2572 001a 9B68     	 ldr r3,[r3,#8]
 2573 001c 03F07F03 	 and r3,r3,#127
 2574 0020 0133     	 adds r3,r3,#1
 698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       ((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_P
 2575              	 .loc 3 698 0
 2576 0022 FA68     	 ldr r2,[r7,#12]
 2577 0024 B2FBF3F3 	 udiv r3,r2,r3
 2578 0028 FB60     	 str r3,[r7,#12]
 2579 002a 1FE0     	 b .L170
 2580              	.L169:
 700:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 701:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 702:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 703:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     p_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Po
 2581              	 .loc 3 703 0
 2582 002c 124B     	 ldr r3,.L172
 2583 002e 9B68     	 ldr r3,[r3,#8]
 2584 0030 03F07063 	 and r3,r3,#251658240
 2585 0034 1B0E     	 lsrs r3,r3,#24
 2586 0036 0133     	 adds r3,r3,#1
 2587 0038 BB60     	 str r3,[r7,#8]
 704:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     n_div  = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Po
 2588              	 .loc 3 704 0
 2589 003a 0F4B     	 ldr r3,.L172
 2590 003c 9B68     	 ldr r3,[r3,#8]
 2591 003e 03F4FE43 	 and r3,r3,#32512
 2592 0042 1B0A     	 lsrs r3,r3,#8
 2593 0044 0133     	 adds r3,r3,#1
 2594 0046 7B60     	 str r3,[r7,#4]
 705:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     k2_div = (uint32_t)((((SCU_PLL->PLLCON1) & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_
 2595              	 .loc 3 705 0
 2596 0048 0B4B     	 ldr r3,.L172
 2597 004a 9B68     	 ldr r3,[r3,#8]
 2598 004c 03F4FE03 	 and r3,r3,#8323072
 2599 0050 1B0C     	 lsrs r3,r3,#16
 2600 0052 0133     	 adds r3,r3,#1
 2601 0054 3B60     	 str r3,[r7]
 706:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****        
 707:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     clock_frequency = (clock_frequency * n_div) / (p_div * k2_div);
 2602              	 .loc 3 707 0
 2603 0056 FB68     	 ldr r3,[r7,#12]
 2604 0058 7A68     	 ldr r2,[r7,#4]
 2605 005a 02FB03F2 	 mul r2,r2,r3
 2606 005e BB68     	 ldr r3,[r7,#8]
 2607 0060 3968     	 ldr r1,[r7]
 2608 0062 01FB03F3 	 mul r3,r1,r3
 2609 0066 B2FBF3F3 	 udiv r3,r2,r3
 2610 006a FB60     	 str r3,[r7,#12]
 2611              	.L170:
 708:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 709:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 710:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2612              	 .loc 3 710 0
 2613 006c FB68     	 ldr r3,[r7,#12]
 711:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2614              	 .loc 3 711 0
 2615 006e 1846     	 mov r0,r3
 2616 0070 1037     	 adds r7,r7,#16
 2617              	.LCFI239:
 2618              	 .cfi_def_cfa_offset 8
 2619 0072 BD46     	 mov sp,r7
 2620              	.LCFI240:
 2621              	 .cfi_def_cfa_register 13
 2622              	 
 2623 0074 80BD     	 pop {r7,pc}
 2624              	.L173:
 2625 0076 00BF     	 .align 2
 2626              	.L172:
 2627 0078 10470050 	 .word 1342195472
 2628              	 .cfi_endproc
 2629              	.LFE208:
 2631              	 .section .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency,"ax",%progbits
 2632              	 .align 2
 2633              	 .global XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
 2634              	 .thumb
 2635              	 .thumb_func
 2637              	XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:
 2638              	.LFB209:
 712:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 713:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /**
 714:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of System PLL VCO input clock
 715:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 716:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void)
 717:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2639              	 .loc 3 717 0
 2640              	 .cfi_startproc
 2641              	 
 2642              	 
 2643 0000 80B5     	 push {r7,lr}
 2644              	.LCFI241:
 2645              	 .cfi_def_cfa_offset 8
 2646              	 .cfi_offset 7,-8
 2647              	 .cfi_offset 14,-4
 2648 0002 82B0     	 sub sp,sp,#8
 2649              	.LCFI242:
 2650              	 .cfi_def_cfa_offset 16
 2651 0004 00AF     	 add r7,sp,#0
 2652              	.LCFI243:
 2653              	 .cfi_def_cfa_register 7
 718:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 719:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 720:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Prescalar mode - fOSC is the parent*/
 721:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if((SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk) == (uint32_t)XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 2654              	 .loc 3 721 0
 2655 0006 084B     	 ldr r3,.L178
 2656 0008 DB68     	 ldr r3,[r3,#12]
 2657 000a 03F00103 	 and r3,r3,#1
 2658 000e 002B     	 cmp r3,#0
 2659 0010 03D1     	 bne .L175
 722:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 723:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     clock_frequency = OSCHP_GetFrequency();
 2660              	 .loc 3 723 0
 2661 0012 FFF7FEFF 	 bl OSCHP_GetFrequency
 2662 0016 7860     	 str r0,[r7,#4]
 2663 0018 01E0     	 b .L176
 2664              	.L175:
 724:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 725:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 726:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 727:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     clock_frequency = OFI_FREQUENCY;
 2665              	 .loc 3 727 0
 2666 001a 044B     	 ldr r3,.L178+4
 2667 001c 7B60     	 str r3,[r7,#4]
 2668              	.L176:
 728:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 729:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 730:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2669              	 .loc 3 730 0
 2670 001e 7B68     	 ldr r3,[r7,#4]
 731:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2671              	 .loc 3 731 0
 2672 0020 1846     	 mov r0,r3
 2673 0022 0837     	 adds r7,r7,#8
 2674              	.LCFI244:
 2675              	 .cfi_def_cfa_offset 8
 2676 0024 BD46     	 mov sp,r7
 2677              	.LCFI245:
 2678              	 .cfi_def_cfa_register 13
 2679              	 
 2680 0026 80BD     	 pop {r7,pc}
 2681              	.L179:
 2682              	 .align 2
 2683              	.L178:
 2684 0028 10470050 	 .word 1342195472
 2685 002c 00366E01 	 .word 24000000
 2686              	 .cfi_endproc
 2687              	.LFE209:
 2689              	 .section .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency,"ax",%progbits
 2690              	 .align 2
 2691              	 .global XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2692              	 .thumb
 2693              	 .thumb_func
 2695              	XMC_SCU_CLOCK_GetUsbPllClockFrequency:
 2696              	.LFB210:
 732:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 733:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
 734:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of USB PLL output clock
 735:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 736:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void)
 737:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2697              	 .loc 3 737 0
 2698              	 .cfi_startproc
 2699              	 
 2700              	 
 2701 0000 80B5     	 push {r7,lr}
 2702              	.LCFI246:
 2703              	 .cfi_def_cfa_offset 8
 2704              	 .cfi_offset 7,-8
 2705              	 .cfi_offset 14,-4
 2706 0002 84B0     	 sub sp,sp,#16
 2707              	.LCFI247:
 2708              	 .cfi_def_cfa_offset 24
 2709 0004 00AF     	 add r7,sp,#0
 2710              	.LCFI248:
 2711              	 .cfi_def_cfa_register 7
 738:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t clock_frequency;
 739:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t n_div;
 740:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t p_div;
 741:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 742:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   clock_frequency = OSCHP_GetFrequency();
 2712              	 .loc 3 742 0
 2713 0006 FFF7FEFF 	 bl OSCHP_GetFrequency
 2714 000a F860     	 str r0,[r7,#12]
 743:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOBYST_Msk) == 0U)
 2715              	 .loc 3 743 0
 2716 000c 104B     	 ldr r3,.L183
 2717 000e 1B69     	 ldr r3,[r3,#16]
 2718 0010 03F00103 	 and r3,r3,#1
 2719 0014 002B     	 cmp r3,#0
 2720 0016 16D1     	 bne .L181
 744:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 745:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Normal mode - fVCO is the parent*/
 746:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     n_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_NDIV_Msk) >> SCU_PLL_USBPLLCON_ND
 2721              	 .loc 3 746 0
 2722 0018 0D4B     	 ldr r3,.L183
 2723 001a 5B69     	 ldr r3,[r3,#20]
 2724 001c 03F4FE43 	 and r3,r3,#32512
 2725 0020 1B0A     	 lsrs r3,r3,#8
 2726 0022 0133     	 adds r3,r3,#1
 2727 0024 BB60     	 str r3,[r7,#8]
 747:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     p_div = (uint32_t)((((SCU_PLL->USBPLLCON) & SCU_PLL_USBPLLCON_PDIV_Msk) >> SCU_PLL_USBPLLCON_PD
 2728              	 .loc 3 747 0
 2729 0026 0A4B     	 ldr r3,.L183
 2730 0028 5B69     	 ldr r3,[r3,#20]
 2731 002a 03F07063 	 and r3,r3,#251658240
 2732 002e 1B0E     	 lsrs r3,r3,#24
 2733 0030 0133     	 adds r3,r3,#1
 2734 0032 7B60     	 str r3,[r7,#4]
 748:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     clock_frequency = (uint32_t)((clock_frequency * n_div)/ (uint32_t)(p_div * 2UL));
 2735              	 .loc 3 748 0
 2736 0034 FB68     	 ldr r3,[r7,#12]
 2737 0036 BA68     	 ldr r2,[r7,#8]
 2738 0038 02FB03F2 	 mul r2,r2,r3
 2739 003c 7B68     	 ldr r3,[r7,#4]
 2740 003e 5B00     	 lsls r3,r3,#1
 2741 0040 B2FBF3F3 	 udiv r3,r2,r3
 2742 0044 FB60     	 str r3,[r7,#12]
 2743              	.L181:
 749:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 750:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (clock_frequency);
 2744              	 .loc 3 750 0
 2745 0046 FB68     	 ldr r3,[r7,#12]
 751:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2746              	 .loc 3 751 0
 2747 0048 1846     	 mov r0,r3
 2748 004a 1037     	 adds r7,r7,#16
 2749              	.LCFI249:
 2750              	 .cfi_def_cfa_offset 8
 2751 004c BD46     	 mov sp,r7
 2752              	.LCFI250:
 2753              	 .cfi_def_cfa_register 13
 2754              	 
 2755 004e 80BD     	 pop {r7,pc}
 2756              	.L184:
 2757              	 .align 2
 2758              	.L183:
 2759 0050 10470050 	 .word 1342195472
 2760              	 .cfi_endproc
 2761              	.LFE210:
 2763              	 .section .text.XMC_SCU_CLOCK_GetCcuClockFrequency,"ax",%progbits
 2764              	 .align 2
 2765              	 .global XMC_SCU_CLOCK_GetCcuClockFrequency
 2766              	 .thumb
 2767              	 .thumb_func
 2769              	XMC_SCU_CLOCK_GetCcuClockFrequency:
 2770              	.LFB211:
 752:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 753:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
 754:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to retrieve frequency of CCU clock frequency
 755:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 756:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void)
 757:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2771              	 .loc 3 757 0
 2772              	 .cfi_startproc
 2773              	 
 2774              	 
 2775 0000 80B5     	 push {r7,lr}
 2776              	.LCFI251:
 2777              	 .cfi_def_cfa_offset 8
 2778              	 .cfi_offset 7,-8
 2779              	 .cfi_offset 14,-4
 2780 0002 82B0     	 sub sp,sp,#8
 2781              	.LCFI252:
 2782              	 .cfi_def_cfa_offset 16
 2783 0004 00AF     	 add r7,sp,#0
 2784              	.LCFI253:
 2785              	 .cfi_def_cfa_register 7
 758:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2786              	 .loc 3 758 0
 2787 0006 0023     	 movs r3,#0
 2788 0008 7B60     	 str r3,[r7,#4]
 759:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 2789              	 .loc 3 759 0
 2790 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2791 000e 7860     	 str r0,[r7,#4]
 760:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 761:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency >> ((uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >>
 2792              	 .loc 3 761 0
 2793 0010 054B     	 ldr r3,.L187
 2794 0012 1B6A     	 ldr r3,[r3,#32]
 2795 0014 03F00103 	 and r3,r3,#1
 2796 0018 7A68     	 ldr r2,[r7,#4]
 2797 001a 22FA03F3 	 lsr r3,r2,r3
 762:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                               SCU_CLK_CCUCLKCR_CCUDIV_Pos)));
 763:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2798              	 .loc 3 763 0
 2799 001e 1846     	 mov r0,r3
 2800 0020 0837     	 adds r7,r7,#8
 2801              	.LCFI254:
 2802              	 .cfi_def_cfa_offset 8
 2803 0022 BD46     	 mov sp,r7
 2804              	.LCFI255:
 2805              	 .cfi_def_cfa_register 13
 2806              	 
 2807 0024 80BD     	 pop {r7,pc}
 2808              	.L188:
 2809 0026 00BF     	 .align 2
 2810              	.L187:
 2811 0028 00460050 	 .word 1342195200
 2812              	 .cfi_endproc
 2813              	.LFE211:
 2815              	 .section .text.XMC_SCU_CLOCK_GetUsbClockFrequency,"ax",%progbits
 2816              	 .align 2
 2817              	 .global XMC_SCU_CLOCK_GetUsbClockFrequency
 2818              	 .thumb
 2819              	 .thumb_func
 2821              	XMC_SCU_CLOCK_GetUsbClockFrequency:
 2822              	.LFB212:
 764:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 765:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
 766:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to retrieve USB and SDMMC clock frequency
 767:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 768:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void)
 769:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2823              	 .loc 3 769 0
 2824              	 .cfi_startproc
 2825              	 
 2826              	 
 2827 0000 80B5     	 push {r7,lr}
 2828              	.LCFI256:
 2829              	 .cfi_def_cfa_offset 8
 2830              	 .cfi_offset 7,-8
 2831              	 .cfi_offset 14,-4
 2832 0002 82B0     	 sub sp,sp,#8
 2833              	.LCFI257:
 2834              	 .cfi_def_cfa_offset 16
 2835 0004 00AF     	 add r7,sp,#0
 2836              	.LCFI258:
 2837              	 .cfi_def_cfa_register 7
 770:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2838              	 .loc 3 770 0
 2839 0006 0023     	 movs r3,#0
 2840 0008 7B60     	 str r3,[r7,#4]
 771:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_USBCLKSRC_t clksrc;
 772:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 773:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetUsbClockSource();
 2841              	 .loc 3 773 0
 2842 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbClockSource
 2843 000e 3860     	 str r0,[r7]
 774:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_SYSPLL)
 2844              	 .loc 3 775 0
 2845 0010 3B68     	 ldr r3,[r7]
 2846 0012 B3F5803F 	 cmp r3,#65536
 2847 0016 03D1     	 bne .L190
 776:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 777:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2848              	 .loc 3 777 0
 2849 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2850 001c 7860     	 str r0,[r7,#4]
 2851 001e 05E0     	 b .L191
 2852              	.L190:
 778:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 779:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_USBCLKSRC_USBPLL)
 2853              	 .loc 3 779 0
 2854 0020 3B68     	 ldr r3,[r7]
 2855 0022 002B     	 cmp r3,#0
 2856 0024 02D1     	 bne .L191
 780:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 781:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 2857              	 .loc 3 781 0
 2858 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 2859 002a 7860     	 str r0,[r7,#4]
 2860              	.L191:
 782:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 783:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 784:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 785:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 786:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 787:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(frequency / (((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >>
 2861              	 .loc 3 787 0
 2862 002c 054B     	 ldr r3,.L193
 2863 002e 9B69     	 ldr r3,[r3,#24]
 2864 0030 03F00703 	 and r3,r3,#7
 788:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 2865              	 .loc 3 788 0
 2866 0034 0133     	 adds r3,r3,#1
 787:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_USBCLKCR_USBDIV_Pos) + 1UL));
 2867              	 .loc 3 787 0
 2868 0036 7A68     	 ldr r2,[r7,#4]
 2869 0038 B2FBF3F3 	 udiv r3,r2,r3
 789:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2870              	 .loc 3 789 0
 2871 003c 1846     	 mov r0,r3
 2872 003e 0837     	 adds r7,r7,#8
 2873              	.LCFI259:
 2874              	 .cfi_def_cfa_offset 8
 2875 0040 BD46     	 mov sp,r7
 2876              	.LCFI260:
 2877              	 .cfi_def_cfa_register 13
 2878              	 
 2879 0042 80BD     	 pop {r7,pc}
 2880              	.L194:
 2881              	 .align 2
 2882              	.L193:
 2883 0044 00460050 	 .word 1342195200
 2884              	 .cfi_endproc
 2885              	.LFE212:
 2887              	 .section .text.XMC_SCU_CLOCK_GetEbuClockFrequency,"ax",%progbits
 2888              	 .align 2
 2889              	 .global XMC_SCU_CLOCK_GetEbuClockFrequency
 2890              	 .thumb
 2891              	 .thumb_func
 2893              	XMC_SCU_CLOCK_GetEbuClockFrequency:
 2894              	.LFB213:
 790:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 791:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
 792:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
 793:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to retrieve EBU clock frequency
 794:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 795:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetEbuClockFrequency(void)
 796:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2895              	 .loc 3 796 0
 2896              	 .cfi_startproc
 2897              	 
 2898              	 
 2899 0000 80B5     	 push {r7,lr}
 2900              	.LCFI261:
 2901              	 .cfi_def_cfa_offset 8
 2902              	 .cfi_offset 7,-8
 2903              	 .cfi_offset 14,-4
 2904 0002 82B0     	 sub sp,sp,#8
 2905              	.LCFI262:
 2906              	 .cfi_def_cfa_offset 16
 2907 0004 00AF     	 add r7,sp,#0
 2908              	.LCFI263:
 2909              	 .cfi_def_cfa_register 7
 797:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2910              	 .loc 3 797 0
 2911 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2912 000a 7860     	 str r0,[r7,#4]
 798:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
 799:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency /(((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >>
 2913              	 .loc 3 799 0
 2914 000c 054B     	 ldr r3,.L197
 2915 000e DB69     	 ldr r3,[r3,#28]
 2916 0010 03F03F03 	 and r3,r3,#63
 800:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 2917              	 .loc 3 800 0
 2918 0014 0133     	 adds r3,r3,#1
 799:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                    SCU_CLK_EBUCLKCR_EBUDIV_Pos) + 1UL)));
 2919              	 .loc 3 799 0
 2920 0016 7A68     	 ldr r2,[r7,#4]
 2921 0018 B2FBF3F3 	 udiv r3,r2,r3
 801:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 2922              	 .loc 3 801 0
 2923 001c 1846     	 mov r0,r3
 2924 001e 0837     	 adds r7,r7,#8
 2925              	.LCFI264:
 2926              	 .cfi_def_cfa_offset 8
 2927 0020 BD46     	 mov sp,r7
 2928              	.LCFI265:
 2929              	 .cfi_def_cfa_register 13
 2930              	 
 2931 0022 80BD     	 pop {r7,pc}
 2932              	.L198:
 2933              	 .align 2
 2934              	.L197:
 2935 0024 00460050 	 .word 1342195200
 2936              	 .cfi_endproc
 2937              	.LFE213:
 2939              	 .section .text.XMC_SCU_CLOCK_GetWdtClockFrequency,"ax",%progbits
 2940              	 .align 2
 2941              	 .global XMC_SCU_CLOCK_GetWdtClockFrequency
 2942              	 .thumb
 2943              	 .thumb_func
 2945              	XMC_SCU_CLOCK_GetWdtClockFrequency:
 2946              	.LFB214:
 802:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
 803:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 804:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
 805:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
 806:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to retrieve ECAT clock frequency
 807:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 808:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetECATClockFrequency(void)
 809:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 810:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t frequency;
 811:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 812:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if ((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) != 0U)
 813:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 814:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 815:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 816:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 817:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 818:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency =  XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 819:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 820:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 821:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (XMC_SCU_CLOCK_GetECATClockDivider() + 1UL)));
 822:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 823:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
 824:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 825:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
 826:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to retrieve WDT clock frequency
 827:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 828:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetWdtClockFrequency(void)
 829:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 2947              	 .loc 3 829 0
 2948              	 .cfi_startproc
 2949              	 
 2950              	 
 2951 0000 80B5     	 push {r7,lr}
 2952              	.LCFI266:
 2953              	 .cfi_def_cfa_offset 8
 2954              	 .cfi_offset 7,-8
 2955              	 .cfi_offset 14,-4
 2956 0002 82B0     	 sub sp,sp,#8
 2957              	.LCFI267:
 2958              	 .cfi_def_cfa_offset 16
 2959 0004 00AF     	 add r7,sp,#0
 2960              	.LCFI268:
 2961              	 .cfi_def_cfa_register 7
 830:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 2962              	 .loc 3 830 0
 2963 0006 0023     	 movs r3,#0
 2964 0008 7B60     	 str r3,[r7,#4]
 831:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_WDTCLKSRC_t clksrc;
 832:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 833:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetWdtClockSource();
 2965              	 .loc 3 833 0
 2966 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetWdtClockSource
 2967 000e 3860     	 str r0,[r7]
 834:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 835:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_PLL)
 2968              	 .loc 3 835 0
 2969 0010 3B68     	 ldr r3,[r7]
 2970 0012 B3F5003F 	 cmp r3,#131072
 2971 0016 03D1     	 bne .L200
 836:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 837:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 2972              	 .loc 3 837 0
 2973 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 2974 001c 7860     	 str r0,[r7,#4]
 2975 001e 0CE0     	 b .L201
 2976              	.L200:
 838:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 839:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_OFI)
 2977              	 .loc 3 839 0
 2978 0020 3B68     	 ldr r3,[r7]
 2979 0022 002B     	 cmp r3,#0
 2980 0024 02D1     	 bne .L202
 840:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 841:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = OFI_FREQUENCY;
 2981              	 .loc 3 841 0
 2982 0026 0A4B     	 ldr r3,.L204
 2983 0028 7B60     	 str r3,[r7,#4]
 2984 002a 06E0     	 b .L201
 2985              	.L202:
 842:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 843:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_WDTCLKSRC_STDBY)
 2986              	 .loc 3 843 0
 2987 002c 3B68     	 ldr r3,[r7]
 2988 002e B3F5803F 	 cmp r3,#65536
 2989 0032 02D1     	 bne .L201
 844:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 845:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = OSI_FREQUENCY;
 2990              	 .loc 3 845 0
 2991 0034 4FF40043 	 mov r3,#32768
 2992 0038 7B60     	 str r3,[r7,#4]
 2993              	.L201:
 846:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 847:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 848:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 849:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 850:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 851:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 852:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (uint32_t)((frequency / (((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >>
 2994              	 .loc 3 852 0
 2995 003a 064B     	 ldr r3,.L204+4
 2996 003c 5B6A     	 ldr r3,[r3,#36]
 2997 003e DBB2     	 uxtb r3,r3
 853:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                     SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 2998              	 .loc 3 853 0
 2999 0040 0133     	 adds r3,r3,#1
 852:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                     SCU_CLK_WDTCLKCR_WDTDIV_Pos) + 1UL)));
 3000              	 .loc 3 852 0
 3001 0042 7A68     	 ldr r2,[r7,#4]
 3002 0044 B2FBF3F3 	 udiv r3,r2,r3
 854:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3003              	 .loc 3 854 0
 3004 0048 1846     	 mov r0,r3
 3005 004a 0837     	 adds r7,r7,#8
 3006              	.LCFI269:
 3007              	 .cfi_def_cfa_offset 8
 3008 004c BD46     	 mov sp,r7
 3009              	.LCFI270:
 3010              	 .cfi_def_cfa_register 13
 3011              	 
 3012 004e 80BD     	 pop {r7,pc}
 3013              	.L205:
 3014              	 .align 2
 3015              	.L204:
 3016 0050 00366E01 	 .word 24000000
 3017 0054 00460050 	 .word 1342195200
 3018              	 .cfi_endproc
 3019              	.LFE214:
 3021              	 .section .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency,"ax",%progbits
 3022              	 .align 2
 3023              	 .global XMC_SCU_CLOCK_GetExternalOutputClockFrequency
 3024              	 .thumb
 3025              	 .thumb_func
 3027              	XMC_SCU_CLOCK_GetExternalOutputClockFrequency:
 3028              	.LFB215:
 855:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 856:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /**
 857:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * @brief API to retrieve EXTERNAL-OUT clock frequency
 858:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * @retval Clock frequency
 859:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 860:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetExternalOutputClockFrequency(void)
 861:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3029              	 .loc 3 861 0
 3030              	 .cfi_startproc
 3031              	 
 3032              	 
 3033 0000 80B5     	 push {r7,lr}
 3034              	.LCFI271:
 3035              	 .cfi_def_cfa_offset 8
 3036              	 .cfi_offset 7,-8
 3037              	 .cfi_offset 14,-4
 3038 0002 82B0     	 sub sp,sp,#8
 3039              	.LCFI272:
 3040              	 .cfi_def_cfa_offset 16
 3041 0004 00AF     	 add r7,sp,#0
 3042              	.LCFI273:
 3043              	 .cfi_def_cfa_register 7
 862:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t frequency = 0UL;
 3044              	 .loc 3 862 0
 3045 0006 0023     	 movs r3,#0
 3046 0008 7B60     	 str r3,[r7,#4]
 863:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_t clksrc;
 864:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 865:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   clksrc = XMC_SCU_CLOCK_GetExternalOutputClockSource();
 3047              	 .loc 3 865 0
 3048 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetExternalOutputClockSource
 3049 000e 0346     	 mov r3,r0
 3050 0010 FB70     	 strb r3,[r7,#3]
 866:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 867:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL)
 3051              	 .loc 3 867 0
 3052 0012 FB78     	 ldrb r3,[r7,#3]
 3053 0014 032B     	 cmp r3,#3
 3054 0016 0DD1     	 bne .L207
 868:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 869:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemPllClockFrequency();
 3055              	 .loc 3 869 0
 3056 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemPllClockFrequency
 3057 001c 7860     	 str r0,[r7,#4]
 870:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     
 871:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 3058              	 .loc 3 871 0
 3059 001e 134B     	 ldr r3,.L211
 3060 0020 9A6A     	 ldr r2,[r3,#40]
 3061 0022 134B     	 ldr r3,.L211+4
 3062 0024 1340     	 ands r3,r3,r2
 3063 0026 1B0C     	 lsrs r3,r3,#16
 872:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3064              	 .loc 3 872 0
 3065 0028 0133     	 adds r3,r3,#1
 871:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3066              	 .loc 3 871 0
 3067 002a 7A68     	 ldr r2,[r7,#4]
 3068 002c B2FBF3F3 	 udiv r3,r2,r3
 3069 0030 7B60     	 str r3,[r7,#4]
 3070 0032 16E0     	 b .L208
 3071              	.L207:
 873:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 874:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS)
 3072              	 .loc 3 874 0
 3073 0034 FB78     	 ldrb r3,[r7,#3]
 3074 0036 002B     	 cmp r3,#0
 3075 0038 03D1     	 bne .L209
 875:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 876:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetSystemClockFrequency();
 3076              	 .loc 3 876 0
 3077 003a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 3078 003e 7860     	 str r0,[r7,#4]
 3079 0040 0FE0     	 b .L208
 3080              	.L209:
 877:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 878:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else if (clksrc == XMC_SCU_CLOCK_EXTOUTCLKSRC_USB)
 3081              	 .loc 3 878 0
 3082 0042 FB78     	 ldrb r3,[r7,#3]
 3083 0044 022B     	 cmp r3,#2
 3084 0046 0CD1     	 bne .L208
 879:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 880:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = XMC_SCU_CLOCK_GetUsbPllClockFrequency();
 3085              	 .loc 3 880 0
 3086 0048 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetUsbPllClockFrequency
 3087 004c 7860     	 str r0,[r7,#4]
 881:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     
 882:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     frequency = (uint32_t)((frequency / ((((SCU_CLK->EXTCLKCR) & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >>
 3088              	 .loc 3 882 0
 3089 004e 074B     	 ldr r3,.L211
 3090 0050 9A6A     	 ldr r2,[r3,#40]
 3091 0052 074B     	 ldr r3,.L211+4
 3092 0054 1340     	 ands r3,r3,r2
 3093 0056 1B0C     	 lsrs r3,r3,#16
 883:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3094              	 .loc 3 883 0
 3095 0058 0133     	 adds r3,r3,#1
 882:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                  SCU_CLK_EXTCLKCR_ECKDIV_Pos)+ 1UL)));
 3096              	 .loc 3 882 0
 3097 005a 7A68     	 ldr r2,[r7,#4]
 3098 005c B2FBF3F3 	 udiv r3,r2,r3
 3099 0060 7B60     	 str r3,[r7,#4]
 3100              	.L208:
 884:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 885:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 886:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 887:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 888:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 889:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 890:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (frequency);
 3101              	 .loc 3 890 0
 3102 0062 7B68     	 ldr r3,[r7,#4]
 891:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3103              	 .loc 3 891 0
 3104 0064 1846     	 mov r0,r3
 3105 0066 0837     	 adds r7,r7,#8
 3106              	.LCFI274:
 3107              	 .cfi_def_cfa_offset 8
 3108 0068 BD46     	 mov sp,r7
 3109              	.LCFI275:
 3110              	 .cfi_def_cfa_register 13
 3111              	 
 3112 006a 80BD     	 pop {r7,pc}
 3113              	.L212:
 3114              	 .align 2
 3115              	.L211:
 3116 006c 00460050 	 .word 1342195200
 3117 0070 0000FF01 	 .word 33488896
 3118              	 .cfi_endproc
 3119              	.LFE215:
 3121              	 .section .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency,"ax",%progbits
 3122              	 .align 2
 3123              	 .global XMC_SCU_CLOCK_GetPeripheralClockFrequency
 3124              	 .thumb
 3125              	 .thumb_func
 3127              	XMC_SCU_CLOCK_GetPeripheralClockFrequency:
 3128              	.LFB216:
 892:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 893:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
 894:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to retrieve clock frequency of peripherals on the peripheral bus using a shared functional c
 895:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
 896:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void)
 897:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3129              	 .loc 3 897 0
 3130              	 .cfi_startproc
 3131              	 
 3132              	 
 3133 0000 80B5     	 push {r7,lr}
 3134              	.LCFI276:
 3135              	 .cfi_def_cfa_offset 8
 3136              	 .cfi_offset 7,-8
 3137              	 .cfi_offset 14,-4
 3138 0002 00AF     	 add r7,sp,#0
 3139              	.LCFI277:
 3140              	 .cfi_def_cfa_register 7
 898:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3141              	 .loc 3 898 0
 3142 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetCpuClockFrequency
 3143 0008 0246     	 mov r2,r0
 899:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****          ((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos));  
 3144              	 .loc 3 899 0
 3145 000a 044B     	 ldr r3,.L215
 3146 000c 5B69     	 ldr r3,[r3,#20]
 898:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (uint32_t)(XMC_SCU_CLOCK_GetCpuClockFrequency() >>
 3147              	 .loc 3 898 0
 3148 000e 03F00103 	 and r3,r3,#1
 3149 0012 22FA03F3 	 lsr r3,r2,r3
 900:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3150              	 .loc 3 900 0
 3151 0016 1846     	 mov r0,r3
 3152 0018 80BD     	 pop {r7,pc}
 3153              	.L216:
 3154 001a 00BF     	 .align 2
 3155              	.L215:
 3156 001c 00460050 	 .word 1342195200
 3157              	 .cfi_endproc
 3158              	.LFE216:
 3160              	 .section .text.XMC_SCU_CLOCK_SetSystemClockSource,"ax",%progbits
 3161              	 .align 2
 3162              	 .global XMC_SCU_CLOCK_SetSystemClockSource
 3163              	 .thumb
 3164              	 .thumb_func
 3166              	XMC_SCU_CLOCK_SetSystemClockSource:
 3167              	.LFB217:
 901:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 902:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to select fSYS */
 903:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source)
 904:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3168              	 .loc 3 904 0
 3169              	 .cfi_startproc
 3170              	 
 3171              	 
 3172              	 
 3173 0000 80B4     	 push {r7}
 3174              	.LCFI278:
 3175              	 .cfi_def_cfa_offset 4
 3176              	 .cfi_offset 7,-4
 3177 0002 83B0     	 sub sp,sp,#12
 3178              	.LCFI279:
 3179              	 .cfi_def_cfa_offset 16
 3180 0004 00AF     	 add r7,sp,#0
 3181              	.LCFI280:
 3182              	 .cfi_def_cfa_register 7
 3183 0006 7860     	 str r0,[r7,#4]
 905:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSSEL_Msk)) |
 3184              	 .loc 3 905 0
 3185 0008 074B     	 ldr r3,.L218
 3186 000a 074A     	 ldr r2,.L218
 3187 000c D268     	 ldr r2,[r2,#12]
 3188 000e 22F48031 	 bic r1,r2,#65536
 3189 0012 7A68     	 ldr r2,[r7,#4]
 3190 0014 0A43     	 orrs r2,r2,r1
 3191 0016 D968     	 ldr r1,[r3,#12]
 3192 0018 0021     	 movs r1,#0
 3193 001a 0A43     	 orrs r2,r2,r1
 3194 001c DA60     	 str r2,[r3,#12]
 906:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 907:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3195              	 .loc 3 907 0
 3196 001e 0C37     	 adds r7,r7,#12
 3197              	.LCFI281:
 3198              	 .cfi_def_cfa_offset 4
 3199 0020 BD46     	 mov sp,r7
 3200              	.LCFI282:
 3201              	 .cfi_def_cfa_register 13
 3202              	 
 3203 0022 5DF8047B 	 ldr r7,[sp],#4
 3204              	.LCFI283:
 3205              	 .cfi_restore 7
 3206              	 .cfi_def_cfa_offset 0
 3207 0026 7047     	 bx lr
 3208              	.L219:
 3209              	 .align 2
 3210              	.L218:
 3211 0028 00460050 	 .word 1342195200
 3212              	 .cfi_endproc
 3213              	.LFE217:
 3215              	 .section .text.XMC_SCU_CLOCK_SetUsbClockSource,"ax",%progbits
 3216              	 .align 2
 3217              	 .global XMC_SCU_CLOCK_SetUsbClockSource
 3218              	 .thumb
 3219              	 .thumb_func
 3221              	XMC_SCU_CLOCK_SetUsbClockSource:
 3222              	.LFB218:
 908:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 909:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to select fUSB */
 910:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source)
 911:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3223              	 .loc 3 911 0
 3224              	 .cfi_startproc
 3225              	 
 3226              	 
 3227              	 
 3228 0000 80B4     	 push {r7}
 3229              	.LCFI284:
 3230              	 .cfi_def_cfa_offset 4
 3231              	 .cfi_offset 7,-4
 3232 0002 83B0     	 sub sp,sp,#12
 3233              	.LCFI285:
 3234              	 .cfi_def_cfa_offset 16
 3235 0004 00AF     	 add r7,sp,#0
 3236              	.LCFI286:
 3237              	 .cfi_def_cfa_register 7
 3238 0006 7860     	 str r0,[r7,#4]
 912:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBSEL_Msk)) |
 3239              	 .loc 3 912 0
 3240 0008 074B     	 ldr r3,.L221
 3241 000a 074A     	 ldr r2,.L221
 3242 000c 9269     	 ldr r2,[r2,#24]
 3243 000e 22F48031 	 bic r1,r2,#65536
 3244 0012 7A68     	 ldr r2,[r7,#4]
 3245 0014 0A43     	 orrs r2,r2,r1
 3246 0016 9969     	 ldr r1,[r3,#24]
 3247 0018 0021     	 movs r1,#0
 3248 001a 0A43     	 orrs r2,r2,r1
 3249 001c 9A61     	 str r2,[r3,#24]
 913:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 914:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3250              	 .loc 3 914 0
 3251 001e 0C37     	 adds r7,r7,#12
 3252              	.LCFI287:
 3253              	 .cfi_def_cfa_offset 4
 3254 0020 BD46     	 mov sp,r7
 3255              	.LCFI288:
 3256              	 .cfi_def_cfa_register 13
 3257              	 
 3258 0022 5DF8047B 	 ldr r7,[sp],#4
 3259              	.LCFI289:
 3260              	 .cfi_restore 7
 3261              	 .cfi_def_cfa_offset 0
 3262 0026 7047     	 bx lr
 3263              	.L222:
 3264              	 .align 2
 3265              	.L221:
 3266 0028 00460050 	 .word 1342195200
 3267              	 .cfi_endproc
 3268              	.LFE218:
 3270              	 .section .text.XMC_SCU_CLOCK_SetWdtClockSource,"ax",%progbits
 3271              	 .align 2
 3272              	 .global XMC_SCU_CLOCK_SetWdtClockSource
 3273              	 .thumb
 3274              	 .thumb_func
 3276              	XMC_SCU_CLOCK_SetWdtClockSource:
 3277              	.LFB219:
 915:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 916:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to select fWDT */
 917:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source)
 918:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3278              	 .loc 3 918 0
 3279              	 .cfi_startproc
 3280              	 
 3281              	 
 3282              	 
 3283 0000 80B4     	 push {r7}
 3284              	.LCFI290:
 3285              	 .cfi_def_cfa_offset 4
 3286              	 .cfi_offset 7,-4
 3287 0002 83B0     	 sub sp,sp,#12
 3288              	.LCFI291:
 3289              	 .cfi_def_cfa_offset 16
 3290 0004 00AF     	 add r7,sp,#0
 3291              	.LCFI292:
 3292              	 .cfi_def_cfa_register 7
 3293 0006 7860     	 str r0,[r7,#4]
 919:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTSEL_Msk)) |
 3294              	 .loc 3 919 0
 3295 0008 074B     	 ldr r3,.L224
 3296 000a 074A     	 ldr r2,.L224
 3297 000c 526A     	 ldr r2,[r2,#36]
 3298 000e 22F44031 	 bic r1,r2,#196608
 3299 0012 7A68     	 ldr r2,[r7,#4]
 3300 0014 0A43     	 orrs r2,r2,r1
 3301 0016 596A     	 ldr r1,[r3,#36]
 3302 0018 0021     	 movs r1,#0
 3303 001a 0A43     	 orrs r2,r2,r1
 3304 001c 5A62     	 str r2,[r3,#36]
 920:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 921:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3305              	 .loc 3 921 0
 3306 001e 0C37     	 adds r7,r7,#12
 3307              	.LCFI293:
 3308              	 .cfi_def_cfa_offset 4
 3309 0020 BD46     	 mov sp,r7
 3310              	.LCFI294:
 3311              	 .cfi_def_cfa_register 13
 3312              	 
 3313 0022 5DF8047B 	 ldr r7,[sp],#4
 3314              	.LCFI295:
 3315              	 .cfi_restore 7
 3316              	 .cfi_def_cfa_offset 0
 3317 0026 7047     	 bx lr
 3318              	.L225:
 3319              	 .align 2
 3320              	.L224:
 3321 0028 00460050 	 .word 1342195200
 3322              	 .cfi_endproc
 3323              	.LFE219:
 3325              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockSource,"ax",%progbits
 3326              	 .align 2
 3327              	 .global XMC_SCU_CLOCK_SetExternalOutputClockSource
 3328              	 .thumb
 3329              	 .thumb_func
 3331              	XMC_SCU_CLOCK_SetExternalOutputClockSource:
 3332              	.LFB220:
 922:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 923:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to select fEXT */
 924:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t source)
 925:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3333              	 .loc 3 925 0
 3334              	 .cfi_startproc
 3335              	 
 3336              	 
 3337              	 
 3338 0000 80B4     	 push {r7}
 3339              	.LCFI296:
 3340              	 .cfi_def_cfa_offset 4
 3341              	 .cfi_offset 7,-4
 3342 0002 83B0     	 sub sp,sp,#12
 3343              	.LCFI297:
 3344              	 .cfi_def_cfa_offset 16
 3345 0004 00AF     	 add r7,sp,#0
 3346              	.LCFI298:
 3347              	 .cfi_def_cfa_register 7
 3348 0006 0346     	 mov r3,r0
 3349 0008 FB71     	 strb r3,[r7,#7]
 926:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3350              	 .loc 3 926 0
 3351 000a 084B     	 ldr r3,.L227
 3352 000c 074A     	 ldr r2,.L227
 3353 000e 926A     	 ldr r2,[r2,#40]
 3354 0010 22F00301 	 bic r1,r2,#3
 927:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)source);
 3355              	 .loc 3 927 0
 3356 0014 FA79     	 ldrb r2,[r7,#7]
 926:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKSEL_Msk)) |
 3357              	 .loc 3 926 0
 3358 0016 0A43     	 orrs r2,r2,r1
 3359 0018 996A     	 ldr r1,[r3,#40]
 3360 001a 0021     	 movs r1,#0
 3361 001c 0A43     	 orrs r2,r2,r1
 3362 001e 9A62     	 str r2,[r3,#40]
 928:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3363              	 .loc 3 928 0
 3364 0020 0C37     	 adds r7,r7,#12
 3365              	.LCFI299:
 3366              	 .cfi_def_cfa_offset 4
 3367 0022 BD46     	 mov sp,r7
 3368              	.LCFI300:
 3369              	 .cfi_def_cfa_register 13
 3370              	 
 3371 0024 5DF8047B 	 ldr r7,[sp],#4
 3372              	.LCFI301:
 3373              	 .cfi_restore 7
 3374              	 .cfi_def_cfa_offset 0
 3375 0028 7047     	 bx lr
 3376              	.L228:
 3377 002a 00BF     	 .align 2
 3378              	.L227:
 3379 002c 00460050 	 .word 1342195200
 3380              	 .cfi_endproc
 3381              	.LFE220:
 3383              	 .section .text.XMC_SCU_CLOCK_SetSystemPllClockSource,"ax",%progbits
 3384              	 .align 2
 3385              	 .global XMC_SCU_CLOCK_SetSystemPllClockSource
 3386              	 .thumb
 3387              	 .thumb_func
 3389              	XMC_SCU_CLOCK_SetSystemPllClockSource:
 3390              	.LFB221:
 929:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 930:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to select fPLL */
 931:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source)
 932:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3391              	 .loc 3 932 0
 3392              	 .cfi_startproc
 3393              	 
 3394              	 
 3395              	 
 3396 0000 80B4     	 push {r7}
 3397              	.LCFI302:
 3398              	 .cfi_def_cfa_offset 4
 3399              	 .cfi_offset 7,-4
 3400 0002 83B0     	 sub sp,sp,#12
 3401              	.LCFI303:
 3402              	 .cfi_def_cfa_offset 16
 3403 0004 00AF     	 add r7,sp,#0
 3404              	.LCFI304:
 3405              	 .cfi_def_cfa_register 7
 3406 0006 0346     	 mov r3,r0
 3407 0008 FB80     	 strh r3,[r7,#6]
 933:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Check input clock */
 934:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP) /* Select PLLClockSource */
 3408              	 .loc 3 934 0
 3409 000a FB88     	 ldrh r3,[r7,#6]
 3410 000c 002B     	 cmp r3,#0
 3411 000e 0BD1     	 bne .L230
 935:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 936:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 &= (uint32_t)~(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3412              	 .loc 3 936 0
 3413 0010 0D4A     	 ldr r2,.L232
 3414 0012 0D4B     	 ldr r3,.L232
 3415 0014 DB68     	 ldr r3,[r3,#12]
 3416 0016 23F48073 	 bic r3,r3,#256
 3417 001a 23F00103 	 bic r3,r3,#1
 3418 001e D168     	 ldr r1,[r2,#12]
 3419 0020 0021     	 movs r1,#0
 3420 0022 0B43     	 orrs r3,r3,r1
 3421 0024 D360     	 str r3,[r2,#12]
 3422 0026 0AE0     	 b .L229
 3423              	.L230:
 937:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 938:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
 939:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 940:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON2 |= (uint32_t)(SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk);
 3424              	 .loc 3 940 0
 3425 0028 074A     	 ldr r2,.L232
 3426 002a 074B     	 ldr r3,.L232
 3427 002c DB68     	 ldr r3,[r3,#12]
 3428 002e 43F48073 	 orr r3,r3,#256
 3429 0032 43F00103 	 orr r3,r3,#1
 3430 0036 D168     	 ldr r1,[r2,#12]
 3431 0038 0021     	 movs r1,#0
 3432 003a 0B43     	 orrs r3,r3,r1
 3433 003c D360     	 str r3,[r2,#12]
 3434              	.L229:
 941:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 942:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3435              	 .loc 3 942 0
 3436 003e 0C37     	 adds r7,r7,#12
 3437              	.LCFI305:
 3438              	 .cfi_def_cfa_offset 4
 3439 0040 BD46     	 mov sp,r7
 3440              	.LCFI306:
 3441              	 .cfi_def_cfa_register 13
 3442              	 
 3443 0042 5DF8047B 	 ldr r7,[sp],#4
 3444              	.LCFI307:
 3445              	 .cfi_restore 7
 3446              	 .cfi_def_cfa_offset 0
 3447 0046 7047     	 bx lr
 3448              	.L233:
 3449              	 .align 2
 3450              	.L232:
 3451 0048 10470050 	 .word 1342195472
 3452              	 .cfi_endproc
 3453              	.LFE221:
 3455              	 .section .text.XMC_SCU_HIB_SetRtcClockSource,"ax",%progbits
 3456              	 .align 2
 3457              	 .global XMC_SCU_HIB_SetRtcClockSource
 3458              	 .thumb
 3459              	 .thumb_func
 3461              	XMC_SCU_HIB_SetRtcClockSource:
 3462              	.LFB222:
 943:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 944:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to select fRTC */
 945:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source)
 946:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** { 
 3463              	 .loc 3 946 0
 3464              	 .cfi_startproc
 3465              	 
 3466              	 
 3467              	 
 3468 0000 80B4     	 push {r7}
 3469              	.LCFI308:
 3470              	 .cfi_def_cfa_offset 4
 3471              	 .cfi_offset 7,-4
 3472 0002 83B0     	 sub sp,sp,#12
 3473              	.LCFI309:
 3474              	 .cfi_def_cfa_offset 16
 3475 0004 00AF     	 add r7,sp,#0
 3476              	.LCFI310:
 3477              	 .cfi_def_cfa_register 7
 3478 0006 0346     	 mov r3,r0
 3479 0008 FB71     	 strb r3,[r7,#7]
 947:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Wait until the update of HDCR register in hibernate domain is completed */
 948:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3480              	 .loc 3 948 0
 3481 000a 00BF     	 nop
 3482              	.L235:
 3483              	 .loc 3 948 0 is_stmt 0 discriminator 1
 3484 000c 0B4B     	 ldr r3,.L236
 3485 000e D3F8C430 	 ldr r3,[r3,#196]
 3486 0012 03F00803 	 and r3,r3,#8
 3487 0016 002B     	 cmp r3,#0
 3488 0018 F8D1     	 bne .L235
 949:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 950:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 951:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 952:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_RCS_Msk)) |
 3489              	 .loc 3 952 0 is_stmt 1
 3490 001a 094B     	 ldr r3,.L236+4
 3491 001c 084A     	 ldr r2,.L236+4
 3492 001e D268     	 ldr r2,[r2,#12]
 3493 0020 22F04001 	 bic r1,r2,#64
 953:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3494              	 .loc 3 953 0
 3495 0024 FA79     	 ldrb r2,[r7,#7]
 952:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3496              	 .loc 3 952 0
 3497 0026 0A43     	 orrs r2,r2,r1
 3498 0028 D968     	 ldr r1,[r3,#12]
 3499 002a 0021     	 movs r1,#0
 3500 002c 0A43     	 orrs r2,r2,r1
 3501 002e DA60     	 str r2,[r3,#12]
 954:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3502              	 .loc 3 954 0
 3503 0030 0C37     	 adds r7,r7,#12
 3504              	.LCFI311:
 3505              	 .cfi_def_cfa_offset 4
 3506 0032 BD46     	 mov sp,r7
 3507              	.LCFI312:
 3508              	 .cfi_def_cfa_register 13
 3509              	 
 3510 0034 5DF8047B 	 ldr r7,[sp],#4
 3511              	.LCFI313:
 3512              	 .cfi_restore 7
 3513              	 .cfi_def_cfa_offset 0
 3514 0038 7047     	 bx lr
 3515              	.L237:
 3516 003a 00BF     	 .align 2
 3517              	.L236:
 3518 003c 00400050 	 .word 1342193664
 3519 0040 00430050 	 .word 1342194432
 3520              	 .cfi_endproc
 3521              	.LFE222:
 3523              	 .section .text.XMC_SCU_HIB_SetStandbyClockSource,"ax",%progbits
 3524              	 .align 2
 3525              	 .global XMC_SCU_HIB_SetStandbyClockSource
 3526              	 .thumb
 3527              	 .thumb_func
 3529              	XMC_SCU_HIB_SetStandbyClockSource:
 3530              	.LFB223:
 955:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 956:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to select fSTDBY */
 957:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source)
 958:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3531              	 .loc 3 958 0
 3532              	 .cfi_startproc
 3533              	 
 3534              	 
 3535              	 
 3536 0000 80B4     	 push {r7}
 3537              	.LCFI314:
 3538              	 .cfi_def_cfa_offset 4
 3539              	 .cfi_offset 7,-4
 3540 0002 83B0     	 sub sp,sp,#12
 3541              	.LCFI315:
 3542              	 .cfi_def_cfa_offset 16
 3543 0004 00AF     	 add r7,sp,#0
 3544              	.LCFI316:
 3545              	 .cfi_def_cfa_register 7
 3546 0006 0346     	 mov r3,r0
 3547 0008 FB71     	 strb r3,[r7,#7]
 959:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 3548              	 .loc 3 959 0
 3549 000a 00BF     	 nop
 3550              	.L239:
 3551              	 .loc 3 959 0 is_stmt 0 discriminator 1
 3552 000c 0B4B     	 ldr r3,.L240
 3553 000e D3F8C430 	 ldr r3,[r3,#196]
 3554 0012 03F00803 	 and r3,r3,#8
 3555 0016 002B     	 cmp r3,#0
 3556 0018 F8D1     	 bne .L239
 960:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
 961:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 962:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
 963:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ((uint32_t)~SCU_HIBERNATE_HDCR_STDBYSEL_Msk)) |
 3557              	 .loc 3 963 0 is_stmt 1
 3558 001a 094B     	 ldr r3,.L240+4
 3559 001c 084A     	 ldr r2,.L240+4
 3560 001e D268     	 ldr r2,[r2,#12]
 3561 0020 22F08001 	 bic r1,r2,#128
 964:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3562              	 .loc 3 964 0
 3563 0024 FA79     	 ldrb r2,[r7,#7]
 963:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         ((uint32_t)source);
 3564              	 .loc 3 963 0
 3565 0026 0A43     	 orrs r2,r2,r1
 3566 0028 D968     	 ldr r1,[r3,#12]
 3567 002a 0021     	 movs r1,#0
 3568 002c 0A43     	 orrs r2,r2,r1
 3569 002e DA60     	 str r2,[r3,#12]
 965:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3570              	 .loc 3 965 0
 3571 0030 0C37     	 adds r7,r7,#12
 3572              	.LCFI317:
 3573              	 .cfi_def_cfa_offset 4
 3574 0032 BD46     	 mov sp,r7
 3575              	.LCFI318:
 3576              	 .cfi_def_cfa_register 13
 3577              	 
 3578 0034 5DF8047B 	 ldr r7,[sp],#4
 3579              	.LCFI319:
 3580              	 .cfi_restore 7
 3581              	 .cfi_def_cfa_offset 0
 3582 0038 7047     	 bx lr
 3583              	.L241:
 3584 003a 00BF     	 .align 2
 3585              	.L240:
 3586 003c 00400050 	 .word 1342193664
 3587 0040 00430050 	 .word 1342194432
 3588              	 .cfi_endproc
 3589              	.LFE223:
 3591              	 .section .text.XMC_SCU_CLOCK_SetSystemClockDivider,"ax",%progbits
 3592              	 .align 2
 3593              	 .global XMC_SCU_CLOCK_SetSystemClockDivider
 3594              	 .thumb
 3595              	 .thumb_func
 3597              	XMC_SCU_CLOCK_SetSystemClockDivider:
 3598              	.LFB224:
 966:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 967:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsys and its parent */
 968:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider)
 969:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3599              	 .loc 3 969 0
 3600              	 .cfi_startproc
 3601              	 
 3602              	 
 3603              	 
 3604 0000 80B4     	 push {r7}
 3605              	.LCFI320:
 3606              	 .cfi_def_cfa_offset 4
 3607              	 .cfi_offset 7,-4
 3608 0002 83B0     	 sub sp,sp,#12
 3609              	.LCFI321:
 3610              	 .cfi_def_cfa_offset 16
 3611 0004 00AF     	 add r7,sp,#0
 3612              	.LCFI322:
 3613              	 .cfi_def_cfa_register 7
 3614 0006 7860     	 str r0,[r7,#4]
 970:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSystemClockDivider:Wrong clock divider value",
 971:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_SYSCLKCR_SYSDIV_Msk + 1UL)) );
 972:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 973:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->SYSCLKCR = (SCU_CLK->SYSCLKCR & ((uint32_t)~SCU_CLK_SYSCLKCR_SYSDIV_Msk)) |
 3615              	 .loc 3 973 0
 3616 0008 084B     	 ldr r3,.L243
 3617 000a 084A     	 ldr r2,.L243
 3618 000c D268     	 ldr r2,[r2,#12]
 3619 000e 22F0FF01 	 bic r1,r2,#255
 974:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3620              	 .loc 3 974 0
 3621 0012 7A68     	 ldr r2,[r7,#4]
 3622 0014 013A     	 subs r2,r2,#1
 973:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       ((uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_SYSCLKCR_SYSDIV_Pos));
 3623              	 .loc 3 973 0
 3624 0016 0A43     	 orrs r2,r2,r1
 3625 0018 D968     	 ldr r1,[r3,#12]
 3626 001a 0021     	 movs r1,#0
 3627 001c 0A43     	 orrs r2,r2,r1
 3628 001e DA60     	 str r2,[r3,#12]
 975:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3629              	 .loc 3 975 0
 3630 0020 0C37     	 adds r7,r7,#12
 3631              	.LCFI323:
 3632              	 .cfi_def_cfa_offset 4
 3633 0022 BD46     	 mov sp,r7
 3634              	.LCFI324:
 3635              	 .cfi_def_cfa_register 13
 3636              	 
 3637 0024 5DF8047B 	 ldr r7,[sp],#4
 3638              	.LCFI325:
 3639              	 .cfi_restore 7
 3640              	 .cfi_def_cfa_offset 0
 3641 0028 7047     	 bx lr
 3642              	.L244:
 3643 002a 00BF     	 .align 2
 3644              	.L243:
 3645 002c 00460050 	 .word 1342195200
 3646              	 .cfi_endproc
 3647              	.LFE224:
 3649              	 .section .text.XMC_SCU_CLOCK_SetCcuClockDivider,"ax",%progbits
 3650              	 .align 2
 3651              	 .global XMC_SCU_CLOCK_SetCcuClockDivider
 3652              	 .thumb
 3653              	 .thumb_func
 3655              	XMC_SCU_CLOCK_SetCcuClockDivider:
 3656              	.LFB225:
 976:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 977:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fccu and its parent */
 978:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t divider)
 979:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3657              	 .loc 3 979 0
 3658              	 .cfi_startproc
 3659              	 
 3660              	 
 3661              	 
 3662 0000 80B4     	 push {r7}
 3663              	.LCFI326:
 3664              	 .cfi_def_cfa_offset 4
 3665              	 .cfi_offset 7,-4
 3666 0002 83B0     	 sub sp,sp,#12
 3667              	.LCFI327:
 3668              	 .cfi_def_cfa_offset 16
 3669 0004 00AF     	 add r7,sp,#0
 3670              	.LCFI328:
 3671              	 .cfi_def_cfa_register 7
 3672 0006 7860     	 str r0,[r7,#4]
 980:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCapcomClockDivider:Wrong clock divider value", (divider <= 2UL) );
 981:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 982:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CCUCLKCR = (SCU_CLK->CCUCLKCR & ((uint32_t)~SCU_CLK_CCUCLKCR_CCUDIV_Msk)) |
 3673              	 .loc 3 982 0
 3674 0008 084B     	 ldr r3,.L246
 3675 000a 084A     	 ldr r2,.L246
 3676 000c 126A     	 ldr r2,[r2,#32]
 3677 000e 22F00101 	 bic r1,r2,#1
 983:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3678              	 .loc 3 983 0
 3679 0012 7A68     	 ldr r2,[r7,#4]
 3680 0014 013A     	 subs r2,r2,#1
 982:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CCUCLKCR_CCUDIV_Pos);
 3681              	 .loc 3 982 0
 3682 0016 0A43     	 orrs r2,r2,r1
 3683 0018 196A     	 ldr r1,[r3,#32]
 3684 001a 0021     	 movs r1,#0
 3685 001c 0A43     	 orrs r2,r2,r1
 3686 001e 1A62     	 str r2,[r3,#32]
 984:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3687              	 .loc 3 984 0
 3688 0020 0C37     	 adds r7,r7,#12
 3689              	.LCFI329:
 3690              	 .cfi_def_cfa_offset 4
 3691 0022 BD46     	 mov sp,r7
 3692              	.LCFI330:
 3693              	 .cfi_def_cfa_register 13
 3694              	 
 3695 0024 5DF8047B 	 ldr r7,[sp],#4
 3696              	.LCFI331:
 3697              	 .cfi_restore 7
 3698              	 .cfi_def_cfa_offset 0
 3699 0028 7047     	 bx lr
 3700              	.L247:
 3701 002a 00BF     	 .align 2
 3702              	.L246:
 3703 002c 00460050 	 .word 1342195200
 3704              	 .cfi_endproc
 3705              	.LFE225:
 3707              	 .section .text.XMC_SCU_CLOCK_SetCpuClockDivider,"ax",%progbits
 3708              	 .align 2
 3709              	 .global XMC_SCU_CLOCK_SetCpuClockDivider
 3710              	 .thumb
 3711              	 .thumb_func
 3713              	XMC_SCU_CLOCK_SetCpuClockDivider:
 3714              	.LFB226:
 985:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 986:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fcpu and its parent */
 987:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t divider)
 988:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3715              	 .loc 3 988 0
 3716              	 .cfi_startproc
 3717              	 
 3718              	 
 3719              	 
 3720 0000 80B4     	 push {r7}
 3721              	.LCFI332:
 3722              	 .cfi_def_cfa_offset 4
 3723              	 .cfi_offset 7,-4
 3724 0002 83B0     	 sub sp,sp,#12
 3725              	.LCFI333:
 3726              	 .cfi_def_cfa_offset 16
 3727 0004 00AF     	 add r7,sp,#0
 3728              	.LCFI334:
 3729              	 .cfi_def_cfa_register 7
 3730 0006 7860     	 str r0,[r7,#4]
 989:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetCpuClockDivider:Wrong clock divider value", (divider <= 2UL) );
 990:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 991:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CPUCLKCR = (SCU_CLK->CPUCLKCR & ((uint32_t)~SCU_CLK_CPUCLKCR_CPUDIV_Msk)) |
 3731              	 .loc 3 991 0
 3732 0008 084B     	 ldr r3,.L249
 3733 000a 084A     	 ldr r2,.L249
 3734 000c 1269     	 ldr r2,[r2,#16]
 3735 000e 22F00101 	 bic r1,r2,#1
 992:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3736              	 .loc 3 992 0
 3737 0012 7A68     	 ldr r2,[r7,#4]
 3738 0014 013A     	 subs r2,r2,#1
 991:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_CPUCLKCR_CPUDIV_Pos);
 3739              	 .loc 3 991 0
 3740 0016 0A43     	 orrs r2,r2,r1
 3741 0018 1969     	 ldr r1,[r3,#16]
 3742 001a 0021     	 movs r1,#0
 3743 001c 0A43     	 orrs r2,r2,r1
 3744 001e 1A61     	 str r2,[r3,#16]
 993:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3745              	 .loc 3 993 0
 3746 0020 0C37     	 adds r7,r7,#12
 3747              	.LCFI335:
 3748              	 .cfi_def_cfa_offset 4
 3749 0022 BD46     	 mov sp,r7
 3750              	.LCFI336:
 3751              	 .cfi_def_cfa_register 13
 3752              	 
 3753 0024 5DF8047B 	 ldr r7,[sp],#4
 3754              	.LCFI337:
 3755              	 .cfi_restore 7
 3756              	 .cfi_def_cfa_offset 0
 3757 0028 7047     	 bx lr
 3758              	.L250:
 3759 002a 00BF     	 .align 2
 3760              	.L249:
 3761 002c 00460050 	 .word 1342195200
 3762              	 .cfi_endproc
 3763              	.LFE226:
 3765              	 .section .text.XMC_SCU_CLOCK_SetPeripheralClockDivider,"ax",%progbits
 3766              	 .align 2
 3767              	 .global XMC_SCU_CLOCK_SetPeripheralClockDivider
 3768              	 .thumb
 3769              	 .thumb_func
 3771              	XMC_SCU_CLOCK_SetPeripheralClockDivider:
 3772              	.LFB227:
 994:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
 995:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fperiph and its parent */
 996:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t divider)
 997:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3773              	 .loc 3 997 0
 3774              	 .cfi_startproc
 3775              	 
 3776              	 
 3777              	 
 3778 0000 80B4     	 push {r7}
 3779              	.LCFI338:
 3780              	 .cfi_def_cfa_offset 4
 3781              	 .cfi_offset 7,-4
 3782 0002 83B0     	 sub sp,sp,#12
 3783              	.LCFI339:
 3784              	 .cfi_def_cfa_offset 16
 3785 0004 00AF     	 add r7,sp,#0
 3786              	.LCFI340:
 3787              	 .cfi_def_cfa_register 7
 3788 0006 7860     	 str r0,[r7,#4]
 998:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetPeripheralClockDivider:Wrong clock divider value", (divider <= 2UL) 
 999:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1000:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->PBCLKCR = (SCU_CLK->PBCLKCR & ((uint32_t)~SCU_CLK_PBCLKCR_PBDIV_Msk)) |
 3789              	 .loc 3 1000 0
 3790 0008 084B     	 ldr r3,.L252
 3791 000a 084A     	 ldr r2,.L252
 3792 000c 5269     	 ldr r2,[r2,#20]
 3793 000e 22F00101 	 bic r1,r2,#1
1001:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3794              	 .loc 3 1001 0
 3795 0012 7A68     	 ldr r2,[r7,#4]
 3796 0014 013A     	 subs r2,r2,#1
1000:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                      ((uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_PBCLKCR_PBDIV_Pos));
 3797              	 .loc 3 1000 0
 3798 0016 0A43     	 orrs r2,r2,r1
 3799 0018 5969     	 ldr r1,[r3,#20]
 3800 001a 0021     	 movs r1,#0
 3801 001c 0A43     	 orrs r2,r2,r1
 3802 001e 5A61     	 str r2,[r3,#20]
1002:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3803              	 .loc 3 1002 0
 3804 0020 0C37     	 adds r7,r7,#12
 3805              	.LCFI341:
 3806              	 .cfi_def_cfa_offset 4
 3807 0022 BD46     	 mov sp,r7
 3808              	.LCFI342:
 3809              	 .cfi_def_cfa_register 13
 3810              	 
 3811 0024 5DF8047B 	 ldr r7,[sp],#4
 3812              	.LCFI343:
 3813              	 .cfi_restore 7
 3814              	 .cfi_def_cfa_offset 0
 3815 0028 7047     	 bx lr
 3816              	.L253:
 3817 002a 00BF     	 .align 2
 3818              	.L252:
 3819 002c 00460050 	 .word 1342195200
 3820              	 .cfi_endproc
 3821              	.LFE227:
 3823              	 .section .text.XMC_SCU_CLOCK_SetUsbClockDivider,"ax",%progbits
 3824              	 .align 2
 3825              	 .global XMC_SCU_CLOCK_SetUsbClockDivider
 3826              	 .thumb
 3827              	 .thumb_func
 3829              	XMC_SCU_CLOCK_SetUsbClockDivider:
 3830              	.LFB228:
1003:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1004:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fsdmmc and its parent */
1005:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t divider)
1006:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3831              	 .loc 3 1006 0
 3832              	 .cfi_startproc
 3833              	 
 3834              	 
 3835              	 
 3836 0000 80B4     	 push {r7}
 3837              	.LCFI344:
 3838              	 .cfi_def_cfa_offset 4
 3839              	 .cfi_offset 7,-4
 3840 0002 83B0     	 sub sp,sp,#12
 3841              	.LCFI345:
 3842              	 .cfi_def_cfa_offset 16
 3843 0004 00AF     	 add r7,sp,#0
 3844              	.LCFI346:
 3845              	 .cfi_def_cfa_register 7
 3846 0006 7860     	 str r0,[r7,#4]
1007:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetSdmmcClockDivider:Wrong clock divider value",
1008:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_USBCLKCR_USBDIV_Msk + 1UL)) );
1009:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1010:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->USBCLKCR = (SCU_CLK->USBCLKCR & ((uint32_t)~SCU_CLK_USBCLKCR_USBDIV_Msk)) |
 3847              	 .loc 3 1010 0
 3848 0008 084B     	 ldr r3,.L255
 3849 000a 084A     	 ldr r2,.L255
 3850 000c 9269     	 ldr r2,[r2,#24]
 3851 000e 22F00701 	 bic r1,r2,#7
1011:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 3852              	 .loc 3 1011 0
 3853 0012 7A68     	 ldr r2,[r7,#4]
 3854 0014 013A     	 subs r2,r2,#1
1010:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)((uint32_t)(divider - 1UL) << SCU_CLK_USBCLKCR_USBDIV_Pos); 
 3855              	 .loc 3 1010 0
 3856 0016 0A43     	 orrs r2,r2,r1
 3857 0018 9969     	 ldr r1,[r3,#24]
 3858 001a 0021     	 movs r1,#0
 3859 001c 0A43     	 orrs r2,r2,r1
 3860 001e 9A61     	 str r2,[r3,#24]
1012:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3861              	 .loc 3 1012 0
 3862 0020 0C37     	 adds r7,r7,#12
 3863              	.LCFI347:
 3864              	 .cfi_def_cfa_offset 4
 3865 0022 BD46     	 mov sp,r7
 3866              	.LCFI348:
 3867              	 .cfi_def_cfa_register 13
 3868              	 
 3869 0024 5DF8047B 	 ldr r7,[sp],#4
 3870              	.LCFI349:
 3871              	 .cfi_restore 7
 3872              	 .cfi_def_cfa_offset 0
 3873 0028 7047     	 bx lr
 3874              	.L256:
 3875 002a 00BF     	 .align 2
 3876              	.L255:
 3877 002c 00460050 	 .word 1342195200
 3878              	 .cfi_endproc
 3879              	.LFE228:
 3881              	 .section .text.XMC_SCU_CLOCK_SetEbuClockDivider,"ax",%progbits
 3882              	 .align 2
 3883              	 .global XMC_SCU_CLOCK_SetEbuClockDivider
 3884              	 .thumb
 3885              	 .thumb_func
 3887              	XMC_SCU_CLOCK_SetEbuClockDivider:
 3888              	.LFB229:
1013:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1014:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if defined(EBU)
1015:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between febu and its parent */
1016:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t divider)
1017:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3889              	 .loc 3 1017 0
 3890              	 .cfi_startproc
 3891              	 
 3892              	 
 3893              	 
 3894 0000 80B4     	 push {r7}
 3895              	.LCFI350:
 3896              	 .cfi_def_cfa_offset 4
 3897              	 .cfi_offset 7,-4
 3898 0002 83B0     	 sub sp,sp,#12
 3899              	.LCFI351:
 3900              	 .cfi_def_cfa_offset 16
 3901 0004 00AF     	 add r7,sp,#0
 3902              	.LCFI352:
 3903              	 .cfi_def_cfa_register 7
 3904 0006 7860     	 str r0,[r7,#4]
1018:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetEbuClockDivider:Wrong clock divider value",
1019:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_EBUCLKCR_EBUDIV_Msk + 1UL) ) );
1020:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1021:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EBUCLKCR = (SCU_CLK->EBUCLKCR & ((uint32_t)~SCU_CLK_EBUCLKCR_EBUDIV_Msk)) |
 3905              	 .loc 3 1021 0
 3906 0008 084B     	 ldr r3,.L258
 3907 000a 084A     	 ldr r2,.L258
 3908 000c D269     	 ldr r2,[r2,#28]
 3909 000e 22F03F01 	 bic r1,r2,#63
1022:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 3910              	 .loc 3 1022 0
 3911 0012 7A68     	 ldr r2,[r7,#4]
 3912 0014 013A     	 subs r2,r2,#1
1021:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EBUCLKCR_EBUDIV_Pos);
 3913              	 .loc 3 1021 0
 3914 0016 0A43     	 orrs r2,r2,r1
 3915 0018 D969     	 ldr r1,[r3,#28]
 3916 001a 0021     	 movs r1,#0
 3917 001c 0A43     	 orrs r2,r2,r1
 3918 001e DA61     	 str r2,[r3,#28]
1023:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3919              	 .loc 3 1023 0
 3920 0020 0C37     	 adds r7,r7,#12
 3921              	.LCFI353:
 3922              	 .cfi_def_cfa_offset 4
 3923 0022 BD46     	 mov sp,r7
 3924              	.LCFI354:
 3925              	 .cfi_def_cfa_register 13
 3926              	 
 3927 0024 5DF8047B 	 ldr r7,[sp],#4
 3928              	.LCFI355:
 3929              	 .cfi_restore 7
 3930              	 .cfi_def_cfa_offset 0
 3931 0028 7047     	 bx lr
 3932              	.L259:
 3933 002a 00BF     	 .align 2
 3934              	.L258:
 3935 002c 00460050 	 .word 1342195200
 3936              	 .cfi_endproc
 3937              	.LFE229:
 3939              	 .section .text.XMC_SCU_CLOCK_SetWdtClockDivider,"ax",%progbits
 3940              	 .align 2
 3941              	 .global XMC_SCU_CLOCK_SetWdtClockDivider
 3942              	 .thumb
 3943              	 .thumb_func
 3945              	XMC_SCU_CLOCK_SetWdtClockDivider:
 3946              	.LFB230:
1024:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1025:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1026:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fwdt and its parent */
1027:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t divider)
1028:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 3947              	 .loc 3 1028 0
 3948              	 .cfi_startproc
 3949              	 
 3950              	 
 3951              	 
 3952 0000 80B4     	 push {r7}
 3953              	.LCFI356:
 3954              	 .cfi_def_cfa_offset 4
 3955              	 .cfi_offset 7,-4
 3956 0002 83B0     	 sub sp,sp,#12
 3957              	.LCFI357:
 3958              	 .cfi_def_cfa_offset 16
 3959 0004 00AF     	 add r7,sp,#0
 3960              	.LCFI358:
 3961              	 .cfi_def_cfa_register 7
 3962 0006 7860     	 str r0,[r7,#4]
1029:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetWdtClockDivider:Wrong clock divider value",
1030:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_WDTCLKCR_WDTDIV_Msk + 1UL) ) );
1031:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1032:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->WDTCLKCR = (SCU_CLK->WDTCLKCR & ((uint32_t)~SCU_CLK_WDTCLKCR_WDTDIV_Msk)) |
 3963              	 .loc 3 1032 0
 3964 0008 084B     	 ldr r3,.L261
 3965 000a 084A     	 ldr r2,.L261
 3966 000c 526A     	 ldr r2,[r2,#36]
 3967 000e 22F0FF01 	 bic r1,r2,#255
1033:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3968              	 .loc 3 1033 0
 3969 0012 7A68     	 ldr r2,[r7,#4]
 3970 0014 013A     	 subs r2,r2,#1
1032:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_WDTCLKCR_WDTDIV_Pos);
 3971              	 .loc 3 1032 0
 3972 0016 0A43     	 orrs r2,r2,r1
 3973 0018 596A     	 ldr r1,[r3,#36]
 3974 001a 0021     	 movs r1,#0
 3975 001c 0A43     	 orrs r2,r2,r1
 3976 001e 5A62     	 str r2,[r3,#36]
1034:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 3977              	 .loc 3 1034 0
 3978 0020 0C37     	 adds r7,r7,#12
 3979              	.LCFI359:
 3980              	 .cfi_def_cfa_offset 4
 3981 0022 BD46     	 mov sp,r7
 3982              	.LCFI360:
 3983              	 .cfi_def_cfa_register 13
 3984              	 
 3985 0024 5DF8047B 	 ldr r7,[sp],#4
 3986              	.LCFI361:
 3987              	 .cfi_restore 7
 3988              	 .cfi_def_cfa_offset 0
 3989 0028 7047     	 bx lr
 3990              	.L262:
 3991 002a 00BF     	 .align 2
 3992              	.L261:
 3993 002c 00460050 	 .word 1342195200
 3994              	 .cfi_endproc
 3995              	.LFE230:
 3997              	 .section .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider,"ax",%progbits
 3998              	 .align 2
 3999              	 .global XMC_SCU_CLOCK_SetExternalOutputClockDivider
 4000              	 .thumb
 4001              	 .thumb_func
 4003              	XMC_SCU_CLOCK_SetExternalOutputClockDivider:
 4004              	.LFB231:
1035:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1036:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to program the divider placed between fext and its parent */
1037:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t divider)
1038:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4005              	 .loc 3 1038 0
 4006              	 .cfi_startproc
 4007              	 
 4008              	 
 4009              	 
 4010 0000 80B4     	 push {r7}
 4011              	.LCFI362:
 4012              	 .cfi_def_cfa_offset 4
 4013              	 .cfi_offset 7,-4
 4014 0002 83B0     	 sub sp,sp,#12
 4015              	.LCFI363:
 4016              	 .cfi_def_cfa_offset 16
 4017 0004 00AF     	 add r7,sp,#0
 4018              	.LCFI364:
 4019              	 .cfi_def_cfa_register 7
 4020 0006 7860     	 str r0,[r7,#4]
1039:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_ASSERT("XMC_SCU_CLOCK_SetExternalOutputClockDivider:Wrong clock divider value",
1040:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****               (divider <= (SCU_CLK_EXTCLKCR_ECKDIV_Msk + 1UL) ) );
1041:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1042:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->EXTCLKCR = (SCU_CLK->EXTCLKCR & ((uint32_t)~SCU_CLK_EXTCLKCR_ECKDIV_Msk)) |
 4021              	 .loc 3 1042 0
 4022 0008 094A     	 ldr r2,.L264
 4023 000a 094B     	 ldr r3,.L264
 4024 000c 9B6A     	 ldr r3,[r3,#40]
 4025 000e 23F0FF73 	 bic r3,r3,#33423360
 4026 0012 23F48033 	 bic r3,r3,#65536
1043:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 4027              	 .loc 3 1043 0
 4028 0016 7968     	 ldr r1,[r7,#4]
 4029 0018 0139     	 subs r1,r1,#1
 4030 001a 0904     	 lsls r1,r1,#16
1042:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                       (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_EXTCLKCR_ECKDIV_Pos);
 4031              	 .loc 3 1042 0
 4032 001c 0B43     	 orrs r3,r3,r1
 4033 001e 916A     	 ldr r1,[r2,#40]
 4034 0020 0021     	 movs r1,#0
 4035 0022 0B43     	 orrs r3,r3,r1
 4036 0024 9362     	 str r3,[r2,#40]
1044:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4037              	 .loc 3 1044 0
 4038 0026 0C37     	 adds r7,r7,#12
 4039              	.LCFI365:
 4040              	 .cfi_def_cfa_offset 4
 4041 0028 BD46     	 mov sp,r7
 4042              	.LCFI366:
 4043              	 .cfi_def_cfa_register 13
 4044              	 
 4045 002a 5DF8047B 	 ldr r7,[sp],#4
 4046              	.LCFI367:
 4047              	 .cfi_restore 7
 4048              	 .cfi_def_cfa_offset 0
 4049 002e 7047     	 bx lr
 4050              	.L265:
 4051              	 .align 2
 4052              	.L264:
 4053 0030 00460050 	 .word 1342195200
 4054              	 .cfi_endproc
 4055              	.LFE231:
 4057              	 .section .text.XMC_SCU_CLOCK_EnableClock,"ax",%progbits
 4058              	 .align 2
 4059              	 .global XMC_SCU_CLOCK_EnableClock
 4060              	 .thumb
 4061              	 .thumb_func
 4063              	XMC_SCU_CLOCK_EnableClock:
 4064              	.LFB232:
1045:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1046:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if defined(ECAT0)
1047:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to configure the ECAT clock by setting the clock divider for the ECAT clock source */
1048:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider)
1049:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1050:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ~SCU_CLK_ECATCLKCR_ECADIV_Msk) |
1051:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                        (uint32_t)(((uint32_t)(divider - 1UL)) << SCU_CLK_ECATCLKCR_ECADIV_Pos);
1052:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1053:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1054:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1055:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable a given module clock */
1056:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock)
1057:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4065              	 .loc 3 1057 0
 4066              	 .cfi_startproc
 4067              	 
 4068              	 
 4069              	 
 4070 0000 80B4     	 push {r7}
 4071              	.LCFI368:
 4072              	 .cfi_def_cfa_offset 4
 4073              	 .cfi_offset 7,-4
 4074 0002 83B0     	 sub sp,sp,#12
 4075              	.LCFI369:
 4076              	 .cfi_def_cfa_offset 16
 4077 0004 00AF     	 add r7,sp,#0
 4078              	.LCFI370:
 4079              	 .cfi_def_cfa_register 7
 4080 0006 0346     	 mov r3,r0
 4081 0008 FB71     	 strb r3,[r7,#7]
1058:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKSET = ((uint32_t)clock);
 4082              	 .loc 3 1058 0
 4083 000a 054B     	 ldr r3,.L267
 4084 000c FA79     	 ldrb r2,[r7,#7]
 4085 000e 5968     	 ldr r1,[r3,#4]
 4086 0010 0021     	 movs r1,#0
 4087 0012 0A43     	 orrs r2,r2,r1
 4088 0014 5A60     	 str r2,[r3,#4]
1059:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4089              	 .loc 3 1059 0
 4090 0016 0C37     	 adds r7,r7,#12
 4091              	.LCFI371:
 4092              	 .cfi_def_cfa_offset 4
 4093 0018 BD46     	 mov sp,r7
 4094              	.LCFI372:
 4095              	 .cfi_def_cfa_register 13
 4096              	 
 4097 001a 5DF8047B 	 ldr r7,[sp],#4
 4098              	.LCFI373:
 4099              	 .cfi_restore 7
 4100              	 .cfi_def_cfa_offset 0
 4101 001e 7047     	 bx lr
 4102              	.L268:
 4103              	 .align 2
 4104              	.L267:
 4105 0020 00460050 	 .word 1342195200
 4106              	 .cfi_endproc
 4107              	.LFE232:
 4109              	 .section .text.XMC_SCU_CLOCK_DisableClock,"ax",%progbits
 4110              	 .align 2
 4111              	 .global XMC_SCU_CLOCK_DisableClock
 4112              	 .thumb
 4113              	 .thumb_func
 4115              	XMC_SCU_CLOCK_DisableClock:
 4116              	.LFB233:
1060:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1061:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable a given module clock */
1062:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock)
1063:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4117              	 .loc 3 1063 0
 4118              	 .cfi_startproc
 4119              	 
 4120              	 
 4121              	 
 4122 0000 80B4     	 push {r7}
 4123              	.LCFI374:
 4124              	 .cfi_def_cfa_offset 4
 4125              	 .cfi_offset 7,-4
 4126 0002 83B0     	 sub sp,sp,#12
 4127              	.LCFI375:
 4128              	 .cfi_def_cfa_offset 16
 4129 0004 00AF     	 add r7,sp,#0
 4130              	.LCFI376:
 4131              	 .cfi_def_cfa_register 7
 4132 0006 0346     	 mov r3,r0
 4133 0008 FB71     	 strb r3,[r7,#7]
1064:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_CLK->CLKCLR = ((uint32_t)clock);
 4134              	 .loc 3 1064 0
 4135 000a 054B     	 ldr r3,.L270
 4136 000c FA79     	 ldrb r2,[r7,#7]
 4137 000e 9968     	 ldr r1,[r3,#8]
 4138 0010 0021     	 movs r1,#0
 4139 0012 0A43     	 orrs r2,r2,r1
 4140 0014 9A60     	 str r2,[r3,#8]
1065:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4141              	 .loc 3 1065 0
 4142 0016 0C37     	 adds r7,r7,#12
 4143              	.LCFI377:
 4144              	 .cfi_def_cfa_offset 4
 4145 0018 BD46     	 mov sp,r7
 4146              	.LCFI378:
 4147              	 .cfi_def_cfa_register 13
 4148              	 
 4149 001a 5DF8047B 	 ldr r7,[sp],#4
 4150              	.LCFI379:
 4151              	 .cfi_restore 7
 4152              	 .cfi_def_cfa_offset 0
 4153 001e 7047     	 bx lr
 4154              	.L271:
 4155              	 .align 2
 4156              	.L270:
 4157 0020 00460050 	 .word 1342195200
 4158              	 .cfi_endproc
 4159              	.LFE233:
 4161              	 .section .text.XMC_SCU_CLOCK_IsClockEnabled,"ax",%progbits
 4162              	 .align 2
 4163              	 .global XMC_SCU_CLOCK_IsClockEnabled
 4164              	 .thumb
 4165              	 .thumb_func
 4167              	XMC_SCU_CLOCK_IsClockEnabled:
 4168              	.LFB234:
1066:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1067:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to determine if module clock of the given peripheral is enabled */
1068:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock)
1069:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4169              	 .loc 3 1069 0
 4170              	 .cfi_startproc
 4171              	 
 4172              	 
 4173              	 
 4174 0000 80B4     	 push {r7}
 4175              	.LCFI380:
 4176              	 .cfi_def_cfa_offset 4
 4177              	 .cfi_offset 7,-4
 4178 0002 83B0     	 sub sp,sp,#12
 4179              	.LCFI381:
 4180              	 .cfi_def_cfa_offset 16
 4181 0004 00AF     	 add r7,sp,#0
 4182              	.LCFI382:
 4183              	 .cfi_def_cfa_register 7
 4184 0006 0346     	 mov r3,r0
 4185 0008 FB71     	 strb r3,[r7,#7]
1070:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (bool)(SCU_CLK->CLKSTAT & ((uint32_t)clock));
 4186              	 .loc 3 1070 0
 4187 000a 074B     	 ldr r3,.L274
 4188 000c 1A68     	 ldr r2,[r3]
 4189 000e FB79     	 ldrb r3,[r7,#7]
 4190 0010 1340     	 ands r3,r3,r2
 4191 0012 002B     	 cmp r3,#0
 4192 0014 14BF     	 ite ne
 4193 0016 0123     	 movne r3,#1
 4194 0018 0023     	 moveq r3,#0
 4195 001a DBB2     	 uxtb r3,r3
1071:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4196              	 .loc 3 1071 0
 4197 001c 1846     	 mov r0,r3
 4198 001e 0C37     	 adds r7,r7,#12
 4199              	.LCFI383:
 4200              	 .cfi_def_cfa_offset 4
 4201 0020 BD46     	 mov sp,r7
 4202              	.LCFI384:
 4203              	 .cfi_def_cfa_register 13
 4204              	 
 4205 0022 5DF8047B 	 ldr r7,[sp],#4
 4206              	.LCFI385:
 4207              	 .cfi_restore 7
 4208              	 .cfi_def_cfa_offset 0
 4209 0026 7047     	 bx lr
 4210              	.L275:
 4211              	 .align 2
 4212              	.L274:
 4213 0028 00460050 	 .word 1342195200
 4214              	 .cfi_endproc
 4215              	.LFE234:
 4217              	 .section .text.XMC_SCU_CLOCK_GatePeripheralClock,"ax",%progbits
 4218              	 .align 2
 4219              	 .global XMC_SCU_CLOCK_GatePeripheralClock
 4220              	 .thumb
 4221              	 .thumb_func
 4223              	XMC_SCU_CLOCK_GatePeripheralClock:
 4224              	.LFB235:
1072:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1073:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if defined(CLOCK_GATING_SUPPORTED)
1074:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to gate a given module clock */
1075:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1076:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4225              	 .loc 3 1076 0
 4226              	 .cfi_startproc
 4227              	 
 4228              	 
 4229              	 
 4230 0000 80B4     	 push {r7}
 4231              	.LCFI386:
 4232              	 .cfi_def_cfa_offset 4
 4233              	 .cfi_offset 7,-4
 4234 0002 85B0     	 sub sp,sp,#20
 4235              	.LCFI387:
 4236              	 .cfi_def_cfa_offset 24
 4237 0004 00AF     	 add r7,sp,#0
 4238              	.LCFI388:
 4239              	 .cfi_def_cfa_register 7
 4240 0006 7860     	 str r0,[r7,#4]
1077:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t index = (peripheral & 0xf0000000UL) >> 28UL;
 4241              	 .loc 3 1077 0
 4242 0008 7B68     	 ldr r3,[r7,#4]
 4243 000a 1B0F     	 lsrs r3,r3,#28
 4244 000c FB60     	 str r3,[r7,#12]
1078:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4245              	 .loc 3 1078 0
 4246 000e 7B68     	 ldr r3,[r7,#4]
 4247 0010 23F07043 	 bic r3,r3,#-268435456
 4248 0014 BB60     	 str r3,[r7,#8]
1079:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1080:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)((&(SCU_CLK->CGATSET0)) + (index * 3U)) = (uint32_t)mask;
 4249              	 .loc 3 1080 0
 4250 0016 FA68     	 ldr r2,[r7,#12]
 4251 0018 1346     	 mov r3,r2
 4252 001a 5B00     	 lsls r3,r3,#1
 4253 001c 1344     	 add r3,r3,r2
 4254 001e 9B00     	 lsls r3,r3,#2
 4255 0020 1A46     	 mov r2,r3
 4256 0022 044B     	 ldr r3,.L277
 4257 0024 1344     	 add r3,r3,r2
 4258 0026 BA68     	 ldr r2,[r7,#8]
 4259 0028 1A60     	 str r2,[r3]
1081:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4260              	 .loc 3 1081 0
 4261 002a 1437     	 adds r7,r7,#20
 4262              	.LCFI389:
 4263              	 .cfi_def_cfa_offset 4
 4264 002c BD46     	 mov sp,r7
 4265              	.LCFI390:
 4266              	 .cfi_def_cfa_register 13
 4267              	 
 4268 002e 5DF8047B 	 ldr r7,[sp],#4
 4269              	.LCFI391:
 4270              	 .cfi_restore 7
 4271              	 .cfi_def_cfa_offset 0
 4272 0032 7047     	 bx lr
 4273              	.L278:
 4274              	 .align 2
 4275              	.L277:
 4276 0034 44460050 	 .word 1342195268
 4277              	 .cfi_endproc
 4278              	.LFE235:
 4280              	 .section .text.XMC_SCU_CLOCK_UngatePeripheralClock,"ax",%progbits
 4281              	 .align 2
 4282              	 .global XMC_SCU_CLOCK_UngatePeripheralClock
 4283              	 .thumb
 4284              	 .thumb_func
 4286              	XMC_SCU_CLOCK_UngatePeripheralClock:
 4287              	.LFB236:
1082:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1083:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1084:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1085:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4288              	 .loc 3 1085 0
 4289              	 .cfi_startproc
 4290              	 
 4291              	 
 4292              	 
 4293 0000 80B4     	 push {r7}
 4294              	.LCFI392:
 4295              	 .cfi_def_cfa_offset 4
 4296              	 .cfi_offset 7,-4
 4297 0002 85B0     	 sub sp,sp,#20
 4298              	.LCFI393:
 4299              	 .cfi_def_cfa_offset 24
 4300 0004 00AF     	 add r7,sp,#0
 4301              	.LCFI394:
 4302              	 .cfi_def_cfa_register 7
 4303 0006 7860     	 str r0,[r7,#4]
1086:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t index = (uint32_t)((peripheral & 0xf0000000UL) >> 28UL);
 4304              	 .loc 3 1086 0
 4305 0008 7B68     	 ldr r3,[r7,#4]
 4306 000a 1B0F     	 lsrs r3,r3,#28
 4307 000c FB60     	 str r3,[r7,#12]
1087:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4308              	 .loc 3 1087 0
 4309 000e 7B68     	 ldr r3,[r7,#4]
 4310 0010 23F07043 	 bic r3,r3,#-268435456
 4311 0014 BB60     	 str r3,[r7,#8]
1088:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1089:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   *(uint32_t *)(&(SCU_CLK->CGATCLR0) + (index * 3U)) = (uint32_t)mask;
 4312              	 .loc 3 1089 0
 4313 0016 FA68     	 ldr r2,[r7,#12]
 4314 0018 1346     	 mov r3,r2
 4315 001a 5B00     	 lsls r3,r3,#1
 4316 001c 1344     	 add r3,r3,r2
 4317 001e 9B00     	 lsls r3,r3,#2
 4318 0020 1A46     	 mov r2,r3
 4319 0022 044B     	 ldr r3,.L280
 4320 0024 1344     	 add r3,r3,r2
 4321 0026 BA68     	 ldr r2,[r7,#8]
 4322 0028 1A60     	 str r2,[r3]
1090:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4323              	 .loc 3 1090 0
 4324 002a 1437     	 adds r7,r7,#20
 4325              	.LCFI395:
 4326              	 .cfi_def_cfa_offset 4
 4327 002c BD46     	 mov sp,r7
 4328              	.LCFI396:
 4329              	 .cfi_def_cfa_register 13
 4330              	 
 4331 002e 5DF8047B 	 ldr r7,[sp],#4
 4332              	.LCFI397:
 4333              	 .cfi_restore 7
 4334              	 .cfi_def_cfa_offset 0
 4335 0032 7047     	 bx lr
 4336              	.L281:
 4337              	 .align 2
 4338              	.L280:
 4339 0034 48460050 	 .word 1342195272
 4340              	 .cfi_endproc
 4341              	.LFE236:
 4343              	 .section .text.XMC_SCU_CLOCK_IsPeripheralClockGated,"ax",%progbits
 4344              	 .align 2
 4345              	 .global XMC_SCU_CLOCK_IsPeripheralClockGated
 4346              	 .thumb
 4347              	 .thumb_func
 4349              	XMC_SCU_CLOCK_IsPeripheralClockGated:
 4350              	.LFB237:
1091:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1092:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to ungate a given module clock */
1093:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral)
1094:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4351              	 .loc 3 1094 0
 4352              	 .cfi_startproc
 4353              	 
 4354              	 
 4355              	 
 4356 0000 80B4     	 push {r7}
 4357              	.LCFI398:
 4358              	 .cfi_def_cfa_offset 4
 4359              	 .cfi_offset 7,-4
 4360 0002 85B0     	 sub sp,sp,#20
 4361              	.LCFI399:
 4362              	 .cfi_def_cfa_offset 24
 4363 0004 00AF     	 add r7,sp,#0
 4364              	.LCFI400:
 4365              	 .cfi_def_cfa_register 7
 4366 0006 7860     	 str r0,[r7,#4]
1095:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t index = ((peripheral & 0xf0000000UL) >> 28UL);
 4367              	 .loc 3 1095 0
 4368 0008 7B68     	 ldr r3,[r7,#4]
 4369 000a 1B0F     	 lsrs r3,r3,#28
 4370 000c FB60     	 str r3,[r7,#12]
1096:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t mask = (peripheral & (uint32_t)~0xf0000000UL);
 4371              	 .loc 3 1096 0
 4372 000e 7B68     	 ldr r3,[r7,#4]
 4373 0010 23F07043 	 bic r3,r3,#-268435456
 4374 0014 BB60     	 str r3,[r7,#8]
1097:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1098:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((*(uint32_t *)(&(SCU_CLK->CGATSTAT0) + (index * 3U)) & mask) != 0U);
 4375              	 .loc 3 1098 0
 4376 0016 FA68     	 ldr r2,[r7,#12]
 4377 0018 1346     	 mov r3,r2
 4378 001a 5B00     	 lsls r3,r3,#1
 4379 001c 1344     	 add r3,r3,r2
 4380 001e 9B00     	 lsls r3,r3,#2
 4381 0020 1A46     	 mov r2,r3
 4382 0022 084B     	 ldr r3,.L284
 4383 0024 1344     	 add r3,r3,r2
 4384 0026 1A68     	 ldr r2,[r3]
 4385 0028 BB68     	 ldr r3,[r7,#8]
 4386 002a 1340     	 ands r3,r3,r2
 4387 002c 002B     	 cmp r3,#0
 4388 002e 14BF     	 ite ne
 4389 0030 0123     	 movne r3,#1
 4390 0032 0023     	 moveq r3,#0
 4391 0034 DBB2     	 uxtb r3,r3
1099:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4392              	 .loc 3 1099 0
 4393 0036 1846     	 mov r0,r3
 4394 0038 1437     	 adds r7,r7,#20
 4395              	.LCFI401:
 4396              	 .cfi_def_cfa_offset 4
 4397 003a BD46     	 mov sp,r7
 4398              	.LCFI402:
 4399              	 .cfi_def_cfa_register 13
 4400              	 
 4401 003c 5DF8047B 	 ldr r7,[sp],#4
 4402              	.LCFI403:
 4403              	 .cfi_restore 7
 4404              	 .cfi_def_cfa_offset 0
 4405 0040 7047     	 bx lr
 4406              	.L285:
 4407 0042 00BF     	 .align 2
 4408              	.L284:
 4409 0044 40460050 	 .word 1342195264
 4410              	 .cfi_endproc
 4411              	.LFE237:
 4413              	 .section .text.XMC_SCU_POWER_GetEVR13Voltage,"ax",%progbits
 4414              	 .align 2
 4415              	 .global XMC_SCU_POWER_GetEVR13Voltage
 4416              	 .thumb
 4417              	 .thumb_func
 4419              	XMC_SCU_POWER_GetEVR13Voltage:
 4420              	.LFB238:
1100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR13Voltage(void)
1103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4421              	 .loc 3 1103 0
 4422              	 .cfi_startproc
 4423              	 
 4424              	 
 4425              	 
 4426 0000 80B4     	 push {r7}
 4427              	.LCFI404:
 4428              	 .cfi_def_cfa_offset 4
 4429              	 .cfi_offset 7,-4
 4430 0002 00AF     	 add r7,sp,#0
 4431              	.LCFI405:
 4432              	 .cfi_def_cfa_register 7
1104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC13V_Msk) * XMC_SCU_POWER_LSB13V;
 4433              	 .loc 3 1104 0
 4434 0004 084B     	 ldr r3,.L288
 4435 0006 5B69     	 ldr r3,[r3,#20]
 4436 0008 DBB2     	 uxtb r3,r3
 4437 000a 07EE903A 	 fmsr s15,r3
 4438 000e F8EE677A 	 fuitos s15,s15
 4439 0012 9FED067A 	 flds s14,.L288+4
 4440 0016 67EE877A 	 fmuls s15,s15,s14
 4441 001a 17EE903A 	 fmrs r3,s15
1105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4442              	 .loc 3 1105 0
 4443 001e 1846     	 mov r0,r3
 4444 0020 BD46     	 mov sp,r7
 4445              	.LCFI406:
 4446              	 .cfi_def_cfa_register 13
 4447              	 
 4448 0022 5DF8047B 	 ldr r7,[sp],#4
 4449              	.LCFI407:
 4450              	 .cfi_restore 7
 4451              	 .cfi_def_cfa_offset 0
 4452 0026 7047     	 bx lr
 4453              	.L289:
 4454              	 .align 2
 4455              	.L288:
 4456 0028 00420050 	 .word 1342194176
 4457 002c ED0DBE3B 	 .word 1002311149
 4458              	 .cfi_endproc
 4459              	.LFE238:
 4461              	 .section .text.XMC_SCU_POWER_GetEVR33Voltage,"ax",%progbits
 4462              	 .align 2
 4463              	 .global XMC_SCU_POWER_GetEVR33Voltage
 4464              	 .thumb
 4465              	 .thumb_func
 4467              	XMC_SCU_POWER_GetEVR33Voltage:
 4468              	.LFB239:
1106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** float XMC_SCU_POWER_GetEVR33Voltage(void)
1108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4469              	 .loc 3 1108 0
 4470              	 .cfi_startproc
 4471              	 
 4472              	 
 4473              	 
 4474 0000 80B4     	 push {r7}
 4475              	.LCFI408:
 4476              	 .cfi_def_cfa_offset 4
 4477              	 .cfi_offset 7,-4
 4478 0002 00AF     	 add r7,sp,#0
 4479              	.LCFI409:
 4480              	 .cfi_def_cfa_register 7
1109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((SCU_POWER->EVRVADCSTAT & SCU_POWER_EVRVADCSTAT_VADC33V_Msk) >> SCU_POWER_EVRVADCSTAT_VAD
 4481              	 .loc 3 1109 0
 4482 0004 094B     	 ldr r3,.L292
 4483 0006 5B69     	 ldr r3,[r3,#20]
 4484 0008 03F47F43 	 and r3,r3,#65280
 4485 000c 1B0A     	 lsrs r3,r3,#8
 4486 000e 07EE903A 	 fmsr s15,r3
 4487 0012 F8EE677A 	 fuitos s15,s15
 4488 0016 9FED067A 	 flds s14,.L292+4
 4489 001a 67EE877A 	 fmuls s15,s15,s14
 4490 001e 17EE903A 	 fmrs r3,s15
1110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4491              	 .loc 3 1110 0
 4492 0022 1846     	 mov r0,r3
 4493 0024 BD46     	 mov sp,r7
 4494              	.LCFI410:
 4495              	 .cfi_def_cfa_register 13
 4496              	 
 4497 0026 5DF8047B 	 ldr r7,[sp],#4
 4498              	.LCFI411:
 4499              	 .cfi_restore 7
 4500              	 .cfi_def_cfa_offset 0
 4501 002a 7047     	 bx lr
 4502              	.L293:
 4503              	 .align 2
 4504              	.L292:
 4505 002c 00420050 	 .word 1342194176
 4506 0030 EC51B83C 	 .word 1018712556
 4507              	 .cfi_endproc
 4508              	.LFE239:
 4510              	 .section .text.XMC_SCU_CLOCK_EnableUsbPll,"ax",%progbits
 4511              	 .align 2
 4512              	 .global XMC_SCU_CLOCK_EnableUsbPll
 4513              	 .thumb
 4514              	 .thumb_func
 4516              	XMC_SCU_CLOCK_EnableUsbPll:
 4517              	.LFB240:
1111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable USB PLL for USB clock */
1113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableUsbPll(void)
1114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4518              	 .loc 3 1114 0
 4519              	 .cfi_startproc
 4520              	 
 4521              	 
 4522              	 
 4523 0000 80B4     	 push {r7}
 4524              	.LCFI412:
 4525              	 .cfi_def_cfa_offset 4
 4526              	 .cfi_offset 7,-4
 4527 0002 00AF     	 add r7,sp,#0
 4528              	.LCFI413:
 4529              	 .cfi_def_cfa_register 7
1115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4530              	 .loc 3 1115 0
 4531 0004 074A     	 ldr r2,.L295
 4532 0006 074B     	 ldr r3,.L295
 4533 0008 5B69     	 ldr r3,[r3,#20]
 4534 000a 23F48033 	 bic r3,r3,#65536
 4535 000e 23F00203 	 bic r3,r3,#2
 4536 0012 5169     	 ldr r1,[r2,#20]
 4537 0014 0021     	 movs r1,#0
 4538 0016 0B43     	 orrs r3,r3,r1
 4539 0018 5361     	 str r3,[r2,#20]
1116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4540              	 .loc 3 1116 0
 4541 001a BD46     	 mov sp,r7
 4542              	.LCFI414:
 4543              	 .cfi_def_cfa_register 13
 4544              	 
 4545 001c 5DF8047B 	 ldr r7,[sp],#4
 4546              	.LCFI415:
 4547              	 .cfi_restore 7
 4548              	 .cfi_def_cfa_offset 0
 4549 0020 7047     	 bx lr
 4550              	.L296:
 4551 0022 00BF     	 .align 2
 4552              	.L295:
 4553 0024 10470050 	 .word 1342195472
 4554              	 .cfi_endproc
 4555              	.LFE240:
 4557              	 .section .text.XMC_SCU_CLOCK_DisableUsbPll,"ax",%progbits
 4558              	 .align 2
 4559              	 .global XMC_SCU_CLOCK_DisableUsbPll
 4560              	 .thumb
 4561              	 .thumb_func
 4563              	XMC_SCU_CLOCK_DisableUsbPll:
 4564              	.LFB241:
1117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL for USB clock */
1119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableUsbPll(void)
1120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4565              	 .loc 3 1120 0
 4566              	 .cfi_startproc
 4567              	 
 4568              	 
 4569              	 
 4570 0000 80B4     	 push {r7}
 4571              	.LCFI416:
 4572              	 .cfi_def_cfa_offset 4
 4573              	 .cfi_offset 7,-4
 4574 0002 00AF     	 add r7,sp,#0
 4575              	.LCFI417:
 4576              	 .cfi_def_cfa_register 7
1121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 4577              	 .loc 3 1121 0
 4578 0004 074A     	 ldr r2,.L298
 4579 0006 074B     	 ldr r3,.L298
 4580 0008 5B69     	 ldr r3,[r3,#20]
 4581 000a 43F48033 	 orr r3,r3,#65536
 4582 000e 43F00203 	 orr r3,r3,#2
 4583 0012 5169     	 ldr r1,[r2,#20]
 4584 0014 0021     	 movs r1,#0
 4585 0016 0B43     	 orrs r3,r3,r1
 4586 0018 5361     	 str r3,[r2,#20]
1122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4587              	 .loc 3 1122 0
 4588 001a BD46     	 mov sp,r7
 4589              	.LCFI418:
 4590              	 .cfi_def_cfa_register 13
 4591              	 
 4592 001c 5DF8047B 	 ldr r7,[sp],#4
 4593              	.LCFI419:
 4594              	 .cfi_restore 7
 4595              	 .cfi_def_cfa_offset 0
 4596 0020 7047     	 bx lr
 4597              	.L299:
 4598 0022 00BF     	 .align 2
 4599              	.L298:
 4600 0024 10470050 	 .word 1342195472
 4601              	 .cfi_endproc
 4602              	.LFE241:
 4604              	 .section .text.XMC_SCU_CLOCK_StartUsbPll,"ax",%progbits
 4605              	 .align 2
 4606              	 .global XMC_SCU_CLOCK_StartUsbPll
 4607              	 .thumb
 4608              	 .thumb_func
 4610              	XMC_SCU_CLOCK_StartUsbPll:
 4611              	.LFB242:
1123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to configure USB PLL */
1125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartUsbPll(uint32_t pdiv, uint32_t ndiv)
1126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4612              	 .loc 3 1126 0
 4613              	 .cfi_startproc
 4614              	 
 4615              	 
 4616              	 
 4617 0000 80B4     	 push {r7}
 4618              	.LCFI420:
 4619              	 .cfi_def_cfa_offset 4
 4620              	 .cfi_offset 7,-4
 4621 0002 83B0     	 sub sp,sp,#12
 4622              	.LCFI421:
 4623              	 .cfi_def_cfa_offset 16
 4624 0004 00AF     	 add r7,sp,#0
 4625              	.LCFI422:
 4626              	 .cfi_def_cfa_register 7
 4627 0006 7860     	 str r0,[r7,#4]
 4628 0008 3960     	 str r1,[r7]
1127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Go to bypass the USB PLL */
1128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_VCOBYP_Msk;
 4629              	 .loc 3 1128 0
 4630 000a 224B     	 ldr r3,.L302
 4631 000c 214A     	 ldr r2,.L302
 4632 000e 5269     	 ldr r2,[r2,#20]
 4633 0010 42F00102 	 orr r2,r2,#1
 4634 0014 5969     	 ldr r1,[r3,#20]
 4635 0016 0021     	 movs r1,#0
 4636 0018 0A43     	 orrs r2,r2,r1
 4637 001a 5A61     	 str r2,[r3,#20]
1129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* disconnect Oscillator from USB PLL */
1131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_FINDIS_Msk;
 4638              	 .loc 3 1131 0
 4639 001c 1D4B     	 ldr r3,.L302
 4640 001e 1D4A     	 ldr r2,.L302
 4641 0020 5269     	 ldr r2,[r2,#20]
 4642 0022 42F01002 	 orr r2,r2,#16
 4643 0026 5969     	 ldr r1,[r3,#20]
 4644 0028 0021     	 movs r1,#0
 4645 002a 0A43     	 orrs r2,r2,r1
 4646 002c 5A61     	 str r2,[r3,#20]
1132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Setup Divider settings for USB PLL */
1134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)((uint32_t)((ndiv -1U) << SCU_PLL_USBPLLCON_NDIV_Pos) |
 4647              	 .loc 3 1134 0
 4648 002e 194B     	 ldr r3,.L302
 4649 0030 3A68     	 ldr r2,[r7]
 4650 0032 013A     	 subs r2,r2,#1
 4651 0034 1102     	 lsls r1,r2,#8
1135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4652              	 .loc 3 1135 0
 4653 0036 7A68     	 ldr r2,[r7,#4]
 4654 0038 013A     	 subs r2,r2,#1
 4655 003a 1206     	 lsls r2,r2,#24
1134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                        (uint32_t)((pdiv - 1U) << SCU_PLL_USBPLLCON_PDIV_Pos));
 4656              	 .loc 3 1134 0
 4657 003c 0A43     	 orrs r2,r2,r1
 4658 003e 5969     	 ldr r1,[r3,#20]
 4659 0040 0021     	 movs r1,#0
 4660 0042 0A43     	 orrs r2,r2,r1
 4661 0044 5A61     	 str r2,[r3,#20]
1136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Set OSCDISCDIS */
1138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 4662              	 .loc 3 1138 0
 4663 0046 134B     	 ldr r3,.L302
 4664 0048 124A     	 ldr r2,.L302
 4665 004a 5269     	 ldr r2,[r2,#20]
 4666 004c 42F04002 	 orr r2,r2,#64
 4667 0050 5969     	 ldr r1,[r3,#20]
 4668 0052 0021     	 movs r1,#0
 4669 0054 0A43     	 orrs r2,r2,r1
 4670 0056 5A61     	 str r2,[r3,#20]
1139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* connect Oscillator to USB PLL */
1141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON &= (uint32_t)~SCU_PLL_USBPLLCON_FINDIS_Msk;
 4671              	 .loc 3 1141 0
 4672 0058 0E4B     	 ldr r3,.L302
 4673 005a 0E4A     	 ldr r2,.L302
 4674 005c 5269     	 ldr r2,[r2,#20]
 4675 005e 22F01002 	 bic r2,r2,#16
 4676 0062 5969     	 ldr r1,[r3,#20]
 4677 0064 0021     	 movs r1,#0
 4678 0066 0A43     	 orrs r2,r2,r1
 4679 0068 5A61     	 str r2,[r3,#20]
1142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* restart PLL Lock detection */
1144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON |= (uint32_t)SCU_PLL_USBPLLCON_RESLD_Msk;
 4680              	 .loc 3 1144 0
 4681 006a 0A4B     	 ldr r3,.L302
 4682 006c 094A     	 ldr r2,.L302
 4683 006e 5269     	 ldr r2,[r2,#20]
 4684 0070 42F48022 	 orr r2,r2,#262144
 4685 0074 5969     	 ldr r1,[r3,#20]
 4686 0076 0021     	 movs r1,#0
 4687 0078 0A43     	 orrs r2,r2,r1
 4688 007a 5A61     	 str r2,[r3,#20]
1145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 4689              	 .loc 3 1146 0
 4690 007c 00BF     	 nop
 4691              	.L301:
 4692              	 .loc 3 1146 0 is_stmt 0 discriminator 1
 4693 007e 054B     	 ldr r3,.L302
 4694 0080 1B69     	 ldr r3,[r3,#16]
 4695 0082 03F00403 	 and r3,r3,#4
 4696 0086 002B     	 cmp r3,#0
 4697 0088 F9D0     	 beq .L301
1147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* wait for PLL Lock */
1149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4698              	 .loc 3 1151 0 is_stmt 1
 4699 008a 0C37     	 adds r7,r7,#12
 4700              	.LCFI423:
 4701              	 .cfi_def_cfa_offset 4
 4702 008c BD46     	 mov sp,r7
 4703              	.LCFI424:
 4704              	 .cfi_def_cfa_register 13
 4705              	 
 4706 008e 5DF8047B 	 ldr r7,[sp],#4
 4707              	.LCFI425:
 4708              	 .cfi_restore 7
 4709              	 .cfi_def_cfa_offset 0
 4710 0092 7047     	 bx lr
 4711              	.L303:
 4712              	 .align 2
 4713              	.L302:
 4714 0094 10470050 	 .word 1342195472
 4715              	 .cfi_endproc
 4716              	.LFE242:
 4718              	 .section .text.XMC_SCU_CLOCK_StopUsbPll,"ax",%progbits
 4719              	 .align 2
 4720              	 .global XMC_SCU_CLOCK_StopUsbPll
 4721              	 .thumb
 4722              	 .thumb_func
 4724              	XMC_SCU_CLOCK_StopUsbPll:
 4725              	.LFB243:
1152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable USB PLL operation */
1154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopUsbPll(void)
1155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4726              	 .loc 3 1155 0
 4727              	 .cfi_startproc
 4728              	 
 4729              	 
 4730              	 
 4731 0000 80B4     	 push {r7}
 4732              	.LCFI426:
 4733              	 .cfi_def_cfa_offset 4
 4734              	 .cfi_offset 7,-4
 4735 0002 00AF     	 add r7,sp,#0
 4736              	.LCFI427:
 4737              	 .cfi_def_cfa_register 7
1156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->USBPLLCON = (uint32_t)(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk |
 4738              	 .loc 3 1156 0
 4739 0004 054A     	 ldr r2,.L305
 4740 0006 5369     	 ldr r3,[r2,#20]
 4741 0008 0023     	 movs r3,#0
 4742 000a 43F48033 	 orr r3,r3,#65536
 4743 000e 43F00303 	 orr r3,r3,#3
 4744 0012 5361     	 str r3,[r2,#20]
1157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                   SCU_PLL_USBPLLCON_VCOBYP_Msk);
1158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4745              	 .loc 3 1158 0
 4746 0014 BD46     	 mov sp,r7
 4747              	.LCFI428:
 4748              	 .cfi_def_cfa_register 13
 4749              	 
 4750 0016 5DF8047B 	 ldr r7,[sp],#4
 4751              	.LCFI429:
 4752              	 .cfi_restore 7
 4753              	 .cfi_def_cfa_offset 0
 4754 001a 7047     	 bx lr
 4755              	.L306:
 4756              	 .align 2
 4757              	.L305:
 4758 001c 10470050 	 .word 1342195472
 4759              	 .cfi_endproc
 4760              	.LFE243:
 4762              	 .section .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode,"ax",%progbits
 4763              	 .align 2
 4764              	 .global XMC_SCU_CLOCK_SetBackupClockCalibrationMode
 4765              	 .thumb
 4766              	 .thumb_func
 4768              	XMC_SCU_CLOCK_SetBackupClockCalibrationMode:
 4769              	.LFB244:
1159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to onfigure the calibration mode for internal oscillator */
1161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_SetBackupClockCalibrationMode(XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t mode)
1162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4770              	 .loc 3 1162 0
 4771              	 .cfi_startproc
 4772              	 
 4773              	 
 4774 0000 80B5     	 push {r7,lr}
 4775              	.LCFI430:
 4776              	 .cfi_def_cfa_offset 8
 4777              	 .cfi_offset 7,-8
 4778              	 .cfi_offset 14,-4
 4779 0002 82B0     	 sub sp,sp,#8
 4780              	.LCFI431:
 4781              	 .cfi_def_cfa_offset 16
 4782 0004 00AF     	 add r7,sp,#0
 4783              	.LCFI432:
 4784              	 .cfi_def_cfa_register 7
 4785 0006 0346     	 mov r3,r0
 4786 0008 FB71     	 strb r3,[r7,#7]
1163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Enable factory calibration based trimming */
1164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FOTR_Msk;
 4787              	 .loc 3 1164 0
 4788 000a 134B     	 ldr r3,.L309
 4789 000c 124A     	 ldr r2,.L309
 4790 000e 5268     	 ldr r2,[r2,#4]
 4791 0010 42F48012 	 orr r2,r2,#1048576
 4792 0014 5968     	 ldr r1,[r3,#4]
 4793 0016 0021     	 movs r1,#0
 4794 0018 0A43     	 orrs r2,r2,r1
 4795 001a 5A60     	 str r2,[r3,#4]
1165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC)
 4796              	 .loc 3 1166 0
 4797 001c FB79     	 ldrb r3,[r7,#7]
 4798 001e 012B     	 cmp r3,#1
 4799 0020 14D1     	 bne .L308
1167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Disable factory calibration based trimming */
1169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FOTR_Msk;
 4800              	 .loc 3 1169 0
 4801 0022 0D4B     	 ldr r3,.L309
 4802 0024 0C4A     	 ldr r2,.L309
 4803 0026 5268     	 ldr r2,[r2,#4]
 4804 0028 22F48012 	 bic r2,r2,#1048576
 4805 002c 5968     	 ldr r1,[r3,#4]
 4806 002e 0021     	 movs r1,#0
 4807 0030 0A43     	 orrs r2,r2,r1
 4808 0032 5A60     	 str r2,[r3,#4]
1170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_lDelay(100UL);
 4809              	 .loc 3 1170 0
 4810 0034 6420     	 movs r0,#100
 4811 0036 FFF7FEFF 	 bl XMC_SCU_lDelay
1171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Enable automatic calibration */
1173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_AOTREN_Msk;
 4812              	 .loc 3 1173 0
 4813 003a 074B     	 ldr r3,.L309
 4814 003c 064A     	 ldr r2,.L309
 4815 003e 5268     	 ldr r2,[r2,#4]
 4816 0040 42F40022 	 orr r2,r2,#524288
 4817 0044 5968     	 ldr r1,[r3,#4]
 4818 0046 0021     	 movs r1,#0
 4819 0048 0A43     	 orrs r2,r2,r1
 4820 004a 5A60     	 str r2,[r3,#4]
 4821              	.L308:
1174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(100UL);
 4822              	 .loc 3 1176 0
 4823 004c 6420     	 movs r0,#100
 4824 004e FFF7FEFF 	 bl XMC_SCU_lDelay
1177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4825              	 .loc 3 1177 0
 4826 0052 0837     	 adds r7,r7,#8
 4827              	.LCFI433:
 4828              	 .cfi_def_cfa_offset 8
 4829 0054 BD46     	 mov sp,r7
 4830              	.LCFI434:
 4831              	 .cfi_def_cfa_register 13
 4832              	 
 4833 0056 80BD     	 pop {r7,pc}
 4834              	.L310:
 4835              	 .align 2
 4836              	.L309:
 4837 0058 10470050 	 .word 1342195472
 4838              	 .cfi_endproc
 4839              	.LFE244:
 4841              	 .section .text.XMC_SCU_POWER_EnableUsb,"ax",%progbits
 4842              	 .align 2
 4843              	 .global XMC_SCU_POWER_EnableUsb
 4844              	 .thumb
 4845              	 .thumb_func
 4847              	XMC_SCU_POWER_EnableUsb:
 4848              	.LFB245:
1178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable USB Phy and comparator */
1182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_EnableUsb(void)
1183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4849              	 .loc 3 1183 0
 4850              	 .cfi_startproc
 4851              	 
 4852              	 
 4853              	 
 4854 0000 80B4     	 push {r7}
 4855              	.LCFI435:
 4856              	 .cfi_def_cfa_offset 4
 4857              	 .cfi_offset 7,-4
 4858 0002 00AF     	 add r7,sp,#0
 4859              	.LCFI436:
 4860              	 .cfi_def_cfa_register 7
1184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)(SCU_POWER_PWRSET_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4861              	 .loc 3 1185 0
 4862 0004 044B     	 ldr r3,.L312
 4863 0006 5A68     	 ldr r2,[r3,#4]
 4864 0008 0022     	 movs r2,#0
 4865 000a 42F44032 	 orr r2,r2,#196608
 4866 000e 5A60     	 str r2,[r3,#4]
1186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #else
1187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_USBPHYPDQ_Msk;
1188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4867              	 .loc 3 1189 0
 4868 0010 BD46     	 mov sp,r7
 4869              	.LCFI437:
 4870              	 .cfi_def_cfa_register 13
 4871              	 
 4872 0012 5DF8047B 	 ldr r7,[sp],#4
 4873              	.LCFI438:
 4874              	 .cfi_restore 7
 4875              	 .cfi_def_cfa_offset 0
 4876 0016 7047     	 bx lr
 4877              	.L313:
 4878              	 .align 2
 4879              	.L312:
 4880 0018 00420050 	 .word 1342194176
 4881              	 .cfi_endproc
 4882              	.LFE245:
 4884              	 .section .text.XMC_SCU_POWER_DisableUsb,"ax",%progbits
 4885              	 .align 2
 4886              	 .global XMC_SCU_POWER_DisableUsb
 4887              	 .thumb
 4888              	 .thumb_func
 4890              	XMC_SCU_POWER_DisableUsb:
 4891              	.LFB246:
1190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to power down USB Phy and comparator */
1192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_POWER_DisableUsb(void)
1193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4892              	 .loc 3 1193 0
 4893              	 .cfi_startproc
 4894              	 
 4895              	 
 4896              	 
 4897 0000 80B4     	 push {r7}
 4898              	.LCFI439:
 4899              	 .cfi_def_cfa_offset 4
 4900              	 .cfi_offset 7,-4
 4901 0002 00AF     	 add r7,sp,#0
 4902              	.LCFI440:
 4903              	 .cfi_def_cfa_register 7
1194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if defined(USB_OTG_SUPPORTED)
1195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)(SCU_POWER_PWRCLR_USBOTGEN_Msk | SCU_POWER_PWRSET_USBPHYPDQ_Msk);
 4904              	 .loc 3 1195 0
 4905 0004 044B     	 ldr r3,.L315
 4906 0006 9A68     	 ldr r2,[r3,#8]
 4907 0008 0022     	 movs r2,#0
 4908 000a 42F44032 	 orr r2,r2,#196608
 4909 000e 9A60     	 str r2,[r3,#8]
1196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #else
1197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_USBPHYPDQ_Msk;
1198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif    
1199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4910              	 .loc 3 1199 0
 4911 0010 BD46     	 mov sp,r7
 4912              	.LCFI441:
 4913              	 .cfi_def_cfa_register 13
 4914              	 
 4915 0012 5DF8047B 	 ldr r7,[sp],#4
 4916              	.LCFI442:
 4917              	 .cfi_restore 7
 4918              	 .cfi_def_cfa_offset 0
 4919 0016 7047     	 bx lr
 4920              	.L316:
 4921              	 .align 2
 4922              	.L315:
 4923 0018 00420050 	 .word 1342194176
 4924              	 .cfi_endproc
 4925              	.LFE246:
 4927              	 .section .text.XMC_SCU_CLOCK_IsUsbPllLocked,"ax",%progbits
 4928              	 .align 2
 4929              	 .global XMC_SCU_CLOCK_IsUsbPllLocked
 4930              	 .thumb
 4931              	 .thumb_func
 4933              	XMC_SCU_CLOCK_IsUsbPllLocked:
 4934              	.LFB247:
1200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to check USB PLL is locked or not */
1202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsUsbPllLocked(void)
1203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4935              	 .loc 3 1203 0
 4936              	 .cfi_startproc
 4937              	 
 4938              	 
 4939              	 
 4940 0000 80B4     	 push {r7}
 4941              	.LCFI443:
 4942              	 .cfi_def_cfa_offset 4
 4943              	 .cfi_offset 7,-4
 4944 0002 00AF     	 add r7,sp,#0
 4945              	.LCFI444:
 4946              	 .cfi_def_cfa_register 7
1204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) != 0UL);
 4947              	 .loc 3 1204 0
 4948 0004 064B     	 ldr r3,.L319
 4949 0006 1B69     	 ldr r3,[r3,#16]
 4950 0008 03F00403 	 and r3,r3,#4
 4951 000c 002B     	 cmp r3,#0
 4952 000e 14BF     	 ite ne
 4953 0010 0123     	 movne r3,#1
 4954 0012 0023     	 moveq r3,#0
 4955 0014 DBB2     	 uxtb r3,r3
1205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 4956              	 .loc 3 1205 0
 4957 0016 1846     	 mov r0,r3
 4958 0018 BD46     	 mov sp,r7
 4959              	.LCFI445:
 4960              	 .cfi_def_cfa_register 13
 4961              	 
 4962 001a 5DF8047B 	 ldr r7,[sp],#4
 4963              	.LCFI446:
 4964              	 .cfi_restore 7
 4965              	 .cfi_def_cfa_offset 0
 4966 001e 7047     	 bx lr
 4967              	.L320:
 4968              	 .align 2
 4969              	.L319:
 4970 0020 10470050 	 .word 1342195472
 4971              	 .cfi_endproc
 4972              	.LFE247:
 4974              	 .section .text.XMC_SCU_HIB_EnableHibernateDomain,"ax",%progbits
 4975              	 .align 2
 4976              	 .global XMC_SCU_HIB_EnableHibernateDomain
 4977              	 .thumb
 4978              	 .thumb_func
 4980              	XMC_SCU_HIB_EnableHibernateDomain:
 4981              	.LFB248:
1206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to power up the hibernation domain */
1208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableHibernateDomain(void)
1209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 4982              	 .loc 3 1209 0
 4983              	 .cfi_startproc
 4984              	 
 4985              	 
 4986              	 
 4987 0000 80B4     	 push {r7}
 4988              	.LCFI447:
 4989              	 .cfi_def_cfa_offset 4
 4990              	 .cfi_offset 7,-4
 4991 0002 00AF     	 add r7,sp,#0
 4992              	.LCFI448:
 4993              	 .cfi_def_cfa_register 7
1210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Power up HIB domain if and only if it is currently powered down */
1211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 4994              	 .loc 3 1211 0
 4995 0004 144B     	 ldr r3,.L326
 4996 0006 1B68     	 ldr r3,[r3]
 4997 0008 03F00103 	 and r3,r3,#1
 4998 000c 002B     	 cmp r3,#0
 4999 000e 0CD1     	 bne .L322
1212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_POWER->PWRSET = (uint32_t)SCU_POWER_PWRSET_HIB_Msk;
 5000              	 .loc 3 1213 0
 5001 0010 114B     	 ldr r3,.L326
 5002 0012 5A68     	 ldr r2,[r3,#4]
 5003 0014 0022     	 movs r2,#0
 5004 0016 42F00102 	 orr r2,r2,#1
 5005 001a 5A60     	 str r2,[r3,#4]
1214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     
1215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0UL)
 5006              	 .loc 3 1215 0
 5007 001c 00BF     	 nop
 5008              	.L323:
 5009              	 .loc 3 1215 0 is_stmt 0 discriminator 1
 5010 001e 0E4B     	 ldr r3,.L326
 5011 0020 1B68     	 ldr r3,[r3]
 5012 0022 03F00103 	 and r3,r3,#1
 5013 0026 002B     	 cmp r3,#0
 5014 0028 F9D0     	 beq .L323
 5015              	.L322:
1216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }    
1219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
1221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Remove the reset only if HIB domain were in a state of reset */
1222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 5016              	 .loc 3 1222 0 is_stmt 1
 5017 002a 0C4B     	 ldr r3,.L326+4
 5018 002c 1B68     	 ldr r3,[r3]
 5019 002e 03F40073 	 and r3,r3,#512
 5020 0032 002B     	 cmp r3,#0
 5021 0034 0CD0     	 beq .L321
1223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_HIBRS_Msk;
 5022              	 .loc 3 1224 0
 5023 0036 094B     	 ldr r3,.L326+4
 5024 0038 9A68     	 ldr r2,[r3,#8]
 5025 003a 0022     	 movs r2,#0
 5026 003c 42F40072 	 orr r2,r2,#512
 5027 0040 9A60     	 str r2,[r3,#8]
1225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     while((SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk) != 0UL)
 5028              	 .loc 3 1225 0
 5029 0042 00BF     	 nop
 5030              	.L325:
 5031              	 .loc 3 1225 0 is_stmt 0 discriminator 1
 5032 0044 054B     	 ldr r3,.L326+4
 5033 0046 1B68     	 ldr r3,[r3]
 5034 0048 03F40073 	 and r3,r3,#512
 5035 004c 002B     	 cmp r3,#0
 5036 004e F9D1     	 bne .L325
 5037              	.L321:
1226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       /* wait until HIB domain is enabled */
1228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
1229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5038              	 .loc 3 1230 0 is_stmt 1
 5039 0050 BD46     	 mov sp,r7
 5040              	.LCFI449:
 5041              	 .cfi_def_cfa_register 13
 5042              	 
 5043 0052 5DF8047B 	 ldr r7,[sp],#4
 5044              	.LCFI450:
 5045              	 .cfi_restore 7
 5046              	 .cfi_def_cfa_offset 0
 5047 0056 7047     	 bx lr
 5048              	.L327:
 5049              	 .align 2
 5050              	.L326:
 5051 0058 00420050 	 .word 1342194176
 5052 005c 00440050 	 .word 1342194688
 5053              	 .cfi_endproc
 5054              	.LFE248:
 5056              	 .section .text.XMC_SCU_HIB_DisableHibernateDomain,"ax",%progbits
 5057              	 .align 2
 5058              	 .global XMC_SCU_HIB_DisableHibernateDomain
 5059              	 .thumb
 5060              	 .thumb_func
 5062              	XMC_SCU_HIB_DisableHibernateDomain:
 5063              	.LFB249:
1231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to power down the hibernation domain */
1233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableHibernateDomain(void)
1234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5064              	 .loc 3 1234 0
 5065              	 .cfi_startproc
 5066              	 
 5067              	 
 5068              	 
 5069 0000 80B4     	 push {r7}
 5070              	.LCFI451:
 5071              	 .cfi_def_cfa_offset 4
 5072              	 .cfi_offset 7,-4
 5073 0002 00AF     	 add r7,sp,#0
 5074              	.LCFI452:
 5075              	 .cfi_def_cfa_register 7
1235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Disable hibernate domain */   
1236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_POWER->PWRCLR = (uint32_t)SCU_POWER_PWRCLR_HIB_Msk;
 5076              	 .loc 3 1236 0
 5077 0004 074B     	 ldr r3,.L329
 5078 0006 9A68     	 ldr r2,[r3,#8]
 5079 0008 0022     	 movs r2,#0
 5080 000a 42F00102 	 orr r2,r2,#1
 5081 000e 9A60     	 str r2,[r3,#8]
1237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Reset of hibernate domain reset */  
1238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_RESET->RSTSET = (uint32_t)SCU_RESET_RSTSET_HIBRS_Msk;
 5082              	 .loc 3 1238 0
 5083 0010 054B     	 ldr r3,.L329+4
 5084 0012 5A68     	 ldr r2,[r3,#4]
 5085 0014 0022     	 movs r2,#0
 5086 0016 42F40072 	 orr r2,r2,#512
 5087 001a 5A60     	 str r2,[r3,#4]
1239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5088              	 .loc 3 1239 0
 5089 001c BD46     	 mov sp,r7
 5090              	.LCFI453:
 5091              	 .cfi_def_cfa_register 13
 5092              	 
 5093 001e 5DF8047B 	 ldr r7,[sp],#4
 5094              	.LCFI454:
 5095              	 .cfi_restore 7
 5096              	 .cfi_def_cfa_offset 0
 5097 0022 7047     	 bx lr
 5098              	.L330:
 5099              	 .align 2
 5100              	.L329:
 5101 0024 00420050 	 .word 1342194176
 5102 0028 00440050 	 .word 1342194688
 5103              	 .cfi_endproc
 5104              	.LFE249:
 5106              	 .section .text.XMC_SCU_HIB_IsHibernateDomainEnabled,"ax",%progbits
 5107              	 .align 2
 5108              	 .global XMC_SCU_HIB_IsHibernateDomainEnabled
 5109              	 .thumb
 5110              	 .thumb_func
 5112              	XMC_SCU_HIB_IsHibernateDomainEnabled:
 5113              	.LFB250:
1240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to check the hibernation domain is enabled or not */
1242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_HIB_IsHibernateDomainEnabled(void)
1243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5114              	 .loc 3 1243 0
 5115              	 .cfi_startproc
 5116              	 
 5117              	 
 5118              	 
 5119 0000 80B4     	 push {r7}
 5120              	.LCFI455:
 5121              	 .cfi_def_cfa_offset 4
 5122              	 .cfi_offset 7,-4
 5123 0002 00AF     	 add r7,sp,#0
 5124              	.LCFI456:
 5125              	 .cfi_def_cfa_register 7
1244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5126              	 .loc 3 1244 0
 5127 0004 0B4B     	 ldr r3,.L335
 5128 0006 1B68     	 ldr r3,[r3]
 5129 0008 03F00103 	 and r3,r3,#1
 5130 000c 002B     	 cmp r3,#0
 5131 000e 07D0     	 beq .L332
1245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****           !(bool)(SCU_RESET->RSTSTAT & SCU_RESET_RSTSTAT_HIBRS_Msk));
 5132              	 .loc 3 1245 0 discriminator 1
 5133 0010 094B     	 ldr r3,.L335+4
 5134 0012 1B68     	 ldr r3,[r3]
 5135 0014 03F40073 	 and r3,r3,#512
1244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5136              	 .loc 3 1244 0 discriminator 1
 5137 0018 002B     	 cmp r3,#0
 5138 001a 01D1     	 bne .L332
1244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5139              	 .loc 3 1244 0 is_stmt 0 discriminator 3
 5140 001c 0123     	 movs r3,#1
 5141 001e 00E0     	 b .L333
 5142              	.L332:
1244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5143              	 .loc 3 1244 0 discriminator 4
 5144 0020 0023     	 movs r3,#0
 5145              	.L333:
1244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((bool)(SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) && 
 5146              	 .loc 3 1244 0 discriminator 6
 5147 0022 03F00103 	 and r3,r3,#1
 5148 0026 DBB2     	 uxtb r3,r3
1246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5149              	 .loc 3 1246 0 is_stmt 1 discriminator 6
 5150 0028 1846     	 mov r0,r3
 5151 002a BD46     	 mov sp,r7
 5152              	.LCFI457:
 5153              	 .cfi_def_cfa_register 13
 5154              	 
 5155 002c 5DF8047B 	 ldr r7,[sp],#4
 5156              	.LCFI458:
 5157              	 .cfi_restore 7
 5158              	 .cfi_def_cfa_offset 0
 5159 0030 7047     	 bx lr
 5160              	.L336:
 5161 0032 00BF     	 .align 2
 5162              	.L335:
 5163 0034 00420050 	 .word 1342194176
 5164 0038 00440050 	 .word 1342194688
 5165              	 .cfi_endproc
 5166              	.LFE250:
 5168              	 .section .text.XMC_SCU_HIB_EnableInternalSlowClock,"ax",%progbits
 5169              	 .align 2
 5170              	 .global XMC_SCU_HIB_EnableInternalSlowClock
 5171              	 .thumb
 5172              	 .thumb_func
 5174              	XMC_SCU_HIB_EnableInternalSlowClock:
 5175              	.LFB251:
1247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableInternalSlowClock(void)
1250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5176              	 .loc 3 1250 0
 5177              	 .cfi_startproc
 5178              	 
 5179              	 
 5180              	 
 5181 0000 80B4     	 push {r7}
 5182              	.LCFI459:
 5183              	 .cfi_def_cfa_offset 4
 5184              	 .cfi_offset 7,-4
 5185 0002 00AF     	 add r7,sp,#0
 5186              	.LCFI460:
 5187              	 .cfi_def_cfa_register 7
1251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5188              	 .loc 3 1251 0
 5189 0004 00BF     	 nop
 5190              	.L338:
 5191              	 .loc 3 1251 0 is_stmt 0 discriminator 1
 5192 0006 0A4B     	 ldr r3,.L339
 5193 0008 D3F8C430 	 ldr r3,[r3,#196]
 5194 000c 03F02003 	 and r3,r3,#32
 5195 0010 002B     	 cmp r3,#0
 5196 0012 F8D1     	 bne .L338
1252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL &= (uint32_t)~(SCU_HIBERNATE_OSCSICTRL_PWD_Msk);
 5197              	 .loc 3 1255 0 is_stmt 1
 5198 0014 074B     	 ldr r3,.L339+4
 5199 0016 074A     	 ldr r2,.L339+4
 5200 0018 5269     	 ldr r2,[r2,#20]
 5201 001a 22F00102 	 bic r2,r2,#1
 5202 001e 5969     	 ldr r1,[r3,#20]
 5203 0020 0021     	 movs r1,#0
 5204 0022 0A43     	 orrs r2,r2,r1
 5205 0024 5A61     	 str r2,[r3,#20]
1256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5206              	 .loc 3 1256 0
 5207 0026 BD46     	 mov sp,r7
 5208              	.LCFI461:
 5209              	 .cfi_def_cfa_register 13
 5210              	 
 5211 0028 5DF8047B 	 ldr r7,[sp],#4
 5212              	.LCFI462:
 5213              	 .cfi_restore 7
 5214              	 .cfi_def_cfa_offset 0
 5215 002c 7047     	 bx lr
 5216              	.L340:
 5217 002e 00BF     	 .align 2
 5218              	.L339:
 5219 0030 00400050 	 .word 1342193664
 5220 0034 00430050 	 .word 1342194432
 5221              	 .cfi_endproc
 5222              	.LFE251:
 5224              	 .section .text.XMC_SCU_HIB_DisableInternalSlowClock,"ax",%progbits
 5225              	 .align 2
 5226              	 .global XMC_SCU_HIB_DisableInternalSlowClock
 5227              	 .thumb
 5228              	 .thumb_func
 5230              	XMC_SCU_HIB_DisableInternalSlowClock:
 5231              	.LFB252:
1257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable internal slow clock - fOSI (32.768kHz) in hibernate domain */
1259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableInternalSlowClock(void)
1260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5232              	 .loc 3 1260 0
 5233              	 .cfi_startproc
 5234              	 
 5235              	 
 5236              	 
 5237 0000 80B4     	 push {r7}
 5238              	.LCFI463:
 5239              	 .cfi_def_cfa_offset 4
 5240              	 .cfi_offset 7,-4
 5241 0002 00AF     	 add r7,sp,#0
 5242              	.LCFI464:
 5243              	 .cfi_def_cfa_register 7
1261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCSICTRL_Msk)
 5244              	 .loc 3 1261 0
 5245 0004 00BF     	 nop
 5246              	.L342:
 5247              	 .loc 3 1261 0 is_stmt 0 discriminator 1
 5248 0006 0A4B     	 ldr r3,.L343
 5249 0008 D3F8C430 	 ldr r3,[r3,#196]
 5250 000c 03F02003 	 and r3,r3,#32
 5251 0010 002B     	 cmp r3,#0
 5252 0012 F8D1     	 bne .L342
1262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCSICTRL register in hibernate domain is ready to accept a write */  
1264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCSICTRL |= (uint32_t)SCU_HIBERNATE_OSCSICTRL_PWD_Msk;
 5253              	 .loc 3 1265 0 is_stmt 1
 5254 0014 074B     	 ldr r3,.L343+4
 5255 0016 074A     	 ldr r2,.L343+4
 5256 0018 5269     	 ldr r2,[r2,#20]
 5257 001a 42F00102 	 orr r2,r2,#1
 5258 001e 5969     	 ldr r1,[r3,#20]
 5259 0020 0021     	 movs r1,#0
 5260 0022 0A43     	 orrs r2,r2,r1
 5261 0024 5A61     	 str r2,[r3,#20]
1266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5262              	 .loc 3 1266 0
 5263 0026 BD46     	 mov sp,r7
 5264              	.LCFI465:
 5265              	 .cfi_def_cfa_register 13
 5266              	 
 5267 0028 5DF8047B 	 ldr r7,[sp],#4
 5268              	.LCFI466:
 5269              	 .cfi_restore 7
 5270              	 .cfi_def_cfa_offset 0
 5271 002c 7047     	 bx lr
 5272              	.L344:
 5273 002e 00BF     	 .align 2
 5274              	.L343:
 5275 0030 00400050 	 .word 1342193664
 5276 0034 00430050 	 .word 1342194432
 5277              	 .cfi_endproc
 5278              	.LFE252:
 5280              	 .section .text.XMC_SCU_HIB_ClearEventStatus,"ax",%progbits
 5281              	 .align 2
 5282              	 .global XMC_SCU_HIB_ClearEventStatus
 5283              	 .thumb
 5284              	 .thumb_func
 5286              	XMC_SCU_HIB_ClearEventStatus:
 5287              	.LFB253:
1267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_ClearEventStatus(int32_t event)
1269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5288              	 .loc 3 1269 0
 5289              	 .cfi_startproc
 5290              	 
 5291              	 
 5292              	 
 5293 0000 80B4     	 push {r7}
 5294              	.LCFI467:
 5295              	 .cfi_def_cfa_offset 4
 5296              	 .cfi_offset 7,-4
 5297 0002 83B0     	 sub sp,sp,#12
 5298              	.LCFI468:
 5299              	 .cfi_def_cfa_offset 16
 5300 0004 00AF     	 add r7,sp,#0
 5301              	.LCFI469:
 5302              	 .cfi_def_cfa_register 7
 5303 0006 7860     	 str r0,[r7,#4]
1270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 5304              	 .loc 3 1270 0
 5305 0008 00BF     	 nop
 5306              	.L346:
 5307              	 .loc 3 1270 0 is_stmt 0 discriminator 1
 5308 000a 094B     	 ldr r3,.L347
 5309 000c D3F8C430 	 ldr r3,[r3,#196]
 5310 0010 03F00203 	 and r3,r3,#2
 5311 0014 002B     	 cmp r3,#0
 5312 0016 F8D1     	 bne .L346
1271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCLR register in hibernate domain is ready to accept a write */  
1273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = event;
 5313              	 .loc 3 1274 0 is_stmt 1
 5314 0018 064B     	 ldr r3,.L347+4
 5315 001a 7A68     	 ldr r2,[r7,#4]
 5316 001c 5968     	 ldr r1,[r3,#4]
 5317 001e 0021     	 movs r1,#0
 5318 0020 0A43     	 orrs r2,r2,r1
 5319 0022 5A60     	 str r2,[r3,#4]
1275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5320              	 .loc 3 1275 0
 5321 0024 0C37     	 adds r7,r7,#12
 5322              	.LCFI470:
 5323              	 .cfi_def_cfa_offset 4
 5324 0026 BD46     	 mov sp,r7
 5325              	.LCFI471:
 5326              	 .cfi_def_cfa_register 13
 5327              	 
 5328 0028 5DF8047B 	 ldr r7,[sp],#4
 5329              	.LCFI472:
 5330              	 .cfi_restore 7
 5331              	 .cfi_def_cfa_offset 0
 5332 002c 7047     	 bx lr
 5333              	.L348:
 5334 002e 00BF     	 .align 2
 5335              	.L347:
 5336 0030 00400050 	 .word 1342193664
 5337 0034 00430050 	 .word 1342194432
 5338              	 .cfi_endproc
 5339              	.LFE253:
 5341              	 .section .text.XMC_SCU_HIB_TriggerEvent,"ax",%progbits
 5342              	 .align 2
 5343              	 .global XMC_SCU_HIB_TriggerEvent
 5344              	 .thumb
 5345              	 .thumb_func
 5347              	XMC_SCU_HIB_TriggerEvent:
 5348              	.LFB254:
1276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_TriggerEvent(int32_t event)
1278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5349              	 .loc 3 1278 0
 5350              	 .cfi_startproc
 5351              	 
 5352              	 
 5353              	 
 5354 0000 80B4     	 push {r7}
 5355              	.LCFI473:
 5356              	 .cfi_def_cfa_offset 4
 5357              	 .cfi_offset 7,-4
 5358 0002 83B0     	 sub sp,sp,#12
 5359              	.LCFI474:
 5360              	 .cfi_def_cfa_offset 16
 5361 0004 00AF     	 add r7,sp,#0
 5362              	.LCFI475:
 5363              	 .cfi_def_cfa_register 7
 5364 0006 7860     	 str r0,[r7,#4]
1279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDSET_Msk)
 5365              	 .loc 3 1279 0
 5366 0008 00BF     	 nop
 5367              	.L350:
 5368              	 .loc 3 1279 0 is_stmt 0 discriminator 1
 5369 000a 094B     	 ldr r3,.L351
 5370 000c D3F8C430 	 ldr r3,[r3,#196]
 5371 0010 03F00403 	 and r3,r3,#4
 5372 0014 002B     	 cmp r3,#0
 5373 0016 F8D1     	 bne .L350
1280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDSET register in hibernate domain is ready to accept a write */    
1282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDSET = event;
 5374              	 .loc 3 1283 0 is_stmt 1
 5375 0018 064B     	 ldr r3,.L351+4
 5376 001a 7A68     	 ldr r2,[r7,#4]
 5377 001c 9968     	 ldr r1,[r3,#8]
 5378 001e 0021     	 movs r1,#0
 5379 0020 0A43     	 orrs r2,r2,r1
 5380 0022 9A60     	 str r2,[r3,#8]
1284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5381              	 .loc 3 1284 0
 5382 0024 0C37     	 adds r7,r7,#12
 5383              	.LCFI476:
 5384              	 .cfi_def_cfa_offset 4
 5385 0026 BD46     	 mov sp,r7
 5386              	.LCFI477:
 5387              	 .cfi_def_cfa_register 13
 5388              	 
 5389 0028 5DF8047B 	 ldr r7,[sp],#4
 5390              	.LCFI478:
 5391              	 .cfi_restore 7
 5392              	 .cfi_def_cfa_offset 0
 5393 002c 7047     	 bx lr
 5394              	.L352:
 5395 002e 00BF     	 .align 2
 5396              	.L351:
 5397 0030 00400050 	 .word 1342193664
 5398 0034 00430050 	 .word 1342194432
 5399              	 .cfi_endproc
 5400              	.LFE254:
 5402              	 .section .text.XMC_SCU_HIB_EnableEvent,"ax",%progbits
 5403              	 .align 2
 5404              	 .global XMC_SCU_HIB_EnableEvent
 5405              	 .thumb
 5406              	 .thumb_func
 5408              	XMC_SCU_HIB_EnableEvent:
 5409              	.LFB255:
1285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnableEvent(int32_t event)
1287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5410              	 .loc 3 1287 0
 5411              	 .cfi_startproc
 5412              	 
 5413              	 
 5414              	 
 5415 0000 80B4     	 push {r7}
 5416              	.LCFI479:
 5417              	 .cfi_def_cfa_offset 4
 5418              	 .cfi_offset 7,-4
 5419 0002 83B0     	 sub sp,sp,#12
 5420              	.LCFI480:
 5421              	 .cfi_def_cfa_offset 16
 5422 0004 00AF     	 add r7,sp,#0
 5423              	.LCFI481:
 5424              	 .cfi_def_cfa_register 7
 5425 0006 7860     	 str r0,[r7,#4]
1288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5426              	 .loc 3 1299 0
 5427 0008 00BF     	 nop
 5428              	.L354:
 5429              	 .loc 3 1299 0 is_stmt 0 discriminator 1
 5430 000a 0A4B     	 ldr r3,.L355
 5431 000c D3F8C430 	 ldr r3,[r3,#196]
 5432 0010 03F00803 	 and r3,r3,#8
 5433 0014 002B     	 cmp r3,#0
 5434 0016 F8D1     	 bne .L354
1300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= event;
 5435              	 .loc 3 1303 0 is_stmt 1
 5436 0018 074B     	 ldr r3,.L355+4
 5437 001a 074A     	 ldr r2,.L355+4
 5438 001c D168     	 ldr r1,[r2,#12]
 5439 001e 7A68     	 ldr r2,[r7,#4]
 5440 0020 0A43     	 orrs r2,r2,r1
 5441 0022 D968     	 ldr r1,[r3,#12]
 5442 0024 0021     	 movs r1,#0
 5443 0026 0A43     	 orrs r2,r2,r1
 5444 0028 DA60     	 str r2,[r3,#12]
1304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5445              	 .loc 3 1304 0
 5446 002a 0C37     	 adds r7,r7,#12
 5447              	.LCFI482:
 5448              	 .cfi_def_cfa_offset 4
 5449 002c BD46     	 mov sp,r7
 5450              	.LCFI483:
 5451              	 .cfi_def_cfa_register 13
 5452              	 
 5453 002e 5DF8047B 	 ldr r7,[sp],#4
 5454              	.LCFI484:
 5455              	 .cfi_restore 7
 5456              	 .cfi_def_cfa_offset 0
 5457 0032 7047     	 bx lr
 5458              	.L356:
 5459              	 .align 2
 5460              	.L355:
 5461 0034 00400050 	 .word 1342193664
 5462 0038 00430050 	 .word 1342194432
 5463              	 .cfi_endproc
 5464              	.LFE255:
 5466              	 .section .text.XMC_SCU_HIB_DisableEvent,"ax",%progbits
 5467              	 .align 2
 5468              	 .global XMC_SCU_HIB_DisableEvent
 5469              	 .thumb
 5470              	 .thumb_func
 5472              	XMC_SCU_HIB_DisableEvent:
 5473              	.LFB256:
1305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_DisableEvent(int32_t event)
1307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5474              	 .loc 3 1307 0
 5475              	 .cfi_startproc
 5476              	 
 5477              	 
 5478              	 
 5479 0000 80B4     	 push {r7}
 5480              	.LCFI485:
 5481              	 .cfi_def_cfa_offset 4
 5482              	 .cfi_offset 7,-4
 5483 0002 83B0     	 sub sp,sp,#12
 5484              	.LCFI486:
 5485              	 .cfi_def_cfa_offset 16
 5486 0004 00AF     	 add r7,sp,#0
 5487              	.LCFI487:
 5488              	 .cfi_def_cfa_register 7
 5489 0006 7860     	 str r0,[r7,#4]
1308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE) << (SCU_HIBERNATE_HDCR_VBATHI_Pos - SCU_HI
1310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE) << (SCU_HIBERNATE_HDCR_VBATLO_Pos - SCU_HI
1311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0HI_Pos -
1312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO0LO_Pos -
1313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
1314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1HI_Pos -
1315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = ((event & XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE) << (SCU_HIBERNATE_HDCR_AHIBIO1LO_Pos -
1316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5490              	 .loc 3 1319 0
 5491 0008 00BF     	 nop
 5492              	.L358:
 5493              	 .loc 3 1319 0 is_stmt 0 discriminator 1
 5494 000a 0B4B     	 ldr r3,.L359
 5495 000c D3F8C430 	 ldr r3,[r3,#196]
 5496 0010 03F00803 	 and r3,r3,#8
 5497 0014 002B     	 cmp r3,#0
 5498 0016 F8D1     	 bne .L358
1320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR &= ~event;
 5499              	 .loc 3 1323 0 is_stmt 1
 5500 0018 084B     	 ldr r3,.L359+4
 5501 001a 084A     	 ldr r2,.L359+4
 5502 001c D268     	 ldr r2,[r2,#12]
 5503 001e 7968     	 ldr r1,[r7,#4]
 5504 0020 C943     	 mvns r1,r1
 5505 0022 0A40     	 ands r2,r2,r1
 5506 0024 D968     	 ldr r1,[r3,#12]
 5507 0026 0021     	 movs r1,#0
 5508 0028 0A43     	 orrs r2,r2,r1
 5509 002a DA60     	 str r2,[r3,#12]
1324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5510              	 .loc 3 1324 0
 5511 002c 0C37     	 adds r7,r7,#12
 5512              	.LCFI488:
 5513              	 .cfi_def_cfa_offset 4
 5514 002e BD46     	 mov sp,r7
 5515              	.LCFI489:
 5516              	 .cfi_def_cfa_register 13
 5517              	 
 5518 0030 5DF8047B 	 ldr r7,[sp],#4
 5519              	.LCFI490:
 5520              	 .cfi_restore 7
 5521              	 .cfi_def_cfa_offset 0
 5522 0034 7047     	 bx lr
 5523              	.L360:
 5524 0036 00BF     	 .align 2
 5525              	.L359:
 5526 0038 00400050 	 .word 1342193664
 5527 003c 00430050 	 .word 1342194432
 5528              	 .cfi_endproc
 5529              	.LFE256:
 5531              	 .section .text.XMC_SCU_HIB_EnterHibernateState,"ax",%progbits
 5532              	 .align 2
 5533              	 .global XMC_SCU_HIB_EnterHibernateState
 5534              	 .thumb
 5535              	 .thumb_func
 5537              	XMC_SCU_HIB_EnterHibernateState:
 5538              	.LFB257:
1325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateState(void) 
1327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5539              	 .loc 3 1327 0
 5540              	 .cfi_startproc
 5541              	 
 5542              	 
 5543              	 
 5544 0000 80B4     	 push {r7}
 5545              	.LCFI491:
 5546              	 .cfi_def_cfa_offset 4
 5547              	 .cfi_offset 7,-4
 5548 0002 00AF     	 add r7,sp,#0
 5549              	.LCFI492:
 5550              	 .cfi_def_cfa_register 7
1328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5551              	 .loc 3 1328 0
 5552 0004 00BF     	 nop
 5553              	.L362:
 5554              	 .loc 3 1328 0 is_stmt 0 discriminator 1
 5555 0006 0A4B     	 ldr r3,.L363
 5556 0008 D3F8C430 	 ldr r3,[r3,#196]
 5557 000c 03F00803 	 and r3,r3,#8
 5558 0010 002B     	 cmp r3,#0
 5559 0012 F8D1     	 bne .L362
1329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_HIB_Msk;
 5560              	 .loc 3 1332 0 is_stmt 1
 5561 0014 074B     	 ldr r3,.L363+4
 5562 0016 074A     	 ldr r2,.L363+4
 5563 0018 D268     	 ldr r2,[r2,#12]
 5564 001a 42F01002 	 orr r2,r2,#16
 5565 001e D968     	 ldr r1,[r3,#12]
 5566 0020 0021     	 movs r1,#0
 5567 0022 0A43     	 orrs r2,r2,r1
 5568 0024 DA60     	 str r2,[r3,#12]
1333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5569              	 .loc 3 1333 0
 5570 0026 BD46     	 mov sp,r7
 5571              	.LCFI493:
 5572              	 .cfi_def_cfa_register 13
 5573              	 
 5574 0028 5DF8047B 	 ldr r7,[sp],#4
 5575              	.LCFI494:
 5576              	 .cfi_restore 7
 5577              	 .cfi_def_cfa_offset 0
 5578 002c 7047     	 bx lr
 5579              	.L364:
 5580 002e 00BF     	 .align 2
 5581              	.L363:
 5582 0030 00400050 	 .word 1342193664
 5583 0034 00430050 	 .word 1342194432
 5584              	 .cfi_endproc
 5585              	.LFE257:
 5587              	 .section .text.XMC_SCU_HIB_EnterHibernateStateEx,"ax",%progbits
 5588              	 .align 2
 5589              	 .global XMC_SCU_HIB_EnterHibernateStateEx
 5590              	 .thumb
 5591              	 .thumb_func
 5593              	XMC_SCU_HIB_EnterHibernateStateEx:
 5594              	.LFB258:
1334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_EnterHibernateStateEx(XMC_SCU_HIB_HIBERNATE_MODE_t mode)
1336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5595              	 .loc 3 1336 0
 5596              	 .cfi_startproc
 5597              	 
 5598              	 
 5599 0000 80B5     	 push {r7,lr}
 5600              	.LCFI495:
 5601              	 .cfi_def_cfa_offset 8
 5602              	 .cfi_offset 7,-8
 5603              	 .cfi_offset 14,-4
 5604 0002 82B0     	 sub sp,sp,#8
 5605              	.LCFI496:
 5606              	 .cfi_def_cfa_offset 16
 5607 0004 00AF     	 add r7,sp,#0
 5608              	.LCFI497:
 5609              	 .cfi_def_cfa_register 7
 5610 0006 0346     	 mov r3,r0
 5611 0008 FB71     	 strb r3,[r7,#7]
1337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL)
 5612              	 .loc 3 1337 0
 5613 000a FB79     	 ldrb r3,[r7,#7]
 5614 000c 002B     	 cmp r3,#0
 5615 000e 01D1     	 bne .L365
1338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_HIB_EnterHibernateState();
 5616              	 .loc 3 1339 0
 5617 0010 FFF7FEFF 	 bl XMC_SCU_HIB_EnterHibernateState
 5618              	.L365:
1340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL)
1343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HINTSET_Msk)
1345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       /* Wait until HDCR register in hibernate domain is ready to accept a write */
1347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
1348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HINTSET = SCU_HIBERNATE_HINTSET_HIBNINT_Msk;
1349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5619              	 .loc 3 1351 0
 5620 0014 0837     	 adds r7,r7,#8
 5621              	.LCFI498:
 5622              	 .cfi_def_cfa_offset 8
 5623 0016 BD46     	 mov sp,r7
 5624              	.LCFI499:
 5625              	 .cfi_def_cfa_register 13
 5626              	 
 5627 0018 80BD     	 pop {r7,pc}
 5628              	 .cfi_endproc
 5629              	.LFE258:
 5631 001a 00BF     	 .section .text.XMC_SCU_HIB_SetWakeupTriggerInput,"ax",%progbits
 5632              	 .align 2
 5633              	 .global XMC_SCU_HIB_SetWakeupTriggerInput
 5634              	 .thumb
 5635              	 .thumb_func
 5637              	XMC_SCU_HIB_SetWakeupTriggerInput:
 5638              	.LFB259:
1352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetWakeupTriggerInput(XMC_SCU_HIB_IO_t pin)
1354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5639              	 .loc 3 1354 0
 5640              	 .cfi_startproc
 5641              	 
 5642              	 
 5643              	 
 5644 0000 80B4     	 push {r7}
 5645              	.LCFI500:
 5646              	 .cfi_def_cfa_offset 4
 5647              	 .cfi_offset 7,-4
 5648 0002 83B0     	 sub sp,sp,#12
 5649              	.LCFI501:
 5650              	 .cfi_def_cfa_offset 16
 5651 0004 00AF     	 add r7,sp,#0
 5652              	.LCFI502:
 5653              	 .cfi_def_cfa_register 7
 5654 0006 0346     	 mov r3,r0
 5655 0008 FB71     	 strb r3,[r7,#7]
1355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5656              	 .loc 3 1355 0
 5657 000a 00BF     	 nop
 5658              	.L368:
 5659              	 .loc 3 1355 0 is_stmt 0 discriminator 1
 5660 000c 104B     	 ldr r3,.L371
 5661 000e D3F8C430 	 ldr r3,[r3,#196]
 5662 0012 03F00803 	 and r3,r3,#8
 5663 0016 002B     	 cmp r3,#0
 5664 0018 F8D1     	 bne .L368
1356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5665              	 .loc 3 1360 0 is_stmt 1
 5666 001a FB79     	 ldrb r3,[r7,#7]
 5667 001c 002B     	 cmp r3,#0
 5668 001e 09D1     	 bne .L369
1361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_WKUPSEL_Msk;
 5669              	 .loc 3 1362 0
 5670 0020 0C4B     	 ldr r3,.L371+4
 5671 0022 0C4A     	 ldr r2,.L371+4
 5672 0024 D268     	 ldr r2,[r2,#12]
 5673 0026 42F48072 	 orr r2,r2,#256
 5674 002a D968     	 ldr r1,[r3,#12]
 5675 002c 0021     	 movs r1,#0
 5676 002e 0A43     	 orrs r2,r2,r1
 5677 0030 DA60     	 str r2,[r3,#12]
 5678 0032 08E0     	 b .L367
 5679              	.L369:
1363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
1365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_WKUPSEL_Msk; 
 5680              	 .loc 3 1366 0
 5681 0034 074B     	 ldr r3,.L371+4
 5682 0036 074A     	 ldr r2,.L371+4
 5683 0038 D268     	 ldr r2,[r2,#12]
 5684 003a 22F48072 	 bic r2,r2,#256
 5685 003e D968     	 ldr r1,[r3,#12]
 5686 0040 0021     	 movs r1,#0
 5687 0042 0A43     	 orrs r2,r2,r1
 5688 0044 DA60     	 str r2,[r3,#12]
 5689              	.L367:
1367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5690              	 .loc 3 1368 0
 5691 0046 0C37     	 adds r7,r7,#12
 5692              	.LCFI503:
 5693              	 .cfi_def_cfa_offset 4
 5694 0048 BD46     	 mov sp,r7
 5695              	.LCFI504:
 5696              	 .cfi_def_cfa_register 13
 5697              	 
 5698 004a 5DF8047B 	 ldr r7,[sp],#4
 5699              	.LCFI505:
 5700              	 .cfi_restore 7
 5701              	 .cfi_def_cfa_offset 0
 5702 004e 7047     	 bx lr
 5703              	.L372:
 5704              	 .align 2
 5705              	.L371:
 5706 0050 00400050 	 .word 1342193664
 5707 0054 00430050 	 .word 1342194432
 5708              	 .cfi_endproc
 5709              	.LFE259:
 5711              	 .section .text.XMC_SCU_HIB_SetPinMode,"ax",%progbits
 5712              	 .align 2
 5713              	 .global XMC_SCU_HIB_SetPinMode
 5714              	 .thumb
 5715              	 .thumb_func
 5717              	XMC_SCU_HIB_SetPinMode:
 5718              	.LFB260:
1369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinMode(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_PIN_MODE_t mode)
1371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5719              	 .loc 3 1371 0
 5720              	 .cfi_startproc
 5721              	 
 5722              	 
 5723              	 
 5724 0000 80B4     	 push {r7}
 5725              	.LCFI506:
 5726              	 .cfi_def_cfa_offset 4
 5727              	 .cfi_offset 7,-4
 5728 0002 83B0     	 sub sp,sp,#12
 5729              	.LCFI507:
 5730              	 .cfi_def_cfa_offset 16
 5731 0004 00AF     	 add r7,sp,#0
 5732              	.LCFI508:
 5733              	 .cfi_def_cfa_register 7
 5734 0006 0346     	 mov r3,r0
 5735 0008 3960     	 str r1,[r7]
 5736 000a FB71     	 strb r3,[r7,#7]
1372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5737              	 .loc 3 1372 0
 5738 000c 00BF     	 nop
 5739              	.L374:
 5740              	 .loc 3 1372 0 is_stmt 0 discriminator 1
 5741 000e 104B     	 ldr r3,.L375
 5742 0010 D3F8C430 	 ldr r3,[r3,#196]
 5743 0014 03F00803 	 and r3,r3,#8
 5744 0018 002B     	 cmp r3,#0
 5745 001a F8D1     	 bne .L374
1373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0SEL_Msk << (SCU_HIBERNATE
 5746              	 .loc 3 1376 0 is_stmt 1
 5747 001c 0D4B     	 ldr r3,.L375+4
 5748 001e 0D4A     	 ldr r2,.L375+4
 5749 0020 D168     	 ldr r1,[r2,#12]
 5750 0022 FA79     	 ldrb r2,[r7,#7]
 5751 0024 9200     	 lsls r2,r2,#2
 5752 0026 1046     	 mov r0,r2
 5753 0028 4FF47022 	 mov r2,#983040
 5754 002c 8240     	 lsls r2,r2,r0
 5755 002e D243     	 mvns r2,r2
 5756 0030 1140     	 ands r1,r1,r2
1377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5757              	 .loc 3 1377 0
 5758 0032 FA79     	 ldrb r2,[r7,#7]
 5759 0034 9200     	 lsls r2,r2,#2
1376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5760              	 .loc 3 1376 0
 5761 0036 1046     	 mov r0,r2
 5762              	 .loc 3 1377 0
 5763 0038 3A68     	 ldr r2,[r7]
 5764 003a 8240     	 lsls r2,r2,r0
1376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         (mode << (SCU_HIBERNATE_HDCR_HIBIOSEL_Size * pin));
 5765              	 .loc 3 1376 0
 5766 003c 0A43     	 orrs r2,r2,r1
 5767 003e D968     	 ldr r1,[r3,#12]
 5768 0040 0021     	 movs r1,#0
 5769 0042 0A43     	 orrs r2,r2,r1
 5770 0044 DA60     	 str r2,[r3,#12]
1378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5771              	 .loc 3 1378 0
 5772 0046 0C37     	 adds r7,r7,#12
 5773              	.LCFI509:
 5774              	 .cfi_def_cfa_offset 4
 5775 0048 BD46     	 mov sp,r7
 5776              	.LCFI510:
 5777              	 .cfi_def_cfa_register 13
 5778              	 
 5779 004a 5DF8047B 	 ldr r7,[sp],#4
 5780              	.LCFI511:
 5781              	 .cfi_restore 7
 5782              	 .cfi_def_cfa_offset 0
 5783 004e 7047     	 bx lr
 5784              	.L376:
 5785              	 .align 2
 5786              	.L375:
 5787 0050 00400050 	 .word 1342193664
 5788 0054 00430050 	 .word 1342194432
 5789              	 .cfi_endproc
 5790              	.LFE260:
 5792              	 .section .text.XMC_SCU_HIB_SetPinOutputLevel,"ax",%progbits
 5793              	 .align 2
 5794              	 .global XMC_SCU_HIB_SetPinOutputLevel
 5795              	 .thumb
 5796              	 .thumb_func
 5798              	XMC_SCU_HIB_SetPinOutputLevel:
 5799              	.LFB261:
1379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetPinOutputLevel(XMC_SCU_HIB_IO_t pin, XMC_SCU_HIB_IO_OUTPUT_LEVEL_t level)
1381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5800              	 .loc 3 1381 0
 5801              	 .cfi_startproc
 5802              	 
 5803              	 
 5804              	 
 5805 0000 80B4     	 push {r7}
 5806              	.LCFI512:
 5807              	 .cfi_def_cfa_offset 4
 5808              	 .cfi_offset 7,-4
 5809 0002 83B0     	 sub sp,sp,#12
 5810              	.LCFI513:
 5811              	 .cfi_def_cfa_offset 16
 5812 0004 00AF     	 add r7,sp,#0
 5813              	.LCFI514:
 5814              	 .cfi_def_cfa_register 7
 5815 0006 0346     	 mov r3,r0
 5816 0008 0A46     	 mov r2,r1
 5817 000a FB71     	 strb r3,[r7,#7]
 5818 000c 1346     	 mov r3,r2
 5819 000e BB80     	 strh r3,[r7,#4]
1382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5820              	 .loc 3 1382 0
 5821 0010 00BF     	 nop
 5822              	.L378:
 5823              	 .loc 3 1382 0 is_stmt 0 discriminator 1
 5824 0012 0F4B     	 ldr r3,.L379
 5825 0014 D3F8C430 	 ldr r3,[r3,#196]
 5826 0018 03F00803 	 and r3,r3,#8
 5827 001c 002B     	 cmp r3,#0
 5828 001e F8D1     	 bne .L378
1383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & ~(SCU_HIBERNATE_HDCR_HIBIO0POL_Msk << pin)) |
 5829              	 .loc 3 1386 0 is_stmt 1
 5830 0020 0C4B     	 ldr r3,.L379+4
 5831 0022 0C4A     	 ldr r2,.L379+4
 5832 0024 D168     	 ldr r1,[r2,#12]
 5833 0026 FA79     	 ldrb r2,[r7,#7]
 5834 0028 4FF48050 	 mov r0,#4096
 5835 002c 00FA02F2 	 lsl r2,r0,r2
 5836 0030 D243     	 mvns r2,r2
 5837 0032 0A40     	 ands r2,r2,r1
1387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5838              	 .loc 3 1387 0
 5839 0034 B888     	 ldrh r0,[r7,#4]
 5840 0036 F979     	 ldrb r1,[r7,#7]
 5841 0038 00FA01F1 	 lsl r1,r0,r1
1386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         (level << pin);
 5842              	 .loc 3 1386 0
 5843 003c 0A43     	 orrs r2,r2,r1
 5844 003e D968     	 ldr r1,[r3,#12]
 5845 0040 0021     	 movs r1,#0
 5846 0042 0A43     	 orrs r2,r2,r1
 5847 0044 DA60     	 str r2,[r3,#12]
1388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5848              	 .loc 3 1388 0
 5849 0046 0C37     	 adds r7,r7,#12
 5850              	.LCFI515:
 5851              	 .cfi_def_cfa_offset 4
 5852 0048 BD46     	 mov sp,r7
 5853              	.LCFI516:
 5854              	 .cfi_def_cfa_register 13
 5855              	 
 5856 004a 5DF8047B 	 ldr r7,[sp],#4
 5857              	.LCFI517:
 5858              	 .cfi_restore 7
 5859              	 .cfi_def_cfa_offset 0
 5860 004e 7047     	 bx lr
 5861              	.L380:
 5862              	 .align 2
 5863              	.L379:
 5864 0050 00400050 	 .word 1342193664
 5865 0054 00430050 	 .word 1342194432
 5866              	 .cfi_endproc
 5867              	.LFE261:
 5869              	 .section .text.XMC_SCU_HIB_SetInput0,"ax",%progbits
 5870              	 .align 2
 5871              	 .global XMC_SCU_HIB_SetInput0
 5872              	 .thumb
 5873              	 .thumb_func
 5875              	XMC_SCU_HIB_SetInput0:
 5876              	.LFB262:
1389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetInput0(XMC_SCU_HIB_IO_t pin)
1391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5877              	 .loc 3 1391 0
 5878              	 .cfi_startproc
 5879              	 
 5880              	 
 5881              	 
 5882 0000 80B4     	 push {r7}
 5883              	.LCFI518:
 5884              	 .cfi_def_cfa_offset 4
 5885              	 .cfi_offset 7,-4
 5886 0002 83B0     	 sub sp,sp,#12
 5887              	.LCFI519:
 5888              	 .cfi_def_cfa_offset 16
 5889 0004 00AF     	 add r7,sp,#0
 5890              	.LCFI520:
 5891              	 .cfi_def_cfa_register 7
 5892 0006 0346     	 mov r3,r0
 5893 0008 FB71     	 strb r3,[r7,#7]
1392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5894              	 .loc 3 1392 0
 5895 000a 00BF     	 nop
 5896              	.L382:
 5897              	 .loc 3 1392 0 is_stmt 0 discriminator 1
 5898 000c 104B     	 ldr r3,.L385
 5899 000e D3F8C430 	 ldr r3,[r3,#196]
 5900 0012 03F00803 	 and r3,r3,#8
 5901 0016 002B     	 cmp r3,#0
 5902 0018 F8D1     	 bne .L382
1393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */    
1395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (pin == XMC_SCU_HIB_IO_0)
 5903              	 .loc 3 1397 0 is_stmt 1
 5904 001a FB79     	 ldrb r3,[r7,#7]
 5905 001c 002B     	 cmp r3,#0
 5906 001e 09D1     	 bne .L383
1398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_GPI0SEL_Msk;
 5907              	 .loc 3 1399 0
 5908 0020 0C4B     	 ldr r3,.L385+4
 5909 0022 0C4A     	 ldr r2,.L385+4
 5910 0024 D268     	 ldr r2,[r2,#12]
 5911 0026 42F48062 	 orr r2,r2,#1024
 5912 002a D968     	 ldr r1,[r3,#12]
 5913 002c 0021     	 movs r1,#0
 5914 002e 0A43     	 orrs r2,r2,r1
 5915 0030 DA60     	 str r2,[r3,#12]
 5916 0032 08E0     	 b .L381
 5917              	.L383:
1400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
1402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_HIBERNATE->HDCR &= ~SCU_HIBERNATE_HDCR_GPI0SEL_Msk; 
 5918              	 .loc 3 1403 0
 5919 0034 074B     	 ldr r3,.L385+4
 5920 0036 074A     	 ldr r2,.L385+4
 5921 0038 D268     	 ldr r2,[r2,#12]
 5922 003a 22F48062 	 bic r2,r2,#1024
 5923 003e D968     	 ldr r1,[r3,#12]
 5924 0040 0021     	 movs r1,#0
 5925 0042 0A43     	 orrs r2,r2,r1
 5926 0044 DA60     	 str r2,[r3,#12]
 5927              	.L381:
1404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5928              	 .loc 3 1405 0
 5929 0046 0C37     	 adds r7,r7,#12
 5930              	.LCFI521:
 5931              	 .cfi_def_cfa_offset 4
 5932 0048 BD46     	 mov sp,r7
 5933              	.LCFI522:
 5934              	 .cfi_def_cfa_register 13
 5935              	 
 5936 004a 5DF8047B 	 ldr r7,[sp],#4
 5937              	.LCFI523:
 5938              	 .cfi_restore 7
 5939              	 .cfi_def_cfa_offset 0
 5940 004e 7047     	 bx lr
 5941              	.L386:
 5942              	 .align 2
 5943              	.L385:
 5944 0050 00400050 	 .word 1342193664
 5945 0054 00430050 	 .word 1342194432
 5946              	 .cfi_endproc
 5947              	.LFE262:
 5949              	 .section .text.XMC_SCU_HIB_SetSR0Input,"ax",%progbits
 5950              	 .align 2
 5951              	 .global XMC_SCU_HIB_SetSR0Input
 5952              	 .thumb
 5953              	 .thumb_func
 5955              	XMC_SCU_HIB_SetSR0Input:
 5956              	.LFB263:
1406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR0Input(XMC_SCU_HIB_SR0_INPUT_t input)
1408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 5957              	 .loc 3 1408 0
 5958              	 .cfi_startproc
 5959              	 
 5960              	 
 5961              	 
 5962 0000 80B4     	 push {r7}
 5963              	.LCFI524:
 5964              	 .cfi_def_cfa_offset 4
 5965              	 .cfi_offset 7,-4
 5966 0002 83B0     	 sub sp,sp,#12
 5967              	.LCFI525:
 5968              	 .cfi_def_cfa_offset 16
 5969 0004 00AF     	 add r7,sp,#0
 5970              	.LCFI526:
 5971              	 .cfi_def_cfa_register 7
 5972 0006 0346     	 mov r3,r0
 5973 0008 FB80     	 strh r3,[r7,#6]
1409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 5974              	 .loc 3 1409 0
 5975 000a 00BF     	 nop
 5976              	.L388:
 5977              	 .loc 3 1409 0 is_stmt 0 discriminator 1
 5978 000c 0B4B     	 ldr r3,.L389
 5979 000e D3F8C430 	 ldr r3,[r3,#196]
 5980 0012 03F00803 	 and r3,r3,#8
 5981 0016 002B     	 cmp r3,#0
 5982 0018 F8D1     	 bne .L388
1410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk | SCU_HIB
1415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #else
1416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI0SEL_Msk)) | 
 5983              	 .loc 3 1416 0 is_stmt 1
 5984 001a 094B     	 ldr r3,.L389+4
 5985 001c 084A     	 ldr r2,.L389+4
 5986 001e D268     	 ldr r2,[r2,#12]
 5987 0020 22F48061 	 bic r1,r2,#1024
 5988 0024 FA88     	 ldrh r2,[r7,#6]
 5989 0026 0A43     	 orrs r2,r2,r1
 5990 0028 D968     	 ldr r1,[r3,#12]
 5991 002a 0021     	 movs r1,#0
 5992 002c 0A43     	 orrs r2,r2,r1
 5993 002e DA60     	 str r2,[r3,#12]
1417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif  
1418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         input;
1419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 5994              	 .loc 3 1419 0
 5995 0030 0C37     	 adds r7,r7,#12
 5996              	.LCFI527:
 5997              	 .cfi_def_cfa_offset 4
 5998 0032 BD46     	 mov sp,r7
 5999              	.LCFI528:
 6000              	 .cfi_def_cfa_register 13
 6001              	 
 6002 0034 5DF8047B 	 ldr r7,[sp],#4
 6003              	.LCFI529:
 6004              	 .cfi_restore 7
 6005              	 .cfi_def_cfa_offset 0
 6006 0038 7047     	 bx lr
 6007              	.L390:
 6008 003a 00BF     	 .align 2
 6009              	.L389:
 6010 003c 00400050 	 .word 1342193664
 6011 0040 00430050 	 .word 1342194432
 6012              	 .cfi_endproc
 6013              	.LFE263:
 6015              	 .section .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable,"ax",%progbits
 6016              	 .align 2
 6017              	 .global XMC_SCU_CLOCK_IsLowPowerOscillatorStable
 6018              	 .thumb
 6019              	 .thumb_func
 6021              	XMC_SCU_CLOCK_IsLowPowerOscillatorStable:
 6022              	.LFB264:
1420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
1422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_SetSR1Input(XMC_SCU_HIB_SR1_INPUT_t input)
1425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_HDCR_Msk)
1427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR = (SCU_HIBERNATE->HDCR & (uint32_t)~(SCU_HIBERNATE_HDCR_GPI1SEL_Msk | SCU_HIB
1431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                         input;
1432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetInput(XMC_SCU_HIB_LPAC_INPUT_t input)
1436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_CMPEN_Msk
1442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                             input;
1443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTrigger(XMC_SCU_HIB_LPAC_TRIGGER_t trigger)
1446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~SCU_HIBERNATE_LPACCONF_TRIGSEL_M
1452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                             trigger;
1453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetTiming(bool enable_delay, uint16_t interval_count, uint8_t settle_count)
1456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t config = 0;
1458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (enable_delay)
1460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     config = SCU_HIBERNATE_LPACCONF_CONVDEL_Msk;
1462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   config |= interval_count << SCU_HIBERNATE_LPACCONF_INTERVCNT_Pos;
1465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   config |= settle_count << SCU_HIBERNATE_LPACCONF_SETTLECNT_Pos;
1466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCONF_Msk)
1468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCONF = (SCU_HIBERNATE->LPACCONF &  (uint32_t)~(SCU_HIBERNATE_LPACCONF_CONVDEL_
1473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_INTERVCN
1474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                                     SCU_HIBERNATE_LPACCONF_SETTLECN
1475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                             config;
1476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetVBATThresholds(uint8_t lower, uint8_t upper)
1480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH0_Msk)
1483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH0 = (lower << SCU_HIBERNATE_LPACTH0_VBATLO_Pos) | (upper << SCU_HIBERNATE_LP
1488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO0Thresholds(uint8_t lower, uint8_t upper)
1494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Ms
1502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO0LO_Pos) |
1503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO0HI_Pos);
1504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
1507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_SetHIBIO1Thresholds(uint8_t lower, uint8_t upper)
1508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACTH1_Msk)
1511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until HDCR register in hibernate domain is ready to accept a write */
1513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACTH1 = (SCU_HIBERNATE->LPACTH1 & (uint32_t)~(SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Ms
1516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                            (lower << SCU_HIBERNATE_LPACTH1_AHIBIO1LO_Pos) |
1517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                            (upper << SCU_HIBERNATE_LPACTH1_AHIBIO1HI_Pos);
1518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** int32_t XMC_SCU_HIB_LPAC_GetStatus(void)
1522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return SCU_HIBERNATE->LPACST;
1524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_ClearStatus(int32_t status)
1527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACCLR_Msk)
1529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACCLR register in hibernate domain is ready to accept a write */
1531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACCLR = status;;
1533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_HIB_LPAC_TriggerCompare(XMC_SCU_HIB_LPAC_INPUT_t input)
1536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
1537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_LPACSET_Msk)
1538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until LPACSET register in hibernate domain is ready to accept a write */
1540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->LPACSET = input;
1543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
1544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** #endif
1546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void)
1548:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6023              	 .loc 3 1548 0
 6024              	 .cfi_startproc
 6025              	 
 6026              	 
 6027              	 
 6028 0000 80B4     	 push {r7}
 6029              	.LCFI530:
 6030              	 .cfi_def_cfa_offset 4
 6031              	 .cfi_offset 7,-4
 6032 0002 00AF     	 add r7,sp,#0
 6033              	.LCFI531:
 6034              	 .cfi_def_cfa_register 7
1549:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) == 0UL);
 6035              	 .loc 3 1549 0
 6036 0004 064B     	 ldr r3,.L393
 6037 0006 1B68     	 ldr r3,[r3]
 6038 0008 03F00803 	 and r3,r3,#8
 6039 000c 002B     	 cmp r3,#0
 6040 000e 0CBF     	 ite eq
 6041 0010 0123     	 moveq r3,#1
 6042 0012 0023     	 movne r3,#0
 6043 0014 DBB2     	 uxtb r3,r3
1550:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6044              	 .loc 3 1550 0
 6045 0016 1846     	 mov r0,r3
 6046 0018 BD46     	 mov sp,r7
 6047              	.LCFI532:
 6048              	 .cfi_def_cfa_register 13
 6049              	 
 6050 001a 5DF8047B 	 ldr r7,[sp],#4
 6051              	.LCFI533:
 6052              	 .cfi_restore 7
 6053              	 .cfi_def_cfa_offset 0
 6054 001e 7047     	 bx lr
 6055              	.L394:
 6056              	 .align 2
 6057              	.L393:
 6058 0020 00430050 	 .word 1342194432
 6059              	 .cfi_endproc
 6060              	.LFE264:
 6062              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillator,"ax",%progbits
 6063              	 .align 2
 6064              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillator
 6065              	 .thumb
 6066              	 .thumb_func
 6068              	XMC_SCU_CLOCK_EnableLowPowerOscillator:
 6069              	.LFB265:
1551:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1553:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void)
1554:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6070              	 .loc 3 1554 0
 6071              	 .cfi_startproc
 6072              	 
 6073              	 
 6074 0000 80B5     	 push {r7,lr}
 6075              	.LCFI534:
 6076              	 .cfi_def_cfa_offset 8
 6077              	 .cfi_offset 7,-8
 6078              	 .cfi_offset 14,-4
 6079 0002 00AF     	 add r7,sp,#0
 6080              	.LCFI535:
 6081              	 .cfi_def_cfa_register 7
1555:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Enable OSC_ULP */
1556:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED);
 6082              	 .loc 3 1556 0
 6083 0004 4FF40000 	 mov r0,#8388608
 6084 0008 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1557:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6085              	 .loc 3 1557 0
 6086 000c 1C4B     	 ldr r3,.L399
 6087 000e 1C4A     	 ldr r2,.L399
 6088 0010 D269     	 ldr r2,[r2,#28]
 6089 0012 22F03002 	 bic r2,r2,#48
 6090 0016 D969     	 ldr r1,[r3,#28]
 6091 0018 0021     	 movs r1,#0
 6092 001a 0A43     	 orrs r2,r2,r1
 6093 001c DA61     	 str r2,[r3,#28]
1558:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED) == 0);
 6094              	 .loc 3 1558 0
 6095 001e 00BF     	 nop
 6096              	.L396:
 6097              	 .loc 3 1558 0 is_stmt 0 discriminator 1
 6098 0020 FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6099 0024 0346     	 mov r3,r0
 6100 0026 03F40003 	 and r3,r3,#8388608
 6101 002a 002B     	 cmp r3,#0
 6102 002c F8D0     	 beq .L396
1559:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1560:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Clear ULP WDG status */
1561:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED);
 6103              	 .loc 3 1561 0 is_stmt 1
 6104 002e 4FF40030 	 mov r0,#131072
 6105 0032 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1562:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCLR = (uint32_t)SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 6106              	 .loc 3 1562 0
 6107 0036 124B     	 ldr r3,.L399
 6108 0038 5A68     	 ldr r2,[r3,#4]
 6109 003a 0022     	 movs r2,#0
 6110 003c 42F00802 	 orr r2,r2,#8
 6111 0040 5A60     	 str r2,[r3,#4]
1563:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED) == 0);
 6112              	 .loc 3 1563 0
 6113 0042 00BF     	 nop
 6114              	.L397:
 6115              	 .loc 3 1563 0 is_stmt 0 discriminator 1
 6116 0044 FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6117 0048 0346     	 mov r3,r0
 6118 004a 03F40033 	 and r3,r3,#131072
 6119 004e 002B     	 cmp r3,#0
 6120 0050 F8D0     	 beq .L397
1564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1565:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* Enable ULP WDG */
1566:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_ClearEventStatus(XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED);
 6121              	 .loc 3 1566 0 is_stmt 1
 6122 0052 4FF40020 	 mov r0,#524288
 6123 0056 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1567:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->HDCR |= (uint32_t)SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 6124              	 .loc 3 1567 0
 6125 005a 094B     	 ldr r3,.L399
 6126 005c 084A     	 ldr r2,.L399
 6127 005e D268     	 ldr r2,[r2,#12]
 6128 0060 42F00802 	 orr r2,r2,#8
 6129 0064 D968     	 ldr r1,[r3,#12]
 6130 0066 0021     	 movs r1,#0
 6131 0068 0A43     	 orrs r2,r2,r1
 6132 006a DA60     	 str r2,[r3,#12]
1568:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while ((XMC_SCU_INTERUPT_GetEventStatus() & XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED) == 0);
 6133              	 .loc 3 1568 0
 6134 006c 00BF     	 nop
 6135              	.L398:
 6136              	 .loc 3 1568 0 is_stmt 0 discriminator 1
 6137 006e FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 6138 0072 0346     	 mov r3,r0
 6139 0074 03F40023 	 and r3,r3,#524288
 6140 0078 002B     	 cmp r3,#0
 6141 007a F8D0     	 beq .L398
1569:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6142              	 .loc 3 1569 0 is_stmt 1
 6143 007c 80BD     	 pop {r7,pc}
 6144              	.L400:
 6145 007e 00BF     	 .align 2
 6146              	.L399:
 6147 0080 00430050 	 .word 1342194432
 6148              	 .cfi_endproc
 6149              	.LFE265:
 6151              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillator,"ax",%progbits
 6152              	 .align 2
 6153              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillator
 6154              	 .thumb
 6155              	 .thumb_func
 6157              	XMC_SCU_CLOCK_DisableLowPowerOscillator:
 6158              	.LFB266:
1570:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1571:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to configure the 32khz Ultra Low Power oscillator */
1572:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void)
1573:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6159              	 .loc 3 1573 0
 6160              	 .cfi_startproc
 6161              	 
 6162              	 
 6163              	 
 6164 0000 80B4     	 push {r7}
 6165              	.LCFI536:
 6166              	 .cfi_def_cfa_offset 4
 6167              	 .cfi_offset 7,-4
 6168 0002 00AF     	 add r7,sp,#0
 6169              	.LCFI537:
 6170              	 .cfi_def_cfa_register 7
1574:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6171              	 .loc 3 1574 0
 6172 0004 00BF     	 nop
 6173              	.L402:
 6174              	 .loc 3 1574 0 is_stmt 0 discriminator 1
 6175 0006 0A4B     	 ldr r3,.L403
 6176 0008 D3F8C430 	 ldr r3,[r3,#196]
 6177 000c 03F08003 	 and r3,r3,#128
 6178 0010 002B     	 cmp r3,#0
 6179 0012 F8D1     	 bne .L402
1575:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1576:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1577:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1578:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= (uint32_t)SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6180              	 .loc 3 1578 0 is_stmt 1
 6181 0014 074B     	 ldr r3,.L403+4
 6182 0016 074A     	 ldr r2,.L403+4
 6183 0018 D269     	 ldr r2,[r2,#28]
 6184 001a 42F03002 	 orr r2,r2,#48
 6185 001e D969     	 ldr r1,[r3,#28]
 6186 0020 0021     	 movs r1,#0
 6187 0022 0A43     	 orrs r2,r2,r1
 6188 0024 DA61     	 str r2,[r3,#28]
1579:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6189              	 .loc 3 1579 0
 6190 0026 BD46     	 mov sp,r7
 6191              	.LCFI538:
 6192              	 .cfi_def_cfa_register 13
 6193              	 
 6194 0028 5DF8047B 	 ldr r7,[sp],#4
 6195              	.LCFI539:
 6196              	 .cfi_restore 7
 6197              	 .cfi_def_cfa_offset 0
 6198 002c 7047     	 bx lr
 6199              	.L404:
 6200 002e 00BF     	 .align 2
 6201              	.L403:
 6202 0030 00400050 	 .word 1342193664
 6203 0034 00430050 	 .word 1342194432
 6204              	 .cfi_endproc
 6205              	.LFE266:
 6207              	 .section .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 6208              	 .align 2
 6209              	 .global XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
 6210              	 .thumb
 6211              	 .thumb_func
 6213              	XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:
 6214              	.LFB267:
1580:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void)
1582:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6215              	 .loc 3 1582 0
 6216              	 .cfi_startproc
 6217              	 
 6218              	 
 6219              	 
 6220 0000 80B4     	 push {r7}
 6221              	.LCFI540:
 6222              	 .cfi_def_cfa_offset 4
 6223              	 .cfi_offset 7,-4
 6224 0002 00AF     	 add r7,sp,#0
 6225              	.LCFI541:
 6226              	 .cfi_def_cfa_register 7
1583:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6227              	 .loc 3 1583 0
 6228 0004 00BF     	 nop
 6229              	.L406:
 6230              	 .loc 3 1583 0 is_stmt 0 discriminator 1
 6231 0006 0A4B     	 ldr r3,.L407
 6232 0008 D3F8C430 	 ldr r3,[r3,#196]
 6233 000c 03F08003 	 and r3,r3,#128
 6234 0010 002B     	 cmp r3,#0
 6235 0012 F8D1     	 bne .L406
1584:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1585:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1586:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1587:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL |= SCU_HIBERNATE_OSCULCTRL_X1DEN_Msk | SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 6236              	 .loc 3 1587 0 is_stmt 1
 6237 0014 074B     	 ldr r3,.L407+4
 6238 0016 074A     	 ldr r2,.L407+4
 6239 0018 D269     	 ldr r2,[r2,#28]
 6240 001a 42F03102 	 orr r2,r2,#49
 6241 001e D969     	 ldr r1,[r3,#28]
 6242 0020 0021     	 movs r1,#0
 6243 0022 0A43     	 orrs r2,r2,r1
 6244 0024 DA61     	 str r2,[r3,#28]
1588:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6245              	 .loc 3 1588 0
 6246 0026 BD46     	 mov sp,r7
 6247              	.LCFI542:
 6248              	 .cfi_def_cfa_register 13
 6249              	 
 6250 0028 5DF8047B 	 ldr r7,[sp],#4
 6251              	.LCFI543:
 6252              	 .cfi_restore 7
 6253              	 .cfi_def_cfa_offset 0
 6254 002c 7047     	 bx lr
 6255              	.L408:
 6256 002e 00BF     	 .align 2
 6257              	.L407:
 6258 0030 00400050 	 .word 1342193664
 6259 0034 00430050 	 .word 1342194432
 6260              	 .cfi_endproc
 6261              	.LFE267:
 6263              	 .section .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput,"ax",%progbits
 6264              	 .align 2
 6265              	 .global XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
 6266              	 .thumb
 6267              	 .thumb_func
 6269              	XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:
 6270              	.LFB268:
1589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void)
1591:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6271              	 .loc 3 1591 0
 6272              	 .cfi_startproc
 6273              	 
 6274              	 
 6275              	 
 6276 0000 80B4     	 push {r7}
 6277              	.LCFI544:
 6278              	 .cfi_def_cfa_offset 4
 6279              	 .cfi_offset 7,-4
 6280 0002 00AF     	 add r7,sp,#0
 6281              	.LCFI545:
 6282              	 .cfi_def_cfa_register 7
1592:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while((SCU_GENERAL->MIRRSTS) & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 6283              	 .loc 3 1592 0
 6284 0004 00BF     	 nop
 6285              	.L410:
 6286              	 .loc 3 1592 0 is_stmt 0 discriminator 1
 6287 0006 0B4B     	 ldr r3,.L411
 6288 0008 D3F8C430 	 ldr r3,[r3,#196]
 6289 000c 03F08003 	 and r3,r3,#128
 6290 0010 002B     	 cmp r3,#0
 6291 0012 F8D1     	 bne .L410
1593:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1594:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Wait until OSCULCTRL register in hibernate domain is ready to accept a write */    
1595:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1596:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_HIBERNATE->OSCULCTRL = (SCU_HIBERNATE->OSCULCTRL & ~(uint32_t)(SCU_HIBERNATE_OSCULCTRL_X1DEN_
 6292              	 .loc 3 1596 0 is_stmt 1
 6293 0014 084B     	 ldr r3,.L411+4
 6294 0016 084A     	 ldr r2,.L411+4
 6295 0018 D269     	 ldr r2,[r2,#28]
 6296 001a 22F03102 	 bic r2,r2,#49
 6297 001e 42F02002 	 orr r2,r2,#32
 6298 0022 D969     	 ldr r1,[r3,#28]
 6299 0024 0021     	 movs r1,#0
 6300 0026 0A43     	 orrs r2,r2,r1
 6301 0028 DA61     	 str r2,[r3,#28]
1597:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                              (SCU_HIBERNATE_OSCULCTRL_MODE_OSC_POWER_DOWN << SCU_HIBERNATE_OSCULCTR
1598:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6302              	 .loc 3 1598 0
 6303 002a BD46     	 mov sp,r7
 6304              	.LCFI546:
 6305              	 .cfi_def_cfa_register 13
 6306              	 
 6307 002c 5DF8047B 	 ldr r7,[sp],#4
 6308              	.LCFI547:
 6309              	 .cfi_restore 7
 6310              	 .cfi_def_cfa_offset 0
 6311 0030 7047     	 bx lr
 6312              	.L412:
 6313 0032 00BF     	 .align 2
 6314              	.L411:
 6315 0034 00400050 	 .word 1342193664
 6316 0038 00430050 	 .word 1342194432
 6317              	 .cfi_endproc
 6318              	.LFE268:
 6320              	 .section .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus,"ax",%progbits
 6321              	 .align 2
 6322              	 .global XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
 6323              	 .thumb
 6324              	 .thumb_func
 6326              	XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:
 6327              	.LFB269:
1599:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1600:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void)
1601:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6328              	 .loc 3 1601 0
 6329              	 .cfi_startproc
 6330              	 
 6331              	 
 6332              	 
 6333 0000 80B4     	 push {r7}
 6334              	.LCFI548:
 6335              	 .cfi_def_cfa_offset 4
 6336              	 .cfi_offset 7,-4
 6337 0002 00AF     	 add r7,sp,#0
 6338              	.LCFI549:
 6339              	 .cfi_def_cfa_register 7
1602:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (SCU_HIBERNATE->OSCULSTAT & SCU_HIBERNATE_OSCULSTAT_X1D_Msk);
 6340              	 .loc 3 1602 0
 6341 0004 044B     	 ldr r3,.L415
 6342 0006 9B69     	 ldr r3,[r3,#24]
 6343 0008 03F00103 	 and r3,r3,#1
1603:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6344              	 .loc 3 1603 0
 6345 000c 1846     	 mov r0,r3
 6346 000e BD46     	 mov sp,r7
 6347              	.LCFI550:
 6348              	 .cfi_def_cfa_register 13
 6349              	 
 6350 0010 5DF8047B 	 ldr r7,[sp],#4
 6351              	.LCFI551:
 6352              	 .cfi_restore 7
 6353              	 .cfi_def_cfa_offset 0
 6354 0014 7047     	 bx lr
 6355              	.L416:
 6356 0016 00BF     	 .align 2
 6357              	.L415:
 6358 0018 00430050 	 .word 1342194432
 6359              	 .cfi_endproc
 6360              	.LFE269:
 6362              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator,"ax",%progbits
 6363              	 .align 2
 6364              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillator
 6365              	 .thumb
 6366              	 .thumb_func
 6368              	XMC_SCU_CLOCK_EnableHighPerformanceOscillator:
 6369              	.LFB270:
1604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable High Precision High Speed oscillator */
1606:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void)
1607:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6370              	 .loc 3 1607 0
 6371              	 .cfi_startproc
 6372              	 
 6373              	 
 6374 0000 B0B5     	 push {r4,r5,r7,lr}
 6375              	.LCFI552:
 6376              	 .cfi_def_cfa_offset 16
 6377              	 .cfi_offset 4,-16
 6378              	 .cfi_offset 5,-12
 6379              	 .cfi_offset 7,-8
 6380              	 .cfi_offset 14,-4
 6381 0002 00AF     	 add r7,sp,#0
 6382              	.LCFI553:
 6383              	 .cfi_def_cfa_register 7
1608:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_PLLPWD_Msk;
 6384              	 .loc 3 1608 0
 6385 0004 134B     	 ldr r3,.L418
 6386 0006 134A     	 ldr r2,.L418
 6387 0008 5268     	 ldr r2,[r2,#4]
 6388 000a 22F48032 	 bic r2,r2,#65536
 6389 000e 5968     	 ldr r1,[r3,#4]
 6390 0010 0021     	 movs r1,#0
 6391 0012 0A43     	 orrs r2,r2,r1
 6392 0014 5A60     	 str r2,[r3,#4]
1609:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL = (uint32_t)((SCU_OSC->OSCHPCTRL & ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCH
 6393              	 .loc 3 1610 0
 6394 0016 104D     	 ldr r5,.L418+4
 6395 0018 0F4B     	 ldr r3,.L418+4
 6396 001a 5B68     	 ldr r3,[r3,#4]
 6397 001c 23F47024 	 bic r4,r3,#983040
 6398 0020 24F03004 	 bic r4,r4,#48
1611:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 6399              	 .loc 3 1611 0
 6400 0024 FFF7FEFF 	 bl OSCHP_GetFrequency
 6401 0028 0246     	 mov r2,r0
 6402 002a 0C4B     	 ldr r3,.L418+8
 6403 002c A3FB0223 	 umull r2,r3,r3,r2
 6404 0030 1B0D     	 lsrs r3,r3,#20
 6405 0032 013B     	 subs r3,r3,#1
 6406 0034 1B04     	 lsls r3,r3,#16
1610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                   (((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OS
 6407              	 .loc 3 1610 0
 6408 0036 2343     	 orrs r3,r3,r4
 6409 0038 6A68     	 ldr r2,[r5,#4]
 6410 003a 0022     	 movs r2,#0
 6411 003c 1343     	 orrs r3,r3,r2
 6412 003e 6B60     	 str r3,[r5,#4]
1612:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   /* restart OSC Watchdog */
1614:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_OSCRES_Msk;
 6413              	 .loc 3 1614 0
 6414 0040 044B     	 ldr r3,.L418
 6415 0042 044A     	 ldr r2,.L418
 6416 0044 5268     	 ldr r2,[r2,#4]
 6417 0046 22F40032 	 bic r2,r2,#131072
 6418 004a 5968     	 ldr r1,[r3,#4]
 6419 004c 0021     	 movs r1,#0
 6420 004e 0A43     	 orrs r2,r2,r1
 6421 0050 5A60     	 str r2,[r3,#4]
1615:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6422              	 .loc 3 1615 0
 6423 0052 B0BD     	 pop {r4,r5,r7,pc}
 6424              	.L419:
 6425              	 .align 2
 6426              	.L418:
 6427 0054 10470050 	 .word 1342195472
 6428 0058 00470050 	 .word 1342195456
 6429 005c 6BCA5F6B 	 .word 1801439851
 6430              	 .cfi_endproc
 6431              	.LFE270:
 6433              	 .section .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable,"ax",%progbits
 6434              	 .align 2
 6435              	 .global XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
 6436              	 .thumb
 6437              	 .thumb_func
 6439              	XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:
 6440              	.LFB271:
1616:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1617:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void)
1618:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6441              	 .loc 3 1618 0
 6442              	 .cfi_startproc
 6443              	 
 6444              	 
 6445              	 
 6446 0000 80B4     	 push {r7}
 6447              	.LCFI554:
 6448              	 .cfi_def_cfa_offset 4
 6449              	 .cfi_offset 7,-4
 6450 0002 00AF     	 add r7,sp,#0
 6451              	.LCFI555:
 6452              	 .cfi_def_cfa_register 7
1619:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return ((SCU_PLL->PLLSTAT & XMC_SCU_PLL_PLLSTAT_OSC_USABLE) == XMC_SCU_PLL_PLLSTAT_OSC_USABLE);
 6453              	 .loc 3 1619 0
 6454 0004 074B     	 ldr r3,.L422
 6455 0006 1B68     	 ldr r3,[r3]
 6456 0008 03F46073 	 and r3,r3,#896
 6457 000c B3F5607F 	 cmp r3,#896
 6458 0010 0CBF     	 ite eq
 6459 0012 0123     	 moveq r3,#1
 6460 0014 0023     	 movne r3,#0
 6461 0016 DBB2     	 uxtb r3,r3
1620:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6462              	 .loc 3 1620 0
 6463 0018 1846     	 mov r0,r3
 6464 001a BD46     	 mov sp,r7
 6465              	.LCFI556:
 6466              	 .cfi_def_cfa_register 13
 6467              	 
 6468 001c 5DF8047B 	 ldr r7,[sp],#4
 6469              	.LCFI557:
 6470              	 .cfi_restore 7
 6471              	 .cfi_def_cfa_offset 0
 6472 0020 7047     	 bx lr
 6473              	.L423:
 6474 0022 00BF     	 .align 2
 6475              	.L422:
 6476 0024 10470050 	 .word 1342195472
 6477              	 .cfi_endproc
 6478              	.LFE271:
 6480              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator,"ax",%progbits
 6481              	 .align 2
 6482              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillator
 6483              	 .thumb
 6484              	 .thumb_func
 6486              	XMC_SCU_CLOCK_DisableHighPerformanceOscillator:
 6487              	.LFB272:
1621:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1622:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable High Precision High Speed oscillator */
1623:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void)
1624:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6488              	 .loc 3 1624 0
 6489              	 .cfi_startproc
 6490              	 
 6491              	 
 6492              	 
 6493 0000 80B4     	 push {r7}
 6494              	.LCFI558:
 6495              	 .cfi_def_cfa_offset 4
 6496              	 .cfi_offset 7,-4
 6497 0002 00AF     	 add r7,sp,#0
 6498              	.LCFI559:
 6499              	 .cfi_def_cfa_register 7
1625:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= (uint32_t)SCU_OSC_OSCHPCTRL_MODE_Msk;
 6500              	 .loc 3 1625 0
 6501 0004 064B     	 ldr r3,.L425
 6502 0006 064A     	 ldr r2,.L425
 6503 0008 5268     	 ldr r2,[r2,#4]
 6504 000a 42F03002 	 orr r2,r2,#48
 6505 000e 5968     	 ldr r1,[r3,#4]
 6506 0010 0021     	 movs r1,#0
 6507 0012 0A43     	 orrs r2,r2,r1
 6508 0014 5A60     	 str r2,[r3,#4]
1626:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6509              	 .loc 3 1626 0
 6510 0016 BD46     	 mov sp,r7
 6511              	.LCFI560:
 6512              	 .cfi_def_cfa_register 13
 6513              	 
 6514 0018 5DF8047B 	 ldr r7,[sp],#4
 6515              	.LCFI561:
 6516              	 .cfi_restore 7
 6517              	 .cfi_def_cfa_offset 0
 6518 001c 7047     	 bx lr
 6519              	.L426:
 6520 001e 00BF     	 .align 2
 6521              	.L425:
 6522 0020 00470050 	 .word 1342195456
 6523              	 .cfi_endproc
 6524              	.LFE272:
 6526              	 .section .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 6527              	 .align 2
 6528              	 .global XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
 6529              	 .thumb
 6530              	 .thumb_func
 6532              	XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:
 6533              	.LFB273:
1627:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1628:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void)
1629:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6534              	 .loc 3 1629 0
 6535              	 .cfi_startproc
 6536              	 
 6537              	 
 6538              	 
 6539 0000 80B4     	 push {r7}
 6540              	.LCFI562:
 6541              	 .cfi_def_cfa_offset 4
 6542              	 .cfi_offset 7,-4
 6543 0002 00AF     	 add r7,sp,#0
 6544              	.LCFI563:
 6545              	 .cfi_def_cfa_register 7
1630:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL |= SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 6546              	 .loc 3 1630 0
 6547 0004 064B     	 ldr r3,.L428
 6548 0006 064A     	 ldr r2,.L428
 6549 0008 5268     	 ldr r2,[r2,#4]
 6550 000a 42F00102 	 orr r2,r2,#1
 6551 000e 5968     	 ldr r1,[r3,#4]
 6552 0010 0021     	 movs r1,#0
 6553 0012 0A43     	 orrs r2,r2,r1
 6554 0014 5A60     	 str r2,[r3,#4]
1631:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6555              	 .loc 3 1631 0
 6556 0016 BD46     	 mov sp,r7
 6557              	.LCFI564:
 6558              	 .cfi_def_cfa_register 13
 6559              	 
 6560 0018 5DF8047B 	 ldr r7,[sp],#4
 6561              	.LCFI565:
 6562              	 .cfi_restore 7
 6563              	 .cfi_def_cfa_offset 0
 6564 001c 7047     	 bx lr
 6565              	.L429:
 6566 001e 00BF     	 .align 2
 6567              	.L428:
 6568 0020 00470050 	 .word 1342195456
 6569              	 .cfi_endproc
 6570              	.LFE273:
 6572              	 .section .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput,"ax",%progbits
 6573              	 .align 2
 6574              	 .global XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
 6575              	 .thumb
 6576              	 .thumb_func
 6578              	XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:
 6579              	.LFB274:
1632:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1633:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void)
1634:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6580              	 .loc 3 1634 0
 6581              	 .cfi_startproc
 6582              	 
 6583              	 
 6584              	 
 6585 0000 80B4     	 push {r7}
 6586              	.LCFI566:
 6587              	 .cfi_def_cfa_offset 4
 6588              	 .cfi_offset 7,-4
 6589 0002 00AF     	 add r7,sp,#0
 6590              	.LCFI567:
 6591              	 .cfi_def_cfa_register 7
1635:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_OSC->OSCHPCTRL &= ~SCU_OSC_OSCHPCTRL_X1DEN_Msk;
 6592              	 .loc 3 1635 0
 6593 0004 064B     	 ldr r3,.L431
 6594 0006 064A     	 ldr r2,.L431
 6595 0008 5268     	 ldr r2,[r2,#4]
 6596 000a 22F00102 	 bic r2,r2,#1
 6597 000e 5968     	 ldr r1,[r3,#4]
 6598 0010 0021     	 movs r1,#0
 6599 0012 0A43     	 orrs r2,r2,r1
 6600 0014 5A60     	 str r2,[r3,#4]
1636:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6601              	 .loc 3 1636 0
 6602 0016 BD46     	 mov sp,r7
 6603              	.LCFI568:
 6604              	 .cfi_def_cfa_register 13
 6605              	 
 6606 0018 5DF8047B 	 ldr r7,[sp],#4
 6607              	.LCFI569:
 6608              	 .cfi_restore 7
 6609              	 .cfi_def_cfa_offset 0
 6610 001c 7047     	 bx lr
 6611              	.L432:
 6612 001e 00BF     	 .align 2
 6613              	.L431:
 6614 0020 00470050 	 .word 1342195456
 6615              	 .cfi_endproc
 6616              	.LFE274:
 6618              	 .section .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus,"ax",%progbits
 6619              	 .align 2
 6620              	 .global XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
 6621              	 .thumb
 6622              	 .thumb_func
 6624              	XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:
 6625              	.LFB275:
1637:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1638:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void)
1639:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6626              	 .loc 3 1639 0
 6627              	 .cfi_startproc
 6628              	 
 6629              	 
 6630              	 
 6631 0000 80B4     	 push {r7}
 6632              	.LCFI570:
 6633              	 .cfi_def_cfa_offset 4
 6634              	 .cfi_offset 7,-4
 6635 0002 00AF     	 add r7,sp,#0
 6636              	.LCFI571:
 6637              	 .cfi_def_cfa_register 7
1640:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (SCU_OSC->OSCHPSTAT & SCU_OSC_OSCHPSTAT_X1D_Msk);
 6638              	 .loc 3 1640 0
 6639 0004 044B     	 ldr r3,.L435
 6640 0006 1B68     	 ldr r3,[r3]
 6641 0008 03F00103 	 and r3,r3,#1
1641:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6642              	 .loc 3 1641 0
 6643 000c 1846     	 mov r0,r3
 6644 000e BD46     	 mov sp,r7
 6645              	.LCFI572:
 6646              	 .cfi_def_cfa_register 13
 6647              	 
 6648 0010 5DF8047B 	 ldr r7,[sp],#4
 6649              	.LCFI573:
 6650              	 .cfi_restore 7
 6651              	 .cfi_def_cfa_offset 0
 6652 0014 7047     	 bx lr
 6653              	.L436:
 6654 0016 00BF     	 .align 2
 6655              	.L435:
 6656 0018 00470050 	 .word 1342195456
 6657              	 .cfi_endproc
 6658              	.LFE275:
 6660              	 .section .text.XMC_SCU_CLOCK_EnableSystemPll,"ax",%progbits
 6661              	 .align 2
 6662              	 .global XMC_SCU_CLOCK_EnableSystemPll
 6663              	 .thumb
 6664              	 .thumb_func
 6666              	XMC_SCU_CLOCK_EnableSystemPll:
 6667              	.LFB276:
1642:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1643:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to enable main PLL */
1644:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_EnableSystemPll(void)
1645:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6668              	 .loc 3 1645 0
 6669              	 .cfi_startproc
 6670              	 
 6671              	 
 6672              	 
 6673 0000 80B4     	 push {r7}
 6674              	.LCFI574:
 6675              	 .cfi_def_cfa_offset 4
 6676              	 .cfi_offset 7,-4
 6677 0002 00AF     	 add r7,sp,#0
 6678              	.LCFI575:
 6679              	 .cfi_def_cfa_register 7
1646:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 &= (uint32_t)~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 6680              	 .loc 3 1646 0
 6681 0004 074A     	 ldr r2,.L438
 6682 0006 074B     	 ldr r3,.L438
 6683 0008 5B68     	 ldr r3,[r3,#4]
 6684 000a 23F48033 	 bic r3,r3,#65536
 6685 000e 23F00203 	 bic r3,r3,#2
 6686 0012 5168     	 ldr r1,[r2,#4]
 6687 0014 0021     	 movs r1,#0
 6688 0016 0B43     	 orrs r3,r3,r1
 6689 0018 5360     	 str r3,[r2,#4]
1647:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6690              	 .loc 3 1647 0
 6691 001a BD46     	 mov sp,r7
 6692              	.LCFI576:
 6693              	 .cfi_def_cfa_register 13
 6694              	 
 6695 001c 5DF8047B 	 ldr r7,[sp],#4
 6696              	.LCFI577:
 6697              	 .cfi_restore 7
 6698              	 .cfi_def_cfa_offset 0
 6699 0020 7047     	 bx lr
 6700              	.L439:
 6701 0022 00BF     	 .align 2
 6702              	.L438:
 6703 0024 10470050 	 .word 1342195472
 6704              	 .cfi_endproc
 6705              	.LFE276:
 6707              	 .section .text.XMC_SCU_CLOCK_DisableSystemPll,"ax",%progbits
 6708              	 .align 2
 6709              	 .global XMC_SCU_CLOCK_DisableSystemPll
 6710              	 .thumb
 6711              	 .thumb_func
 6713              	XMC_SCU_CLOCK_DisableSystemPll:
 6714              	.LFB277:
1648:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1649:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to disable main PLL */
1650:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_DisableSystemPll(void)
1651:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6715              	 .loc 3 1651 0
 6716              	 .cfi_startproc
 6717              	 
 6718              	 
 6719              	 
 6720 0000 80B4     	 push {r7}
 6721              	.LCFI578:
 6722              	 .cfi_def_cfa_offset 4
 6723              	 .cfi_offset 7,-4
 6724 0002 00AF     	 add r7,sp,#0
 6725              	.LCFI579:
 6726              	 .cfi_def_cfa_register 7
1652:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 6727              	 .loc 3 1652 0
 6728 0004 074A     	 ldr r2,.L441
 6729 0006 074B     	 ldr r3,.L441
 6730 0008 5B68     	 ldr r3,[r3,#4]
 6731 000a 43F48033 	 orr r3,r3,#65536
 6732 000e 43F00203 	 orr r3,r3,#2
 6733 0012 5168     	 ldr r1,[r2,#4]
 6734 0014 0021     	 movs r1,#0
 6735 0016 0B43     	 orrs r3,r3,r1
 6736 0018 5360     	 str r3,[r2,#4]
1653:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6737              	 .loc 3 1653 0
 6738 001a BD46     	 mov sp,r7
 6739              	.LCFI580:
 6740              	 .cfi_def_cfa_register 13
 6741              	 
 6742 001c 5DF8047B 	 ldr r7,[sp],#4
 6743              	.LCFI581:
 6744              	 .cfi_restore 7
 6745              	 .cfi_def_cfa_offset 0
 6746 0020 7047     	 bx lr
 6747              	.L442:
 6748 0022 00BF     	 .align 2
 6749              	.L441:
 6750 0024 10470050 	 .word 1342195472
 6751              	 .cfi_endproc
 6752              	.LFE277:
 6754              	 .section .text.XMC_SCU_CLOCK_StartSystemPll,"ax",%progbits
 6755              	 .align 2
 6756              	 .global XMC_SCU_CLOCK_StartSystemPll
 6757              	 .thumb
 6758              	 .thumb_func
 6760              	XMC_SCU_CLOCK_StartSystemPll:
 6761              	.LFB278:
1654:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1655:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to configure main PLL */
1656:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StartSystemPll(XMC_SCU_CLOCK_SYSPLLCLKSRC_t source,
1657:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                   XMC_SCU_CLOCK_SYSPLL_MODE_t mode,
1658:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                   uint32_t pdiv,
1659:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                   uint32_t ndiv,
1660:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                   uint32_t kdiv)
1661:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 6762              	 .loc 3 1661 0
 6763              	 .cfi_startproc
 6764              	 
 6765              	 
 6766 0000 80B5     	 push {r7,lr}
 6767              	.LCFI582:
 6768              	 .cfi_def_cfa_offset 8
 6769              	 .cfi_offset 7,-8
 6770              	 .cfi_offset 14,-4
 6771 0002 86B0     	 sub sp,sp,#24
 6772              	.LCFI583:
 6773              	 .cfi_def_cfa_offset 32
 6774 0004 00AF     	 add r7,sp,#0
 6775              	.LCFI584:
 6776              	 .cfi_def_cfa_register 7
 6777 0006 BA60     	 str r2,[r7,#8]
 6778 0008 7B60     	 str r3,[r7,#4]
 6779 000a 0346     	 mov r3,r0
 6780 000c FB81     	 strh r3,[r7,#14]
 6781 000e 0B46     	 mov r3,r1
 6782 0010 7B73     	 strb r3,[r7,#13]
1662:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1663:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t vco_frequency; /* Q10.22, max VCO frequency = 520MHz */
1664:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t kdiv_temp;
1665:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1666:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_CLOCK_SetSystemPllClockSource(source);
 6783              	 .loc 3 1666 0
 6784 0012 FB89     	 ldrh r3,[r7,#14]
 6785 0014 1846     	 mov r0,r3
 6786 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_SetSystemPllClockSource
1667:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1668:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (mode == XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL)
 6787              	 .loc 3 1668 0
 6788 001a 7B7B     	 ldrb r3,[r7,#13]
 6789 001c 012B     	 cmp r3,#1
 6790 001e 40F09980 	 bne .L444
1669:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1670:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Calculate initial step to be close to fOFI */
1671:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     if (source == XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP)
 6791              	 .loc 3 1671 0
 6792 0022 FB89     	 ldrh r3,[r7,#14]
 6793 0024 002B     	 cmp r3,#0
 6794 0026 09D1     	 bne .L445
1672:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OSCHP_GetFrequency() / 1000000U) << 22;
 6795              	 .loc 3 1673 0
 6796 0028 FFF7FEFF 	 bl OSCHP_GetFrequency
 6797 002c 0246     	 mov r2,r0
 6798 002e 594B     	 ldr r3,.L453
 6799 0030 A3FB0223 	 umull r2,r3,r3,r2
 6800 0034 9B0C     	 lsrs r3,r3,#18
 6801 0036 9B05     	 lsls r3,r3,#22
 6802 0038 7B61     	 str r3,[r7,#20]
 6803 003a 02E0     	 b .L446
 6804              	.L445:
1674:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
1675:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     else
1676:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1677:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       vco_frequency = (OFI_FREQUENCY / 1000000U) << 22;
 6805              	 .loc 3 1677 0
 6806 003c 4FF0C063 	 mov r3,#100663296
 6807 0040 7B61     	 str r3,[r7,#20]
 6808              	.L446:
1678:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
1679:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     vco_frequency = ((vco_frequency * ndiv) / pdiv);
 6809              	 .loc 3 1679 0
 6810 0042 7B69     	 ldr r3,[r7,#20]
 6811 0044 7A68     	 ldr r2,[r7,#4]
 6812 0046 02FB03F2 	 mul r2,r2,r3
 6813 004a BB68     	 ldr r3,[r7,#8]
 6814 004c B2FBF3F3 	 udiv r3,r2,r3
 6815 0050 7B61     	 str r3,[r7,#20]
1680:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / (OFI_FREQUENCY / 1000000U)) >> 22;
 6816              	 .loc 3 1680 0
 6817 0052 7B69     	 ldr r3,[r7,#20]
 6818 0054 504A     	 ldr r2,.L453+4
 6819 0056 A2FB0323 	 umull r2,r3,r2,r3
 6820 005a 1B09     	 lsrs r3,r3,#4
 6821 005c 9B0D     	 lsrs r3,r3,#22
 6822 005e 3B61     	 str r3,[r7,#16]
1681:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1682:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1683:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 6823              	 .loc 3 1683 0
 6824 0060 4E4B     	 ldr r3,.L453+8
 6825 0062 4E4A     	 ldr r2,.L453+8
 6826 0064 5268     	 ldr r2,[r2,#4]
 6827 0066 42F00102 	 orr r2,r2,#1
 6828 006a 5968     	 ldr r1,[r3,#4]
 6829 006c 0021     	 movs r1,#0
 6830 006e 0A43     	 orrs r2,r2,r1
 6831 0070 5A60     	 str r2,[r3,#4]
1684:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1685:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* disconnect Oscillator from PLL */
1686:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_FINDIS_Msk;
 6832              	 .loc 3 1686 0
 6833 0072 4A4B     	 ldr r3,.L453+8
 6834 0074 494A     	 ldr r2,.L453+8
 6835 0076 5268     	 ldr r2,[r2,#4]
 6836 0078 42F01002 	 orr r2,r2,#16
 6837 007c 5968     	 ldr r1,[r3,#4]
 6838 007e 0021     	 movs r1,#0
 6839 0080 0A43     	 orrs r2,r2,r1
 6840 0082 5A60     	 str r2,[r3,#4]
1687:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1688:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Setup divider settings for main PLL */
1689:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~(SCU_PLL_PLLCON1_NDIV_Msk | SCU_PLL_PLLCON1_
 6841              	 .loc 3 1689 0
 6842 0084 454A     	 ldr r2,.L453+8
 6843 0086 454B     	 ldr r3,.L453+8
 6844 0088 9968     	 ldr r1,[r3,#8]
 6845 008a 454B     	 ldr r3,.L453+12
 6846 008c 0B40     	 ands r3,r3,r1
1690:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6847              	 .loc 3 1690 0
 6848 008e 7968     	 ldr r1,[r7,#4]
 6849 0090 0139     	 subs r1,r1,#1
 6850 0092 0902     	 lsls r1,r1,#8
 6851 0094 1943     	 orrs r1,r1,r3
1691:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                    ((kdiv_temp - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos) |
 6852              	 .loc 3 1691 0
 6853 0096 3B69     	 ldr r3,[r7,#16]
 6854 0098 013B     	 subs r3,r3,#1
 6855 009a 1B04     	 lsls r3,r3,#16
1690:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6856              	 .loc 3 1690 0
 6857 009c 1943     	 orrs r1,r1,r3
1692:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                    ((pdiv - 1UL)<< SCU_PLL_PLLCON1_PDIV_Pos));
 6858              	 .loc 3 1692 0
 6859 009e BB68     	 ldr r3,[r7,#8]
 6860 00a0 013B     	 subs r3,r3,#1
 6861 00a2 1B06     	 lsls r3,r3,#24
1689:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                    SCU_PLL_PLLCON1_PDIV_Msk)) | ((ndiv - 1UL) << SCU_PLL_PLLCON1_ND
 6862              	 .loc 3 1689 0
 6863 00a4 0B43     	 orrs r3,r3,r1
 6864 00a6 9168     	 ldr r1,[r2,#8]
 6865 00a8 0021     	 movs r1,#0
 6866 00aa 0B43     	 orrs r3,r3,r1
 6867 00ac 9360     	 str r3,[r2,#8]
1693:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1694:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Set OSCDISCDIS, OSC clock remains connected to the VCO in case of loss of lock */
1695:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 6868              	 .loc 3 1695 0
 6869 00ae 3B4B     	 ldr r3,.L453+8
 6870 00b0 3A4A     	 ldr r2,.L453+8
 6871 00b2 5268     	 ldr r2,[r2,#4]
 6872 00b4 42F04002 	 orr r2,r2,#64
 6873 00b8 5968     	 ldr r1,[r3,#4]
 6874 00ba 0021     	 movs r1,#0
 6875 00bc 0A43     	 orrs r2,r2,r1
 6876 00be 5A60     	 str r2,[r3,#4]
1696:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1697:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* connect Oscillator to PLL */
1698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_FINDIS_Msk;
 6877              	 .loc 3 1698 0
 6878 00c0 364B     	 ldr r3,.L453+8
 6879 00c2 364A     	 ldr r2,.L453+8
 6880 00c4 5268     	 ldr r2,[r2,#4]
 6881 00c6 22F01002 	 bic r2,r2,#16
 6882 00ca 5968     	 ldr r1,[r3,#4]
 6883 00cc 0021     	 movs r1,#0
 6884 00ce 0A43     	 orrs r2,r2,r1
 6885 00d0 5A60     	 str r2,[r3,#4]
1699:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1700:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* restart PLL Lock detection */
1701:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_RESLD_Msk;
 6886              	 .loc 3 1701 0
 6887 00d2 324B     	 ldr r3,.L453+8
 6888 00d4 314A     	 ldr r2,.L453+8
 6889 00d6 5268     	 ldr r2,[r2,#4]
 6890 00d8 42F48022 	 orr r2,r2,#262144
 6891 00dc 5968     	 ldr r1,[r3,#4]
 6892 00de 0021     	 movs r1,#0
 6893 00e0 0A43     	 orrs r2,r2,r1
 6894 00e2 5A60     	 str r2,[r3,#4]
1702:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 6895              	 .loc 3 1702 0
 6896 00e4 00BF     	 nop
 6897              	.L447:
 6898              	 .loc 3 1702 0 is_stmt 0 discriminator 1
 6899 00e6 2D4B     	 ldr r3,.L453+8
 6900 00e8 1B68     	 ldr r3,[r3]
 6901 00ea 03F00403 	 and r3,r3,#4
 6902 00ee 002B     	 cmp r3,#0
 6903 00f0 F9D0     	 beq .L447
1703:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1704:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       /* wait for PLL Lock */
1705:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
1706:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1707:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Switch to normal mode */
1708:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 &= (uint32_t)~SCU_PLL_PLLCON0_VCOBYP_Msk;
 6904              	 .loc 3 1708 0 is_stmt 1
 6905 00f2 2A4B     	 ldr r3,.L453+8
 6906 00f4 294A     	 ldr r2,.L453+8
 6907 00f6 5268     	 ldr r2,[r2,#4]
 6908 00f8 22F00102 	 bic r2,r2,#1
 6909 00fc 5968     	 ldr r1,[r3,#4]
 6910 00fe 0021     	 movs r1,#0
 6911 0100 0A43     	 orrs r2,r2,r1
 6912 0102 5A60     	 str r2,[r3,#4]
1709:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 6913              	 .loc 3 1709 0
 6914 0104 00BF     	 nop
 6915              	.L448:
 6916              	 .loc 3 1709 0 is_stmt 0 discriminator 1
 6917 0106 254B     	 ldr r3,.L453+8
 6918 0108 1B68     	 ldr r3,[r3]
 6919 010a 03F00103 	 and r3,r3,#1
 6920 010e 002B     	 cmp r3,#0
 6921 0110 F9D1     	 bne .L448
1710:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1711:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       /* wait for normal mode */
1712:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
1713:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1714:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Ramp up PLL frequency in steps */
1715:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 60UL) >> 22;
 6922              	 .loc 3 1715 0 is_stmt 1
 6923 0112 7B69     	 ldr r3,[r7,#20]
 6924 0114 234A     	 ldr r2,.L453+16
 6925 0116 A2FB0323 	 umull r2,r3,r2,r3
 6926 011a 5B09     	 lsrs r3,r3,#5
 6927 011c 9B0D     	 lsrs r3,r3,#22
 6928 011e 3B61     	 str r3,[r7,#16]
1716:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 6929              	 .loc 3 1716 0
 6930 0120 3A6A     	 ldr r2,[r7,#32]
 6931 0122 3B69     	 ldr r3,[r7,#16]
 6932 0124 9A42     	 cmp r2,r3
 6933 0126 02D2     	 bcs .L449
1717:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1718:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 6934              	 .loc 3 1718 0
 6935 0128 3869     	 ldr r0,[r7,#16]
 6936 012a FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6937              	.L449:
1719:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
1720:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1721:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     kdiv_temp = (vco_frequency / 90UL) >> 22;
 6938              	 .loc 3 1721 0
 6939 012e 7B69     	 ldr r3,[r7,#20]
 6940 0130 5B08     	 lsrs r3,r3,#1
 6941 0132 1D4A     	 ldr r2,.L453+20
 6942 0134 A2FB0323 	 umull r2,r3,r2,r3
 6943 0138 5B09     	 lsrs r3,r3,#5
 6944 013a 9B0D     	 lsrs r3,r3,#22
 6945 013c 3B61     	 str r3,[r7,#16]
1722:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     if (kdiv < kdiv_temp)
 6946              	 .loc 3 1722 0
 6947 013e 3A6A     	 ldr r2,[r7,#32]
 6948 0140 3B69     	 ldr r3,[r7,#16]
 6949 0142 9A42     	 cmp r2,r3
 6950 0144 02D2     	 bcs .L450
1723:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1724:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv_temp);
 6951              	 .loc 3 1724 0
 6952 0146 3869     	 ldr r0,[r7,#16]
 6953 0148 FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6954              	.L450:
1725:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
1726:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1727:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     XMC_SCU_CLOCK_StepSystemPllFrequency(kdiv);
 6955              	 .loc 3 1727 0
 6956 014c 386A     	 ldr r0,[r7,#32]
 6957 014e FFF7FEFF 	 bl XMC_SCU_CLOCK_StepSystemPllFrequency
 6958 0152 1BE0     	 b .L443
 6959              	.L444:
1728:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1729:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
1730:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1731:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K1DIV_Msk) |
 6960              	 .loc 3 1731 0
 6961 0154 114B     	 ldr r3,.L453+8
 6962 0156 114A     	 ldr r2,.L453+8
 6963 0158 9268     	 ldr r2,[r2,#8]
 6964 015a 22F07F01 	 bic r1,r2,#127
1732:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 6965              	 .loc 3 1732 0
 6966 015e 3A6A     	 ldr r2,[r7,#32]
 6967 0160 013A     	 subs r2,r2,#1
1731:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                        ((kdiv -1UL) << SCU_PLL_PLLCON1_K1DIV_Pos));
 6968              	 .loc 3 1731 0
 6969 0162 0A43     	 orrs r2,r2,r1
 6970 0164 9968     	 ldr r1,[r3,#8]
 6971 0166 0021     	 movs r1,#0
 6972 0168 0A43     	 orrs r2,r2,r1
 6973 016a 9A60     	 str r2,[r3,#8]
1733:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1734:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     /* Switch to prescaler mode */
1735:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_VCOBYP_Msk;
 6974              	 .loc 3 1735 0
 6975 016c 0B4B     	 ldr r3,.L453+8
 6976 016e 0B4A     	 ldr r2,.L453+8
 6977 0170 5268     	 ldr r2,[r2,#4]
 6978 0172 42F00102 	 orr r2,r2,#1
 6979 0176 5968     	 ldr r1,[r3,#4]
 6980 0178 0021     	 movs r1,#0
 6981 017a 0A43     	 orrs r2,r2,r1
 6982 017c 5A60     	 str r2,[r3,#4]
1736:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1737:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) == 0U)
 6983              	 .loc 3 1737 0
 6984 017e 00BF     	 nop
 6985              	.L452:
 6986              	 .loc 3 1737 0 is_stmt 0 discriminator 1
 6987 0180 064B     	 ldr r3,.L453+8
 6988 0182 1B68     	 ldr r3,[r3]
 6989 0184 03F00103 	 and r3,r3,#1
 6990 0188 002B     	 cmp r3,#0
 6991 018a F9D0     	 beq .L452
 6992              	.L443:
1738:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1739:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       /* wait for prescaler mode */
1740:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }
1741:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1742:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 6993              	 .loc 3 1742 0 is_stmt 1
 6994 018c 1837     	 adds r7,r7,#24
 6995              	.LCFI585:
 6996              	 .cfi_def_cfa_offset 8
 6997 018e BD46     	 mov sp,r7
 6998              	.LCFI586:
 6999              	 .cfi_def_cfa_register 13
 7000              	 
 7001 0190 80BD     	 pop {r7,pc}
 7002              	.L454:
 7003 0192 00BF     	 .align 2
 7004              	.L453:
 7005 0194 83DE1B43 	 .word 1125899907
 7006 0198 ABAAAAAA 	 .word -1431655765
 7007 019c 10470050 	 .word 1342195472
 7008 01a0 FF8080F0 	 .word -260013825
 7009 01a4 89888888 	 .word -2004318071
 7010 01a8 B7600BB6 	 .word -1240768329
 7011              	 .cfi_endproc
 7012              	.LFE278:
 7014              	 .section .text.XMC_SCU_CLOCK_StopSystemPll,"ax",%progbits
 7015              	 .align 2
 7016              	 .global XMC_SCU_CLOCK_StopSystemPll
 7017              	 .thumb
 7018              	 .thumb_func
 7020              	XMC_SCU_CLOCK_StopSystemPll:
 7021              	.LFB279:
1743:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1744:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to stop main PLL operation */
1745:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StopSystemPll(void)
1746:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 7022              	 .loc 3 1746 0
 7023              	 .cfi_startproc
 7024              	 
 7025              	 
 7026              	 
 7027 0000 80B4     	 push {r7}
 7028              	.LCFI587:
 7029              	 .cfi_def_cfa_offset 4
 7030              	 .cfi_offset 7,-4
 7031 0002 00AF     	 add r7,sp,#0
 7032              	.LCFI588:
 7033              	 .cfi_def_cfa_register 7
1747:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON0 |= (uint32_t)SCU_PLL_PLLCON0_PLLPWD_Msk;
 7034              	 .loc 3 1747 0
 7035 0004 064B     	 ldr r3,.L456
 7036 0006 064A     	 ldr r2,.L456
 7037 0008 5268     	 ldr r2,[r2,#4]
 7038 000a 42F48032 	 orr r2,r2,#65536
 7039 000e 5968     	 ldr r1,[r3,#4]
 7040 0010 0021     	 movs r1,#0
 7041 0012 0A43     	 orrs r2,r2,r1
 7042 0014 5A60     	 str r2,[r3,#4]
1748:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 7043              	 .loc 3 1748 0
 7044 0016 BD46     	 mov sp,r7
 7045              	.LCFI589:
 7046              	 .cfi_def_cfa_register 13
 7047              	 
 7048 0018 5DF8047B 	 ldr r7,[sp],#4
 7049              	.LCFI590:
 7050              	 .cfi_restore 7
 7051              	 .cfi_def_cfa_offset 0
 7052 001c 7047     	 bx lr
 7053              	.L457:
 7054 001e 00BF     	 .align 2
 7055              	.L456:
 7056 0020 10470050 	 .word 1342195472
 7057              	 .cfi_endproc
 7058              	.LFE279:
 7060              	 .section .text.XMC_SCU_CLOCK_StepSystemPllFrequency,"ax",%progbits
 7061              	 .align 2
 7062              	 .global XMC_SCU_CLOCK_StepSystemPllFrequency
 7063              	 .thumb
 7064              	 .thumb_func
 7066              	XMC_SCU_CLOCK_StepSystemPllFrequency:
 7067              	.LFB280:
1749:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1750:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to step up/down the main PLL frequency */
1751:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_CLOCK_StepSystemPllFrequency(uint32_t kdiv)
1752:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 7068              	 .loc 3 1752 0
 7069              	 .cfi_startproc
 7070              	 
 7071              	 
 7072 0000 80B5     	 push {r7,lr}
 7073              	.LCFI591:
 7074              	 .cfi_def_cfa_offset 8
 7075              	 .cfi_offset 7,-8
 7076              	 .cfi_offset 14,-4
 7077 0002 82B0     	 sub sp,sp,#8
 7078              	.LCFI592:
 7079              	 .cfi_def_cfa_offset 16
 7080 0004 00AF     	 add r7,sp,#0
 7081              	.LCFI593:
 7082              	 .cfi_def_cfa_register 7
 7083 0006 7860     	 str r0,[r7,#4]
1753:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 7084              	 .loc 3 1753 0
 7085 0008 094B     	 ldr r3,.L459
 7086 000a 094A     	 ldr r2,.L459
 7087 000c 9268     	 ldr r2,[r2,#8]
 7088 000e 22F4FE01 	 bic r1,r2,#8323072
1754:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                      ((kdiv - 1UL) << SCU_PLL_PLLCON1_K2DIV_Pos));
 7089              	 .loc 3 1754 0
 7090 0012 7A68     	 ldr r2,[r7,#4]
 7091 0014 013A     	 subs r2,r2,#1
 7092 0016 1204     	 lsls r2,r2,#16
1753:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   SCU_PLL->PLLCON1 = (uint32_t)((SCU_PLL->PLLCON1 & ~SCU_PLL_PLLCON1_K2DIV_Msk) |
 7093              	 .loc 3 1753 0
 7094 0018 0A43     	 orrs r2,r2,r1
 7095 001a 9968     	 ldr r1,[r3,#8]
 7096 001c 0021     	 movs r1,#0
 7097 001e 0A43     	 orrs r2,r2,r1
 7098 0020 9A60     	 str r2,[r3,#8]
1755:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1756:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_lDelay(50U);
 7099              	 .loc 3 1756 0
 7100 0022 3220     	 movs r0,#50
 7101 0024 FFF7FEFF 	 bl XMC_SCU_lDelay
1757:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 7102              	 .loc 3 1757 0
 7103 0028 0837     	 adds r7,r7,#8
 7104              	.LCFI594:
 7105              	 .cfi_def_cfa_offset 8
 7106 002a BD46     	 mov sp,r7
 7107              	.LCFI595:
 7108              	 .cfi_def_cfa_register 13
 7109              	 
 7110 002c 80BD     	 pop {r7,pc}
 7111              	.L460:
 7112 002e 00BF     	 .align 2
 7113              	.L459:
 7114 0030 10470050 	 .word 1342195472
 7115              	 .cfi_endproc
 7116              	.LFE280:
 7118              	 .section .text.XMC_SCU_CLOCK_IsSystemPllLocked,"ax",%progbits
 7119              	 .align 2
 7120              	 .global XMC_SCU_CLOCK_IsSystemPllLocked
 7121              	 .thumb
 7122              	 .thumb_func
 7124              	XMC_SCU_CLOCK_IsSystemPllLocked:
 7125              	.LFB281:
1758:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1759:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /* API to check main PLL is locked or not */
1760:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** bool XMC_SCU_CLOCK_IsSystemPllLocked(void)
1761:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 7126              	 .loc 3 1761 0
 7127              	 .cfi_startproc
 7128              	 
 7129              	 
 7130              	 
 7131 0000 80B4     	 push {r7}
 7132              	.LCFI596:
 7133              	 .cfi_def_cfa_offset 4
 7134              	 .cfi_offset 7,-4
 7135 0002 00AF     	 add r7,sp,#0
 7136              	.LCFI597:
 7137              	 .cfi_def_cfa_register 7
1762:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (bool)((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) != 0UL);
 7138              	 .loc 3 1762 0
 7139 0004 064B     	 ldr r3,.L463
 7140 0006 1B68     	 ldr r3,[r3]
 7141 0008 03F00403 	 and r3,r3,#4
 7142 000c 002B     	 cmp r3,#0
 7143 000e 14BF     	 ite ne
 7144 0010 0123     	 movne r3,#1
 7145 0012 0023     	 moveq r3,#0
 7146 0014 DBB2     	 uxtb r3,r3
1763:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 7147              	 .loc 3 1763 0
 7148 0016 1846     	 mov r0,r3
 7149 0018 BD46     	 mov sp,r7
 7150              	.LCFI598:
 7151              	 .cfi_def_cfa_register 13
 7152              	 
 7153 001a 5DF8047B 	 ldr r7,[sp],#4
 7154              	.LCFI599:
 7155              	 .cfi_restore 7
 7156              	 .cfi_def_cfa_offset 0
 7157 001e 7047     	 bx lr
 7158              	.L464:
 7159              	 .align 2
 7160              	.L463:
 7161 0020 10470050 	 .word 1342195472
 7162              	 .cfi_endproc
 7163              	.LFE281:
 7165              	 .section .text.XMC_SCU_INTERRUPT_SetEventHandler,"ax",%progbits
 7166              	 .align 2
 7167              	 .global XMC_SCU_INTERRUPT_SetEventHandler
 7168              	 .thumb
 7169              	 .thumb_func
 7171              	XMC_SCU_INTERRUPT_SetEventHandler:
 7172              	.LFB282:
1764:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1765:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
1766:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to assign the event handler function to be executed on occurrence of the selected event.
1767:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
1768:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** XMC_SCU_STATUS_t XMC_SCU_INTERRUPT_SetEventHandler(const XMC_SCU_INTERRUPT_EVENT_t event,
1769:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****                                                    const XMC_SCU_INTERRUPT_EVENT_HANDLER_t handler)
1770:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 7173              	 .loc 3 1770 0
 7174              	 .cfi_startproc
 7175              	 
 7176              	 
 7177              	 
 7178 0000 80B4     	 push {r7}
 7179              	.LCFI600:
 7180              	 .cfi_def_cfa_offset 4
 7181              	 .cfi_offset 7,-4
 7182 0002 85B0     	 sub sp,sp,#20
 7183              	.LCFI601:
 7184              	 .cfi_def_cfa_offset 24
 7185 0004 00AF     	 add r7,sp,#0
 7186              	.LCFI602:
 7187              	 .cfi_def_cfa_register 7
 7188 0006 7860     	 str r0,[r7,#4]
 7189 0008 3960     	 str r1,[r7]
1771:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1772:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_STATUS_t status;
1773:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
1774:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   index = 0U;
 7190              	 .loc 3 1774 0
 7191 000a 0023     	 movs r3,#0
 7192 000c FB60     	 str r3,[r7,#12]
1775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7193              	 .loc 3 1775 0
 7194 000e 02E0     	 b .L466
 7195              	.L468:
1776:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1777:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     index++;
 7196              	 .loc 3 1777 0
 7197 0010 FB68     	 ldr r3,[r7,#12]
 7198 0012 0133     	 adds r3,r3,#1
 7199 0014 FB60     	 str r3,[r7,#12]
 7200              	.L466:
1775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7201              	 .loc 3 1775 0
 7202 0016 FB68     	 ldr r3,[r7,#12]
 7203 0018 7A68     	 ldr r2,[r7,#4]
 7204 001a 22FA03F3 	 lsr r3,r2,r3
 7205 001e 03F00103 	 and r3,r3,#1
 7206 0022 002B     	 cmp r3,#0
 7207 0024 02D1     	 bne .L467
1775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while (((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) == 0U) && (index < XMC_SCU_INTERRUPT_EV
 7208              	 .loc 3 1775 0 is_stmt 0 discriminator 1
 7209 0026 FB68     	 ldr r3,[r7,#12]
 7210 0028 1F2B     	 cmp r3,#31
 7211 002a F1D9     	 bls .L468
 7212              	.L467:
1778:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1779:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
1780:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   if (index == XMC_SCU_INTERRUPT_EVENT_MAX)
 7213              	 .loc 3 1780 0 is_stmt 1
 7214 002c FB68     	 ldr r3,[r7,#12]
 7215 002e 202B     	 cmp r3,#32
 7216 0030 02D1     	 bne .L469
1781:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1782:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_ERROR;
 7217              	 .loc 3 1782 0
 7218 0032 0123     	 movs r3,#1
 7219 0034 FB72     	 strb r3,[r7,#11]
 7220 0036 06E0     	 b .L470
 7221              	.L469:
1783:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1784:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   else
1785:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {
1786:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     event_handler_list[index] = handler;
 7222              	 .loc 3 1786 0
 7223 0038 0649     	 ldr r1,.L472
 7224 003a FB68     	 ldr r3,[r7,#12]
 7225 003c 3A68     	 ldr r2,[r7]
 7226 003e 41F82320 	 str r2,[r1,r3,lsl#2]
1787:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     status = XMC_SCU_STATUS_OK;      
 7227              	 .loc 3 1787 0
 7228 0042 0023     	 movs r3,#0
 7229 0044 FB72     	 strb r3,[r7,#11]
 7230              	.L470:
1788:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1789:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
1790:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   return (status);
 7231              	 .loc 3 1790 0
 7232 0046 FB7A     	 ldrb r3,[r7,#11]
1791:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 7233              	 .loc 3 1791 0
 7234 0048 1846     	 mov r0,r3
 7235 004a 1437     	 adds r7,r7,#20
 7236              	.LCFI603:
 7237              	 .cfi_def_cfa_offset 4
 7238 004c BD46     	 mov sp,r7
 7239              	.LCFI604:
 7240              	 .cfi_def_cfa_register 13
 7241              	 
 7242 004e 5DF8047B 	 ldr r7,[sp],#4
 7243              	.LCFI605:
 7244              	 .cfi_restore 7
 7245              	 .cfi_def_cfa_offset 0
 7246 0052 7047     	 bx lr
 7247              	.L473:
 7248              	 .align 2
 7249              	.L472:
 7250 0054 00000000 	 .word event_handler_list
 7251              	 .cfi_endproc
 7252              	.LFE282:
 7254              	 .section .text.XMC_SCU_IRQHandler,"ax",%progbits
 7255              	 .align 2
 7256              	 .global XMC_SCU_IRQHandler
 7257              	 .thumb
 7258              	 .thumb_func
 7260              	XMC_SCU_IRQHandler:
 7261              	.LFB283:
1792:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** 
1793:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** /*
1794:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  * API to execute callback functions for multiple events.
1795:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****  */
1796:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** void XMC_SCU_IRQHandler(uint32_t sr_num)
1797:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** {
 7262              	 .loc 3 1797 0
 7263              	 .cfi_startproc
 7264              	 
 7265              	 
 7266 0000 80B5     	 push {r7,lr}
 7267              	.LCFI606:
 7268              	 .cfi_def_cfa_offset 8
 7269              	 .cfi_offset 7,-8
 7270              	 .cfi_offset 14,-4
 7271 0002 86B0     	 sub sp,sp,#24
 7272              	.LCFI607:
 7273              	 .cfi_def_cfa_offset 32
 7274 0004 00AF     	 add r7,sp,#0
 7275              	.LCFI608:
 7276              	 .cfi_def_cfa_register 7
 7277 0006 7860     	 str r0,[r7,#4]
1798:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   uint32_t index;
1799:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_t event;
1800:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_SCU_INTERRUPT_EVENT_HANDLER_t event_handler;
1801:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
1802:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   XMC_UNUSED_ARG(sr_num);
1803:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   
1804:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   index = 0U;
 7278              	 .loc 3 1804 0
 7279 0008 0023     	 movs r3,#0
 7280 000a 7B61     	 str r3,[r7,#20]
1805:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   event = XMC_SCU_INTERUPT_GetEventStatus();
 7281              	 .loc 3 1805 0
 7282 000c FFF7FEFF 	 bl XMC_SCU_INTERUPT_GetEventStatus
 7283 0010 3861     	 str r0,[r7,#16]
1806:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   while (index < XMC_SCU_INTERRUPT_EVENT_MAX)
 7284              	 .loc 3 1806 0
 7285 0012 1CE0     	 b .L475
 7286              	.L479:
1807:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {    
1808:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     if ((event & ((XMC_SCU_INTERRUPT_EVENT_t)1 << index)) != 0U)
 7287              	 .loc 3 1808 0
 7288 0014 7B69     	 ldr r3,[r7,#20]
 7289 0016 3A69     	 ldr r2,[r7,#16]
 7290 0018 22FA03F3 	 lsr r3,r2,r3
 7291 001c 03F00103 	 and r3,r3,#1
 7292 0020 002B     	 cmp r3,#0
 7293 0022 11D0     	 beq .L476
1809:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     {
1810:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       event_handler = event_handler_list[index];
 7294              	 .loc 3 1810 0
 7295 0024 0D4A     	 ldr r2,.L480
 7296 0026 7B69     	 ldr r3,[r7,#20]
 7297 0028 52F82330 	 ldr r3,[r2,r3,lsl#2]
 7298 002c FB60     	 str r3,[r7,#12]
1811:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       if (event_handler != NULL)
 7299              	 .loc 3 1811 0
 7300 002e FB68     	 ldr r3,[r7,#12]
 7301 0030 002B     	 cmp r3,#0
 7302 0032 01D0     	 beq .L477
1812:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       {
1813:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****           (event_handler)();
 7303              	 .loc 3 1813 0
 7304 0034 FB68     	 ldr r3,[r7,#12]
 7305 0036 9847     	 blx r3
 7306              	.L477:
1814:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       }
1815:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       
1816:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       XMC_SCU_INTERRUPT_ClearEventStatus((uint32_t)(1UL << index));
 7307              	 .loc 3 1816 0
 7308 0038 7B69     	 ldr r3,[r7,#20]
 7309 003a 0122     	 movs r2,#1
 7310 003c 02FA03F3 	 lsl r3,r2,r3
 7311 0040 1846     	 mov r0,r3
 7312 0042 FFF7FEFF 	 bl XMC_SCU_INTERRUPT_ClearEventStatus
1817:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       
1818:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****       break;
 7313              	 .loc 3 1818 0
 7314 0046 05E0     	 b .L474
 7315              	.L476:
1819:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     }   
1820:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****     index++;    
 7316              	 .loc 3 1820 0
 7317 0048 7B69     	 ldr r3,[r7,#20]
 7318 004a 0133     	 adds r3,r3,#1
 7319 004c 7B61     	 str r3,[r7,#20]
 7320              	.L475:
1806:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   {    
 7321              	 .loc 3 1806 0
 7322 004e 7B69     	 ldr r3,[r7,#20]
 7323 0050 1F2B     	 cmp r3,#31
 7324 0052 DFD9     	 bls .L479
 7325              	.L474:
1821:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c ****   }
1822:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc4_scu.c **** }
 7326              	 .loc 3 1822 0
 7327 0054 1837     	 adds r7,r7,#24
 7328              	.LCFI609:
 7329              	 .cfi_def_cfa_offset 8
 7330 0056 BD46     	 mov sp,r7
 7331              	.LCFI610:
 7332              	 .cfi_def_cfa_register 13
 7333              	 
 7334 0058 80BD     	 pop {r7,pc}
 7335              	.L481:
 7336 005a 00BF     	 .align 2
 7337              	.L480:
 7338 005c 00000000 	 .word event_handler_list
 7339              	 .cfi_endproc
 7340              	.LFE283:
 7342              	 .text
 7343              	.Letext0:
 7344              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 7345              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 7346              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 7347              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 7348              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc4_scu.c
    {standard input}:20     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 $t
    {standard input}:24     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000000 XMC_SCU_CLOCK_GetUsbClockSource
    {standard input}:57     .text.XMC_SCU_CLOCK_GetUsbClockSource:00000018 $d
    {standard input}:62     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 $t
    {standard input}:66     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000000 XMC_SCU_CLOCK_GetWdtClockSource
    {standard input}:98     .text.XMC_SCU_CLOCK_GetWdtClockSource:00000018 $d
    {standard input}:103    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 $t
    {standard input}:107    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_GetExternalOutputClockSource
    {standard input}:141    .text.XMC_SCU_CLOCK_GetExternalOutputClockSource:0000001c $d
    {standard input}:146    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 $t
    {standard input}:150    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemClockFrequency
    {standard input}:185    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000020 $d
    {standard input}:191    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 $t
    {standard input}:195    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000000 XMC_SCU_CLOCK_GetCpuClockFrequency
    {standard input}:227    .text.XMC_SCU_CLOCK_GetCpuClockFrequency:00000014 $d
    {standard input}:232    .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:236    .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:267    .text.XMC_SCU_GetMirrorStatus:00000014 $d
                            *COM*:00000080 event_handler_list
    {standard input}:273    .text.XMC_SCU_lDelay:00000000 $t
    {standard input}:277    .text.XMC_SCU_lDelay:00000000 XMC_SCU_lDelay
    {standard input}:339    .text.XMC_SCU_lDelay:0000003c $d
    {standard input}:345    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 $t
    {standard input}:350    .text.XMC_SCU_INTERRUPT_EnableEvent:00000000 XMC_SCU_INTERRUPT_EnableEvent
    {standard input}:394    .text.XMC_SCU_INTERRUPT_EnableEvent:00000024 $d
    {standard input}:399    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 $t
    {standard input}:404    .text.XMC_SCU_INTERRUPT_DisableEvent:00000000 XMC_SCU_INTERRUPT_DisableEvent
    {standard input}:449    .text.XMC_SCU_INTERRUPT_DisableEvent:00000028 $d
    {standard input}:454    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 $t
    {standard input}:459    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000000 XMC_SCU_INTERRUPT_TriggerEvent
    {standard input}:503    .text.XMC_SCU_INTERRUPT_TriggerEvent:00000024 $d
    {standard input}:508    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 $t
    {standard input}:513    .text.XMC_SCU_INTERUPT_GetEventStatus:00000000 XMC_SCU_INTERUPT_GetEventStatus
    {standard input}:544    .text.XMC_SCU_INTERUPT_GetEventStatus:00000014 $d
    {standard input}:549    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 $t
    {standard input}:554    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000000 XMC_SCU_INTERRUPT_ClearEventStatus
    {standard input}:595    .text.XMC_SCU_INTERRUPT_ClearEventStatus:00000020 $d
    {standard input}:600    .text.XMC_SCU_GetBootMode:00000000 $t
    {standard input}:605    .text.XMC_SCU_GetBootMode:00000000 XMC_SCU_GetBootMode
    {standard input}:637    .text.XMC_SCU_GetBootMode:00000018 $d
    {standard input}:642    .text.XMC_SCU_SetBootMode:00000000 $t
    {standard input}:647    .text.XMC_SCU_SetBootMode:00000000 XMC_SCU_SetBootMode
    {standard input}:689    .text.XMC_SCU_SetBootMode:00000020 $d
    {standard input}:694    .text.XMC_SCU_ReadGPR:00000000 $t
    {standard input}:699    .text.XMC_SCU_ReadGPR:00000000 XMC_SCU_ReadGPR
    {standard input}:741    .text.XMC_SCU_ReadGPR:00000020 $d
    {standard input}:746    .text.XMC_SCU_WriteGPR:00000000 $t
    {standard input}:751    .text.XMC_SCU_WriteGPR:00000000 XMC_SCU_WriteGPR
    {standard input}:797    .text.XMC_SCU_WriteGPR:00000028 $d
    {standard input}:802    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 $t
    {standard input}:807    .text.XMC_SCU_EnableOutOfRangeComparator:00000000 XMC_SCU_EnableOutOfRangeComparator
    {standard input}:858    .text.XMC_SCU_EnableOutOfRangeComparator:0000003c $d
    {standard input}:863    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 $t
    {standard input}:868    .text.XMC_SCU_DisableOutOfRangeComparator:00000000 XMC_SCU_DisableOutOfRangeComparator
    {standard input}:920    .text.XMC_SCU_DisableOutOfRangeComparator:0000003c $d
    {standard input}:925    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 $t
    {standard input}:930    .text.XMC_SCU_CalibrateTemperatureSensor:00000000 XMC_SCU_CalibrateTemperatureSensor
    {standard input}:981    .text.XMC_SCU_CalibrateTemperatureSensor:00000030 $d
    {standard input}:986    .text.XMC_SCU_EnableTemperatureSensor:00000000 $t
    {standard input}:991    .text.XMC_SCU_EnableTemperatureSensor:00000000 XMC_SCU_EnableTemperatureSensor
    {standard input}:1027   .text.XMC_SCU_EnableTemperatureSensor:00000024 $d
    {standard input}:1032   .text.XMC_SCU_DisableTemperatureSensor:00000000 $t
    {standard input}:1037   .text.XMC_SCU_DisableTemperatureSensor:00000000 XMC_SCU_DisableTemperatureSensor
    {standard input}:1073   .text.XMC_SCU_DisableTemperatureSensor:00000024 $d
    {standard input}:1078   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 $t
    {standard input}:1083   .text.XMC_SCU_IsTemperatureSensorEnabled:00000000 XMC_SCU_IsTemperatureSensorEnabled
    {standard input}:1120   .text.XMC_SCU_IsTemperatureSensorEnabled:00000024 $d
    {standard input}:1125   .text.XMC_SCU_IsTemperatureSensorReady:00000000 $t
    {standard input}:1130   .text.XMC_SCU_IsTemperatureSensorReady:00000000 XMC_SCU_IsTemperatureSensorReady
    {standard input}:1167   .text.XMC_SCU_IsTemperatureSensorReady:00000024 $d
    {standard input}:1172   .text.XMC_SCU_StartTemperatureMeasurement:00000000 $t
    {standard input}:1177   .text.XMC_SCU_StartTemperatureMeasurement:00000000 XMC_SCU_StartTemperatureMeasurement
    {standard input}:1311   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 XMC_SCU_IsTemperatureSensorBusy
    {standard input}:1241   .text.XMC_SCU_StartTemperatureMeasurement:00000050 $d
    {standard input}:1246   .text.XMC_SCU_GetTemperatureMeasurement:00000000 $t
    {standard input}:1251   .text.XMC_SCU_GetTemperatureMeasurement:00000000 XMC_SCU_GetTemperatureMeasurement
    {standard input}:1301   .text.XMC_SCU_GetTemperatureMeasurement:00000034 $d
    {standard input}:1306   .text.XMC_SCU_IsTemperatureSensorBusy:00000000 $t
    {standard input}:1348   .text.XMC_SCU_IsTemperatureSensorBusy:00000024 $d
    {standard input}:1353   .text.XMC_SCU_WriteToRetentionMemory:00000000 $t
    {standard input}:1358   .text.XMC_SCU_WriteToRetentionMemory:00000000 XMC_SCU_WriteToRetentionMemory
    {standard input}:1425   .text.XMC_SCU_WriteToRetentionMemory:00000058 $d
    {standard input}:1430   .text.XMC_SCU_ReadFromRetentionMemory:00000000 $t
    {standard input}:1435   .text.XMC_SCU_ReadFromRetentionMemory:00000000 XMC_SCU_ReadFromRetentionMemory
    {standard input}:1498   .text.XMC_SCU_ReadFromRetentionMemory:0000004c $d
    {standard input}:1503   .text.XMC_SCU_CLOCK_Init:00000000 $t
    {standard input}:1508   .text.XMC_SCU_CLOCK_Init:00000000 XMC_SCU_CLOCK_Init
    {standard input}:3166   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 XMC_SCU_CLOCK_SetSystemClockSource
    {standard input}:4980   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 XMC_SCU_HIB_EnableHibernateDomain
    {standard input}:6068   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillator
    {standard input}:6021   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 XMC_SCU_CLOCK_IsLowPowerOscillatorStable
    {standard input}:3529   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 XMC_SCU_HIB_SetStandbyClockSource
    {standard input}:4768   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 XMC_SCU_CLOCK_SetBackupClockCalibrationMode
    {standard input}:3597   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 XMC_SCU_CLOCK_SetSystemClockDivider
    {standard input}:3713   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 XMC_SCU_CLOCK_SetCpuClockDivider
    {standard input}:3655   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 XMC_SCU_CLOCK_SetCcuClockDivider
    {standard input}:3771   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 XMC_SCU_CLOCK_SetPeripheralClockDivider
    {standard input}:6368   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillator
    {standard input}:6439   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable
    {standard input}:6713   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 XMC_SCU_CLOCK_DisableSystemPll
    {standard input}:6666   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 XMC_SCU_CLOCK_EnableSystemPll
    {standard input}:6760   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 XMC_SCU_CLOCK_StartSystemPll
    {standard input}:1669   .text.XMC_SCU_TRAP_Enable:00000000 $t
    {standard input}:1674   .text.XMC_SCU_TRAP_Enable:00000000 XMC_SCU_TRAP_Enable
    {standard input}:1719   .text.XMC_SCU_TRAP_Enable:00000028 $d
    {standard input}:1724   .text.XMC_SCU_TRAP_Disable:00000000 $t
    {standard input}:1729   .text.XMC_SCU_TRAP_Disable:00000000 XMC_SCU_TRAP_Disable
    {standard input}:1773   .text.XMC_SCU_TRAP_Disable:00000024 $d
    {standard input}:1778   .text.XMC_SCU_TRAP_GetStatus:00000000 $t
    {standard input}:1783   .text.XMC_SCU_TRAP_GetStatus:00000000 XMC_SCU_TRAP_GetStatus
    {standard input}:1814   .text.XMC_SCU_TRAP_GetStatus:00000014 $d
    {standard input}:1819   .text.XMC_SCU_TRAP_Trigger:00000000 $t
    {standard input}:1824   .text.XMC_SCU_TRAP_Trigger:00000000 XMC_SCU_TRAP_Trigger
    {standard input}:1865   .text.XMC_SCU_TRAP_Trigger:00000020 $d
    {standard input}:1870   .text.XMC_SCU_TRAP_ClearStatus:00000000 $t
    {standard input}:1875   .text.XMC_SCU_TRAP_ClearStatus:00000000 XMC_SCU_TRAP_ClearStatus
    {standard input}:1916   .text.XMC_SCU_TRAP_ClearStatus:00000020 $d
    {standard input}:1921   .text.XMC_SCU_PARITY_ClearStatus:00000000 $t
    {standard input}:1926   .text.XMC_SCU_PARITY_ClearStatus:00000000 XMC_SCU_PARITY_ClearStatus
    {standard input}:1970   .text.XMC_SCU_PARITY_ClearStatus:00000024 $d
    {standard input}:1975   .text.XMC_SCU_PARITY_GetStatus:00000000 $t
    {standard input}:1980   .text.XMC_SCU_PARITY_GetStatus:00000000 XMC_SCU_PARITY_GetStatus
    {standard input}:2011   .text.XMC_SCU_PARITY_GetStatus:00000014 $d
    {standard input}:2016   .text.XMC_SCU_PARITY_Enable:00000000 $t
    {standard input}:2021   .text.XMC_SCU_PARITY_Enable:00000000 XMC_SCU_PARITY_Enable
    {standard input}:2065   .text.XMC_SCU_PARITY_Enable:00000024 $d
    {standard input}:2070   .text.XMC_SCU_PARITY_Disable:00000000 $t
    {standard input}:2075   .text.XMC_SCU_PARITY_Disable:00000000 XMC_SCU_PARITY_Disable
    {standard input}:2120   .text.XMC_SCU_PARITY_Disable:00000028 $d
    {standard input}:2125   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 $t
    {standard input}:2130   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000000 XMC_SCU_PARITY_EnableTrapGeneration
    {standard input}:2174   .text.XMC_SCU_PARITY_EnableTrapGeneration:00000024 $d
    {standard input}:2179   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 $t
    {standard input}:2184   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000000 XMC_SCU_PARITY_DisableTrapGeneration
    {standard input}:2229   .text.XMC_SCU_PARITY_DisableTrapGeneration:00000028 $d
    {standard input}:2234   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 $t
    {standard input}:2239   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000000 XMC_SCU_INTERRUPT_EnableNmiRequest
    {standard input}:2283   .text.XMC_SCU_INTERRUPT_EnableNmiRequest:00000024 $d
    {standard input}:2288   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 $t
    {standard input}:2293   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000000 XMC_SCU_INTERRUPT_DisableNmiRequest
    {standard input}:2338   .text.XMC_SCU_INTERRUPT_DisableNmiRequest:00000028 $d
    {standard input}:2343   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 $t
    {standard input}:2348   .text.XMC_SCU_RESET_AssertPeripheralReset:00000000 XMC_SCU_RESET_AssertPeripheralReset
    {standard input}:2401   .text.XMC_SCU_RESET_AssertPeripheralReset:00000034 $d
    {standard input}:2406   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 $t
    {standard input}:2411   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000000 XMC_SCU_RESET_DeassertPeripheralReset
    {standard input}:2464   .text.XMC_SCU_RESET_DeassertPeripheralReset:00000034 $d
    {standard input}:2469   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 $t
    {standard input}:2474   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000000 XMC_SCU_RESET_IsPeripheralResetAsserted
    {standard input}:2534   .text.XMC_SCU_RESET_IsPeripheralResetAsserted:00000044 $d
    {standard input}:2539   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 $t
    {standard input}:2544   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockFrequency
    {standard input}:2637   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency
    {standard input}:2627   .text.XMC_SCU_CLOCK_GetSystemPllClockFrequency:00000078 $d
    {standard input}:2632   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000000 $t
    {standard input}:2684   .text.XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency:00000028 $d
    {standard input}:2690   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 $t
    {standard input}:2695   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbPllClockFrequency
    {standard input}:2759   .text.XMC_SCU_CLOCK_GetUsbPllClockFrequency:00000050 $d
    {standard input}:2764   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 $t
    {standard input}:2769   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000000 XMC_SCU_CLOCK_GetCcuClockFrequency
    {standard input}:2811   .text.XMC_SCU_CLOCK_GetCcuClockFrequency:00000028 $d
    {standard input}:2816   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 $t
    {standard input}:2821   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000000 XMC_SCU_CLOCK_GetUsbClockFrequency
    {standard input}:2883   .text.XMC_SCU_CLOCK_GetUsbClockFrequency:00000044 $d
    {standard input}:2888   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 $t
    {standard input}:2893   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000000 XMC_SCU_CLOCK_GetEbuClockFrequency
    {standard input}:2935   .text.XMC_SCU_CLOCK_GetEbuClockFrequency:00000024 $d
    {standard input}:2940   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 $t
    {standard input}:2945   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000000 XMC_SCU_CLOCK_GetWdtClockFrequency
    {standard input}:3016   .text.XMC_SCU_CLOCK_GetWdtClockFrequency:00000050 $d
    {standard input}:3022   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 $t
    {standard input}:3027   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:00000000 XMC_SCU_CLOCK_GetExternalOutputClockFrequency
    {standard input}:3116   .text.XMC_SCU_CLOCK_GetExternalOutputClockFrequency:0000006c $d
    {standard input}:3122   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 $t
    {standard input}:3127   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:00000000 XMC_SCU_CLOCK_GetPeripheralClockFrequency
    {standard input}:3156   .text.XMC_SCU_CLOCK_GetPeripheralClockFrequency:0000001c $d
    {standard input}:3161   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000000 $t
    {standard input}:3211   .text.XMC_SCU_CLOCK_SetSystemClockSource:00000028 $d
    {standard input}:3216   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 $t
    {standard input}:3221   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000000 XMC_SCU_CLOCK_SetUsbClockSource
    {standard input}:3266   .text.XMC_SCU_CLOCK_SetUsbClockSource:00000028 $d
    {standard input}:3271   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 $t
    {standard input}:3276   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000000 XMC_SCU_CLOCK_SetWdtClockSource
    {standard input}:3321   .text.XMC_SCU_CLOCK_SetWdtClockSource:00000028 $d
    {standard input}:3326   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 $t
    {standard input}:3331   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:00000000 XMC_SCU_CLOCK_SetExternalOutputClockSource
    {standard input}:3379   .text.XMC_SCU_CLOCK_SetExternalOutputClockSource:0000002c $d
    {standard input}:3384   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 $t
    {standard input}:3389   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000000 XMC_SCU_CLOCK_SetSystemPllClockSource
    {standard input}:3451   .text.XMC_SCU_CLOCK_SetSystemPllClockSource:00000048 $d
    {standard input}:3456   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 $t
    {standard input}:3461   .text.XMC_SCU_HIB_SetRtcClockSource:00000000 XMC_SCU_HIB_SetRtcClockSource
    {standard input}:3518   .text.XMC_SCU_HIB_SetRtcClockSource:0000003c $d
    {standard input}:3524   .text.XMC_SCU_HIB_SetStandbyClockSource:00000000 $t
    {standard input}:3586   .text.XMC_SCU_HIB_SetStandbyClockSource:0000003c $d
    {standard input}:3592   .text.XMC_SCU_CLOCK_SetSystemClockDivider:00000000 $t
    {standard input}:3645   .text.XMC_SCU_CLOCK_SetSystemClockDivider:0000002c $d
    {standard input}:3650   .text.XMC_SCU_CLOCK_SetCcuClockDivider:00000000 $t
    {standard input}:3703   .text.XMC_SCU_CLOCK_SetCcuClockDivider:0000002c $d
    {standard input}:3708   .text.XMC_SCU_CLOCK_SetCpuClockDivider:00000000 $t
    {standard input}:3761   .text.XMC_SCU_CLOCK_SetCpuClockDivider:0000002c $d
    {standard input}:3766   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:00000000 $t
    {standard input}:3819   .text.XMC_SCU_CLOCK_SetPeripheralClockDivider:0000002c $d
    {standard input}:3824   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 $t
    {standard input}:3829   .text.XMC_SCU_CLOCK_SetUsbClockDivider:00000000 XMC_SCU_CLOCK_SetUsbClockDivider
    {standard input}:3877   .text.XMC_SCU_CLOCK_SetUsbClockDivider:0000002c $d
    {standard input}:3882   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 $t
    {standard input}:3887   .text.XMC_SCU_CLOCK_SetEbuClockDivider:00000000 XMC_SCU_CLOCK_SetEbuClockDivider
    {standard input}:3935   .text.XMC_SCU_CLOCK_SetEbuClockDivider:0000002c $d
    {standard input}:3940   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 $t
    {standard input}:3945   .text.XMC_SCU_CLOCK_SetWdtClockDivider:00000000 XMC_SCU_CLOCK_SetWdtClockDivider
    {standard input}:3993   .text.XMC_SCU_CLOCK_SetWdtClockDivider:0000002c $d
    {standard input}:3998   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 $t
    {standard input}:4003   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000000 XMC_SCU_CLOCK_SetExternalOutputClockDivider
    {standard input}:4053   .text.XMC_SCU_CLOCK_SetExternalOutputClockDivider:00000030 $d
    {standard input}:4058   .text.XMC_SCU_CLOCK_EnableClock:00000000 $t
    {standard input}:4063   .text.XMC_SCU_CLOCK_EnableClock:00000000 XMC_SCU_CLOCK_EnableClock
    {standard input}:4105   .text.XMC_SCU_CLOCK_EnableClock:00000020 $d
    {standard input}:4110   .text.XMC_SCU_CLOCK_DisableClock:00000000 $t
    {standard input}:4115   .text.XMC_SCU_CLOCK_DisableClock:00000000 XMC_SCU_CLOCK_DisableClock
    {standard input}:4157   .text.XMC_SCU_CLOCK_DisableClock:00000020 $d
    {standard input}:4162   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 $t
    {standard input}:4167   .text.XMC_SCU_CLOCK_IsClockEnabled:00000000 XMC_SCU_CLOCK_IsClockEnabled
    {standard input}:4213   .text.XMC_SCU_CLOCK_IsClockEnabled:00000028 $d
    {standard input}:4218   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 $t
    {standard input}:4223   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000000 XMC_SCU_CLOCK_GatePeripheralClock
    {standard input}:4276   .text.XMC_SCU_CLOCK_GatePeripheralClock:00000034 $d
    {standard input}:4281   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 $t
    {standard input}:4286   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000000 XMC_SCU_CLOCK_UngatePeripheralClock
    {standard input}:4339   .text.XMC_SCU_CLOCK_UngatePeripheralClock:00000034 $d
    {standard input}:4344   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 $t
    {standard input}:4349   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000000 XMC_SCU_CLOCK_IsPeripheralClockGated
    {standard input}:4409   .text.XMC_SCU_CLOCK_IsPeripheralClockGated:00000044 $d
    {standard input}:4414   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 $t
    {standard input}:4419   .text.XMC_SCU_POWER_GetEVR13Voltage:00000000 XMC_SCU_POWER_GetEVR13Voltage
    {standard input}:4456   .text.XMC_SCU_POWER_GetEVR13Voltage:00000028 $d
    {standard input}:4462   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 $t
    {standard input}:4467   .text.XMC_SCU_POWER_GetEVR33Voltage:00000000 XMC_SCU_POWER_GetEVR33Voltage
    {standard input}:4505   .text.XMC_SCU_POWER_GetEVR33Voltage:0000002c $d
    {standard input}:4511   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 $t
    {standard input}:4516   .text.XMC_SCU_CLOCK_EnableUsbPll:00000000 XMC_SCU_CLOCK_EnableUsbPll
    {standard input}:4553   .text.XMC_SCU_CLOCK_EnableUsbPll:00000024 $d
    {standard input}:4558   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 $t
    {standard input}:4563   .text.XMC_SCU_CLOCK_DisableUsbPll:00000000 XMC_SCU_CLOCK_DisableUsbPll
    {standard input}:4600   .text.XMC_SCU_CLOCK_DisableUsbPll:00000024 $d
    {standard input}:4605   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 $t
    {standard input}:4610   .text.XMC_SCU_CLOCK_StartUsbPll:00000000 XMC_SCU_CLOCK_StartUsbPll
    {standard input}:4714   .text.XMC_SCU_CLOCK_StartUsbPll:00000094 $d
    {standard input}:4719   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 $t
    {standard input}:4724   .text.XMC_SCU_CLOCK_StopUsbPll:00000000 XMC_SCU_CLOCK_StopUsbPll
    {standard input}:4758   .text.XMC_SCU_CLOCK_StopUsbPll:0000001c $d
    {standard input}:4763   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000000 $t
    {standard input}:4837   .text.XMC_SCU_CLOCK_SetBackupClockCalibrationMode:00000058 $d
    {standard input}:4842   .text.XMC_SCU_POWER_EnableUsb:00000000 $t
    {standard input}:4847   .text.XMC_SCU_POWER_EnableUsb:00000000 XMC_SCU_POWER_EnableUsb
    {standard input}:4880   .text.XMC_SCU_POWER_EnableUsb:00000018 $d
    {standard input}:4885   .text.XMC_SCU_POWER_DisableUsb:00000000 $t
    {standard input}:4890   .text.XMC_SCU_POWER_DisableUsb:00000000 XMC_SCU_POWER_DisableUsb
    {standard input}:4923   .text.XMC_SCU_POWER_DisableUsb:00000018 $d
    {standard input}:4928   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 $t
    {standard input}:4933   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000000 XMC_SCU_CLOCK_IsUsbPllLocked
    {standard input}:4970   .text.XMC_SCU_CLOCK_IsUsbPllLocked:00000020 $d
    {standard input}:4975   .text.XMC_SCU_HIB_EnableHibernateDomain:00000000 $t
    {standard input}:5051   .text.XMC_SCU_HIB_EnableHibernateDomain:00000058 $d
    {standard input}:5057   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 $t
    {standard input}:5062   .text.XMC_SCU_HIB_DisableHibernateDomain:00000000 XMC_SCU_HIB_DisableHibernateDomain
    {standard input}:5101   .text.XMC_SCU_HIB_DisableHibernateDomain:00000024 $d
    {standard input}:5107   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 $t
    {standard input}:5112   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000000 XMC_SCU_HIB_IsHibernateDomainEnabled
    {standard input}:5163   .text.XMC_SCU_HIB_IsHibernateDomainEnabled:00000034 $d
    {standard input}:5169   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 $t
    {standard input}:5174   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000000 XMC_SCU_HIB_EnableInternalSlowClock
    {standard input}:5219   .text.XMC_SCU_HIB_EnableInternalSlowClock:00000030 $d
    {standard input}:5225   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 $t
    {standard input}:5230   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000000 XMC_SCU_HIB_DisableInternalSlowClock
    {standard input}:5275   .text.XMC_SCU_HIB_DisableInternalSlowClock:00000030 $d
    {standard input}:5281   .text.XMC_SCU_HIB_ClearEventStatus:00000000 $t
    {standard input}:5286   .text.XMC_SCU_HIB_ClearEventStatus:00000000 XMC_SCU_HIB_ClearEventStatus
    {standard input}:5336   .text.XMC_SCU_HIB_ClearEventStatus:00000030 $d
    {standard input}:5342   .text.XMC_SCU_HIB_TriggerEvent:00000000 $t
    {standard input}:5347   .text.XMC_SCU_HIB_TriggerEvent:00000000 XMC_SCU_HIB_TriggerEvent
    {standard input}:5397   .text.XMC_SCU_HIB_TriggerEvent:00000030 $d
    {standard input}:5403   .text.XMC_SCU_HIB_EnableEvent:00000000 $t
    {standard input}:5408   .text.XMC_SCU_HIB_EnableEvent:00000000 XMC_SCU_HIB_EnableEvent
    {standard input}:5461   .text.XMC_SCU_HIB_EnableEvent:00000034 $d
    {standard input}:5467   .text.XMC_SCU_HIB_DisableEvent:00000000 $t
    {standard input}:5472   .text.XMC_SCU_HIB_DisableEvent:00000000 XMC_SCU_HIB_DisableEvent
    {standard input}:5526   .text.XMC_SCU_HIB_DisableEvent:00000038 $d
    {standard input}:5532   .text.XMC_SCU_HIB_EnterHibernateState:00000000 $t
    {standard input}:5537   .text.XMC_SCU_HIB_EnterHibernateState:00000000 XMC_SCU_HIB_EnterHibernateState
    {standard input}:5582   .text.XMC_SCU_HIB_EnterHibernateState:00000030 $d
    {standard input}:5588   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 $t
    {standard input}:5593   .text.XMC_SCU_HIB_EnterHibernateStateEx:00000000 XMC_SCU_HIB_EnterHibernateStateEx
    {standard input}:5632   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 $t
    {standard input}:5637   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000000 XMC_SCU_HIB_SetWakeupTriggerInput
    {standard input}:5706   .text.XMC_SCU_HIB_SetWakeupTriggerInput:00000050 $d
    {standard input}:5712   .text.XMC_SCU_HIB_SetPinMode:00000000 $t
    {standard input}:5717   .text.XMC_SCU_HIB_SetPinMode:00000000 XMC_SCU_HIB_SetPinMode
    {standard input}:5787   .text.XMC_SCU_HIB_SetPinMode:00000050 $d
    {standard input}:5793   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 $t
    {standard input}:5798   .text.XMC_SCU_HIB_SetPinOutputLevel:00000000 XMC_SCU_HIB_SetPinOutputLevel
    {standard input}:5864   .text.XMC_SCU_HIB_SetPinOutputLevel:00000050 $d
    {standard input}:5870   .text.XMC_SCU_HIB_SetInput0:00000000 $t
    {standard input}:5875   .text.XMC_SCU_HIB_SetInput0:00000000 XMC_SCU_HIB_SetInput0
    {standard input}:5944   .text.XMC_SCU_HIB_SetInput0:00000050 $d
    {standard input}:5950   .text.XMC_SCU_HIB_SetSR0Input:00000000 $t
    {standard input}:5955   .text.XMC_SCU_HIB_SetSR0Input:00000000 XMC_SCU_HIB_SetSR0Input
    {standard input}:6010   .text.XMC_SCU_HIB_SetSR0Input:0000003c $d
    {standard input}:6016   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000000 $t
    {standard input}:6058   .text.XMC_SCU_CLOCK_IsLowPowerOscillatorStable:00000020 $d
    {standard input}:6063   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000000 $t
    {standard input}:6147   .text.XMC_SCU_CLOCK_EnableLowPowerOscillator:00000080 $d
    {standard input}:6152   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 $t
    {standard input}:6157   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillator
    {standard input}:6202   .text.XMC_SCU_CLOCK_DisableLowPowerOscillator:00000030 $d
    {standard input}:6208   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6213   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6258   .text.XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput:00000030 $d
    {standard input}:6264   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6269   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput
    {standard input}:6315   .text.XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput:00000034 $d
    {standard input}:6321   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:6326   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus
    {standard input}:6358   .text.XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:6363   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000000 $t
    {standard input}:6427   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillator:00000054 $d
    {standard input}:6434   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000000 $t
    {standard input}:6476   .text.XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable:00000024 $d
    {standard input}:6481   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 $t
    {standard input}:6486   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillator
    {standard input}:6522   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillator:00000020 $d
    {standard input}:6527   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6532   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:6568   .text.XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput:00000020 $d
    {standard input}:6573   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 $t
    {standard input}:6578   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000000 XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput
    {standard input}:6614   .text.XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput:00000020 $d
    {standard input}:6619   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 $t
    {standard input}:6624   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000000 XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus
    {standard input}:6656   .text.XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus:00000018 $d
    {standard input}:6661   .text.XMC_SCU_CLOCK_EnableSystemPll:00000000 $t
    {standard input}:6703   .text.XMC_SCU_CLOCK_EnableSystemPll:00000024 $d
    {standard input}:6708   .text.XMC_SCU_CLOCK_DisableSystemPll:00000000 $t
    {standard input}:6750   .text.XMC_SCU_CLOCK_DisableSystemPll:00000024 $d
    {standard input}:6755   .text.XMC_SCU_CLOCK_StartSystemPll:00000000 $t
    {standard input}:7066   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 XMC_SCU_CLOCK_StepSystemPllFrequency
    {standard input}:7005   .text.XMC_SCU_CLOCK_StartSystemPll:00000194 $d
    {standard input}:7015   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 $t
    {standard input}:7020   .text.XMC_SCU_CLOCK_StopSystemPll:00000000 XMC_SCU_CLOCK_StopSystemPll
    {standard input}:7056   .text.XMC_SCU_CLOCK_StopSystemPll:00000020 $d
    {standard input}:7061   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000000 $t
    {standard input}:7114   .text.XMC_SCU_CLOCK_StepSystemPllFrequency:00000030 $d
    {standard input}:7119   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 $t
    {standard input}:7124   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000000 XMC_SCU_CLOCK_IsSystemPllLocked
    {standard input}:7161   .text.XMC_SCU_CLOCK_IsSystemPllLocked:00000020 $d
    {standard input}:7166   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 $t
    {standard input}:7171   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000000 XMC_SCU_INTERRUPT_SetEventHandler
    {standard input}:7250   .text.XMC_SCU_INTERRUPT_SetEventHandler:00000054 $d
    {standard input}:7255   .text.XMC_SCU_IRQHandler:00000000 $t
    {standard input}:7260   .text.XMC_SCU_IRQHandler:00000000 XMC_SCU_IRQHandler
    {standard input}:7338   .text.XMC_SCU_IRQHandler:0000005c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
SystemCoreClockUpdate
OSCHP_GetFrequency
