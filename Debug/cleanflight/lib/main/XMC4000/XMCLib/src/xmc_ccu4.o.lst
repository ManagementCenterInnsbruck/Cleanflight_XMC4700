   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu4.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU4_StartPrescaler:
  25              	.LFB137:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_ccu4.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @date 2017-09-15
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @cond
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                             
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * following conditions are met:   
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * disclaimer.                        
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Change History
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * --------------
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-02-20:
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Initial <br>
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-06-20:
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-07-22:
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-08-17:
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-09-29:
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *       settings.
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-10-07:
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2016-03-09:
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Optimization of write only registers 
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2016-05-20:
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_StopClearTimer()
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Changed implementation of XMC_CCU4_SLICE_StopTimer() and XMC_CCU4_SLICE_ClearTimer() to av
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2017-04-27:
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2017-09-15:
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Fix XMC_CCU4_SLICE_SetShadowTransferMode()
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @endcond
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_H
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * HEADER FILES
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #include "xmc_common.h"
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40)
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @{
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup CCU4
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Note:
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Capture configuration:
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @{
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * MACROS
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * ENUMS
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Return Value of an API
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 module clock
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Capture mode register sets
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Prescaler mode
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Timer output passive level
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Timer clock Divider
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Function list
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Event list
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 trigger */
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Trap exit mode
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Timer clear on capture
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 request */
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual registers for S
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                 One match. */
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Val
 562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * DATA STRUCTURES
 606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma push
 626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma anon_unions
 627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma warning 586
 629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   union
 638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   {
 639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     struct
 640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     {
 641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 10;
 647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 1;
 650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 8;
 653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 6;
 655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     };
 656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   };
 658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   union
 674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   {
 675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     struct
 676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     {
 677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 3;
 685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 15;
 687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     };
 688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   };
 690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma pop
 697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma warning restore
 699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * API Prototypes
 702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #ifdef __cplusplus
 705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** extern "C" {
 706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41) 
 715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)
 719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)
 723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } 
 728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41)  
 744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif 
 755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)  
 756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)  
 768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif 
 779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } 
 782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * None.<BR>
 814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
  27              	 .loc 1 864 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
  43              	 .loc 1 866 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DB68     	 ldr r3,[r3,#12]
  46 000c 43F48072 	 orr r2,r3,#256
  47 0010 7B68     	 ldr r3,[r7,#4]
  48 0012 D968     	 ldr r1,[r3,#12]
  49 0014 0021     	 movs r1,#0
  50 0016 0A43     	 orrs r2,r2,r1
  51 0018 DA60     	 str r2,[r3,#12]
 867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
  52              	 .loc 1 867 0
  53 001a 0C37     	 adds r7,r7,#12
  54              	.LCFI3:
  55              	 .cfi_def_cfa_offset 4
  56 001c BD46     	 mov sp,r7
  57              	.LCFI4:
  58              	 .cfi_def_cfa_register 13
  59              	 
  60 001e 5DF8047B 	 ldr r7,[sp],#4
  61              	.LCFI5:
  62              	 .cfi_restore 7
  63              	 .cfi_def_cfa_offset 0
  64 0022 7047     	 bx lr
  65              	 .cfi_endproc
  66              	.LFE137:
  68              	 .section .text.XMC_CCU4_SLICE_SetDitherCompareValue,"ax",%progbits
  69              	 .align 2
  70              	 .thumb
  71              	 .thumb_func
  73              	XMC_CCU4_SLICE_SetDitherCompareValue:
  74              	.LFB165:
 868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * module then returns as true.
 898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
 955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
 964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
 980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * None.
 997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
1000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
1004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
1009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
1010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
1011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * with appropriate mask.
1012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #else
1206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
1227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
1404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  None.
1418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
1442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
1460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
1479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.\n\n
1488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopClearTimer(XMC_CCU4_SLICE_t *const slice)
1493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = CCU4_CC4_TCCLR_TRBC_Msk | CCU4_CC4_TCCLR_TCC_Msk;
1496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * invalid.
1509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  None.
1512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * reaching the terminal count.
1529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * greater than the compare value.
1569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param period_val Timer period value
1596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
1614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
1662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * must be succeeded by this API.
1707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  None.
1711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
1716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
1734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param spread Dither compare value
1761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * to transfer the dither value.
1776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                     const bool period_dither,
1782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                     const bool duty_dither,
1783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                     const uint8_t spread);
1784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * called with appropriate mask.
1857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
  75              	 .loc 1 1862 0
  76              	 .cfi_startproc
  77              	 
  78              	 
  79              	 
  80 0000 80B4     	 push {r7}
  81              	.LCFI6:
  82              	 .cfi_def_cfa_offset 4
  83              	 .cfi_offset 7,-4
  84 0002 83B0     	 sub sp,sp,#12
  85              	.LCFI7:
  86              	 .cfi_def_cfa_offset 16
  87 0004 00AF     	 add r7,sp,#0
  88              	.LCFI8:
  89              	 .cfi_def_cfa_register 7
  90 0006 7860     	 str r0,[r7,#4]
  91 0008 0B46     	 mov r3,r1
  92 000a FB70     	 strb r3,[r7,#3]
1863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->DITS = comp_val;
  93              	 .loc 1 1864 0
  94 000c FA78     	 ldrb r2,[r7,#3]
  95 000e 7B68     	 ldr r3,[r7,#4]
  96 0010 196A     	 ldr r1,[r3,#32]
  97 0012 0021     	 movs r1,#0
  98 0014 0A43     	 orrs r2,r2,r1
  99 0016 1A62     	 str r2,[r3,#32]
1865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 100              	 .loc 1 1865 0
 101 0018 0C37     	 adds r7,r7,#12
 102              	.LCFI9:
 103              	 .cfi_def_cfa_offset 4
 104 001a BD46     	 mov sp,r7
 105              	.LCFI10:
 106              	 .cfi_def_cfa_register 13
 107              	 
 108 001c 5DF8047B 	 ldr r7,[sp],#4
 109              	.LCFI11:
 110              	 .cfi_restore 7
 111              	 .cfi_def_cfa_offset 0
 112 0020 7047     	 bx lr
 113              	 .cfi_endproc
 114              	.LFE165:
 116 0022 00BF     	 .section .text.XMC_CCU4_lAssertReset,"ax",%progbits
 117              	 .align 2
 118              	 .thumb
 119              	 .thumb_func
 121              	XMC_CCU4_lAssertReset:
 122              	.LFB210:
 123              	 .file 2 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /**
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * @file xmc_ccu4.c
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * @date 2017-04-27
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * products derived from this software without specific prior written permission.                  
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * Change History
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * --------------
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 2015-02-20:
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - Initial <br>
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 2015-06-20:
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 2015-07-01:
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - In XMC_CCU4_SLICE_StartConfig(), Options in XMC_ASSERT check for start mode is corrected. 
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 2015-07-24:
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 2015-08-17:
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - Start of prescaler XMC_CCU4_StartPrescaler() is invoked in XMC_CCU4_Init() API. <br>
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - Bug fix XMC_CCU4_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 2015-10-07:
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - DOC updates for the newly added APIs.
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 2017-02-25:
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_lAssertReset(), XMC_CCU4_lDeassertReset(), XMC_CCU4_lGateClock() and XMC_CCU4_lUn
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * 2017-04-27:
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  *
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * @endcond
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  */
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * HEADER FILES
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #include "xmc_ccu4.h"
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU40)
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #include "xmc_scu.h"
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * MACROS
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_NUM_SLICES_PER_MODULE          (4U)
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_PERIOD_MASK       (1U)
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS1_EV0IS_Msk
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #else
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS_EV0IS_Msk
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GIDLC_CLOCK_MASK               (15U)
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE0_MASK               (1U)
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE1_MASK               (16U)
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE2_MASK               (256U)
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE3_MASK               (4096U)
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /** Macro to check if the clock selected enum passed is valid */
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_CLOCK(clock) \
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     ((clock == XMC_CCU4_CLOCK_SCU)        || \
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_A) || \
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_B) || \
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_C))
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the event ID is valid*/
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_ID(event_id) \
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     ((event_id == XMC_CCU4_SLICE_EVENT_NONE)|| \
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_0)   || \
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_1)   || \
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_2))
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the edge sensitivity is valid*/
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     ((edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the filter clock cycles are valid */
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_FILTER(cycles) \
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     ((cycles == XMC_CCU4_SLICE_EVENT_FILTER_DISABLED) || \
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES) || \
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES) || \
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES))
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the Multi-channel input related action is valid*/
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action) \
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     ((mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the SR line is valid*/
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_SR_ID(id) \
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     ((id == XMC_CCU4_SLICE_SR_ID_0) || \
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_1) || \
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_2) || \
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_3))
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /** Macro to check if the end mode enum passed is valid */
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_CHECK_END_MODE(end_mode) \
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     ((end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP) || \
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR) || \
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR))
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * LOCAL ROUTINES
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lAssertReset(const XMC_CCU4_MODULE_t *const module)
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 124              	 .loc 2 148 0
 125              	 .cfi_startproc
 126              	 
 127              	 
 128 0000 80B5     	 push {r7,lr}
 129              	.LCFI12:
 130              	 .cfi_def_cfa_offset 8
 131              	 .cfi_offset 7,-8
 132              	 .cfi_offset 14,-4
 133 0002 82B0     	 sub sp,sp,#8
 134              	.LCFI13:
 135              	 .cfi_def_cfa_offset 16
 136 0004 00AF     	 add r7,sp,#0
 137              	.LCFI14:
 138              	 .cfi_def_cfa_register 7
 139 0006 7860     	 str r0,[r7,#4]
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (module == CCU40)
 140              	 .loc 2 149 0
 141 0008 7B68     	 ldr r3,[r7,#4]
 142 000a 104A     	 ldr r2,.L8
 143 000c 9342     	 cmp r3,r2
 144 000e 03D1     	 bne .L4
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 145              	 .loc 2 151 0
 146 0010 0420     	 movs r0,#4
 147 0012 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 148 0016 16E0     	 b .L3
 149              	.L4:
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU41)
 150              	 .loc 2 154 0
 151 0018 7B68     	 ldr r3,[r7,#4]
 152 001a 0D4A     	 ldr r2,.L8+4
 153 001c 9342     	 cmp r3,r2
 154 001e 03D1     	 bne .L6
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 155              	 .loc 2 156 0
 156 0020 0820     	 movs r0,#8
 157 0022 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 158 0026 0EE0     	 b .L3
 159              	.L6:
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU42)
 160              	 .loc 2 160 0
 161 0028 7B68     	 ldr r3,[r7,#4]
 162 002a 0A4A     	 ldr r2,.L8+8
 163 002c 9342     	 cmp r3,r2
 164 002e 03D1     	 bne .L7
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 165              	 .loc 2 162 0
 166 0030 1020     	 movs r0,#16
 167 0032 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 168 0036 06E0     	 b .L3
 169              	.L7:
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU43)
 170              	 .loc 2 166 0
 171 0038 7B68     	 ldr r3,[r7,#4]
 172 003a 074A     	 ldr r2,.L8+12
 173 003c 9342     	 cmp r3,r2
 174 003e 02D1     	 bne .L3
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 175              	 .loc 2 168 0
 176 0040 0648     	 ldr r0,.L8+16
 177 0042 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 178              	.L3:
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lAssertReset:Invalid Module Pointer", 0);
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 179              	 .loc 2 175 0
 180 0046 0837     	 adds r7,r7,#8
 181              	.LCFI15:
 182              	 .cfi_def_cfa_offset 8
 183 0048 BD46     	 mov sp,r7
 184              	.LCFI16:
 185              	 .cfi_def_cfa_register 13
 186              	 
 187 004a 80BD     	 pop {r7,pc}
 188              	.L9:
 189              	 .align 2
 190              	.L8:
 191 004c 00C00040 	 .word 1073790976
 192 0050 00000140 	 .word 1073807360
 193 0054 00400140 	 .word 1073823744
 194 0058 00400048 	 .word 1207975936
 195 005c 01000010 	 .word 268435457
 196              	 .cfi_endproc
 197              	.LFE210:
 199              	 .section .text.XMC_CCU4_lDeassertReset,"ax",%progbits
 200              	 .align 2
 201              	 .thumb
 202              	 .thumb_func
 204              	XMC_CCU4_lDeassertReset:
 205              	.LFB211:
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lDeassertReset(const XMC_CCU4_MODULE_t *const module)
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 206              	 .loc 2 178 0
 207              	 .cfi_startproc
 208              	 
 209              	 
 210 0000 80B5     	 push {r7,lr}
 211              	.LCFI17:
 212              	 .cfi_def_cfa_offset 8
 213              	 .cfi_offset 7,-8
 214              	 .cfi_offset 14,-4
 215 0002 82B0     	 sub sp,sp,#8
 216              	.LCFI18:
 217              	 .cfi_def_cfa_offset 16
 218 0004 00AF     	 add r7,sp,#0
 219              	.LCFI19:
 220              	 .cfi_def_cfa_register 7
 221 0006 7860     	 str r0,[r7,#4]
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (module == CCU40)
 222              	 .loc 2 179 0
 223 0008 7B68     	 ldr r3,[r7,#4]
 224 000a 104A     	 ldr r2,.L15
 225 000c 9342     	 cmp r3,r2
 226 000e 03D1     	 bne .L11
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 227              	 .loc 2 181 0
 228 0010 0420     	 movs r0,#4
 229 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 230 0016 16E0     	 b .L10
 231              	.L11:
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU41)
 232              	 .loc 2 184 0
 233 0018 7B68     	 ldr r3,[r7,#4]
 234 001a 0D4A     	 ldr r2,.L15+4
 235 001c 9342     	 cmp r3,r2
 236 001e 03D1     	 bne .L13
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 237              	 .loc 2 186 0
 238 0020 0820     	 movs r0,#8
 239 0022 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 240 0026 0EE0     	 b .L10
 241              	.L13:
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU42)
 242              	 .loc 2 190 0
 243 0028 7B68     	 ldr r3,[r7,#4]
 244 002a 0A4A     	 ldr r2,.L15+8
 245 002c 9342     	 cmp r3,r2
 246 002e 03D1     	 bne .L14
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 247              	 .loc 2 192 0
 248 0030 1020     	 movs r0,#16
 249 0032 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 250 0036 06E0     	 b .L10
 251              	.L14:
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU43)
 252              	 .loc 2 196 0
 253 0038 7B68     	 ldr r3,[r7,#4]
 254 003a 074A     	 ldr r2,.L15+12
 255 003c 9342     	 cmp r3,r2
 256 003e 02D1     	 bne .L10
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 257              	 .loc 2 198 0
 258 0040 0648     	 ldr r0,.L15+16
 259 0042 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 260              	.L10:
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lDeassertReset:Invalid Module Pointer", 0);
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 261              	 .loc 2 205 0
 262 0046 0837     	 adds r7,r7,#8
 263              	.LCFI20:
 264              	 .cfi_def_cfa_offset 8
 265 0048 BD46     	 mov sp,r7
 266              	.LCFI21:
 267              	 .cfi_def_cfa_register 13
 268              	 
 269 004a 80BD     	 pop {r7,pc}
 270              	.L16:
 271              	 .align 2
 272              	.L15:
 273 004c 00C00040 	 .word 1073790976
 274 0050 00000140 	 .word 1073807360
 275 0054 00400140 	 .word 1073823744
 276 0058 00400048 	 .word 1207975936
 277 005c 01000010 	 .word 268435457
 278              	 .cfi_endproc
 279              	.LFE211:
 281              	 .section .text.XMC_CCU4_lGateClock,"ax",%progbits
 282              	 .align 2
 283              	 .thumb
 284              	 .thumb_func
 286              	XMC_CCU4_lGateClock:
 287              	.LFB212:
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lGateClock(const XMC_CCU4_MODULE_t *const module)
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 288              	 .loc 2 210 0
 289              	 .cfi_startproc
 290              	 
 291              	 
 292 0000 80B5     	 push {r7,lr}
 293              	.LCFI22:
 294              	 .cfi_def_cfa_offset 8
 295              	 .cfi_offset 7,-8
 296              	 .cfi_offset 14,-4
 297 0002 82B0     	 sub sp,sp,#8
 298              	.LCFI23:
 299              	 .cfi_def_cfa_offset 16
 300 0004 00AF     	 add r7,sp,#0
 301              	.LCFI24:
 302              	 .cfi_def_cfa_register 7
 303 0006 7860     	 str r0,[r7,#4]
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (module == CCU40)
 304              	 .loc 2 212 0
 305 0008 7B68     	 ldr r3,[r7,#4]
 306 000a 104A     	 ldr r2,.L22
 307 000c 9342     	 cmp r3,r2
 308 000e 03D1     	 bne .L18
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 309              	 .loc 2 214 0
 310 0010 0420     	 movs r0,#4
 311 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 312 0016 16E0     	 b .L17
 313              	.L18:
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU41)
 314              	 .loc 2 217 0
 315 0018 7B68     	 ldr r3,[r7,#4]
 316 001a 0D4A     	 ldr r2,.L22+4
 317 001c 9342     	 cmp r3,r2
 318 001e 03D1     	 bne .L20
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 319              	 .loc 2 219 0
 320 0020 0820     	 movs r0,#8
 321 0022 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 322 0026 0EE0     	 b .L17
 323              	.L20:
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU42)
 324              	 .loc 2 223 0
 325 0028 7B68     	 ldr r3,[r7,#4]
 326 002a 0A4A     	 ldr r2,.L22+8
 327 002c 9342     	 cmp r3,r2
 328 002e 03D1     	 bne .L21
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 329              	 .loc 2 225 0
 330 0030 1020     	 movs r0,#16
 331 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 332 0036 06E0     	 b .L17
 333              	.L21:
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU43)
 334              	 .loc 2 229 0
 335 0038 7B68     	 ldr r3,[r7,#4]
 336 003a 074A     	 ldr r2,.L22+12
 337 003c 9342     	 cmp r3,r2
 338 003e 02D1     	 bne .L17
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 339              	 .loc 2 231 0
 340 0040 0648     	 ldr r0,.L22+16
 341 0042 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 342              	.L17:
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lGateClock:Invalid Module Pointer", 0);
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 343              	 .loc 2 238 0
 344 0046 0837     	 adds r7,r7,#8
 345              	.LCFI25:
 346              	 .cfi_def_cfa_offset 8
 347 0048 BD46     	 mov sp,r7
 348              	.LCFI26:
 349              	 .cfi_def_cfa_register 13
 350              	 
 351 004a 80BD     	 pop {r7,pc}
 352              	.L23:
 353              	 .align 2
 354              	.L22:
 355 004c 00C00040 	 .word 1073790976
 356 0050 00000140 	 .word 1073807360
 357 0054 00400140 	 .word 1073823744
 358 0058 00400048 	 .word 1207975936
 359 005c 01000010 	 .word 268435457
 360              	 .cfi_endproc
 361              	.LFE212:
 363              	 .section .text.XMC_CCU4_lUngateClock,"ax",%progbits
 364              	 .align 2
 365              	 .thumb
 366              	 .thumb_func
 368              	XMC_CCU4_lUngateClock:
 369              	.LFB213:
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lUngateClock(const XMC_CCU4_MODULE_t *const module)
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 370              	 .loc 2 241 0
 371              	 .cfi_startproc
 372              	 
 373              	 
 374 0000 80B5     	 push {r7,lr}
 375              	.LCFI27:
 376              	 .cfi_def_cfa_offset 8
 377              	 .cfi_offset 7,-8
 378              	 .cfi_offset 14,-4
 379 0002 82B0     	 sub sp,sp,#8
 380              	.LCFI28:
 381              	 .cfi_def_cfa_offset 16
 382 0004 00AF     	 add r7,sp,#0
 383              	.LCFI29:
 384              	 .cfi_def_cfa_register 7
 385 0006 7860     	 str r0,[r7,#4]
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (module == CCU40)
 386              	 .loc 2 242 0
 387 0008 7B68     	 ldr r3,[r7,#4]
 388 000a 104A     	 ldr r2,.L29
 389 000c 9342     	 cmp r3,r2
 390 000e 03D1     	 bne .L25
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 391              	 .loc 2 244 0
 392 0010 0420     	 movs r0,#4
 393 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 394 0016 16E0     	 b .L24
 395              	.L25:
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU41)
 396              	 .loc 2 247 0
 397 0018 7B68     	 ldr r3,[r7,#4]
 398 001a 0D4A     	 ldr r2,.L29+4
 399 001c 9342     	 cmp r3,r2
 400 001e 03D1     	 bne .L27
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 401              	 .loc 2 249 0
 402 0020 0820     	 movs r0,#8
 403 0022 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 404 0026 0EE0     	 b .L24
 405              	.L27:
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU42)
 406              	 .loc 2 253 0
 407 0028 7B68     	 ldr r3,[r7,#4]
 408 002a 0A4A     	 ldr r2,.L29+8
 409 002c 9342     	 cmp r3,r2
 410 002e 03D1     	 bne .L28
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 411              	 .loc 2 255 0
 412 0030 1020     	 movs r0,#16
 413 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 414 0036 06E0     	 b .L24
 415              	.L28:
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else if (module == CCU43)
 416              	 .loc 2 259 0
 417 0038 7B68     	 ldr r3,[r7,#4]
 418 003a 074A     	 ldr r2,.L29+12
 419 003c 9342     	 cmp r3,r2
 420 003e 02D1     	 bne .L24
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 421              	 .loc 2 261 0
 422 0040 0648     	 ldr r0,.L29+16
 423 0042 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 424              	.L24:
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     XMC_ASSERT("XMC_CCU4_lUngateClock:Invalid Module Pointer", 0);
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 425              	 .loc 2 268 0
 426 0046 0837     	 adds r7,r7,#8
 427              	.LCFI30:
 428              	 .cfi_def_cfa_offset 8
 429 0048 BD46     	 mov sp,r7
 430              	.LCFI31:
 431              	 .cfi_def_cfa_register 13
 432              	 
 433 004a 80BD     	 pop {r7,pc}
 434              	.L30:
 435              	 .align 2
 436              	.L29:
 437 004c 00C00040 	 .word 1073790976
 438 0050 00000140 	 .word 1073807360
 439 0054 00400140 	 .word 1073823744
 440 0058 00400048 	 .word 1207975936
 441 005c 01000010 	 .word 268435457
 442              	 .cfi_endproc
 443              	.LFE213:
 445              	 .section .text.XMC_CCU4_EnableModule,"ax",%progbits
 446              	 .align 2
 447              	 .global XMC_CCU4_EnableModule
 448              	 .thumb
 449              	 .thumb_func
 451              	XMC_CCU4_EnableModule:
 452              	.LFB214:
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined (XMC_ASSERT_ENABLE)
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsInputvalid(XMC_CCU4_SLICE_INPUT_t input)
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if (UC_SERIES == XMC14)
 275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   return (input < 48U);
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #else
 277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   return (input < 16U);
 278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  * API IMPLEMENTATION
 283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
 284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module)
 286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 453              	 .loc 2 286 0
 454              	 .cfi_startproc
 455              	 
 456              	 
 457 0000 80B5     	 push {r7,lr}
 458              	.LCFI32:
 459              	 .cfi_def_cfa_offset 8
 460              	 .cfi_offset 7,-8
 461              	 .cfi_offset 14,-4
 462 0002 82B0     	 sub sp,sp,#8
 463              	.LCFI33:
 464              	 .cfi_def_cfa_offset 16
 465 0004 00AF     	 add r7,sp,#0
 466              	.LCFI34:
 467              	 .cfi_def_cfa_register 7
 468 0006 7860     	 str r0,[r7,#4]
 287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_EnableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if UC_FAMILY == XMC4
 290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Enable CCU4 module clock */
 291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 469              	 .loc 2 291 0
 470 0008 1020     	 movs r0,#16
 471 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lUngateClock(module);
 472              	 .loc 2 295 0
 473 000e 7868     	 ldr r0,[r7,#4]
 474 0010 FFF7FEFF 	 bl XMC_CCU4_lUngateClock
 296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lDeassertReset(module);
 475              	 .loc 2 299 0
 476 0014 7868     	 ldr r0,[r7,#4]
 477 0016 FFF7FEFF 	 bl XMC_CCU4_lDeassertReset
 300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 478              	 .loc 2 301 0
 479 001a 0837     	 adds r7,r7,#8
 480              	.LCFI35:
 481              	 .cfi_def_cfa_offset 8
 482 001c BD46     	 mov sp,r7
 483              	.LCFI36:
 484              	 .cfi_def_cfa_register 13
 485              	 
 486 001e 80BD     	 pop {r7,pc}
 487              	 .cfi_endproc
 488              	.LFE214:
 490              	 .section .text.XMC_CCU4_DisableModule,"ax",%progbits
 491              	 .align 2
 492              	 .global XMC_CCU4_DisableModule
 493              	 .thumb
 494              	 .thumb_func
 496              	XMC_CCU4_DisableModule:
 497              	.LFB215:
 302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module)
 304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 498              	 .loc 2 304 0
 499              	 .cfi_startproc
 500              	 
 501              	 
 502 0000 80B5     	 push {r7,lr}
 503              	.LCFI37:
 504              	 .cfi_def_cfa_offset 8
 505              	 .cfi_offset 7,-8
 506              	 .cfi_offset 14,-4
 507 0002 82B0     	 sub sp,sp,#8
 508              	.LCFI38:
 509              	 .cfi_def_cfa_offset 16
 510 0004 00AF     	 add r7,sp,#0
 511              	.LCFI39:
 512              	 .cfi_def_cfa_register 7
 513 0006 7860     	 str r0,[r7,#4]
 305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_DisableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lAssertReset(module);
 514              	 .loc 2 308 0
 515 0008 7868     	 ldr r0,[r7,#4]
 516 000a FFF7FEFF 	 bl XMC_CCU4_lAssertReset
 309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lGateClock(module);
 517              	 .loc 2 312 0
 518 000e 7868     	 ldr r0,[r7,#4]
 519 0010 FFF7FEFF 	 bl XMC_CCU4_lGateClock
 313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 520              	 .loc 2 314 0
 521 0014 0837     	 adds r7,r7,#8
 522              	.LCFI40:
 523              	 .cfi_def_cfa_offset 8
 524 0016 BD46     	 mov sp,r7
 525              	.LCFI41:
 526              	 .cfi_def_cfa_register 13
 527              	 
 528 0018 80BD     	 pop {r7,pc}
 529              	 .cfi_endproc
 530              	.LFE215:
 532 001a 00BF     	 .section .text.XMC_CCU4_Init,"ax",%progbits
 533              	 .align 2
 534              	 .global XMC_CCU4_Init
 535              	 .thumb
 536              	 .thumb_func
 538              	XMC_CCU4_Init:
 539              	.LFB216:
 315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to initialize CCU4 global resources  */
 317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action)
 318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 540              	 .loc 2 318 0
 541              	 .cfi_startproc
 542              	 
 543              	 
 544 0000 80B5     	 push {r7,lr}
 545              	.LCFI42:
 546              	 .cfi_def_cfa_offset 8
 547              	 .cfi_offset 7,-8
 548              	 .cfi_offset 14,-4
 549 0002 84B0     	 sub sp,sp,#16
 550              	.LCFI43:
 551              	 .cfi_def_cfa_offset 24
 552 0004 00AF     	 add r7,sp,#0
 553              	.LCFI44:
 554              	 .cfi_def_cfa_register 7
 555 0006 7860     	 str r0,[r7,#4]
 556 0008 0B46     	 mov r3,r1
 557 000a FB70     	 strb r3,[r7,#3]
 319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid module pointer", XMC_CCU4_IsValidModule(module));
 322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid mcs action", XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action));
 323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Enable CCU4 module */
 325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_EnableModule(module);
 558              	 .loc 2 325 0
 559 000c 7868     	 ldr r0,[r7,#4]
 560 000e FFF7FEFF 	 bl XMC_CCU4_EnableModule
 326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Start the prescaler */
 327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_StartPrescaler(module);
 561              	 .loc 2 327 0
 562 0012 7868     	 ldr r0,[r7,#4]
 563 0014 FFF7FEFF 	 bl XMC_CCU4_StartPrescaler
 328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 564              	 .loc 2 329 0
 565 0018 7B68     	 ldr r3,[r7,#4]
 566 001a 1B68     	 ldr r3,[r3]
 567 001c FB60     	 str r3,[r7,#12]
 330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_MSDE_Msk);
 568              	 .loc 2 330 0
 569 001e FB68     	 ldr r3,[r7,#12]
 570 0020 23F44043 	 bic r3,r3,#49152
 571 0024 FB60     	 str r3,[r7,#12]
 331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t) mcs_action) << CCU4_GCTRL_MSDE_Pos;
 572              	 .loc 2 331 0
 573 0026 FB78     	 ldrb r3,[r7,#3]
 574 0028 9B03     	 lsls r3,r3,#14
 575 002a FA68     	 ldr r2,[r7,#12]
 576 002c 1343     	 orrs r3,r3,r2
 577 002e FB60     	 str r3,[r7,#12]
 332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 578              	 .loc 2 333 0
 579 0030 7B68     	 ldr r3,[r7,#4]
 580 0032 1A68     	 ldr r2,[r3]
 581 0034 0021     	 movs r1,#0
 582 0036 FA68     	 ldr r2,[r7,#12]
 583 0038 0A43     	 orrs r2,r2,r1
 584 003a 1A60     	 str r2,[r3]
 334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 585              	 .loc 2 334 0
 586 003c 1037     	 adds r7,r7,#16
 587              	.LCFI45:
 588              	 .cfi_def_cfa_offset 8
 589 003e BD46     	 mov sp,r7
 590              	.LCFI46:
 591              	 .cfi_def_cfa_register 13
 592              	 
 593 0040 80BD     	 pop {r7,pc}
 594              	 .cfi_endproc
 595              	.LFE216:
 597 0042 00BF     	 .section .text.XMC_CCU4_SetModuleClock,"ax",%progbits
 598              	 .align 2
 599              	 .global XMC_CCU4_SetModuleClock
 600              	 .thumb
 601              	 .thumb_func
 603              	XMC_CCU4_SetModuleClock:
 604              	.LFB217:
 335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to select CCU4 module clock */
 337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock)
 338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 605              	 .loc 2 338 0
 606              	 .cfi_startproc
 607              	 
 608              	 
 609              	 
 610 0000 80B4     	 push {r7}
 611              	.LCFI47:
 612              	 .cfi_def_cfa_offset 4
 613              	 .cfi_offset 7,-4
 614 0002 85B0     	 sub sp,sp,#20
 615              	.LCFI48:
 616              	 .cfi_def_cfa_offset 24
 617 0004 00AF     	 add r7,sp,#0
 618              	.LCFI49:
 619              	 .cfi_def_cfa_register 7
 620 0006 7860     	 str r0,[r7,#4]
 621 0008 0B46     	 mov r3,r1
 622 000a FB70     	 strb r3,[r7,#3]
 339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Clock", XMC_CCU4_SLICE_CHECK_CLOCK(clock));
 343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 623              	 .loc 2 344 0
 624 000c 7B68     	 ldr r3,[r7,#4]
 625 000e 1B68     	 ldr r3,[r3]
 626 0010 FB60     	 str r3,[r7,#12]
 345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_PCIS_Msk);
 627              	 .loc 2 345 0
 628 0012 FB68     	 ldr r3,[r7,#12]
 629 0014 23F03003 	 bic r3,r3,#48
 630 0018 FB60     	 str r3,[r7,#12]
 346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t) clock) << CCU4_GCTRL_PCIS_Pos;
 631              	 .loc 2 346 0
 632 001a FB78     	 ldrb r3,[r7,#3]
 633 001c 1B01     	 lsls r3,r3,#4
 634 001e FA68     	 ldr r2,[r7,#12]
 635 0020 1343     	 orrs r3,r3,r2
 636 0022 FB60     	 str r3,[r7,#12]
 347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 637              	 .loc 2 348 0
 638 0024 7B68     	 ldr r3,[r7,#4]
 639 0026 1A68     	 ldr r2,[r3]
 640 0028 0021     	 movs r1,#0
 641 002a FA68     	 ldr r2,[r7,#12]
 642 002c 0A43     	 orrs r2,r2,r1
 643 002e 1A60     	 str r2,[r3]
 349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 644              	 .loc 2 349 0
 645 0030 1437     	 adds r7,r7,#20
 646              	.LCFI50:
 647              	 .cfi_def_cfa_offset 4
 648 0032 BD46     	 mov sp,r7
 649              	.LCFI51:
 650              	 .cfi_def_cfa_register 13
 651              	 
 652 0034 5DF8047B 	 ldr r7,[sp],#4
 653              	.LCFI52:
 654              	 .cfi_restore 7
 655              	 .cfi_def_cfa_offset 0
 656 0038 7047     	 bx lr
 657              	 .cfi_endproc
 658              	.LFE217:
 660 003a 00BF     	 .section .text.XMC_CCU4_SetMultiChannelShadowTransferMode,"ax",%progbits
 661              	 .align 2
 662              	 .global XMC_CCU4_SetMultiChannelShadowTransferMode
 663              	 .thumb
 664              	 .thumb_func
 666              	XMC_CCU4_SetMultiChannelShadowTransferMode:
 667              	.LFB218:
 350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU4x.MCSS input. *
 352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
 353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 668              	 .loc 2 353 0
 669              	 .cfi_startproc
 670              	 
 671              	 
 672              	 
 673 0000 80B4     	 push {r7}
 674              	.LCFI53:
 675              	 .cfi_def_cfa_offset 4
 676              	 .cfi_offset 7,-4
 677 0002 85B0     	 sub sp,sp,#20
 678              	.LCFI54:
 679              	 .cfi_def_cfa_offset 24
 680 0004 00AF     	 add r7,sp,#0
 681              	.LCFI55:
 682              	 .cfi_def_cfa_register 7
 683 0006 7860     	 str r0,[r7,#4]
 684 0008 3960     	 str r1,[r7]
 354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU4_IsValidM
 357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 685              	 .loc 2 358 0
 686 000a 7B68     	 ldr r3,[r7,#4]
 687 000c 1B68     	 ldr r3,[r3]
 688 000e FB60     	 str r3,[r7,#12]
 359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 689              	 .loc 2 359 0
 690 0010 3B68     	 ldr r3,[r7]
 691 0012 1B0C     	 lsrs r3,r3,#16
 692 0014 DB43     	 mvns r3,r3
 693 0016 FA68     	 ldr r2,[r7,#12]
 694 0018 1340     	 ands r3,r3,r2
 695 001a FB60     	 str r3,[r7,#12]
 360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 696              	 .loc 2 360 0
 697 001c 3B68     	 ldr r3,[r7]
 698 001e 9BB2     	 uxth r3,r3
 699 0020 FA68     	 ldr r2,[r7,#12]
 700 0022 1343     	 orrs r3,r3,r2
 701 0024 FB60     	 str r3,[r7,#12]
 361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 702              	 .loc 2 361 0
 703 0026 7B68     	 ldr r3,[r7,#4]
 704 0028 1A68     	 ldr r2,[r3]
 705 002a 0021     	 movs r1,#0
 706 002c FA68     	 ldr r2,[r7,#12]
 707 002e 0A43     	 orrs r2,r2,r1
 708 0030 1A60     	 str r2,[r3]
 362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 709              	 .loc 2 362 0
 710 0032 1437     	 adds r7,r7,#20
 711              	.LCFI56:
 712              	 .cfi_def_cfa_offset 4
 713 0034 BD46     	 mov sp,r7
 714              	.LCFI57:
 715              	 .cfi_def_cfa_register 13
 716              	 
 717 0036 5DF8047B 	 ldr r7,[sp],#4
 718              	.LCFI58:
 719              	 .cfi_restore 7
 720              	 .cfi_def_cfa_offset 0
 721 003a 7047     	 bx lr
 722              	 .cfi_endproc
 723              	.LFE218:
 725              	 .section .text.XMC_CCU4_SLICE_CompareInit,"ax",%progbits
 726              	 .align 2
 727              	 .global XMC_CCU4_SLICE_CompareInit
 728              	 .thumb
 729              	 .thumb_func
 731              	XMC_CCU4_SLICE_CompareInit:
 732              	.LFB219:
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure CC4 Slice as Timer */
 365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init)
 367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 733              	 .loc 2 367 0
 734              	 .cfi_startproc
 735              	 
 736              	 
 737              	 
 738 0000 80B4     	 push {r7}
 739              	.LCFI59:
 740              	 .cfi_def_cfa_offset 4
 741              	 .cfi_offset 7,-4
 742 0002 83B0     	 sub sp,sp,#12
 743              	.LCFI60:
 744              	 .cfi_def_cfa_offset 16
 745 0004 00AF     	 add r7,sp,#0
 746              	.LCFI61:
 747              	 .cfi_def_cfa_register 7
 748 0006 7860     	 str r0,[r7,#4]
 749 0008 3960     	 str r1,[r7]
 368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Compare Init Pointer is NULL",
 370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              (XMC_CCU4_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Program the timer mode */
 373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->TC = compare_init->tc;
 750              	 .loc 2 373 0
 751 000a 3B68     	 ldr r3,[r7]
 752 000c 1A68     	 ldr r2,[r3]
 753 000e 7B68     	 ldr r3,[r7,#4]
 754 0010 5969     	 ldr r1,[r3,#20]
 755 0012 0021     	 movs r1,#0
 756 0014 0A43     	 orrs r2,r2,r1
 757 0016 5A61     	 str r2,[r3,#20]
 374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Enable the timer concatenation */
 375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = ((uint32_t) compare_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 758              	 .loc 2 375 0
 759 0018 3B68     	 ldr r3,[r7]
 760 001a 5B79     	 ldrb r3,[r3,#5]
 761 001c C3F34013 	 ubfx r3,r3,#5,#1
 762 0020 DBB2     	 uxtb r3,r3
 763 0022 1A05     	 lsls r2,r3,#20
 764 0024 7B68     	 ldr r3,[r7,#4]
 765 0026 5968     	 ldr r1,[r3,#4]
 766 0028 0021     	 movs r1,#0
 767 002a 0A43     	 orrs r2,r2,r1
 768 002c 5A60     	 str r2,[r3,#4]
 376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Program initial prescaler divider value */
 377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 769              	 .loc 2 377 0
 770 002e 3B68     	 ldr r3,[r7]
 771 0030 1B79     	 ldrb r3,[r3,#4]
 772 0032 C3F30303 	 ubfx r3,r3,#0,#4
 773 0036 DBB2     	 uxtb r3,r3
 774 0038 1946     	 mov r1,r3
 775 003a 7B68     	 ldr r3,[r7,#4]
 776 003c 5A6A     	 ldr r2,[r3,#36]
 777 003e 0022     	 movs r2,#0
 778 0040 0A43     	 orrs r2,r2,r1
 779 0042 5A62     	 str r2,[r3,#36]
 378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Program the dither compare value */
 379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 780              	 .loc 2 379 0
 781 0044 3B68     	 ldr r3,[r7]
 782 0046 5B79     	 ldrb r3,[r3,#5]
 783 0048 C3F30303 	 ubfx r3,r3,#0,#4
 784 004c DBB2     	 uxtb r3,r3
 785 004e 1946     	 mov r1,r3
 786 0050 7B68     	 ldr r3,[r7,#4]
 787 0052 1A6A     	 ldr r2,[r3,#32]
 788 0054 0022     	 movs r2,#0
 789 0056 0A43     	 orrs r2,r2,r1
 790 0058 1A62     	 str r2,[r3,#32]
 380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Program timer output passive level */
 381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->PSL = (uint32_t) compare_init->passive_level;
 791              	 .loc 2 381 0
 792 005a 3B68     	 ldr r3,[r7]
 793 005c 5B79     	 ldrb r3,[r3,#5]
 794 005e C3F30013 	 ubfx r3,r3,#4,#1
 795 0062 DBB2     	 uxtb r3,r3
 796 0064 1946     	 mov r1,r3
 797 0066 7B68     	 ldr r3,[r7,#4]
 798 0068 9A69     	 ldr r2,[r3,#24]
 799 006a 0022     	 movs r2,#0
 800 006c 0A43     	 orrs r2,r2,r1
 801 006e 9A61     	 str r2,[r3,#24]
 382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Program floating prescaler compare value */
 383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 802              	 .loc 2 383 0
 803 0070 3B68     	 ldr r3,[r7]
 804 0072 1B79     	 ldrb r3,[r3,#4]
 805 0074 C3F30313 	 ubfx r3,r3,#4,#4
 806 0078 DBB2     	 uxtb r3,r3
 807 007a 1946     	 mov r1,r3
 808 007c 7B68     	 ldr r3,[r7,#4]
 809 007e DA6A     	 ldr r2,[r3,#44]
 810 0080 0022     	 movs r2,#0
 811 0082 0A43     	 orrs r2,r2,r1
 812 0084 DA62     	 str r2,[r3,#44]
 384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 813              	 .loc 2 384 0
 814 0086 0C37     	 adds r7,r7,#12
 815              	.LCFI62:
 816              	 .cfi_def_cfa_offset 4
 817 0088 BD46     	 mov sp,r7
 818              	.LCFI63:
 819              	 .cfi_def_cfa_register 13
 820              	 
 821 008a 5DF8047B 	 ldr r7,[sp],#4
 822              	.LCFI64:
 823              	 .cfi_restore 7
 824              	 .cfi_def_cfa_offset 0
 825 008e 7047     	 bx lr
 826              	 .cfi_endproc
 827              	.LFE219:
 829              	 .section .text.XMC_CCU4_SLICE_CaptureInit,"ax",%progbits
 830              	 .align 2
 831              	 .global XMC_CCU4_SLICE_CaptureInit
 832              	 .thumb
 833              	 .thumb_func
 835              	XMC_CCU4_SLICE_CaptureInit:
 836              	.LFB220:
 385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure CC4 Slice for Capture */
 387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
 388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                             const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init)
 389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 837              	 .loc 2 389 0
 838              	 .cfi_startproc
 839              	 
 840              	 
 841              	 
 842 0000 80B4     	 push {r7}
 843              	.LCFI65:
 844              	 .cfi_def_cfa_offset 4
 845              	 .cfi_offset 7,-4
 846 0002 83B0     	 sub sp,sp,#12
 847              	.LCFI66:
 848              	 .cfi_def_cfa_offset 16
 849 0004 00AF     	 add r7,sp,#0
 850              	.LCFI67:
 851              	 .cfi_def_cfa_register 7
 852 0006 7860     	 str r0,[r7,#4]
 853 0008 3960     	 str r1,[r7]
 390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Capture Init Pointer is NULL",
 392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              (XMC_CCU4_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Program the capture mode */
 395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->TC = capture_init->tc;
 854              	 .loc 2 395 0
 855 000a 3B68     	 ldr r3,[r7]
 856 000c 1A68     	 ldr r2,[r3]
 857 000e 7B68     	 ldr r3,[r7,#4]
 858 0010 5969     	 ldr r1,[r3,#20]
 859 0012 0021     	 movs r1,#0
 860 0014 0A43     	 orrs r2,r2,r1
 861 0016 5A61     	 str r2,[r3,#20]
 396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Enable the timer concatenation */
 397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = ((uint32_t)capture_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 862              	 .loc 2 397 0
 863 0018 3B68     	 ldr r3,[r7]
 864 001a 5B79     	 ldrb r3,[r3,#5]
 865 001c C3F30003 	 ubfx r3,r3,#0,#1
 866 0020 DBB2     	 uxtb r3,r3
 867 0022 1A05     	 lsls r2,r3,#20
 868 0024 7B68     	 ldr r3,[r7,#4]
 869 0026 5968     	 ldr r1,[r3,#4]
 870 0028 0021     	 movs r1,#0
 871 002a 0A43     	 orrs r2,r2,r1
 872 002c 5A60     	 str r2,[r3,#4]
 398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Program initial prescaler divider value */
 399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 873              	 .loc 2 399 0
 874 002e 3B68     	 ldr r3,[r7]
 875 0030 1B79     	 ldrb r3,[r3,#4]
 876 0032 C3F30303 	 ubfx r3,r3,#0,#4
 877 0036 DBB2     	 uxtb r3,r3
 878 0038 1946     	 mov r1,r3
 879 003a 7B68     	 ldr r3,[r7,#4]
 880 003c 5A6A     	 ldr r2,[r3,#36]
 881 003e 0022     	 movs r2,#0
 882 0040 0A43     	 orrs r2,r2,r1
 883 0042 5A62     	 str r2,[r3,#36]
 400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Program initial floating prescaler compare value */
 401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 884              	 .loc 2 401 0
 885 0044 3B68     	 ldr r3,[r7]
 886 0046 1B79     	 ldrb r3,[r3,#4]
 887 0048 C3F30313 	 ubfx r3,r3,#4,#4
 888 004c DBB2     	 uxtb r3,r3
 889 004e 1946     	 mov r1,r3
 890 0050 7B68     	 ldr r3,[r7,#4]
 891 0052 DA6A     	 ldr r2,[r3,#44]
 892 0054 0022     	 movs r2,#0
 893 0056 0A43     	 orrs r2,r2,r1
 894 0058 DA62     	 str r2,[r3,#44]
 402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 895              	 .loc 2 402 0
 896 005a 0C37     	 adds r7,r7,#12
 897              	.LCFI68:
 898              	 .cfi_def_cfa_offset 4
 899 005c BD46     	 mov sp,r7
 900              	.LCFI69:
 901              	 .cfi_def_cfa_register 13
 902              	 
 903 005e 5DF8047B 	 ldr r7,[sp],#4
 904              	.LCFI70:
 905              	 .cfi_restore 7
 906              	 .cfi_def_cfa_offset 0
 907 0062 7047     	 bx lr
 908              	 .cfi_endproc
 909              	.LFE220:
 911              	 .section .text.XMC_CCU4_SLICE_StartConfig,"ax",%progbits
 912              	 .align 2
 913              	 .global XMC_CCU4_SLICE_StartConfig
 914              	 .thumb
 915              	 .thumb_func
 917              	XMC_CCU4_SLICE_StartConfig:
 918              	.LFB221:
 403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure the Start trigger function of a slice */
 406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
 407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                             const XMC_CCU4_SLICE_EVENT_t event,
 408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode)
 409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 919              	 .loc 2 409 0
 920              	 .cfi_startproc
 921              	 
 922              	 
 923              	 
 924 0000 80B4     	 push {r7}
 925              	.LCFI71:
 926              	 .cfi_def_cfa_offset 4
 927              	 .cfi_offset 7,-4
 928 0002 85B0     	 sub sp,sp,#20
 929              	.LCFI72:
 930              	 .cfi_def_cfa_offset 24
 931 0004 00AF     	 add r7,sp,#0
 932              	.LCFI73:
 933              	 .cfi_def_cfa_register 7
 934 0006 7860     	 str r0,[r7,#4]
 935 0008 0B46     	 mov r3,r1
 936 000a FB70     	 strb r3,[r7,#3]
 937 000c 1346     	 mov r3,r2
 938 000e BB70     	 strb r3,[r7,#2]
 410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Start Mode", 
 416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              ((start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR) ||\
 417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****               (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START)));
 418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 939              	 .loc 2 419 0
 940 0010 7B68     	 ldr r3,[r7,#4]
 941 0012 5B68     	 ldr r3,[r3,#4]
 942 0014 BB60     	 str r3,[r7,#8]
 420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_STRTS_Msk);
 943              	 .loc 2 420 0
 944 0016 BB68     	 ldr r3,[r7,#8]
 945 0018 23F00303 	 bic r3,r3,#3
 946 001c BB60     	 str r3,[r7,#8]
 421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_STRTS_Pos;
 947              	 .loc 2 421 0
 948 001e FB78     	 ldrb r3,[r7,#3]
 949 0020 BA68     	 ldr r2,[r7,#8]
 950 0022 1343     	 orrs r3,r3,r2
 951 0024 BB60     	 str r3,[r7,#8]
 422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 952              	 .loc 2 423 0
 953 0026 7B68     	 ldr r3,[r7,#4]
 954 0028 5A68     	 ldr r2,[r3,#4]
 955 002a 0021     	 movs r1,#0
 956 002c BA68     	 ldr r2,[r7,#8]
 957 002e 0A43     	 orrs r2,r2,r1
 958 0030 5A60     	 str r2,[r3,#4]
 424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   tc  = slice->TC;
 959              	 .loc 2 425 0
 960 0032 7B68     	 ldr r3,[r7,#4]
 961 0034 5B69     	 ldr r3,[r3,#20]
 962 0036 FB60     	 str r3,[r7,#12]
 426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure the start mode */
 427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR)
 963              	 .loc 2 427 0
 964 0038 BB78     	 ldrb r3,[r7,#2]
 965 003a 012B     	 cmp r3,#1
 966 003c 04D1     	 bne .L39
 428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t)CCU4_CC4_TC_STRM_Msk;
 967              	 .loc 2 429 0
 968 003e FB68     	 ldr r3,[r7,#12]
 969 0040 43F48063 	 orr r3,r3,#1024
 970 0044 FB60     	 str r3,[r7,#12]
 971 0046 03E0     	 b .L40
 972              	.L39:
 430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t)CCU4_CC4_TC_STRM_Msk);
 973              	 .loc 2 433 0
 974 0048 FB68     	 ldr r3,[r7,#12]
 975 004a 23F48063 	 bic r3,r3,#1024
 976 004e FB60     	 str r3,[r7,#12]
 977              	.L40:
 434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 978              	 .loc 2 436 0
 979 0050 7B68     	 ldr r3,[r7,#4]
 980 0052 5A69     	 ldr r2,[r3,#20]
 981 0054 0021     	 movs r1,#0
 982 0056 FA68     	 ldr r2,[r7,#12]
 983 0058 0A43     	 orrs r2,r2,r1
 984 005a 5A61     	 str r2,[r3,#20]
 437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 985              	 .loc 2 437 0
 986 005c 1437     	 adds r7,r7,#20
 987              	.LCFI74:
 988              	 .cfi_def_cfa_offset 4
 989 005e BD46     	 mov sp,r7
 990              	.LCFI75:
 991              	 .cfi_def_cfa_register 13
 992              	 
 993 0060 5DF8047B 	 ldr r7,[sp],#4
 994              	.LCFI76:
 995              	 .cfi_restore 7
 996              	 .cfi_def_cfa_offset 0
 997 0064 7047     	 bx lr
 998              	 .cfi_endproc
 999              	.LFE221:
 1001 0066 00BF     	 .section .text.XMC_CCU4_SLICE_StopConfig,"ax",%progbits
 1002              	 .align 2
 1003              	 .global XMC_CCU4_SLICE_StopConfig
 1004              	 .thumb
 1005              	 .thumb_func
 1007              	XMC_CCU4_SLICE_StopConfig:
 1008              	.LFB222:
 438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure the Stop trigger function of a slice */
 440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
 441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                            const XMC_CCU4_SLICE_EVENT_t event,
 442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode)
 443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1009              	 .loc 2 443 0
 1010              	 .cfi_startproc
 1011              	 
 1012              	 
 1013              	 
 1014 0000 80B4     	 push {r7}
 1015              	.LCFI77:
 1016              	 .cfi_def_cfa_offset 4
 1017              	 .cfi_offset 7,-4
 1018 0002 85B0     	 sub sp,sp,#20
 1019              	.LCFI78:
 1020              	 .cfi_def_cfa_offset 24
 1021 0004 00AF     	 add r7,sp,#0
 1022              	.LCFI79:
 1023              	 .cfi_def_cfa_register 7
 1024 0006 7860     	 str r0,[r7,#4]
 1025 0008 0B46     	 mov r3,r1
 1026 000a FB70     	 strb r3,[r7,#3]
 1027 000c 1346     	 mov r3,r2
 1028 000e BB70     	 strb r3,[r7,#2]
 444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Start Mode", XMC_CCU4_CHECK_END_MODE(end_mode));
 450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1029              	 .loc 2 452 0
 1030 0010 7B68     	 ldr r3,[r7,#4]
 1031 0012 5B68     	 ldr r3,[r3,#4]
 1032 0014 FB60     	 str r3,[r7,#12]
 453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_ENDS_Msk);
 1033              	 .loc 2 453 0
 1034 0016 FB68     	 ldr r3,[r7,#12]
 1035 0018 23F00C03 	 bic r3,r3,#12
 1036 001c FB60     	 str r3,[r7,#12]
 454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_ENDS_Pos;
 1037              	 .loc 2 454 0
 1038 001e FB78     	 ldrb r3,[r7,#3]
 1039 0020 9B00     	 lsls r3,r3,#2
 1040 0022 FA68     	 ldr r2,[r7,#12]
 1041 0024 1343     	 orrs r3,r3,r2
 1042 0026 FB60     	 str r3,[r7,#12]
 455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1043              	 .loc 2 456 0
 1044 0028 7B68     	 ldr r3,[r7,#4]
 1045 002a 5A68     	 ldr r2,[r3,#4]
 1046 002c 0021     	 movs r1,#0
 1047 002e FA68     	 ldr r2,[r7,#12]
 1048 0030 0A43     	 orrs r2,r2,r1
 1049 0032 5A60     	 str r2,[r3,#4]
 457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure the stop mode */
 459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 1050              	 .loc 2 459 0
 1051 0034 7B68     	 ldr r3,[r7,#4]
 1052 0036 5B69     	 ldr r3,[r3,#20]
 1053 0038 BB60     	 str r3,[r7,#8]
 460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_ENDM_Msk);
 1054              	 .loc 2 460 0
 1055 003a BB68     	 ldr r3,[r7,#8]
 1056 003c 23F44073 	 bic r3,r3,#768
 1057 0040 BB60     	 str r3,[r7,#8]
 461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   tc |= ((uint32_t) end_mode) << CCU4_CC4_TC_ENDM_Pos;
 1058              	 .loc 2 461 0
 1059 0042 BB78     	 ldrb r3,[r7,#2]
 1060 0044 1B02     	 lsls r3,r3,#8
 1061 0046 BA68     	 ldr r2,[r7,#8]
 1062 0048 1343     	 orrs r3,r3,r2
 1063 004a BB60     	 str r3,[r7,#8]
 462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1064              	 .loc 2 463 0
 1065 004c 7B68     	 ldr r3,[r7,#4]
 1066 004e 5A69     	 ldr r2,[r3,#20]
 1067 0050 0021     	 movs r1,#0
 1068 0052 BA68     	 ldr r2,[r7,#8]
 1069 0054 0A43     	 orrs r2,r2,r1
 1070 0056 5A61     	 str r2,[r3,#20]
 464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1071              	 .loc 2 464 0
 1072 0058 1437     	 adds r7,r7,#20
 1073              	.LCFI80:
 1074              	 .cfi_def_cfa_offset 4
 1075 005a BD46     	 mov sp,r7
 1076              	.LCFI81:
 1077              	 .cfi_def_cfa_register 13
 1078              	 
 1079 005c 5DF8047B 	 ldr r7,[sp],#4
 1080              	.LCFI82:
 1081              	 .cfi_restore 7
 1082              	 .cfi_def_cfa_offset 0
 1083 0060 7047     	 bx lr
 1084              	 .cfi_endproc
 1085              	.LFE222:
 1087 0062 00BF     	 .section .text.XMC_CCU4_SLICE_LoadConfig,"ax",%progbits
 1088              	 .align 2
 1089              	 .global XMC_CCU4_SLICE_LoadConfig
 1090              	 .thumb
 1091              	 .thumb_func
 1093              	XMC_CCU4_SLICE_LoadConfig:
 1094              	.LFB223:
 465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure the Load trigger function of a slice */
 467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1095              	 .loc 2 468 0
 1096              	 .cfi_startproc
 1097              	 
 1098              	 
 1099              	 
 1100 0000 80B4     	 push {r7}
 1101              	.LCFI83:
 1102              	 .cfi_def_cfa_offset 4
 1103              	 .cfi_offset 7,-4
 1104 0002 85B0     	 sub sp,sp,#20
 1105              	.LCFI84:
 1106              	 .cfi_def_cfa_offset 24
 1107 0004 00AF     	 add r7,sp,#0
 1108              	.LCFI85:
 1109              	 .cfi_def_cfa_register 7
 1110 0006 7860     	 str r0,[r7,#4]
 1111 0008 0B46     	 mov r3,r1
 1112 000a FB70     	 strb r3,[r7,#3]
 469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the load function */
 475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1113              	 .loc 2 475 0
 1114 000c 7B68     	 ldr r3,[r7,#4]
 1115 000e 5B68     	 ldr r3,[r3,#4]
 1116 0010 FB60     	 str r3,[r7,#12]
 476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_LDS_Msk);
 1117              	 .loc 2 476 0
 1118 0012 FB68     	 ldr r3,[r7,#12]
 1119 0014 23F44053 	 bic r3,r3,#12288
 1120 0018 FB60     	 str r3,[r7,#12]
 477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_LDS_Pos;
 1121              	 .loc 2 477 0
 1122 001a FB78     	 ldrb r3,[r7,#3]
 1123 001c 1B03     	 lsls r3,r3,#12
 1124 001e FA68     	 ldr r2,[r7,#12]
 1125 0020 1343     	 orrs r3,r3,r2
 1126 0022 FB60     	 str r3,[r7,#12]
 478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1127              	 .loc 2 479 0
 1128 0024 7B68     	 ldr r3,[r7,#4]
 1129 0026 5A68     	 ldr r2,[r3,#4]
 1130 0028 0021     	 movs r1,#0
 1131 002a FA68     	 ldr r2,[r7,#12]
 1132 002c 0A43     	 orrs r2,r2,r1
 1133 002e 5A60     	 str r2,[r3,#4]
 480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1134              	 .loc 2 480 0
 1135 0030 1437     	 adds r7,r7,#20
 1136              	.LCFI86:
 1137              	 .cfi_def_cfa_offset 4
 1138 0032 BD46     	 mov sp,r7
 1139              	.LCFI87:
 1140              	 .cfi_def_cfa_register 13
 1141              	 
 1142 0034 5DF8047B 	 ldr r7,[sp],#4
 1143              	.LCFI88:
 1144              	 .cfi_restore 7
 1145              	 .cfi_def_cfa_offset 0
 1146 0038 7047     	 bx lr
 1147              	 .cfi_endproc
 1148              	.LFE223:
 1150 003a 00BF     	 .section .text.XMC_CCU4_SLICE_ModulationConfig,"ax",%progbits
 1151              	 .align 2
 1152              	 .global XMC_CCU4_SLICE_ModulationConfig
 1153              	 .thumb
 1154              	 .thumb_func
 1156              	XMC_CCU4_SLICE_ModulationConfig:
 1157              	.LFB224:
 481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure the slice modulation function */
 483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
 484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_EVENT_t event,
 485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
 486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                      const bool synch_with_pwm)
 487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1158              	 .loc 2 487 0
 1159              	 .cfi_startproc
 1160              	 
 1161              	 
 1162              	 
 1163 0000 80B4     	 push {r7}
 1164              	.LCFI89:
 1165              	 .cfi_def_cfa_offset 4
 1166              	 .cfi_offset 7,-4
 1167 0002 85B0     	 sub sp,sp,#20
 1168              	.LCFI90:
 1169              	 .cfi_def_cfa_offset 24
 1170 0004 00AF     	 add r7,sp,#0
 1171              	.LCFI91:
 1172              	 .cfi_def_cfa_register 7
 1173 0006 7860     	 str r0,[r7,#4]
 1174 0008 0846     	 mov r0,r1
 1175 000a 1146     	 mov r1,r2
 1176 000c 1A46     	 mov r2,r3
 1177 000e 0346     	 mov r3,r0
 1178 0010 FB70     	 strb r3,[r7,#3]
 1179 0012 0B46     	 mov r3,r1
 1180 0014 BB70     	 strb r3,[r7,#2]
 1181 0016 1346     	 mov r3,r2
 1182 0018 7B70     	 strb r3,[r7,#1]
 488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
 492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(even
 493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Modulation Mode",
 494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              ((mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT) ||\
 495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****               (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT)));
 496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   tc  = slice->TC;
 1183              	 .loc 2 497 0
 1184 001a 7B68     	 ldr r3,[r7,#4]
 1185 001c 5B69     	 ldr r3,[r3,#20]
 1186 001e FB60     	 str r3,[r7,#12]
 498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1187              	 .loc 2 498 0
 1188 0020 7B68     	 ldr r3,[r7,#4]
 1189 0022 5B68     	 ldr r3,[r3,#4]
 1190 0024 BB60     	 str r3,[r7,#8]
 499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the modulation function */
 501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_MOS_Msk);
 1191              	 .loc 2 501 0
 1192 0026 BB68     	 ldr r3,[r7,#8]
 1193 0028 23F44023 	 bic r3,r3,#786432
 1194 002c BB60     	 str r3,[r7,#8]
 502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_MOS_Pos;
 1195              	 .loc 2 502 0
 1196 002e FB78     	 ldrb r3,[r7,#3]
 1197 0030 9B04     	 lsls r3,r3,#18
 1198 0032 BA68     	 ldr r2,[r7,#8]
 1199 0034 1343     	 orrs r3,r3,r2
 1200 0036 BB60     	 str r3,[r7,#8]
 503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1201              	 .loc 2 503 0
 1202 0038 7B68     	 ldr r3,[r7,#4]
 1203 003a 5A68     	 ldr r2,[r3,#4]
 1204 003c 0021     	 movs r1,#0
 1205 003e BA68     	 ldr r2,[r7,#8]
 1206 0040 0A43     	 orrs r2,r2,r1
 1207 0042 5A60     	 str r2,[r3,#4]
 504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, Modulation mode */
 506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT)
 1208              	 .loc 2 506 0
 1209 0044 BB78     	 ldrb r3,[r7,#2]
 1210 0046 012B     	 cmp r3,#1
 1211 0048 04D1     	 bne .L44
 507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMT_Msk;
 1212              	 .loc 2 508 0
 1213 004a FB68     	 ldr r3,[r7,#12]
 1214 004c 43F08073 	 orr r3,r3,#16777216
 1215 0050 FB60     	 str r3,[r7,#12]
 1216 0052 03E0     	 b .L45
 1217              	.L44:
 509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMT_Msk);
 1218              	 .loc 2 512 0
 1219 0054 FB68     	 ldr r3,[r7,#12]
 1220 0056 23F08073 	 bic r3,r3,#16777216
 1221 005a FB60     	 str r3,[r7,#12]
 1222              	.L45:
 513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Synchronization of modulation effect with PWM cycle */
 516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 1223              	 .loc 2 516 0
 1224 005c 7B78     	 ldrb r3,[r7,#1]
 1225 005e 002B     	 cmp r3,#0
 1226 0060 04D0     	 beq .L46
 517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMS_Msk;
 1227              	 .loc 2 518 0
 1228 0062 FB68     	 ldr r3,[r7,#12]
 1229 0064 43F40003 	 orr r3,r3,#8388608
 1230 0068 FB60     	 str r3,[r7,#12]
 1231 006a 03E0     	 b .L47
 1232              	.L46:
 519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMS_Msk);
 1233              	 .loc 2 522 0
 1234 006c FB68     	 ldr r3,[r7,#12]
 1235 006e 23F40003 	 bic r3,r3,#8388608
 1236 0072 FB60     	 str r3,[r7,#12]
 1237              	.L47:
 523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1238              	 .loc 2 525 0
 1239 0074 7B68     	 ldr r3,[r7,#4]
 1240 0076 5A69     	 ldr r2,[r3,#20]
 1241 0078 0021     	 movs r1,#0
 1242 007a FA68     	 ldr r2,[r7,#12]
 1243 007c 0A43     	 orrs r2,r2,r1
 1244 007e 5A61     	 str r2,[r3,#20]
 526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1245              	 .loc 2 526 0
 1246 0080 1437     	 adds r7,r7,#20
 1247              	.LCFI92:
 1248              	 .cfi_def_cfa_offset 4
 1249 0082 BD46     	 mov sp,r7
 1250              	.LCFI93:
 1251              	 .cfi_def_cfa_register 13
 1252              	 
 1253 0084 5DF8047B 	 ldr r7,[sp],#4
 1254              	.LCFI94:
 1255              	 .cfi_restore 7
 1256              	 .cfi_def_cfa_offset 0
 1257 0088 7047     	 bx lr
 1258              	 .cfi_endproc
 1259              	.LFE224:
 1261 008a 00BF     	 .section .text.XMC_CCU4_SLICE_CountConfig,"ax",%progbits
 1262              	 .align 2
 1263              	 .global XMC_CCU4_SLICE_CountConfig
 1264              	 .thumb
 1265              	 .thumb_func
 1267              	XMC_CCU4_SLICE_CountConfig:
 1268              	.LFB225:
 527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure the slice count function */
 529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1269              	 .loc 2 530 0
 1270              	 .cfi_startproc
 1271              	 
 1272              	 
 1273              	 
 1274 0000 80B4     	 push {r7}
 1275              	.LCFI95:
 1276              	 .cfi_def_cfa_offset 4
 1277              	 .cfi_offset 7,-4
 1278 0002 85B0     	 sub sp,sp,#20
 1279              	.LCFI96:
 1280              	 .cfi_def_cfa_offset 24
 1281 0004 00AF     	 add r7,sp,#0
 1282              	.LCFI97:
 1283              	 .cfi_def_cfa_register 7
 1284 0006 7860     	 str r0,[r7,#4]
 1285 0008 0B46     	 mov r3,r1
 1286 000a FB70     	 strb r3,[r7,#3]
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the count function */
 537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1287              	 .loc 2 537 0
 1288 000c 7B68     	 ldr r3,[r7,#4]
 1289 000e 5B68     	 ldr r3,[r3,#4]
 1290 0010 FB60     	 str r3,[r7,#12]
 538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CNTS_Msk);
 1291              	 .loc 2 538 0
 1292 0012 FB68     	 ldr r3,[r7,#12]
 1293 0014 23F44043 	 bic r3,r3,#49152
 1294 0018 FB60     	 str r3,[r7,#12]
 539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CNTS_Pos;
 1295              	 .loc 2 539 0
 1296 001a FB78     	 ldrb r3,[r7,#3]
 1297 001c 9B03     	 lsls r3,r3,#14
 1298 001e FA68     	 ldr r2,[r7,#12]
 1299 0020 1343     	 orrs r3,r3,r2
 1300 0022 FB60     	 str r3,[r7,#12]
 540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1301              	 .loc 2 541 0
 1302 0024 7B68     	 ldr r3,[r7,#4]
 1303 0026 5A68     	 ldr r2,[r3,#4]
 1304 0028 0021     	 movs r1,#0
 1305 002a FA68     	 ldr r2,[r7,#12]
 1306 002c 0A43     	 orrs r2,r2,r1
 1307 002e 5A60     	 str r2,[r3,#4]
 542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1308              	 .loc 2 542 0
 1309 0030 1437     	 adds r7,r7,#20
 1310              	.LCFI98:
 1311              	 .cfi_def_cfa_offset 4
 1312 0032 BD46     	 mov sp,r7
 1313              	.LCFI99:
 1314              	 .cfi_def_cfa_register 13
 1315              	 
 1316 0034 5DF8047B 	 ldr r7,[sp],#4
 1317              	.LCFI100:
 1318              	 .cfi_restore 7
 1319              	 .cfi_def_cfa_offset 0
 1320 0038 7047     	 bx lr
 1321              	 .cfi_endproc
 1322              	.LFE225:
 1324 003a 00BF     	 .section .text.XMC_CCU4_SLICE_GateConfig,"ax",%progbits
 1325              	 .align 2
 1326              	 .global XMC_CCU4_SLICE_GateConfig
 1327              	 .thumb
 1328              	 .thumb_func
 1330              	XMC_CCU4_SLICE_GateConfig:
 1331              	.LFB226:
 543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure slice gate function */
 545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1332              	 .loc 2 546 0
 1333              	 .cfi_startproc
 1334              	 
 1335              	 
 1336              	 
 1337 0000 80B4     	 push {r7}
 1338              	.LCFI101:
 1339              	 .cfi_def_cfa_offset 4
 1340              	 .cfi_offset 7,-4
 1341 0002 85B0     	 sub sp,sp,#20
 1342              	.LCFI102:
 1343              	 .cfi_def_cfa_offset 24
 1344 0004 00AF     	 add r7,sp,#0
 1345              	.LCFI103:
 1346              	 .cfi_def_cfa_register 7
 1347 0006 7860     	 str r0,[r7,#4]
 1348 0008 0B46     	 mov r3,r1
 1349 000a FB70     	 strb r3,[r7,#3]
 547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 548:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 549:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 550:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 551:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 553:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1350              	 .loc 2 553 0
 1351 000c 7B68     	 ldr r3,[r7,#4]
 1352 000e 5B68     	 ldr r3,[r3,#4]
 1353 0010 FB60     	 str r3,[r7,#12]
 554:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_GATES_Msk);
 1354              	 .loc 2 554 0
 1355 0012 FB68     	 ldr r3,[r7,#12]
 1356 0014 23F44073 	 bic r3,r3,#768
 1357 0018 FB60     	 str r3,[r7,#12]
 555:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_GATES_Pos;
 1358              	 .loc 2 555 0
 1359 001a FB78     	 ldrb r3,[r7,#3]
 1360 001c 1B02     	 lsls r3,r3,#8
 1361 001e FA68     	 ldr r2,[r7,#12]
 1362 0020 1343     	 orrs r3,r3,r2
 1363 0022 FB60     	 str r3,[r7,#12]
 556:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 557:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1364              	 .loc 2 557 0
 1365 0024 7B68     	 ldr r3,[r7,#4]
 1366 0026 5A68     	 ldr r2,[r3,#4]
 1367 0028 0021     	 movs r1,#0
 1368 002a FA68     	 ldr r2,[r7,#12]
 1369 002c 0A43     	 orrs r2,r2,r1
 1370 002e 5A60     	 str r2,[r3,#4]
 558:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1371              	 .loc 2 558 0
 1372 0030 1437     	 adds r7,r7,#20
 1373              	.LCFI104:
 1374              	 .cfi_def_cfa_offset 4
 1375 0032 BD46     	 mov sp,r7
 1376              	.LCFI105:
 1377              	 .cfi_def_cfa_register 13
 1378              	 
 1379 0034 5DF8047B 	 ldr r7,[sp],#4
 1380              	.LCFI106:
 1381              	 .cfi_restore 7
 1382              	 .cfi_def_cfa_offset 0
 1383 0038 7047     	 bx lr
 1384              	 .cfi_endproc
 1385              	.LFE226:
 1387 003a 00BF     	 .section .text.XMC_CCU4_SLICE_Capture0Config,"ax",%progbits
 1388              	 .align 2
 1389              	 .global XMC_CCU4_SLICE_Capture0Config
 1390              	 .thumb
 1391              	 .thumb_func
 1393              	XMC_CCU4_SLICE_Capture0Config:
 1394              	.LFB227:
 559:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 560:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure Capture-0 function */
 561:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 562:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1395              	 .loc 2 562 0
 1396              	 .cfi_startproc
 1397              	 
 1398              	 
 1399              	 
 1400 0000 80B4     	 push {r7}
 1401              	.LCFI107:
 1402              	 .cfi_def_cfa_offset 4
 1403              	 .cfi_offset 7,-4
 1404 0002 85B0     	 sub sp,sp,#20
 1405              	.LCFI108:
 1406              	 .cfi_def_cfa_offset 24
 1407 0004 00AF     	 add r7,sp,#0
 1408              	.LCFI109:
 1409              	 .cfi_def_cfa_register 7
 1410 0006 7860     	 str r0,[r7,#4]
 1411 0008 0B46     	 mov r3,r1
 1412 000a FB70     	 strb r3,[r7,#3]
 563:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 565:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 566:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 567:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 568:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 569:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1413              	 .loc 2 569 0
 1414 000c 7B68     	 ldr r3,[r7,#4]
 1415 000e 5B68     	 ldr r3,[r3,#4]
 1416 0010 FB60     	 str r3,[r7,#12]
 570:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP0S_Msk);
 1417              	 .loc 2 570 0
 1418 0012 FB68     	 ldr r3,[r7,#12]
 1419 0014 23F03003 	 bic r3,r3,#48
 1420 0018 FB60     	 str r3,[r7,#12]
 571:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP0S_Pos;
 1421              	 .loc 2 571 0
 1422 001a FB78     	 ldrb r3,[r7,#3]
 1423 001c 1B01     	 lsls r3,r3,#4
 1424 001e FA68     	 ldr r2,[r7,#12]
 1425 0020 1343     	 orrs r3,r3,r2
 1426 0022 FB60     	 str r3,[r7,#12]
 572:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 573:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1427              	 .loc 2 573 0
 1428 0024 7B68     	 ldr r3,[r7,#4]
 1429 0026 5A68     	 ldr r2,[r3,#4]
 1430 0028 0021     	 movs r1,#0
 1431 002a FA68     	 ldr r2,[r7,#12]
 1432 002c 0A43     	 orrs r2,r2,r1
 1433 002e 5A60     	 str r2,[r3,#4]
 574:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1434              	 .loc 2 574 0
 1435 0030 1437     	 adds r7,r7,#20
 1436              	.LCFI110:
 1437              	 .cfi_def_cfa_offset 4
 1438 0032 BD46     	 mov sp,r7
 1439              	.LCFI111:
 1440              	 .cfi_def_cfa_register 13
 1441              	 
 1442 0034 5DF8047B 	 ldr r7,[sp],#4
 1443              	.LCFI112:
 1444              	 .cfi_restore 7
 1445              	 .cfi_def_cfa_offset 0
 1446 0038 7047     	 bx lr
 1447              	 .cfi_endproc
 1448              	.LFE227:
 1450 003a 00BF     	 .section .text.XMC_CCU4_SLICE_Capture1Config,"ax",%progbits
 1451              	 .align 2
 1452              	 .global XMC_CCU4_SLICE_Capture1Config
 1453              	 .thumb
 1454              	 .thumb_func
 1456              	XMC_CCU4_SLICE_Capture1Config:
 1457              	.LFB228:
 575:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 576:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure Capture-1 function */
 577:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 578:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1458              	 .loc 2 578 0
 1459              	 .cfi_startproc
 1460              	 
 1461              	 
 1462              	 
 1463 0000 80B4     	 push {r7}
 1464              	.LCFI113:
 1465              	 .cfi_def_cfa_offset 4
 1466              	 .cfi_offset 7,-4
 1467 0002 85B0     	 sub sp,sp,#20
 1468              	.LCFI114:
 1469              	 .cfi_def_cfa_offset 24
 1470 0004 00AF     	 add r7,sp,#0
 1471              	.LCFI115:
 1472              	 .cfi_def_cfa_register 7
 1473 0006 7860     	 str r0,[r7,#4]
 1474 0008 0B46     	 mov r3,r1
 1475 000a FB70     	 strb r3,[r7,#3]
 579:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 580:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 582:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 583:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 584:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 585:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1476              	 .loc 2 585 0
 1477 000c 7B68     	 ldr r3,[r7,#4]
 1478 000e 5B68     	 ldr r3,[r3,#4]
 1479 0010 FB60     	 str r3,[r7,#12]
 586:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP1S_Msk);
 1480              	 .loc 2 586 0
 1481 0012 FB68     	 ldr r3,[r7,#12]
 1482 0014 23F0C003 	 bic r3,r3,#192
 1483 0018 FB60     	 str r3,[r7,#12]
 587:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP1S_Pos;
 1484              	 .loc 2 587 0
 1485 001a FB78     	 ldrb r3,[r7,#3]
 1486 001c 9B01     	 lsls r3,r3,#6
 1487 001e FA68     	 ldr r2,[r7,#12]
 1488 0020 1343     	 orrs r3,r3,r2
 1489 0022 FB60     	 str r3,[r7,#12]
 588:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1490              	 .loc 2 589 0
 1491 0024 7B68     	 ldr r3,[r7,#4]
 1492 0026 5A68     	 ldr r2,[r3,#4]
 1493 0028 0021     	 movs r1,#0
 1494 002a FA68     	 ldr r2,[r7,#12]
 1495 002c 0A43     	 orrs r2,r2,r1
 1496 002e 5A60     	 str r2,[r3,#4]
 590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1497              	 .loc 2 590 0
 1498 0030 1437     	 adds r7,r7,#20
 1499              	.LCFI116:
 1500              	 .cfi_def_cfa_offset 4
 1501 0032 BD46     	 mov sp,r7
 1502              	.LCFI117:
 1503              	 .cfi_def_cfa_register 13
 1504              	 
 1505 0034 5DF8047B 	 ldr r7,[sp],#4
 1506              	.LCFI118:
 1507              	 .cfi_restore 7
 1508              	 .cfi_def_cfa_offset 0
 1509 0038 7047     	 bx lr
 1510              	 .cfi_endproc
 1511              	.LFE228:
 1513 003a 00BF     	 .section .text.XMC_CCU4_SLICE_DirectionConfig,"ax",%progbits
 1514              	 .align 2
 1515              	 .global XMC_CCU4_SLICE_DirectionConfig
 1516              	 .thumb
 1517              	 .thumb_func
 1519              	XMC_CCU4_SLICE_DirectionConfig:
 1520              	.LFB229:
 591:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 592:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure direction function */
 593:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
 594:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1521              	 .loc 2 594 0
 1522              	 .cfi_startproc
 1523              	 
 1524              	 
 1525              	 
 1526 0000 80B4     	 push {r7}
 1527              	.LCFI119:
 1528              	 .cfi_def_cfa_offset 4
 1529              	 .cfi_offset 7,-4
 1530 0002 85B0     	 sub sp,sp,#20
 1531              	.LCFI120:
 1532              	 .cfi_def_cfa_offset 24
 1533 0004 00AF     	 add r7,sp,#0
 1534              	.LCFI121:
 1535              	 .cfi_def_cfa_register 7
 1536 0006 7860     	 str r0,[r7,#4]
 1537 0008 0B46     	 mov r3,r1
 1538 000a FB70     	 strb r3,[r7,#3]
 595:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 596:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 597:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 598:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event
 599:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 600:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the direction function */
 601:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1539              	 .loc 2 601 0
 1540 000c 7B68     	 ldr r3,[r7,#4]
 1541 000e 5B68     	 ldr r3,[r3,#4]
 1542 0010 FB60     	 str r3,[r7,#12]
 602:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_UDS_Msk);
 1543              	 .loc 2 602 0
 1544 0012 FB68     	 ldr r3,[r7,#12]
 1545 0014 23F44063 	 bic r3,r3,#3072
 1546 0018 FB60     	 str r3,[r7,#12]
 603:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_UDS_Pos;
 1547              	 .loc 2 603 0
 1548 001a FB78     	 ldrb r3,[r7,#3]
 1549 001c 9B02     	 lsls r3,r3,#10
 1550 001e FA68     	 ldr r2,[r7,#12]
 1551 0020 1343     	 orrs r3,r3,r2
 1552 0022 FB60     	 str r3,[r7,#12]
 604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1553              	 .loc 2 605 0
 1554 0024 7B68     	 ldr r3,[r7,#4]
 1555 0026 5A68     	 ldr r2,[r3,#4]
 1556 0028 0021     	 movs r1,#0
 1557 002a FA68     	 ldr r2,[r7,#12]
 1558 002c 0A43     	 orrs r2,r2,r1
 1559 002e 5A60     	 str r2,[r3,#4]
 606:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1560              	 .loc 2 606 0
 1561 0030 1437     	 adds r7,r7,#20
 1562              	.LCFI122:
 1563              	 .cfi_def_cfa_offset 4
 1564 0032 BD46     	 mov sp,r7
 1565              	.LCFI123:
 1566              	 .cfi_def_cfa_register 13
 1567              	 
 1568 0034 5DF8047B 	 ldr r7,[sp],#4
 1569              	.LCFI124:
 1570              	 .cfi_restore 7
 1571              	 .cfi_def_cfa_offset 0
 1572 0038 7047     	 bx lr
 1573              	 .cfi_endproc
 1574              	.LFE229:
 1576 003a 00BF     	 .section .text.XMC_CCU4_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1577              	 .align 2
 1578              	 .global XMC_CCU4_SLICE_StatusBitOverrideConfig
 1579              	 .thumb
 1580              	 .thumb_func
 1582              	XMC_CCU4_SLICE_StatusBitOverrideConfig:
 1583              	.LFB230:
 607:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 608:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure slice status bit override function */
 609:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice)
 610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1584              	 .loc 2 610 0
 1585              	 .cfi_startproc
 1586              	 
 1587              	 
 1588              	 
 1589 0000 80B4     	 push {r7}
 1590              	.LCFI125:
 1591              	 .cfi_def_cfa_offset 4
 1592              	 .cfi_offset 7,-4
 1593 0002 85B0     	 sub sp,sp,#20
 1594              	.LCFI126:
 1595              	 .cfi_def_cfa_offset 24
 1596 0004 00AF     	 add r7,sp,#0
 1597              	.LCFI127:
 1598              	 .cfi_def_cfa_register 7
 1599 0006 7860     	 str r0,[r7,#4]
 611:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 612:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 614:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 615:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the override function */
 616:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1600              	 .loc 2 616 0
 1601 0008 7B68     	 ldr r3,[r7,#4]
 1602 000a 5B68     	 ldr r3,[r3,#4]
 1603 000c FB60     	 str r3,[r7,#12]
 617:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Map status bit trigger override to Event 1 & 
 618:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****          status bit value override to Event 2 */
 619:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_OFS_Msk);
 1604              	 .loc 2 619 0
 1605 000e FB68     	 ldr r3,[r7,#12]
 1606 0010 23F48033 	 bic r3,r3,#65536
 1607 0014 FB60     	 str r3,[r7,#12]
 620:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_OFS_Pos;
 1608              	 .loc 2 620 0
 1609 0016 FB68     	 ldr r3,[r7,#12]
 1610 0018 43F48033 	 orr r3,r3,#65536
 1611 001c FB60     	 str r3,[r7,#12]
 621:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 622:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1612              	 .loc 2 622 0
 1613 001e 7B68     	 ldr r3,[r7,#4]
 1614 0020 5A68     	 ldr r2,[r3,#4]
 1615 0022 0021     	 movs r1,#0
 1616 0024 FA68     	 ldr r2,[r7,#12]
 1617 0026 0A43     	 orrs r2,r2,r1
 1618 0028 5A60     	 str r2,[r3,#4]
 623:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1619              	 .loc 2 623 0
 1620 002a 1437     	 adds r7,r7,#20
 1621              	.LCFI128:
 1622              	 .cfi_def_cfa_offset 4
 1623 002c BD46     	 mov sp,r7
 1624              	.LCFI129:
 1625              	 .cfi_def_cfa_register 13
 1626              	 
 1627 002e 5DF8047B 	 ldr r7,[sp],#4
 1628              	.LCFI130:
 1629              	 .cfi_restore 7
 1630              	 .cfi_def_cfa_offset 0
 1631 0032 7047     	 bx lr
 1632              	 .cfi_endproc
 1633              	.LFE230:
 1635              	 .section .text.XMC_CCU4_SLICE_TrapConfig,"ax",%progbits
 1636              	 .align 2
 1637              	 .global XMC_CCU4_SLICE_TrapConfig
 1638              	 .thumb
 1639              	 .thumb_func
 1641              	XMC_CCU4_SLICE_TrapConfig:
 1642              	.LFB231:
 624:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 625:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure trap function */
 626:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
 627:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
 628:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                const bool synch_with_pwm)
 629:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1643              	 .loc 2 629 0
 1644              	 .cfi_startproc
 1645              	 
 1646              	 
 1647              	 
 1648 0000 80B4     	 push {r7}
 1649              	.LCFI131:
 1650              	 .cfi_def_cfa_offset 4
 1651              	 .cfi_offset 7,-4
 1652 0002 85B0     	 sub sp,sp,#20
 1653              	.LCFI132:
 1654              	 .cfi_def_cfa_offset 24
 1655 0004 00AF     	 add r7,sp,#0
 1656              	.LCFI133:
 1657              	 .cfi_def_cfa_register 7
 1658 0006 7860     	 str r0,[r7,#4]
 1659 0008 0B46     	 mov r3,r1
 1660 000a FB70     	 strb r3,[r7,#3]
 1661 000c 1346     	 mov r3,r2
 1662 000e BB70     	 strb r3,[r7,#2]
 630:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 631:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 632:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 633:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 634:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU4_SLICE_TRAP_EXIT
 635:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                                              (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT
 636:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     
 637:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* First, Map trap function to Event 2 */
 638:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1663              	 .loc 2 638 0
 1664 0010 7B68     	 ldr r3,[r7,#4]
 1665 0012 5B68     	 ldr r3,[r3,#4]
 1666 0014 BB60     	 str r3,[r7,#8]
 639:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_TS_Msk);
 1667              	 .loc 2 639 0
 1668 0016 BB68     	 ldr r3,[r7,#8]
 1669 0018 23F40033 	 bic r3,r3,#131072
 1670 001c BB60     	 str r3,[r7,#8]
 640:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_TS_Pos;
 1671              	 .loc 2 640 0
 1672 001e BB68     	 ldr r3,[r7,#8]
 1673 0020 43F40033 	 orr r3,r3,#131072
 1674 0024 BB60     	 str r3,[r7,#8]
 641:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1675              	 .loc 2 641 0
 1676 0026 7B68     	 ldr r3,[r7,#4]
 1677 0028 5A68     	 ldr r2,[r3,#4]
 1678 002a 0021     	 movs r1,#0
 1679 002c BA68     	 ldr r2,[r7,#8]
 1680 002e 0A43     	 orrs r2,r2,r1
 1681 0030 5A60     	 str r2,[r3,#4]
 642:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 643:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure synchronization option */
 644:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 1682              	 .loc 2 644 0
 1683 0032 7B68     	 ldr r3,[r7,#4]
 1684 0034 5B69     	 ldr r3,[r3,#20]
 1685 0036 FB60     	 str r3,[r7,#12]
 645:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 646:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 1686              	 .loc 2 646 0
 1687 0038 BB78     	 ldrb r3,[r7,#2]
 1688 003a 002B     	 cmp r3,#0
 1689 003c 04D0     	 beq .L55
 647:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 648:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSE_Msk;
 1690              	 .loc 2 648 0
 1691 003e FB68     	 ldr r3,[r7,#12]
 1692 0040 43F40013 	 orr r3,r3,#2097152
 1693 0044 FB60     	 str r3,[r7,#12]
 1694 0046 03E0     	 b .L56
 1695              	.L55:
 649:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 650:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 651:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 652:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSE_Msk);
 1696              	 .loc 2 652 0
 1697 0048 FB68     	 ldr r3,[r7,#12]
 1698 004a 23F40013 	 bic r3,r3,#2097152
 1699 004e FB60     	 str r3,[r7,#12]
 1700              	.L56:
 653:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 654:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 655:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure exit mode */
 656:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW)
 1701              	 .loc 2 656 0
 1702 0050 FB78     	 ldrb r3,[r7,#3]
 1703 0052 012B     	 cmp r3,#1
 1704 0054 04D1     	 bne .L57
 657:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 658:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSW_Msk;
 1705              	 .loc 2 658 0
 1706 0056 FB68     	 ldr r3,[r7,#12]
 1707 0058 43F48003 	 orr r3,r3,#4194304
 1708 005c FB60     	 str r3,[r7,#12]
 1709 005e 03E0     	 b .L58
 1710              	.L57:
 659:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 660:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 661:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 662:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSW_Msk);
 1711              	 .loc 2 662 0
 1712 0060 FB68     	 ldr r3,[r7,#12]
 1713 0062 23F48003 	 bic r3,r3,#4194304
 1714 0066 FB60     	 str r3,[r7,#12]
 1715              	.L58:
 663:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 664:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 665:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1716              	 .loc 2 665 0
 1717 0068 7B68     	 ldr r3,[r7,#4]
 1718 006a 5A69     	 ldr r2,[r3,#20]
 1719 006c 0021     	 movs r1,#0
 1720 006e FA68     	 ldr r2,[r7,#12]
 1721 0070 0A43     	 orrs r2,r2,r1
 1722 0072 5A61     	 str r2,[r3,#20]
 666:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1723              	 .loc 2 666 0
 1724 0074 1437     	 adds r7,r7,#20
 1725              	.LCFI134:
 1726              	 .cfi_def_cfa_offset 4
 1727 0076 BD46     	 mov sp,r7
 1728              	.LCFI135:
 1729              	 .cfi_def_cfa_register 13
 1730              	 
 1731 0078 5DF8047B 	 ldr r7,[sp],#4
 1732              	.LCFI136:
 1733              	 .cfi_restore 7
 1734              	 .cfi_def_cfa_offset 0
 1735 007c 7047     	 bx lr
 1736              	 .cfi_endproc
 1737              	.LFE231:
 1739 007e 00BF     	 .section .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1740              	 .align 2
 1741              	 .global XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
 1742              	 .thumb
 1743              	 .thumb_func
 1745              	XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:
 1746              	.LFB232:
 667:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 668:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure a slice Status Bit Override event */
 669:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
 670:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
 671:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
 672:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1747              	 .loc 2 672 0
 1748              	 .cfi_startproc
 1749              	 
 1750              	 
 1751              	 
 1752 0000 80B4     	 push {r7}
 1753              	.LCFI137:
 1754              	 .cfi_def_cfa_offset 4
 1755              	 .cfi_offset 7,-4
 1756 0002 87B0     	 sub sp,sp,#28
 1757              	.LCFI138:
 1758              	 .cfi_def_cfa_offset 32
 1759 0004 00AF     	 add r7,sp,#0
 1760              	.LCFI139:
 1761              	 .cfi_def_cfa_register 7
 1762 0006 F860     	 str r0,[r7,#12]
 1763 0008 B960     	 str r1,[r7,#8]
 1764 000a 7A60     	 str r2,[r7,#4]
 673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 674:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 675:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU4_IsVal
 676:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 677:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****          XMC_CCU4_SLICE_IsInputvalid(ev1_config->mapped_input));
 678:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 679:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 680:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 681:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              ((ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 682:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****               (ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 683:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 684:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 685:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 686:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****          XMC_CCU4_SLICE_IsInputvalid(ev2_config->mapped_input));
 687:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 688:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 689:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 690:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              ((ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 691:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****               (ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 692:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period", 
 693:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 694:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 695:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS2;
 696:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 697:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV1EM_Pos);
 699:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS2_EV1EM_Pos;
 700:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 701:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 702:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV2EM_Pos);
 703:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS2_EV2EM_Pos;
 704:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 705:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 706:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV1LM_Pos);
 707:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS2_EV1LM_Pos;
 708:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 709:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 710:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV2LM_Pos);
 711:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS2_EV2LM_Pos;
 712:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 713:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 714:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF1M_Pos);
 715:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS2_LPF1M_Pos;
 716:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 717:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 718:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF2M_Pos);
 719:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS2_LPF2M_Pos;
 720:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 721:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->INS2 = ins;
 722:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 723:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 724:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 725:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, the input for Event1 */
 726:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV1IS_Pos);
 727:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS1_EV1IS_Pos;
 728:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 729:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Finally, the input for Event2 */
 730:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV2IS_Pos);
 731:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS1_EV2IS_Pos;
 732:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 733:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 734:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #else
 735:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1765              	 .loc 2 735 0
 1766 000c FB68     	 ldr r3,[r7,#12]
 1767 000e 1B68     	 ldr r3,[r3]
 1768 0010 7B61     	 str r3,[r7,#20]
 736:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 737:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 738:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV1EM_Pos);
 1769              	 .loc 2 738 0
 1770 0012 7B69     	 ldr r3,[r7,#20]
 1771 0014 23F44023 	 bic r3,r3,#786432
 1772 0018 7B61     	 str r3,[r7,#20]
 739:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS_EV1EM_Pos;
 1773              	 .loc 2 739 0
 1774 001a BB68     	 ldr r3,[r7,#8]
 1775 001c 5B78     	 ldrb r3,[r3,#1]
 1776 001e 9B04     	 lsls r3,r3,#18
 1777 0020 7A69     	 ldr r2,[r7,#20]
 1778 0022 1343     	 orrs r3,r3,r2
 1779 0024 7B61     	 str r3,[r7,#20]
 740:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 741:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 742:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV2EM_Pos);
 1780              	 .loc 2 742 0
 1781 0026 7B69     	 ldr r3,[r7,#20]
 1782 0028 23F44013 	 bic r3,r3,#3145728
 1783 002c 7B61     	 str r3,[r7,#20]
 743:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS_EV2EM_Pos;
 1784              	 .loc 2 743 0
 1785 002e 7B68     	 ldr r3,[r7,#4]
 1786 0030 5B78     	 ldrb r3,[r3,#1]
 1787 0032 1B05     	 lsls r3,r3,#20
 1788 0034 7A69     	 ldr r2,[r7,#20]
 1789 0036 1343     	 orrs r3,r3,r2
 1790 0038 7B61     	 str r3,[r7,#20]
 744:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 745:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 746:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV1LM_Pos);
 1791              	 .loc 2 746 0
 1792 003a 7B69     	 ldr r3,[r7,#20]
 1793 003c 23F40003 	 bic r3,r3,#8388608
 1794 0040 7B61     	 str r3,[r7,#20]
 747:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS_EV1LM_Pos;
 1795              	 .loc 2 747 0
 1796 0042 BB68     	 ldr r3,[r7,#8]
 1797 0044 9B78     	 ldrb r3,[r3,#2]
 1798 0046 DB05     	 lsls r3,r3,#23
 1799 0048 7A69     	 ldr r2,[r7,#20]
 1800 004a 1343     	 orrs r3,r3,r2
 1801 004c 7B61     	 str r3,[r7,#20]
 748:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 749:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 750:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV2LM_Pos);
 1802              	 .loc 2 750 0
 1803 004e 7B69     	 ldr r3,[r7,#20]
 1804 0050 23F08073 	 bic r3,r3,#16777216
 1805 0054 7B61     	 str r3,[r7,#20]
 751:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS_EV2LM_Pos;
 1806              	 .loc 2 751 0
 1807 0056 7B68     	 ldr r3,[r7,#4]
 1808 0058 9B78     	 ldrb r3,[r3,#2]
 1809 005a 1B06     	 lsls r3,r3,#24
 1810 005c 7A69     	 ldr r2,[r7,#20]
 1811 005e 1343     	 orrs r3,r3,r2
 1812 0060 7B61     	 str r3,[r7,#20]
 752:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 753:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 754:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF1M_Pos);
 1813              	 .loc 2 754 0
 1814 0062 7B69     	 ldr r3,[r7,#20]
 1815 0064 23F0C053 	 bic r3,r3,#402653184
 1816 0068 7B61     	 str r3,[r7,#20]
 755:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS_LPF1M_Pos;
 1817              	 .loc 2 755 0
 1818 006a BB68     	 ldr r3,[r7,#8]
 1819 006c DB78     	 ldrb r3,[r3,#3]
 1820 006e DB06     	 lsls r3,r3,#27
 1821 0070 7A69     	 ldr r2,[r7,#20]
 1822 0072 1343     	 orrs r3,r3,r2
 1823 0074 7B61     	 str r3,[r7,#20]
 756:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 757:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 758:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF2M_Pos);
 1824              	 .loc 2 758 0
 1825 0076 7B69     	 ldr r3,[r7,#20]
 1826 0078 23F0C043 	 bic r3,r3,#1610612736
 1827 007c 7B61     	 str r3,[r7,#20]
 759:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS_LPF2M_Pos;
 1828              	 .loc 2 759 0
 1829 007e 7B68     	 ldr r3,[r7,#4]
 1830 0080 DB78     	 ldrb r3,[r3,#3]
 1831 0082 5B07     	 lsls r3,r3,#29
 1832 0084 7A69     	 ldr r2,[r7,#20]
 1833 0086 1343     	 orrs r3,r3,r2
 1834 0088 7B61     	 str r3,[r7,#20]
 760:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 761:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, the input for Event1 */
 762:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV1IS_Pos);
 1835              	 .loc 2 762 0
 1836 008a 7B69     	 ldr r3,[r7,#20]
 1837 008c 23F0F003 	 bic r3,r3,#240
 1838 0090 7B61     	 str r3,[r7,#20]
 763:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS_EV1IS_Pos;
 1839              	 .loc 2 763 0
 1840 0092 BB68     	 ldr r3,[r7,#8]
 1841 0094 1B78     	 ldrb r3,[r3]
 1842 0096 1B01     	 lsls r3,r3,#4
 1843 0098 7A69     	 ldr r2,[r7,#20]
 1844 009a 1343     	 orrs r3,r3,r2
 1845 009c 7B61     	 str r3,[r7,#20]
 764:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 765:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Finally, the input for Event2 */
 766:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV2IS_Pos);
 1846              	 .loc 2 766 0
 1847 009e 7B69     	 ldr r3,[r7,#20]
 1848 00a0 23F47063 	 bic r3,r3,#3840
 1849 00a4 7B61     	 str r3,[r7,#20]
 767:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS_EV2IS_Pos;
 1850              	 .loc 2 767 0
 1851 00a6 7B68     	 ldr r3,[r7,#4]
 1852 00a8 1B78     	 ldrb r3,[r3]
 1853 00aa 1B02     	 lsls r3,r3,#8
 1854 00ac 7A69     	 ldr r2,[r7,#20]
 1855 00ae 1343     	 orrs r3,r3,r2
 1856 00b0 7B61     	 str r3,[r7,#20]
 768:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 769:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 1857              	 .loc 2 769 0
 1858 00b2 FB68     	 ldr r3,[r7,#12]
 1859 00b4 1A68     	 ldr r2,[r3]
 1860 00b6 0021     	 movs r1,#0
 1861 00b8 7A69     	 ldr r2,[r7,#20]
 1862 00ba 0A43     	 orrs r2,r2,r1
 1863 00bc 1A60     	 str r2,[r3]
 770:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 771:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 1864              	 .loc 2 771 0
 1865 00be 1C37     	 adds r7,r7,#28
 1866              	.LCFI140:
 1867              	 .cfi_def_cfa_offset 4
 1868 00c0 BD46     	 mov sp,r7
 1869              	.LCFI141:
 1870              	 .cfi_def_cfa_register 13
 1871              	 
 1872 00c2 5DF8047B 	 ldr r7,[sp],#4
 1873              	.LCFI142:
 1874              	 .cfi_restore 7
 1875              	 .cfi_def_cfa_offset 0
 1876 00c6 7047     	 bx lr
 1877              	 .cfi_endproc
 1878              	.LFE232:
 1880              	 .section .text.XMC_CCU4_SLICE_ConfigureEvent,"ax",%progbits
 1881              	 .align 2
 1882              	 .global XMC_CCU4_SLICE_ConfigureEvent
 1883              	 .thumb
 1884              	 .thumb_func
 1886              	XMC_CCU4_SLICE_ConfigureEvent:
 1887              	.LFB233:
 772:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 773:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to configure a slice trigger event */
 774:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
 775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                    const XMC_CCU4_SLICE_EVENT_t event,
 776:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config)
 777:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 1888              	 .loc 2 777 0
 1889              	 .cfi_startproc
 1890              	 
 1891              	 
 1892              	 
 1893 0000 80B4     	 push {r7}
 1894              	.LCFI143:
 1895              	 .cfi_def_cfa_offset 4
 1896              	 .cfi_offset 7,-4
 1897 0002 89B0     	 sub sp,sp,#36
 1898              	.LCFI144:
 1899              	 .cfi_def_cfa_offset 40
 1900 0004 00AF     	 add r7,sp,#0
 1901              	.LCFI145:
 1902              	 .cfi_def_cfa_register 7
 1903 0006 F860     	 str r0,[r7,#12]
 1904 0008 0B46     	 mov r3,r1
 1905 000a 7A60     	 str r2,[r7,#4]
 1906 000c FB72     	 strb r3,[r7,#11]
 778:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 779:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint8_t  pos;
 780:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint8_t  offset;
 781:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 782:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 783:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 784:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(config->map
 785:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 786:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 787:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Level Sensitivity",
 788:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              ((config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 789:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****               (config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 790:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Debounce Period", 
 791:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(config->duration));
 792:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Calculate offset with reference to event */
 793:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 1907              	 .loc 2 793 0
 1908 000e FB7A     	 ldrb r3,[r7,#11]
 1909 0010 013B     	 subs r3,r3,#1
 1910 0012 FB77     	 strb r3,[r7,#31]
 794:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 795:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 796:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS2;
 797:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 798:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 799:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 800:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 801:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 802:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 803:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, the level */
 804:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 805:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 806:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 807:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 808:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, the debounce filter */
 809:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 810:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 811:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 812:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 813:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->INS2 = ins;
 814:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 815:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 816:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 817:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Finally the input */
 818:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 819:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 820:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 821:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 822:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 823:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 824:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #else
 825:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1911              	 .loc 2 825 0
 1912 0014 FB68     	 ldr r3,[r7,#12]
 1913 0016 1B68     	 ldr r3,[r3]
 1914 0018 BB61     	 str r3,[r7,#24]
 826:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 827:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 828:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 1915              	 .loc 2 828 0
 1916 001a FB7F     	 ldrb r3,[r7,#31]
 1917 001c 5B00     	 lsls r3,r3,#1
 1918 001e DBB2     	 uxtb r3,r3
 1919 0020 1033     	 adds r3,r3,#16
 1920 0022 FB75     	 strb r3,[r7,#23]
 829:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 1921              	 .loc 2 829 0
 1922 0024 FB7D     	 ldrb r3,[r7,#23]
 1923 0026 0322     	 movs r2,#3
 1924 0028 02FA03F3 	 lsl r3,r2,r3
 1925 002c DB43     	 mvns r3,r3
 1926 002e BA69     	 ldr r2,[r7,#24]
 1927 0030 1340     	 ands r3,r3,r2
 1928 0032 BB61     	 str r3,[r7,#24]
 830:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 1929              	 .loc 2 830 0
 1930 0034 7B68     	 ldr r3,[r7,#4]
 1931 0036 5B78     	 ldrb r3,[r3,#1]
 1932 0038 1A46     	 mov r2,r3
 1933 003a FB7D     	 ldrb r3,[r7,#23]
 1934 003c 02FA03F3 	 lsl r3,r2,r3
 1935 0040 BA69     	 ldr r2,[r7,#24]
 1936 0042 1343     	 orrs r3,r3,r2
 1937 0044 BB61     	 str r3,[r7,#24]
 831:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 832:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, the level */
 833:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0LM_Pos) + offset;
 1938              	 .loc 2 833 0
 1939 0046 FB7F     	 ldrb r3,[r7,#31]
 1940 0048 1633     	 adds r3,r3,#22
 1941 004a FB75     	 strb r3,[r7,#23]
 834:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 1942              	 .loc 2 834 0
 1943 004c FB7D     	 ldrb r3,[r7,#23]
 1944 004e 0122     	 movs r2,#1
 1945 0050 02FA03F3 	 lsl r3,r2,r3
 1946 0054 DB43     	 mvns r3,r3
 1947 0056 BA69     	 ldr r2,[r7,#24]
 1948 0058 1340     	 ands r3,r3,r2
 1949 005a BB61     	 str r3,[r7,#24]
 835:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 1950              	 .loc 2 835 0
 1951 005c 7B68     	 ldr r3,[r7,#4]
 1952 005e 9B78     	 ldrb r3,[r3,#2]
 1953 0060 1A46     	 mov r2,r3
 1954 0062 FB7D     	 ldrb r3,[r7,#23]
 1955 0064 02FA03F3 	 lsl r3,r2,r3
 1956 0068 BA69     	 ldr r2,[r7,#24]
 1957 006a 1343     	 orrs r3,r3,r2
 1958 006c BB61     	 str r3,[r7,#24]
 836:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 837:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Next, the debounce filter */
 838:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 1959              	 .loc 2 838 0
 1960 006e FB7F     	 ldrb r3,[r7,#31]
 1961 0070 5B00     	 lsls r3,r3,#1
 1962 0072 DBB2     	 uxtb r3,r3
 1963 0074 1933     	 adds r3,r3,#25
 1964 0076 FB75     	 strb r3,[r7,#23]
 839:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 1965              	 .loc 2 839 0
 1966 0078 FB7D     	 ldrb r3,[r7,#23]
 1967 007a 0322     	 movs r2,#3
 1968 007c 02FA03F3 	 lsl r3,r2,r3
 1969 0080 DB43     	 mvns r3,r3
 1970 0082 BA69     	 ldr r2,[r7,#24]
 1971 0084 1340     	 ands r3,r3,r2
 1972 0086 BB61     	 str r3,[r7,#24]
 840:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 1973              	 .loc 2 840 0
 1974 0088 7B68     	 ldr r3,[r7,#4]
 1975 008a DB78     	 ldrb r3,[r3,#3]
 1976 008c 1A46     	 mov r2,r3
 1977 008e FB7D     	 ldrb r3,[r7,#23]
 1978 0090 02FA03F3 	 lsl r3,r2,r3
 1979 0094 BA69     	 ldr r2,[r7,#24]
 1980 0096 1343     	 orrs r3,r3,r2
 1981 0098 BB61     	 str r3,[r7,#24]
 841:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 842:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Finally the input */
 843:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 1982              	 .loc 2 843 0
 1983 009a FB7F     	 ldrb r3,[r7,#31]
 1984 009c 9B00     	 lsls r3,r3,#2
 1985 009e FB75     	 strb r3,[r7,#23]
 844:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1986              	 .loc 2 844 0
 1987 00a0 FB7D     	 ldrb r3,[r7,#23]
 1988 00a2 0F22     	 movs r2,#15
 1989 00a4 02FA03F3 	 lsl r3,r2,r3
 1990 00a8 DB43     	 mvns r3,r3
 1991 00aa BA69     	 ldr r2,[r7,#24]
 1992 00ac 1340     	 ands r3,r3,r2
 1993 00ae BB61     	 str r3,[r7,#24]
 845:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 1994              	 .loc 2 845 0
 1995 00b0 7B68     	 ldr r3,[r7,#4]
 1996 00b2 1B78     	 ldrb r3,[r3]
 1997 00b4 1A46     	 mov r2,r3
 1998 00b6 FB7D     	 ldrb r3,[r7,#23]
 1999 00b8 02FA03F3 	 lsl r3,r2,r3
 2000 00bc BA69     	 ldr r2,[r7,#24]
 2001 00be 1343     	 orrs r3,r3,r2
 2002 00c0 BB61     	 str r3,[r7,#24]
 846:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 847:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 2003              	 .loc 2 847 0
 2004 00c2 FB68     	 ldr r3,[r7,#12]
 2005 00c4 1A68     	 ldr r2,[r3]
 2006 00c6 0021     	 movs r1,#0
 2007 00c8 BA69     	 ldr r2,[r7,#24]
 2008 00ca 0A43     	 orrs r2,r2,r1
 2009 00cc 1A60     	 str r2,[r3]
 848:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 849:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2010              	 .loc 2 849 0
 2011 00ce 2437     	 adds r7,r7,#36
 2012              	.LCFI146:
 2013              	 .cfi_def_cfa_offset 4
 2014 00d0 BD46     	 mov sp,r7
 2015              	.LCFI147:
 2016              	 .cfi_def_cfa_register 13
 2017              	 
 2018 00d2 5DF8047B 	 ldr r7,[sp],#4
 2019              	.LCFI148:
 2020              	 .cfi_restore 7
 2021              	 .cfi_def_cfa_offset 0
 2022 00d6 7047     	 bx lr
 2023              	 .cfi_endproc
 2024              	.LFE233:
 2026              	 .section .text.XMC_CCU4_SLICE_SetInput,"ax",%progbits
 2027              	 .align 2
 2028              	 .global XMC_CCU4_SLICE_SetInput
 2029              	 .thumb
 2030              	 .thumb_func
 2032              	XMC_CCU4_SLICE_SetInput:
 2033              	.LFB234:
 850:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 851:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to bind an input to a slice trigger event */
 852:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
 853:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                          const XMC_CCU4_SLICE_EVENT_t event,
 854:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                              const XMC_CCU4_SLICE_INPUT_t input)
 855:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2034              	 .loc 2 855 0
 2035              	 .cfi_startproc
 2036              	 
 2037              	 
 2038              	 
 2039 0000 80B4     	 push {r7}
 2040              	.LCFI149:
 2041              	 .cfi_def_cfa_offset 4
 2042              	 .cfi_offset 7,-4
 2043 0002 85B0     	 sub sp,sp,#20
 2044              	.LCFI150:
 2045              	 .cfi_def_cfa_offset 24
 2046 0004 00AF     	 add r7,sp,#0
 2047              	.LCFI151:
 2048              	 .cfi_def_cfa_register 7
 2049 0006 7860     	 str r0,[r7,#4]
 2050 0008 0B46     	 mov r3,r1
 2051 000a FB70     	 strb r3,[r7,#3]
 2052 000c 1346     	 mov r3,r2
 2053 000e BB70     	 strb r3,[r7,#2]
 856:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 857:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint8_t  pos;
 858:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint8_t  offset;
 859:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 860:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 861:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 862:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(input));
 863:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 864:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Calculate offset with reference to event */
 865:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 2054              	 .loc 2 865 0
 2055 0010 FB78     	 ldrb r3,[r7,#3]
 2056 0012 013B     	 subs r3,r3,#1
 2057 0014 FB73     	 strb r3,[r7,#15]
 866:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 867:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 868:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 869:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 870:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 871:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 872:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 873:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 874:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 875:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #else
 876:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 2058              	 .loc 2 876 0
 2059 0016 FB7B     	 ldrb r3,[r7,#15]
 2060 0018 9B00     	 lsls r3,r3,#2
 2061 001a BB73     	 strb r3,[r7,#14]
 877:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 878:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 2062              	 .loc 2 878 0
 2063 001c 7B68     	 ldr r3,[r7,#4]
 2064 001e 1B68     	 ldr r3,[r3]
 2065 0020 BB60     	 str r3,[r7,#8]
 879:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 2066              	 .loc 2 879 0
 2067 0022 BB7B     	 ldrb r3,[r7,#14]
 2068 0024 0F22     	 movs r2,#15
 2069 0026 02FA03F3 	 lsl r3,r2,r3
 2070 002a DB43     	 mvns r3,r3
 2071 002c BA68     	 ldr r2,[r7,#8]
 2072 002e 1340     	 ands r3,r3,r2
 2073 0030 BB60     	 str r3,[r7,#8]
 880:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 2074              	 .loc 2 880 0
 2075 0032 BA78     	 ldrb r2,[r7,#2]
 2076 0034 BB7B     	 ldrb r3,[r7,#14]
 2077 0036 02FA03F3 	 lsl r3,r2,r3
 2078 003a BA68     	 ldr r2,[r7,#8]
 2079 003c 1343     	 orrs r3,r3,r2
 2080 003e BB60     	 str r3,[r7,#8]
 881:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 882:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 2081              	 .loc 2 882 0
 2082 0040 7B68     	 ldr r3,[r7,#4]
 2083 0042 1A68     	 ldr r2,[r3]
 2084 0044 0021     	 movs r1,#0
 2085 0046 BA68     	 ldr r2,[r7,#8]
 2086 0048 0A43     	 orrs r2,r2,r1
 2087 004a 1A60     	 str r2,[r3]
 883:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
 884:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2088              	 .loc 2 884 0
 2089 004c 1437     	 adds r7,r7,#20
 2090              	.LCFI152:
 2091              	 .cfi_def_cfa_offset 4
 2092 004e BD46     	 mov sp,r7
 2093              	.LCFI153:
 2094              	 .cfi_def_cfa_register 13
 2095              	 
 2096 0050 5DF8047B 	 ldr r7,[sp],#4
 2097              	.LCFI154:
 2098              	 .cfi_restore 7
 2099              	 .cfi_def_cfa_offset 0
 2100 0054 7047     	 bx lr
 2101              	 .cfi_endproc
 2102              	.LFE234:
 2104 0056 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerRepeatMode,"ax",%progbits
 2105              	 .align 2
 2106              	 .global XMC_CCU4_SLICE_SetTimerRepeatMode
 2107              	 .thumb
 2108              	 .thumb_func
 2110              	XMC_CCU4_SLICE_SetTimerRepeatMode:
 2111              	.LFB235:
 885:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 886:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* API to program timer repeat mode - Single shot vs repeat */
 887:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
 888:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2112              	 .loc 2 888 0
 2113              	 .cfi_startproc
 2114              	 
 2115              	 
 2116              	 
 2117 0000 80B4     	 push {r7}
 2118              	.LCFI155:
 2119              	 .cfi_def_cfa_offset 4
 2120              	 .cfi_offset 7,-4
 2121 0002 83B0     	 sub sp,sp,#12
 2122              	.LCFI156:
 2123              	 .cfi_def_cfa_offset 16
 2124 0004 00AF     	 add r7,sp,#0
 2125              	.LCFI157:
 2126              	 .cfi_def_cfa_register 7
 2127 0006 7860     	 str r0,[r7,#4]
 2128 0008 0B46     	 mov r3,r1
 2129 000a FB70     	 strb r3,[r7,#3]
 889:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
 890:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode",
 891:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****              ((mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 892:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****           (mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE)));
 893:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 894:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 2130              	 .loc 2 894 0
 2131 000c FB78     	 ldrb r3,[r7,#3]
 2132 000e 002B     	 cmp r3,#0
 2133 0010 09D1     	 bne .L63
 895:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 896:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TSSM_Msk);
 2134              	 .loc 2 896 0
 2135 0012 7B68     	 ldr r3,[r7,#4]
 2136 0014 5B69     	 ldr r3,[r3,#20]
 2137 0016 23F00202 	 bic r2,r3,#2
 2138 001a 7B68     	 ldr r3,[r7,#4]
 2139 001c 5969     	 ldr r1,[r3,#20]
 2140 001e 0021     	 movs r1,#0
 2141 0020 0A43     	 orrs r2,r2,r1
 2142 0022 5A61     	 str r2,[r3,#20]
 2143 0024 08E0     	 b .L62
 2144              	.L63:
 897:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 898:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 899:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 900:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TSSM_Msk;
 2145              	 .loc 2 900 0
 2146 0026 7B68     	 ldr r3,[r7,#4]
 2147 0028 5B69     	 ldr r3,[r3,#20]
 2148 002a 43F00202 	 orr r2,r3,#2
 2149 002e 7B68     	 ldr r3,[r7,#4]
 2150 0030 5969     	 ldr r1,[r3,#20]
 2151 0032 0021     	 movs r1,#0
 2152 0034 0A43     	 orrs r2,r2,r1
 2153 0036 5A61     	 str r2,[r3,#20]
 2154              	.L62:
 901:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 902:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2155              	 .loc 2 902 0
 2156 0038 0C37     	 adds r7,r7,#12
 2157              	.LCFI158:
 2158              	 .cfi_def_cfa_offset 4
 2159 003a BD46     	 mov sp,r7
 2160              	.LCFI159:
 2161              	 .cfi_def_cfa_register 13
 2162              	 
 2163 003c 5DF8047B 	 ldr r7,[sp],#4
 2164              	.LCFI160:
 2165              	 .cfi_restore 7
 2166              	 .cfi_def_cfa_offset 0
 2167 0040 7047     	 bx lr
 2168              	 .cfi_endproc
 2169              	.LFE235:
 2171 0042 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerCountingMode,"ax",%progbits
 2172              	 .align 2
 2173              	 .global XMC_CCU4_SLICE_SetTimerCountingMode
 2174              	 .thumb
 2175              	 .thumb_func
 2177              	XMC_CCU4_SLICE_SetTimerCountingMode:
 2178              	.LFB236:
 903:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 904:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* Programs timer counting mode */
 905:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
 906:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2179              	 .loc 2 906 0
 2180              	 .cfi_startproc
 2181              	 
 2182              	 
 2183              	 
 2184 0000 80B4     	 push {r7}
 2185              	.LCFI161:
 2186              	 .cfi_def_cfa_offset 4
 2187              	 .cfi_offset 7,-4
 2188 0002 83B0     	 sub sp,sp,#12
 2189              	.LCFI162:
 2190              	 .cfi_def_cfa_offset 16
 2191 0004 00AF     	 add r7,sp,#0
 2192              	.LCFI163:
 2193              	 .cfi_def_cfa_register 7
 2194 0006 7860     	 str r0,[r7,#4]
 2195 0008 0B46     	 mov r3,r1
 2196 000a FB70     	 strb r3,[r7,#3]
 907:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
 908:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Timer Count Mode", ((mode == XMC_CCU4_SLI
 909:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                                                               (mode == XMC_CCU4_SLI
 910:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 911:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA == mode)
 2197              	 .loc 2 911 0
 2198 000c FB78     	 ldrb r3,[r7,#3]
 2199 000e 002B     	 cmp r3,#0
 2200 0010 09D1     	 bne .L66
 912:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 913:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TCM_Msk);
 2201              	 .loc 2 913 0
 2202 0012 7B68     	 ldr r3,[r7,#4]
 2203 0014 5B69     	 ldr r3,[r3,#20]
 2204 0016 23F00102 	 bic r2,r3,#1
 2205 001a 7B68     	 ldr r3,[r7,#4]
 2206 001c 5969     	 ldr r1,[r3,#20]
 2207 001e 0021     	 movs r1,#0
 2208 0020 0A43     	 orrs r2,r2,r1
 2209 0022 5A61     	 str r2,[r3,#20]
 2210 0024 08E0     	 b .L65
 2211              	.L66:
 914:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 915:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 916:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 917:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TCM_Msk;
 2212              	 .loc 2 917 0
 2213 0026 7B68     	 ldr r3,[r7,#4]
 2214 0028 5B69     	 ldr r3,[r3,#20]
 2215 002a 43F00102 	 orr r2,r3,#1
 2216 002e 7B68     	 ldr r3,[r7,#4]
 2217 0030 5969     	 ldr r1,[r3,#20]
 2218 0032 0021     	 movs r1,#0
 2219 0034 0A43     	 orrs r2,r2,r1
 2220 0036 5A61     	 str r2,[r3,#20]
 2221              	.L65:
 918:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 919:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2222              	 .loc 2 919 0
 2223 0038 0C37     	 adds r7,r7,#12
 2224              	.LCFI164:
 2225              	 .cfi_def_cfa_offset 4
 2226 003a BD46     	 mov sp,r7
 2227              	.LCFI165:
 2228              	 .cfi_def_cfa_register 13
 2229              	 
 2230 003c 5DF8047B 	 ldr r7,[sp],#4
 2231              	.LCFI166:
 2232              	 .cfi_restore 7
 2233              	 .cfi_def_cfa_offset 0
 2234 0040 7047     	 bx lr
 2235              	 .cfi_endproc
 2236              	.LFE236:
 2238 0042 00BF     	 .section .text.XMC_CCU4_SLICE_GetCaptureRegisterValue,"ax",%progbits
 2239              	 .align 2
 2240              	 .global XMC_CCU4_SLICE_GetCaptureRegisterValue
 2241              	 .thumb
 2242              	 .thumb_func
 2244              	XMC_CCU4_SLICE_GetCaptureRegisterValue:
 2245              	.LFB237:
 920:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 921:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* Retrieves desired capture register value */
 922:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
 923:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2246              	 .loc 2 923 0
 2247              	 .cfi_startproc
 2248              	 
 2249              	 
 2250              	 
 2251 0000 80B4     	 push {r7}
 2252              	.LCFI167:
 2253              	 .cfi_def_cfa_offset 4
 2254              	 .cfi_offset 7,-4
 2255 0002 83B0     	 sub sp,sp,#12
 2256              	.LCFI168:
 2257              	 .cfi_def_cfa_offset 16
 2258 0004 00AF     	 add r7,sp,#0
 2259              	.LCFI169:
 2260              	 .cfi_def_cfa_register 7
 2261 0006 7860     	 str r0,[r7,#4]
 2262 0008 0B46     	 mov r3,r1
 2263 000a FB70     	 strb r3,[r7,#3]
 924:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 925:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 926:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   return(slice->CV[reg_num]);
 2264              	 .loc 2 926 0
 2265 000c FB78     	 ldrb r3,[r7,#3]
 2266 000e 7A68     	 ldr r2,[r7,#4]
 2267 0010 1C33     	 adds r3,r3,#28
 2268 0012 9B00     	 lsls r3,r3,#2
 2269 0014 1344     	 add r3,r3,r2
 2270 0016 5B68     	 ldr r3,[r3,#4]
 927:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2271              	 .loc 2 927 0
 2272 0018 1846     	 mov r0,r3
 2273 001a 0C37     	 adds r7,r7,#12
 2274              	.LCFI170:
 2275              	 .cfi_def_cfa_offset 4
 2276 001c BD46     	 mov sp,r7
 2277              	.LCFI171:
 2278              	 .cfi_def_cfa_register 13
 2279              	 
 2280 001e 5DF8047B 	 ldr r7,[sp],#4
 2281              	.LCFI172:
 2282              	 .cfi_restore 7
 2283              	 .cfi_def_cfa_offset 0
 2284 0022 7047     	 bx lr
 2285              	 .cfi_endproc
 2286              	.LFE237:
 2288              	 .section .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2289              	 .align 2
 2290              	 .global XMC_CCU4_SLICE_GetLastCapturedTimerValue
 2291              	 .thumb
 2292              	 .thumb_func
 2294              	XMC_CCU4_SLICE_GetLastCapturedTimerValue:
 2295              	.LFB238:
 928:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 929:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* @brief Retrieves the latest captured timer value */
 930:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
 931:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
 932:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                                            uint32_t *val_ptr)
 933:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2296              	 .loc 2 933 0
 2297              	 .cfi_startproc
 2298              	 
 2299              	 
 2300              	 
 2301 0000 80B4     	 push {r7}
 2302              	.LCFI173:
 2303              	 .cfi_def_cfa_offset 4
 2304              	 .cfi_offset 7,-4
 2305 0002 87B0     	 sub sp,sp,#28
 2306              	.LCFI174:
 2307              	 .cfi_def_cfa_offset 32
 2308 0004 00AF     	 add r7,sp,#0
 2309              	.LCFI175:
 2310              	 .cfi_def_cfa_register 7
 2311 0006 F860     	 str r0,[r7,#12]
 2312 0008 0B46     	 mov r3,r1
 2313 000a 7A60     	 str r2,[r7,#4]
 2314 000c FB72     	 strb r3,[r7,#11]
 934:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_STATUS_t retval;
 935:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint8_t i;
 936:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint8_t start;
 937:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint8_t end;
 938:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 939:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlic
 940:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Register Set", ((set == XMC_CCU4_SLI
 941:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                                                                (set == XMC_CCU4_SLI
 942:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 943:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   retval = XMC_CCU4_STATUS_ERROR;
 2315              	 .loc 2 943 0
 2316 000e 0123     	 movs r3,#1
 2317 0010 FB75     	 strb r3,[r7,#23]
 944:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 945:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* First check if extended capture mode is enabled */
 946:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if ((slice->TC) & CCU4_CC4_TC_ECM_Msk)
 2318              	 .loc 2 946 0
 2319 0012 FB68     	 ldr r3,[r7,#12]
 2320 0014 5B69     	 ldr r3,[r3,#20]
 2321 0016 03F01003 	 and r3,r3,#16
 2322 001a 002B     	 cmp r3,#0
 2323 001c 04D0     	 beq .L71
 947:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 948:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
 949:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     start = 0U;
 2324              	 .loc 2 949 0
 2325 001e 0023     	 movs r3,#0
 2326 0020 7B75     	 strb r3,[r7,#21]
 950:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     end = XMC_CCU4_NUM_SLICES_PER_MODULE;
 2327              	 .loc 2 950 0
 2328 0022 0423     	 movs r3,#4
 2329 0024 3B75     	 strb r3,[r7,#20]
 2330 0026 0BE0     	 b .L72
 2331              	.L71:
 951:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 952:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
 953:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 954:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     /* Extended capture mode is not enabled */
 955:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     if (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)
 2332              	 .loc 2 955 0
 2333 0028 FB7A     	 ldrb r3,[r7,#11]
 2334 002a 012B     	 cmp r3,#1
 2335 002c 04D1     	 bne .L73
 956:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     {
 957:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       start = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 2336              	 .loc 2 957 0
 2337 002e 0223     	 movs r3,#2
 2338 0030 7B75     	 strb r3,[r7,#21]
 958:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       end   = (uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE;
 2339              	 .loc 2 958 0
 2340 0032 0423     	 movs r3,#4
 2341 0034 3B75     	 strb r3,[r7,#20]
 2342 0036 03E0     	 b .L72
 2343              	.L73:
 959:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     }
 960:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     else
 961:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     {
 962:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       start = 0U;
 2344              	 .loc 2 962 0
 2345 0038 0023     	 movs r3,#0
 2346 003a 7B75     	 strb r3,[r7,#21]
 963:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       end = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 2347              	 .loc 2 963 0
 2348 003c 0223     	 movs r3,#2
 2349 003e 3B75     	 strb r3,[r7,#20]
 2350              	.L72:
 964:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     }
 965:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 966:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 967:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   for(i=start; i < end; i++)
 2351              	 .loc 2 967 0
 2352 0040 7B7D     	 ldrb r3,[r7,#21]
 2353 0042 BB75     	 strb r3,[r7,#22]
 2354 0044 17E0     	 b .L74
 2355              	.L77:
 968:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 969:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     if ( (slice->CV[i]) & CCU4_CC4_CV_FFL_Msk )
 2356              	 .loc 2 969 0
 2357 0046 BB7D     	 ldrb r3,[r7,#22]
 2358 0048 FA68     	 ldr r2,[r7,#12]
 2359 004a 1C33     	 adds r3,r3,#28
 2360 004c 9B00     	 lsls r3,r3,#2
 2361 004e 1344     	 add r3,r3,r2
 2362 0050 5B68     	 ldr r3,[r3,#4]
 2363 0052 03F48013 	 and r3,r3,#1048576
 2364 0056 002B     	 cmp r3,#0
 2365 0058 0AD0     	 beq .L75
 970:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     {
 971:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       *val_ptr = slice->CV[i];
 2366              	 .loc 2 971 0
 2367 005a BB7D     	 ldrb r3,[r7,#22]
 2368 005c FA68     	 ldr r2,[r7,#12]
 2369 005e 1C33     	 adds r3,r3,#28
 2370 0060 9B00     	 lsls r3,r3,#2
 2371 0062 1344     	 add r3,r3,r2
 2372 0064 5A68     	 ldr r2,[r3,#4]
 2373 0066 7B68     	 ldr r3,[r7,#4]
 2374 0068 1A60     	 str r2,[r3]
 972:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       retval = XMC_CCU4_STATUS_OK;
 2375              	 .loc 2 972 0
 2376 006a 0023     	 movs r3,#0
 2377 006c FB75     	 strb r3,[r7,#23]
 973:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       break;
 2378              	 .loc 2 973 0
 2379 006e 06E0     	 b .L76
 2380              	.L75:
 967:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 2381              	 .loc 2 967 0 discriminator 2
 2382 0070 BB7D     	 ldrb r3,[r7,#22]
 2383 0072 0133     	 adds r3,r3,#1
 2384 0074 BB75     	 strb r3,[r7,#22]
 2385              	.L74:
 967:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 2386              	 .loc 2 967 0 is_stmt 0 discriminator 1
 2387 0076 BA7D     	 ldrb r2,[r7,#22]
 2388 0078 3B7D     	 ldrb r3,[r7,#20]
 2389 007a 9A42     	 cmp r2,r3
 2390 007c E3D3     	 bcc .L77
 2391              	.L76:
 974:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     }
 975:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 976:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 977:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   return retval;
 2392              	 .loc 2 977 0 is_stmt 1
 2393 007e FB7D     	 ldrb r3,[r7,#23]
 978:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2394              	 .loc 2 978 0
 2395 0080 1846     	 mov r0,r3
 2396 0082 1C37     	 adds r7,r7,#28
 2397              	.LCFI176:
 2398              	 .cfi_def_cfa_offset 4
 2399 0084 BD46     	 mov sp,r7
 2400              	.LCFI177:
 2401              	 .cfi_def_cfa_register 13
 2402              	 
 2403 0086 5DF8047B 	 ldr r7,[sp],#4
 2404              	.LCFI178:
 2405              	 .cfi_restore 7
 2406              	 .cfi_def_cfa_offset 0
 2407 008a 7047     	 bx lr
 2408              	 .cfi_endproc
 2409              	.LFE238:
 2411              	 .section .text.XMC_CCU4_SLICE_GetCapturedValueFromFifo,"ax",%progbits
 2412              	 .align 2
 2413              	 .global XMC_CCU4_SLICE_GetCapturedValueFromFifo
 2414              	 .thumb
 2415              	 .thumb_func
 2417              	XMC_CCU4_SLICE_GetCapturedValueFromFifo:
 2418              	.LFB239:
 979:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 980:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
 981:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V1) /* Defined for XMC4500, XMC400, XMC4200, XMC4100 devices only */
 982:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
 983:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 984:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   int32_t   cap;
 985:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t  extracted_slice;
 986:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
 987:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidModule(modu
 988:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 989:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* First read the global fifo register */
 990:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   cap = (int32_t) module->ECRD;
 991:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 992:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU4_ECRD_SPTR_Msk)) >> CCU4_ECRD_SPTR_Pos;
 993:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
 994:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Return captured result only if it were applicable to this slice */
 995:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if(extracted_slice != ((uint32_t)slice_number))
 996:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
 997:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     cap = -1;
 998:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
 999:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1000:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   return (cap);
1001:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
1002:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #else
1003:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1004:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                              const XMC_CCU4_SLICE_CAP_REG_SET_t set)
1005:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2419              	 .loc 2 1005 0
 2420              	 .cfi_startproc
 2421              	 
 2422              	 
 2423              	 
 2424 0000 80B4     	 push {r7}
 2425              	.LCFI179:
 2426              	 .cfi_def_cfa_offset 4
 2427              	 .cfi_offset 7,-4
 2428 0002 85B0     	 sub sp,sp,#20
 2429              	.LCFI180:
 2430              	 .cfi_def_cfa_offset 24
 2431 0004 00AF     	 add r7,sp,#0
 2432              	.LCFI181:
 2433              	 .cfi_def_cfa_register 7
 2434 0006 7860     	 str r0,[r7,#4]
 2435 0008 0B46     	 mov r3,r1
 2436 000a FB70     	 strb r3,[r7,#3]
1006:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t cap;
1007:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1008:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1009:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1010:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       ((set == XMC_CCU4_SLICE_CAP_REG_SET_LOW) ||\
1011:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****        (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)));
1012:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1013:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if(XMC_CCU4_SLICE_CAP_REG_SET_LOW == set)
 2437              	 .loc 2 1013 0
 2438 000c FB78     	 ldrb r3,[r7,#3]
 2439 000e 002B     	 cmp r3,#0
 2440 0010 04D1     	 bne .L80
1014:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
1015:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     cap = slice->ECRD0;
 2441              	 .loc 2 1015 0
 2442 0012 7B68     	 ldr r3,[r7,#4]
 2443 0014 D3F8B830 	 ldr r3,[r3,#184]
 2444 0018 FB60     	 str r3,[r7,#12]
 2445 001a 03E0     	 b .L81
 2446              	.L80:
1016:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
1017:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   else
1018:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
1019:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     cap = slice->ECRD1;
 2447              	 .loc 2 1019 0
 2448 001c 7B68     	 ldr r3,[r7,#4]
 2449 001e D3F8BC30 	 ldr r3,[r3,#188]
 2450 0022 FB60     	 str r3,[r7,#12]
 2451              	.L81:
1020:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
1021:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1022:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   return cap;
 2452              	 .loc 2 1022 0
 2453 0024 FB68     	 ldr r3,[r7,#12]
1023:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2454              	 .loc 2 1023 0
 2455 0026 1846     	 mov r0,r3
 2456 0028 1437     	 adds r7,r7,#20
 2457              	.LCFI182:
 2458              	 .cfi_def_cfa_offset 4
 2459 002a BD46     	 mov sp,r7
 2460              	.LCFI183:
 2461              	 .cfi_def_cfa_register 13
 2462              	 
 2463 002c 5DF8047B 	 ldr r7,[sp],#4
 2464              	.LCFI184:
 2465              	 .cfi_restore 7
 2466              	 .cfi_def_cfa_offset 0
 2467 0030 7047     	 bx lr
 2468              	 .cfi_endproc
 2469              	.LFE239:
 2471 0032 00BF     	 .section .text.XMC_CCU4_SLICE_EnableDithering,"ax",%progbits
 2472              	 .align 2
 2473              	 .global XMC_CCU4_SLICE_EnableDithering
 2474              	 .thumb
 2475              	 .thumb_func
 2477              	XMC_CCU4_SLICE_EnableDithering:
 2478              	.LFB240:
1024:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** #endif
1025:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1026:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* Enables PWM dithering feature */
1027:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1028:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                     const bool period_dither,
1029:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                     const bool duty_dither,
1030:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                     const uint8_t spread)
1031:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2479              	 .loc 2 1031 0
 2480              	 .cfi_startproc
 2481              	 
 2482              	 
 2483 0000 80B5     	 push {r7,lr}
 2484              	.LCFI185:
 2485              	 .cfi_def_cfa_offset 8
 2486              	 .cfi_offset 7,-8
 2487              	 .cfi_offset 14,-4
 2488 0002 84B0     	 sub sp,sp,#16
 2489              	.LCFI186:
 2490              	 .cfi_def_cfa_offset 24
 2491 0004 00AF     	 add r7,sp,#0
 2492              	.LCFI187:
 2493              	 .cfi_def_cfa_register 7
 2494 0006 7860     	 str r0,[r7,#4]
 2495 0008 0846     	 mov r0,r1
 2496 000a 1146     	 mov r1,r2
 2497 000c 1A46     	 mov r2,r3
 2498 000e 0346     	 mov r3,r0
 2499 0010 FB70     	 strb r3,[r7,#3]
 2500 0012 0B46     	 mov r3,r1
 2501 0014 BB70     	 strb r3,[r7,#2]
 2502 0016 1346     	 mov r3,r2
 2503 0018 7B70     	 strb r3,[r7,#1]
1032:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
1033:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1034:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1035:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1036:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 2504              	 .loc 2 1036 0
 2505 001a 7B68     	 ldr r3,[r7,#4]
 2506 001c 5B69     	 ldr r3,[r3,#20]
 2507 001e FB60     	 str r3,[r7,#12]
1037:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
 2508              	 .loc 2 1037 0
 2509 0020 FB68     	 ldr r3,[r7,#12]
 2510 0022 23F4C043 	 bic r3,r3,#24576
 2511 0026 FB60     	 str r3,[r7,#12]
1038:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1039:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if ((bool) true == period_dither)
 2512              	 .loc 2 1039 0
 2513 0028 FB78     	 ldrb r3,[r7,#3]
 2514 002a 002B     	 cmp r3,#0
 2515 002c 03D0     	 beq .L84
1040:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
1041:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_PERIOD_MASK) << CCU4_CC4_TC_DITHE_Pos);
 2516              	 .loc 2 1041 0
 2517 002e FB68     	 ldr r3,[r7,#12]
 2518 0030 43F40053 	 orr r3,r3,#8192
 2519 0034 FB60     	 str r3,[r7,#12]
 2520              	.L84:
1042:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
1043:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   if ((bool) true == duty_dither)
 2521              	 .loc 2 1043 0
 2522 0036 BB78     	 ldrb r3,[r7,#2]
 2523 0038 002B     	 cmp r3,#0
 2524 003a 03D0     	 beq .L85
1044:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
1045:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK) << CCU4_CC4_TC_DITHE_Pos);
 2525              	 .loc 2 1045 0
 2526 003c FB68     	 ldr r3,[r7,#12]
 2527 003e 43F48043 	 orr r3,r3,#16384
 2528 0042 FB60     	 str r3,[r7,#12]
 2529              	.L85:
1046:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
1047:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1048:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 2530              	 .loc 2 1048 0
 2531 0044 7B68     	 ldr r3,[r7,#4]
 2532 0046 5A69     	 ldr r2,[r3,#20]
 2533 0048 0021     	 movs r1,#0
 2534 004a FA68     	 ldr r2,[r7,#12]
 2535 004c 0A43     	 orrs r2,r2,r1
 2536 004e 5A61     	 str r2,[r3,#20]
1049:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
1050:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_SLICE_SetDitherCompareValue((XMC_CCU4_SLICE_t *)slice, (uint8_t)spread);
 2537              	 .loc 2 1050 0
 2538 0050 7B78     	 ldrb r3,[r7,#1]
 2539 0052 7868     	 ldr r0,[r7,#4]
 2540 0054 1946     	 mov r1,r3
 2541 0056 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetDitherCompareValue
1051:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2542              	 .loc 2 1051 0
 2543 005a 1037     	 adds r7,r7,#16
 2544              	.LCFI188:
 2545              	 .cfi_def_cfa_offset 8
 2546 005c BD46     	 mov sp,r7
 2547              	.LCFI189:
 2548              	 .cfi_def_cfa_register 13
 2549              	 
 2550 005e 80BD     	 pop {r7,pc}
 2551              	 .cfi_endproc
 2552              	.LFE240:
 2554              	 .section .text.XMC_CCU4_SLICE_SetPrescaler,"ax",%progbits
 2555              	 .align 2
 2556              	 .global XMC_CCU4_SLICE_SetPrescaler
 2557              	 .thumb
 2558              	 .thumb_func
 2560              	XMC_CCU4_SLICE_SetPrescaler:
 2561              	.LFB241:
1052:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1053:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* Programs Pre-scalar divider  */
1054:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_PRESCALER_t di
1055:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2562              	 .loc 2 1055 0
 2563              	 .cfi_startproc
 2564              	 
 2565              	 
 2566              	 
 2567 0000 80B4     	 push {r7}
 2568              	.LCFI190:
 2569              	 .cfi_def_cfa_offset 4
 2570              	 .cfi_offset 7,-4
 2571 0002 85B0     	 sub sp,sp,#20
 2572              	.LCFI191:
 2573              	 .cfi_def_cfa_offset 24
 2574 0004 00AF     	 add r7,sp,#0
 2575              	.LCFI192:
 2576              	 .cfi_def_cfa_register 7
 2577 0006 7860     	 str r0,[r7,#4]
 2578 0008 0B46     	 mov r3,r1
 2579 000a FB70     	 strb r3,[r7,#3]
1056:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t fpc;
1057:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
1058:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1059:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1060:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   fpc = slice->FPC;
 2580              	 .loc 2 1060 0
 2581 000c 7B68     	 ldr r3,[r7,#4]
 2582 000e 9B6A     	 ldr r3,[r3,#40]
 2583 0010 FB60     	 str r3,[r7,#12]
1061:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   fpc &= ~((uint32_t) CCU4_CC4_FPC_PVAL_Msk);
 2584              	 .loc 2 1061 0
 2585 0012 FB68     	 ldr r3,[r7,#12]
 2586 0014 23F47063 	 bic r3,r3,#3840
 2587 0018 FB60     	 str r3,[r7,#12]
1062:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   fpc |= ((uint32_t) div_val) << CCU4_CC4_FPC_PVAL_Pos;
 2588              	 .loc 2 1062 0
 2589 001a FB78     	 ldrb r3,[r7,#3]
 2590 001c 1B02     	 lsls r3,r3,#8
 2591 001e FA68     	 ldr r2,[r7,#12]
 2592 0020 1343     	 orrs r3,r3,r2
 2593 0022 FB60     	 str r3,[r7,#12]
1063:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->FPC = fpc;
 2594              	 .loc 2 1063 0
 2595 0024 7B68     	 ldr r3,[r7,#4]
 2596 0026 9A6A     	 ldr r2,[r3,#40]
 2597 0028 0021     	 movs r1,#0
 2598 002a FA68     	 ldr r2,[r7,#12]
 2599 002c 0A43     	 orrs r2,r2,r1
 2600 002e 9A62     	 str r2,[r3,#40]
1064:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* 
1065:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1066:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****    * compare value.
1067:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****    */
1068:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) div_val;
 2601              	 .loc 2 1068 0
 2602 0030 FA78     	 ldrb r2,[r7,#3]
 2603 0032 7B68     	 ldr r3,[r7,#4]
 2604 0034 596A     	 ldr r1,[r3,#36]
 2605 0036 0021     	 movs r1,#0
 2606 0038 0A43     	 orrs r2,r2,r1
 2607 003a 5A62     	 str r2,[r3,#36]
1069:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2608              	 .loc 2 1069 0
 2609 003c 1437     	 adds r7,r7,#20
 2610              	.LCFI193:
 2611              	 .cfi_def_cfa_offset 4
 2612 003e BD46     	 mov sp,r7
 2613              	.LCFI194:
 2614              	 .cfi_def_cfa_register 13
 2615              	 
 2616 0040 5DF8047B 	 ldr r7,[sp],#4
 2617              	.LCFI195:
 2618              	 .cfi_restore 7
 2619              	 .cfi_def_cfa_offset 0
 2620 0044 7047     	 bx lr
 2621              	 .cfi_endproc
 2622              	.LFE241:
 2624 0046 00BF     	 .section .text.XMC_CCU4_SLICE_SetInterruptNode,"ax",%progbits
 2625              	 .align 2
 2626              	 .global XMC_CCU4_SLICE_SetInterruptNode
 2627              	 .thumb
 2628              	 .thumb_func
 2630              	XMC_CCU4_SLICE_SetInterruptNode:
 2631              	.LFB242:
1070:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1071:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* Binds a capcom event to an NVIC node  */
1072:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInterruptNode(XMC_CCU4_SLICE_t *const slice,
1073:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_IRQ_ID_t event,
1074:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_SR_ID_t sr)
1075:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2632              	 .loc 2 1075 0
 2633              	 .cfi_startproc
 2634              	 
 2635              	 
 2636              	 
 2637 0000 80B4     	 push {r7}
 2638              	.LCFI196:
 2639              	 .cfi_def_cfa_offset 4
 2640              	 .cfi_offset 7,-4
 2641 0002 87B0     	 sub sp,sp,#28
 2642              	.LCFI197:
 2643              	 .cfi_def_cfa_offset 32
 2644 0004 00AF     	 add r7,sp,#0
 2645              	.LCFI198:
 2646              	 .cfi_def_cfa_register 7
 2647 0006 7860     	 str r0,[r7,#4]
 2648 0008 0B46     	 mov r3,r1
 2649 000a FB70     	 strb r3,[r7,#3]
 2650 000c 1346     	 mov r3,r2
 2651 000e BB70     	 strb r3,[r7,#2]
1076:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t srs;
1077:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t pos;
1078:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t mask;
1079:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1080:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1081:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU4_SLICE_CHECK_SR_ID(sr));
1082:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event)
1083:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
1084:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   srs = slice->SRS;
 2652              	 .loc 2 1084 0
 2653 0010 7B68     	 ldr r3,[r7,#4]
 2654 0012 D3F8A830 	 ldr r3,[r3,#168]
 2655 0016 FB60     	 str r3,[r7,#12]
1085:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
1086:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   switch(event)
 2656              	 .loc 2 1086 0
 2657 0018 FB78     	 ldrb r3,[r7,#3]
 2658 001a 092B     	 cmp r3,#9
 2659 001c 2CD8     	 bhi .L88
 2660 001e 01A2     	 adr r2,.L90
 2661 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2662              	 .p2align 2
 2663              	.L90:
 2664 0024 4D000000 	 .word .L89+1
 2665 0028 4D000000 	 .word .L89+1
 2666 002c 57000000 	 .word .L91+1
 2667 0030 57000000 	 .word .L91+1
 2668 0034 79000000 	 .word .L88+1
 2669 0038 79000000 	 .word .L88+1
 2670 003c 79000000 	 .word .L88+1
 2671 0040 79000000 	 .word .L88+1
 2672 0044 61000000 	 .word .L92+1
 2673 0048 6D000000 	 .word .L93+1
 2674              	 .p2align 1
 2675              	.L89:
1087:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   {
1088:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH:
1089:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH:
1090:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_POSR_Msk);
 2676              	 .loc 2 1090 0
 2677 004c 0323     	 movs r3,#3
 2678 004e 3B61     	 str r3,[r7,#16]
1091:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_POSR_Pos;
 2679              	 .loc 2 1091 0
 2680 0050 0023     	 movs r3,#0
 2681 0052 7B61     	 str r3,[r7,#20]
1092:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       break;
 2682              	 .loc 2 1092 0
 2683 0054 16E0     	 b .L94
 2684              	.L91:
1093:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1094:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP:
1095:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN:
1096:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_CMSR_Msk);
 2685              	 .loc 2 1096 0
 2686 0056 0C23     	 movs r3,#12
 2687 0058 3B61     	 str r3,[r7,#16]
1097:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_CMSR_Pos;
 2688              	 .loc 2 1097 0
 2689 005a 0223     	 movs r3,#2
 2690 005c 7B61     	 str r3,[r7,#20]
1098:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       break;
 2691              	 .loc 2 1098 0
 2692 005e 11E0     	 b .L94
 2693              	.L92:
1099:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT0:
1101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E0SR_Msk);
 2694              	 .loc 2 1101 0
 2695 0060 4FF44073 	 mov r3,#768
 2696 0064 3B61     	 str r3,[r7,#16]
1102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E0SR_Pos;
 2697              	 .loc 2 1102 0
 2698 0066 0823     	 movs r3,#8
 2699 0068 7B61     	 str r3,[r7,#20]
1103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       break;
 2700              	 .loc 2 1103 0
 2701 006a 0BE0     	 b .L94
 2702              	.L93:
1104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT1:
1106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E1SR_Msk);
 2703              	 .loc 2 1106 0
 2704 006c 4FF44063 	 mov r3,#3072
 2705 0070 3B61     	 str r3,[r7,#16]
1107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E1SR_Pos;
 2706              	 .loc 2 1107 0
 2707 0072 0A23     	 movs r3,#10
 2708 0074 7B61     	 str r3,[r7,#20]
1108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       break;
 2709              	 .loc 2 1108 0
 2710 0076 05E0     	 b .L94
 2711              	.L88:
1109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****     default:
1111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E2SR_Msk);
 2712              	 .loc 2 1111 0
 2713 0078 4FF44053 	 mov r3,#12288
 2714 007c 3B61     	 str r3,[r7,#16]
1112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E2SR_Pos;
 2715              	 .loc 2 1112 0
 2716 007e 0C23     	 movs r3,#12
 2717 0080 7B61     	 str r3,[r7,#20]
1113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****       break;
 2718              	 .loc 2 1113 0
 2719 0082 00BF     	 nop
 2720              	.L94:
1114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   }
1115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
1116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   srs &= ~mask; 
 2721              	 .loc 2 1116 0
 2722 0084 3B69     	 ldr r3,[r7,#16]
 2723 0086 DB43     	 mvns r3,r3
 2724 0088 FA68     	 ldr r2,[r7,#12]
 2725 008a 1340     	 ands r3,r3,r2
 2726 008c FB60     	 str r3,[r7,#12]
1117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   srs |= (uint32_t)sr << pos;
 2727              	 .loc 2 1117 0
 2728 008e BA78     	 ldrb r2,[r7,#2]
 2729 0090 7B69     	 ldr r3,[r7,#20]
 2730 0092 02FA03F3 	 lsl r3,r2,r3
 2731 0096 FA68     	 ldr r2,[r7,#12]
 2732 0098 1343     	 orrs r3,r3,r2
 2733 009a FB60     	 str r3,[r7,#12]
1118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->SRS = srs;
 2734              	 .loc 2 1118 0
 2735 009c 7B68     	 ldr r3,[r7,#4]
 2736 009e D3F8A820 	 ldr r2,[r3,#168]
 2737 00a2 0021     	 movs r1,#0
 2738 00a4 FA68     	 ldr r2,[r7,#12]
 2739 00a6 0A43     	 orrs r2,r2,r1
 2740 00a8 C3F8A820 	 str r2,[r3,#168]
1119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2741              	 .loc 2 1119 0
 2742 00ac 1C37     	 adds r7,r7,#28
 2743              	.LCFI199:
 2744              	 .cfi_def_cfa_offset 4
 2745 00ae BD46     	 mov sp,r7
 2746              	.LCFI200:
 2747              	 .cfi_def_cfa_register 13
 2748              	 
 2749 00b0 5DF8047B 	 ldr r7,[sp],#4
 2750              	.LCFI201:
 2751              	 .cfi_restore 7
 2752              	 .cfi_def_cfa_offset 0
 2753 00b4 7047     	 bx lr
 2754              	 .cfi_endproc
 2755              	.LFE242:
 2757 00b6 00BF     	 .section .text.XMC_CCU4_SLICE_SetPassiveLevel,"ax",%progbits
 2758              	 .align 2
 2759              	 .global XMC_CCU4_SLICE_SetPassiveLevel
 2760              	 .thumb
 2761              	 .thumb_func
 2763              	XMC_CCU4_SLICE_SetPassiveLevel:
 2764              	.LFB243:
1120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** 
1121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** /* Asserts passive level for the slice output */
1122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPassiveLevel(XMC_CCU4_SLICE_t *const slice,
1123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                     const XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** {
 2765              	 .loc 2 1124 0
 2766              	 .cfi_startproc
 2767              	 
 2768              	 
 2769              	 
 2770 0000 80B4     	 push {r7}
 2771              	.LCFI202:
 2772              	 .cfi_def_cfa_offset 4
 2773              	 .cfi_offset 7,-4
 2774 0002 85B0     	 sub sp,sp,#20
 2775              	.LCFI203:
 2776              	 .cfi_def_cfa_offset 24
 2777 0004 00AF     	 add r7,sp,#0
 2778              	.LCFI204:
 2779              	 .cfi_def_cfa_register 7
 2780 0006 7860     	 str r0,[r7,#4]
 2781 0008 0B46     	 mov r3,r1
 2782 000a FB70     	 strb r3,[r7,#3]
1125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   uint32_t psl; 
1126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
1127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Passive level", ((level == XMC_CCU4_SLICE_OUTP
1129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****                                                                       (level == XMC_CCU4_SLICE_OUTP
1130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
1131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   psl = slice->PSL;
 2783              	 .loc 2 1131 0
 2784 000c 7B68     	 ldr r3,[r7,#4]
 2785 000e 9B69     	 ldr r3,[r3,#24]
 2786 0010 FB60     	 str r3,[r7,#12]
1132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   psl &= ~((uint32_t) CCU4_CC4_PSL_PSL_Msk);
 2787              	 .loc 2 1132 0
 2788 0012 FB68     	 ldr r3,[r7,#12]
 2789 0014 23F00103 	 bic r3,r3,#1
 2790 0018 FB60     	 str r3,[r7,#12]
1133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   psl |= (uint32_t) level;
 2791              	 .loc 2 1133 0
 2792 001a FB78     	 ldrb r3,[r7,#3]
 2793 001c FA68     	 ldr r2,[r7,#12]
 2794 001e 1343     	 orrs r3,r3,r2
 2795 0020 FB60     	 str r3,[r7,#12]
1134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   
1135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   /* Program CC4 slice output passive level */
1136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c ****   slice->PSL = psl;
 2796              	 .loc 2 1136 0
 2797 0022 7B68     	 ldr r3,[r7,#4]
 2798 0024 9A69     	 ldr r2,[r3,#24]
 2799 0026 0021     	 movs r1,#0
 2800 0028 FA68     	 ldr r2,[r7,#12]
 2801 002a 0A43     	 orrs r2,r2,r1
 2802 002c 9A61     	 str r2,[r3,#24]
1137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu4.c **** }
 2803              	 .loc 2 1137 0
 2804 002e 1437     	 adds r7,r7,#20
 2805              	.LCFI205:
 2806              	 .cfi_def_cfa_offset 4
 2807 0030 BD46     	 mov sp,r7
 2808              	.LCFI206:
 2809              	 .cfi_def_cfa_register 13
 2810              	 
 2811 0032 5DF8047B 	 ldr r7,[sp],#4
 2812              	.LCFI207:
 2813              	 .cfi_restore 7
 2814              	 .cfi_def_cfa_offset 0
 2815 0036 7047     	 bx lr
 2816              	 .cfi_endproc
 2817              	.LFE243:
 2819              	 .text
 2820              	.Letext0:
 2821              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2822              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2823              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 2824              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_scu.h"
 2825              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 2826              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu4.c
    {standard input}:20     .text.XMC_CCU4_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU4_StartPrescaler:00000000 XMC_CCU4_StartPrescaler
    {standard input}:69     .text.XMC_CCU4_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:73     .text.XMC_CCU4_SLICE_SetDitherCompareValue:00000000 XMC_CCU4_SLICE_SetDitherCompareValue
    {standard input}:117    .text.XMC_CCU4_lAssertReset:00000000 $t
    {standard input}:121    .text.XMC_CCU4_lAssertReset:00000000 XMC_CCU4_lAssertReset
    {standard input}:191    .text.XMC_CCU4_lAssertReset:0000004c $d
    {standard input}:200    .text.XMC_CCU4_lDeassertReset:00000000 $t
    {standard input}:204    .text.XMC_CCU4_lDeassertReset:00000000 XMC_CCU4_lDeassertReset
    {standard input}:273    .text.XMC_CCU4_lDeassertReset:0000004c $d
    {standard input}:282    .text.XMC_CCU4_lGateClock:00000000 $t
    {standard input}:286    .text.XMC_CCU4_lGateClock:00000000 XMC_CCU4_lGateClock
    {standard input}:355    .text.XMC_CCU4_lGateClock:0000004c $d
    {standard input}:364    .text.XMC_CCU4_lUngateClock:00000000 $t
    {standard input}:368    .text.XMC_CCU4_lUngateClock:00000000 XMC_CCU4_lUngateClock
    {standard input}:437    .text.XMC_CCU4_lUngateClock:0000004c $d
    {standard input}:446    .text.XMC_CCU4_EnableModule:00000000 $t
    {standard input}:451    .text.XMC_CCU4_EnableModule:00000000 XMC_CCU4_EnableModule
    {standard input}:491    .text.XMC_CCU4_DisableModule:00000000 $t
    {standard input}:496    .text.XMC_CCU4_DisableModule:00000000 XMC_CCU4_DisableModule
    {standard input}:533    .text.XMC_CCU4_Init:00000000 $t
    {standard input}:538    .text.XMC_CCU4_Init:00000000 XMC_CCU4_Init
    {standard input}:598    .text.XMC_CCU4_SetModuleClock:00000000 $t
    {standard input}:603    .text.XMC_CCU4_SetModuleClock:00000000 XMC_CCU4_SetModuleClock
    {standard input}:661    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:666    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 XMC_CCU4_SetMultiChannelShadowTransferMode
    {standard input}:726    .text.XMC_CCU4_SLICE_CompareInit:00000000 $t
    {standard input}:731    .text.XMC_CCU4_SLICE_CompareInit:00000000 XMC_CCU4_SLICE_CompareInit
    {standard input}:830    .text.XMC_CCU4_SLICE_CaptureInit:00000000 $t
    {standard input}:835    .text.XMC_CCU4_SLICE_CaptureInit:00000000 XMC_CCU4_SLICE_CaptureInit
    {standard input}:912    .text.XMC_CCU4_SLICE_StartConfig:00000000 $t
    {standard input}:917    .text.XMC_CCU4_SLICE_StartConfig:00000000 XMC_CCU4_SLICE_StartConfig
    {standard input}:1002   .text.XMC_CCU4_SLICE_StopConfig:00000000 $t
    {standard input}:1007   .text.XMC_CCU4_SLICE_StopConfig:00000000 XMC_CCU4_SLICE_StopConfig
    {standard input}:1088   .text.XMC_CCU4_SLICE_LoadConfig:00000000 $t
    {standard input}:1093   .text.XMC_CCU4_SLICE_LoadConfig:00000000 XMC_CCU4_SLICE_LoadConfig
    {standard input}:1151   .text.XMC_CCU4_SLICE_ModulationConfig:00000000 $t
    {standard input}:1156   .text.XMC_CCU4_SLICE_ModulationConfig:00000000 XMC_CCU4_SLICE_ModulationConfig
    {standard input}:1262   .text.XMC_CCU4_SLICE_CountConfig:00000000 $t
    {standard input}:1267   .text.XMC_CCU4_SLICE_CountConfig:00000000 XMC_CCU4_SLICE_CountConfig
    {standard input}:1325   .text.XMC_CCU4_SLICE_GateConfig:00000000 $t
    {standard input}:1330   .text.XMC_CCU4_SLICE_GateConfig:00000000 XMC_CCU4_SLICE_GateConfig
    {standard input}:1388   .text.XMC_CCU4_SLICE_Capture0Config:00000000 $t
    {standard input}:1393   .text.XMC_CCU4_SLICE_Capture0Config:00000000 XMC_CCU4_SLICE_Capture0Config
    {standard input}:1451   .text.XMC_CCU4_SLICE_Capture1Config:00000000 $t
    {standard input}:1456   .text.XMC_CCU4_SLICE_Capture1Config:00000000 XMC_CCU4_SLICE_Capture1Config
    {standard input}:1514   .text.XMC_CCU4_SLICE_DirectionConfig:00000000 $t
    {standard input}:1519   .text.XMC_CCU4_SLICE_DirectionConfig:00000000 XMC_CCU4_SLICE_DirectionConfig
    {standard input}:1577   .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1582   .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU4_SLICE_StatusBitOverrideConfig
    {standard input}:1636   .text.XMC_CCU4_SLICE_TrapConfig:00000000 $t
    {standard input}:1641   .text.XMC_CCU4_SLICE_TrapConfig:00000000 XMC_CCU4_SLICE_TrapConfig
    {standard input}:1740   .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1745   .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1881   .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1886   .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 XMC_CCU4_SLICE_ConfigureEvent
    {standard input}:2027   .text.XMC_CCU4_SLICE_SetInput:00000000 $t
    {standard input}:2032   .text.XMC_CCU4_SLICE_SetInput:00000000 XMC_CCU4_SLICE_SetInput
    {standard input}:2105   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:2110   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 XMC_CCU4_SLICE_SetTimerRepeatMode
    {standard input}:2172   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:2177   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 XMC_CCU4_SLICE_SetTimerCountingMode
    {standard input}:2239   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:2244   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU4_SLICE_GetCaptureRegisterValue
    {standard input}:2289   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2294   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU4_SLICE_GetLastCapturedTimerValue
    {standard input}:2412   .text.XMC_CCU4_SLICE_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2417   .text.XMC_CCU4_SLICE_GetCapturedValueFromFifo:00000000 XMC_CCU4_SLICE_GetCapturedValueFromFifo
    {standard input}:2472   .text.XMC_CCU4_SLICE_EnableDithering:00000000 $t
    {standard input}:2477   .text.XMC_CCU4_SLICE_EnableDithering:00000000 XMC_CCU4_SLICE_EnableDithering
    {standard input}:2555   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 $t
    {standard input}:2560   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 XMC_CCU4_SLICE_SetPrescaler
    {standard input}:2625   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2630   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 XMC_CCU4_SLICE_SetInterruptNode
    {standard input}:2664   .text.XMC_CCU4_SLICE_SetInterruptNode:00000024 $d
    {standard input}:2674   .text.XMC_CCU4_SLICE_SetInterruptNode:0000004c $t
    {standard input}:2758   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:2763   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 XMC_CCU4_SLICE_SetPassiveLevel
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_EnableClock
