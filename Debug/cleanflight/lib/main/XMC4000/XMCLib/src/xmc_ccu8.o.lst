   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu8.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_StartPrescaler:
  25              	.LFB137:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_ccu8.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @date 2017-09-15
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @endcond
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @{
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @{
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
 630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
 680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #else
 698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
 776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
 846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   union
 853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   {
 854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     struct
 855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     {
 856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     };
 868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   };
 870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   union
 871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   {
 872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     struct
 873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     {
 874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     };
 880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   };
 882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   union
 883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   {
 884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     struct
 885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     {
 886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     };
 892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   };
 894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   union
 903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   {
 904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     struct
 905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     {
 906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     };
 925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   };
 927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   union
 928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   {
 929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     struct
 930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     {
 931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     };
 941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   };
 943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   union
 944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   {
 945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     struct
 946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     {
 947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   #else
 956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   #endif
 978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     };
 979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   };
 981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
 990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
 991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
 994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   union
 997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   {
 998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     struct
 999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     {
1000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     };
1011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   };
1013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
1020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
1022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   
1034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   
1036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   
1040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } 
1042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   
1047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif 
1069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  
1070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** } 
1072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1155 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
  43              	 .loc 1 1157 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DB68     	 ldr r3,[r3,#12]
  46 000c 43F48072 	 orr r2,r3,#256
  47 0010 7B68     	 ldr r3,[r7,#4]
  48 0012 D968     	 ldr r1,[r3,#12]
  49 0014 0021     	 movs r1,#0
  50 0016 0A43     	 orrs r2,r2,r1
  51 0018 DA60     	 str r2,[r3,#12]
1158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
  52              	 .loc 1 1158 0
  53 001a 0C37     	 adds r7,r7,#12
  54              	.LCFI3:
  55              	 .cfi_def_cfa_offset 4
  56 001c BD46     	 mov sp,r7
  57              	.LCFI4:
  58              	 .cfi_def_cfa_register 13
  59              	 
  60 001e 5DF8047B 	 ldr r7,[sp],#4
  61              	.LCFI5:
  62              	 .cfi_restore 7
  63              	 .cfi_def_cfa_offset 0
  64 0022 7047     	 bx lr
  65              	 .cfi_endproc
  66              	.LFE137:
  68              	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
  69              	 .align 2
  70              	 .thumb
  71              	 .thumb_func
  73              	XMC_CCU8_SLICE_StopTimer:
  74              	.LFB160:
1159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPCH_Msk;
1176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPRB_Msk;
1195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPCH_Msk;
1212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) clock_mask;
1272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * None.
1289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= ((uint32_t) 1 << slice_number);
1333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= ((uint32_t) 1 << slice_number);
1357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check. 
1394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 
1486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 
1493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * None
1498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** */
1499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  
1552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                      );
1601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #else
1707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** #endif
1728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   
1896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  None.
1964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
1966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
1969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
1977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
1978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
1982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
1983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
1984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
1985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
1987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
1988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
1989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
1990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
1996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
1997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
1998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
  75              	 .loc 1 2002 0
  76              	 .cfi_startproc
  77              	 
  78              	 
  79              	 
  80 0000 80B4     	 push {r7}
  81              	.LCFI6:
  82              	 .cfi_def_cfa_offset 4
  83              	 .cfi_offset 7,-4
  84 0002 83B0     	 sub sp,sp,#12
  85              	.LCFI7:
  86              	 .cfi_def_cfa_offset 16
  87 0004 00AF     	 add r7,sp,#0
  88              	.LCFI8:
  89              	 .cfi_def_cfa_register 7
  90 0006 7860     	 str r0,[r7,#4]
2003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
  91              	 .loc 1 2004 0
  92 0008 7B68     	 ldr r3,[r7,#4]
  93 000a 1A69     	 ldr r2,[r3,#16]
  94 000c 0022     	 movs r2,#0
  95 000e 42F00102 	 orr r2,r2,#1
  96 0012 1A61     	 str r2,[r3,#16]
2005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
  97              	 .loc 1 2005 0
  98 0014 0C37     	 adds r7,r7,#12
  99              	.LCFI9:
 100              	 .cfi_def_cfa_offset 4
 101 0016 BD46     	 mov sp,r7
 102              	.LCFI10:
 103              	 .cfi_def_cfa_register 13
 104              	 
 105 0018 5DF8047B 	 ldr r7,[sp],#4
 106              	.LCFI11:
 107              	 .cfi_restore 7
 108              	 .cfi_def_cfa_offset 0
 109 001c 7047     	 bx lr
 110              	 .cfi_endproc
 111              	.LFE160:
 113 001e 00BF     	 .section .text.XMC_CCU8_SLICE_SetDitherCompareValue,"ax",%progbits
 114              	 .align 2
 115              	 .thumb
 116              	 .thumb_func
 118              	XMC_CCU8_SLICE_SetDitherCompareValue:
 119              	.LFB175:
2006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
2024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  None.
2057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
2098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
2101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
2135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
2138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
2181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
2203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  None.
2293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
2298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * 
2327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
2422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
2425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** /**
2427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *
2440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****  */
2443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** {
 120              	 .loc 1 2444 0
 121              	 .cfi_startproc
 122              	 
 123              	 
 124              	 
 125 0000 80B4     	 push {r7}
 126              	.LCFI12:
 127              	 .cfi_def_cfa_offset 4
 128              	 .cfi_offset 7,-4
 129 0002 83B0     	 sub sp,sp,#12
 130              	.LCFI13:
 131              	 .cfi_def_cfa_offset 16
 132 0004 00AF     	 add r7,sp,#0
 133              	.LCFI14:
 134              	 .cfi_def_cfa_register 7
 135 0006 7860     	 str r0,[r7,#4]
 136 0008 0B46     	 mov r3,r1
 137 000a FB70     	 strb r3,[r7,#3]
2445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** 
2448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
 138              	 .loc 1 2448 0
 139 000c FA78     	 ldrb r2,[r7,#3]
 140 000e 7B68     	 ldr r3,[r7,#4]
 141 0010 196A     	 ldr r1,[r3,#32]
 142 0012 0021     	 movs r1,#0
 143 0014 0A43     	 orrs r2,r2,r1
 144 0016 1A62     	 str r2,[r3,#32]
2449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu8.h **** }
 145              	 .loc 1 2449 0
 146 0018 0C37     	 adds r7,r7,#12
 147              	.LCFI15:
 148              	 .cfi_def_cfa_offset 4
 149 001a BD46     	 mov sp,r7
 150              	.LCFI16:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 001c 5DF8047B 	 ldr r7,[sp],#4
 154              	.LCFI17:
 155              	 .cfi_restore 7
 156              	 .cfi_def_cfa_offset 0
 157 0020 7047     	 bx lr
 158              	 .cfi_endproc
 159              	.LFE175:
 161 0022 00BF     	 .section .text.XMC_CCU8_lAssertReset,"ax",%progbits
 162              	 .align 2
 163              	 .thumb
 164              	 .thumb_func
 166              	XMC_CCU8_lAssertReset:
 167              	.LFB225:
 168              	 .file 2 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /**
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * @file xmc_ccu8.c
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * @date 2017-04-27
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * products derived from this software without specific prior written permission.                  
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * Change History
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * --------------
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 2015-02-20:
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - Initial <br>
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 2015-06-20:
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *       during external load event. 
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 2015-07-24:
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 2015-08-17:
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_CHC_CONFIG_MASK is not applicable to XMC14 devices. <br>
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - Start of prescaler XMC_CCU8_StartPrescaler() is invoked in XMC_CCU8_Init() API. <br>
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - In XMC_CCU8_SLICE_CompareInit(), CHC register is updated according to the device. <br>
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - Bug fix XMC_CCU8_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 2015-10-07:
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - DOC updates for the newly added APIs.
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 2017-02-25:
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_lAssertReset(), XMC_CCU8_lDeassertReset(), XMC_CCU8_lGateClock() and XMC_CCU8_lUn
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * 2017-04-27:
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  *
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * @endcond
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  */
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * HEADER FILES
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #include "xmc_ccu8.h"
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU80)
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #include "xmc_scu.h"
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * MACROS
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_NUM_SLICES_PER_MODULE          (4U)
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_PERIOD_MASK       (1U)
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices */
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS1_EV0IS_Msk
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #else
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS_EV0IS_Msk
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GIDLC_CLOCK_MASK               (15U)
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE0_MASK               (1U)
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE1_MASK               (16U)
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE2_MASK               (256U)
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE3_MASK               (4096U)
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK    (63U)
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHC_CONFIG_MASK          (20U)
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_DTC_DIV(div) \
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((div == XMC_CCU8_SLICE_DTC_DIV_1) || \
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_2) || \
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_4) || \
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_8))
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CLOCK(clock) \
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((clock == XMC_CCU8_CLOCK_SCU)        || \
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_A) || \
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_B) || \
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_C))
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_OUTPUT(out) \
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((out == XMC_CCU8_SLICE_OUTPUT_0) || \
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_1) || \
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_2) || \
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_3))
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_END_MODE(end_mode) \
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP) || \
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR) || \
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR))
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_ID(event_id) \
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((event_id == XMC_CCU8_SLICE_EVENT_NONE)|| \
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_0)   || \
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_1)   || \
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_2))
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_FILTER(cycles) \
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((cycles == XMC_CCU8_SLICE_EVENT_FILTER_DISABLED) || \
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES) || \
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES) || \
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES))
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CAP_TIMER_CLEAR_MODE(mode) \
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER)   || \
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH)|| \
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW) || \
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS))
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action) \
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SR_ID(id) \
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((id == XMC_CCU8_SLICE_SR_ID_0) || \
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_1) || \
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_2) || \
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_3))
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel) \
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE) || \
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1)    || \
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_2)    || \
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2))
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if((UC_SERIES == XMC13) || (UC_SERIES == XMC14))
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2) || \
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2))
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #else
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2))
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * LOCAL ROUTINES
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lAssertReset(const XMC_CCU8_MODULE_t *const module)
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 169              	 .loc 2 183 0
 170              	 .cfi_startproc
 171              	 
 172              	 
 173 0000 80B5     	 push {r7,lr}
 174              	.LCFI18:
 175              	 .cfi_def_cfa_offset 8
 176              	 .cfi_offset 7,-8
 177              	 .cfi_offset 14,-4
 178 0002 82B0     	 sub sp,sp,#8
 179              	.LCFI19:
 180              	 .cfi_def_cfa_offset 16
 181 0004 00AF     	 add r7,sp,#0
 182              	.LCFI20:
 183              	 .cfi_def_cfa_register 7
 184 0006 7860     	 str r0,[r7,#4]
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 185              	 .loc 2 184 0
 186 0008 7B68     	 ldr r3,[r7,#4]
 187 000a 094A     	 ldr r2,.L7
 188 000c 9342     	 cmp r3,r2
 189 000e 03D1     	 bne .L5
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 190              	 .loc 2 186 0
 191 0010 8020     	 movs r0,#128
 192 0012 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 193 0016 07E0     	 b .L4
 194              	.L5:
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 195              	 .loc 2 189 0
 196 0018 7B68     	 ldr r3,[r7,#4]
 197 001a 064A     	 ldr r2,.L7+4
 198 001c 9342     	 cmp r3,r2
 199 001e 03D1     	 bne .L4
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 200              	 .loc 2 191 0
 201 0020 4FF48070 	 mov r0,#256
 202 0024 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 203              	.L4:
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lAssertReset:Invalid Module Pointer", 0);
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 204              	 .loc 2 198 0
 205 0028 0837     	 adds r7,r7,#8
 206              	.LCFI21:
 207              	 .cfi_def_cfa_offset 8
 208 002a BD46     	 mov sp,r7
 209              	.LCFI22:
 210              	 .cfi_def_cfa_register 13
 211              	 
 212 002c 80BD     	 pop {r7,pc}
 213              	.L8:
 214 002e 00BF     	 .align 2
 215              	.L7:
 216 0030 00000240 	 .word 1073872896
 217 0034 00400240 	 .word 1073889280
 218              	 .cfi_endproc
 219              	.LFE225:
 221              	 .section .text.XMC_CCU8_lDeassertReset,"ax",%progbits
 222              	 .align 2
 223              	 .thumb
 224              	 .thumb_func
 226              	XMC_CCU8_lDeassertReset:
 227              	.LFB226:
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lDeassertReset(const XMC_CCU8_MODULE_t *const module)
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 228              	 .loc 2 201 0
 229              	 .cfi_startproc
 230              	 
 231              	 
 232 0000 80B5     	 push {r7,lr}
 233              	.LCFI23:
 234              	 .cfi_def_cfa_offset 8
 235              	 .cfi_offset 7,-8
 236              	 .cfi_offset 14,-4
 237 0002 82B0     	 sub sp,sp,#8
 238              	.LCFI24:
 239              	 .cfi_def_cfa_offset 16
 240 0004 00AF     	 add r7,sp,#0
 241              	.LCFI25:
 242              	 .cfi_def_cfa_register 7
 243 0006 7860     	 str r0,[r7,#4]
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 244              	 .loc 2 202 0
 245 0008 7B68     	 ldr r3,[r7,#4]
 246 000a 094A     	 ldr r2,.L12
 247 000c 9342     	 cmp r3,r2
 248 000e 03D1     	 bne .L10
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 249              	 .loc 2 204 0
 250 0010 8020     	 movs r0,#128
 251 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 252 0016 07E0     	 b .L9
 253              	.L10:
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 254              	 .loc 2 207 0
 255 0018 7B68     	 ldr r3,[r7,#4]
 256 001a 064A     	 ldr r2,.L12+4
 257 001c 9342     	 cmp r3,r2
 258 001e 03D1     	 bne .L9
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 259              	 .loc 2 209 0
 260 0020 4FF48070 	 mov r0,#256
 261 0024 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 262              	.L9:
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lDeassertReset:Invalid Module Pointer", 0);
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 263              	 .loc 2 216 0
 264 0028 0837     	 adds r7,r7,#8
 265              	.LCFI26:
 266              	 .cfi_def_cfa_offset 8
 267 002a BD46     	 mov sp,r7
 268              	.LCFI27:
 269              	 .cfi_def_cfa_register 13
 270              	 
 271 002c 80BD     	 pop {r7,pc}
 272              	.L13:
 273 002e 00BF     	 .align 2
 274              	.L12:
 275 0030 00000240 	 .word 1073872896
 276 0034 00400240 	 .word 1073889280
 277              	 .cfi_endproc
 278              	.LFE226:
 280              	 .section .text.XMC_CCU8_lGateClock,"ax",%progbits
 281              	 .align 2
 282              	 .thumb
 283              	 .thumb_func
 285              	XMC_CCU8_lGateClock:
 286              	.LFB227:
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lGateClock(XMC_CCU8_MODULE_t *const module)
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 287              	 .loc 2 221 0
 288              	 .cfi_startproc
 289              	 
 290              	 
 291 0000 80B5     	 push {r7,lr}
 292              	.LCFI28:
 293              	 .cfi_def_cfa_offset 8
 294              	 .cfi_offset 7,-8
 295              	 .cfi_offset 14,-4
 296 0002 82B0     	 sub sp,sp,#8
 297              	.LCFI29:
 298              	 .cfi_def_cfa_offset 16
 299 0004 00AF     	 add r7,sp,#0
 300              	.LCFI30:
 301              	 .cfi_def_cfa_register 7
 302 0006 7860     	 str r0,[r7,#4]
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 303              	 .loc 2 222 0
 304 0008 7B68     	 ldr r3,[r7,#4]
 305 000a 094A     	 ldr r2,.L17
 306 000c 9342     	 cmp r3,r2
 307 000e 03D1     	 bne .L15
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 308              	 .loc 2 224 0
 309 0010 8020     	 movs r0,#128
 310 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 311 0016 07E0     	 b .L14
 312              	.L15:
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 313              	 .loc 2 227 0
 314 0018 7B68     	 ldr r3,[r7,#4]
 315 001a 064A     	 ldr r2,.L17+4
 316 001c 9342     	 cmp r3,r2
 317 001e 03D1     	 bne .L14
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 318              	 .loc 2 229 0
 319 0020 4FF48070 	 mov r0,#256
 320 0024 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 321              	.L14:
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lGateClock:Invalid Module Pointer", 0);
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 322              	 .loc 2 236 0
 323 0028 0837     	 adds r7,r7,#8
 324              	.LCFI31:
 325              	 .cfi_def_cfa_offset 8
 326 002a BD46     	 mov sp,r7
 327              	.LCFI32:
 328              	 .cfi_def_cfa_register 13
 329              	 
 330 002c 80BD     	 pop {r7,pc}
 331              	.L18:
 332 002e 00BF     	 .align 2
 333              	.L17:
 334 0030 00000240 	 .word 1073872896
 335 0034 00400240 	 .word 1073889280
 336              	 .cfi_endproc
 337              	.LFE227:
 339              	 .section .text.XMC_CCU8_lUngateClock,"ax",%progbits
 340              	 .align 2
 341              	 .thumb
 342              	 .thumb_func
 344              	XMC_CCU8_lUngateClock:
 345              	.LFB228:
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lUngateClock(XMC_CCU8_MODULE_t *const module)
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 346              	 .loc 2 239 0
 347              	 .cfi_startproc
 348              	 
 349              	 
 350 0000 80B5     	 push {r7,lr}
 351              	.LCFI33:
 352              	 .cfi_def_cfa_offset 8
 353              	 .cfi_offset 7,-8
 354              	 .cfi_offset 14,-4
 355 0002 82B0     	 sub sp,sp,#8
 356              	.LCFI34:
 357              	 .cfi_def_cfa_offset 16
 358 0004 00AF     	 add r7,sp,#0
 359              	.LCFI35:
 360              	 .cfi_def_cfa_register 7
 361 0006 7860     	 str r0,[r7,#4]
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if (module == CCU80)
 362              	 .loc 2 240 0
 363 0008 7B68     	 ldr r3,[r7,#4]
 364 000a 094A     	 ldr r2,.L22
 365 000c 9342     	 cmp r3,r2
 366 000e 03D1     	 bne .L20
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 367              	 .loc 2 242 0
 368 0010 8020     	 movs r0,#128
 369 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 370 0016 07E0     	 b .L19
 371              	.L20:
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else if (module == CCU81)
 372              	 .loc 2 245 0
 373 0018 7B68     	 ldr r3,[r7,#4]
 374 001a 064A     	 ldr r2,.L22+4
 375 001c 9342     	 cmp r3,r2
 376 001e 03D1     	 bne .L19
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 377              	 .loc 2 247 0
 378 0020 4FF48070 	 mov r0,#256
 379 0024 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 380              	.L19:
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     XMC_ASSERT("XMC_CCU8_lUngateClock:Invalid Module Pointer", 0);
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 381              	 .loc 2 254 0
 382 0028 0837     	 adds r7,r7,#8
 383              	.LCFI36:
 384              	 .cfi_def_cfa_offset 8
 385 002a BD46     	 mov sp,r7
 386              	.LCFI37:
 387              	 .cfi_def_cfa_register 13
 388              	 
 389 002c 80BD     	 pop {r7,pc}
 390              	.L23:
 391 002e 00BF     	 .align 2
 392              	.L22:
 393 0030 00000240 	 .word 1073872896
 394 0034 00400240 	 .word 1073889280
 395              	 .cfi_endproc
 396              	.LFE228:
 398              	 .section .text.XMC_CCU8_EnableModule,"ax",%progbits
 399              	 .align 2
 400              	 .global XMC_CCU8_EnableModule
 401              	 .thumb
 402              	 .thumb_func
 404              	XMC_CCU8_EnableModule:
 405              	.LFB229:
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined (XMC_ASSERT_ENABLE)
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsInputvalid(XMC_CCU8_SLICE_INPUT_t input)
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if (UC_SERIES == XMC14)
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   return (input < 48U);
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #else
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   return (input < 16U);
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  * API IMPLEMENTATION
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as active and enable the clock  */
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module)
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 406              	 .loc 2 273 0
 407              	 .cfi_startproc
 408              	 
 409              	 
 410 0000 80B5     	 push {r7,lr}
 411              	.LCFI38:
 412              	 .cfi_def_cfa_offset 8
 413              	 .cfi_offset 7,-8
 414              	 .cfi_offset 14,-4
 415 0002 82B0     	 sub sp,sp,#8
 416              	.LCFI39:
 417              	 .cfi_def_cfa_offset 16
 418 0004 00AF     	 add r7,sp,#0
 419              	.LCFI40:
 420              	 .cfi_def_cfa_register 7
 421 0006 7860     	 str r0,[r7,#4]
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_EnableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if (UC_FAMILY == XMC4)
 277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module clock */
 278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 422              	 .loc 2 278 0
 423 0008 1020     	 movs r0,#16
 424 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lUngateClock(module);
 425              	 .loc 2 282 0
 426 000e 7868     	 ldr r0,[r7,#4]
 427 0010 FFF7FEFF 	 bl XMC_CCU8_lUngateClock
 283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lDeassertReset(module);
 428              	 .loc 2 286 0
 429 0014 7868     	 ldr r0,[r7,#4]
 430 0016 FFF7FEFF 	 bl XMC_CCU8_lDeassertReset
 287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 431              	 .loc 2 288 0
 432 001a 0837     	 adds r7,r7,#8
 433              	.LCFI41:
 434              	 .cfi_def_cfa_offset 8
 435 001c BD46     	 mov sp,r7
 436              	.LCFI42:
 437              	 .cfi_def_cfa_register 13
 438              	 
 439 001e 80BD     	 pop {r7,pc}
 440              	 .cfi_endproc
 441              	.LFE229:
 443              	 .section .text.XMC_CCU8_DisableModule,"ax",%progbits
 444              	 .align 2
 445              	 .global XMC_CCU8_DisableModule
 446              	 .thumb
 447              	 .thumb_func
 449              	XMC_CCU8_DisableModule:
 450              	.LFB230:
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as idle and disable the clock  */
 291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module)
 292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 451              	 .loc 2 292 0
 452              	 .cfi_startproc
 453              	 
 454              	 
 455 0000 80B5     	 push {r7,lr}
 456              	.LCFI43:
 457              	 .cfi_def_cfa_offset 8
 458              	 .cfi_offset 7,-8
 459              	 .cfi_offset 14,-4
 460 0002 82B0     	 sub sp,sp,#8
 461              	.LCFI44:
 462              	 .cfi_def_cfa_offset 16
 463 0004 00AF     	 add r7,sp,#0
 464              	.LCFI45:
 465              	 .cfi_def_cfa_register 7
 466 0006 7860     	 str r0,[r7,#4]
 293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_DisableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lAssertReset(module);
 467              	 .loc 2 296 0
 468 0008 7868     	 ldr r0,[r7,#4]
 469 000a FFF7FEFF 	 bl XMC_CCU8_lAssertReset
 297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lGateClock(module);
 470              	 .loc 2 300 0
 471 000e 7868     	 ldr r0,[r7,#4]
 472 0010 FFF7FEFF 	 bl XMC_CCU8_lGateClock
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 473              	 .loc 2 302 0
 474 0014 0837     	 adds r7,r7,#8
 475              	.LCFI46:
 476              	 .cfi_def_cfa_offset 8
 477 0016 BD46     	 mov sp,r7
 478              	.LCFI47:
 479              	 .cfi_def_cfa_register 13
 480              	 
 481 0018 80BD     	 pop {r7,pc}
 482              	 .cfi_endproc
 483              	.LFE230:
 485 001a 00BF     	 .section .text.XMC_CCU8_Init,"ax",%progbits
 486              	 .align 2
 487              	 .global XMC_CCU8_Init
 488              	 .thumb
 489              	 .thumb_func
 491              	XMC_CCU8_Init:
 492              	.LFB231:
 303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to initialize CCU8 global resources  */
 305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action)
 306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 493              	 .loc 2 306 0
 494              	 .cfi_startproc
 495              	 
 496              	 
 497 0000 80B5     	 push {r7,lr}
 498              	.LCFI48:
 499              	 .cfi_def_cfa_offset 8
 500              	 .cfi_offset 7,-8
 501              	 .cfi_offset 14,-4
 502 0002 84B0     	 sub sp,sp,#16
 503              	.LCFI49:
 504              	 .cfi_def_cfa_offset 24
 505 0004 00AF     	 add r7,sp,#0
 506              	.LCFI50:
 507              	 .cfi_def_cfa_register 7
 508 0006 7860     	 str r0,[r7,#4]
 509 0008 0B46     	 mov r3,r1
 510 000a FB70     	 strb r3,[r7,#3]
 307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid mcs action", XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action));
 311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module */
 313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_EnableModule(module);
 511              	 .loc 2 313 0
 512 000c 7868     	 ldr r0,[r7,#4]
 513 000e FFF7FEFF 	 bl XMC_CCU8_EnableModule
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Start the prescaler */
 315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_StartPrescaler(module);
 514              	 .loc 2 315 0
 515 0012 7868     	 ldr r0,[r7,#4]
 516 0014 FFF7FEFF 	 bl XMC_CCU8_StartPrescaler
 316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   
 317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 517              	 .loc 2 317 0
 518 0018 7B68     	 ldr r3,[r7,#4]
 519 001a 1B68     	 ldr r3,[r3]
 520 001c FB60     	 str r3,[r7,#12]
 318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_MSDE_Msk);
 521              	 .loc 2 318 0
 522 001e FB68     	 ldr r3,[r7,#12]
 523 0020 23F44043 	 bic r3,r3,#49152
 524 0024 FB60     	 str r3,[r7,#12]
 319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   gctrl |= (uint32_t)mcs_action << CCU8_GCTRL_MSDE_Pos;
 525              	 .loc 2 319 0
 526 0026 FB78     	 ldrb r3,[r7,#3]
 527 0028 9B03     	 lsls r3,r3,#14
 528 002a FA68     	 ldr r2,[r7,#12]
 529 002c 1343     	 orrs r3,r3,r2
 530 002e FB60     	 str r3,[r7,#12]
 320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   
 321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 531              	 .loc 2 321 0
 532 0030 7B68     	 ldr r3,[r7,#4]
 533 0032 1A68     	 ldr r2,[r3]
 534 0034 0021     	 movs r1,#0
 535 0036 FA68     	 ldr r2,[r7,#12]
 536 0038 0A43     	 orrs r2,r2,r1
 537 003a 1A60     	 str r2,[r3]
 322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 538              	 .loc 2 322 0
 539 003c 1037     	 adds r7,r7,#16
 540              	.LCFI51:
 541              	 .cfi_def_cfa_offset 8
 542 003e BD46     	 mov sp,r7
 543              	.LCFI52:
 544              	 .cfi_def_cfa_register 13
 545              	 
 546 0040 80BD     	 pop {r7,pc}
 547              	 .cfi_endproc
 548              	.LFE231:
 550 0042 00BF     	 .section .text.XMC_CCU8_SetModuleClock,"ax",%progbits
 551              	 .align 2
 552              	 .global XMC_CCU8_SetModuleClock
 553              	 .thumb
 554              	 .thumb_func
 556              	XMC_CCU8_SetModuleClock:
 557              	.LFB232:
 323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to select CCU8 module clock */
 325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock)
 326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 558              	 .loc 2 326 0
 559              	 .cfi_startproc
 560              	 
 561              	 
 562              	 
 563 0000 80B4     	 push {r7}
 564              	.LCFI53:
 565              	 .cfi_def_cfa_offset 4
 566              	 .cfi_offset 7,-4
 567 0002 85B0     	 sub sp,sp,#20
 568              	.LCFI54:
 569              	 .cfi_def_cfa_offset 24
 570 0004 00AF     	 add r7,sp,#0
 571              	.LCFI55:
 572              	 .cfi_def_cfa_register 7
 573 0006 7860     	 str r0,[r7,#4]
 574 0008 0B46     	 mov r3,r1
 575 000a FB70     	 strb r3,[r7,#3]
 327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Clock", XMC_CCU8_SLICE_CHECK_CLOCK(clock));
 331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 576              	 .loc 2 332 0
 577 000c 7B68     	 ldr r3,[r7,#4]
 578 000e 1B68     	 ldr r3,[r3]
 579 0010 FB60     	 str r3,[r7,#12]
 333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_PCIS_Msk);
 580              	 .loc 2 333 0
 581 0012 FB68     	 ldr r3,[r7,#12]
 582 0014 23F03003 	 bic r3,r3,#48
 583 0018 FB60     	 str r3,[r7,#12]
 334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t) clock) << CCU8_GCTRL_PCIS_Pos;
 584              	 .loc 2 334 0
 585 001a FB78     	 ldrb r3,[r7,#3]
 586 001c 1B01     	 lsls r3,r3,#4
 587 001e FA68     	 ldr r2,[r7,#12]
 588 0020 1343     	 orrs r3,r3,r2
 589 0022 FB60     	 str r3,[r7,#12]
 335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 590              	 .loc 2 336 0
 591 0024 7B68     	 ldr r3,[r7,#4]
 592 0026 1A68     	 ldr r2,[r3]
 593 0028 0021     	 movs r1,#0
 594 002a FA68     	 ldr r2,[r7,#12]
 595 002c 0A43     	 orrs r2,r2,r1
 596 002e 1A60     	 str r2,[r3]
 337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 597              	 .loc 2 337 0
 598 0030 1437     	 adds r7,r7,#20
 599              	.LCFI56:
 600              	 .cfi_def_cfa_offset 4
 601 0032 BD46     	 mov sp,r7
 602              	.LCFI57:
 603              	 .cfi_def_cfa_register 13
 604              	 
 605 0034 5DF8047B 	 ldr r7,[sp],#4
 606              	.LCFI58:
 607              	 .cfi_restore 7
 608              	 .cfi_def_cfa_offset 0
 609 0038 7047     	 bx lr
 610              	 .cfi_endproc
 611              	.LFE232:
 613 003a 00BF     	 .section .text.XMC_CCU8_SLICE_CompareInit,"ax",%progbits
 614              	 .align 2
 615              	 .global XMC_CCU8_SLICE_CompareInit
 616              	 .thumb
 617              	 .thumb_func
 619              	XMC_CCU8_SLICE_CompareInit:
 620              	.LFB233:
 338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Compare mode */
 340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
 341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init)
 342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 621              	 .loc 2 342 0
 622              	 .cfi_startproc
 623              	 
 624              	 
 625 0000 80B5     	 push {r7,lr}
 626              	.LCFI59:
 627              	 .cfi_def_cfa_offset 8
 628              	 .cfi_offset 7,-8
 629              	 .cfi_offset 14,-4
 630 0002 82B0     	 sub sp,sp,#8
 631              	.LCFI60:
 632              	 .cfi_def_cfa_offset 16
 633 0004 00AF     	 add r7,sp,#0
 634              	.LCFI61:
 635              	 .cfi_def_cfa_register 7
 636 0006 7860     	 str r0,[r7,#4]
 637 0008 3960     	 str r1,[r7]
 343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Timer Init Pointer is NULL",
 345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 638              	 .loc 2 347 0
 639 000a 7868     	 ldr r0,[r7,#4]
 640 000c FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program the timer mode */
 349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = compare_init->tc;
 641              	 .loc 2 349 0
 642 0010 3B68     	 ldr r3,[r7]
 643 0012 1A68     	 ldr r2,[r3]
 644 0014 7B68     	 ldr r3,[r7,#4]
 645 0016 5969     	 ldr r1,[r3,#20]
 646 0018 0021     	 movs r1,#0
 647 001a 0A43     	 orrs r2,r2,r1
 648 001c 5A61     	 str r2,[r3,#20]
 350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC =  (uint32_t)compare_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 649              	 .loc 2 351 0
 650 001e 3B68     	 ldr r3,[r7]
 651 0020 5B7B     	 ldrb r3,[r3,#13]
 652 0022 C3F30013 	 ubfx r3,r3,#4,#1
 653 0026 DBB2     	 uxtb r3,r3
 654 0028 1A05     	 lsls r2,r3,#20
 655 002a 7B68     	 ldr r3,[r7,#4]
 656 002c 5968     	 ldr r1,[r3,#4]
 657 002e 0021     	 movs r1,#0
 658 0030 0A43     	 orrs r2,r2,r1
 659 0032 5A60     	 str r2,[r3,#4]
 352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 660              	 .loc 2 353 0
 661 0034 3B68     	 ldr r3,[r7]
 662 0036 1B7B     	 ldrb r3,[r3,#12]
 663 0038 C3F30303 	 ubfx r3,r3,#0,#4
 664 003c DBB2     	 uxtb r3,r3
 665 003e 1946     	 mov r1,r3
 666 0040 7B68     	 ldr r3,[r7,#4]
 667 0042 5A6A     	 ldr r2,[r3,#36]
 668 0044 0022     	 movs r2,#0
 669 0046 0A43     	 orrs r2,r2,r1
 670 0048 5A62     	 str r2,[r3,#36]
 354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 671              	 .loc 2 355 0
 672 004a 3B68     	 ldr r3,[r7]
 673 004c 1B7B     	 ldrb r3,[r3,#12]
 674 004e C3F30313 	 ubfx r3,r3,#4,#4
 675 0052 DBB2     	 uxtb r3,r3
 676 0054 1946     	 mov r1,r3
 677 0056 7B68     	 ldr r3,[r7,#4]
 678 0058 DA6A     	 ldr r2,[r3,#44]
 679 005a 0022     	 movs r2,#0
 680 005c 0A43     	 orrs r2,r2,r1
 681 005e DA62     	 str r2,[r3,#44]
 356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program the dither compare value */
 357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 682              	 .loc 2 357 0
 683 0060 3B68     	 ldr r3,[r7]
 684 0062 5B7B     	 ldrb r3,[r3,#13]
 685 0064 C3F30303 	 ubfx r3,r3,#0,#4
 686 0068 DBB2     	 uxtb r3,r3
 687 006a 1946     	 mov r1,r3
 688 006c 7B68     	 ldr r3,[r7,#4]
 689 006e 1A6A     	 ldr r2,[r3,#32]
 690 0070 0022     	 movs r2,#0
 691 0072 0A43     	 orrs r2,r2,r1
 692 0074 1A62     	 str r2,[r3,#32]
 358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program timer output passive level */
 359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->PSL = (uint32_t) compare_init->psl;
 693              	 .loc 2 359 0
 694 0076 3B68     	 ldr r3,[r7]
 695 0078 5A68     	 ldr r2,[r3,#4]
 696 007a 7B68     	 ldr r3,[r7,#4]
 697 007c 9969     	 ldr r1,[r3,#24]
 698 007e 0021     	 movs r1,#0
 699 0080 0A43     	 orrs r2,r2,r1
 700 0082 9A61     	 str r2,[r3,#24]
 360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Asymmetric PWM and Slice output routing configuration */
 361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t) compare_init->chc;
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #else
 364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t)((uint32_t)compare_init->chc ^ XMC_CCU8_SLICE_CHC_CONFIG_MASK);
 701              	 .loc 2 364 0
 702 0084 3B68     	 ldr r3,[r7]
 703 0086 9B68     	 ldr r3,[r3,#8]
 704 0088 83F01402 	 eor r2,r3,#20
 705 008c 7B68     	 ldr r3,[r7,#4]
 706 008e 996C     	 ldr r1,[r3,#72]
 707 0090 0021     	 movs r1,#0
 708 0092 0A43     	 orrs r2,r2,r1
 709 0094 9A64     	 str r2,[r3,#72]
 365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 710              	 .loc 2 366 0
 711 0096 0837     	 adds r7,r7,#8
 712              	.LCFI62:
 713              	 .cfi_def_cfa_offset 8
 714 0098 BD46     	 mov sp,r7
 715              	.LCFI63:
 716              	 .cfi_def_cfa_register 13
 717              	 
 718 009a 80BD     	 pop {r7,pc}
 719              	 .cfi_endproc
 720              	.LFE233:
 722              	 .section .text.XMC_CCU8_SLICE_CaptureInit,"ax",%progbits
 723              	 .align 2
 724              	 .global XMC_CCU8_SLICE_CaptureInit
 725              	 .thumb
 726              	 .thumb_func
 728              	XMC_CCU8_SLICE_CaptureInit:
 729              	.LFB234:
 367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Capture mode */
 369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice, 
 370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init)
 371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 730              	 .loc 2 371 0
 731              	 .cfi_startproc
 732              	 
 733              	 
 734 0000 80B5     	 push {r7,lr}
 735              	.LCFI64:
 736              	 .cfi_def_cfa_offset 8
 737              	 .cfi_offset 7,-8
 738              	 .cfi_offset 14,-4
 739 0002 82B0     	 sub sp,sp,#8
 740              	.LCFI65:
 741              	 .cfi_def_cfa_offset 16
 742 0004 00AF     	 add r7,sp,#0
 743              	.LCFI66:
 744              	 .cfi_def_cfa_register 7
 745 0006 7860     	 str r0,[r7,#4]
 746 0008 3960     	 str r1,[r7]
 372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Capture Init Pointer is NULL", 
 374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 747              	 .loc 2 376 0
 748 000a 7868     	 ldr r0,[r7,#4]
 749 000c FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Capture mode configuration */
 378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = capture_init->tc;
 750              	 .loc 2 378 0
 751 0010 3B68     	 ldr r3,[r7]
 752 0012 1A68     	 ldr r2,[r3]
 753 0014 7B68     	 ldr r3,[r7,#4]
 754 0016 5969     	 ldr r1,[r3,#20]
 755 0018 0021     	 movs r1,#0
 756 001a 0A43     	 orrs r2,r2,r1
 757 001c 5A61     	 str r2,[r3,#20]
 379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = (uint32_t)capture_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 758              	 .loc 2 380 0
 759 001e 3B68     	 ldr r3,[r7]
 760 0020 5B79     	 ldrb r3,[r3,#5]
 761 0022 C3F30003 	 ubfx r3,r3,#0,#1
 762 0026 DBB2     	 uxtb r3,r3
 763 0028 1A05     	 lsls r2,r3,#20
 764 002a 7B68     	 ldr r3,[r7,#4]
 765 002c 5968     	 ldr r1,[r3,#4]
 766 002e 0021     	 movs r1,#0
 767 0030 0A43     	 orrs r2,r2,r1
 768 0032 5A60     	 str r2,[r3,#4]
 381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 769              	 .loc 2 382 0
 770 0034 3B68     	 ldr r3,[r7]
 771 0036 1B79     	 ldrb r3,[r3,#4]
 772 0038 C3F30313 	 ubfx r3,r3,#4,#4
 773 003c DBB2     	 uxtb r3,r3
 774 003e 1946     	 mov r1,r3
 775 0040 7B68     	 ldr r3,[r7,#4]
 776 0042 DA6A     	 ldr r2,[r3,#44]
 777 0044 0022     	 movs r2,#0
 778 0046 0A43     	 orrs r2,r2,r1
 779 0048 DA62     	 str r2,[r3,#44]
 383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 780              	 .loc 2 384 0
 781 004a 3B68     	 ldr r3,[r7]
 782 004c 1B79     	 ldrb r3,[r3,#4]
 783 004e C3F30303 	 ubfx r3,r3,#0,#4
 784 0052 DBB2     	 uxtb r3,r3
 785 0054 1946     	 mov r1,r3
 786 0056 7B68     	 ldr r3,[r7,#4]
 787 0058 5A6A     	 ldr r2,[r3,#36]
 788 005a 0022     	 movs r2,#0
 789 005c 0A43     	 orrs r2,r2,r1
 790 005e 5A62     	 str r2,[r3,#36]
 385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 791              	 .loc 2 385 0
 792 0060 0837     	 adds r7,r7,#8
 793              	.LCFI67:
 794              	 .cfi_def_cfa_offset 8
 795 0062 BD46     	 mov sp,r7
 796              	.LCFI68:
 797              	 .cfi_def_cfa_register 13
 798              	 
 799 0064 80BD     	 pop {r7,pc}
 800              	 .cfi_endproc
 801              	.LFE234:
 803 0066 00BF     	 .section .text.XMC_CCU8_SLICE_SetOutPath,"ax",%progbits
 804              	 .align 2
 805              	 .global XMC_CCU8_SLICE_SetOutPath
 806              	 .thumb
 807              	 .thumb_func
 809              	XMC_CCU8_SLICE_SetOutPath:
 810              	.LFB235:
 386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure the each output of the slice with either STx or inverted STx. */
 388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk)
 389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 811              	 .loc 2 389 0
 812              	 .cfi_startproc
 813              	 
 814              	 
 815              	 
 816 0000 80B4     	 push {r7}
 817              	.LCFI69:
 818              	 .cfi_def_cfa_offset 4
 819              	 .cfi_offset 7,-4
 820 0002 85B0     	 sub sp,sp,#20
 821              	.LCFI70:
 822              	 .cfi_def_cfa_offset 24
 823 0004 00AF     	 add r7,sp,#0
 824              	.LCFI71:
 825              	 .cfi_def_cfa_register 7
 826 0006 7860     	 str r0,[r7,#4]
 827 0008 3960     	 str r1,[r7]
 390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t chc;
 391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetOutPath:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   chc = slice->CHC;
 828              	 .loc 2 392 0
 829 000a 7B68     	 ldr r3,[r7,#4]
 830 000c 9B6C     	 ldr r3,[r3,#72]
 831 000e FB60     	 str r3,[r7,#12]
 393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)out_path_msk >> 16U);
 832              	 .loc 2 394 0
 833 0010 3B68     	 ldr r3,[r7]
 834 0012 1B0C     	 lsrs r3,r3,#16
 835 0014 DB43     	 mvns r3,r3
 836 0016 FA68     	 ldr r2,[r7,#12]
 837 0018 1340     	 ands r3,r3,r2
 838 001a FB60     	 str r3,[r7,#12]
 395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0xFFFFU);
 839              	 .loc 2 395 0
 840 001c 3B68     	 ldr r3,[r7]
 841 001e 9BB2     	 uxth r3,r3
 842 0020 FA68     	 ldr r2,[r7,#12]
 843 0022 1343     	 orrs r3,r3,r2
 844 0024 FB60     	 str r3,[r7,#12]
 396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #else
 397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)((uint32_t)(out_path_msk & 0xCCCC0U) >> 2U));
 398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0x33330U);
 399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CHC = chc;
 845              	 .loc 2 400 0
 846 0026 7B68     	 ldr r3,[r7,#4]
 847 0028 9A6C     	 ldr r2,[r3,#72]
 848 002a 0021     	 movs r1,#0
 849 002c FA68     	 ldr r2,[r7,#12]
 850 002e 0A43     	 orrs r2,r2,r1
 851 0030 9A64     	 str r2,[r3,#72]
 401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 852              	 .loc 2 401 0
 853 0032 1437     	 adds r7,r7,#20
 854              	.LCFI72:
 855              	 .cfi_def_cfa_offset 4
 856 0034 BD46     	 mov sp,r7
 857              	.LCFI73:
 858              	 .cfi_def_cfa_register 13
 859              	 
 860 0036 5DF8047B 	 ldr r7,[sp],#4
 861              	.LCFI74:
 862              	 .cfi_restore 7
 863              	 .cfi_def_cfa_offset 0
 864 003a 7047     	 bx lr
 865              	 .cfi_endproc
 866              	.LFE235:
 868              	 .section .text.XMC_CCU8_SetMultiChannelShadowTransferMode,"ax",%progbits
 869              	 .align 2
 870              	 .global XMC_CCU8_SetMultiChannelShadowTransferMode
 871              	 .thumb
 872              	 .thumb_func
 874              	XMC_CCU8_SetMultiChannelShadowTransferMode:
 875              	.LFB236:
 402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU8x.MCSS input. *
 404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
 405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 876              	 .loc 2 405 0
 877              	 .cfi_startproc
 878              	 
 879              	 
 880              	 
 881 0000 80B4     	 push {r7}
 882              	.LCFI75:
 883              	 .cfi_def_cfa_offset 4
 884              	 .cfi_offset 7,-4
 885 0002 85B0     	 sub sp,sp,#20
 886              	.LCFI76:
 887              	 .cfi_def_cfa_offset 24
 888 0004 00AF     	 add r7,sp,#0
 889              	.LCFI77:
 890              	 .cfi_def_cfa_register 7
 891 0006 7860     	 str r0,[r7,#4]
 892 0008 3960     	 str r1,[r7]
 406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU8_IsValidM
 409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   
 410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 893              	 .loc 2 410 0
 894 000a 7B68     	 ldr r3,[r7,#4]
 895 000c 1B68     	 ldr r3,[r3]
 896 000e FB60     	 str r3,[r7,#12]
 411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 897              	 .loc 2 411 0
 898 0010 3B68     	 ldr r3,[r7]
 899 0012 1B0C     	 lsrs r3,r3,#16
 900 0014 DB43     	 mvns r3,r3
 901 0016 FA68     	 ldr r2,[r7,#12]
 902 0018 1340     	 ands r3,r3,r2
 903 001a FB60     	 str r3,[r7,#12]
 412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 904              	 .loc 2 412 0
 905 001c 3B68     	 ldr r3,[r7]
 906 001e 9BB2     	 uxth r3,r3
 907 0020 FA68     	 ldr r2,[r7,#12]
 908 0022 1343     	 orrs r3,r3,r2
 909 0024 FB60     	 str r3,[r7,#12]
 413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 910              	 .loc 2 413 0
 911 0026 7B68     	 ldr r3,[r7,#4]
 912 0028 1A68     	 ldr r2,[r3]
 913 002a 0021     	 movs r1,#0
 914 002c FA68     	 ldr r2,[r7,#12]
 915 002e 0A43     	 orrs r2,r2,r1
 916 0030 1A60     	 str r2,[r3]
 414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 917              	 .loc 2 414 0
 918 0032 1437     	 adds r7,r7,#20
 919              	.LCFI78:
 920              	 .cfi_def_cfa_offset 4
 921 0034 BD46     	 mov sp,r7
 922              	.LCFI79:
 923              	 .cfi_def_cfa_register 13
 924              	 
 925 0036 5DF8047B 	 ldr r7,[sp],#4
 926              	.LCFI80:
 927              	 .cfi_restore 7
 928              	 .cfi_def_cfa_offset 0
 929 003a 7047     	 bx lr
 930              	 .cfi_endproc
 931              	.LFE236:
 933              	 .section .text.XMC_CCU8_SLICE_StartConfig,"ax",%progbits
 934              	 .align 2
 935              	 .global XMC_CCU8_SLICE_StartConfig
 936              	 .thumb
 937              	 .thumb_func
 939              	XMC_CCU8_SLICE_StartConfig:
 940              	.LFB237:
 415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure the Start trigger function of a slice*/
 418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
 419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_EVENT_t event,
 420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode)
 421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 941              	 .loc 2 421 0
 942              	 .cfi_startproc
 943              	 
 944              	 
 945              	 
 946 0000 80B4     	 push {r7}
 947              	.LCFI81:
 948              	 .cfi_def_cfa_offset 4
 949              	 .cfi_offset 7,-4
 950 0002 85B0     	 sub sp,sp,#20
 951              	.LCFI82:
 952              	 .cfi_def_cfa_offset 24
 953 0004 00AF     	 add r7,sp,#0
 954              	.LCFI83:
 955              	 .cfi_def_cfa_register 7
 956 0006 7860     	 str r0,[r7,#4]
 957 0008 0B46     	 mov r3,r1
 958 000a FB70     	 strb r3,[r7,#3]
 959 000c 1346     	 mov r3,r2
 960 000e BB70     	 strb r3,[r7,#2]
 422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Start Mode", 
 428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START) ||\
 429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)));
 430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 961              	 .loc 2 430 0
 962 0010 7B68     	 ldr r3,[r7,#4]
 963 0012 5B68     	 ldr r3,[r3,#4]
 964 0014 BB60     	 str r3,[r7,#8]
 431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_STRTS_Msk);
 965              	 .loc 2 432 0
 966 0016 BB68     	 ldr r3,[r7,#8]
 967 0018 23F00303 	 bic r3,r3,#3
 968 001c BB60     	 str r3,[r7,#8]
 433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_STRTS_Pos;
 969              	 .loc 2 433 0
 970 001e FB78     	 ldrb r3,[r7,#3]
 971 0020 BA68     	 ldr r2,[r7,#8]
 972 0022 1343     	 orrs r3,r3,r2
 973 0024 BB60     	 str r3,[r7,#8]
 434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 974              	 .loc 2 435 0
 975 0026 7B68     	 ldr r3,[r7,#4]
 976 0028 5A68     	 ldr r2,[r3,#4]
 977 002a 0021     	 movs r1,#0
 978 002c BA68     	 ldr r2,[r7,#8]
 979 002e 0A43     	 orrs r2,r2,r1
 980 0030 5A60     	 str r2,[r3,#4]
 436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 981              	 .loc 2 437 0
 982 0032 7B68     	 ldr r3,[r7,#4]
 983 0034 5B69     	 ldr r3,[r3,#20]
 984 0036 FB60     	 str r3,[r7,#12]
 438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)
 985              	 .loc 2 439 0
 986 0038 BB78     	 ldrb r3,[r7,#2]
 987 003a 012B     	 cmp r3,#1
 988 003c 04D1     	 bne .L33
 440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_STRM_Msk;
 989              	 .loc 2 441 0
 990 003e FB68     	 ldr r3,[r7,#12]
 991 0040 43F48063 	 orr r3,r3,#1024
 992 0044 FB60     	 str r3,[r7,#12]
 993 0046 03E0     	 b .L34
 994              	.L33:
 442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_STRM_Msk);
 995              	 .loc 2 445 0
 996 0048 FB68     	 ldr r3,[r7,#12]
 997 004a 23F48063 	 bic r3,r3,#1024
 998 004e FB60     	 str r3,[r7,#12]
 999              	.L34:
 446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1000              	 .loc 2 448 0
 1001 0050 7B68     	 ldr r3,[r7,#4]
 1002 0052 5A69     	 ldr r2,[r3,#20]
 1003 0054 0021     	 movs r1,#0
 1004 0056 FA68     	 ldr r2,[r7,#12]
 1005 0058 0A43     	 orrs r2,r2,r1
 1006 005a 5A61     	 str r2,[r3,#20]
 449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1007              	 .loc 2 449 0
 1008 005c 1437     	 adds r7,r7,#20
 1009              	.LCFI84:
 1010              	 .cfi_def_cfa_offset 4
 1011 005e BD46     	 mov sp,r7
 1012              	.LCFI85:
 1013              	 .cfi_def_cfa_register 13
 1014              	 
 1015 0060 5DF8047B 	 ldr r7,[sp],#4
 1016              	.LCFI86:
 1017              	 .cfi_restore 7
 1018              	 .cfi_def_cfa_offset 0
 1019 0064 7047     	 bx lr
 1020              	 .cfi_endproc
 1021              	.LFE237:
 1023 0066 00BF     	 .section .text.XMC_CCU8_SLICE_StopConfig,"ax",%progbits
 1024              	 .align 2
 1025              	 .global XMC_CCU8_SLICE_StopConfig
 1026              	 .thumb
 1027              	 .thumb_func
 1029              	XMC_CCU8_SLICE_StopConfig:
 1030              	.LFB238:
 450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure the Stop trigger function of a slice */
 452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
 453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_EVENT_t event,
 454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode)
 455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1031              	 .loc 2 455 0
 1032              	 .cfi_startproc
 1033              	 
 1034              	 
 1035              	 
 1036 0000 80B4     	 push {r7}
 1037              	.LCFI87:
 1038              	 .cfi_def_cfa_offset 4
 1039              	 .cfi_offset 7,-4
 1040 0002 85B0     	 sub sp,sp,#20
 1041              	.LCFI88:
 1042              	 .cfi_def_cfa_offset 24
 1043 0004 00AF     	 add r7,sp,#0
 1044              	.LCFI89:
 1045              	 .cfi_def_cfa_register 7
 1046 0006 7860     	 str r0,[r7,#4]
 1047 0008 0B46     	 mov r3,r1
 1048 000a FB70     	 strb r3,[r7,#3]
 1049 000c 1346     	 mov r3,r2
 1050 000e BB70     	 strb r3,[r7,#2]
 456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid End Mode", XMC_CCU8_SLICE_CHECK_END_MODE(end_mode))
 462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1051              	 .loc 2 463 0
 1052 0010 7B68     	 ldr r3,[r7,#4]
 1053 0012 5B68     	 ldr r3,[r3,#4]
 1054 0014 FB60     	 str r3,[r7,#12]
 464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the stop function */
 465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_ENDS_Msk);
 1055              	 .loc 2 465 0
 1056 0016 FB68     	 ldr r3,[r7,#12]
 1057 0018 23F00C03 	 bic r3,r3,#12
 1058 001c FB60     	 str r3,[r7,#12]
 466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_ENDS_Pos;
 1059              	 .loc 2 466 0
 1060 001e FB78     	 ldrb r3,[r7,#3]
 1061 0020 9B00     	 lsls r3,r3,#2
 1062 0022 FA68     	 ldr r2,[r7,#12]
 1063 0024 1343     	 orrs r3,r3,r2
 1064 0026 FB60     	 str r3,[r7,#12]
 467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1065              	 .loc 2 468 0
 1066 0028 7B68     	 ldr r3,[r7,#4]
 1067 002a 5A68     	 ldr r2,[r3,#4]
 1068 002c 0021     	 movs r1,#0
 1069 002e FA68     	 ldr r2,[r7,#12]
 1070 0030 0A43     	 orrs r2,r2,r1
 1071 0032 5A60     	 str r2,[r3,#4]
 469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the stop mode */
 471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1072              	 .loc 2 471 0
 1073 0034 7B68     	 ldr r3,[r7,#4]
 1074 0036 5B69     	 ldr r3,[r3,#20]
 1075 0038 BB60     	 str r3,[r7,#8]
 472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_ENDM_Msk);
 1076              	 .loc 2 472 0
 1077 003a BB68     	 ldr r3,[r7,#8]
 1078 003c 23F44073 	 bic r3,r3,#768
 1079 0040 BB60     	 str r3,[r7,#8]
 473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc |= ((uint32_t) end_mode) << CCU8_CC8_TC_ENDM_Pos;
 1080              	 .loc 2 473 0
 1081 0042 BB78     	 ldrb r3,[r7,#2]
 1082 0044 1B02     	 lsls r3,r3,#8
 1083 0046 BA68     	 ldr r2,[r7,#8]
 1084 0048 1343     	 orrs r3,r3,r2
 1085 004a BB60     	 str r3,[r7,#8]
 474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1086              	 .loc 2 475 0
 1087 004c 7B68     	 ldr r3,[r7,#4]
 1088 004e 5A69     	 ldr r2,[r3,#20]
 1089 0050 0021     	 movs r1,#0
 1090 0052 BA68     	 ldr r2,[r7,#8]
 1091 0054 0A43     	 orrs r2,r2,r1
 1092 0056 5A61     	 str r2,[r3,#20]
 476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1093              	 .loc 2 476 0
 1094 0058 1437     	 adds r7,r7,#20
 1095              	.LCFI90:
 1096              	 .cfi_def_cfa_offset 4
 1097 005a BD46     	 mov sp,r7
 1098              	.LCFI91:
 1099              	 .cfi_def_cfa_register 13
 1100              	 
 1101 005c 5DF8047B 	 ldr r7,[sp],#4
 1102              	.LCFI92:
 1103              	 .cfi_restore 7
 1104              	 .cfi_def_cfa_offset 0
 1105 0060 7047     	 bx lr
 1106              	 .cfi_endproc
 1107              	.LFE238:
 1109 0062 00BF     	 .section .text.XMC_CCU8_SLICE_LoadConfig,"ax",%progbits
 1110              	 .align 2
 1111              	 .global XMC_CCU8_SLICE_LoadConfig
 1112              	 .thumb
 1113              	 .thumb_func
 1115              	XMC_CCU8_SLICE_LoadConfig:
 1116              	.LFB239:
 477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure the Load trigger function of a slice*/
 479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1117              	 .loc 2 480 0
 1118              	 .cfi_startproc
 1119              	 
 1120              	 
 1121              	 
 1122 0000 80B4     	 push {r7}
 1123              	.LCFI93:
 1124              	 .cfi_def_cfa_offset 4
 1125              	 .cfi_offset 7,-4
 1126 0002 85B0     	 sub sp,sp,#20
 1127              	.LCFI94:
 1128              	 .cfi_def_cfa_offset 24
 1129 0004 00AF     	 add r7,sp,#0
 1130              	.LCFI95:
 1131              	 .cfi_def_cfa_register 7
 1132 0006 7860     	 str r0,[r7,#4]
 1133 0008 0B46     	 mov r3,r1
 1134 000a FB70     	 strb r3,[r7,#3]
 481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1135              	 .loc 2 486 0
 1136 000c 7B68     	 ldr r3,[r7,#4]
 1137 000e 5B68     	 ldr r3,[r3,#4]
 1138 0010 FB60     	 str r3,[r7,#12]
 487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_LDS_Msk);
 1139              	 .loc 2 489 0
 1140 0012 FB68     	 ldr r3,[r7,#12]
 1141 0014 23F44053 	 bic r3,r3,#12288
 1142 0018 FB60     	 str r3,[r7,#12]
 490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_LDS_Pos;
 1143              	 .loc 2 490 0
 1144 001a FB78     	 ldrb r3,[r7,#3]
 1145 001c 1B03     	 lsls r3,r3,#12
 1146 001e FA68     	 ldr r2,[r7,#12]
 1147 0020 1343     	 orrs r3,r3,r2
 1148 0022 FB60     	 str r3,[r7,#12]
 491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1149              	 .loc 2 492 0
 1150 0024 7B68     	 ldr r3,[r7,#4]
 1151 0026 5A68     	 ldr r2,[r3,#4]
 1152 0028 0021     	 movs r1,#0
 1153 002a FA68     	 ldr r2,[r7,#12]
 1154 002c 0A43     	 orrs r2,r2,r1
 1155 002e 5A60     	 str r2,[r3,#4]
 493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1156              	 .loc 2 493 0
 1157 0030 1437     	 adds r7,r7,#20
 1158              	.LCFI96:
 1159              	 .cfi_def_cfa_offset 4
 1160 0032 BD46     	 mov sp,r7
 1161              	.LCFI97:
 1162              	 .cfi_def_cfa_register 13
 1163              	 
 1164 0034 5DF8047B 	 ldr r7,[sp],#4
 1165              	.LCFI98:
 1166              	 .cfi_restore 7
 1167              	 .cfi_def_cfa_offset 0
 1168 0038 7047     	 bx lr
 1169              	 .cfi_endproc
 1170              	.LFE239:
 1172 003a 00BF     	 .section .text.XMC_CCU8_SLICE_LoadSelector,"ax",%progbits
 1173              	 .align 2
 1174              	 .global XMC_CCU8_SLICE_LoadSelector
 1175              	 .thumb
 1176              	 .thumb_func
 1178              	XMC_CCU8_SLICE_LoadSelector:
 1179              	.LFB240:
 494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure, which compare register value has to be loaded during external load event */
 496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
 497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1180              	 .loc 2 497 0
 1181              	 .cfi_startproc
 1182              	 
 1183              	 
 1184              	 
 1185 0000 80B4     	 push {r7}
 1186              	.LCFI99:
 1187              	 .cfi_def_cfa_offset 4
 1188              	 .cfi_offset 7,-4
 1189 0002 85B0     	 sub sp,sp,#20
 1190              	.LCFI100:
 1191              	 .cfi_def_cfa_offset 24
 1192 0004 00AF     	 add r7,sp,#0
 1193              	.LCFI101:
 1194              	 .cfi_def_cfa_register 7
 1195 0006 7860     	 str r0,[r7,#4]
 1196 0008 0B46     	 mov r3,r1
 1197 000a FB70     	 strb r3,[r7,#3]
 498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Channel number", XMC_CCU8_SLICE_CHECK_COMP_CHANNE
 502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1198              	 .loc 2 503 0
 1199 000c 7B68     	 ldr r3,[r7,#4]
 1200 000e 5B69     	 ldr r3,[r3,#20]
 1201 0010 FB60     	 str r3,[r7,#12]
 504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_TLS_Msk);
 1202              	 .loc 2 506 0
 1203 0012 FB68     	 ldr r3,[r7,#12]
 1204 0014 23F08003 	 bic r3,r3,#128
 1205 0018 FB60     	 str r3,[r7,#12]
 507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)ch_num << CCU8_CC8_TC_TLS_Pos;
 1206              	 .loc 2 507 0
 1207 001a FB78     	 ldrb r3,[r7,#3]
 1208 001c DB01     	 lsls r3,r3,#7
 1209 001e FA68     	 ldr r2,[r7,#12]
 1210 0020 1343     	 orrs r3,r3,r2
 1211 0022 FB60     	 str r3,[r7,#12]
 508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1212              	 .loc 2 509 0
 1213 0024 7B68     	 ldr r3,[r7,#4]
 1214 0026 5A69     	 ldr r2,[r3,#20]
 1215 0028 0021     	 movs r1,#0
 1216 002a FA68     	 ldr r2,[r7,#12]
 1217 002c 0A43     	 orrs r2,r2,r1
 1218 002e 5A61     	 str r2,[r3,#20]
 510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1219              	 .loc 2 510 0
 1220 0030 1437     	 adds r7,r7,#20
 1221              	.LCFI102:
 1222              	 .cfi_def_cfa_offset 4
 1223 0032 BD46     	 mov sp,r7
 1224              	.LCFI103:
 1225              	 .cfi_def_cfa_register 13
 1226              	 
 1227 0034 5DF8047B 	 ldr r7,[sp],#4
 1228              	.LCFI104:
 1229              	 .cfi_restore 7
 1230              	 .cfi_def_cfa_offset 0
 1231 0038 7047     	 bx lr
 1232              	 .cfi_endproc
 1233              	.LFE240:
 1235 003a 00BF     	 .section .text.XMC_CCU8_SLICE_ModulationConfig,"ax",%progbits
 1236              	 .align 2
 1237              	 .global XMC_CCU8_SLICE_ModulationConfig
 1238              	 .thumb
 1239              	 .thumb_func
 1241              	XMC_CCU8_SLICE_ModulationConfig:
 1242              	.LFB241:
 511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice modulation function */
 513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
 514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_EVENT_t event,
 515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
 516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
 517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                      const bool synch_with_pwm)
 518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1243              	 .loc 2 518 0
 1244              	 .cfi_startproc
 1245              	 
 1246              	 
 1247              	 
 1248 0000 80B4     	 push {r7}
 1249              	.LCFI105:
 1250              	 .cfi_def_cfa_offset 4
 1251              	 .cfi_offset 7,-4
 1252 0002 85B0     	 sub sp,sp,#20
 1253              	.LCFI106:
 1254              	 .cfi_def_cfa_offset 24
 1255 0004 00AF     	 add r7,sp,#0
 1256              	.LCFI107:
 1257              	 .cfi_def_cfa_register 7
 1258 0006 7860     	 str r0,[r7,#4]
 1259 0008 0846     	 mov r0,r1
 1260 000a 1146     	 mov r1,r2
 1261 000c 1A46     	 mov r2,r3
 1262 000e 0346     	 mov r3,r0
 1263 0010 FB70     	 strb r3,[r7,#3]
 1264 0012 0B46     	 mov r3,r1
 1265 0014 BB70     	 strb r3,[r7,#2]
 1266 0016 1346     	 mov r3,r2
 1267 0018 7B70     	 strb r3,[r7,#1]
 519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
 523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(even
 524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid channel for modulation", 
 525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel));
 526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Modulation Mode", 
 527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT) ||\
 528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)));
 529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1268              	 .loc 2 530 0
 1269 001a 7B68     	 ldr r3,[r7,#4]
 1270 001c 5B68     	 ldr r3,[r3,#4]
 1271 001e BB60     	 str r3,[r7,#8]
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the modulation function */
 533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_MOS_Msk);
 1272              	 .loc 2 533 0
 1273 0020 BB68     	 ldr r3,[r7,#8]
 1274 0022 23F44023 	 bic r3,r3,#786432
 1275 0026 BB60     	 str r3,[r7,#8]
 534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_MOS_Pos;
 1276              	 .loc 2 534 0
 1277 0028 FB78     	 ldrb r3,[r7,#3]
 1278 002a 9B04     	 lsls r3,r3,#18
 1279 002c BA68     	 ldr r2,[r7,#8]
 1280 002e 1343     	 orrs r3,r3,r2
 1281 0030 BB60     	 str r3,[r7,#8]
 535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1282              	 .loc 2 536 0
 1283 0032 7B68     	 ldr r3,[r7,#4]
 1284 0034 5A68     	 ldr r2,[r3,#4]
 1285 0036 0021     	 movs r1,#0
 1286 0038 BA68     	 ldr r2,[r7,#8]
 1287 003a 0A43     	 orrs r2,r2,r1
 1288 003c 5A60     	 str r2,[r3,#4]
 537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 1289              	 .loc 2 538 0
 1290 003e 7B68     	 ldr r3,[r7,#4]
 1291 0040 5B69     	 ldr r3,[r3,#20]
 1292 0042 FB60     	 str r3,[r7,#12]
 539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Next, Modulation mode */
 541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)
 1293              	 .loc 2 541 0
 1294 0044 BB78     	 ldrb r3,[r7,#2]
 1295 0046 012B     	 cmp r3,#1
 1296 0048 04D1     	 bne .L39
 542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMT_Msk;
 1297              	 .loc 2 543 0
 1298 004a FB68     	 ldr r3,[r7,#12]
 1299 004c 43F08073 	 orr r3,r3,#16777216
 1300 0050 FB60     	 str r3,[r7,#12]
 1301 0052 03E0     	 b .L40
 1302              	.L39:
 544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMT_Msk);
 1303              	 .loc 2 547 0
 1304 0054 FB68     	 ldr r3,[r7,#12]
 1305 0056 23F08073 	 bic r3,r3,#16777216
 1306 005a FB60     	 str r3,[r7,#12]
 1307              	.L40:
 548:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 549:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 550:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Synchronization of modulation effect with PWM cycle */
 551:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1308              	 .loc 2 551 0
 1309 005c 3B7E     	 ldrb r3,[r7,#24]
 1310 005e 002B     	 cmp r3,#0
 1311 0060 04D0     	 beq .L41
 552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 553:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMS_Msk;
 1312              	 .loc 2 553 0
 1313 0062 FB68     	 ldr r3,[r7,#12]
 1314 0064 43F40003 	 orr r3,r3,#8388608
 1315 0068 FB60     	 str r3,[r7,#12]
 1316 006a 03E0     	 b .L42
 1317              	.L41:
 554:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 555:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 556:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 557:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMS_Msk);
 1318              	 .loc 2 557 0
 1319 006c FB68     	 ldr r3,[r7,#12]
 1320 006e 23F40003 	 bic r3,r3,#8388608
 1321 0072 FB60     	 str r3,[r7,#12]
 1322              	.L42:
 558:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 559:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   
 560:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure on which channel external modulation to be applied */
 561:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_EME_Msk);
 1323              	 .loc 2 561 0
 1324 0074 FB68     	 ldr r3,[r7,#12]
 1325 0076 23F0C053 	 bic r3,r3,#402653184
 1326 007a FB60     	 str r3,[r7,#12]
 562:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)channel << CCU8_CC8_TC_EME_Pos;
 1327              	 .loc 2 562 0
 1328 007c 7B78     	 ldrb r3,[r7,#1]
 1329 007e DB06     	 lsls r3,r3,#27
 1330 0080 FA68     	 ldr r2,[r7,#12]
 1331 0082 1343     	 orrs r3,r3,r2
 1332 0084 FB60     	 str r3,[r7,#12]
 563:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1333              	 .loc 2 564 0
 1334 0086 7B68     	 ldr r3,[r7,#4]
 1335 0088 5A69     	 ldr r2,[r3,#20]
 1336 008a 0021     	 movs r1,#0
 1337 008c FA68     	 ldr r2,[r7,#12]
 1338 008e 0A43     	 orrs r2,r2,r1
 1339 0090 5A61     	 str r2,[r3,#20]
 565:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1340              	 .loc 2 565 0
 1341 0092 1437     	 adds r7,r7,#20
 1342              	.LCFI108:
 1343              	 .cfi_def_cfa_offset 4
 1344 0094 BD46     	 mov sp,r7
 1345              	.LCFI109:
 1346              	 .cfi_def_cfa_register 13
 1347              	 
 1348 0096 5DF8047B 	 ldr r7,[sp],#4
 1349              	.LCFI110:
 1350              	 .cfi_restore 7
 1351              	 .cfi_def_cfa_offset 0
 1352 009a 7047     	 bx lr
 1353              	 .cfi_endproc
 1354              	.LFE241:
 1356              	 .section .text.XMC_CCU8_SLICE_CountConfig,"ax",%progbits
 1357              	 .align 2
 1358              	 .global XMC_CCU8_SLICE_CountConfig
 1359              	 .thumb
 1360              	 .thumb_func
 1362              	XMC_CCU8_SLICE_CountConfig:
 1363              	.LFB242:
 566:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 567:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice count function */
 568:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 569:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1364              	 .loc 2 569 0
 1365              	 .cfi_startproc
 1366              	 
 1367              	 
 1368              	 
 1369 0000 80B4     	 push {r7}
 1370              	.LCFI111:
 1371              	 .cfi_def_cfa_offset 4
 1372              	 .cfi_offset 7,-4
 1373 0002 85B0     	 sub sp,sp,#20
 1374              	.LCFI112:
 1375              	 .cfi_def_cfa_offset 24
 1376 0004 00AF     	 add r7,sp,#0
 1377              	.LCFI113:
 1378              	 .cfi_def_cfa_register 7
 1379 0006 7860     	 str r0,[r7,#4]
 1380 0008 0B46     	 mov r3,r1
 1381 000a FB70     	 strb r3,[r7,#3]
 570:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 571:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 572:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 573:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 574:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 575:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1382              	 .loc 2 575 0
 1383 000c 7B68     	 ldr r3,[r7,#4]
 1384 000e 5B68     	 ldr r3,[r3,#4]
 1385 0010 FB60     	 str r3,[r7,#12]
 576:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 577:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the count function */
 578:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CNTS_Msk);
 1386              	 .loc 2 578 0
 1387 0012 FB68     	 ldr r3,[r7,#12]
 1388 0014 23F44043 	 bic r3,r3,#49152
 1389 0018 FB60     	 str r3,[r7,#12]
 579:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CNTS_Pos;
 1390              	 .loc 2 579 0
 1391 001a FB78     	 ldrb r3,[r7,#3]
 1392 001c 9B03     	 lsls r3,r3,#14
 1393 001e FA68     	 ldr r2,[r7,#12]
 1394 0020 1343     	 orrs r3,r3,r2
 1395 0022 FB60     	 str r3,[r7,#12]
 580:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1396              	 .loc 2 581 0
 1397 0024 7B68     	 ldr r3,[r7,#4]
 1398 0026 5A68     	 ldr r2,[r3,#4]
 1399 0028 0021     	 movs r1,#0
 1400 002a FA68     	 ldr r2,[r7,#12]
 1401 002c 0A43     	 orrs r2,r2,r1
 1402 002e 5A60     	 str r2,[r3,#4]
 582:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1403              	 .loc 2 582 0
 1404 0030 1437     	 adds r7,r7,#20
 1405              	.LCFI114:
 1406              	 .cfi_def_cfa_offset 4
 1407 0032 BD46     	 mov sp,r7
 1408              	.LCFI115:
 1409              	 .cfi_def_cfa_register 13
 1410              	 
 1411 0034 5DF8047B 	 ldr r7,[sp],#4
 1412              	.LCFI116:
 1413              	 .cfi_restore 7
 1414              	 .cfi_def_cfa_offset 0
 1415 0038 7047     	 bx lr
 1416              	 .cfi_endproc
 1417              	.LFE242:
 1419 003a 00BF     	 .section .text.XMC_CCU8_SLICE_GateConfig,"ax",%progbits
 1420              	 .align 2
 1421              	 .global XMC_CCU8_SLICE_GateConfig
 1422              	 .thumb
 1423              	 .thumb_func
 1425              	XMC_CCU8_SLICE_GateConfig:
 1426              	.LFB243:
 583:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 584:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure slice gate function */
 585:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 586:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1427              	 .loc 2 586 0
 1428              	 .cfi_startproc
 1429              	 
 1430              	 
 1431              	 
 1432 0000 80B4     	 push {r7}
 1433              	.LCFI117:
 1434              	 .cfi_def_cfa_offset 4
 1435              	 .cfi_offset 7,-4
 1436 0002 85B0     	 sub sp,sp,#20
 1437              	.LCFI118:
 1438              	 .cfi_def_cfa_offset 24
 1439 0004 00AF     	 add r7,sp,#0
 1440              	.LCFI119:
 1441              	 .cfi_def_cfa_register 7
 1442 0006 7860     	 str r0,[r7,#4]
 1443 0008 0B46     	 mov r3,r1
 1444 000a FB70     	 strb r3,[r7,#3]
 587:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 588:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 591:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 592:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1445              	 .loc 2 592 0
 1446 000c 7B68     	 ldr r3,[r7,#4]
 1447 000e 5B68     	 ldr r3,[r3,#4]
 1448 0010 FB60     	 str r3,[r7,#12]
 593:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 594:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 595:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_GATES_Msk);
 1449              	 .loc 2 595 0
 1450 0012 FB68     	 ldr r3,[r7,#12]
 1451 0014 23F44073 	 bic r3,r3,#768
 1452 0018 FB60     	 str r3,[r7,#12]
 596:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_GATES_Pos;
 1453              	 .loc 2 596 0
 1454 001a FB78     	 ldrb r3,[r7,#3]
 1455 001c 1B02     	 lsls r3,r3,#8
 1456 001e FA68     	 ldr r2,[r7,#12]
 1457 0020 1343     	 orrs r3,r3,r2
 1458 0022 FB60     	 str r3,[r7,#12]
 597:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 598:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1459              	 .loc 2 598 0
 1460 0024 7B68     	 ldr r3,[r7,#4]
 1461 0026 5A68     	 ldr r2,[r3,#4]
 1462 0028 0021     	 movs r1,#0
 1463 002a FA68     	 ldr r2,[r7,#12]
 1464 002c 0A43     	 orrs r2,r2,r1
 1465 002e 5A60     	 str r2,[r3,#4]
 599:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1466              	 .loc 2 599 0
 1467 0030 1437     	 adds r7,r7,#20
 1468              	.LCFI120:
 1469              	 .cfi_def_cfa_offset 4
 1470 0032 BD46     	 mov sp,r7
 1471              	.LCFI121:
 1472              	 .cfi_def_cfa_register 13
 1473              	 
 1474 0034 5DF8047B 	 ldr r7,[sp],#4
 1475              	.LCFI122:
 1476              	 .cfi_restore 7
 1477              	 .cfi_def_cfa_offset 0
 1478 0038 7047     	 bx lr
 1479              	 .cfi_endproc
 1480              	.LFE243:
 1482 003a 00BF     	 .section .text.XMC_CCU8_SLICE_Capture0Config,"ax",%progbits
 1483              	 .align 2
 1484              	 .global XMC_CCU8_SLICE_Capture0Config
 1485              	 .thumb
 1486              	 .thumb_func
 1488              	XMC_CCU8_SLICE_Capture0Config:
 1489              	.LFB244:
 600:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 601:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-0 function */
 602:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 603:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1490              	 .loc 2 603 0
 1491              	 .cfi_startproc
 1492              	 
 1493              	 
 1494              	 
 1495 0000 80B4     	 push {r7}
 1496              	.LCFI123:
 1497              	 .cfi_def_cfa_offset 4
 1498              	 .cfi_offset 7,-4
 1499 0002 85B0     	 sub sp,sp,#20
 1500              	.LCFI124:
 1501              	 .cfi_def_cfa_offset 24
 1502 0004 00AF     	 add r7,sp,#0
 1503              	.LCFI125:
 1504              	 .cfi_def_cfa_register 7
 1505 0006 7860     	 str r0,[r7,#4]
 1506 0008 0B46     	 mov r3,r1
 1507 000a FB70     	 strb r3,[r7,#3]
 604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 606:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 607:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 608:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 609:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1508              	 .loc 2 609 0
 1509 000c 7B68     	 ldr r3,[r7,#4]
 1510 000e 5B68     	 ldr r3,[r3,#4]
 1511 0010 FB60     	 str r3,[r7,#12]
 610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 611:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 612:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP0S_Msk);
 1512              	 .loc 2 612 0
 1513 0012 FB68     	 ldr r3,[r7,#12]
 1514 0014 23F03003 	 bic r3,r3,#48
 1515 0018 FB60     	 str r3,[r7,#12]
 613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP0S_Pos;
 1516              	 .loc 2 613 0
 1517 001a FB78     	 ldrb r3,[r7,#3]
 1518 001c 1B01     	 lsls r3,r3,#4
 1519 001e FA68     	 ldr r2,[r7,#12]
 1520 0020 1343     	 orrs r3,r3,r2
 1521 0022 FB60     	 str r3,[r7,#12]
 614:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 615:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1522              	 .loc 2 615 0
 1523 0024 7B68     	 ldr r3,[r7,#4]
 1524 0026 5A68     	 ldr r2,[r3,#4]
 1525 0028 0021     	 movs r1,#0
 1526 002a FA68     	 ldr r2,[r7,#12]
 1527 002c 0A43     	 orrs r2,r2,r1
 1528 002e 5A60     	 str r2,[r3,#4]
 616:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1529              	 .loc 2 616 0
 1530 0030 1437     	 adds r7,r7,#20
 1531              	.LCFI126:
 1532              	 .cfi_def_cfa_offset 4
 1533 0032 BD46     	 mov sp,r7
 1534              	.LCFI127:
 1535              	 .cfi_def_cfa_register 13
 1536              	 
 1537 0034 5DF8047B 	 ldr r7,[sp],#4
 1538              	.LCFI128:
 1539              	 .cfi_restore 7
 1540              	 .cfi_def_cfa_offset 0
 1541 0038 7047     	 bx lr
 1542              	 .cfi_endproc
 1543              	.LFE244:
 1545 003a 00BF     	 .section .text.XMC_CCU8_SLICE_Capture1Config,"ax",%progbits
 1546              	 .align 2
 1547              	 .global XMC_CCU8_SLICE_Capture1Config
 1548              	 .thumb
 1549              	 .thumb_func
 1551              	XMC_CCU8_SLICE_Capture1Config:
 1552              	.LFB245:
 617:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 618:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-1 function */
 619:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 620:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1553              	 .loc 2 620 0
 1554              	 .cfi_startproc
 1555              	 
 1556              	 
 1557              	 
 1558 0000 80B4     	 push {r7}
 1559              	.LCFI129:
 1560              	 .cfi_def_cfa_offset 4
 1561              	 .cfi_offset 7,-4
 1562 0002 85B0     	 sub sp,sp,#20
 1563              	.LCFI130:
 1564              	 .cfi_def_cfa_offset 24
 1565 0004 00AF     	 add r7,sp,#0
 1566              	.LCFI131:
 1567              	 .cfi_def_cfa_register 7
 1568 0006 7860     	 str r0,[r7,#4]
 1569 0008 0B46     	 mov r3,r1
 1570 000a FB70     	 strb r3,[r7,#3]
 621:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 622:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 623:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 624:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 625:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 626:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 627:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1571              	 .loc 2 627 0
 1572 000c 7B68     	 ldr r3,[r7,#4]
 1573 000e 5B68     	 ldr r3,[r3,#4]
 1574 0010 FB60     	 str r3,[r7,#12]
 628:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 629:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 630:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP1S_Msk);
 1575              	 .loc 2 630 0
 1576 0012 FB68     	 ldr r3,[r7,#12]
 1577 0014 23F0C003 	 bic r3,r3,#192
 1578 0018 FB60     	 str r3,[r7,#12]
 631:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP1S_Pos;
 1579              	 .loc 2 631 0
 1580 001a FB78     	 ldrb r3,[r7,#3]
 1581 001c 9B01     	 lsls r3,r3,#6
 1582 001e FA68     	 ldr r2,[r7,#12]
 1583 0020 1343     	 orrs r3,r3,r2
 1584 0022 FB60     	 str r3,[r7,#12]
 632:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 633:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1585              	 .loc 2 633 0
 1586 0024 7B68     	 ldr r3,[r7,#4]
 1587 0026 5A68     	 ldr r2,[r3,#4]
 1588 0028 0021     	 movs r1,#0
 1589 002a FA68     	 ldr r2,[r7,#12]
 1590 002c 0A43     	 orrs r2,r2,r1
 1591 002e 5A60     	 str r2,[r3,#4]
 634:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1592              	 .loc 2 634 0
 1593 0030 1437     	 adds r7,r7,#20
 1594              	.LCFI132:
 1595              	 .cfi_def_cfa_offset 4
 1596 0032 BD46     	 mov sp,r7
 1597              	.LCFI133:
 1598              	 .cfi_def_cfa_register 13
 1599              	 
 1600 0034 5DF8047B 	 ldr r7,[sp],#4
 1601              	.LCFI134:
 1602              	 .cfi_restore 7
 1603              	 .cfi_def_cfa_offset 0
 1604 0038 7047     	 bx lr
 1605              	 .cfi_endproc
 1606              	.LFE245:
 1608 003a 00BF     	 .section .text.XMC_CCU8_SLICE_DirectionConfig,"ax",%progbits
 1609              	 .align 2
 1610              	 .global XMC_CCU8_SLICE_DirectionConfig
 1611              	 .thumb
 1612              	 .thumb_func
 1614              	XMC_CCU8_SLICE_DirectionConfig:
 1615              	.LFB246:
 635:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 636:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure direction function */
 637:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
 638:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1616              	 .loc 2 638 0
 1617              	 .cfi_startproc
 1618              	 
 1619              	 
 1620              	 
 1621 0000 80B4     	 push {r7}
 1622              	.LCFI135:
 1623              	 .cfi_def_cfa_offset 4
 1624              	 .cfi_offset 7,-4
 1625 0002 85B0     	 sub sp,sp,#20
 1626              	.LCFI136:
 1627              	 .cfi_def_cfa_offset 24
 1628 0004 00AF     	 add r7,sp,#0
 1629              	.LCFI137:
 1630              	 .cfi_def_cfa_register 7
 1631 0006 7860     	 str r0,[r7,#4]
 1632 0008 0B46     	 mov r3,r1
 1633 000a FB70     	 strb r3,[r7,#3]
 639:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 640:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 641:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 642:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event
 643:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 644:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1634              	 .loc 2 644 0
 1635 000c 7B68     	 ldr r3,[r7,#4]
 1636 000e 5B68     	 ldr r3,[r3,#4]
 1637 0010 FB60     	 str r3,[r7,#12]
 645:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 646:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the direction function */
 647:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_UDS_Msk);
 1638              	 .loc 2 647 0
 1639 0012 FB68     	 ldr r3,[r7,#12]
 1640 0014 23F44063 	 bic r3,r3,#3072
 1641 0018 FB60     	 str r3,[r7,#12]
 648:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_UDS_Pos;
 1642              	 .loc 2 648 0
 1643 001a FB78     	 ldrb r3,[r7,#3]
 1644 001c 9B02     	 lsls r3,r3,#10
 1645 001e FA68     	 ldr r2,[r7,#12]
 1646 0020 1343     	 orrs r3,r3,r2
 1647 0022 FB60     	 str r3,[r7,#12]
 649:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 650:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1648              	 .loc 2 650 0
 1649 0024 7B68     	 ldr r3,[r7,#4]
 1650 0026 5A68     	 ldr r2,[r3,#4]
 1651 0028 0021     	 movs r1,#0
 1652 002a FA68     	 ldr r2,[r7,#12]
 1653 002c 0A43     	 orrs r2,r2,r1
 1654 002e 5A60     	 str r2,[r3,#4]
 651:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1655              	 .loc 2 651 0
 1656 0030 1437     	 adds r7,r7,#20
 1657              	.LCFI138:
 1658              	 .cfi_def_cfa_offset 4
 1659 0032 BD46     	 mov sp,r7
 1660              	.LCFI139:
 1661              	 .cfi_def_cfa_register 13
 1662              	 
 1663 0034 5DF8047B 	 ldr r7,[sp],#4
 1664              	.LCFI140:
 1665              	 .cfi_restore 7
 1666              	 .cfi_def_cfa_offset 0
 1667 0038 7047     	 bx lr
 1668              	 .cfi_endproc
 1669              	.LFE246:
 1671 003a 00BF     	 .section .text.XMC_CCU8_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1672              	 .align 2
 1673              	 .global XMC_CCU8_SLICE_StatusBitOverrideConfig
 1674              	 .thumb
 1675              	 .thumb_func
 1677              	XMC_CCU8_SLICE_StatusBitOverrideConfig:
 1678              	.LFB247:
 652:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 653:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure slice status bit override function */
 654:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice)
 655:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1679              	 .loc 2 655 0
 1680              	 .cfi_startproc
 1681              	 
 1682              	 
 1683              	 
 1684 0000 80B4     	 push {r7}
 1685              	.LCFI141:
 1686              	 .cfi_def_cfa_offset 4
 1687              	 .cfi_offset 7,-4
 1688 0002 85B0     	 sub sp,sp,#20
 1689              	.LCFI142:
 1690              	 .cfi_def_cfa_offset 24
 1691 0004 00AF     	 add r7,sp,#0
 1692              	.LCFI143:
 1693              	 .cfi_def_cfa_register 7
 1694 0006 7860     	 str r0,[r7,#4]
 656:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 657:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 658:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 659:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 660:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1695              	 .loc 2 660 0
 1696 0008 7B68     	 ldr r3,[r7,#4]
 1697 000a 5B68     	 ldr r3,[r3,#4]
 1698 000c FB60     	 str r3,[r7,#12]
 661:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 662:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Map status bit trigger override to Event 1 &
 663:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****          status bit value override to Event 2 */
 664:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_OFS_Msk);
 1699              	 .loc 2 664 0
 1700 000e FB68     	 ldr r3,[r7,#12]
 1701 0010 23F48033 	 bic r3,r3,#65536
 1702 0014 FB60     	 str r3,[r7,#12]
 665:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_OFS_Pos;
 1703              	 .loc 2 665 0
 1704 0016 FB68     	 ldr r3,[r7,#12]
 1705 0018 43F48033 	 orr r3,r3,#65536
 1706 001c FB60     	 str r3,[r7,#12]
 666:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 667:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1707              	 .loc 2 667 0
 1708 001e 7B68     	 ldr r3,[r7,#4]
 1709 0020 5A68     	 ldr r2,[r3,#4]
 1710 0022 0021     	 movs r1,#0
 1711 0024 FA68     	 ldr r2,[r7,#12]
 1712 0026 0A43     	 orrs r2,r2,r1
 1713 0028 5A60     	 str r2,[r3,#4]
 668:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1714              	 .loc 2 668 0
 1715 002a 1437     	 adds r7,r7,#20
 1716              	.LCFI144:
 1717              	 .cfi_def_cfa_offset 4
 1718 002c BD46     	 mov sp,r7
 1719              	.LCFI145:
 1720              	 .cfi_def_cfa_register 13
 1721              	 
 1722 002e 5DF8047B 	 ldr r7,[sp],#4
 1723              	.LCFI146:
 1724              	 .cfi_restore 7
 1725              	 .cfi_def_cfa_offset 0
 1726 0032 7047     	 bx lr
 1727              	 .cfi_endproc
 1728              	.LFE247:
 1730              	 .section .text.XMC_CCU8_SLICE_TrapConfig,"ax",%progbits
 1731              	 .align 2
 1732              	 .global XMC_CCU8_SLICE_TrapConfig
 1733              	 .thumb
 1734              	 .thumb_func
 1736              	XMC_CCU8_SLICE_TrapConfig:
 1737              	.LFB248:
 669:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 670:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure trap function*/
 671:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
 672:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
 673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                const bool synch_with_pwm)
 674:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1738              	 .loc 2 674 0
 1739              	 .cfi_startproc
 1740              	 
 1741              	 
 1742              	 
 1743 0000 80B4     	 push {r7}
 1744              	.LCFI147:
 1745              	 .cfi_def_cfa_offset 4
 1746              	 .cfi_offset 7,-4
 1747 0002 85B0     	 sub sp,sp,#20
 1748              	.LCFI148:
 1749              	 .cfi_def_cfa_offset 24
 1750 0004 00AF     	 add r7,sp,#0
 1751              	.LCFI149:
 1752              	 .cfi_def_cfa_register 7
 1753 0006 7860     	 str r0,[r7,#4]
 1754 0008 0B46     	 mov r3,r1
 1755 000a FB70     	 strb r3,[r7,#3]
 1756 000c 1346     	 mov r3,r2
 1757 000e BB70     	 strb r3,[r7,#2]
 675:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 676:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 677:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 678:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 679:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 680:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                                              (exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 681:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 682:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1758              	 .loc 2 682 0
 1759 0010 7B68     	 ldr r3,[r7,#4]
 1760 0012 5B68     	 ldr r3,[r3,#4]
 1761 0014 BB60     	 str r3,[r7,#8]
 683:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 684:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Map trap function to Event 2 */
 685:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_TS_Msk);
 1762              	 .loc 2 685 0
 1763 0016 BB68     	 ldr r3,[r7,#8]
 1764 0018 23F40033 	 bic r3,r3,#131072
 1765 001c BB60     	 str r3,[r7,#8]
 686:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_TS_Pos;
 1766              	 .loc 2 686 0
 1767 001e BB68     	 ldr r3,[r7,#8]
 1768 0020 43F40033 	 orr r3,r3,#131072
 1769 0024 BB60     	 str r3,[r7,#8]
 687:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 688:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1770              	 .loc 2 688 0
 1771 0026 7B68     	 ldr r3,[r7,#4]
 1772 0028 5A68     	 ldr r2,[r3,#4]
 1773 002a 0021     	 movs r1,#0
 1774 002c BA68     	 ldr r2,[r7,#8]
 1775 002e 0A43     	 orrs r2,r2,r1
 1776 0030 5A60     	 str r2,[r3,#4]
 689:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 690:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1777              	 .loc 2 690 0
 1778 0032 7B68     	 ldr r3,[r7,#4]
 1779 0034 5B69     	 ldr r3,[r3,#20]
 1780 0036 FB60     	 str r3,[r7,#12]
 691:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 692:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure synchronization option */
 693:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1781              	 .loc 2 693 0
 1782 0038 BB78     	 ldrb r3,[r7,#2]
 1783 003a 002B     	 cmp r3,#0
 1784 003c 04D0     	 beq .L50
 694:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 695:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSE_Msk;
 1785              	 .loc 2 695 0
 1786 003e FB68     	 ldr r3,[r7,#12]
 1787 0040 43F40013 	 orr r3,r3,#2097152
 1788 0044 FB60     	 str r3,[r7,#12]
 1789 0046 03E0     	 b .L51
 1790              	.L50:
 696:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 697:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 699:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSE_Msk);
 1791              	 .loc 2 699 0
 1792 0048 FB68     	 ldr r3,[r7,#12]
 1793 004a 23F40013 	 bic r3,r3,#2097152
 1794 004e FB60     	 str r3,[r7,#12]
 1795              	.L51:
 700:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 701:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 702:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure exit mode */
 703:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(exit_mode == XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW)
 1796              	 .loc 2 703 0
 1797 0050 FB78     	 ldrb r3,[r7,#3]
 1798 0052 012B     	 cmp r3,#1
 1799 0054 04D1     	 bne .L52
 704:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 705:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSW_Msk;
 1800              	 .loc 2 705 0
 1801 0056 FB68     	 ldr r3,[r7,#12]
 1802 0058 43F48003 	 orr r3,r3,#4194304
 1803 005c FB60     	 str r3,[r7,#12]
 1804 005e 03E0     	 b .L53
 1805              	.L52:
 706:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 707:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 708:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 709:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSW_Msk);
 1806              	 .loc 2 709 0
 1807 0060 FB68     	 ldr r3,[r7,#12]
 1808 0062 23F48003 	 bic r3,r3,#4194304
 1809 0066 FB60     	 str r3,[r7,#12]
 1810              	.L53:
 710:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 711:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 712:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1811              	 .loc 2 712 0
 1812 0068 7B68     	 ldr r3,[r7,#4]
 1813 006a 5A69     	 ldr r2,[r3,#20]
 1814 006c 0021     	 movs r1,#0
 1815 006e FA68     	 ldr r2,[r7,#12]
 1816 0070 0A43     	 orrs r2,r2,r1
 1817 0072 5A61     	 str r2,[r3,#20]
 713:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1818              	 .loc 2 713 0
 1819 0074 1437     	 adds r7,r7,#20
 1820              	.LCFI150:
 1821              	 .cfi_def_cfa_offset 4
 1822 0076 BD46     	 mov sp,r7
 1823              	.LCFI151:
 1824              	 .cfi_def_cfa_register 13
 1825              	 
 1826 0078 5DF8047B 	 ldr r7,[sp],#4
 1827              	.LCFI152:
 1828              	 .cfi_restore 7
 1829              	 .cfi_def_cfa_offset 0
 1830 007c 7047     	 bx lr
 1831              	 .cfi_endproc
 1832              	.LFE248:
 1834 007e 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1835              	 .align 2
 1836              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 1837              	 .thumb
 1838              	 .thumb_func
 1840              	XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:
 1841              	.LFB249:
 714:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 715:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice Status Bit Override event */
 716:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
 717:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
 718:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
 719:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1842              	 .loc 2 719 0
 1843              	 .cfi_startproc
 1844              	 
 1845              	 
 1846              	 
 1847 0000 80B4     	 push {r7}
 1848              	.LCFI153:
 1849              	 .cfi_def_cfa_offset 4
 1850              	 .cfi_offset 7,-4
 1851 0002 87B0     	 sub sp,sp,#28
 1852              	.LCFI154:
 1853              	 .cfi_def_cfa_offset 32
 1854 0004 00AF     	 add r7,sp,#0
 1855              	.LCFI155:
 1856              	 .cfi_def_cfa_register 7
 1857 0006 F860     	 str r0,[r7,#12]
 1858 0008 B960     	 str r1,[r7,#8]
 1859 000a 7A60     	 str r2,[r7,#4]
 720:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 721:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 722:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU8_IsVal
 723:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 724:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****          XMC_CCU8_SLICE_IsInputvalid(ev1_config->mapped_input));
 725:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity", 
 726:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 727:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity", 
 728:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 729:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 730:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 731:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 732:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 733:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****           XMC_CCU8_SLICE_IsInputvalid(ev2_config->mapped_input));
 734:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 735:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 736:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 737:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 738:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 739:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 740:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 741:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 742:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 743:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 744:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 745:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 746:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV1EM_Pos);
 747:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS2_EV1EM_Pos;
 748:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 749:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 750:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV2EM_Pos);
 751:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS2_EV2EM_Pos;
 752:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 753:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 754:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV1LM_Pos);
 755:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS2_EV1LM_Pos;
 756:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 757:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 758:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV2LM_Pos);
 759:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS2_EV2LM_Pos;
 760:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 761:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 762:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF1M_Pos);
 763:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS2_LPF1M_Pos;
 764:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 765:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 766:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF2M_Pos);
 767:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS2_LPF2M_Pos;
 768:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   
 769:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins; 
 770:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 771:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 772:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 773:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV1IS_Pos);
 774:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS1_EV1IS_Pos;
 775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 776:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 777:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV2IS_Pos);
 778:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS1_EV2IS_Pos;
 779:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 780:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;  
 781:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #else
 782:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1860              	 .loc 2 782 0
 1861 000c FB68     	 ldr r3,[r7,#12]
 1862 000e 1B68     	 ldr r3,[r3]
 1863 0010 7B61     	 str r3,[r7,#20]
 783:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 784:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 785:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV1EM_Pos);
 1864              	 .loc 2 785 0
 1865 0012 7B69     	 ldr r3,[r7,#20]
 1866 0014 23F44023 	 bic r3,r3,#786432
 1867 0018 7B61     	 str r3,[r7,#20]
 786:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS_EV1EM_Pos;
 1868              	 .loc 2 786 0
 1869 001a BB68     	 ldr r3,[r7,#8]
 1870 001c 5B78     	 ldrb r3,[r3,#1]
 1871 001e 9B04     	 lsls r3,r3,#18
 1872 0020 7A69     	 ldr r2,[r7,#20]
 1873 0022 1343     	 orrs r3,r3,r2
 1874 0024 7B61     	 str r3,[r7,#20]
 787:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 788:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 789:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV2EM_Pos);
 1875              	 .loc 2 789 0
 1876 0026 7B69     	 ldr r3,[r7,#20]
 1877 0028 23F44013 	 bic r3,r3,#3145728
 1878 002c 7B61     	 str r3,[r7,#20]
 790:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS_EV2EM_Pos;
 1879              	 .loc 2 790 0
 1880 002e 7B68     	 ldr r3,[r7,#4]
 1881 0030 5B78     	 ldrb r3,[r3,#1]
 1882 0032 1B05     	 lsls r3,r3,#20
 1883 0034 7A69     	 ldr r2,[r7,#20]
 1884 0036 1343     	 orrs r3,r3,r2
 1885 0038 7B61     	 str r3,[r7,#20]
 791:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 792:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 793:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV1LM_Pos);
 1886              	 .loc 2 793 0
 1887 003a 7B69     	 ldr r3,[r7,#20]
 1888 003c 23F40003 	 bic r3,r3,#8388608
 1889 0040 7B61     	 str r3,[r7,#20]
 794:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS_EV1LM_Pos;
 1890              	 .loc 2 794 0
 1891 0042 BB68     	 ldr r3,[r7,#8]
 1892 0044 9B78     	 ldrb r3,[r3,#2]
 1893 0046 DB05     	 lsls r3,r3,#23
 1894 0048 7A69     	 ldr r2,[r7,#20]
 1895 004a 1343     	 orrs r3,r3,r2
 1896 004c 7B61     	 str r3,[r7,#20]
 795:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 796:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 797:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV2LM_Pos);
 1897              	 .loc 2 797 0
 1898 004e 7B69     	 ldr r3,[r7,#20]
 1899 0050 23F08073 	 bic r3,r3,#16777216
 1900 0054 7B61     	 str r3,[r7,#20]
 798:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS_EV2LM_Pos;
 1901              	 .loc 2 798 0
 1902 0056 7B68     	 ldr r3,[r7,#4]
 1903 0058 9B78     	 ldrb r3,[r3,#2]
 1904 005a 1B06     	 lsls r3,r3,#24
 1905 005c 7A69     	 ldr r2,[r7,#20]
 1906 005e 1343     	 orrs r3,r3,r2
 1907 0060 7B61     	 str r3,[r7,#20]
 799:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 800:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 801:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF1M_Pos);
 1908              	 .loc 2 801 0
 1909 0062 7B69     	 ldr r3,[r7,#20]
 1910 0064 23F0C053 	 bic r3,r3,#402653184
 1911 0068 7B61     	 str r3,[r7,#20]
 802:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS_LPF1M_Pos;
 1912              	 .loc 2 802 0
 1913 006a BB68     	 ldr r3,[r7,#8]
 1914 006c DB78     	 ldrb r3,[r3,#3]
 1915 006e DB06     	 lsls r3,r3,#27
 1916 0070 7A69     	 ldr r2,[r7,#20]
 1917 0072 1343     	 orrs r3,r3,r2
 1918 0074 7B61     	 str r3,[r7,#20]
 803:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 804:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 805:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF2M_Pos);
 1919              	 .loc 2 805 0
 1920 0076 7B69     	 ldr r3,[r7,#20]
 1921 0078 23F0C043 	 bic r3,r3,#1610612736
 1922 007c 7B61     	 str r3,[r7,#20]
 806:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS_LPF2M_Pos;
 1923              	 .loc 2 806 0
 1924 007e 7B68     	 ldr r3,[r7,#4]
 1925 0080 DB78     	 ldrb r3,[r3,#3]
 1926 0082 5B07     	 lsls r3,r3,#29
 1927 0084 7A69     	 ldr r2,[r7,#20]
 1928 0086 1343     	 orrs r3,r3,r2
 1929 0088 7B61     	 str r3,[r7,#20]
 807:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 808:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 809:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV1IS_Pos);
 1930              	 .loc 2 809 0
 1931 008a 7B69     	 ldr r3,[r7,#20]
 1932 008c 23F0F003 	 bic r3,r3,#240
 1933 0090 7B61     	 str r3,[r7,#20]
 810:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS_EV1IS_Pos;
 1934              	 .loc 2 810 0
 1935 0092 BB68     	 ldr r3,[r7,#8]
 1936 0094 1B78     	 ldrb r3,[r3]
 1937 0096 1B01     	 lsls r3,r3,#4
 1938 0098 7A69     	 ldr r2,[r7,#20]
 1939 009a 1343     	 orrs r3,r3,r2
 1940 009c 7B61     	 str r3,[r7,#20]
 811:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 812:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 813:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV2IS_Pos);
 1941              	 .loc 2 813 0
 1942 009e 7B69     	 ldr r3,[r7,#20]
 1943 00a0 23F47063 	 bic r3,r3,#3840
 1944 00a4 7B61     	 str r3,[r7,#20]
 814:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS_EV2IS_Pos;
 1945              	 .loc 2 814 0
 1946 00a6 7B68     	 ldr r3,[r7,#4]
 1947 00a8 1B78     	 ldrb r3,[r3]
 1948 00aa 1B02     	 lsls r3,r3,#8
 1949 00ac 7A69     	 ldr r2,[r7,#20]
 1950 00ae 1343     	 orrs r3,r3,r2
 1951 00b0 7B61     	 str r3,[r7,#20]
 815:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 816:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1952              	 .loc 2 816 0
 1953 00b2 FB68     	 ldr r3,[r7,#12]
 1954 00b4 1A68     	 ldr r2,[r3]
 1955 00b6 0021     	 movs r1,#0
 1956 00b8 7A69     	 ldr r2,[r7,#20]
 1957 00ba 0A43     	 orrs r2,r2,r1
 1958 00bc 1A60     	 str r2,[r3]
 817:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 818:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 1959              	 .loc 2 818 0
 1960 00be 1C37     	 adds r7,r7,#28
 1961              	.LCFI156:
 1962              	 .cfi_def_cfa_offset 4
 1963 00c0 BD46     	 mov sp,r7
 1964              	.LCFI157:
 1965              	 .cfi_def_cfa_register 13
 1966              	 
 1967 00c2 5DF8047B 	 ldr r7,[sp],#4
 1968              	.LCFI158:
 1969              	 .cfi_restore 7
 1970              	 .cfi_def_cfa_offset 0
 1971 00c6 7047     	 bx lr
 1972              	 .cfi_endproc
 1973              	.LFE249:
 1975              	 .section .text.XMC_CCU8_SLICE_ConfigureEvent,"ax",%progbits
 1976              	 .align 2
 1977              	 .global XMC_CCU8_SLICE_ConfigureEvent
 1978              	 .thumb
 1979              	 .thumb_func
 1981              	XMC_CCU8_SLICE_ConfigureEvent:
 1982              	.LFB250:
 819:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 820:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice trigger event */
 821:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
 822:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_t event,
 823:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *const config)
 824:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 1983              	 .loc 2 824 0
 1984              	 .cfi_startproc
 1985              	 
 1986              	 
 1987              	 
 1988 0000 80B4     	 push {r7}
 1989              	.LCFI159:
 1990              	 .cfi_def_cfa_offset 4
 1991              	 .cfi_offset 7,-4
 1992 0002 89B0     	 sub sp,sp,#36
 1993              	.LCFI160:
 1994              	 .cfi_def_cfa_offset 40
 1995 0004 00AF     	 add r7,sp,#0
 1996              	.LCFI161:
 1997              	 .cfi_def_cfa_register 7
 1998 0006 F860     	 str r0,[r7,#12]
 1999 0008 0B46     	 mov r3,r1
 2000 000a 7A60     	 str r2,[r7,#4]
 2001 000c FB72     	 strb r3,[r7,#11]
 825:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 826:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 827:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 828:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 829:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 830:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 831:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Input",  XMC_CCU8_SLICE_IsInputvalid(config->ma
 832:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 833:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 834:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Level Sensitivity", 
 835:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 836:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 837:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Debounce Period",
 838:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(config->duration));
 839:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 840:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 841:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 2002              	 .loc 2 841 0
 2003 000e FB7A     	 ldrb r3,[r7,#11]
 2004 0010 013B     	 subs r3,r3,#1
 2005 0012 FB77     	 strb r3,[r7,#31]
 842:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 843:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 844:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 845:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 846:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 847:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 848:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 849:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 850:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 851:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 852:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 853:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 854:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 855:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 856:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 857:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 858:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 859:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 860:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 861:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins;
 862:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 863:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 864:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 865:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 866:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 867:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 868:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 869:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 870:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 871:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 872:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #else
 873:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 2006              	 .loc 2 873 0
 2007 0014 FB68     	 ldr r3,[r7,#12]
 2008 0016 1B68     	 ldr r3,[r3]
 2009 0018 BB61     	 str r3,[r7,#24]
 874:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 875:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 876:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 2010              	 .loc 2 876 0
 2011 001a FB7F     	 ldrb r3,[r7,#31]
 2012 001c 5B00     	 lsls r3,r3,#1
 2013 001e DBB2     	 uxtb r3,r3
 2014 0020 1033     	 adds r3,r3,#16
 2015 0022 FB75     	 strb r3,[r7,#23]
 877:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 2016              	 .loc 2 877 0
 2017 0024 FB7D     	 ldrb r3,[r7,#23]
 2018 0026 0322     	 movs r2,#3
 2019 0028 02FA03F3 	 lsl r3,r2,r3
 2020 002c DB43     	 mvns r3,r3
 2021 002e BA69     	 ldr r2,[r7,#24]
 2022 0030 1340     	 ands r3,r3,r2
 2023 0032 BB61     	 str r3,[r7,#24]
 878:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 2024              	 .loc 2 878 0
 2025 0034 7B68     	 ldr r3,[r7,#4]
 2026 0036 5B78     	 ldrb r3,[r3,#1]
 2027 0038 1A46     	 mov r2,r3
 2028 003a FB7D     	 ldrb r3,[r7,#23]
 2029 003c 02FA03F3 	 lsl r3,r2,r3
 2030 0040 BA69     	 ldr r2,[r7,#24]
 2031 0042 1343     	 orrs r3,r3,r2
 2032 0044 BB61     	 str r3,[r7,#24]
 879:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 880:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 881:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0LM_Pos) + offset;
 2033              	 .loc 2 881 0
 2034 0046 FB7F     	 ldrb r3,[r7,#31]
 2035 0048 1633     	 adds r3,r3,#22
 2036 004a FB75     	 strb r3,[r7,#23]
 882:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 2037              	 .loc 2 882 0
 2038 004c FB7D     	 ldrb r3,[r7,#23]
 2039 004e 0122     	 movs r2,#1
 2040 0050 02FA03F3 	 lsl r3,r2,r3
 2041 0054 DB43     	 mvns r3,r3
 2042 0056 BA69     	 ldr r2,[r7,#24]
 2043 0058 1340     	 ands r3,r3,r2
 2044 005a BB61     	 str r3,[r7,#24]
 883:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 2045              	 .loc 2 883 0
 2046 005c 7B68     	 ldr r3,[r7,#4]
 2047 005e 9B78     	 ldrb r3,[r3,#2]
 2048 0060 1A46     	 mov r2,r3
 2049 0062 FB7D     	 ldrb r3,[r7,#23]
 2050 0064 02FA03F3 	 lsl r3,r2,r3
 2051 0068 BA69     	 ldr r2,[r7,#24]
 2052 006a 1343     	 orrs r3,r3,r2
 2053 006c BB61     	 str r3,[r7,#24]
 884:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 885:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 886:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 2054              	 .loc 2 886 0
 2055 006e FB7F     	 ldrb r3,[r7,#31]
 2056 0070 5B00     	 lsls r3,r3,#1
 2057 0072 DBB2     	 uxtb r3,r3
 2058 0074 1933     	 adds r3,r3,#25
 2059 0076 FB75     	 strb r3,[r7,#23]
 887:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 2060              	 .loc 2 887 0
 2061 0078 FB7D     	 ldrb r3,[r7,#23]
 2062 007a 0322     	 movs r2,#3
 2063 007c 02FA03F3 	 lsl r3,r2,r3
 2064 0080 DB43     	 mvns r3,r3
 2065 0082 BA69     	 ldr r2,[r7,#24]
 2066 0084 1340     	 ands r3,r3,r2
 2067 0086 BB61     	 str r3,[r7,#24]
 888:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 2068              	 .loc 2 888 0
 2069 0088 7B68     	 ldr r3,[r7,#4]
 2070 008a DB78     	 ldrb r3,[r3,#3]
 2071 008c 1A46     	 mov r2,r3
 2072 008e FB7D     	 ldrb r3,[r7,#23]
 2073 0090 02FA03F3 	 lsl r3,r2,r3
 2074 0094 BA69     	 ldr r2,[r7,#24]
 2075 0096 1343     	 orrs r3,r3,r2
 2076 0098 BB61     	 str r3,[r7,#24]
 889:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 890:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 891:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 2077              	 .loc 2 891 0
 2078 009a FB7F     	 ldrb r3,[r7,#31]
 2079 009c 9B00     	 lsls r3,r3,#2
 2080 009e FB75     	 strb r3,[r7,#23]
 892:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 2081              	 .loc 2 892 0
 2082 00a0 FB7D     	 ldrb r3,[r7,#23]
 2083 00a2 0F22     	 movs r2,#15
 2084 00a4 02FA03F3 	 lsl r3,r2,r3
 2085 00a8 DB43     	 mvns r3,r3
 2086 00aa BA69     	 ldr r2,[r7,#24]
 2087 00ac 1340     	 ands r3,r3,r2
 2088 00ae BB61     	 str r3,[r7,#24]
 893:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 2089              	 .loc 2 893 0
 2090 00b0 7B68     	 ldr r3,[r7,#4]
 2091 00b2 1B78     	 ldrb r3,[r3]
 2092 00b4 1A46     	 mov r2,r3
 2093 00b6 FB7D     	 ldrb r3,[r7,#23]
 2094 00b8 02FA03F3 	 lsl r3,r2,r3
 2095 00bc BA69     	 ldr r2,[r7,#24]
 2096 00be 1343     	 orrs r3,r3,r2
 2097 00c0 BB61     	 str r3,[r7,#24]
 894:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 895:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 2098              	 .loc 2 895 0
 2099 00c2 FB68     	 ldr r3,[r7,#12]
 2100 00c4 1A68     	 ldr r2,[r3]
 2101 00c6 0021     	 movs r1,#0
 2102 00c8 BA69     	 ldr r2,[r7,#24]
 2103 00ca 0A43     	 orrs r2,r2,r1
 2104 00cc 1A60     	 str r2,[r3]
 896:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 897:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2105              	 .loc 2 897 0
 2106 00ce 2437     	 adds r7,r7,#36
 2107              	.LCFI162:
 2108              	 .cfi_def_cfa_offset 4
 2109 00d0 BD46     	 mov sp,r7
 2110              	.LCFI163:
 2111              	 .cfi_def_cfa_register 13
 2112              	 
 2113 00d2 5DF8047B 	 ldr r7,[sp],#4
 2114              	.LCFI164:
 2115              	 .cfi_restore 7
 2116              	 .cfi_def_cfa_offset 0
 2117 00d6 7047     	 bx lr
 2118              	 .cfi_endproc
 2119              	.LFE250:
 2121              	 .section .text.XMC_CCU8_SLICE_SetInput,"ax",%progbits
 2122              	 .align 2
 2123              	 .global XMC_CCU8_SLICE_SetInput
 2124              	 .thumb
 2125              	 .thumb_func
 2127              	XMC_CCU8_SLICE_SetInput:
 2128              	.LFB251:
 898:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 899:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to bind an input to a slice trigger event */
 900:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
 901:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                          const XMC_CCU8_SLICE_EVENT_t event,
 902:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                              const XMC_CCU8_SLICE_INPUT_t input)
 903:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2129              	 .loc 2 903 0
 2130              	 .cfi_startproc
 2131              	 
 2132              	 
 2133              	 
 2134 0000 80B4     	 push {r7}
 2135              	.LCFI165:
 2136              	 .cfi_def_cfa_offset 4
 2137              	 .cfi_offset 7,-4
 2138 0002 85B0     	 sub sp,sp,#20
 2139              	.LCFI166:
 2140              	 .cfi_def_cfa_offset 24
 2141 0004 00AF     	 add r7,sp,#0
 2142              	.LCFI167:
 2143              	 .cfi_def_cfa_register 7
 2144 0006 7860     	 str r0,[r7,#4]
 2145 0008 0B46     	 mov r3,r1
 2146 000a FB70     	 strb r3,[r7,#3]
 2147 000c 1346     	 mov r3,r2
 2148 000e BB70     	 strb r3,[r7,#2]
 904:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 905:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 906:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 907:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 908:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 909:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 910:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Input", XMC_CCU8_SLICE_IsInputvalid(input));
 911:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 912:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 913:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 2149              	 .loc 2 913 0
 2150 0010 FB78     	 ldrb r3,[r7,#3]
 2151 0012 013B     	 subs r3,r3,#1
 2152 0014 FB73     	 strb r3,[r7,#15]
 914:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 915:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 916:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 917:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 918:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 919:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 920:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 921:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 922:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #else
 923:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 924:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 2153              	 .loc 2 924 0
 2154 0016 FB7B     	 ldrb r3,[r7,#15]
 2155 0018 9B00     	 lsls r3,r3,#2
 2156 001a BB73     	 strb r3,[r7,#14]
 925:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 2157              	 .loc 2 925 0
 2158 001c 7B68     	 ldr r3,[r7,#4]
 2159 001e 1B68     	 ldr r3,[r3]
 2160 0020 BB60     	 str r3,[r7,#8]
 926:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 2161              	 .loc 2 926 0
 2162 0022 BB7B     	 ldrb r3,[r7,#14]
 2163 0024 0F22     	 movs r2,#15
 2164 0026 02FA03F3 	 lsl r3,r2,r3
 2165 002a DB43     	 mvns r3,r3
 2166 002c BA68     	 ldr r2,[r7,#8]
 2167 002e 1340     	 ands r3,r3,r2
 2168 0030 BB60     	 str r3,[r7,#8]
 927:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 2169              	 .loc 2 927 0
 2170 0032 BA78     	 ldrb r2,[r7,#2]
 2171 0034 BB7B     	 ldrb r3,[r7,#14]
 2172 0036 02FA03F3 	 lsl r3,r2,r3
 2173 003a BA68     	 ldr r2,[r7,#8]
 2174 003c 1343     	 orrs r3,r3,r2
 2175 003e BB60     	 str r3,[r7,#8]
 928:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 929:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 2176              	 .loc 2 929 0
 2177 0040 7B68     	 ldr r3,[r7,#4]
 2178 0042 1A68     	 ldr r2,[r3]
 2179 0044 0021     	 movs r1,#0
 2180 0046 BA68     	 ldr r2,[r7,#8]
 2181 0048 0A43     	 orrs r2,r2,r1
 2182 004a 1A60     	 str r2,[r3]
 930:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
 931:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2183              	 .loc 2 931 0
 2184 004c 1437     	 adds r7,r7,#20
 2185              	.LCFI168:
 2186              	 .cfi_def_cfa_offset 4
 2187 004e BD46     	 mov sp,r7
 2188              	.LCFI169:
 2189              	 .cfi_def_cfa_register 13
 2190              	 
 2191 0050 5DF8047B 	 ldr r7,[sp],#4
 2192              	.LCFI170:
 2193              	 .cfi_restore 7
 2194              	 .cfi_def_cfa_offset 0
 2195 0054 7047     	 bx lr
 2196              	 .cfi_endproc
 2197              	.LFE251:
 2199 0056 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerRepeatMode,"ax",%progbits
 2200              	 .align 2
 2201              	 .global XMC_CCU8_SLICE_SetTimerRepeatMode
 2202              	 .thumb
 2203              	 .thumb_func
 2205              	XMC_CCU8_SLICE_SetTimerRepeatMode:
 2206              	.LFB252:
 932:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 933:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* API to program timer repeat mode - Single shot vs repeat  */
 934:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice,
 935:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t mode)
 936:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2207              	 .loc 2 936 0
 2208              	 .cfi_startproc
 2209              	 
 2210              	 
 2211              	 
 2212 0000 80B4     	 push {r7}
 2213              	.LCFI171:
 2214              	 .cfi_def_cfa_offset 4
 2215              	 .cfi_offset 7,-4
 2216 0002 85B0     	 sub sp,sp,#20
 2217              	.LCFI172:
 2218              	 .cfi_def_cfa_offset 24
 2219 0004 00AF     	 add r7,sp,#0
 2220              	.LCFI173:
 2221              	 .cfi_def_cfa_register 7
 2222 0006 7860     	 str r0,[r7,#4]
 2223 0008 0B46     	 mov r3,r1
 2224 000a FB70     	 strb r3,[r7,#3]
 937:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 938:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 939:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
 940:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode", 
 941:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 942:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (mode == (mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT))));
 943:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 944:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2225              	 .loc 2 944 0
 2226 000c 7B68     	 ldr r3,[r7,#4]
 2227 000e 5B69     	 ldr r3,[r3,#20]
 2228 0010 FB60     	 str r3,[r7,#12]
 945:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 946:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 2229              	 .loc 2 946 0
 2230 0012 FB78     	 ldrb r3,[r7,#3]
 2231 0014 002B     	 cmp r3,#0
 2232 0016 04D1     	 bne .L58
 947:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 948:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TSSM_Msk);
 2233              	 .loc 2 948 0
 2234 0018 FB68     	 ldr r3,[r7,#12]
 2235 001a 23F00203 	 bic r3,r3,#2
 2236 001e FB60     	 str r3,[r7,#12]
 2237 0020 03E0     	 b .L59
 2238              	.L58:
 949:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 950:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 951:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 952:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TSSM_Msk;
 2239              	 .loc 2 952 0
 2240 0022 FB68     	 ldr r3,[r7,#12]
 2241 0024 43F00203 	 orr r3,r3,#2
 2242 0028 FB60     	 str r3,[r7,#12]
 2243              	.L59:
 953:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 954:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 955:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2244              	 .loc 2 955 0
 2245 002a 7B68     	 ldr r3,[r7,#4]
 2246 002c 5A69     	 ldr r2,[r3,#20]
 2247 002e 0021     	 movs r1,#0
 2248 0030 FA68     	 ldr r2,[r7,#12]
 2249 0032 0A43     	 orrs r2,r2,r1
 2250 0034 5A61     	 str r2,[r3,#20]
 956:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2251              	 .loc 2 956 0
 2252 0036 1437     	 adds r7,r7,#20
 2253              	.LCFI174:
 2254              	 .cfi_def_cfa_offset 4
 2255 0038 BD46     	 mov sp,r7
 2256              	.LCFI175:
 2257              	 .cfi_def_cfa_register 13
 2258              	 
 2259 003a 5DF8047B 	 ldr r7,[sp],#4
 2260              	.LCFI176:
 2261              	 .cfi_restore 7
 2262              	 .cfi_def_cfa_offset 0
 2263 003e 7047     	 bx lr
 2264              	 .cfi_endproc
 2265              	.LFE252:
 2267              	 .section .text.XMC_CCU8_SLICE_SetTimerCountingMode,"ax",%progbits
 2268              	 .align 2
 2269              	 .global XMC_CCU8_SLICE_SetTimerCountingMode
 2270              	 .thumb
 2271              	 .thumb_func
 2273              	XMC_CCU8_SLICE_SetTimerCountingMode:
 2274              	.LFB253:
 957:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 958:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Programs timer counting mode  */
 959:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
 960:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2275              	 .loc 2 960 0
 2276              	 .cfi_startproc
 2277              	 
 2278              	 
 2279              	 
 2280 0000 80B4     	 push {r7}
 2281              	.LCFI177:
 2282              	 .cfi_def_cfa_offset 4
 2283              	 .cfi_offset 7,-4
 2284 0002 85B0     	 sub sp,sp,#20
 2285              	.LCFI178:
 2286              	 .cfi_def_cfa_offset 24
 2287 0004 00AF     	 add r7,sp,#0
 2288              	.LCFI179:
 2289              	 .cfi_def_cfa_register 7
 2290 0006 7860     	 str r0,[r7,#4]
 2291 0008 0B46     	 mov r3,r1
 2292 000a FB70     	 strb r3,[r7,#3]
 961:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 962:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 963:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
 964:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Timer Count Mode",
 965:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA) ||\
 966:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA)));
 967:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 968:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2293              	 .loc 2 968 0
 2294 000c 7B68     	 ldr r3,[r7,#4]
 2295 000e 5B69     	 ldr r3,[r3,#20]
 2296 0010 FB60     	 str r3,[r7,#12]
 969:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 970:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == mode)
 2297              	 .loc 2 970 0
 2298 0012 FB78     	 ldrb r3,[r7,#3]
 2299 0014 002B     	 cmp r3,#0
 2300 0016 04D1     	 bne .L61
 971:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 972:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TCM_Msk);
 2301              	 .loc 2 972 0
 2302 0018 FB68     	 ldr r3,[r7,#12]
 2303 001a 23F00103 	 bic r3,r3,#1
 2304 001e FB60     	 str r3,[r7,#12]
 2305 0020 03E0     	 b .L62
 2306              	.L61:
 973:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 974:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
 975:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 976:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TCM_Msk;
 2307              	 .loc 2 976 0
 2308 0022 FB68     	 ldr r3,[r7,#12]
 2309 0024 43F00103 	 orr r3,r3,#1
 2310 0028 FB60     	 str r3,[r7,#12]
 2311              	.L62:
 977:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
 978:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 979:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2312              	 .loc 2 979 0
 2313 002a 7B68     	 ldr r3,[r7,#4]
 2314 002c 5A69     	 ldr r2,[r3,#20]
 2315 002e 0021     	 movs r1,#0
 2316 0030 FA68     	 ldr r2,[r7,#12]
 2317 0032 0A43     	 orrs r2,r2,r1
 2318 0034 5A61     	 str r2,[r3,#20]
 980:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2319              	 .loc 2 980 0
 2320 0036 1437     	 adds r7,r7,#20
 2321              	.LCFI180:
 2322              	 .cfi_def_cfa_offset 4
 2323 0038 BD46     	 mov sp,r7
 2324              	.LCFI181:
 2325              	 .cfi_def_cfa_register 13
 2326              	 
 2327 003a 5DF8047B 	 ldr r7,[sp],#4
 2328              	.LCFI182:
 2329              	 .cfi_restore 7
 2330              	 .cfi_def_cfa_offset 0
 2331 003e 7047     	 bx lr
 2332              	 .cfi_endproc
 2333              	.LFE253:
 2335              	 .section .text.XMC_CCU8_SLICE_SetTimerPeriodMatch,"ax",%progbits
 2336              	 .align 2
 2337              	 .global XMC_CCU8_SLICE_SetTimerPeriodMatch
 2338              	 .thumb
 2339              	 .thumb_func
 2341              	XMC_CCU8_SLICE_SetTimerPeriodMatch:
 2342              	.LFB254:
 981:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 982:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Programs period match value of the timer  */
 983:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val)
 984:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2343              	 .loc 2 984 0
 2344              	 .cfi_startproc
 2345              	 
 2346              	 
 2347              	 
 2348 0000 80B4     	 push {r7}
 2349              	.LCFI183:
 2350              	 .cfi_def_cfa_offset 4
 2351              	 .cfi_offset 7,-4
 2352 0002 83B0     	 sub sp,sp,#12
 2353              	.LCFI184:
 2354              	 .cfi_def_cfa_offset 16
 2355 0004 00AF     	 add r7,sp,#0
 2356              	.LCFI185:
 2357              	 .cfi_def_cfa_register 7
 2358 0006 7860     	 str r0,[r7,#4]
 2359 0008 0B46     	 mov r3,r1
 2360 000a 7B80     	 strh r3,[r7,#2]
 985:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
 986:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->PRS = (uint32_t) period_val;
 2361              	 .loc 2 986 0
 2362 000c 7A88     	 ldrh r2,[r7,#2]
 2363 000e 7B68     	 ldr r3,[r7,#4]
 2364 0010 596B     	 ldr r1,[r3,#52]
 2365 0012 0021     	 movs r1,#0
 2366 0014 0A43     	 orrs r2,r2,r1
 2367 0016 5A63     	 str r2,[r3,#52]
 987:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2368              	 .loc 2 987 0
 2369 0018 0C37     	 adds r7,r7,#12
 2370              	.LCFI186:
 2371              	 .cfi_def_cfa_offset 4
 2372 001a BD46     	 mov sp,r7
 2373              	.LCFI187:
 2374              	 .cfi_def_cfa_register 13
 2375              	 
 2376 001c 5DF8047B 	 ldr r7,[sp],#4
 2377              	.LCFI188:
 2378              	 .cfi_restore 7
 2379              	 .cfi_def_cfa_offset 0
 2380 0020 7047     	 bx lr
 2381              	 .cfi_endproc
 2382              	.LFE254:
 2384 0022 00BF     	 .section .text.XMC_CCU8_SLICE_GetCaptureRegisterValue,"ax",%progbits
 2385              	 .align 2
 2386              	 .global XMC_CCU8_SLICE_GetCaptureRegisterValue
 2387              	 .thumb
 2388              	 .thumb_func
 2390              	XMC_CCU8_SLICE_GetCaptureRegisterValue:
 2391              	.LFB255:
 988:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 989:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Retrieves desired capture register value */
 990:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
 991:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2392              	 .loc 2 991 0
 2393              	 .cfi_startproc
 2394              	 
 2395              	 
 2396              	 
 2397 0000 80B4     	 push {r7}
 2398              	.LCFI189:
 2399              	 .cfi_def_cfa_offset 4
 2400              	 .cfi_offset 7,-4
 2401 0002 83B0     	 sub sp,sp,#12
 2402              	.LCFI190:
 2403              	 .cfi_def_cfa_offset 16
 2404 0004 00AF     	 add r7,sp,#0
 2405              	.LCFI191:
 2406              	 .cfi_def_cfa_register 7
 2407 0006 7860     	 str r0,[r7,#4]
 2408 0008 0B46     	 mov r3,r1
 2409 000a FB70     	 strb r3,[r7,#3]
 992:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 993:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 994:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   return(slice->CV[reg_num]);
 2410              	 .loc 2 994 0
 2411 000c FB78     	 ldrb r3,[r7,#3]
 2412 000e 7A68     	 ldr r2,[r7,#4]
 2413 0010 1C33     	 adds r3,r3,#28
 2414 0012 9B00     	 lsls r3,r3,#2
 2415 0014 1344     	 add r3,r3,r2
 2416 0016 5B68     	 ldr r3,[r3,#4]
 995:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2417              	 .loc 2 995 0
 2418 0018 1846     	 mov r0,r3
 2419 001a 0C37     	 adds r7,r7,#12
 2420              	.LCFI192:
 2421              	 .cfi_def_cfa_offset 4
 2422 001c BD46     	 mov sp,r7
 2423              	.LCFI193:
 2424              	 .cfi_def_cfa_register 13
 2425              	 
 2426 001e 5DF8047B 	 ldr r7,[sp],#4
 2427              	.LCFI194:
 2428              	 .cfi_restore 7
 2429              	 .cfi_def_cfa_offset 0
 2430 0022 7047     	 bx lr
 2431              	 .cfi_endproc
 2432              	.LFE255:
 2434              	 .section .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2435              	 .align 2
 2436              	 .global XMC_CCU8_SLICE_GetLastCapturedTimerValue
 2437              	 .thumb
 2438              	 .thumb_func
 2440              	XMC_CCU8_SLICE_GetLastCapturedTimerValue:
 2441              	.LFB256:
 996:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
 997:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* @brief Retrieves the latest captured timer value */
 998:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
 999:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
1000:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                                            uint32_t *val_ptr)
1001:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2442              	 .loc 2 1001 0
 2443              	 .cfi_startproc
 2444              	 
 2445              	 
 2446              	 
 2447 0000 80B4     	 push {r7}
 2448              	.LCFI195:
 2449              	 .cfi_def_cfa_offset 4
 2450              	 .cfi_offset 7,-4
 2451 0002 87B0     	 sub sp,sp,#28
 2452              	.LCFI196:
 2453              	 .cfi_def_cfa_offset 32
 2454 0004 00AF     	 add r7,sp,#0
 2455              	.LCFI197:
 2456              	 .cfi_def_cfa_register 7
 2457 0006 F860     	 str r0,[r7,#12]
 2458 0008 0B46     	 mov r3,r1
 2459 000a 7A60     	 str r2,[r7,#4]
 2460 000c FB72     	 strb r3,[r7,#11]
1002:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1003:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_STATUS_t retval;
1004:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint8_t i;
1005:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint8_t start;
1006:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint8_t end;
1007:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1008:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlic
1009:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Register Set",
1010:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1011:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1012:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1013:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   retval = XMC_CCU8_STATUS_ERROR;
 2461              	 .loc 2 1013 0
 2462 000e 0123     	 movs r3,#1
 2463 0010 FB75     	 strb r3,[r7,#23]
1014:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1015:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First check if extended capture mode is enabled */
1016:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if((slice->TC) & CCU8_CC8_TC_ECM_Msk)
 2464              	 .loc 2 1016 0
 2465 0012 FB68     	 ldr r3,[r7,#12]
 2466 0014 5B69     	 ldr r3,[r3,#20]
 2467 0016 03F01003 	 and r3,r3,#16
 2468 001a 002B     	 cmp r3,#0
 2469 001c 04D0     	 beq .L67
1017:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1018:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
1019:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     start = 0U;
 2470              	 .loc 2 1019 0
 2471 001e 0023     	 movs r3,#0
 2472 0020 7B75     	 strb r3,[r7,#21]
1020:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     end = XMC_CCU8_NUM_SLICES_PER_MODULE;
 2473              	 .loc 2 1020 0
 2474 0022 0423     	 movs r3,#4
 2475 0024 3B75     	 strb r3,[r7,#20]
 2476 0026 0BE0     	 b .L68
 2477              	.L67:
1021:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1022:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
1023:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1024:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode is not enabled */
1025:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     if(set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)
 2478              	 .loc 2 1025 0
 2479 0028 FB7A     	 ldrb r3,[r7,#11]
 2480 002a 012B     	 cmp r3,#1
 2481 002c 04D1     	 bne .L69
1026:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     {
1027:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       start = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2482              	 .loc 2 1027 0
 2483 002e 0223     	 movs r3,#2
 2484 0030 7B75     	 strb r3,[r7,#21]
1028:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       end   = (uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE;
 2485              	 .loc 2 1028 0
 2486 0032 0423     	 movs r3,#4
 2487 0034 3B75     	 strb r3,[r7,#20]
 2488 0036 03E0     	 b .L68
 2489              	.L69:
1029:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     }
1030:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     else
1031:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     {
1032:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       start = 0U;
 2490              	 .loc 2 1032 0
 2491 0038 0023     	 movs r3,#0
 2492 003a 7B75     	 strb r3,[r7,#21]
1033:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       end = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2493              	 .loc 2 1033 0
 2494 003c 0223     	 movs r3,#2
 2495 003e 3B75     	 strb r3,[r7,#20]
 2496              	.L68:
1034:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     }
1035:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1036:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1037:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   for(i=start; i<end; i++)
 2497              	 .loc 2 1037 0
 2498 0040 7B7D     	 ldrb r3,[r7,#21]
 2499 0042 BB75     	 strb r3,[r7,#22]
 2500 0044 17E0     	 b .L70
 2501              	.L73:
1038:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1039:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     if( (slice->CV[i]) & CCU8_CC8_CV_FFL_Msk )
 2502              	 .loc 2 1039 0
 2503 0046 BB7D     	 ldrb r3,[r7,#22]
 2504 0048 FA68     	 ldr r2,[r7,#12]
 2505 004a 1C33     	 adds r3,r3,#28
 2506 004c 9B00     	 lsls r3,r3,#2
 2507 004e 1344     	 add r3,r3,r2
 2508 0050 5B68     	 ldr r3,[r3,#4]
 2509 0052 03F48013 	 and r3,r3,#1048576
 2510 0056 002B     	 cmp r3,#0
 2511 0058 0AD0     	 beq .L71
1040:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     {
1041:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       *val_ptr = slice->CV[i];
 2512              	 .loc 2 1041 0
 2513 005a BB7D     	 ldrb r3,[r7,#22]
 2514 005c FA68     	 ldr r2,[r7,#12]
 2515 005e 1C33     	 adds r3,r3,#28
 2516 0060 9B00     	 lsls r3,r3,#2
 2517 0062 1344     	 add r3,r3,r2
 2518 0064 5A68     	 ldr r2,[r3,#4]
 2519 0066 7B68     	 ldr r3,[r7,#4]
 2520 0068 1A60     	 str r2,[r3]
1042:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       retval = XMC_CCU8_STATUS_OK;
 2521              	 .loc 2 1042 0
 2522 006a 0023     	 movs r3,#0
 2523 006c FB75     	 strb r3,[r7,#23]
1043:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       break;
 2524              	 .loc 2 1043 0
 2525 006e 06E0     	 b .L72
 2526              	.L71:
1037:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 2527              	 .loc 2 1037 0 discriminator 2
 2528 0070 BB7D     	 ldrb r3,[r7,#22]
 2529 0072 0133     	 adds r3,r3,#1
 2530 0074 BB75     	 strb r3,[r7,#22]
 2531              	.L70:
1037:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
 2532              	 .loc 2 1037 0 is_stmt 0 discriminator 1
 2533 0076 BA7D     	 ldrb r2,[r7,#22]
 2534 0078 3B7D     	 ldrb r3,[r7,#20]
 2535 007a 9A42     	 cmp r2,r3
 2536 007c E3D3     	 bcc .L73
 2537              	.L72:
1044:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     }
1045:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1046:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1047:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   return retval;
 2538              	 .loc 2 1047 0 is_stmt 1
 2539 007e FB7D     	 ldrb r3,[r7,#23]
1048:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2540              	 .loc 2 1048 0
 2541 0080 1846     	 mov r0,r3
 2542 0082 1C37     	 adds r7,r7,#28
 2543              	.LCFI198:
 2544              	 .cfi_def_cfa_offset 4
 2545 0084 BD46     	 mov sp,r7
 2546              	.LCFI199:
 2547              	 .cfi_def_cfa_register 13
 2548              	 
 2549 0086 5DF8047B 	 ldr r7,[sp],#4
 2550              	.LCFI200:
 2551              	 .cfi_restore 7
 2552              	 .cfi_def_cfa_offset 0
 2553 008a 7047     	 bx lr
 2554              	 .cfi_endproc
 2555              	.LFE256:
 2557              	 .section .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo,"ax",%progbits
 2558              	 .align 2
 2559              	 .global XMC_CCU8_SLICE_GetCapturedValueFromFifo
 2560              	 .thumb
 2561              	 .thumb_func
 2563              	XMC_CCU8_SLICE_GetCapturedValueFromFifo:
 2564              	.LFB257:
1049:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1050:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1051:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1052:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
1053:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   int32_t  cap;
1054:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t extracted_slice;
1055:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   
1056:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidModule(modu
1057:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1058:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* First read the global fifo register */
1059:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   cap = (int32_t) module->ECRD;
1060:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     
1061:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU8_ECRD_SPTR_Msk)) >> CCU8_ECRD_SPTR_Pos;
1062:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1063:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Return captured result only if it were applicable to this slice */
1064:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(extracted_slice != ((uint32_t)slice_number))
1065:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1066:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     cap = -1;
1067:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1068:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1069:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   return (cap);
1070:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
1071:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #else
1072:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1073:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU
1074:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2565              	 .loc 2 1074 0
 2566              	 .cfi_startproc
 2567              	 
 2568              	 
 2569              	 
 2570 0000 80B4     	 push {r7}
 2571              	.LCFI201:
 2572              	 .cfi_def_cfa_offset 4
 2573              	 .cfi_offset 7,-4
 2574 0002 85B0     	 sub sp,sp,#20
 2575              	.LCFI202:
 2576              	 .cfi_def_cfa_offset 24
 2577 0004 00AF     	 add r7,sp,#0
 2578              	.LCFI203:
 2579              	 .cfi_def_cfa_register 7
 2580 0006 7860     	 str r0,[r7,#4]
 2581 0008 0B46     	 mov r3,r1
 2582 000a FB70     	 strb r3,[r7,#3]
1075:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t cap;
1076:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1077:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1078:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1079:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1080:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1081:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1082:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_CAP_REG_SET_LOW == set)
 2583              	 .loc 2 1082 0
 2584 000c FB78     	 ldrb r3,[r7,#3]
 2585 000e 002B     	 cmp r3,#0
 2586 0010 04D1     	 bne .L76
1083:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1084:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     cap = slice->ECRD0;
 2587              	 .loc 2 1084 0
 2588 0012 7B68     	 ldr r3,[r7,#4]
 2589 0014 D3F8B830 	 ldr r3,[r3,#184]
 2590 0018 FB60     	 str r3,[r7,#12]
 2591 001a 03E0     	 b .L77
 2592              	.L76:
1085:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1086:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
1087:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1088:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     cap = slice->ECRD1;
 2593              	 .loc 2 1088 0
 2594 001c 7B68     	 ldr r3,[r7,#4]
 2595 001e D3F8BC30 	 ldr r3,[r3,#188]
 2596 0022 FB60     	 str r3,[r7,#12]
 2597              	.L77:
1089:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1090:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1091:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   return cap;
 2598              	 .loc 2 1091 0
 2599 0024 FB68     	 ldr r3,[r7,#12]
1092:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2600              	 .loc 2 1092 0
 2601 0026 1846     	 mov r0,r3
 2602 0028 1437     	 adds r7,r7,#20
 2603              	.LCFI204:
 2604              	 .cfi_def_cfa_offset 4
 2605 002a BD46     	 mov sp,r7
 2606              	.LCFI205:
 2607              	 .cfi_def_cfa_register 13
 2608              	 
 2609 002c 5DF8047B 	 ldr r7,[sp],#4
 2610              	.LCFI206:
 2611              	 .cfi_restore 7
 2612              	 .cfi_def_cfa_offset 0
 2613 0030 7047     	 bx lr
 2614              	 .cfi_endproc
 2615              	.LFE257:
 2617 0032 00BF     	 .section .text.XMC_CCU8_SLICE_EnableDithering,"ax",%progbits
 2618              	 .align 2
 2619              	 .global XMC_CCU8_SLICE_EnableDithering
 2620              	 .thumb
 2621              	 .thumb_func
 2623              	XMC_CCU8_SLICE_EnableDithering:
 2624              	.LFB258:
1093:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** #endif
1094:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1095:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Enables PWM dithering feature */
1096:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
1097:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                     const bool period_dither,
1098:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                     const bool duty_dither,
1099:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                     const uint8_t spread)
1100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2625              	 .loc 2 1100 0
 2626              	 .cfi_startproc
 2627              	 
 2628              	 
 2629 0000 80B5     	 push {r7,lr}
 2630              	.LCFI207:
 2631              	 .cfi_def_cfa_offset 8
 2632              	 .cfi_offset 7,-8
 2633              	 .cfi_offset 14,-4
 2634 0002 84B0     	 sub sp,sp,#16
 2635              	.LCFI208:
 2636              	 .cfi_def_cfa_offset 24
 2637 0004 00AF     	 add r7,sp,#0
 2638              	.LCFI209:
 2639              	 .cfi_def_cfa_register 7
 2640 0006 7860     	 str r0,[r7,#4]
 2641 0008 0846     	 mov r0,r1
 2642 000a 1146     	 mov r1,r2
 2643 000c 1A46     	 mov r2,r3
 2644 000e 0346     	 mov r3,r0
 2645 0010 FB70     	 strb r3,[r7,#3]
 2646 0012 0B46     	 mov r3,r1
 2647 0014 BB70     	 strb r3,[r7,#2]
 2648 0016 1346     	 mov r3,r2
 2649 0018 7B70     	 strb r3,[r7,#1]
1101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
1102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2650              	 .loc 2 1105 0
 2651 001a 7B68     	 ldr r3,[r7,#4]
 2652 001c 5B69     	 ldr r3,[r3,#20]
 2653 001e FB60     	 str r3,[r7,#12]
1106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
 2654              	 .loc 2 1106 0
 2655 0020 FB68     	 ldr r3,[r7,#12]
 2656 0022 23F4C043 	 bic r3,r3,#24576
 2657 0026 FB60     	 str r3,[r7,#12]
1107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(true == period_dither)
 2658              	 .loc 2 1108 0
 2659 0028 FB78     	 ldrb r3,[r7,#3]
 2660 002a 002B     	 cmp r3,#0
 2661 002c 03D0     	 beq .L80
1109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_PERIOD_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2662              	 .loc 2 1110 0
 2663 002e FB68     	 ldr r3,[r7,#12]
 2664 0030 43F40053 	 orr r3,r3,#8192
 2665 0034 FB60     	 str r3,[r7,#12]
 2666              	.L80:
1111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if(true == duty_dither)
 2667              	 .loc 2 1112 0
 2668 0036 BB78     	 ldrb r3,[r7,#2]
 2669 0038 002B     	 cmp r3,#0
 2670 003a 03D0     	 beq .L81
1113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2671              	 .loc 2 1114 0
 2672 003c FB68     	 ldr r3,[r7,#12]
 2673 003e 43F48043 	 orr r3,r3,#16384
 2674 0042 FB60     	 str r3,[r7,#12]
 2675              	.L81:
1115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2676              	 .loc 2 1117 0
 2677 0044 7B68     	 ldr r3,[r7,#4]
 2678 0046 5A69     	 ldr r2,[r3,#20]
 2679 0048 0021     	 movs r1,#0
 2680 004a FA68     	 ldr r2,[r7,#12]
 2681 004c 0A43     	 orrs r2,r2,r1
 2682 004e 5A61     	 str r2,[r3,#20]
1118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_SetDitherCompareValue((XMC_CCU8_SLICE_t *)slice, (uint8_t)spread);
 2683              	 .loc 2 1119 0
 2684 0050 7B78     	 ldrb r3,[r7,#1]
 2685 0052 7868     	 ldr r0,[r7,#4]
 2686 0054 1946     	 mov r1,r3
 2687 0056 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDitherCompareValue
1120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2688              	 .loc 2 1120 0
 2689 005a 1037     	 adds r7,r7,#16
 2690              	.LCFI210:
 2691              	 .cfi_def_cfa_offset 8
 2692 005c BD46     	 mov sp,r7
 2693              	.LCFI211:
 2694              	 .cfi_def_cfa_register 13
 2695              	 
 2696 005e 80BD     	 pop {r7,pc}
 2697              	 .cfi_endproc
 2698              	.LFE258:
 2700              	 .section .text.XMC_CCU8_SLICE_SetPrescaler,"ax",%progbits
 2701              	 .align 2
 2702              	 .global XMC_CCU8_SLICE_SetPrescaler
 2703              	 .thumb
 2704              	 .thumb_func
 2706              	XMC_CCU8_SLICE_SetPrescaler:
 2707              	.LFB259:
1121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Programs Pre-scaler divider  */
1123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
1124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2708              	 .loc 2 1124 0
 2709              	 .cfi_startproc
 2710              	 
 2711              	 
 2712              	 
 2713 0000 80B4     	 push {r7}
 2714              	.LCFI212:
 2715              	 .cfi_def_cfa_offset 4
 2716              	 .cfi_offset 7,-4
 2717 0002 85B0     	 sub sp,sp,#20
 2718              	.LCFI213:
 2719              	 .cfi_def_cfa_offset 24
 2720 0004 00AF     	 add r7,sp,#0
 2721              	.LCFI214:
 2722              	 .cfi_def_cfa_register 7
 2723 0006 7860     	 str r0,[r7,#4]
 2724 0008 0B46     	 mov r3,r1
 2725 000a FB70     	 strb r3,[r7,#3]
1125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t fpc;
1126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* If the prescaler is not running, update directly the divider*/
1130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   fpc = slice->FPC;
 2726              	 .loc 2 1130 0
 2727 000c 7B68     	 ldr r3,[r7,#4]
 2728 000e 9B6A     	 ldr r3,[r3,#40]
 2729 0010 FB60     	 str r3,[r7,#12]
1131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   fpc &= ~((uint32_t) CCU8_CC8_FPC_PVAL_Msk);
 2730              	 .loc 2 1131 0
 2731 0012 FB68     	 ldr r3,[r7,#12]
 2732 0014 23F47063 	 bic r3,r3,#3840
 2733 0018 FB60     	 str r3,[r7,#12]
1132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   fpc |= ((uint32_t) div_val) << CCU8_CC8_FPC_PVAL_Pos;
 2734              	 .loc 2 1132 0
 2735 001a FB78     	 ldrb r3,[r7,#3]
 2736 001c 1B02     	 lsls r3,r3,#8
 2737 001e FA68     	 ldr r2,[r7,#12]
 2738 0020 1343     	 orrs r3,r3,r2
 2739 0022 FB60     	 str r3,[r7,#12]
1133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->FPC = fpc;
 2740              	 .loc 2 1133 0
 2741 0024 7B68     	 ldr r3,[r7,#4]
 2742 0026 9A6A     	 ldr r2,[r3,#40]
 2743 0028 0021     	 movs r1,#0
 2744 002a FA68     	 ldr r2,[r7,#12]
 2745 002c 0A43     	 orrs r2,r2,r1
 2746 002e 9A62     	 str r2,[r3,#40]
1134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /*
1136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****    * compare value.
1138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****    */
1139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) div_val;
 2747              	 .loc 2 1139 0
 2748 0030 FA78     	 ldrb r2,[r7,#3]
 2749 0032 7B68     	 ldr r3,[r7,#4]
 2750 0034 596A     	 ldr r1,[r3,#36]
 2751 0036 0021     	 movs r1,#0
 2752 0038 0A43     	 orrs r2,r2,r1
 2753 003a 5A62     	 str r2,[r3,#36]
1140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2754              	 .loc 2 1140 0
 2755 003c 1437     	 adds r7,r7,#20
 2756              	.LCFI215:
 2757              	 .cfi_def_cfa_offset 4
 2758 003e BD46     	 mov sp,r7
 2759              	.LCFI216:
 2760              	 .cfi_def_cfa_register 13
 2761              	 
 2762 0040 5DF8047B 	 ldr r7,[sp],#4
 2763              	.LCFI217:
 2764              	 .cfi_restore 7
 2765              	 .cfi_def_cfa_offset 0
 2766 0044 7047     	 bx lr
 2767              	 .cfi_endproc
 2768              	.LFE259:
 2770 0046 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatch,"ax",%progbits
 2771              	 .align 2
 2772              	 .global XMC_CCU8_SLICE_SetTimerCompareMatch
 2773              	 .thumb
 2774              	 .thumb_func
 2776              	XMC_CCU8_SLICE_SetTimerCompareMatch:
 2777              	.LFB260:
1141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Programs timer compare match value for channel 1 or 2 */
1143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                          const uint16_t compare_val)
1146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2778              	 .loc 2 1146 0
 2779              	 .cfi_startproc
 2780              	 
 2781              	 
 2782              	 
 2783 0000 80B4     	 push {r7}
 2784              	.LCFI218:
 2785              	 .cfi_def_cfa_offset 4
 2786              	 .cfi_offset 7,-4
 2787 0002 83B0     	 sub sp,sp,#12
 2788              	.LCFI219:
 2789              	 .cfi_def_cfa_offset 16
 2790 0004 00AF     	 add r7,sp,#0
 2791              	.LCFI220:
 2792              	 .cfi_def_cfa_register 7
 2793 0006 7860     	 str r0,[r7,#4]
 2794 0008 0B46     	 mov r3,r1
 2795 000a FB70     	 strb r3,[r7,#3]
 2796 000c 1346     	 mov r3,r2
 2797 000e 3B80     	 strh r3,[r7]
1147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANN
1149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2798              	 .loc 2 1150 0
 2799 0010 FB78     	 ldrb r3,[r7,#3]
 2800 0012 002B     	 cmp r3,#0
 2801 0014 06D1     	 bne .L84
1151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     slice->CR1S = (uint32_t) compare_val;
 2802              	 .loc 2 1152 0
 2803 0016 3A88     	 ldrh r2,[r7]
 2804 0018 7B68     	 ldr r3,[r7,#4]
 2805 001a D96B     	 ldr r1,[r3,#60]
 2806 001c 0021     	 movs r1,#0
 2807 001e 0A43     	 orrs r2,r2,r1
 2808 0020 DA63     	 str r2,[r3,#60]
 2809 0022 05E0     	 b .L83
 2810              	.L84:
1153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
1155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     slice->CR2S = (uint32_t) compare_val;
 2811              	 .loc 2 1156 0
 2812 0024 3A88     	 ldrh r2,[r7]
 2813 0026 7B68     	 ldr r3,[r7,#4]
 2814 0028 596C     	 ldr r1,[r3,#68]
 2815 002a 0021     	 movs r1,#0
 2816 002c 0A43     	 orrs r2,r2,r1
 2817 002e 5A64     	 str r2,[r3,#68]
 2818              	.L83:
1157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2819              	 .loc 2 1158 0
 2820 0030 0C37     	 adds r7,r7,#12
 2821              	.LCFI221:
 2822              	 .cfi_def_cfa_offset 4
 2823 0032 BD46     	 mov sp,r7
 2824              	.LCFI222:
 2825              	 .cfi_def_cfa_register 13
 2826              	 
 2827 0034 5DF8047B 	 ldr r7,[sp],#4
 2828              	.LCFI223:
 2829              	 .cfi_restore 7
 2830              	 .cfi_def_cfa_offset 0
 2831 0038 7047     	 bx lr
 2832              	 .cfi_endproc
 2833              	.LFE260:
 2835 003a 00BF     	 .section .text.XMC_CCU8_SLICE_GetTimerCompareMatch,"ax",%progbits
 2836              	 .align 2
 2837              	 .global XMC_CCU8_SLICE_GetTimerCompareMatch
 2838              	 .thumb
 2839              	 .thumb_func
 2841              	XMC_CCU8_SLICE_GetTimerCompareMatch:
 2842              	.LFB261:
1159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Returns the timer compare match value for channel 1 or 2 */
1161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
1162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel)
1163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2843              	 .loc 2 1163 0
 2844              	 .cfi_startproc
 2845              	 
 2846              	 
 2847              	 
 2848 0000 80B4     	 push {r7}
 2849              	.LCFI224:
 2850              	 .cfi_def_cfa_offset 4
 2851              	 .cfi_offset 7,-4
 2852 0002 85B0     	 sub sp,sp,#20
 2853              	.LCFI225:
 2854              	 .cfi_def_cfa_offset 24
 2855 0004 00AF     	 add r7,sp,#0
 2856              	.LCFI226:
 2857              	 .cfi_def_cfa_register 7
 2858 0006 7860     	 str r0,[r7,#4]
 2859 0008 0B46     	 mov r3,r1
 2860 000a FB70     	 strb r3,[r7,#3]
1164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint16_t compare_value;
1165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(ch
1168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2861              	 .loc 2 1169 0
 2862 000c FB78     	 ldrb r3,[r7,#3]
 2863 000e 002B     	 cmp r3,#0
 2864 0010 03D1     	 bne .L87
1170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR1;
 2865              	 .loc 2 1171 0
 2866 0012 7B68     	 ldr r3,[r7,#4]
 2867 0014 9B6B     	 ldr r3,[r3,#56]
 2868 0016 FB81     	 strh r3,[r7,#14]
 2869 0018 02E0     	 b .L88
 2870              	.L87:
1172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
1174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR2;
 2871              	 .loc 2 1175 0
 2872 001a 7B68     	 ldr r3,[r7,#4]
 2873 001c 1B6C     	 ldr r3,[r3,#64]
 2874 001e FB81     	 strh r3,[r7,#14]
 2875              	.L88:
1176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   return(compare_value);
 2876              	 .loc 2 1178 0
 2877 0020 FB89     	 ldrh r3,[r7,#14]
1179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 2878              	 .loc 2 1179 0
 2879 0022 1846     	 mov r0,r3
 2880 0024 1437     	 adds r7,r7,#20
 2881              	.LCFI227:
 2882              	 .cfi_def_cfa_offset 4
 2883 0026 BD46     	 mov sp,r7
 2884              	.LCFI228:
 2885              	 .cfi_def_cfa_register 13
 2886              	 
 2887 0028 5DF8047B 	 ldr r7,[sp],#4
 2888              	.LCFI229:
 2889              	 .cfi_restore 7
 2890              	 .cfi_def_cfa_offset 0
 2891 002c 7047     	 bx lr
 2892              	 .cfi_endproc
 2893              	.LFE261:
 2895 002e 00BF     	 .section .text.XMC_CCU8_SLICE_SetInterruptNode,"ax",%progbits
 2896              	 .align 2
 2897              	 .global XMC_CCU8_SLICE_SetInterruptNode
 2898              	 .thumb
 2899              	 .thumb_func
 2901              	XMC_CCU8_SLICE_SetInterruptNode:
 2902              	.LFB262:
1180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Binds a capcom event to an NVIC node  */
1182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
1183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
1184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_SR_ID_t sr)
1185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 2903              	 .loc 2 1185 0
 2904              	 .cfi_startproc
 2905              	 
 2906              	 
 2907              	 
 2908 0000 80B4     	 push {r7}
 2909              	.LCFI230:
 2910              	 .cfi_def_cfa_offset 4
 2911              	 .cfi_offset 7,-4
 2912 0002 87B0     	 sub sp,sp,#28
 2913              	.LCFI231:
 2914              	 .cfi_def_cfa_offset 32
 2915 0004 00AF     	 add r7,sp,#0
 2916              	.LCFI232:
 2917              	 .cfi_def_cfa_register 7
 2918 0006 7860     	 str r0,[r7,#4]
 2919 0008 0B46     	 mov r3,r1
 2920 000a FB70     	 strb r3,[r7,#3]
 2921 000c 1346     	 mov r3,r2
 2922 000e BB70     	 strb r3,[r7,#2]
1186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t srs;
1187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t mask;
1188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t pos;
1189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU8_SLICE_CHECK_SR_ID(sr));
1192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event)
1193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   srs = slice->SRS;
 2923              	 .loc 2 1194 0
 2924 0010 7B68     	 ldr r3,[r7,#4]
 2925 0012 D3F8A830 	 ldr r3,[r3,#168]
 2926 0016 FB60     	 str r3,[r7,#12]
1195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   switch(event)
 2927              	 .loc 2 1196 0
 2928 0018 FB78     	 ldrb r3,[r7,#3]
 2929 001a 092B     	 cmp r3,#9
 2930 001c 31D8     	 bhi .L91
 2931 001e 01A2     	 adr r2,.L93
 2932 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2933              	 .p2align 2
 2934              	.L93:
 2935 0024 4D000000 	 .word .L92+1
 2936 0028 4D000000 	 .word .L92+1
 2937 002c 57000000 	 .word .L94+1
 2938 0030 57000000 	 .word .L94+1
 2939 0034 61000000 	 .word .L95+1
 2940 0038 61000000 	 .word .L95+1
 2941 003c 83000000 	 .word .L91+1
 2942 0040 83000000 	 .word .L91+1
 2943 0044 6B000000 	 .word .L96+1
 2944 0048 77000000 	 .word .L97+1
 2945              	 .p2align 1
 2946              	.L92:
1197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH:
1199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH:
1200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_POSR_Msk);
 2947              	 .loc 2 1200 0
 2948 004c 0323     	 movs r3,#3
 2949 004e 7B61     	 str r3,[r7,#20]
1201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_POSR_Pos;
 2950              	 .loc 2 1201 0
 2951 0050 0023     	 movs r3,#0
 2952 0052 3B61     	 str r3,[r7,#16]
1202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       break;
 2953              	 .loc 2 1202 0
 2954 0054 1BE0     	 b .L98
 2955              	.L94:
1203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1:
1205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1:
1206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM1SR_Msk);
 2956              	 .loc 2 1206 0
 2957 0056 0C23     	 movs r3,#12
 2958 0058 7B61     	 str r3,[r7,#20]
1207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM1SR_Pos;
 2959              	 .loc 2 1207 0
 2960 005a 0223     	 movs r3,#2
 2961 005c 3B61     	 str r3,[r7,#16]
1208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       break;
 2962              	 .loc 2 1208 0
 2963 005e 16E0     	 b .L98
 2964              	.L95:
1209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2:
1211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2:
1212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM2SR_Msk);
 2965              	 .loc 2 1212 0
 2966 0060 3023     	 movs r3,#48
 2967 0062 7B61     	 str r3,[r7,#20]
1213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM2SR_Pos;
 2968              	 .loc 2 1213 0
 2969 0064 0423     	 movs r3,#4
 2970 0066 3B61     	 str r3,[r7,#16]
1214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       break;
 2971              	 .loc 2 1214 0
 2972 0068 11E0     	 b .L98
 2973              	.L96:
1215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT0:
1217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E0SR_Msk);
 2974              	 .loc 2 1217 0
 2975 006a 4FF44073 	 mov r3,#768
 2976 006e 7B61     	 str r3,[r7,#20]
1218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E0SR_Pos;
 2977              	 .loc 2 1218 0
 2978 0070 0823     	 movs r3,#8
 2979 0072 3B61     	 str r3,[r7,#16]
1219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       break;
 2980              	 .loc 2 1219 0
 2981 0074 0BE0     	 b .L98
 2982              	.L97:
1220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT1:
1222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E1SR_Msk);
 2983              	 .loc 2 1222 0
 2984 0076 4FF44063 	 mov r3,#3072
 2985 007a 7B61     	 str r3,[r7,#20]
1223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E1SR_Pos;
 2986              	 .loc 2 1223 0
 2987 007c 0A23     	 movs r3,#10
 2988 007e 3B61     	 str r3,[r7,#16]
1224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       break;
 2989              	 .loc 2 1224 0
 2990 0080 05E0     	 b .L98
 2991              	.L91:
1225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     default:
1227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E2SR_Msk);
 2992              	 .loc 2 1227 0
 2993 0082 4FF44053 	 mov r3,#12288
 2994 0086 7B61     	 str r3,[r7,#20]
1228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E2SR_Pos;
 2995              	 .loc 2 1228 0
 2996 0088 0C23     	 movs r3,#12
 2997 008a 3B61     	 str r3,[r7,#16]
1229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****       break;
 2998              	 .loc 2 1229 0
 2999 008c 00BF     	 nop
 3000              	.L98:
1230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   
1232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   srs &= ~mask;
 3001              	 .loc 2 1232 0
 3002 008e 7B69     	 ldr r3,[r7,#20]
 3003 0090 DB43     	 mvns r3,r3
 3004 0092 FA68     	 ldr r2,[r7,#12]
 3005 0094 1340     	 ands r3,r3,r2
 3006 0096 FB60     	 str r3,[r7,#12]
1233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   srs |= (uint32_t)sr << pos;
 3007              	 .loc 2 1233 0
 3008 0098 BA78     	 ldrb r2,[r7,#2]
 3009 009a 3B69     	 ldr r3,[r7,#16]
 3010 009c 02FA03F3 	 lsl r3,r2,r3
 3011 00a0 FA68     	 ldr r2,[r7,#12]
 3012 00a2 1343     	 orrs r3,r3,r2
 3013 00a4 FB60     	 str r3,[r7,#12]
1234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   
1235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->SRS = srs;
 3014              	 .loc 2 1235 0
 3015 00a6 7B68     	 ldr r3,[r7,#4]
 3016 00a8 D3F8A820 	 ldr r2,[r3,#168]
 3017 00ac 0021     	 movs r1,#0
 3018 00ae FA68     	 ldr r2,[r7,#12]
 3019 00b0 0A43     	 orrs r2,r2,r1
 3020 00b2 C3F8A820 	 str r2,[r3,#168]
1236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 3021              	 .loc 2 1236 0
 3022 00b6 1C37     	 adds r7,r7,#28
 3023              	.LCFI233:
 3024              	 .cfi_def_cfa_offset 4
 3025 00b8 BD46     	 mov sp,r7
 3026              	.LCFI234:
 3027              	 .cfi_def_cfa_register 13
 3028              	 
 3029 00ba 5DF8047B 	 ldr r7,[sp],#4
 3030              	.LCFI235:
 3031              	 .cfi_restore 7
 3032              	 .cfi_def_cfa_offset 0
 3033 00be 7047     	 bx lr
 3034              	 .cfi_endproc
 3035              	.LFE262:
 3037              	 .section .text.XMC_CCU8_SLICE_SetPassiveLevel,"ax",%progbits
 3038              	 .align 2
 3039              	 .global XMC_CCU8_SLICE_SetPassiveLevel
 3040              	 .thumb
 3041              	 .thumb_func
 3043              	XMC_CCU8_SLICE_SetPassiveLevel:
 3044              	.LFB263:
1237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Asserts passive level for the slice output */
1239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
1240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
1241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 3045              	 .loc 2 1242 0
 3046              	 .cfi_startproc
 3047              	 
 3048              	 
 3049              	 
 3050 0000 80B4     	 push {r7}
 3051              	.LCFI236:
 3052              	 .cfi_def_cfa_offset 4
 3053              	 .cfi_offset 7,-4
 3054 0002 85B0     	 sub sp,sp,#20
 3055              	.LCFI237:
 3056              	 .cfi_def_cfa_offset 24
 3057 0004 00AF     	 add r7,sp,#0
 3058              	.LCFI238:
 3059              	 .cfi_def_cfa_register 7
 3060 0006 7860     	 str r0,[r7,#4]
 3061 0008 0B46     	 mov r3,r1
 3062 000a FB70     	 strb r3,[r7,#3]
 3063 000c 1346     	 mov r3,r2
 3064 000e BB70     	 strb r3,[r7,#2]
1243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   uint32_t psl;
1244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Output", XMC_CCU8_SLICE_CHECK_OUTPUT(out
1247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Passive Level",
1248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****              ((level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW) ||\
1249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****               (level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH)));
1250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   psl = slice->PSL;
 3065              	 .loc 2 1251 0
 3066 0010 7B68     	 ldr r3,[r7,#4]
 3067 0012 9B69     	 ldr r3,[r3,#24]
 3068 0014 FB60     	 str r3,[r7,#12]
1252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   psl &= ~((uint32_t) out);
 3069              	 .loc 2 1253 0
 3070 0016 FB78     	 ldrb r3,[r7,#3]
 3071 0018 DB43     	 mvns r3,r3
 3072 001a FA68     	 ldr r2,[r7,#12]
 3073 001c 1340     	 ands r3,r3,r2
 3074 001e FB60     	 str r3,[r7,#12]
1254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   psl |= (uint32_t) level << ((uint32_t)out >> 1U);
 3075              	 .loc 2 1254 0
 3076 0020 BB78     	 ldrb r3,[r7,#2]
 3077 0022 FA78     	 ldrb r2,[r7,#3]
 3078 0024 5208     	 lsrs r2,r2,#1
 3079 0026 D2B2     	 uxtb r2,r2
 3080 0028 9340     	 lsls r3,r3,r2
 3081 002a FA68     	 ldr r2,[r7,#12]
 3082 002c 1343     	 orrs r3,r3,r2
 3083 002e FB60     	 str r3,[r7,#12]
1255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program CC8 slice output passive level */
1257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->PSL = psl;
 3084              	 .loc 2 1257 0
 3085 0030 7B68     	 ldr r3,[r7,#4]
 3086 0032 9A69     	 ldr r2,[r3,#24]
 3087 0034 0021     	 movs r1,#0
 3088 0036 FA68     	 ldr r2,[r7,#12]
 3089 0038 0A43     	 orrs r2,r2,r1
 3090 003a 9A61     	 str r2,[r3,#24]
1258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 3091              	 .loc 2 1258 0
 3092 003c 1437     	 adds r7,r7,#20
 3093              	.LCFI239:
 3094              	 .cfi_def_cfa_offset 4
 3095 003e BD46     	 mov sp,r7
 3096              	.LCFI240:
 3097              	 .cfi_def_cfa_register 13
 3098              	 
 3099 0040 5DF8047B 	 ldr r7,[sp],#4
 3100              	.LCFI241:
 3101              	 .cfi_restore 7
 3102              	 .cfi_def_cfa_offset 0
 3103 0044 7047     	 bx lr
 3104              	 .cfi_endproc
 3105              	.LFE263:
 3107              	 .section .text.XMC_CCU8_SLICE_DeadTimeInit,"ax",%progbits
 3108              	 .align 2
 3109              	 .global XMC_CCU8_SLICE_DeadTimeInit
 3110              	 .thumb
 3111              	 .thumb_func
 3113              	XMC_CCU8_SLICE_DeadTimeInit:
 3114              	.LFB264:
1259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Initializes Dead time configuration for the slice outputs */
1261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
1262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config)
1263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 3115              	 .loc 2 1263 0
 3116              	 .cfi_startproc
 3117              	 
 3118              	 
 3119              	 
 3120 0000 80B4     	 push {r7}
 3121              	.LCFI242:
 3122              	 .cfi_def_cfa_offset 4
 3123              	 .cfi_offset 7,-4
 3124 0002 83B0     	 sub sp,sp,#12
 3125              	.LCFI243:
 3126              	 .cfi_def_cfa_offset 16
 3127 0004 00AF     	 add r7,sp,#0
 3128              	.LCFI244:
 3129              	 .cfi_def_cfa_register 7
 3130 0006 7860     	 str r0,[r7,#4]
 3131 0008 3960     	 str r1,[r7]
1264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 1 */
1267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->DC1R = config->dc1r;
 3132              	 .loc 2 1267 0
 3133 000a 3B68     	 ldr r3,[r7]
 3134 000c 5A68     	 ldr r2,[r3,#4]
 3135 000e 7B68     	 ldr r3,[r7,#4]
 3136 0010 196D     	 ldr r1,[r3,#80]
 3137 0012 0021     	 movs r1,#0
 3138 0014 0A43     	 orrs r2,r2,r1
 3139 0016 1A65     	 str r2,[r3,#80]
1268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 2 */
1269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = config->dc2r;
 3140              	 .loc 2 1269 0
 3141 0018 3B68     	 ldr r3,[r7]
 3142 001a 9A68     	 ldr r2,[r3,#8]
 3143 001c 7B68     	 ldr r3,[r7,#4]
 3144 001e 596D     	 ldr r1,[r3,#84]
 3145 0020 0021     	 movs r1,#0
 3146 0022 0A43     	 orrs r2,r2,r1
 3147 0024 5A65     	 str r2,[r3,#84]
1270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   /* Program dead time control configuration */
1271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->DTC = config->dtc;
 3148              	 .loc 2 1271 0
 3149 0026 3B68     	 ldr r3,[r7]
 3150 0028 1A68     	 ldr r2,[r3]
 3151 002a 7B68     	 ldr r3,[r7,#4]
 3152 002c D96C     	 ldr r1,[r3,#76]
 3153 002e 0021     	 movs r1,#0
 3154 0030 0A43     	 orrs r2,r2,r1
 3155 0032 DA64     	 str r2,[r3,#76]
1272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 3156              	 .loc 2 1272 0
 3157 0034 0C37     	 adds r7,r7,#12
 3158              	.LCFI245:
 3159              	 .cfi_def_cfa_offset 4
 3160 0036 BD46     	 mov sp,r7
 3161              	.LCFI246:
 3162              	 .cfi_def_cfa_register 13
 3163              	 
 3164 0038 5DF8047B 	 ldr r7,[sp],#4
 3165              	.LCFI247:
 3166              	 .cfi_restore 7
 3167              	 .cfi_def_cfa_offset 0
 3168 003c 7047     	 bx lr
 3169              	 .cfi_endproc
 3170              	.LFE264:
 3172 003e 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureDeadTime,"ax",%progbits
 3173              	 .align 2
 3174              	 .global XMC_CCU8_SLICE_ConfigureDeadTime
 3175              	 .thumb
 3176              	 .thumb_func
 3178              	XMC_CCU8_SLICE_ConfigureDeadTime:
 3179              	.LFB265:
1273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Activates or deactivates dead time for compare channel and ST path */
1275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask)
1276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 3180              	 .loc 2 1276 0
 3181              	 .cfi_startproc
 3182              	 
 3183              	 
 3184              	 
 3185 0000 80B4     	 push {r7}
 3186              	.LCFI248:
 3187              	 .cfi_def_cfa_offset 4
 3188              	 .cfi_offset 7,-4
 3189 0002 83B0     	 sub sp,sp,#12
 3190              	.LCFI249:
 3191              	 .cfi_def_cfa_offset 16
 3192 0004 00AF     	 add r7,sp,#0
 3193              	.LCFI250:
 3194              	 .cfi_def_cfa_register 7
 3195 0006 7860     	 str r0,[r7,#4]
 3196 0008 0B46     	 mov r3,r1
 3197 000a FB70     	 strb r3,[r7,#3]
1277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Channel", (mask <= XMC_CCU8_SLICE_DEAD_TIME_
1279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK);
 3198              	 .loc 2 1280 0
 3199 000c 7B68     	 ldr r3,[r7,#4]
 3200 000e DB6C     	 ldr r3,[r3,#76]
 3201 0010 23F03F02 	 bic r2,r3,#63
 3202 0014 7B68     	 ldr r3,[r7,#4]
 3203 0016 D96C     	 ldr r1,[r3,#76]
 3204 0018 0021     	 movs r1,#0
 3205 001a 0A43     	 orrs r2,r2,r1
 3206 001c DA64     	 str r2,[r3,#76]
1281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= (uint32_t) mask;
 3207              	 .loc 2 1281 0
 3208 001e 7B68     	 ldr r3,[r7,#4]
 3209 0020 DA6C     	 ldr r2,[r3,#76]
 3210 0022 FB78     	 ldrb r3,[r7,#3]
 3211 0024 1A43     	 orrs r2,r2,r3
 3212 0026 7B68     	 ldr r3,[r7,#4]
 3213 0028 D96C     	 ldr r1,[r3,#76]
 3214 002a 0021     	 movs r1,#0
 3215 002c 0A43     	 orrs r2,r2,r1
 3216 002e DA64     	 str r2,[r3,#76]
1282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 3217              	 .loc 2 1282 0
 3218 0030 0C37     	 adds r7,r7,#12
 3219              	.LCFI251:
 3220              	 .cfi_def_cfa_offset 4
 3221 0032 BD46     	 mov sp,r7
 3222              	.LCFI252:
 3223              	 .cfi_def_cfa_register 13
 3224              	 
 3225 0034 5DF8047B 	 ldr r7,[sp],#4
 3226              	.LCFI253:
 3227              	 .cfi_restore 7
 3228              	 .cfi_def_cfa_offset 0
 3229 0038 7047     	 bx lr
 3230              	 .cfi_endproc
 3231              	.LFE265:
 3233 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetDeadTimeValue,"ax",%progbits
 3234              	 .align 2
 3235              	 .global XMC_CCU8_SLICE_SetDeadTimeValue
 3236              	 .thumb
 3237              	 .thumb_func
 3239              	XMC_CCU8_SLICE_SetDeadTimeValue:
 3240              	.LFB266:
1283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Configures rising edge delay and falling edge delay for dead time */
1285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
1286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t rise_value,
1288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t fall_value)
1289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 3241              	 .loc 2 1289 0
 3242              	 .cfi_startproc
 3243              	 
 3244              	 
 3245              	 
 3246 0000 80B4     	 push {r7}
 3247              	.LCFI254:
 3248              	 .cfi_def_cfa_offset 4
 3249              	 .cfi_offset 7,-4
 3250 0002 83B0     	 sub sp,sp,#12
 3251              	.LCFI255:
 3252              	 .cfi_def_cfa_offset 16
 3253 0004 00AF     	 add r7,sp,#0
 3254              	.LCFI256:
 3255              	 .cfi_def_cfa_register 7
 3256 0006 7860     	 str r0,[r7,#4]
 3257 0008 0846     	 mov r0,r1
 3258 000a 1146     	 mov r1,r2
 3259 000c 1A46     	 mov r2,r3
 3260 000e 0346     	 mov r3,r0
 3261 0010 FB70     	 strb r3,[r7,#3]
 3262 0012 0B46     	 mov r3,r1
 3263 0014 BB70     	 strb r3,[r7,#2]
 3264 0016 1346     	 mov r3,r2
 3265 0018 7B70     	 strb r3,[r7,#1]
1290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(c
1292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 3266              	 .loc 2 1293 0
 3267 001a FB78     	 ldrb r3,[r7,#3]
 3268 001c 002B     	 cmp r3,#0
 3269 001e 09D1     	 bne .L103
1294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****     slice->DC1R = (((uint32_t) fall_value) << CCU8_CC8_DC1R_DT1F_Pos) | ((uint32_t) rise_value);
 3270              	 .loc 2 1295 0
 3271 0020 7B78     	 ldrb r3,[r7,#1]
 3272 0022 1A02     	 lsls r2,r3,#8
 3273 0024 BB78     	 ldrb r3,[r7,#2]
 3274 0026 1A43     	 orrs r2,r2,r3
 3275 0028 7B68     	 ldr r3,[r7,#4]
 3276 002a 196D     	 ldr r1,[r3,#80]
 3277 002c 0021     	 movs r1,#0
 3278 002e 0A43     	 orrs r2,r2,r1
 3279 0030 1A65     	 str r2,[r3,#80]
 3280 0032 08E0     	 b .L102
 3281              	.L103:
1296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   else
1298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   {
1299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = (((uint32_t) fall_value) << CCU8_CC8_DC2R_DT2F_Pos) | ((uint32_t) rise_value);
 3282              	 .loc 2 1299 0
 3283 0034 7B78     	 ldrb r3,[r7,#1]
 3284 0036 1A02     	 lsls r2,r3,#8
 3285 0038 BB78     	 ldrb r3,[r7,#2]
 3286 003a 1A43     	 orrs r2,r2,r3
 3287 003c 7B68     	 ldr r3,[r7,#4]
 3288 003e 596D     	 ldr r1,[r3,#84]
 3289 0040 0021     	 movs r1,#0
 3290 0042 0A43     	 orrs r2,r2,r1
 3291 0044 5A65     	 str r2,[r3,#84]
 3292              	.L102:
1300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   }
1301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 3293              	 .loc 2 1301 0
 3294 0046 0C37     	 adds r7,r7,#12
 3295              	.LCFI257:
 3296              	 .cfi_def_cfa_offset 4
 3297 0048 BD46     	 mov sp,r7
 3298              	.LCFI258:
 3299              	 .cfi_def_cfa_register 13
 3300              	 
 3301 004a 5DF8047B 	 ldr r7,[sp],#4
 3302              	.LCFI259:
 3303              	 .cfi_restore 7
 3304              	 .cfi_def_cfa_offset 0
 3305 004e 7047     	 bx lr
 3306              	 .cfi_endproc
 3307              	.LFE266:
 3309              	 .section .text.XMC_CCU8_SLICE_SetDeadTimePrescaler,"ax",%progbits
 3310              	 .align 2
 3311              	 .global XMC_CCU8_SLICE_SetDeadTimePrescaler
 3312              	 .thumb
 3313              	 .thumb_func
 3315              	XMC_CCU8_SLICE_SetDeadTimePrescaler:
 3316              	.LFB267:
1302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Configures clock division factor for dead time */
1304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
1305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 3317              	 .loc 2 1305 0
 3318              	 .cfi_startproc
 3319              	 
 3320              	 
 3321              	 
 3322 0000 80B4     	 push {r7}
 3323              	.LCFI260:
 3324              	 .cfi_def_cfa_offset 4
 3325              	 .cfi_offset 7,-4
 3326 0002 83B0     	 sub sp,sp,#12
 3327              	.LCFI261:
 3328              	 .cfi_def_cfa_offset 16
 3329 0004 00AF     	 add r7,sp,#0
 3330              	.LCFI262:
 3331              	 .cfi_def_cfa_register 7
 3332 0006 7860     	 str r0,[r7,#4]
 3333 0008 0B46     	 mov r3,r1
 3334 000a FB70     	 strb r3,[r7,#3]
1306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid divider value", XMC_CCU8_SLICE_CHECK_DTC_
1308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) CCU8_CC8_DTC_DTCC_Msk);
 3335              	 .loc 2 1309 0
 3336 000c 7B68     	 ldr r3,[r7,#4]
 3337 000e DB6C     	 ldr r3,[r3,#76]
 3338 0010 23F0C002 	 bic r2,r3,#192
 3339 0014 7B68     	 ldr r3,[r7,#4]
 3340 0016 D96C     	 ldr r1,[r3,#76]
 3341 0018 0021     	 movs r1,#0
 3342 001a 0A43     	 orrs r2,r2,r1
 3343 001c DA64     	 str r2,[r3,#76]
1310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= ((uint32_t) div_val) << CCU8_CC8_DTC_DTCC_Pos;
 3344              	 .loc 2 1310 0
 3345 001e 7B68     	 ldr r3,[r7,#4]
 3346 0020 DA6C     	 ldr r2,[r3,#76]
 3347 0022 FB78     	 ldrb r3,[r7,#3]
 3348 0024 9B01     	 lsls r3,r3,#6
 3349 0026 1A43     	 orrs r2,r2,r3
 3350 0028 7B68     	 ldr r3,[r7,#4]
 3351 002a D96C     	 ldr r1,[r3,#76]
 3352 002c 0021     	 movs r1,#0
 3353 002e 0A43     	 orrs r2,r2,r1
 3354 0030 DA64     	 str r2,[r3,#76]
1311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 3355              	 .loc 2 1311 0
 3356 0032 0C37     	 adds r7,r7,#12
 3357              	.LCFI263:
 3358              	 .cfi_def_cfa_offset 4
 3359 0034 BD46     	 mov sp,r7
 3360              	.LCFI264:
 3361              	 .cfi_def_cfa_register 13
 3362              	 
 3363 0036 5DF8047B 	 ldr r7,[sp],#4
 3364              	.LCFI265:
 3365              	 .cfi_restore 7
 3366              	 .cfi_def_cfa_offset 0
 3367 003a 7047     	 bx lr
 3368              	 .cfi_endproc
 3369              	.LFE267:
 3371              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput,"ax",%progbits
 3372              	 .align 2
 3373              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOutput
 3374              	 .thumb
 3375              	 .thumb_func
 3377              	XMC_CCU8_SLICE_ConfigureStatusBitOutput:
 3378              	.LFB268:
1312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** /* Configures status ST1, ST2 mapping to STy */
1314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
1315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** {
 3379              	 .loc 2 1315 0
 3380              	 .cfi_startproc
 3381              	 
 3382              	 
 3383              	 
 3384 0000 80B4     	 push {r7}
 3385              	.LCFI266:
 3386              	 .cfi_def_cfa_offset 4
 3387              	 .cfi_offset 7,-4
 3388 0002 83B0     	 sub sp,sp,#12
 3389              	.LCFI267:
 3390              	 .cfi_def_cfa_offset 16
 3391 0004 00AF     	 add r7,sp,#0
 3392              	.LCFI268:
 3393              	 .cfi_def_cfa_register 7
 3394 0006 7860     	 str r0,[r7,#4]
 3395 0008 0B46     	 mov r3,r1
 3396 000a FB70     	 strb r3,[r7,#3]
1316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Channel", XMC_CCU8_SLICE_CHECK_SLICE_
1318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** 
1319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_STOS_Msk);
 3397              	 .loc 2 1319 0
 3398 000c 7B68     	 ldr r3,[r7,#4]
 3399 000e 5B69     	 ldr r3,[r3,#20]
 3400 0010 23F0C042 	 bic r2,r3,#1610612736
 3401 0014 7B68     	 ldr r3,[r7,#4]
 3402 0016 5969     	 ldr r1,[r3,#20]
 3403 0018 0021     	 movs r1,#0
 3404 001a 0A43     	 orrs r2,r2,r1
 3405 001c 5A61     	 str r2,[r3,#20]
1320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c ****   slice->TC |= ((uint32_t) channel) << CCU8_CC8_TC_STOS_Pos;
 3406              	 .loc 2 1320 0
 3407 001e 7B68     	 ldr r3,[r7,#4]
 3408 0020 5A69     	 ldr r2,[r3,#20]
 3409 0022 FB78     	 ldrb r3,[r7,#3]
 3410 0024 5B07     	 lsls r3,r3,#29
 3411 0026 1A43     	 orrs r2,r2,r3
 3412 0028 7B68     	 ldr r3,[r7,#4]
 3413 002a 5969     	 ldr r1,[r3,#20]
 3414 002c 0021     	 movs r1,#0
 3415 002e 0A43     	 orrs r2,r2,r1
 3416 0030 5A61     	 str r2,[r3,#20]
1321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ccu8.c **** }
 3417              	 .loc 2 1321 0
 3418 0032 0C37     	 adds r7,r7,#12
 3419              	.LCFI269:
 3420              	 .cfi_def_cfa_offset 4
 3421 0034 BD46     	 mov sp,r7
 3422              	.LCFI270:
 3423              	 .cfi_def_cfa_register 13
 3424              	 
 3425 0036 5DF8047B 	 ldr r7,[sp],#4
 3426              	.LCFI271:
 3427              	 .cfi_restore 7
 3428              	 .cfi_def_cfa_offset 0
 3429 003a 7047     	 bx lr
 3430              	 .cfi_endproc
 3431              	.LFE268:
 3433              	 .text
 3434              	.Letext0:
 3435              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3436              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3437              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 3438              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_scu.h"
 3439              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 3440              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu8.c
    {standard input}:20     .text.XMC_CCU8_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU8_StartPrescaler:00000000 XMC_CCU8_StartPrescaler
    {standard input}:69     .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:73     .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:114    .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:118    .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 XMC_CCU8_SLICE_SetDitherCompareValue
    {standard input}:162    .text.XMC_CCU8_lAssertReset:00000000 $t
    {standard input}:166    .text.XMC_CCU8_lAssertReset:00000000 XMC_CCU8_lAssertReset
    {standard input}:216    .text.XMC_CCU8_lAssertReset:00000030 $d
    {standard input}:222    .text.XMC_CCU8_lDeassertReset:00000000 $t
    {standard input}:226    .text.XMC_CCU8_lDeassertReset:00000000 XMC_CCU8_lDeassertReset
    {standard input}:275    .text.XMC_CCU8_lDeassertReset:00000030 $d
    {standard input}:281    .text.XMC_CCU8_lGateClock:00000000 $t
    {standard input}:285    .text.XMC_CCU8_lGateClock:00000000 XMC_CCU8_lGateClock
    {standard input}:334    .text.XMC_CCU8_lGateClock:00000030 $d
    {standard input}:340    .text.XMC_CCU8_lUngateClock:00000000 $t
    {standard input}:344    .text.XMC_CCU8_lUngateClock:00000000 XMC_CCU8_lUngateClock
    {standard input}:393    .text.XMC_CCU8_lUngateClock:00000030 $d
    {standard input}:399    .text.XMC_CCU8_EnableModule:00000000 $t
    {standard input}:404    .text.XMC_CCU8_EnableModule:00000000 XMC_CCU8_EnableModule
    {standard input}:444    .text.XMC_CCU8_DisableModule:00000000 $t
    {standard input}:449    .text.XMC_CCU8_DisableModule:00000000 XMC_CCU8_DisableModule
    {standard input}:486    .text.XMC_CCU8_Init:00000000 $t
    {standard input}:491    .text.XMC_CCU8_Init:00000000 XMC_CCU8_Init
    {standard input}:551    .text.XMC_CCU8_SetModuleClock:00000000 $t
    {standard input}:556    .text.XMC_CCU8_SetModuleClock:00000000 XMC_CCU8_SetModuleClock
    {standard input}:614    .text.XMC_CCU8_SLICE_CompareInit:00000000 $t
    {standard input}:619    .text.XMC_CCU8_SLICE_CompareInit:00000000 XMC_CCU8_SLICE_CompareInit
    {standard input}:723    .text.XMC_CCU8_SLICE_CaptureInit:00000000 $t
    {standard input}:728    .text.XMC_CCU8_SLICE_CaptureInit:00000000 XMC_CCU8_SLICE_CaptureInit
    {standard input}:804    .text.XMC_CCU8_SLICE_SetOutPath:00000000 $t
    {standard input}:809    .text.XMC_CCU8_SLICE_SetOutPath:00000000 XMC_CCU8_SLICE_SetOutPath
    {standard input}:869    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:874    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 XMC_CCU8_SetMultiChannelShadowTransferMode
    {standard input}:934    .text.XMC_CCU8_SLICE_StartConfig:00000000 $t
    {standard input}:939    .text.XMC_CCU8_SLICE_StartConfig:00000000 XMC_CCU8_SLICE_StartConfig
    {standard input}:1024   .text.XMC_CCU8_SLICE_StopConfig:00000000 $t
    {standard input}:1029   .text.XMC_CCU8_SLICE_StopConfig:00000000 XMC_CCU8_SLICE_StopConfig
    {standard input}:1110   .text.XMC_CCU8_SLICE_LoadConfig:00000000 $t
    {standard input}:1115   .text.XMC_CCU8_SLICE_LoadConfig:00000000 XMC_CCU8_SLICE_LoadConfig
    {standard input}:1173   .text.XMC_CCU8_SLICE_LoadSelector:00000000 $t
    {standard input}:1178   .text.XMC_CCU8_SLICE_LoadSelector:00000000 XMC_CCU8_SLICE_LoadSelector
    {standard input}:1236   .text.XMC_CCU8_SLICE_ModulationConfig:00000000 $t
    {standard input}:1241   .text.XMC_CCU8_SLICE_ModulationConfig:00000000 XMC_CCU8_SLICE_ModulationConfig
    {standard input}:1357   .text.XMC_CCU8_SLICE_CountConfig:00000000 $t
    {standard input}:1362   .text.XMC_CCU8_SLICE_CountConfig:00000000 XMC_CCU8_SLICE_CountConfig
    {standard input}:1420   .text.XMC_CCU8_SLICE_GateConfig:00000000 $t
    {standard input}:1425   .text.XMC_CCU8_SLICE_GateConfig:00000000 XMC_CCU8_SLICE_GateConfig
    {standard input}:1483   .text.XMC_CCU8_SLICE_Capture0Config:00000000 $t
    {standard input}:1488   .text.XMC_CCU8_SLICE_Capture0Config:00000000 XMC_CCU8_SLICE_Capture0Config
    {standard input}:1546   .text.XMC_CCU8_SLICE_Capture1Config:00000000 $t
    {standard input}:1551   .text.XMC_CCU8_SLICE_Capture1Config:00000000 XMC_CCU8_SLICE_Capture1Config
    {standard input}:1609   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 $t
    {standard input}:1614   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 XMC_CCU8_SLICE_DirectionConfig
    {standard input}:1672   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1677   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU8_SLICE_StatusBitOverrideConfig
    {standard input}:1731   .text.XMC_CCU8_SLICE_TrapConfig:00000000 $t
    {standard input}:1736   .text.XMC_CCU8_SLICE_TrapConfig:00000000 XMC_CCU8_SLICE_TrapConfig
    {standard input}:1835   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1840   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1976   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1981   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 XMC_CCU8_SLICE_ConfigureEvent
    {standard input}:2122   .text.XMC_CCU8_SLICE_SetInput:00000000 $t
    {standard input}:2127   .text.XMC_CCU8_SLICE_SetInput:00000000 XMC_CCU8_SLICE_SetInput
    {standard input}:2200   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:2205   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 XMC_CCU8_SLICE_SetTimerRepeatMode
    {standard input}:2268   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:2273   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 XMC_CCU8_SLICE_SetTimerCountingMode
    {standard input}:2336   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:2341   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_SetTimerPeriodMatch
    {standard input}:2385   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:2390   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU8_SLICE_GetCaptureRegisterValue
    {standard input}:2435   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2440   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU8_SLICE_GetLastCapturedTimerValue
    {standard input}:2558   .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2563   .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 XMC_CCU8_SLICE_GetCapturedValueFromFifo
    {standard input}:2618   .text.XMC_CCU8_SLICE_EnableDithering:00000000 $t
    {standard input}:2623   .text.XMC_CCU8_SLICE_EnableDithering:00000000 XMC_CCU8_SLICE_EnableDithering
    {standard input}:2701   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 $t
    {standard input}:2706   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 XMC_CCU8_SLICE_SetPrescaler
    {standard input}:2771   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:2776   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 XMC_CCU8_SLICE_SetTimerCompareMatch
    {standard input}:2836   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 $t
    {standard input}:2841   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 XMC_CCU8_SLICE_GetTimerCompareMatch
    {standard input}:2896   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2901   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 XMC_CCU8_SLICE_SetInterruptNode
    {standard input}:2935   .text.XMC_CCU8_SLICE_SetInterruptNode:00000024 $d
    {standard input}:2945   .text.XMC_CCU8_SLICE_SetInterruptNode:0000004c $t
    {standard input}:3038   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:3043   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 XMC_CCU8_SLICE_SetPassiveLevel
    {standard input}:3108   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 $t
    {standard input}:3113   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 XMC_CCU8_SLICE_DeadTimeInit
    {standard input}:3173   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 $t
    {standard input}:3178   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 XMC_CCU8_SLICE_ConfigureDeadTime
    {standard input}:3234   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 $t
    {standard input}:3239   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 XMC_CCU8_SLICE_SetDeadTimeValue
    {standard input}:3310   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 $t
    {standard input}:3315   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 XMC_CCU8_SLICE_SetDeadTimePrescaler
    {standard input}:3372   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 $t
    {standard input}:3377   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOutput
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_EnableClock
