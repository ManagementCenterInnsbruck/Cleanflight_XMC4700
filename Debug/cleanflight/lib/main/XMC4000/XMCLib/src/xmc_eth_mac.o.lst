   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_eth_mac.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ETH_MAC_Reset,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ETH_MAC_Reset:
  25              	.LFB135:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_eth_mac.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @file xmc_eth_mac.h
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @date 2018-08-08
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @cond
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * All rights reserved.                        
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *                                             
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * following conditions are met:   
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *                                                                              
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * disclaimer.                        
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * products derived from this software without specific prior written permission.                  
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *                                                                              
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *                                                                              
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Change History
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * --------------
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2015-06-20:
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Initial
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2016-04-25:
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Change XMC_ETH_MAC_BUF_SIZE to 1524 to allow for Tagged MAC frame format
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *  
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2016-05-19:
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_GetTxBuffer() and XMC_ETH_MAC_GetRxBuffer()
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_SetTxBufferSize()
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2016-06-08:
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_IsRxDescriptorOwnedByDma()
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2017-02-25:
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *      - XMC_ETH_MAC_SetPortControl() fixed compilation warning
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-02:
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_InitPTPEx()
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_SetPTPTime()
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_UpdateAddend()
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-11:
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_EnablePTPAlarm() and XMC_ETH_MAC_DisablePTPAlarm
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-17:
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed ordering of PTP nanoseconds and seconds in XMC_ETH_MAC_DMA_DESC_t
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2017-08-07:
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_TIMESTAMP_STATUS_t
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2017-09-27:
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_InitEx()
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - XMC_ETH_MAC_SetAddressEx(), XMC_ETH_MAC_GetAddressEx() and XMC_ETH_MAC_SetAddressPerfectFi
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2018-06-21:
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Changed definition of XMC_ETH_MAC_DMA_DESC_t declaring its fields volatile
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * 2018-08-08:
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed XMC_ETH_MAC_SetVLANTag() which now accepts a 32bit tag parameter that allows setting
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @endcond
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup XMClib XMC Peripheral Library
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @{
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup ETH_MAC
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @brief Ethernet Low level driver for XMC4000 microcontroller family.
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The Ethernet MAC (ETH) is a major communication peripheral that supports 10/100
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * MBit/s data transfer rates in compliance with the IEEE 802.3-2002 standard. The ETH
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * may be used to implement internet connected applications using IPv4 and IPv6. The
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH also includes support for IEEE1588 time synchronisation to allow implementation
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * of Real Time Ethernet protocols.
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The XMC_ETH_MAC low level driver provides functions to configure and initialize
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * the ETH_MAC hardware peripheral.
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @{
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #ifndef XMC_ETH_MAC_H
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_H
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * HEADER FILES
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_common.h"
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #if defined (ETH0)
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_eth_mac_map.h"
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * MACROS
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_BUF_SIZE           (1524)     /**< ETH MAC buffer size */
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_PHY_MAX_RETRIES    (0xffffUL) /**< Maximum retries */
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_WAKEUP_REGISTER_LENGTH (8U)       /**< Remote wakeup frame reg length */
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * TDES0 Descriptor TX Packet Control/Status
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IC   (0x40000000U) /**< Interrupt on competition */
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LS   (0x20000000U) /**< Last segment */
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FS   (0x10000000U) /**< First segment */
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DC   (0x08000000U) /**< Disable CRC */
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DP   (0x04000000U) /**< Disable pad */
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSE (0x02000000U) /**< Transmit time stamp enable */
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CIC  (0x00C00000U) /**< Checksum insertion control */
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TER  (0x00200000U) /**< Transmit end of ring */
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TCH  (0x00100000U) /**< Second address chained */
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSS (0x00020000U) /**< Transmit time stamp status */
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IHE  (0x00010000U) /**< IP header error */
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ES   (0x00008000U) /**< Error summary */
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_JT   (0x00004000U) /**< Jabber timeout */
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FF   (0x00002000U) /**< Frame flushed */
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IPE  (0x00001000U) /**< IP payload error */
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LOC  (0x00000800U) /**< Loss of carrier */
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_NC   (0x00000400U) /**< No carrier */
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LC   (0x00000200U) /**< Late collision */
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_EC   (0x00000100U) /**< Excessive collision */
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_VF   (0x00000080U) /**< VLAN frame */
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CC   (0x00000078U) /**< Collision count */
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ED   (0x00000004U) /**< Excessive deferral */
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_UF   (0x00000002U) /**< Underflow error */
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DB   (0x00000001U) /**< Deferred bit */
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * RDES0 Descriptor RX Packet Status
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_AFM  (0x40000000U) /**< Destination address filter fail */
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FL   (0x3FFF0000U) /**< Frame length mask */
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ES   (0x00008000U) /**< Error summary */
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DE   (0x00004000U) /**< Descriptor error */
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_SAF  (0x00002000U) /**< Source address filter fail */
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LE   (0x00001000U) /**< Length error */
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OE   (0x00000800U) /**< Overflow error */
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_VLAN (0x00000400U) /**< VLAN tag */
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FS   (0x00000200U) /**< First descriptor */
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LS   (0x00000100U) /**< Last descriptor */
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_TSA  (0x00000080U) /**< Timestamp available */
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LC   (0x00000040U) /**< Late collision */
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FT   (0x00000020U) /**< Frame type */
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RWT  (0x00000010U) /**< Receive watchdog timeout */
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RE   (0x00000008U) /**< Receive error */
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DBE  (0x00000004U) /**< Dribble bit error */
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_CE   (0x00000002U) /**< CRC error */
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ESA  (0x00000001U) /**< Extended Status/Rx MAC address */
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ENUMS
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Ethernet MAC status return values
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_STATUS
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_OK    = 0U, /**< Driver accepted application request */
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_BUSY  = 1U, /**< Driver is busy and cannot handle request */
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_ERROR = 2U  /**< Driver could not fulfil application request */
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_STATUS_t;
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Transmission frame
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TX_FRAME
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_FRAGMENT  = 0x1U, /**< Indicate frame fragment */
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_EVENT     = 0x2U, /**< Generate event when frame is transmitted */
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_TIMESTAMP = 0x4U  /**< Capture frame time stamp */
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TX_FRAME_t;
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC event
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_EVENT
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_PMT = ETH_INTERRUPT_MASK_PMTIM_Msk << 16,        /**< Power management event */
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TIMESTAMP = ETH_INTERRUPT_MASK_TSIM_Msk << 16,   /**< Time stamp event */
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_RECEIVE = ETH_STATUS_ERI_Msk,              /**< Early receive */
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_BUS_ERROR = ETH_STATUS_FBI_Msk,                  /**< Bus error */
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_TRANSMIT = ETH_STATUS_ETI_Msk,             /**< Early transmit */
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT = ETH_STATUS_RWT_Msk,   /**< Receive watchdog time-out
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED = ETH_STATUS_RPS_Msk,    /**< Receive process stopped *
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE = ETH_STATUS_RU_Msk,  /**< Receive buffer unavailabl
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE = ETH_STATUS_RI_Msk,                     /**< Receive event */
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW = ETH_STATUS_UNF_Msk,         /**< Transmit underflow */
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW = ETH_STATUS_OVF_Msk,           /**< Receive overflow */
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT = ETH_STATUS_TJT_Msk,    /**< Transmit jabber time-out 
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE = ETH_STATUS_TU_Msk, /**< Transmit buffer unavailab
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED = ETH_STATUS_TPS_Msk,   /**< Transmit process stopped 
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT = ETH_STATUS_TI_Msk                     /**< Transmit event */
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_EVENT_t;
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Link interface
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_INTERFACE
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_MII, /**< Link interface: Media independent interface */
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_RMII /**< Link interface: Reduced media independent interface */
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_INTERFACE_t;
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH link status
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_STATUS
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_DOWN, /**< Link status down */
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_UP    /**< Link status up */
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_STATUS_t;
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH link speed
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_SPEED
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_10M  = 0UL << ETH_MAC_CONFIGURATION_FES_Pos, /**< Link speed: 10M */
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_100M = 1UL << ETH_MAC_CONFIGURATION_FES_Pos  /**< Link speed: 100M */
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_SPEED_t;
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH duplex settings (full/half?)
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_DUPLEX
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_HALF = 0UL << ETH_MAC_CONFIGURATION_DM_Pos, /**< Half duplex */
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_FULL = 1UL << ETH_MAC_CONFIGURATION_DM_Pos  /**< Full duplex */
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_DUPLEX_t;
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * MAC address filter
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_ADDR_FILTER
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE0 = 0x01000000UL, /**< Address filter mask: byte 0 */
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE1 = 0x02000000UL, /**< Address filter mask: byte 1 */
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE2 = 0x04000000UL, /**< Address filter mask: byte 2 */
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE3 = 0x08000000UL, /**< Address filter mask: byte 3 */
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE4 = 0x10000000UL, /**< Address filter mask: byte 4 */
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE5 = 0x20000000UL, /**< Address filter mask: byte 5 */
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_SA         = 0x40000000UL  /**< Address filter SA */
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_ADDR_FILTER_t;
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Power management events that triggers a PMT interrupt
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_PMT_EVENT
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_WAKEUP_FRAME         = ETH_PMT_CONTROL_STATUS_RWKPKTEN_Msk,  /**< Wakeup
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_MAGIC_PACKET         = ETH_PMT_CONTROL_STATUS_MGKPKTEN_Msk,  /**< Magic 
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_UNICAST_FRAME_FILTER = ETH_PMT_CONTROL_STATUS_GLBLUCAST_Msk  /**< Unicas
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PMT_EVENT_t;
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time-stamp configuration enable
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TIMESTAMP_CONFIG
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE = ETH_TIMESTAMP_CONTROL_TSCFUPDT_Msk,             /**< F
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_TS_INTERRUPT = ETH_TIMESTAMP_CONTROL_TSTRIG_Msk,       /**< T
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_ALL_FRAMES = ETH_TIMESTAMP_CONTROL_TSENALL_Msk,        /**< E
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTPV2 = ETH_TIMESTAMP_CONTROL_TSVER2ENA_Msk,           /**< P
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_ETHERNET = ETH_TIMESTAMP_CONTROL_TSIPENA_Msk, /**< P
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV6 = ETH_TIMESTAMP_CONTROL_TSIPV6ENA_Msk,   /**< P
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV4 = ETH_TIMESTAMP_CONTROL_TSIPV4ENA_Msk,   /**< P
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_MAC_ADDRESS_FILTER = ETH_TIMESTAMP_CONTROL_TSENMACADDR_Msk /*
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIMESTAMP_CONFIG_t;
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time-stamp status
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TIMESTAMP_STATUS
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_SECONDS_OVERFLOW = ETH_TIMESTAMP_STATUS_TSSOVF_Msk,           /**< I
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIME_REACHED = ETH_TIMESTAMP_STATUS_TSTARGT_Msk,       /**< I
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIMER_ERROR = ETH_TIMESTAMP_STATUS_TSTRGTERR_Msk,      /**< S
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIMESTAMP_STATUS_t;
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * DATA STRUCTURES
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard start */
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #pragma push
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #pragma anon_unions
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #pragma warning 586
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #endif
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC port control
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef union XMC_ETH_MAC_PORT_CTRL
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   struct
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   {
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ETH_MAC_PORT_CTRL_RXD0_t) */
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ETH_MAC_PORT_CTRL_RXD1_t) */
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd2: 2;     /**< Receive data bit 2 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD2_t) */
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd3: 2;     /**< Receive data bit 3 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD3_t) */
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_rmii: 2; /**< RMII: Continuous 50 MHz reference clock.
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****                                MII: Receive clock, 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/s
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****                                (::XMC_ETH_MAC_PORT_CTRL_CLK_RMII_t) */
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs_dv: 2;   /**< RMII: carrier sense/RX_Data valid. MII: RX_Data valid (::XMC_ETH_MAC
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs: 2;      /**< Carrier sense for only MII (::XMC_ETH_MAC_PORT_CTRL_CRS_t) */
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxer: 2;     /**< Receive error (::XMC_ETH_MAC_PORT_CTRL_RXER_t) */
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t col: 2;      /**< Collision Detect for only MII (::XMC_ETH_MAC_PORT_CTRL_COL_t) */
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_tx: 2;   /**< Transmit clock (only MII), 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mdio: 2;     /**< Bidirectional, push-pull management data I/O line (::XMC_ETH_MAC_POR
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mode: 1;     /**< RMII or MII (::XMC_ETH_MAC_PORT_CTRL_MODE_t) */
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   };
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint32_t raw;
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PORT_CTRL_t;
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC DMA descriptor
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_DMA_DESC
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t status;                 /**< DMA descriptor status */
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t length;                 /**< Descriptor length */
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t buffer1;                /**< Buffer 1 */
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t buffer2;                /**< Buffer 2 */
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t extended_status;        /**< Extended status */
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t reserved;               /**< Reserved */
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t time_stamp_nanoseconds; /**< Time stamp low */
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t time_stamp_seconds;     /**< Time stamp high */
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_DMA_DESC_t;
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_TIME
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint32_t seconds;                 /**< Seconds */
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   int32_t nanoseconds;              /**< Nanoseconds */
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIME_t;
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * ETH driver structure
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   ETH_GLOBAL_TypeDef *regs;        /**< ETH module 0 (now, we have a single ETH module) */
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint64_t address;              /**< MAC address */
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *rx_desc; /**< DMA descriptor: RX */
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *tx_desc; /**< DMA descriptor: TX */
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *rx_buf;                /**< RX buffer */
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *tx_buf;                /**< TX buffer */
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *frame_end;              /**< End of assembled frame fragments */
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_rx_buf;              /**< How many RX descriptors? */
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_tx_buf;              /**< How many TX descriptors? */
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_index;                /**< Transmit descriptor index */
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint8_t rx_index;                /**< Receive descriptor index */
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_ts_index;             /**< Transmit time-stamp descriptor index */
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_t;
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard end */
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #pragma pop
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #pragma warning restore
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #endif
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * API PROTOTYPES
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #ifdef __cplusplus
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** extern "C" {
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** #endif
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t Initialization status
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the Ethernet MAC peripheral <br>
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * and loop-back settings.
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init(XMC_ETH_MAC_t *const eth_mac);
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the Ethernet MAC peripheral. <br>
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Required when initializing the PHY, to deliver the clocks to the MAC, before MAC is reseted.
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \note The module needs to be enabled before using XMC_ETH_MAC_Enable() <br>
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * and loop-back settings.
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitEx(XMC_ETH_MAC_t *const eth_mac);
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the RX DMA descriptors <br>
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the RX descriptors in a chained configuration. It sets
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitRxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the TX DMA descriptors <br>
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the TX descriptors in a chained configuration. It sets
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitTxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Enable the Ethernet MAC peripheral <br>
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function de-asserts the peripheral reset.
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Enable(XMC_ETH_MAC_t *const eth_mac);
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Disable the Ethernet MAC peripheral <br>
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function asserts the peripheral reset.
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Disable(XMC_ETH_MAC_t *const eth_mac);
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return bool
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Check if the ETH MAC is enabled <br>
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function checks if the ETH MAC is enabled or not. It returns "true" if the
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * peripheral is enabled, "false" otherwise.
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** bool XMC_ETH_MAC_IsEnabled(const XMC_ETH_MAC_t *const eth_mac);
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Reset the ETH MAC peripheral <br>
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function resets the ETH MAC peripheral. It blocks until reset.
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_Reset(XMC_ETH_MAC_t *const eth_mac)
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
  27              	 .loc 1 509 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->BUS_MODE |= (uint32_t)ETH_BUS_MODE_SWR_Msk;
  43              	 .loc 1 510 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1B68     	 ldr r3,[r3]
  46 000c 7A68     	 ldr r2,[r7,#4]
  47 000e 1268     	 ldr r2,[r2]
  48 0010 02F58052 	 add r2,r2,#4096
  49 0014 1268     	 ldr r2,[r2]
  50 0016 42F00102 	 orr r2,r2,#1
  51 001a 03F58053 	 add r3,r3,#4096
  52 001e 1968     	 ldr r1,[r3]
  53 0020 0021     	 movs r1,#0
  54 0022 0A43     	 orrs r2,r2,r1
  55 0024 1A60     	 str r2,[r3]
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   while ((eth_mac->regs->BUS_MODE & (uint32_t)ETH_BUS_MODE_SWR_Msk) != 0U)
  56              	 .loc 1 511 0
  57 0026 00BF     	 nop
  58              	.L2:
  59              	 .loc 1 511 0 is_stmt 0 discriminator 1
  60 0028 7B68     	 ldr r3,[r7,#4]
  61 002a 1B68     	 ldr r3,[r3]
  62 002c 03F58053 	 add r3,r3,#4096
  63 0030 1B68     	 ldr r3,[r3]
  64 0032 03F00103 	 and r3,r3,#1
  65 0036 002B     	 cmp r3,#0
  66 0038 F6D1     	 bne .L2
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   {
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   }
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** }
  67              	 .loc 1 514 0 is_stmt 1
  68 003a 0C37     	 adds r7,r7,#12
  69              	.LCFI3:
  70              	 .cfi_def_cfa_offset 4
  71 003c BD46     	 mov sp,r7
  72              	.LCFI4:
  73              	 .cfi_def_cfa_register 13
  74              	 
  75 003e 5DF8047B 	 ldr r7,[sp],#4
  76              	.LCFI5:
  77              	 .cfi_restore 7
  78              	 .cfi_def_cfa_offset 0
  79 0042 7047     	 bx lr
  80              	 .cfi_endproc
  81              	.LFE135:
  83              	 .section .text.XMC_ETH_MAC_SetAddress,"ax",%progbits
  84              	 .align 2
  85              	 .thumb
  86              	 .thumb_func
  88              	XMC_ETH_MAC_SetAddress:
  89              	.LFB137:
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param data The destination to which the read data needs to be copied to
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Read a PHY register <br>
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially polls busy bit during max
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * PHY_TIMEOUT time and reads the information into 'data' when not busy.
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t re
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param data The data to write
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Write a PHY register <br>
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially writes the data and polls
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * the busy bit until it is no longer busy.
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t r
 547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param port_ctrl Port control configuration
 551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Set port control configuration <br>
 555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the port control by writing the configuration into the
 558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * CON register.
 559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \note
 561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * MII Mode is only available in:
 562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4500 LQFP144 and BGA144 packages
 563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4700 LQFP144 and BGA196 packages
 564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4800 LQFP144 and BGA196 packages
 565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetPortControl(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_POR
 568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
 569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   XMC_UNUSED_ARG(eth_mac);
 570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   ETH0_CON->CON = (uint32_t)port_ctrl.raw;
 571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** }
 572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Set management clock divider <br>
 579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the management clock divider by writing to the GMII_ADDRESS
 582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * register.
 583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider(XMC_ETH_MAC_t *const eth_mac);
 585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** 
 586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** /**
 587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @param addr The MAC address to set
 589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * Set MAC address <br>
 593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  *
 594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * \par
 595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the MAC address by writing to the MAC_ADDRESS0_HIGH and
 596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  * MAC_ADDRESS0_LOW registers.
 597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****  */
 598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetAddress(XMC_ETH_MAC_t *const eth_mac, uint64_t addr)
 599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** {
  90              	 .loc 1 599 0
  91              	 .cfi_startproc
  92              	 
  93              	 
  94              	 
  95 0000 B0B4     	 push {r4,r5,r7}
  96              	.LCFI6:
  97              	 .cfi_def_cfa_offset 12
  98              	 .cfi_offset 4,-12
  99              	 .cfi_offset 5,-8
 100              	 .cfi_offset 7,-4
 101 0002 85B0     	 sub sp,sp,#20
 102              	.LCFI7:
 103              	 .cfi_def_cfa_offset 32
 104 0004 00AF     	 add r7,sp,#0
 105              	.LCFI8:
 106              	 .cfi_def_cfa_register 7
 107 0006 F860     	 str r0,[r7,#12]
 108 0008 C7E90023 	 strd r2,[r7]
 600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_HIGH = (uint32_t)(addr >> 32);
 109              	 .loc 1 600 0
 110 000c FB68     	 ldr r3,[r7,#12]
 111 000e 1968     	 ldr r1,[r3]
 112 0010 D7E90023 	 ldrd r2,[r7]
 113 0014 1C00     	 movs r4,r3
 114 0016 0025     	 movs r5,#0
 115 0018 2246     	 mov r2,r4
 116 001a 0B6C     	 ldr r3,[r1,#64]
 117 001c 0023     	 movs r3,#0
 118 001e 1343     	 orrs r3,r3,r2
 119 0020 0B64     	 str r3,[r1,#64]
 601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_LOW = (uint32_t)addr;
 120              	 .loc 1 601 0
 121 0022 FB68     	 ldr r3,[r7,#12]
 122 0024 1B68     	 ldr r3,[r3]
 123 0026 3A68     	 ldr r2,[r7]
 124 0028 596C     	 ldr r1,[r3,#68]
 125 002a 0021     	 movs r1,#0
 126 002c 0A43     	 orrs r2,r2,r1
 127 002e 5A64     	 str r2,[r3,#68]
 602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_eth_mac.h **** }
 128              	 .loc 1 602 0
 129 0030 1437     	 adds r7,r7,#20
 130              	.LCFI9:
 131              	 .cfi_def_cfa_offset 12
 132 0032 BD46     	 mov sp,r7
 133              	.LCFI10:
 134              	 .cfi_def_cfa_register 13
 135              	 
 136 0034 B0BC     	 pop {r4,r5,r7}
 137              	.LCFI11:
 138              	 .cfi_restore 7
 139              	 .cfi_restore 5
 140              	 .cfi_restore 4
 141              	 .cfi_def_cfa_offset 0
 142 0036 7047     	 bx lr
 143              	 .cfi_endproc
 144              	.LFE137:
 146              	 .section .text.XMC_SCU_CLOCK_GetSystemClockFrequency,"ax",%progbits
 147              	 .align 2
 148              	 .thumb
 149              	 .thumb_func
 151              	XMC_SCU_CLOCK_GetSystemClockFrequency:
 152              	.LFB206:
 153              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_scu.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @date 2016-06-15
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.                        
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                                             
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * following conditions are met:   
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * disclaimer.                        
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Change History
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * --------------
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *      
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks       
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @endcond 
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @{
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @{
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * MACROS
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  purpose. 
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP 
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */ 
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */  
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */ 
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */ 
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */ 
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */ 
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_DSRAM2_MEM)
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */ 
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC1_MEM)
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC2_MEM)
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */ 
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register. 
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */ 
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */ 
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */  
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */ 
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */ 
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */ 
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */ 
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)  
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)  
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating. 
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register. 
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  register. 
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock. 
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock. 
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock 
 549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock 
 551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */ 
 561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock 
 596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration: 
 610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE 
 621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled. 
 656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  state.
 661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  
 662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  stopped. 
 697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled. 
 700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control  
 746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /** 
 775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   */
 777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin. 
 780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin. 
 783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))      
 862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif  
 895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired 
 906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** extern "C" {
 954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
 955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
 958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
 964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * 
 977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
 983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
 986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
 987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
 989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
 990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
 992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
 993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
 994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
 995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
 997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
 998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result. 
1045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n 
1065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if (UC_SERIES != XMC45)
1130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in 
1139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
1184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  
1236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the 
1309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the 
1341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit 
1357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced. 
1373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time. 
1374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);  
1397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API. 
1408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state. 
1473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n 
1476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  
1479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to 
1490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the 
1492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors 
1493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None  
1560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the 
1579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);  
1585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register. 
1635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency. 
1655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
1710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on 
1744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
1751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \note
1768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \note
1808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
1809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \endif
1844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \endif
1847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \endif
1867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \endif
1870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
1880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
1909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
1910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
1912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
1914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
1916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
1919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
1922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
1930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
1931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
1933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
1935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
1937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****                       ((uint32_t)source);
1938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
1942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
1948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
1949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
1953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
1955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
1957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
1961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
1962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
1967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is 
1968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
1969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
1973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
1976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
1977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
1980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
1981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
1984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
1985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
1986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
1987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
1988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
1989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
1990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
1992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
1993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
1994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
1995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
1997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
1998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
2000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
2001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
2002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
2005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
2007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
2161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
2261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
2263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** #endif
2264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the 
2272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status 
2274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the 
2286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * external oscillator. 
2287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays 
2347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status 
2349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() 
2352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \note
2390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return None
2400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \note
2406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The register update in HIB domain is indicated by the MIRRST register which can be polled using 
2407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin 
2415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 154              	 .loc 2 2486 0
 155              	 .cfi_startproc
 156              	 
 157              	 
 158              	 
 159 0000 80B4     	 push {r7}
 160              	.LCFI12:
 161              	 .cfi_def_cfa_offset 4
 162              	 .cfi_offset 7,-4
 163 0002 00AF     	 add r7,sp,#0
 164              	.LCFI13:
 165              	 .cfi_def_cfa_register 7
2487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 166              	 .loc 2 2487 0
 167 0004 064B     	 ldr r3,.L6
 168 0006 1A68     	 ldr r2,[r3]
 169 0008 064B     	 ldr r3,.L6+4
 170 000a 1B69     	 ldr r3,[r3,#16]
 171 000c 03F00103 	 and r3,r3,#1
 172 0010 02FA03F3 	 lsl r3,r2,r3
2488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
 173              	 .loc 2 2488 0
 174 0014 1846     	 mov r0,r3
 175 0016 BD46     	 mov sp,r7
 176              	.LCFI14:
 177              	 .cfi_def_cfa_register 13
 178              	 
 179 0018 5DF8047B 	 ldr r7,[sp],#4
 180              	.LCFI15:
 181              	 .cfi_restore 7
 182              	 .cfi_def_cfa_offset 0
 183 001c 7047     	 bx lr
 184              	.L7:
 185 001e 00BF     	 .align 2
 186              	.L6:
 187 0020 00000000 	 .word SystemCoreClock
 188 0024 00460050 	 .word 1342195200
 189              	 .cfi_endproc
 190              	.LFE206:
 192              	 .section .text.XMC_SCU_CLOCK_GetEthernetClockFrequency,"ax",%progbits
 193              	 .align 2
 194              	 .thumb
 195              	 .thumb_func
 197              	XMC_SCU_CLOCK_GetEthernetClockFrequency:
 198              	.LFB207:
2489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  
2490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  CCU clock frequency in Hertz.
2494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of clock(fCPU) used for CCU4, CCU8, POSIF and HRPWM.\n\n
2497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained from \a CCUDIV bits of \a CCUCLKCR register and system clock (fSYS) freque
2498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fCCU clock frequency is calculated using following formula:\n
2499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * fCCU = fSYS >> CCUDIV.\n
2500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider(), XMC_SCU_CLOCK_GetSystemClockFrequency() \n\n\n
2502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void);
2504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB clock frequency in Hertz.
2507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB and SDMMC clock(fUSB/fSDMMC).\n\n
2510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is obtained from \a USBDIV bits of \a USBCLKCR register and USB clock source.
2511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Based on these values fUSB/fSDMMC clock frequency is calculated using following formula:\n
2512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * if USB clock source = USBPLL: fUSB/fSDMMC = fUSBPLL/(USBDIV + 1).\n
2513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * if USB clock source = PLL:  fUSB/fSDMMC = fPLL/(USBDIV + 1).\n
2514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockSource(), XMC_SCU_CLOCK_GetUsbClockDivider() \n\n\n
2517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void); 
2519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** 
2520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** /**
2521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ethernet clock frequency in Hertz.
2522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  *
2523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of Ethernet clock(fETH).\n\n
2525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * The value is derived from system clock frequency(fSYS). It is calculated using
2526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * the following formula:\n
2527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * fETH = fSYS >> 1;
2528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockFrequency() \n\n\n
2530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****  */
2531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEthernetClockFrequency(void)
2532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** {
 199              	 .loc 2 2532 0
 200              	 .cfi_startproc
 201              	 
 202              	 
 203 0000 80B5     	 push {r7,lr}
 204              	.LCFI16:
 205              	 .cfi_def_cfa_offset 8
 206              	 .cfi_offset 7,-8
 207              	 .cfi_offset 14,-4
 208 0002 00AF     	 add r7,sp,#0
 209              	.LCFI17:
 210              	 .cfi_def_cfa_register 7
2533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h ****   return XMC_SCU_CLOCK_GetSystemClockFrequency() >> 1U;
 211              	 .loc 2 2533 0
 212 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 213 0008 0346     	 mov r3,r0
 214 000a 5B08     	 lsrs r3,r3,#1
2534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc4_scu.h **** }
 215              	 .loc 2 2534 0
 216 000c 1846     	 mov r0,r3
 217 000e 80BD     	 pop {r7,pc}
 218              	 .cfi_endproc
 219              	.LFE207:
 221              	 .section .text.XCM_ETH_MAC_IsNormalEvent,"ax",%progbits
 222              	 .align 2
 223              	 .thumb
 224              	 .thumb_func
 226              	XCM_ETH_MAC_IsNormalEvent:
 227              	.LFB225:
 228              	 .file 3 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /**
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * @file xmc_eth_mac.c
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * @date 2018-08-08
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * @cond
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  **************************************************************************************************
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * All rights reserved.                        
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *                                             
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * following conditions are met:   
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *                                                                              
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * disclaimer.                        
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * products derived from this software without specific prior written permission.                  
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *                                                                              
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *                                                                              
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  **************************************************************************************************
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Change History
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * --------------
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2015-06-20:
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Initial
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2015-09-01:
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Add clock gating control in enable/disable APIs
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Add transmit polling if run out of buffers
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2015-11-30:
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Fix XMC_ETH_MAC_GetRxFrameSize return value in case of errors
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2016-03-16:
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Fix XMC_ETH_MAC_DisableEvent
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2016-05-19:
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_ReturnTxDescriptor and XMC_ETH_MAC_ReturnRxDescriptor
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2016-08-30:
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable MMC interrupt events
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2016-11-22:
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to optimize access to bus
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2017-02-25:
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - XMC_ETH_MAC_Enable() and XMC_ETH_MAC_Disable(), fixed compilation warnings
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2017-03-27:
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable PMT and timestamp interrupt events
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-02:
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_InitPTPEx()
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_SetPTPTime()
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_UpdateAddend() 
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_InitPTP(), XMC_ETH_MAC_UpdatePTPTime(), XMC_ETH_MAC_SetPTPAlarm()
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *       - nanoseconds initializazion
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *       - added polling to wait for setup
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-04:
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable MMC IPC receive interrupt events
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-11:
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_SetPTPAlarm() nanoseconds conversion
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-17:
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_GetTxTimeStamp() and XMC_ETH_MAC_GetRxTimeStamp() return the timestamp
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2017-04-27:
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_GetRxTimeStamp() and XMC_ETH_MAC_GetTxTimeStamp() fixed returned nanosec
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2017-08-03:
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_InitPTP(), XMC_ETH_MAC_InitPTPEx(), XMC_ETH_MAC_GetPTPTime(), XMC_ETH_
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *       rollover mode of nanosecond counter from binary to digital mode, i.e 1ns resolution
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2017-09-27:
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Added XMC_ETH_MAC_InitEx()
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - XMC_ETH_MAC_SetAddressEx(), XMC_ETH_MAC_GetAddressEx() and XMC_ETH_MAC_SetAddressPerfectFi
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2018-06-21:
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *     - Fixed XMC_ETH_MAC_SetAddressPerfectFilterEx()
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * 2018-08-08:
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *      - Fixed XMC_ETH_MAC_SetVLANTag() which now accepts a 32bit tag parameter that allows settin
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * @endcond
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  */
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /*******************************************************************************
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * HEADER FILES
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *******************************************************************************/
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #include <xmc_eth_mac.h>
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #if defined (ETH0)
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #include <stdlib.h>
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #include <xmc_scu.h>
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /*******************************************************************************
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * MACROS
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *******************************************************************************/
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /**
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * ETH MAC clock speed
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  */
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_35MHZ  (35000000U)  /**< ETH MAC clock speed 35 MHZ */
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_60MHZ  (60000000U)  /**< ETH MAC clock speed 60 MHZ */
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_100MHZ (100000000U) /**< ETH MAC clock speed 100 MHZ */
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_150MHZ (150000000U) /**< ETH MAC clock speed 150 MHZ */
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_200MHZ (200000000U) /**< ETH MAC clock speed 200 MHZ */
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_250MHZ (250000000U) /**< ETH MAC clock speed 250 MHZ */
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /**
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * ETH MAC MDC divider
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  */
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_16  (2U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/16 */
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_26  (3U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/26 */
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_42  (0U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/42 */
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_62  (1U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/62 */
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_102 (4U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/102 *
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_124 (5U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/124 *
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /**
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * RDES1 Descriptor RX Packet Control
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  */
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RBS2 (0x1FFF0000U) /**< Receive buffer 2 size */
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RER  (0x00008000U) /**< Receive end of ring */
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RCH  (0x00004000U) /**< Second address chained */
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RBS1 (0x00001FFFU) /**< Receive buffer 1 size */
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /**
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Interrupt masking
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  */
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DISABLE_MMC_INTERRUPT_MSK              (0x03ffffffU) /**< Bit mask to disable MMMC 
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DISABLE_MMC_IPC_RECEIVE_INTERRUPT_MSK  (0x3fff3fffU) /**< Bit mask to disable MMC I
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /**
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Normal MAC events
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  */
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_EVENT_NORMAL (XMC_ETH_MAC_EVENT_TRANSMIT |\
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE |\
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_RECEIVE |\
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_EARLY_RECEIVE)
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /**
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * Abnormal MAC events
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  */
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_EVENT_ABNORMAL (XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED |\
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT |\
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW |\
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW |\
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE |\
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED |\
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT |\
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_EARLY_TRANSMIT |\
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_BUS_ERROR)
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Definition needed in case of device header file previous to v1.5.1*/
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #ifndef ETH_BUS_MODE_ATDS_Msk
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define ETH_BUS_MODE_ATDS_Msk  (0x00000080UL)
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #endif
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Resolution of sub second counter ~ 20ns */
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_SUB_SECOND_UPDATE_FREQ (50000000)
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /*******************************************************************************
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  * API IMPLEMENTATION
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  *******************************************************************************/
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Check if the event passed is a normal event */
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** __STATIC_INLINE bool XCM_ETH_MAC_IsNormalEvent(uint32_t event)
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 229              	 .loc 3 189 0
 230              	 .cfi_startproc
 231              	 
 232              	 
 233              	 
 234 0000 80B4     	 push {r7}
 235              	.LCFI18:
 236              	 .cfi_def_cfa_offset 4
 237              	 .cfi_offset 7,-4
 238 0002 83B0     	 sub sp,sp,#12
 239              	.LCFI19:
 240              	 .cfi_def_cfa_offset 16
 241 0004 00AF     	 add r7,sp,#0
 242              	.LCFI20:
 243              	 .cfi_def_cfa_register 7
 244 0006 7860     	 str r0,[r7,#4]
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return (bool)((event & ((uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT |
 245              	 .loc 3 190 0
 246 0008 7A68     	 ldr r2,[r7,#4]
 247 000a 44F24503 	 movw r3,#16453
 248 000e 1340     	 ands r3,r3,r2
 249 0010 002B     	 cmp r3,#0
 250 0012 14BF     	 ite ne
 251 0014 0123     	 movne r3,#1
 252 0016 0023     	 moveq r3,#0
 253 0018 DBB2     	 uxtb r3,r3
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE |
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE |
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_EARLY_RECEIVE)) != (uint32_t)0);
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 254              	 .loc 3 194 0
 255 001a 1846     	 mov r0,r3
 256 001c 0C37     	 adds r7,r7,#12
 257              	.LCFI21:
 258              	 .cfi_def_cfa_offset 4
 259 001e BD46     	 mov sp,r7
 260              	.LCFI22:
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 0020 5DF8047B 	 ldr r7,[sp],#4
 264              	.LCFI23:
 265              	 .cfi_restore 7
 266              	 .cfi_def_cfa_offset 0
 267 0024 7047     	 bx lr
 268              	 .cfi_endproc
 269              	.LFE225:
 271 0026 00BF     	 .section .text.XCM_ETH_MAC_IsAbnormalEvent,"ax",%progbits
 272              	 .align 2
 273              	 .thumb
 274              	 .thumb_func
 276              	XCM_ETH_MAC_IsAbnormalEvent:
 277              	.LFB226:
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Check if the event passed is an abnormal event */
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** __STATIC_INLINE bool XCM_ETH_MAC_IsAbnormalEvent(uint32_t event)
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 278              	 .loc 3 198 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282              	 
 283 0000 80B4     	 push {r7}
 284              	.LCFI24:
 285              	 .cfi_def_cfa_offset 4
 286              	 .cfi_offset 7,-4
 287 0002 83B0     	 sub sp,sp,#12
 288              	.LCFI25:
 289              	 .cfi_def_cfa_offset 16
 290 0004 00AF     	 add r7,sp,#0
 291              	.LCFI26:
 292              	 .cfi_def_cfa_register 7
 293 0006 7860     	 str r0,[r7,#4]
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****    return (bool)((event & ((uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED |
 294              	 .loc 3 199 0
 295 0008 7A68     	 ldr r2,[r7,#4]
 296 000a 42F2BA73 	 movw r3,#10170
 297 000e 1340     	 ands r3,r3,r2
 298 0010 002B     	 cmp r3,#0
 299 0012 14BF     	 ite ne
 300 0014 0123     	 movne r3,#1
 301 0016 0023     	 moveq r3,#0
 302 0018 DBB2     	 uxtb r3,r3
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT |
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW |
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW |
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE |
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED |
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT |
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_EARLY_TRANSMIT |
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_BUS_ERROR)) != (uint32_t)0);
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  }
 303              	 .loc 3 208 0
 304 001a 1846     	 mov r0,r3
 305 001c 0C37     	 adds r7,r7,#12
 306              	.LCFI27:
 307              	 .cfi_def_cfa_offset 4
 308 001e BD46     	 mov sp,r7
 309              	.LCFI28:
 310              	 .cfi_def_cfa_register 13
 311              	 
 312 0020 5DF8047B 	 ldr r7,[sp],#4
 313              	.LCFI29:
 314              	 .cfi_restore 7
 315              	 .cfi_def_cfa_offset 0
 316 0024 7047     	 bx lr
 317              	 .cfi_endproc
 318              	.LFE226:
 320 0026 00BF     	 .section .text.XMC_ETH_MAC_InitEx,"ax",%progbits
 321              	 .align 2
 322              	 .global XMC_ETH_MAC_InitEx
 323              	 .thumb
 324              	 .thumb_func
 326              	XMC_ETH_MAC_InitEx:
 327              	.LFB227:
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #ifdef XMC_ASSERT_ENABLE 
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****  
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Check if the passed argument is a valid ETH module */ 
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** __STATIC_INLINE bool XMC_ETH_MAC_IsValidModule(ETH_GLOBAL_TypeDef *const eth)
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return (eth == ETH0);
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #endif
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitEx(XMC_ETH_MAC_t *const eth_mac)
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 328              	 .loc 3 221 0
 329              	 .cfi_startproc
 330              	 
 331              	 
 332 0000 80B5     	 push {r7,lr}
 333              	.LCFI30:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 0002 82B0     	 sub sp,sp,#8
 338              	.LCFI31:
 339              	 .cfi_def_cfa_offset 16
 340 0004 00AF     	 add r7,sp,#0
 341              	.LCFI32:
 342              	 .cfi_def_cfa_register 7
 343 0006 7860     	 str r0,[r7,#4]
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitEx: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_Reset(eth_mac);
 344              	 .loc 3 224 0
 345 0008 7868     	 ldr r0,[r7,#4]
 346 000a FFF7FEFF 	 bl XMC_ETH_MAC_Reset
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Initialize MAC configuration */
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MAC_CONFIGURATION = (uint32_t)ETH_MAC_CONFIGURATION_IPC_Msk;
 347              	 .loc 3 227 0
 348 000e 7B68     	 ldr r3,[r7,#4]
 349 0010 1B68     	 ldr r3,[r3]
 350 0012 1A68     	 ldr r2,[r3]
 351 0014 0022     	 movs r2,#0
 352 0016 42F48062 	 orr r2,r2,#1024
 353 001a 1A60     	 str r2,[r3]
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Initialize Filter registers */
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->FLOW_CONTROL = ETH_FLOW_CONTROL_DZPQ_Msk; /* Disable Zero Quanta Pause */
 354              	 .loc 3 230 0
 355 001c 7B68     	 ldr r3,[r7,#4]
 356 001e 1B68     	 ldr r3,[r3]
 357 0020 9A69     	 ldr r2,[r3,#24]
 358 0022 0022     	 movs r2,#0
 359 0024 42F08002 	 orr r2,r2,#128
 360 0028 9A61     	 str r2,[r3,#24]
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE = (uint32_t)ETH_OPERATION_MODE_RSF_Msk |
 361              	 .loc 3 232 0
 362 002a 7B68     	 ldr r3,[r7,#4]
 363 002c 1B68     	 ldr r3,[r3]
 364 002e 03F58053 	 add r3,r3,#4096
 365 0032 1833     	 adds r3,r3,#24
 366 0034 1A68     	 ldr r2,[r3]
 367 0036 0022     	 movs r2,#0
 368 0038 42F00872 	 orr r2,r2,#35651584
 369 003c 42F00402 	 orr r2,r2,#4
 370 0040 1A60     	 str r2,[r3]
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 	                              (uint32_t)ETH_OPERATION_MODE_TSF_Msk |
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 	                              (uint32_t)ETH_OPERATION_MODE_OSF_Msk;
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Increase enhanced descriptor to 8 WORDS, required when the Advanced Time-Stamp feature or Full
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->BUS_MODE = (uint32_t)ETH_BUS_MODE_ATDS_Msk |
 371              	 .loc 3 237 0
 372 0042 7B68     	 ldr r3,[r7,#4]
 373 0044 1B68     	 ldr r3,[r3]
 374 0046 03F58052 	 add r2,r3,#4096
 375 004a 1368     	 ldr r3,[r2]
 376 004c 0021     	 movs r1,#0
 377 004e 204B     	 ldr r3,.L15
 378 0050 0B43     	 orrs r3,r3,r1
 379 0052 1360     	 str r3,[r2]
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 	                        (uint32_t)ETH_BUS_MODE_AAL_Msk | /* the AHB interface generates all bursts
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 	                        (uint32_t)ETH_BUS_MODE_FB_Msk | /* DMA attempts to execute fixed-length Bu
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 	                        (uint32_t)(0x20 << ETH_BUS_MODE_PBL_Pos); /* maximum Burst length */
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Initialize DMA Descriptors */
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitRxDescriptors(eth_mac);
 380              	 .loc 3 243 0
 381 0054 7868     	 ldr r0,[r7,#4]
 382 0056 FFF7FEFF 	 bl XMC_ETH_MAC_InitRxDescriptors
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitTxDescriptors(eth_mac);
 383              	 .loc 3 244 0
 384 005a 7868     	 ldr r0,[r7,#4]
 385 005c FFF7FEFF 	 bl XMC_ETH_MAC_InitTxDescriptors
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Clear interrupts */
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->STATUS = 0xFFFFFFFFUL;
 386              	 .loc 3 247 0
 387 0060 7B68     	 ldr r3,[r7,#4]
 388 0062 1B68     	 ldr r3,[r3]
 389 0064 03F58053 	 add r3,r3,#4096
 390 0068 1433     	 adds r3,r3,#20
 391 006a 1A68     	 ldr r2,[r3]
 392 006c 4FF0FF32 	 mov r2,#-1
 393 0070 1A60     	 str r2,[r3]
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Disable MMC interrupt events */
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MMC_TRANSMIT_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_INTERRUPT_MSK;
 394              	 .loc 3 250 0
 395 0072 7B68     	 ldr r3,[r7,#4]
 396 0074 1B68     	 ldr r3,[r3]
 397 0076 D3F81021 	 ldr r2,[r3,#272]
 398 007a 0022     	 movs r2,#0
 399 007c 62F07C42 	 orn r2,r2,#-67108864
 400 0080 C3F81021 	 str r2,[r3,#272]
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MMC_RECEIVE_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_INTERRUPT_MSK;
 401              	 .loc 3 251 0
 402 0084 7B68     	 ldr r3,[r7,#4]
 403 0086 1B68     	 ldr r3,[r3]
 404 0088 D3F80C21 	 ldr r2,[r3,#268]
 405 008c 0022     	 movs r2,#0
 406 008e 62F07C42 	 orn r2,r2,#-67108864
 407 0092 C3F80C21 	 str r2,[r3,#268]
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MMC_IPC_RECEIVE_INTERRUPT_MASK = ETH_MAC_DISABLE_MMC_IPC_RECEIVE_INTERRUPT_MSK;
 408              	 .loc 3 252 0
 409 0096 7B68     	 ldr r3,[r7,#4]
 410 0098 1B68     	 ldr r3,[r3]
 411 009a D3F80022 	 ldr r2,[r3,#512]
 412 009e 0022     	 movs r2,#0
 413 00a0 62F0C022 	 orn r2,r2,#-1073692672
 414 00a4 C3F80022 	 str r2,[r3,#512]
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Disable PMT and timestamp interrupt events */
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK = ETH_INTERRUPT_MASK_PMTIM_Msk | ETH_INTERRUPT_MASK_TSIM_Msk;
 415              	 .loc 3 255 0
 416 00a8 7B68     	 ldr r3,[r7,#4]
 417 00aa 1B68     	 ldr r3,[r3]
 418 00ac DA6B     	 ldr r2,[r3,#60]
 419 00ae 0022     	 movs r2,#0
 420 00b0 42F40272 	 orr r2,r2,#520
 421 00b4 DA63     	 str r2,[r3,#60]
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->frame_end = NULL;
 422              	 .loc 3 257 0
 423 00b6 7B68     	 ldr r3,[r7,#4]
 424 00b8 0022     	 movs r2,#0
 425 00ba 1A77     	 strb r2,[r3,#28]
 426 00bc 0022     	 movs r2,#0
 427 00be 5A77     	 strb r2,[r3,#29]
 428 00c0 0022     	 movs r2,#0
 429 00c2 9A77     	 strb r2,[r3,#30]
 430 00c4 0022     	 movs r2,#0
 431 00c6 DA77     	 strb r2,[r3,#31]
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 432              	 .loc 3 258 0
 433 00c8 0837     	 adds r7,r7,#8
 434              	.LCFI33:
 435              	 .cfi_def_cfa_offset 8
 436 00ca BD46     	 mov sp,r7
 437              	.LCFI34:
 438              	 .cfi_def_cfa_register 13
 439              	 
 440 00cc 80BD     	 pop {r7,pc}
 441              	.L16:
 442 00ce 00BF     	 .align 2
 443              	.L15:
 444 00d0 80200102 	 .word 33628288
 445              	 .cfi_endproc
 446              	.LFE227:
 448              	 .section .text.XMC_ETH_MAC_Init,"ax",%progbits
 449              	 .align 2
 450              	 .global XMC_ETH_MAC_Init
 451              	 .thumb
 452              	 .thumb_func
 454              	XMC_ETH_MAC_Init:
 455              	.LFB228:
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* ETH MAC initialize */
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init(XMC_ETH_MAC_t *const eth_mac)
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 456              	 .loc 3 262 0
 457              	 .cfi_startproc
 458              	 
 459              	 
 460 0000 80B5     	 push {r7,lr}
 461              	.LCFI35:
 462              	 .cfi_def_cfa_offset 8
 463              	 .cfi_offset 7,-8
 464              	 .cfi_offset 14,-4
 465 0002 84B0     	 sub sp,sp,#16
 466              	.LCFI36:
 467              	 .cfi_def_cfa_offset 24
 468 0004 00AF     	 add r7,sp,#0
 469              	.LCFI37:
 470              	 .cfi_def_cfa_register 7
 471 0006 7860     	 str r0,[r7,#4]
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_Init: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_Enable(eth_mac);
 472              	 .loc 3 267 0
 473 0008 7868     	 ldr r0,[r7,#4]
 474 000a FFF7FEFF 	 bl XMC_ETH_MAC_Enable
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   status = XMC_ETH_MAC_SetManagmentClockDivider(eth_mac);
 475              	 .loc 3 268 0
 476 000e 7868     	 ldr r0,[r7,#4]
 477 0010 FFF7FEFF 	 bl XMC_ETH_MAC_SetManagmentClockDivider
 478 0014 0346     	 mov r3,r0
 479 0016 FB73     	 strb r3,[r7,#15]
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitEx(eth_mac);
 480              	 .loc 3 270 0
 481 0018 7868     	 ldr r0,[r7,#4]
 482 001a FFF7FEFF 	 bl XMC_ETH_MAC_InitEx
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_SetAddress(eth_mac, eth_mac->address);
 483              	 .loc 3 272 0
 484 001e 7968     	 ldr r1,[r7,#4]
 485 0020 4A68     	 ldr r2,[r1,#4]
 486 0022 8B68     	 ldr r3,[r1,#8]
 487 0024 7868     	 ldr r0,[r7,#4]
 488 0026 FFF7FEFF 	 bl XMC_ETH_MAC_SetAddress
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return status;
 489              	 .loc 3 274 0
 490 002a FB7B     	 ldrb r3,[r7,#15]
 275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 491              	 .loc 3 275 0
 492 002c 1846     	 mov r0,r3
 493 002e 1037     	 adds r7,r7,#16
 494              	.LCFI38:
 495              	 .cfi_def_cfa_offset 8
 496 0030 BD46     	 mov sp,r7
 497              	.LCFI39:
 498              	 .cfi_def_cfa_register 13
 499              	 
 500 0032 80BD     	 pop {r7,pc}
 501              	 .cfi_endproc
 502              	.LFE228:
 504              	 .section .text.XMC_ETH_MAC_InitRxDescriptors,"ax",%progbits
 505              	 .align 2
 506              	 .global XMC_ETH_MAC_InitRxDescriptors
 507              	 .thumb
 508              	 .thumb_func
 510              	XMC_ETH_MAC_InitRxDescriptors:
 511              	.LFB229:
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Initialize RX descriptors */
 278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitRxDescriptors(XMC_ETH_MAC_t *const eth_mac)
 279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 512              	 .loc 3 279 0
 513              	 .cfi_startproc
 514              	 
 515              	 
 516              	 
 517 0000 80B4     	 push {r7}
 518              	.LCFI40:
 519              	 .cfi_def_cfa_offset 4
 520              	 .cfi_offset 7,-4
 521 0002 85B0     	 sub sp,sp,#20
 522              	.LCFI41:
 523              	 .cfi_def_cfa_offset 24
 524 0004 00AF     	 add r7,sp,#0
 525              	.LCFI42:
 526              	 .cfi_def_cfa_register 7
 527 0006 7860     	 str r0,[r7,#4]
 280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t i;
 281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t next;
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitRxDescriptors: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac
 284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /*
 286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****    * Chained structure (ETH_MAC_DMA_RDES1_RCH), second address in the descriptor
 287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****    * (buffer2) is the next descriptor address
 288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****    */
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   for (i = 0U; i < eth_mac->num_rx_buf; ++i)
 528              	 .loc 3 289 0
 529 0008 0023     	 movs r3,#0
 530 000a FB60     	 str r3,[r7,#12]
 531 000c 45E0     	 b .L20
 532              	.L22:
 290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_desc[i].status = (uint32_t)ETH_MAC_DMA_RDES0_OWN;
 533              	 .loc 3 291 0
 534 000e 7B68     	 ldr r3,[r7,#4]
 535 0010 DA68     	 ldr r2,[r3,#12]
 536 0012 FB68     	 ldr r3,[r7,#12]
 537 0014 5B01     	 lsls r3,r3,#5
 538 0016 1344     	 add r3,r3,r2
 539 0018 1A68     	 ldr r2,[r3]
 540 001a 0022     	 movs r2,#0
 541 001c 42F00042 	 orr r2,r2,#-2147483648
 542 0020 1A60     	 str r2,[r3]
 292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_desc[i].length = (uint32_t)ETH_MAC_DMA_RDES1_RCH | (uint32_t)XMC_ETH_MAC_BUF_SIZE;
 543              	 .loc 3 292 0
 544 0022 7B68     	 ldr r3,[r7,#4]
 545 0024 DA68     	 ldr r2,[r3,#12]
 546 0026 FB68     	 ldr r3,[r7,#12]
 547 0028 5B01     	 lsls r3,r3,#5
 548 002a 1A44     	 add r2,r2,r3
 549 002c 5368     	 ldr r3,[r2,#4]
 550 002e 0023     	 movs r3,#0
 551 0030 43F48B43 	 orr r3,r3,#17792
 552 0034 43F07403 	 orr r3,r3,#116
 553 0038 5360     	 str r3,[r2,#4]
 293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_desc[i].buffer1 = (uint32_t)&(eth_mac->rx_buf[i * XMC_ETH_MAC_BUF_SIZE]);
 554              	 .loc 3 293 0
 555 003a 7B68     	 ldr r3,[r7,#4]
 556 003c DA68     	 ldr r2,[r3,#12]
 557 003e FB68     	 ldr r3,[r7,#12]
 558 0040 5B01     	 lsls r3,r3,#5
 559 0042 1344     	 add r3,r3,r2
 560 0044 7A68     	 ldr r2,[r7,#4]
 561 0046 5169     	 ldr r1,[r2,#20]
 562 0048 FA68     	 ldr r2,[r7,#12]
 563 004a 40F2F450 	 movw r0,#1524
 564 004e 00FB02F2 	 mul r2,r0,r2
 565 0052 0A44     	 add r2,r2,r1
 566 0054 1146     	 mov r1,r2
 567 0056 9A68     	 ldr r2,[r3,#8]
 568 0058 0022     	 movs r2,#0
 569 005a 0A43     	 orrs r2,r2,r1
 570 005c 9A60     	 str r2,[r3,#8]
 294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     next = i + 1U;
 571              	 .loc 3 294 0
 572 005e FB68     	 ldr r3,[r7,#12]
 573 0060 0133     	 adds r3,r3,#1
 574 0062 BB60     	 str r3,[r7,#8]
 295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     if (next == eth_mac->num_rx_buf)
 575              	 .loc 3 295 0
 576 0064 7B68     	 ldr r3,[r7,#4]
 577 0066 93F82030 	 ldrb r3,[r3,#32]
 578 006a 1A46     	 mov r2,r3
 579 006c BB68     	 ldr r3,[r7,#8]
 580 006e 9A42     	 cmp r2,r3
 581 0070 01D1     	 bne .L21
 296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       next = 0U;
 582              	 .loc 3 297 0
 583 0072 0023     	 movs r3,#0
 584 0074 BB60     	 str r3,[r7,#8]
 585              	.L21:
 298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_desc[i].buffer2 = (uint32_t)&(eth_mac->rx_desc[next]);
 586              	 .loc 3 299 0 discriminator 2
 587 0076 7B68     	 ldr r3,[r7,#4]
 588 0078 DA68     	 ldr r2,[r3,#12]
 589 007a FB68     	 ldr r3,[r7,#12]
 590 007c 5B01     	 lsls r3,r3,#5
 591 007e 1344     	 add r3,r3,r2
 592 0080 7A68     	 ldr r2,[r7,#4]
 593 0082 D168     	 ldr r1,[r2,#12]
 594 0084 BA68     	 ldr r2,[r7,#8]
 595 0086 5201     	 lsls r2,r2,#5
 596 0088 0A44     	 add r2,r2,r1
 597 008a 1146     	 mov r1,r2
 598 008c DA68     	 ldr r2,[r3,#12]
 599 008e 0022     	 movs r2,#0
 600 0090 0A43     	 orrs r2,r2,r1
 601 0092 DA60     	 str r2,[r3,#12]
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 602              	 .loc 3 289 0 discriminator 2
 603 0094 FB68     	 ldr r3,[r7,#12]
 604 0096 0133     	 adds r3,r3,#1
 605 0098 FB60     	 str r3,[r7,#12]
 606              	.L20:
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 607              	 .loc 3 289 0 is_stmt 0 discriminator 1
 608 009a 7B68     	 ldr r3,[r7,#4]
 609 009c 93F82030 	 ldrb r3,[r3,#32]
 610 00a0 1A46     	 mov r2,r3
 611 00a2 FB68     	 ldr r3,[r7,#12]
 612 00a4 9A42     	 cmp r2,r3
 613 00a6 B2D8     	 bhi .L22
 300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->RECEIVE_DESCRIPTOR_LIST_ADDRESS = (uint32_t)&(eth_mac->rx_desc[0]);
 614              	 .loc 3 301 0 is_stmt 1
 615 00a8 7B68     	 ldr r3,[r7,#4]
 616 00aa 1B68     	 ldr r3,[r3]
 617 00ac 7A68     	 ldr r2,[r7,#4]
 618 00ae D268     	 ldr r2,[r2,#12]
 619 00b0 1146     	 mov r1,r2
 620 00b2 03F58053 	 add r3,r3,#4096
 621 00b6 0C33     	 adds r3,r3,#12
 622 00b8 1A68     	 ldr r2,[r3]
 623 00ba 0022     	 movs r2,#0
 624 00bc 0A43     	 orrs r2,r2,r1
 625 00be 1A60     	 str r2,[r3]
 302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_index = 0U;
 626              	 .loc 3 302 0
 627 00c0 7B68     	 ldr r3,[r7,#4]
 628 00c2 0022     	 movs r2,#0
 629 00c4 83F82320 	 strb r2,[r3,#35]
 303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 630              	 .loc 3 303 0
 631 00c8 1437     	 adds r7,r7,#20
 632              	.LCFI43:
 633              	 .cfi_def_cfa_offset 4
 634 00ca BD46     	 mov sp,r7
 635              	.LCFI44:
 636              	 .cfi_def_cfa_register 13
 637              	 
 638 00cc 5DF8047B 	 ldr r7,[sp],#4
 639              	.LCFI45:
 640              	 .cfi_restore 7
 641              	 .cfi_def_cfa_offset 0
 642 00d0 7047     	 bx lr
 643              	 .cfi_endproc
 644              	.LFE229:
 646 00d2 00BF     	 .section .text.XMC_ETH_MAC_InitTxDescriptors,"ax",%progbits
 647              	 .align 2
 648              	 .global XMC_ETH_MAC_InitTxDescriptors
 649              	 .thumb
 650              	 .thumb_func
 652              	XMC_ETH_MAC_InitTxDescriptors:
 653              	.LFB230:
 304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Initialize TX descriptors */
 306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitTxDescriptors(XMC_ETH_MAC_t *const eth_mac)
 307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 654              	 .loc 3 307 0
 655              	 .cfi_startproc
 656              	 
 657              	 
 658              	 
 659 0000 80B4     	 push {r7}
 660              	.LCFI46:
 661              	 .cfi_def_cfa_offset 4
 662              	 .cfi_offset 7,-4
 663 0002 85B0     	 sub sp,sp,#20
 664              	.LCFI47:
 665              	 .cfi_def_cfa_offset 24
 666 0004 00AF     	 add r7,sp,#0
 667              	.LCFI48:
 668              	 .cfi_def_cfa_register 7
 669 0006 7860     	 str r0,[r7,#4]
 308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t i;
 309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t next;
 310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitTxDescriptors: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac
 312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Chained structure (ETH_MAC_DMA_TDES0_TCH), second address in the descriptor (buffer2) is the n
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   for (i = 0U; i < eth_mac->num_tx_buf; ++i)
 670              	 .loc 3 314 0
 671 0008 0023     	 movs r3,#0
 672 000a FB60     	 str r3,[r7,#12]
 673 000c 3BE0     	 b .L24
 674              	.L26:
 315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_desc[i].status = ETH_MAC_DMA_TDES0_TCH | ETH_MAC_DMA_TDES0_LS | ETH_MAC_DMA_TDES0_FS;
 675              	 .loc 3 316 0
 676 000e 7B68     	 ldr r3,[r7,#4]
 677 0010 1A69     	 ldr r2,[r3,#16]
 678 0012 FB68     	 ldr r3,[r7,#12]
 679 0014 5B01     	 lsls r3,r3,#5
 680 0016 1A44     	 add r2,r2,r3
 681 0018 1368     	 ldr r3,[r2]
 682 001a 0023     	 movs r3,#0
 683 001c 43F04053 	 orr r3,r3,#805306368
 684 0020 43F48013 	 orr r3,r3,#1048576
 685 0024 1360     	 str r3,[r2]
 317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_desc[i].buffer1 = (uint32_t)&(eth_mac->tx_buf[i * XMC_ETH_MAC_BUF_SIZE]);
 686              	 .loc 3 317 0
 687 0026 7B68     	 ldr r3,[r7,#4]
 688 0028 1A69     	 ldr r2,[r3,#16]
 689 002a FB68     	 ldr r3,[r7,#12]
 690 002c 5B01     	 lsls r3,r3,#5
 691 002e 1344     	 add r3,r3,r2
 692 0030 7A68     	 ldr r2,[r7,#4]
 693 0032 9169     	 ldr r1,[r2,#24]
 694 0034 FA68     	 ldr r2,[r7,#12]
 695 0036 40F2F450 	 movw r0,#1524
 696 003a 00FB02F2 	 mul r2,r0,r2
 697 003e 0A44     	 add r2,r2,r1
 698 0040 1146     	 mov r1,r2
 699 0042 9A68     	 ldr r2,[r3,#8]
 700 0044 0022     	 movs r2,#0
 701 0046 0A43     	 orrs r2,r2,r1
 702 0048 9A60     	 str r2,[r3,#8]
 318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     next = i + 1U;
 703              	 .loc 3 318 0
 704 004a FB68     	 ldr r3,[r7,#12]
 705 004c 0133     	 adds r3,r3,#1
 706 004e BB60     	 str r3,[r7,#8]
 319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     if (next == eth_mac->num_tx_buf)
 707              	 .loc 3 319 0
 708 0050 7B68     	 ldr r3,[r7,#4]
 709 0052 93F82130 	 ldrb r3,[r3,#33]
 710 0056 1A46     	 mov r2,r3
 711 0058 BB68     	 ldr r3,[r7,#8]
 712 005a 9A42     	 cmp r2,r3
 713 005c 01D1     	 bne .L25
 320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****         next = 0U;
 714              	 .loc 3 321 0
 715 005e 0023     	 movs r3,#0
 716 0060 BB60     	 str r3,[r7,#8]
 717              	.L25:
 322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     eth_mac->tx_desc[i].buffer2 = (uint32_t)&(eth_mac->tx_desc[next]);
 718              	 .loc 3 323 0 discriminator 2
 719 0062 7B68     	 ldr r3,[r7,#4]
 720 0064 1A69     	 ldr r2,[r3,#16]
 721 0066 FB68     	 ldr r3,[r7,#12]
 722 0068 5B01     	 lsls r3,r3,#5
 723 006a 1344     	 add r3,r3,r2
 724 006c 7A68     	 ldr r2,[r7,#4]
 725 006e 1169     	 ldr r1,[r2,#16]
 726 0070 BA68     	 ldr r2,[r7,#8]
 727 0072 5201     	 lsls r2,r2,#5
 728 0074 0A44     	 add r2,r2,r1
 729 0076 1146     	 mov r1,r2
 730 0078 DA68     	 ldr r2,[r3,#12]
 731 007a 0022     	 movs r2,#0
 732 007c 0A43     	 orrs r2,r2,r1
 733 007e DA60     	 str r2,[r3,#12]
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 734              	 .loc 3 314 0 discriminator 2
 735 0080 FB68     	 ldr r3,[r7,#12]
 736 0082 0133     	 adds r3,r3,#1
 737 0084 FB60     	 str r3,[r7,#12]
 738              	.L24:
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 739              	 .loc 3 314 0 is_stmt 0 discriminator 1
 740 0086 7B68     	 ldr r3,[r7,#4]
 741 0088 93F82130 	 ldrb r3,[r3,#33]
 742 008c 1A46     	 mov r2,r3
 743 008e FB68     	 ldr r3,[r7,#12]
 744 0090 9A42     	 cmp r2,r3
 745 0092 BCD8     	 bhi .L26
 324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TRANSMIT_DESCRIPTOR_LIST_ADDRESS = (uint32_t)&(eth_mac->tx_desc[0]);
 746              	 .loc 3 325 0 is_stmt 1
 747 0094 7B68     	 ldr r3,[r7,#4]
 748 0096 1B68     	 ldr r3,[r3]
 749 0098 7A68     	 ldr r2,[r7,#4]
 750 009a 1269     	 ldr r2,[r2,#16]
 751 009c 1146     	 mov r1,r2
 752 009e 03F58053 	 add r3,r3,#4096
 753 00a2 1033     	 adds r3,r3,#16
 754 00a4 1A68     	 ldr r2,[r3]
 755 00a6 0022     	 movs r2,#0
 756 00a8 0A43     	 orrs r2,r2,r1
 757 00aa 1A60     	 str r2,[r3]
 326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_index = 0U;
 758              	 .loc 3 326 0
 759 00ac 7B68     	 ldr r3,[r7,#4]
 760 00ae 0022     	 movs r2,#0
 761 00b0 83F82220 	 strb r2,[r3,#34]
 327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 762              	 .loc 3 327 0
 763 00b4 1437     	 adds r7,r7,#20
 764              	.LCFI49:
 765              	 .cfi_def_cfa_offset 4
 766 00b6 BD46     	 mov sp,r7
 767              	.LCFI50:
 768              	 .cfi_def_cfa_register 13
 769              	 
 770 00b8 5DF8047B 	 ldr r7,[sp],#4
 771              	.LCFI51:
 772              	 .cfi_restore 7
 773              	 .cfi_def_cfa_offset 0
 774 00bc 7047     	 bx lr
 775              	 .cfi_endproc
 776              	.LFE230:
 778 00be 00BF     	 .section .text.XMC_ETH_MAC_SetAddressEx,"ax",%progbits
 779              	 .align 2
 780              	 .global XMC_ETH_MAC_SetAddressEx
 781              	 .thumb
 782              	 .thumb_func
 784              	XMC_ETH_MAC_SetAddressEx:
 785              	.LFB231:
 328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressEx(XMC_ETH_MAC_t *const eth_mac, uint8_t *const addr)
 330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 786              	 .loc 3 330 0
 787              	 .cfi_startproc
 788              	 
 789              	 
 790              	 
 791 0000 80B4     	 push {r7}
 792              	.LCFI52:
 793              	 .cfi_def_cfa_offset 4
 794              	 .cfi_offset 7,-4
 795 0002 83B0     	 sub sp,sp,#12
 796              	.LCFI53:
 797              	 .cfi_def_cfa_offset 16
 798 0004 00AF     	 add r7,sp,#0
 799              	.LCFI54:
 800              	 .cfi_def_cfa_register 7
 801 0006 7860     	 str r0,[r7,#4]
 802 0008 3960     	 str r1,[r7]
 331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MAC_ADDRESS0_HIGH = addr[4] | (addr[5] << 8); 
 803              	 .loc 3 331 0
 804 000a 7B68     	 ldr r3,[r7,#4]
 805 000c 1B68     	 ldr r3,[r3]
 806 000e 3A68     	 ldr r2,[r7]
 807 0010 0432     	 adds r2,r2,#4
 808 0012 1278     	 ldrb r2,[r2]
 809 0014 1146     	 mov r1,r2
 810 0016 3A68     	 ldr r2,[r7]
 811 0018 0532     	 adds r2,r2,#5
 812 001a 1278     	 ldrb r2,[r2]
 813 001c 1202     	 lsls r2,r2,#8
 814 001e 0A43     	 orrs r2,r2,r1
 815 0020 1146     	 mov r1,r2
 816 0022 1A6C     	 ldr r2,[r3,#64]
 817 0024 0022     	 movs r2,#0
 818 0026 0A43     	 orrs r2,r2,r1
 819 0028 1A64     	 str r2,[r3,#64]
 332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MAC_ADDRESS0_LOW = addr[0] | (addr[1] << 8) | (addr[2] << 16) | (addr[3] << 24); 
 820              	 .loc 3 332 0
 821 002a 7B68     	 ldr r3,[r7,#4]
 822 002c 1B68     	 ldr r3,[r3]
 823 002e 3A68     	 ldr r2,[r7]
 824 0030 1278     	 ldrb r2,[r2]
 825 0032 1146     	 mov r1,r2
 826 0034 3A68     	 ldr r2,[r7]
 827 0036 0132     	 adds r2,r2,#1
 828 0038 1278     	 ldrb r2,[r2]
 829 003a 1202     	 lsls r2,r2,#8
 830 003c 1143     	 orrs r1,r1,r2
 831 003e 3A68     	 ldr r2,[r7]
 832 0040 0232     	 adds r2,r2,#2
 833 0042 1278     	 ldrb r2,[r2]
 834 0044 1204     	 lsls r2,r2,#16
 835 0046 1143     	 orrs r1,r1,r2
 836 0048 3A68     	 ldr r2,[r7]
 837 004a 0332     	 adds r2,r2,#3
 838 004c 1278     	 ldrb r2,[r2]
 839 004e 1206     	 lsls r2,r2,#24
 840 0050 0A43     	 orrs r2,r2,r1
 841 0052 1146     	 mov r1,r2
 842 0054 5A6C     	 ldr r2,[r3,#68]
 843 0056 0022     	 movs r2,#0
 844 0058 0A43     	 orrs r2,r2,r1
 845 005a 5A64     	 str r2,[r3,#68]
 333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 846              	 .loc 3 333 0
 847 005c 0C37     	 adds r7,r7,#12
 848              	.LCFI55:
 849              	 .cfi_def_cfa_offset 4
 850 005e BD46     	 mov sp,r7
 851              	.LCFI56:
 852              	 .cfi_def_cfa_register 13
 853              	 
 854 0060 5DF8047B 	 ldr r7,[sp],#4
 855              	.LCFI57:
 856              	 .cfi_restore 7
 857              	 .cfi_def_cfa_offset 0
 858 0064 7047     	 bx lr
 859              	 .cfi_endproc
 860              	.LFE231:
 862 0066 00BF     	 .section .text.XMC_ETH_MAC_GetAddressEx,"ax",%progbits
 863              	 .align 2
 864              	 .global XMC_ETH_MAC_GetAddressEx
 865              	 .thumb
 866              	 .thumb_func
 868              	XMC_ETH_MAC_GetAddressEx:
 869              	.LFB232:
 334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_GetAddressEx(XMC_ETH_MAC_t *const eth_mac, uint8_t *const addr)
 336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 870              	 .loc 3 336 0
 871              	 .cfi_startproc
 872              	 
 873              	 
 874              	 
 875 0000 80B4     	 push {r7}
 876              	.LCFI58:
 877              	 .cfi_def_cfa_offset 4
 878              	 .cfi_offset 7,-4
 879 0002 85B0     	 sub sp,sp,#20
 880              	.LCFI59:
 881              	 .cfi_def_cfa_offset 24
 882 0004 00AF     	 add r7,sp,#0
 883              	.LCFI60:
 884              	 .cfi_def_cfa_register 7
 885 0006 7860     	 str r0,[r7,#4]
 886 0008 3960     	 str r1,[r7]
 337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t low_addr = eth_mac->regs->MAC_ADDRESS0_LOW;
 887              	 .loc 3 337 0
 888 000a 7B68     	 ldr r3,[r7,#4]
 889 000c 1B68     	 ldr r3,[r3]
 890 000e 5B6C     	 ldr r3,[r3,#68]
 891 0010 FB60     	 str r3,[r7,#12]
 338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t high_addr = eth_mac->regs->MAC_ADDRESS0_HIGH;
 892              	 .loc 3 338 0
 893 0012 7B68     	 ldr r3,[r7,#4]
 894 0014 1B68     	 ldr r3,[r3]
 895 0016 1B6C     	 ldr r3,[r3,#64]
 896 0018 BB60     	 str r3,[r7,#8]
 339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   addr[0] = low_addr & 0xff;
 897              	 .loc 3 340 0
 898 001a FB68     	 ldr r3,[r7,#12]
 899 001c DAB2     	 uxtb r2,r3
 900 001e 3B68     	 ldr r3,[r7]
 901 0020 1A70     	 strb r2,[r3]
 341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   addr[1] = (low_addr >> 8) & 0xff;
 902              	 .loc 3 341 0
 903 0022 3B68     	 ldr r3,[r7]
 904 0024 0133     	 adds r3,r3,#1
 905 0026 FA68     	 ldr r2,[r7,#12]
 906 0028 120A     	 lsrs r2,r2,#8
 907 002a D2B2     	 uxtb r2,r2
 908 002c 1A70     	 strb r2,[r3]
 342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   addr[2] = (low_addr >> 16) & 0xff;
 909              	 .loc 3 342 0
 910 002e 3B68     	 ldr r3,[r7]
 911 0030 0233     	 adds r3,r3,#2
 912 0032 FA68     	 ldr r2,[r7,#12]
 913 0034 120C     	 lsrs r2,r2,#16
 914 0036 D2B2     	 uxtb r2,r2
 915 0038 1A70     	 strb r2,[r3]
 343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   addr[3] = (low_addr >> 24) & 0xff;
 916              	 .loc 3 343 0
 917 003a 3B68     	 ldr r3,[r7]
 918 003c 0333     	 adds r3,r3,#3
 919 003e FA68     	 ldr r2,[r7,#12]
 920 0040 120E     	 lsrs r2,r2,#24
 921 0042 D2B2     	 uxtb r2,r2
 922 0044 1A70     	 strb r2,[r3]
 344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   addr[4] = high_addr & 0xff;
 923              	 .loc 3 344 0
 924 0046 3B68     	 ldr r3,[r7]
 925 0048 0433     	 adds r3,r3,#4
 926 004a BA68     	 ldr r2,[r7,#8]
 927 004c D2B2     	 uxtb r2,r2
 928 004e 1A70     	 strb r2,[r3]
 345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   addr[5] = (high_addr >> 8) & 0xff;
 929              	 .loc 3 345 0
 930 0050 3B68     	 ldr r3,[r7]
 931 0052 0533     	 adds r3,r3,#5
 932 0054 BA68     	 ldr r2,[r7,#8]
 933 0056 120A     	 lsrs r2,r2,#8
 934 0058 D2B2     	 uxtb r2,r2
 935 005a 1A70     	 strb r2,[r3]
 346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 936              	 .loc 3 346 0
 937 005c 1437     	 adds r7,r7,#20
 938              	.LCFI61:
 939              	 .cfi_def_cfa_offset 4
 940 005e BD46     	 mov sp,r7
 941              	.LCFI62:
 942              	 .cfi_def_cfa_register 13
 943              	 
 944 0060 5DF8047B 	 ldr r7,[sp],#4
 945              	.LCFI63:
 946              	 .cfi_restore 7
 947              	 .cfi_def_cfa_offset 0
 948 0064 7047     	 bx lr
 949              	 .cfi_endproc
 950              	.LFE232:
 952 0066 00BF     	 .section .text.XMC_ETH_MAC_SetAddressPerfectFilter,"ax",%progbits
 953              	 .align 2
 954              	 .global XMC_ETH_MAC_SetAddressPerfectFilter
 955              	 .thumb
 956              	 .thumb_func
 958              	XMC_ETH_MAC_SetAddressPerfectFilter:
 959              	.LFB233:
 347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Set address perfect filter */
 349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressPerfectFilter(XMC_ETH_MAC_t *const eth_mac,
 350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                          uint8_t index,
 351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                          const uint64_t addr,
 352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                          uint32_t flags)
 353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 960              	 .loc 3 353 0
 961              	 .cfi_startproc
 962              	 
 963              	 
 964              	 
 965 0000 B0B4     	 push {r4,r5,r7}
 966              	.LCFI64:
 967              	 .cfi_def_cfa_offset 12
 968              	 .cfi_offset 4,-12
 969              	 .cfi_offset 5,-8
 970              	 .cfi_offset 7,-4
 971 0002 87B0     	 sub sp,sp,#28
 972              	.LCFI65:
 973              	 .cfi_def_cfa_offset 40
 974 0004 00AF     	 add r7,sp,#0
 975              	.LCFI66:
 976              	 .cfi_def_cfa_register 7
 977 0006 F860     	 str r0,[r7,#12]
 978 0008 C7E90023 	 strd r2,[r7]
 979 000c 0B46     	 mov r3,r1
 980 000e FB72     	 strb r3,[r7,#11]
 354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   __IO uint32_t *reg;
 355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressPerfectFilter: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(e
 357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressFilter: index is out of range", ((index > 0) && (index < 4)));
 358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   reg = &(eth_mac->regs->MAC_ADDRESS0_HIGH);
 981              	 .loc 3 359 0
 982 0010 FB68     	 ldr r3,[r7,#12]
 983 0012 1B68     	 ldr r3,[r3]
 984 0014 4033     	 adds r3,r3,#64
 985 0016 7B61     	 str r3,[r7,#20]
 360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   reg[index] = (uint32_t)(addr >> 32U) | flags;
 986              	 .loc 3 360 0
 987 0018 FB7A     	 ldrb r3,[r7,#11]
 988 001a 9B00     	 lsls r3,r3,#2
 989 001c 7A69     	 ldr r2,[r7,#20]
 990 001e D118     	 adds r1,r2,r3
 991 0020 D7E90023 	 ldrd r2,[r7]
 992 0024 1C00     	 movs r4,r3
 993 0026 0025     	 movs r5,#0
 994 0028 2246     	 mov r2,r4
 995 002a BB6A     	 ldr r3,[r7,#40]
 996 002c 1343     	 orrs r3,r3,r2
 997 002e 0B60     	 str r3,[r1]
 361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   reg[index + 1U] = (uint32_t)addr;
 998              	 .loc 3 361 0
 999 0030 FB7A     	 ldrb r3,[r7,#11]
 1000 0032 0133     	 adds r3,r3,#1
 1001 0034 9B00     	 lsls r3,r3,#2
 1002 0036 7A69     	 ldr r2,[r7,#20]
 1003 0038 1344     	 add r3,r3,r2
 1004 003a 3A68     	 ldr r2,[r7]
 1005 003c 1A60     	 str r2,[r3]
 362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1006              	 .loc 3 362 0
 1007 003e 1C37     	 adds r7,r7,#28
 1008              	.LCFI67:
 1009              	 .cfi_def_cfa_offset 12
 1010 0040 BD46     	 mov sp,r7
 1011              	.LCFI68:
 1012              	 .cfi_def_cfa_register 13
 1013              	 
 1014 0042 B0BC     	 pop {r4,r5,r7}
 1015              	.LCFI69:
 1016              	 .cfi_restore 7
 1017              	 .cfi_restore 5
 1018              	 .cfi_restore 4
 1019              	 .cfi_def_cfa_offset 0
 1020 0044 7047     	 bx lr
 1021              	 .cfi_endproc
 1022              	.LFE233:
 1024              	 .section .text.XMC_ETH_MAC_SetAddressPerfectFilterEx,"ax",%progbits
 1025              	 .align 2
 1026              	 .global XMC_ETH_MAC_SetAddressPerfectFilterEx
 1027              	 .thumb
 1028              	 .thumb_func
 1030              	XMC_ETH_MAC_SetAddressPerfectFilterEx:
 1031              	.LFB234:
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressPerfectFilterEx(XMC_ETH_MAC_t *const eth_mac,
 365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            uint8_t index,
 366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            uint8_t *const addr,
 367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            uint32_t flags)
 368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1032              	 .loc 3 368 0
 1033              	 .cfi_startproc
 1034              	 
 1035              	 
 1036              	 
 1037 0000 80B4     	 push {r7}
 1038              	.LCFI70:
 1039              	 .cfi_def_cfa_offset 4
 1040              	 .cfi_offset 7,-4
 1041 0002 87B0     	 sub sp,sp,#28
 1042              	.LCFI71:
 1043              	 .cfi_def_cfa_offset 32
 1044 0004 00AF     	 add r7,sp,#0
 1045              	.LCFI72:
 1046              	 .cfi_def_cfa_register 7
 1047 0006 F860     	 str r0,[r7,#12]
 1048 0008 7A60     	 str r2,[r7,#4]
 1049 000a 3B60     	 str r3,[r7]
 1050 000c 0B46     	 mov r3,r1
 1051 000e FB72     	 strb r3,[r7,#11]
 369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   __IO uint32_t *reg;
 370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressPerfectFilter: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(e
 372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressFilter: index is out of range", ((index > 0) && (index < 4)));
 373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   reg = &(eth_mac->regs->MAC_ADDRESS0_HIGH);
 1052              	 .loc 3 374 0
 1053 0010 FB68     	 ldr r3,[r7,#12]
 1054 0012 1B68     	 ldr r3,[r3]
 1055 0014 4033     	 adds r3,r3,#64
 1056 0016 7B61     	 str r3,[r7,#20]
 375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   reg[index] = addr[4] | (addr[5] << 8) | flags; 
 1057              	 .loc 3 375 0
 1058 0018 FB7A     	 ldrb r3,[r7,#11]
 1059 001a 9B00     	 lsls r3,r3,#2
 1060 001c 7A69     	 ldr r2,[r7,#20]
 1061 001e 1344     	 add r3,r3,r2
 1062 0020 7A68     	 ldr r2,[r7,#4]
 1063 0022 0432     	 adds r2,r2,#4
 1064 0024 1278     	 ldrb r2,[r2]
 1065 0026 1146     	 mov r1,r2
 1066 0028 7A68     	 ldr r2,[r7,#4]
 1067 002a 0532     	 adds r2,r2,#5
 1068 002c 1278     	 ldrb r2,[r2]
 1069 002e 1202     	 lsls r2,r2,#8
 1070 0030 0A43     	 orrs r2,r2,r1
 1071 0032 1146     	 mov r1,r2
 1072 0034 3A68     	 ldr r2,[r7]
 1073 0036 0A43     	 orrs r2,r2,r1
 1074 0038 1A60     	 str r2,[r3]
 376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   reg[index + 1U] = addr[0] | (addr[1] << 8) | (addr[2] << 16) | (addr[3] << 24); 
 1075              	 .loc 3 376 0
 1076 003a FB7A     	 ldrb r3,[r7,#11]
 1077 003c 0133     	 adds r3,r3,#1
 1078 003e 9B00     	 lsls r3,r3,#2
 1079 0040 7A69     	 ldr r2,[r7,#20]
 1080 0042 1344     	 add r3,r3,r2
 1081 0044 7A68     	 ldr r2,[r7,#4]
 1082 0046 1278     	 ldrb r2,[r2]
 1083 0048 1146     	 mov r1,r2
 1084 004a 7A68     	 ldr r2,[r7,#4]
 1085 004c 0132     	 adds r2,r2,#1
 1086 004e 1278     	 ldrb r2,[r2]
 1087 0050 1202     	 lsls r2,r2,#8
 1088 0052 1143     	 orrs r1,r1,r2
 1089 0054 7A68     	 ldr r2,[r7,#4]
 1090 0056 0232     	 adds r2,r2,#2
 1091 0058 1278     	 ldrb r2,[r2]
 1092 005a 1204     	 lsls r2,r2,#16
 1093 005c 1143     	 orrs r1,r1,r2
 1094 005e 7A68     	 ldr r2,[r7,#4]
 1095 0060 0332     	 adds r2,r2,#3
 1096 0062 1278     	 ldrb r2,[r2]
 1097 0064 1206     	 lsls r2,r2,#24
 1098 0066 0A43     	 orrs r2,r2,r1
 1099 0068 1A60     	 str r2,[r3]
 377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1100              	 .loc 3 377 0
 1101 006a 1C37     	 adds r7,r7,#28
 1102              	.LCFI73:
 1103              	 .cfi_def_cfa_offset 4
 1104 006c BD46     	 mov sp,r7
 1105              	.LCFI74:
 1106              	 .cfi_def_cfa_register 13
 1107              	 
 1108 006e 5DF8047B 	 ldr r7,[sp],#4
 1109              	.LCFI75:
 1110              	 .cfi_restore 7
 1111              	 .cfi_def_cfa_offset 0
 1112 0072 7047     	 bx lr
 1113              	 .cfi_endproc
 1114              	.LFE234:
 1116              	 .section .text.XMC_ETH_MAC_SetAddressHashFilter,"ax",%progbits
 1117              	 .align 2
 1118              	 .global XMC_ETH_MAC_SetAddressHashFilter
 1119              	 .thumb
 1120              	 .thumb_func
 1122              	XMC_ETH_MAC_SetAddressHashFilter:
 1123              	.LFB235:
 378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Set address hash filter */
 380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressHashFilter(XMC_ETH_MAC_t *const eth_mac, const uint64_t hash)
 381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1124              	 .loc 3 381 0
 1125              	 .cfi_startproc
 1126              	 
 1127              	 
 1128              	 
 1129 0000 B0B4     	 push {r4,r5,r7}
 1130              	.LCFI76:
 1131              	 .cfi_def_cfa_offset 12
 1132              	 .cfi_offset 4,-12
 1133              	 .cfi_offset 5,-8
 1134              	 .cfi_offset 7,-4
 1135 0002 85B0     	 sub sp,sp,#20
 1136              	.LCFI77:
 1137              	 .cfi_def_cfa_offset 32
 1138 0004 00AF     	 add r7,sp,#0
 1139              	.LCFI78:
 1140              	 .cfi_def_cfa_register 7
 1141 0006 F860     	 str r0,[r7,#12]
 1142 0008 C7E90023 	 strd r2,[r7]
 382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->HASH_TABLE_HIGH = (uint32_t)(hash >> 32);
 1143              	 .loc 3 382 0
 1144 000c FB68     	 ldr r3,[r7,#12]
 1145 000e 1968     	 ldr r1,[r3]
 1146 0010 D7E90023 	 ldrd r2,[r7]
 1147 0014 1C00     	 movs r4,r3
 1148 0016 0025     	 movs r5,#0
 1149 0018 2246     	 mov r2,r4
 1150 001a 8B68     	 ldr r3,[r1,#8]
 1151 001c 0023     	 movs r3,#0
 1152 001e 1343     	 orrs r3,r3,r2
 1153 0020 8B60     	 str r3,[r1,#8]
 383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->HASH_TABLE_LOW = (uint32_t)hash;
 1154              	 .loc 3 383 0
 1155 0022 FB68     	 ldr r3,[r7,#12]
 1156 0024 1B68     	 ldr r3,[r3]
 1157 0026 3A68     	 ldr r2,[r7]
 1158 0028 D968     	 ldr r1,[r3,#12]
 1159 002a 0021     	 movs r1,#0
 1160 002c 0A43     	 orrs r2,r2,r1
 1161 002e DA60     	 str r2,[r3,#12]
 384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1162              	 .loc 3 384 0
 1163 0030 1437     	 adds r7,r7,#20
 1164              	.LCFI79:
 1165              	 .cfi_def_cfa_offset 12
 1166 0032 BD46     	 mov sp,r7
 1167              	.LCFI80:
 1168              	 .cfi_def_cfa_register 13
 1169              	 
 1170 0034 B0BC     	 pop {r4,r5,r7}
 1171              	.LCFI81:
 1172              	 .cfi_restore 7
 1173              	 .cfi_restore 5
 1174              	 .cfi_restore 4
 1175              	 .cfi_def_cfa_offset 0
 1176 0036 7047     	 bx lr
 1177              	 .cfi_endproc
 1178              	.LFE235:
 1180              	 .section .text.XMC_ETH_MAC_SendFrame,"ax",%progbits
 1181              	 .align 2
 1182              	 .global XMC_ETH_MAC_SendFrame
 1183              	 .thumb
 1184              	 .thumb_func
 1186              	XMC_ETH_MAC_SendFrame:
 1187              	.LFB236:
 385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Send frame */
 387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SendFrame(XMC_ETH_MAC_t *const eth_mac, const uint8_t *frame, uint
 388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1188              	 .loc 3 388 0
 1189              	 .cfi_startproc
 1190              	 
 1191              	 
 1192 0000 80B5     	 push {r7,lr}
 1193              	.LCFI82:
 1194              	 .cfi_def_cfa_offset 8
 1195              	 .cfi_offset 7,-8
 1196              	 .cfi_offset 14,-4
 1197 0002 88B0     	 sub sp,sp,#32
 1198              	.LCFI83:
 1199              	 .cfi_def_cfa_offset 40
 1200 0004 00AF     	 add r7,sp,#0
 1201              	.LCFI84:
 1202              	 .cfi_def_cfa_register 7
 1203 0006 F860     	 str r0,[r7,#12]
 1204 0008 B960     	 str r1,[r7,#8]
 1205 000a 7A60     	 str r2,[r7,#4]
 1206 000c 3B60     	 str r3,[r7]
 389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint8_t *dst;
 391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t ctrl;
 392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", eth_mac != NULL);
 394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", eth_mac->regs == ETH0);
 395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", (frame != NULL) && (len > 0));
 396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   dst = eth_mac->frame_end;
 1207              	 .loc 3 397 0
 1208 000e FB68     	 ldr r3,[r7,#12]
 1209 0010 DB69     	 ldr r3,[r3,#28]
 1210 0012 BB61     	 str r3,[r7,#24]
 398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->tx_desc[eth_mac->tx_index].status & ETH_MAC_DMA_TDES0_OWN)
 1211              	 .loc 3 399 0
 1212 0014 FB68     	 ldr r3,[r7,#12]
 1213 0016 1A69     	 ldr r2,[r3,#16]
 1214 0018 FB68     	 ldr r3,[r7,#12]
 1215 001a 93F82230 	 ldrb r3,[r3,#34]
 1216 001e 5B01     	 lsls r3,r3,#5
 1217 0020 1344     	 add r3,r3,r2
 1218 0022 1B68     	 ldr r3,[r3]
 1219 0024 002B     	 cmp r3,#0
 1220 0026 1FDA     	 bge .L33
 400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* Transmitter is busy, wait */
 402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 1221              	 .loc 3 402 0
 1222 0028 0123     	 movs r3,#1
 1223 002a FB77     	 strb r3,[r7,#31]
 403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     if (eth_mac->regs->STATUS & ETH_STATUS_TU_Msk)
 1224              	 .loc 3 403 0
 1225 002c FB68     	 ldr r3,[r7,#12]
 1226 002e 1B68     	 ldr r3,[r3]
 1227 0030 03F58053 	 add r3,r3,#4096
 1228 0034 1433     	 adds r3,r3,#20
 1229 0036 1B68     	 ldr r3,[r3]
 1230 0038 03F00403 	 and r3,r3,#4
 1231 003c 002B     	 cmp r3,#0
 1232 003e 00F0B580 	 beq .L35
 404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       /* Receive buffer unavailable, resume DMA */
 406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_TU_Msk;
 1233              	 .loc 3 406 0
 1234 0042 FB68     	 ldr r3,[r7,#12]
 1235 0044 1B68     	 ldr r3,[r3]
 1236 0046 03F58053 	 add r3,r3,#4096
 1237 004a 1433     	 adds r3,r3,#20
 1238 004c 1A68     	 ldr r2,[r3]
 1239 004e 0022     	 movs r2,#0
 1240 0050 42F00402 	 orr r2,r2,#4
 1241 0054 1A60     	 str r2,[r3]
 407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 1242              	 .loc 3 407 0
 1243 0056 FB68     	 ldr r3,[r7,#12]
 1244 0058 1B68     	 ldr r3,[r3]
 1245 005a 03F58053 	 add r3,r3,#4096
 1246 005e 0433     	 adds r3,r3,#4
 1247 0060 1A68     	 ldr r2,[r3]
 1248 0062 0022     	 movs r2,#0
 1249 0064 1A60     	 str r2,[r3]
 1250 0066 A1E0     	 b .L35
 1251              	.L33:
 408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else
 412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     if (dst == NULL)
 1252              	 .loc 3 413 0
 1253 0068 BB69     	 ldr r3,[r7,#24]
 1254 006a 002B     	 cmp r3,#0
 1255 006c 15D1     	 bne .L36
 414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       /* Start of a new transmit frame */
 416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       dst = (uint8_t *)eth_mac->tx_desc[eth_mac->tx_index].buffer1;
 1256              	 .loc 3 416 0
 1257 006e FB68     	 ldr r3,[r7,#12]
 1258 0070 1A69     	 ldr r2,[r3,#16]
 1259 0072 FB68     	 ldr r3,[r7,#12]
 1260 0074 93F82230 	 ldrb r3,[r3,#34]
 1261 0078 5B01     	 lsls r3,r3,#5
 1262 007a 1344     	 add r3,r3,r2
 1263 007c 9B68     	 ldr r3,[r3,#8]
 1264 007e BB61     	 str r3,[r7,#24]
 417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].length = len;
 1265              	 .loc 3 417 0
 1266 0080 FB68     	 ldr r3,[r7,#12]
 1267 0082 1A69     	 ldr r2,[r3,#16]
 1268 0084 FB68     	 ldr r3,[r7,#12]
 1269 0086 93F82230 	 ldrb r3,[r3,#34]
 1270 008a 5B01     	 lsls r3,r3,#5
 1271 008c 1344     	 add r3,r3,r2
 1272 008e 5A68     	 ldr r2,[r3,#4]
 1273 0090 0021     	 movs r1,#0
 1274 0092 7A68     	 ldr r2,[r7,#4]
 1275 0094 0A43     	 orrs r2,r2,r1
 1276 0096 5A60     	 str r2,[r3,#4]
 1277 0098 14E0     	 b .L37
 1278              	.L36:
 418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     else
 420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       /* Sending data fragments in progress */
 422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].length += len;
 1279              	 .loc 3 422 0
 1280 009a FB68     	 ldr r3,[r7,#12]
 1281 009c 1A69     	 ldr r2,[r3,#16]
 1282 009e FB68     	 ldr r3,[r7,#12]
 1283 00a0 93F82230 	 ldrb r3,[r3,#34]
 1284 00a4 5B01     	 lsls r3,r3,#5
 1285 00a6 1344     	 add r3,r3,r2
 1286 00a8 FA68     	 ldr r2,[r7,#12]
 1287 00aa 1169     	 ldr r1,[r2,#16]
 1288 00ac FA68     	 ldr r2,[r7,#12]
 1289 00ae 92F82220 	 ldrb r2,[r2,#34]
 1290 00b2 5201     	 lsls r2,r2,#5
 1291 00b4 0A44     	 add r2,r2,r1
 1292 00b6 5168     	 ldr r1,[r2,#4]
 1293 00b8 7A68     	 ldr r2,[r7,#4]
 1294 00ba 0A44     	 add r2,r2,r1
 1295 00bc 5968     	 ldr r1,[r3,#4]
 1296 00be 0021     	 movs r1,#0
 1297 00c0 0A43     	 orrs r2,r2,r1
 1298 00c2 5A60     	 str r2,[r3,#4]
 1299              	.L37:
 423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     memcpy(dst, frame, len);
 1300              	 .loc 3 425 0
 1301 00c4 B869     	 ldr r0,[r7,#24]
 1302 00c6 B968     	 ldr r1,[r7,#8]
 1303 00c8 7A68     	 ldr r2,[r7,#4]
 1304 00ca FFF7FEFF 	 bl memcpy
 426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_FRAGMENT)
 1305              	 .loc 3 427 0
 1306 00ce 3B68     	 ldr r3,[r7]
 1307 00d0 03F00103 	 and r3,r3,#1
 1308 00d4 002B     	 cmp r3,#0
 1309 00d6 03D0     	 beq .L38
 428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       /* More data to come, remember current write position */
 430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->frame_end = dst;
 1310              	 .loc 3 430 0
 1311 00d8 FB68     	 ldr r3,[r7,#12]
 1312 00da BA69     	 ldr r2,[r7,#24]
 1313 00dc DA61     	 str r2,[r3,#28]
 1314 00de 63E0     	 b .L39
 1315              	.L38:
 431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     else
 433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       /* Frame is now ready, send it to DMA */
 435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       ctrl = eth_mac->tx_desc[eth_mac->tx_index].status | ETH_MAC_DMA_TDES0_CIC;
 1316              	 .loc 3 435 0
 1317 00e0 FB68     	 ldr r3,[r7,#12]
 1318 00e2 1A69     	 ldr r2,[r3,#16]
 1319 00e4 FB68     	 ldr r3,[r7,#12]
 1320 00e6 93F82230 	 ldrb r3,[r3,#34]
 1321 00ea 5B01     	 lsls r3,r3,#5
 1322 00ec 1344     	 add r3,r3,r2
 1323 00ee 1B68     	 ldr r3,[r3]
 1324 00f0 43F44003 	 orr r3,r3,#12582912
 1325 00f4 7B61     	 str r3,[r7,#20]
 436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       ctrl &= ~(ETH_MAC_DMA_TDES0_IC | ETH_MAC_DMA_TDES0_TTSE);
 1326              	 .loc 3 436 0
 1327 00f6 7B69     	 ldr r3,[r7,#20]
 1328 00f8 23F08443 	 bic r3,r3,#1107296256
 1329 00fc 7B61     	 str r3,[r7,#20]
 437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_EVENT)
 1330              	 .loc 3 438 0
 1331 00fe 3B68     	 ldr r3,[r7]
 1332 0100 03F00203 	 and r3,r3,#2
 1333 0104 002B     	 cmp r3,#0
 1334 0106 03D0     	 beq .L40
 439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       {
 440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       ctrl |= ETH_MAC_DMA_TDES0_IC;
 1335              	 .loc 3 440 0
 1336 0108 7B69     	 ldr r3,[r7,#20]
 1337 010a 43F08043 	 orr r3,r3,#1073741824
 1338 010e 7B61     	 str r3,[r7,#20]
 1339              	.L40:
 441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       }
 442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_TIMESTAMP)
 1340              	 .loc 3 443 0
 1341 0110 3B68     	 ldr r3,[r7]
 1342 0112 03F00403 	 and r3,r3,#4
 1343 0116 002B     	 cmp r3,#0
 1344 0118 03D0     	 beq .L41
 444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       {
 445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       ctrl |= ETH_MAC_DMA_TDES0_TTSE;
 1345              	 .loc 3 445 0
 1346 011a 7B69     	 ldr r3,[r7,#20]
 1347 011c 43F00073 	 orr r3,r3,#33554432
 1348 0120 7B61     	 str r3,[r7,#20]
 1349              	.L41:
 446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       }
 447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_ts_index = eth_mac->tx_index;
 1350              	 .loc 3 447 0
 1351 0122 FB68     	 ldr r3,[r7,#12]
 1352 0124 93F82220 	 ldrb r2,[r3,#34]
 1353 0128 FB68     	 ldr r3,[r7,#12]
 1354 012a 83F82420 	 strb r2,[r3,#36]
 448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].status = ctrl | ETH_MAC_DMA_TDES0_OWN;
 1355              	 .loc 3 449 0
 1356 012e FB68     	 ldr r3,[r7,#12]
 1357 0130 1A69     	 ldr r2,[r3,#16]
 1358 0132 FB68     	 ldr r3,[r7,#12]
 1359 0134 93F82230 	 ldrb r3,[r3,#34]
 1360 0138 5B01     	 lsls r3,r3,#5
 1361 013a 1344     	 add r3,r3,r2
 1362 013c 7A69     	 ldr r2,[r7,#20]
 1363 013e 42F00042 	 orr r2,r2,#-2147483648
 1364 0142 1968     	 ldr r1,[r3]
 1365 0144 0021     	 movs r1,#0
 1366 0146 0A43     	 orrs r2,r2,r1
 1367 0148 1A60     	 str r2,[r3]
 450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_index++;
 1368              	 .loc 3 451 0
 1369 014a FB68     	 ldr r3,[r7,#12]
 1370 014c 93F82230 	 ldrb r3,[r3,#34]
 1371 0150 0133     	 adds r3,r3,#1
 1372 0152 DAB2     	 uxtb r2,r3
 1373 0154 FB68     	 ldr r3,[r7,#12]
 1374 0156 83F82220 	 strb r2,[r3,#34]
 452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       if (eth_mac->tx_index == eth_mac->num_tx_buf)
 1375              	 .loc 3 452 0
 1376 015a FB68     	 ldr r3,[r7,#12]
 1377 015c 93F82220 	 ldrb r2,[r3,#34]
 1378 0160 FB68     	 ldr r3,[r7,#12]
 1379 0162 93F82130 	 ldrb r3,[r3,#33]
 1380 0166 9A42     	 cmp r2,r3
 1381 0168 03D1     	 bne .L42
 453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       {
 454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_index = 0U;
 1382              	 .loc 3 454 0
 1383 016a FB68     	 ldr r3,[r7,#12]
 1384 016c 0022     	 movs r2,#0
 1385 016e 83F82220 	 strb r2,[r3,#34]
 1386              	.L42:
 455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       }
 456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->frame_end = NULL;
 1387              	 .loc 3 456 0
 1388 0172 FB68     	 ldr r3,[r7,#12]
 1389 0174 0022     	 movs r2,#0
 1390 0176 1A77     	 strb r2,[r3,#28]
 1391 0178 0022     	 movs r2,#0
 1392 017a 5A77     	 strb r2,[r3,#29]
 1393 017c 0022     	 movs r2,#0
 1394 017e 9A77     	 strb r2,[r3,#30]
 1395 0180 0022     	 movs r2,#0
 1396 0182 DA77     	 strb r2,[r3,#31]
 457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       /* Start frame transmission */
 459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_TPS_Msk;
 1397              	 .loc 3 459 0
 1398 0184 FB68     	 ldr r3,[r7,#12]
 1399 0186 1B68     	 ldr r3,[r3]
 1400 0188 03F58053 	 add r3,r3,#4096
 1401 018c 1433     	 adds r3,r3,#20
 1402 018e 1A68     	 ldr r2,[r3]
 1403 0190 0022     	 movs r2,#0
 1404 0192 42F00202 	 orr r2,r2,#2
 1405 0196 1A60     	 str r2,[r3]
 460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 1406              	 .loc 3 460 0
 1407 0198 FB68     	 ldr r3,[r7,#12]
 1408 019a 1B68     	 ldr r3,[r3]
 1409 019c 03F58053 	 add r3,r3,#4096
 1410 01a0 0433     	 adds r3,r3,#4
 1411 01a2 1A68     	 ldr r2,[r3]
 1412 01a4 0022     	 movs r2,#0
 1413 01a6 1A60     	 str r2,[r3]
 1414              	.L39:
 461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_OK;
 1415              	 .loc 3 462 0
 1416 01a8 0023     	 movs r3,#0
 1417 01aa FB77     	 strb r3,[r7,#31]
 1418              	.L35:
 463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return status;
 1419              	 .loc 3 465 0
 1420 01ac FB7F     	 ldrb r3,[r7,#31]
 466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1421              	 .loc 3 466 0
 1422 01ae 1846     	 mov r0,r3
 1423 01b0 2037     	 adds r7,r7,#32
 1424              	.LCFI85:
 1425              	 .cfi_def_cfa_offset 8
 1426 01b2 BD46     	 mov sp,r7
 1427              	.LCFI86:
 1428              	 .cfi_def_cfa_register 13
 1429              	 
 1430 01b4 80BD     	 pop {r7,pc}
 1431              	 .cfi_endproc
 1432              	.LFE236:
 1434 01b6 00BF     	 .section .text.XMC_ETH_MAC_ReadFrame,"ax",%progbits
 1435              	 .align 2
 1436              	 .global XMC_ETH_MAC_ReadFrame
 1437              	 .thumb
 1438              	 .thumb_func
 1440              	XMC_ETH_MAC_ReadFrame:
 1441              	.LFB237:
 467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Read frame */
 469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_ReadFrame(XMC_ETH_MAC_t *const eth_mac, uint8_t *frame, uint32_t len)
 470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1442              	 .loc 3 470 0
 1443              	 .cfi_startproc
 1444              	 
 1445              	 
 1446 0000 80B5     	 push {r7,lr}
 1447              	.LCFI87:
 1448              	 .cfi_def_cfa_offset 8
 1449              	 .cfi_offset 7,-8
 1450              	 .cfi_offset 14,-4
 1451 0002 86B0     	 sub sp,sp,#24
 1452              	.LCFI88:
 1453              	 .cfi_def_cfa_offset 32
 1454 0004 00AF     	 add r7,sp,#0
 1455              	.LCFI89:
 1456              	 .cfi_def_cfa_register 7
 1457 0006 F860     	 str r0,[r7,#12]
 1458 0008 B960     	 str r1,[r7,#8]
 1459 000a 7A60     	 str r2,[r7,#4]
 471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint8_t const *src;
 472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", eth_mac != NULL);
 474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", eth_mac->regs == ETH0);
 475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", (frame != NULL) && (len > 0));
 476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Fast-copy data to packet buffer */
 478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   src = (uint8_t const *)eth_mac->rx_desc[eth_mac->rx_index].buffer1;
 1460              	 .loc 3 478 0
 1461 000c FB68     	 ldr r3,[r7,#12]
 1462 000e DA68     	 ldr r2,[r3,#12]
 1463 0010 FB68     	 ldr r3,[r7,#12]
 1464 0012 93F82330 	 ldrb r3,[r3,#35]
 1465 0016 5B01     	 lsls r3,r3,#5
 1466 0018 1344     	 add r3,r3,r2
 1467 001a 9B68     	 ldr r3,[r3,#8]
 1468 001c 7B61     	 str r3,[r7,#20]
 479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   memcpy(frame, src, len);
 1469              	 .loc 3 480 0
 1470 001e B868     	 ldr r0,[r7,#8]
 1471 0020 7969     	 ldr r1,[r7,#20]
 1472 0022 7A68     	 ldr r2,[r7,#4]
 1473 0024 FFF7FEFF 	 bl memcpy
 481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Return this block back to DMA */
 483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_desc[eth_mac->rx_index].status = ETH_MAC_DMA_RDES0_OWN;
 1474              	 .loc 3 483 0
 1475 0028 FB68     	 ldr r3,[r7,#12]
 1476 002a DA68     	 ldr r2,[r3,#12]
 1477 002c FB68     	 ldr r3,[r7,#12]
 1478 002e 93F82330 	 ldrb r3,[r3,#35]
 1479 0032 5B01     	 lsls r3,r3,#5
 1480 0034 1344     	 add r3,r3,r2
 1481 0036 1A68     	 ldr r2,[r3]
 1482 0038 0022     	 movs r2,#0
 1483 003a 42F00042 	 orr r2,r2,#-2147483648
 1484 003e 1A60     	 str r2,[r3]
 484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_index++;
 1485              	 .loc 3 485 0
 1486 0040 FB68     	 ldr r3,[r7,#12]
 1487 0042 93F82330 	 ldrb r3,[r3,#35]
 1488 0046 0133     	 adds r3,r3,#1
 1489 0048 DAB2     	 uxtb r2,r3
 1490 004a FB68     	 ldr r3,[r7,#12]
 1491 004c 83F82320 	 strb r2,[r3,#35]
 486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->rx_index == eth_mac->num_rx_buf)
 1492              	 .loc 3 486 0
 1493 0050 FB68     	 ldr r3,[r7,#12]
 1494 0052 93F82320 	 ldrb r2,[r3,#35]
 1495 0056 FB68     	 ldr r3,[r7,#12]
 1496 0058 93F82030 	 ldrb r3,[r3,#32]
 1497 005c 9A42     	 cmp r2,r3
 1498 005e 03D1     	 bne .L45
 487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_index = 0U;
 1499              	 .loc 3 488 0
 1500 0060 FB68     	 ldr r3,[r7,#12]
 1501 0062 0022     	 movs r2,#0
 1502 0064 83F82320 	 strb r2,[r3,#35]
 1503              	.L45:
 489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->regs->STATUS & ETH_STATUS_RU_Msk)
 1504              	 .loc 3 491 0
 1505 0068 FB68     	 ldr r3,[r7,#12]
 1506 006a 1B68     	 ldr r3,[r3]
 1507 006c 03F58053 	 add r3,r3,#4096
 1508 0070 1433     	 adds r3,r3,#20
 1509 0072 1B68     	 ldr r3,[r3]
 1510 0074 03F08003 	 and r3,r3,#128
 1511 0078 002B     	 cmp r3,#0
 1512 007a 11D0     	 beq .L46
 492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* Receive buffer unavailable, resume DMA */
 494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_RU_Msk;
 1513              	 .loc 3 494 0
 1514 007c FB68     	 ldr r3,[r7,#12]
 1515 007e 1B68     	 ldr r3,[r3]
 1516 0080 03F58053 	 add r3,r3,#4096
 1517 0084 1433     	 adds r3,r3,#20
 1518 0086 1A68     	 ldr r2,[r3]
 1519 0088 0022     	 movs r2,#0
 1520 008a 42F08002 	 orr r2,r2,#128
 1521 008e 1A60     	 str r2,[r3]
 495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->RECEIVE_POLL_DEMAND = 0U;
 1522              	 .loc 3 495 0
 1523 0090 FB68     	 ldr r3,[r7,#12]
 1524 0092 1B68     	 ldr r3,[r3]
 1525 0094 03F58053 	 add r3,r3,#4096
 1526 0098 0833     	 adds r3,r3,#8
 1527 009a 1A68     	 ldr r2,[r3]
 1528 009c 0022     	 movs r2,#0
 1529 009e 1A60     	 str r2,[r3]
 1530              	.L46:
 496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return (len);
 1531              	 .loc 3 498 0
 1532 00a0 7B68     	 ldr r3,[r7,#4]
 499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1533              	 .loc 3 499 0
 1534 00a2 1846     	 mov r0,r3
 1535 00a4 1837     	 adds r7,r7,#24
 1536              	.LCFI90:
 1537              	 .cfi_def_cfa_offset 8
 1538 00a6 BD46     	 mov sp,r7
 1539              	.LCFI91:
 1540              	 .cfi_def_cfa_register 13
 1541              	 
 1542 00a8 80BD     	 pop {r7,pc}
 1543              	 .cfi_endproc
 1544              	.LFE237:
 1546 00aa 00BF     	 .section .text.XMC_ETH_MAC_GetRxFrameSize,"ax",%progbits
 1547              	 .align 2
 1548              	 .global XMC_ETH_MAC_GetRxFrameSize
 1549              	 .thumb
 1550              	 .thumb_func
 1552              	XMC_ETH_MAC_GetRxFrameSize:
 1553              	.LFB238:
 500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Get RX frame size */
 502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetRxFrameSize(XMC_ETH_MAC_t *const eth_mac)
 503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1554              	 .loc 3 503 0
 1555              	 .cfi_startproc
 1556              	 
 1557              	 
 1558              	 
 1559 0000 80B4     	 push {r7}
 1560              	.LCFI92:
 1561              	 .cfi_def_cfa_offset 4
 1562              	 .cfi_offset 7,-4
 1563 0002 85B0     	 sub sp,sp,#20
 1564              	.LCFI93:
 1565              	 .cfi_def_cfa_offset 24
 1566 0004 00AF     	 add r7,sp,#0
 1567              	.LCFI94:
 1568              	 .cfi_def_cfa_register 7
 1569 0006 7860     	 str r0,[r7,#4]
 504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t status;
 505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t len = 0U;
 1570              	 .loc 3 505 0
 1571 0008 0023     	 movs r3,#0
 1572 000a FB60     	 str r3,[r7,#12]
 506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   status = eth_mac->rx_desc[eth_mac->rx_index].status;
 1573              	 .loc 3 507 0
 1574 000c 7B68     	 ldr r3,[r7,#4]
 1575 000e DA68     	 ldr r2,[r3,#12]
 1576 0010 7B68     	 ldr r3,[r7,#4]
 1577 0012 93F82330 	 ldrb r3,[r3,#35]
 1578 0016 5B01     	 lsls r3,r3,#5
 1579 0018 1344     	 add r3,r3,r2
 1580 001a 1B68     	 ldr r3,[r3]
 1581 001c BB60     	 str r3,[r7,#8]
 508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (status & ETH_MAC_DMA_RDES0_OWN)
 1582              	 .loc 3 509 0
 1583 001e BB68     	 ldr r3,[r7,#8]
 1584 0020 002B     	 cmp r3,#0
 1585 0022 02DA     	 bge .L49
 510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* Owned by DMA */
 512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     len = 0U;
 1586              	 .loc 3 512 0
 1587 0024 0023     	 movs r3,#0
 1588 0026 FB60     	 str r3,[r7,#12]
 1589 0028 18E0     	 b .L50
 1590              	.L49:
 513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else if (((status & ETH_MAC_DMA_RDES0_ES) != 0U) ||
 1591              	 .loc 3 514 0
 1592 002a BB68     	 ldr r3,[r7,#8]
 1593 002c 03F40043 	 and r3,r3,#32768
 1594 0030 002B     	 cmp r3,#0
 1595 0032 09D1     	 bne .L51
 515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 1596              	 .loc 3 515 0 discriminator 1
 1597 0034 BB68     	 ldr r3,[r7,#8]
 1598 0036 03F40073 	 and r3,r3,#512
 514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 1599              	 .loc 3 514 0 discriminator 1
 1600 003a 002B     	 cmp r3,#0
 1601 003c 04D0     	 beq .L51
 516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_LS) == 0U)) 
 1602              	 .loc 3 516 0
 1603 003e BB68     	 ldr r3,[r7,#8]
 1604 0040 03F48073 	 and r3,r3,#256
 515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 1605              	 .loc 3 515 0
 1606 0044 002B     	 cmp r3,#0
 1607 0046 03D1     	 bne .L52
 1608              	.L51:
 517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* Error, this block is invalid */
 519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     len = 0xFFFFFFFFU;
 1609              	 .loc 3 519 0
 1610 0048 4FF0FF33 	 mov r3,#-1
 1611 004c FB60     	 str r3,[r7,#12]
 1612 004e 05E0     	 b .L50
 1613              	.L52:
 520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else 
 522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* Subtract CRC */
 524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     len = ((status & ETH_MAC_DMA_RDES0_FL) >> 16U) - 4U;
 1614              	 .loc 3 524 0
 1615 0050 BA68     	 ldr r2,[r7,#8]
 1616 0052 064B     	 ldr r3,.L54
 1617 0054 1340     	 ands r3,r3,r2
 1618 0056 1B0C     	 lsrs r3,r3,#16
 1619 0058 043B     	 subs r3,r3,#4
 1620 005a FB60     	 str r3,[r7,#12]
 1621              	.L50:
 525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return len;
 1622              	 .loc 3 527 0
 1623 005c FB68     	 ldr r3,[r7,#12]
 528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1624              	 .loc 3 528 0
 1625 005e 1846     	 mov r0,r3
 1626 0060 1437     	 adds r7,r7,#20
 1627              	.LCFI95:
 1628              	 .cfi_def_cfa_offset 4
 1629 0062 BD46     	 mov sp,r7
 1630              	.LCFI96:
 1631              	 .cfi_def_cfa_register 13
 1632              	 
 1633 0064 5DF8047B 	 ldr r7,[sp],#4
 1634              	.LCFI97:
 1635              	 .cfi_restore 7
 1636              	 .cfi_def_cfa_offset 0
 1637 0068 7047     	 bx lr
 1638              	.L55:
 1639 006a 00BF     	 .align 2
 1640              	.L54:
 1641 006c 0000FF3F 	 .word 1073676288
 1642              	 .cfi_endproc
 1643              	.LFE238:
 1645              	 .section .text.XMC_ETH_MAC_SetManagmentClockDivider,"ax",%progbits
 1646              	 .align 2
 1647              	 .global XMC_ETH_MAC_SetManagmentClockDivider
 1648              	 .thumb
 1649              	 .thumb_func
 1651              	XMC_ETH_MAC_SetManagmentClockDivider:
 1652              	.LFB239:
 529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Set management clock divider */
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider(XMC_ETH_MAC_t *const eth_mac)
 532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1653              	 .loc 3 532 0
 1654              	 .cfi_startproc
 1655              	 
 1656              	 
 1657 0000 80B5     	 push {r7,lr}
 1658              	.LCFI98:
 1659              	 .cfi_def_cfa_offset 8
 1660              	 .cfi_offset 7,-8
 1661              	 .cfi_offset 14,-4
 1662 0002 86B0     	 sub sp,sp,#24
 1663              	.LCFI99:
 1664              	 .cfi_def_cfa_offset 32
 1665 0004 00AF     	 add r7,sp,#0
 1666              	.LCFI100:
 1667              	 .cfi_def_cfa_register 7
 1668 0006 7860     	 str r0,[r7,#4]
 533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t eth_mac_clk;
 534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   __IO uint32_t *reg;
 536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac_clk = XMC_SCU_CLOCK_GetEthernetClockFrequency();
 1669              	 .loc 3 537 0
 1670 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetEthernetClockFrequency
 1671 000c 3861     	 str r0,[r7,#16]
 538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   status = XMC_ETH_MAC_STATUS_OK;
 1672              	 .loc 3 538 0
 1673 000e 0023     	 movs r3,#0
 1674 0010 FB75     	 strb r3,[r7,#23]
 539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   reg = &(eth_mac->regs->GMII_ADDRESS);
 1675              	 .loc 3 540 0
 1676 0012 7B68     	 ldr r3,[r7,#4]
 1677 0014 1B68     	 ldr r3,[r3]
 1678 0016 1033     	 adds r3,r3,#16
 1679 0018 FB60     	 str r3,[r7,#12]
 541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_35MHZ)
 1680              	 .loc 3 541 0
 1681 001a 3B69     	 ldr r3,[r7,#16]
 1682 001c 1A4A     	 ldr r2,.L65
 1683 001e 9342     	 cmp r3,r2
 1684 0020 03D8     	 bhi .L57
 542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_16;
 1685              	 .loc 3 543 0
 1686 0022 FB68     	 ldr r3,[r7,#12]
 1687 0024 0822     	 movs r2,#8
 1688 0026 1A60     	 str r2,[r3]
 1689 0028 29E0     	 b .L58
 1690              	.L57:
 544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_60MHZ)
 1691              	 .loc 3 545 0
 1692 002a 3B69     	 ldr r3,[r7,#16]
 1693 002c 174A     	 ldr r2,.L65+4
 1694 002e 9342     	 cmp r3,r2
 1695 0030 03D8     	 bhi .L59
 546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_26;
 1696              	 .loc 3 547 0
 1697 0032 FB68     	 ldr r3,[r7,#12]
 1698 0034 0C22     	 movs r2,#12
 1699 0036 1A60     	 str r2,[r3]
 1700 0038 21E0     	 b .L58
 1701              	.L59:
 548:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 549:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_100MHZ)
 1702              	 .loc 3 549 0
 1703 003a 3B69     	 ldr r3,[r7,#16]
 1704 003c 144A     	 ldr r2,.L65+8
 1705 003e 9342     	 cmp r3,r2
 1706 0040 03D8     	 bhi .L60
 550:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 551:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_42;
 1707              	 .loc 3 551 0
 1708 0042 FB68     	 ldr r3,[r7,#12]
 1709 0044 0022     	 movs r2,#0
 1710 0046 1A60     	 str r2,[r3]
 1711 0048 19E0     	 b .L58
 1712              	.L60:
 552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 553:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_150MHZ)
 1713              	 .loc 3 553 0
 1714 004a 3B69     	 ldr r3,[r7,#16]
 1715 004c 114A     	 ldr r2,.L65+12
 1716 004e 9342     	 cmp r3,r2
 1717 0050 03D8     	 bhi .L61
 554:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 555:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_62;
 1718              	 .loc 3 555 0
 1719 0052 FB68     	 ldr r3,[r7,#12]
 1720 0054 0422     	 movs r2,#4
 1721 0056 1A60     	 str r2,[r3]
 1722 0058 11E0     	 b .L58
 1723              	.L61:
 556:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 557:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_200MHZ)
 1724              	 .loc 3 557 0
 1725 005a 3B69     	 ldr r3,[r7,#16]
 1726 005c 0E4A     	 ldr r2,.L65+16
 1727 005e 9342     	 cmp r3,r2
 1728 0060 03D8     	 bhi .L62
 558:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 559:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_102;
 1729              	 .loc 3 559 0
 1730 0062 FB68     	 ldr r3,[r7,#12]
 1731 0064 1022     	 movs r2,#16
 1732 0066 1A60     	 str r2,[r3]
 1733 0068 09E0     	 b .L58
 1734              	.L62:
 560:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 561:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_250MHZ)
 1735              	 .loc 3 561 0
 1736 006a 3B69     	 ldr r3,[r7,#16]
 1737 006c 0B4A     	 ldr r2,.L65+20
 1738 006e 9342     	 cmp r3,r2
 1739 0070 03D8     	 bhi .L63
 562:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 563:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     *reg = XMC_ETH_MAC_MDC_DIVIDER_124;
 1740              	 .loc 3 563 0
 1741 0072 FB68     	 ldr r3,[r7,#12]
 1742 0074 1422     	 movs r2,#20
 1743 0076 1A60     	 str r2,[r3]
 1744 0078 01E0     	 b .L58
 1745              	.L63:
 564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 565:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else
 566:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 567:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_ERROR;
 1746              	 .loc 3 567 0
 1747 007a 0223     	 movs r3,#2
 1748 007c FB75     	 strb r3,[r7,#23]
 1749              	.L58:
 568:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 569:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 570:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return status;
 1750              	 .loc 3 570 0
 1751 007e FB7D     	 ldrb r3,[r7,#23]
 571:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1752              	 .loc 3 571 0
 1753 0080 1846     	 mov r0,r3
 1754 0082 1837     	 adds r7,r7,#24
 1755              	.LCFI101:
 1756              	 .cfi_def_cfa_offset 8
 1757 0084 BD46     	 mov sp,r7
 1758              	.LCFI102:
 1759              	 .cfi_def_cfa_register 13
 1760              	 
 1761 0086 80BD     	 pop {r7,pc}
 1762              	.L66:
 1763              	 .align 2
 1764              	.L65:
 1765 0088 C00E1602 	 .word 35000000
 1766 008c 00879303 	 .word 60000000
 1767 0090 00E1F505 	 .word 100000000
 1768 0094 80D1F008 	 .word 150000000
 1769 0098 00C2EB0B 	 .word 200000000
 1770 009c 80B2E60E 	 .word 250000000
 1771              	 .cfi_endproc
 1772              	.LFE239:
 1774              	 .section .text.XMC_ETH_MAC_Enable,"ax",%progbits
 1775              	 .align 2
 1776              	 .global XMC_ETH_MAC_Enable
 1777              	 .thumb
 1778              	 .thumb_func
 1780              	XMC_ETH_MAC_Enable:
 1781              	.LFB240:
 572:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 573:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* ETH MAC enable */
 574:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_Enable(XMC_ETH_MAC_t *const eth_mac)
 575:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1782              	 .loc 3 575 0
 1783              	 .cfi_startproc
 1784              	 
 1785              	 
 1786 0000 80B5     	 push {r7,lr}
 1787              	.LCFI103:
 1788              	 .cfi_def_cfa_offset 8
 1789              	 .cfi_offset 7,-8
 1790              	 .cfi_offset 14,-4
 1791 0002 82B0     	 sub sp,sp,#8
 1792              	.LCFI104:
 1793              	 .cfi_def_cfa_offset 16
 1794 0004 00AF     	 add r7,sp,#0
 1795              	.LCFI105:
 1796              	 .cfi_def_cfa_register 7
 1797 0006 7860     	 str r0,[r7,#4]
 576:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_UNUSED_ARG(eth_mac);
 577:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 578:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_ETH);
 1798              	 .loc 3 578 0
 1799 0008 0420     	 movs r0,#4
 1800 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 579:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #if UC_DEVICE != XMC4500
 580:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ETH0);
 1801              	 .loc 3 580 0
 1802 000e 0448     	 ldr r0,.L68
 1803 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #endif
 582:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ETH0);
 1804              	 .loc 3 582 0
 1805 0014 0248     	 ldr r0,.L68
 1806 0016 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 583:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1807              	 .loc 3 583 0
 1808 001a 0837     	 adds r7,r7,#8
 1809              	.LCFI106:
 1810              	 .cfi_def_cfa_offset 8
 1811 001c BD46     	 mov sp,r7
 1812              	.LCFI107:
 1813              	 .cfi_def_cfa_register 13
 1814              	 
 1815 001e 80BD     	 pop {r7,pc}
 1816              	.L69:
 1817              	 .align 2
 1818              	.L68:
 1819 0020 04000020 	 .word 536870916
 1820              	 .cfi_endproc
 1821              	.LFE240:
 1823              	 .section .text.XMC_ETH_MAC_Disable,"ax",%progbits
 1824              	 .align 2
 1825              	 .global XMC_ETH_MAC_Disable
 1826              	 .thumb
 1827              	 .thumb_func
 1829              	XMC_ETH_MAC_Disable:
 1830              	.LFB241:
 584:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 585:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* ETH MAC disable */
 586:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_Disable(XMC_ETH_MAC_t *const eth_mac)
 587:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1831              	 .loc 3 587 0
 1832              	 .cfi_startproc
 1833              	 
 1834              	 
 1835 0000 80B5     	 push {r7,lr}
 1836              	.LCFI108:
 1837              	 .cfi_def_cfa_offset 8
 1838              	 .cfi_offset 7,-8
 1839              	 .cfi_offset 14,-4
 1840 0002 82B0     	 sub sp,sp,#8
 1841              	.LCFI109:
 1842              	 .cfi_def_cfa_offset 16
 1843 0004 00AF     	 add r7,sp,#0
 1844              	.LCFI110:
 1845              	 .cfi_def_cfa_register 7
 1846 0006 7860     	 str r0,[r7,#4]
 588:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_UNUSED_ARG(eth_mac);
 589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ETH0);
 1847              	 .loc 3 590 0
 1848 0008 0548     	 ldr r0,.L71
 1849 000a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 591:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #if UC_DEVICE != XMC4500
 592:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ETH0);
 1850              	 .loc 3 592 0
 1851 000e 0448     	 ldr r0,.L71
 1852 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 593:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** #endif
 594:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_DisableClock(XMC_SCU_CLOCK_ETH);
 1853              	 .loc 3 594 0
 1854 0014 0420     	 movs r0,#4
 1855 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableClock
 595:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1856              	 .loc 3 595 0
 1857 001a 0837     	 adds r7,r7,#8
 1858              	.LCFI111:
 1859              	 .cfi_def_cfa_offset 8
 1860 001c BD46     	 mov sp,r7
 1861              	.LCFI112:
 1862              	 .cfi_def_cfa_register 13
 1863              	 
 1864 001e 80BD     	 pop {r7,pc}
 1865              	.L72:
 1866              	 .align 2
 1867              	.L71:
 1868 0020 04000020 	 .word 536870916
 1869              	 .cfi_endproc
 1870              	.LFE241:
 1872              	 .section .text.XMC_ETH_MAC_ReadPhy,"ax",%progbits
 1873              	 .align 2
 1874              	 .global XMC_ETH_MAC_ReadPhy
 1875              	 .thumb
 1876              	 .thumb_func
 1878              	XMC_ETH_MAC_ReadPhy:
 1879              	.LFB242:
 596:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 597:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Read physical layer and obtain status */
 598:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy(XMC_ETH_MAC_t *eth_mac, uint8_t phy_addr, uint8_t reg_addr
 599:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1880              	 .loc 3 599 0
 1881              	 .cfi_startproc
 1882              	 
 1883              	 
 1884              	 
 1885 0000 80B4     	 push {r7}
 1886              	.LCFI113:
 1887              	 .cfi_def_cfa_offset 4
 1888              	 .cfi_offset 7,-4
 1889 0002 87B0     	 sub sp,sp,#28
 1890              	.LCFI114:
 1891              	 .cfi_def_cfa_offset 32
 1892 0004 00AF     	 add r7,sp,#0
 1893              	.LCFI115:
 1894              	 .cfi_def_cfa_register 7
 1895 0006 F860     	 str r0,[r7,#12]
 1896 0008 7B60     	 str r3,[r7,#4]
 1897 000a 0B46     	 mov r3,r1
 1898 000c FB72     	 strb r3,[r7,#11]
 1899 000e 1346     	 mov r3,r2
 1900 0010 BB72     	 strb r3,[r7,#10]
 600:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t retries;
 601:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 602:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_PhyRead: Parameter error", data != NULL);
 603:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->GMII_ADDRESS = (uint32_t)((eth_mac->regs->GMII_ADDRESS & (uint32_t)ETH_GMII_ADDRES
 1901              	 .loc 3 604 0
 1902 0012 FB68     	 ldr r3,[r7,#12]
 1903 0014 1B68     	 ldr r3,[r3]
 1904 0016 FA68     	 ldr r2,[r7,#12]
 1905 0018 1268     	 ldr r2,[r2]
 1906 001a 1269     	 ldr r2,[r2,#16]
 1907 001c 02F03C01 	 and r1,r2,#60
 605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 606:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos
 1908              	 .loc 3 606 0
 1909 0020 FA7A     	 ldrb r2,[r7,#11]
 1910 0022 D202     	 lsls r2,r2,#11
 605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 1911              	 .loc 3 605 0
 1912 0024 1143     	 orrs r1,r1,r2
 607:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)reg_addr << ETH_GMII_ADDRESS_MR_Pos
 1913              	 .loc 3 607 0
 1914 0026 BA7A     	 ldrb r2,[r7,#10]
 1915 0028 9201     	 lsls r2,r2,#6
 604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 1916              	 .loc 3 604 0
 1917 002a 0A43     	 orrs r2,r2,r1
 1918 002c 42F00102 	 orr r2,r2,#1
 1919 0030 1969     	 ldr r1,[r3,#16]
 1920 0032 0021     	 movs r1,#0
 1921 0034 0A43     	 orrs r2,r2,r1
 1922 0036 1A61     	 str r2,[r3,#16]
 608:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 609:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Poll busy bit during max PHY_TIMEOUT time */
 610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   retries = 0U;
 1923              	 .loc 3 610 0
 1924 0038 0023     	 movs r3,#0
 1925 003a 7B61     	 str r3,[r7,#20]
 1926              	.L76:
 611:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   do
 612:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     if ((eth_mac->regs->GMII_ADDRESS & ETH_GMII_ADDRESS_MB_Msk) == 0U)
 1927              	 .loc 3 613 0
 1928 003c FB68     	 ldr r3,[r7,#12]
 1929 003e 1B68     	 ldr r3,[r3]
 1930 0040 1B69     	 ldr r3,[r3,#16]
 1931 0042 03F00103 	 and r3,r3,#1
 1932 0046 002B     	 cmp r3,#0
 1933 0048 07D1     	 bne .L74
 614:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 615:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       *data = (uint16_t)(eth_mac->regs->GMII_DATA & ETH_GMII_DATA_MD_Msk);
 1934              	 .loc 3 615 0
 1935 004a FB68     	 ldr r3,[r7,#12]
 1936 004c 1B68     	 ldr r3,[r3]
 1937 004e 5B69     	 ldr r3,[r3,#20]
 1938 0050 9AB2     	 uxth r2,r3
 1939 0052 7B68     	 ldr r3,[r7,#4]
 1940 0054 1A80     	 strh r2,[r3]
 616:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       return XMC_ETH_MAC_STATUS_OK;
 1941              	 .loc 3 616 0
 1942 0056 0023     	 movs r3,#0
 1943 0058 08E0     	 b .L75
 1944              	.L74:
 617:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 618:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     ++retries;
 1945              	 .loc 3 618 0
 1946 005a 7B69     	 ldr r3,[r7,#20]
 1947 005c 0133     	 adds r3,r3,#1
 1948 005e 7B61     	 str r3,[r7,#20]
 619:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   } while (retries < XMC_ETH_MAC_PHY_MAX_RETRIES);
 1949              	 .loc 3 619 0
 1950 0060 7B69     	 ldr r3,[r7,#20]
 1951 0062 4FF6FE72 	 movw r2,#65534
 1952 0066 9342     	 cmp r3,r2
 1953 0068 E8D9     	 bls .L76
 620:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 621:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return XMC_ETH_MAC_STATUS_ERROR;
 1954              	 .loc 3 621 0
 1955 006a 0223     	 movs r3,#2
 1956              	.L75:
 622:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 1957              	 .loc 3 622 0
 1958 006c 1846     	 mov r0,r3
 1959 006e 1C37     	 adds r7,r7,#28
 1960              	.LCFI116:
 1961              	 .cfi_def_cfa_offset 4
 1962 0070 BD46     	 mov sp,r7
 1963              	.LCFI117:
 1964              	 .cfi_def_cfa_register 13
 1965              	 
 1966 0072 5DF8047B 	 ldr r7,[sp],#4
 1967              	.LCFI118:
 1968              	 .cfi_restore 7
 1969              	 .cfi_def_cfa_offset 0
 1970 0076 7047     	 bx lr
 1971              	 .cfi_endproc
 1972              	.LFE242:
 1974              	 .section .text.XMC_ETH_MAC_WritePhy,"ax",%progbits
 1975              	 .align 2
 1976              	 .global XMC_ETH_MAC_WritePhy
 1977              	 .thumb
 1978              	 .thumb_func
 1980              	XMC_ETH_MAC_WritePhy:
 1981              	.LFB243:
 623:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 624:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Write physical layer and return status */
 625:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy(XMC_ETH_MAC_t *eth_mac, uint8_t phy_addr, uint8_t reg_add
 626:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 1982              	 .loc 3 626 0
 1983              	 .cfi_startproc
 1984              	 
 1985              	 
 1986              	 
 1987 0000 80B4     	 push {r7}
 1988              	.LCFI119:
 1989              	 .cfi_def_cfa_offset 4
 1990              	 .cfi_offset 7,-4
 1991 0002 85B0     	 sub sp,sp,#20
 1992              	.LCFI120:
 1993              	 .cfi_def_cfa_offset 24
 1994 0004 00AF     	 add r7,sp,#0
 1995              	.LCFI121:
 1996              	 .cfi_def_cfa_register 7
 1997 0006 7860     	 str r0,[r7,#4]
 1998 0008 0846     	 mov r0,r1
 1999 000a 1146     	 mov r1,r2
 2000 000c 1A46     	 mov r2,r3
 2001 000e 0346     	 mov r3,r0
 2002 0010 FB70     	 strb r3,[r7,#3]
 2003 0012 0B46     	 mov r3,r1
 2004 0014 BB70     	 strb r3,[r7,#2]
 2005 0016 1346     	 mov r3,r2
 2006 0018 3B80     	 strh r3,[r7]
 627:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t retries;
 628:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 629:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->GMII_DATA  = data;
 2007              	 .loc 3 629 0
 2008 001a 7B68     	 ldr r3,[r7,#4]
 2009 001c 1B68     	 ldr r3,[r3]
 2010 001e 3A88     	 ldrh r2,[r7]
 2011 0020 5969     	 ldr r1,[r3,#20]
 2012 0022 0021     	 movs r1,#0
 2013 0024 0A43     	 orrs r2,r2,r1
 2014 0026 5A61     	 str r2,[r3,#20]
 630:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->GMII_ADDRESS = (uint32_t)((eth_mac->regs->GMII_ADDRESS & (uint32_t)ETH_GMII_ADDRES
 2015              	 .loc 3 630 0
 2016 0028 7B68     	 ldr r3,[r7,#4]
 2017 002a 1B68     	 ldr r3,[r3]
 2018 002c 7A68     	 ldr r2,[r7,#4]
 2019 002e 1268     	 ldr r2,[r2]
 2020 0030 1269     	 ldr r2,[r2,#16]
 2021 0032 02F03C01 	 and r1,r2,#60
 631:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 632:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MW_Msk |
 633:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos
 2022              	 .loc 3 633 0
 2023 0036 FA78     	 ldrb r2,[r7,#3]
 2024 0038 D202     	 lsls r2,r2,#11
 632:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos
 2025              	 .loc 3 632 0
 2026 003a 1143     	 orrs r1,r1,r2
 634:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)reg_addr << ETH_GMII_ADDRESS_MR_Pos
 2027              	 .loc 3 634 0
 2028 003c BA78     	 ldrb r2,[r7,#2]
 2029 003e 9201     	 lsls r2,r2,#6
 630:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 2030              	 .loc 3 630 0
 2031 0040 0A43     	 orrs r2,r2,r1
 2032 0042 42F00302 	 orr r2,r2,#3
 2033 0046 1969     	 ldr r1,[r3,#16]
 2034 0048 0021     	 movs r1,#0
 2035 004a 0A43     	 orrs r2,r2,r1
 2036 004c 1A61     	 str r2,[r3,#16]
 635:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 636:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****    /* Poll busy bit during max PHY_TIMEOUT time */
 637:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   retries = 0U;
 2037              	 .loc 3 637 0
 2038 004e 0023     	 movs r3,#0
 2039 0050 FB60     	 str r3,[r7,#12]
 2040              	.L80:
 638:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   do
 639:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 640:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     if ((eth_mac->regs->GMII_ADDRESS & ETH_GMII_ADDRESS_MB_Msk) == 0U)
 2041              	 .loc 3 640 0
 2042 0052 7B68     	 ldr r3,[r7,#4]
 2043 0054 1B68     	 ldr r3,[r3]
 2044 0056 1B69     	 ldr r3,[r3,#16]
 2045 0058 03F00103 	 and r3,r3,#1
 2046 005c 002B     	 cmp r3,#0
 2047 005e 01D1     	 bne .L78
 641:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 642:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       return XMC_ETH_MAC_STATUS_OK;
 2048              	 .loc 3 642 0
 2049 0060 0023     	 movs r3,#0
 2050 0062 08E0     	 b .L79
 2051              	.L78:
 643:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 644:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     ++retries;
 2052              	 .loc 3 644 0
 2053 0064 FB68     	 ldr r3,[r7,#12]
 2054 0066 0133     	 adds r3,r3,#1
 2055 0068 FB60     	 str r3,[r7,#12]
 645:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   } while (retries < XMC_ETH_MAC_PHY_MAX_RETRIES);
 2056              	 .loc 3 645 0
 2057 006a FB68     	 ldr r3,[r7,#12]
 2058 006c 4FF6FE72 	 movw r2,#65534
 2059 0070 9342     	 cmp r3,r2
 2060 0072 EED9     	 bls .L80
 646:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 647:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return XMC_ETH_MAC_STATUS_ERROR;
 2061              	 .loc 3 647 0
 2062 0074 0223     	 movs r3,#2
 2063              	.L79:
 648:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2064              	 .loc 3 648 0
 2065 0076 1846     	 mov r0,r3
 2066 0078 1437     	 adds r7,r7,#20
 2067              	.LCFI122:
 2068              	 .cfi_def_cfa_offset 4
 2069 007a BD46     	 mov sp,r7
 2070              	.LCFI123:
 2071              	 .cfi_def_cfa_register 13
 2072              	 
 2073 007c 5DF8047B 	 ldr r7,[sp],#4
 2074              	.LCFI124:
 2075              	 .cfi_restore 7
 2076              	 .cfi_def_cfa_offset 0
 2077 0080 7047     	 bx lr
 2078              	 .cfi_endproc
 2079              	.LFE243:
 2081 0082 00BF     	 .section .text.XMC_ETH_MAC_FlushTx,"ax",%progbits
 2082              	 .align 2
 2083              	 .global XMC_ETH_MAC_FlushTx
 2084              	 .thumb
 2085              	 .thumb_func
 2087              	XMC_ETH_MAC_FlushTx:
 2088              	.LFB244:
 649:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 650:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Flush TX */
 651:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_FlushTx(XMC_ETH_MAC_t *const eth_mac)
 652:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2089              	 .loc 3 652 0
 2090              	 .cfi_startproc
 2091              	 
 2092              	 
 2093 0000 80B5     	 push {r7,lr}
 2094              	.LCFI125:
 2095              	 .cfi_def_cfa_offset 8
 2096              	 .cfi_offset 7,-8
 2097              	 .cfi_offset 14,-4
 2098 0002 82B0     	 sub sp,sp,#8
 2099              	.LCFI126:
 2100              	 .cfi_def_cfa_offset 16
 2101 0004 00AF     	 add r7,sp,#0
 2102              	.LCFI127:
 2103              	 .cfi_def_cfa_register 7
 2104 0006 7860     	 str r0,[r7,#4]
 653:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_ST_Msk;
 2105              	 .loc 3 653 0
 2106 0008 7B68     	 ldr r3,[r7,#4]
 2107 000a 1968     	 ldr r1,[r3]
 2108 000c 7B68     	 ldr r3,[r7,#4]
 2109 000e 1B68     	 ldr r3,[r3]
 2110 0010 03F58053 	 add r3,r3,#4096
 2111 0014 1833     	 adds r3,r3,#24
 2112 0016 1B68     	 ldr r3,[r3]
 2113 0018 23F40052 	 bic r2,r3,#8192
 2114 001c 01F58053 	 add r3,r1,#4096
 2115 0020 1833     	 adds r3,r3,#24
 2116 0022 1968     	 ldr r1,[r3]
 2117 0024 0021     	 movs r1,#0
 2118 0026 0A43     	 orrs r2,r2,r1
 2119 0028 1A60     	 str r2,[r3]
 654:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitTxDescriptors(eth_mac);
 2120              	 .loc 3 654 0
 2121 002a 7868     	 ldr r0,[r7,#4]
 2122 002c FFF7FEFF 	 bl XMC_ETH_MAC_InitTxDescriptors
 655:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_ST_Msk;
 2123              	 .loc 3 655 0
 2124 0030 7B68     	 ldr r3,[r7,#4]
 2125 0032 1968     	 ldr r1,[r3]
 2126 0034 7B68     	 ldr r3,[r7,#4]
 2127 0036 1B68     	 ldr r3,[r3]
 2128 0038 03F58053 	 add r3,r3,#4096
 2129 003c 1833     	 adds r3,r3,#24
 2130 003e 1B68     	 ldr r3,[r3]
 2131 0040 43F40052 	 orr r2,r3,#8192
 2132 0044 01F58053 	 add r3,r1,#4096
 2133 0048 1833     	 adds r3,r3,#24
 2134 004a 1968     	 ldr r1,[r3]
 2135 004c 0021     	 movs r1,#0
 2136 004e 0A43     	 orrs r2,r2,r1
 2137 0050 1A60     	 str r2,[r3]
 656:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2138              	 .loc 3 656 0
 2139 0052 0837     	 adds r7,r7,#8
 2140              	.LCFI128:
 2141              	 .cfi_def_cfa_offset 8
 2142 0054 BD46     	 mov sp,r7
 2143              	.LCFI129:
 2144              	 .cfi_def_cfa_register 13
 2145              	 
 2146 0056 80BD     	 pop {r7,pc}
 2147              	 .cfi_endproc
 2148              	.LFE244:
 2150              	 .section .text.XMC_ETH_MAC_FlushRx,"ax",%progbits
 2151              	 .align 2
 2152              	 .global XMC_ETH_MAC_FlushRx
 2153              	 .thumb
 2154              	 .thumb_func
 2156              	XMC_ETH_MAC_FlushRx:
 2157              	.LFB245:
 657:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 658:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Flush RX */
 659:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_FlushRx(XMC_ETH_MAC_t *const eth_mac)
 660:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2158              	 .loc 3 660 0
 2159              	 .cfi_startproc
 2160              	 
 2161              	 
 2162 0000 80B5     	 push {r7,lr}
 2163              	.LCFI130:
 2164              	 .cfi_def_cfa_offset 8
 2165              	 .cfi_offset 7,-8
 2166              	 .cfi_offset 14,-4
 2167 0002 82B0     	 sub sp,sp,#8
 2168              	.LCFI131:
 2169              	 .cfi_def_cfa_offset 16
 2170 0004 00AF     	 add r7,sp,#0
 2171              	.LCFI132:
 2172              	 .cfi_def_cfa_register 7
 2173 0006 7860     	 str r0,[r7,#4]
 661:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_SR_Msk;
 2174              	 .loc 3 661 0
 2175 0008 7B68     	 ldr r3,[r7,#4]
 2176 000a 1968     	 ldr r1,[r3]
 2177 000c 7B68     	 ldr r3,[r7,#4]
 2178 000e 1B68     	 ldr r3,[r3]
 2179 0010 03F58053 	 add r3,r3,#4096
 2180 0014 1833     	 adds r3,r3,#24
 2181 0016 1B68     	 ldr r3,[r3]
 2182 0018 23F00202 	 bic r2,r3,#2
 2183 001c 01F58053 	 add r3,r1,#4096
 2184 0020 1833     	 adds r3,r3,#24
 2185 0022 1968     	 ldr r1,[r3]
 2186 0024 0021     	 movs r1,#0
 2187 0026 0A43     	 orrs r2,r2,r1
 2188 0028 1A60     	 str r2,[r3]
 662:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitRxDescriptors(eth_mac);
 2189              	 .loc 3 662 0
 2190 002a 7868     	 ldr r0,[r7,#4]
 2191 002c FFF7FEFF 	 bl XMC_ETH_MAC_InitRxDescriptors
 663:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_SR_Msk;
 2192              	 .loc 3 663 0
 2193 0030 7B68     	 ldr r3,[r7,#4]
 2194 0032 1968     	 ldr r1,[r3]
 2195 0034 7B68     	 ldr r3,[r7,#4]
 2196 0036 1B68     	 ldr r3,[r3]
 2197 0038 03F58053 	 add r3,r3,#4096
 2198 003c 1833     	 adds r3,r3,#24
 2199 003e 1B68     	 ldr r3,[r3]
 2200 0040 43F00202 	 orr r2,r3,#2
 2201 0044 01F58053 	 add r3,r1,#4096
 2202 0048 1833     	 adds r3,r3,#24
 2203 004a 1968     	 ldr r1,[r3]
 2204 004c 0021     	 movs r1,#0
 2205 004e 0A43     	 orrs r2,r2,r1
 2206 0050 1A60     	 str r2,[r3]
 664:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2207              	 .loc 3 664 0
 2208 0052 0837     	 adds r7,r7,#8
 2209              	.LCFI133:
 2210              	 .cfi_def_cfa_offset 8
 2211 0054 BD46     	 mov sp,r7
 2212              	.LCFI134:
 2213              	 .cfi_def_cfa_register 13
 2214              	 
 2215 0056 80BD     	 pop {r7,pc}
 2216              	 .cfi_endproc
 2217              	.LFE245:
 2219              	 .section .text.XMC_ETH_MAC_SetWakeUpFrameFilter,"ax",%progbits
 2220              	 .align 2
 2221              	 .global XMC_ETH_MAC_SetWakeUpFrameFilter
 2222              	 .thumb
 2223              	 .thumb_func
 2225              	XMC_ETH_MAC_SetWakeUpFrameFilter:
 2226              	.LFB246:
 665:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 666:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Set wakeup frame filter */
 667:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetWakeUpFrameFilter(XMC_ETH_MAC_t *const eth_mac,
 668:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****                                       const uint32_t (*const filter)[XMC_ETH_WAKEUP_REGISTER_LENGTH
 669:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2227              	 .loc 3 669 0
 2228              	 .cfi_startproc
 2229              	 
 2230              	 
 2231              	 
 2232 0000 80B4     	 push {r7}
 2233              	.LCFI135:
 2234              	 .cfi_def_cfa_offset 4
 2235              	 .cfi_offset 7,-4
 2236 0002 85B0     	 sub sp,sp,#20
 2237              	.LCFI136:
 2238              	 .cfi_def_cfa_offset 24
 2239 0004 00AF     	 add r7,sp,#0
 2240              	.LCFI137:
 2241              	 .cfi_def_cfa_register 7
 2242 0006 7860     	 str r0,[r7,#4]
 2243 0008 3960     	 str r1,[r7]
 670:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t i = 0U;
 2244              	 .loc 3 670 0
 2245 000a 0023     	 movs r3,#0
 2246 000c FB60     	 str r3,[r7,#12]
 671:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 672:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Fill Remote Wake-up frame filter register with buffer data */
 673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   for (i = 0U; i < XMC_ETH_WAKEUP_REGISTER_LENGTH; i++)
 2247              	 .loc 3 673 0
 2248 000e 0023     	 movs r3,#0
 2249 0010 FB60     	 str r3,[r7,#12]
 2250 0012 0CE0     	 b .L84
 2251              	.L85:
 674:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 675:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* Write each time to the same register */
 676:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->REMOTE_WAKE_UP_FRAME_FILTER = (*filter)[i];
 2252              	 .loc 3 676 0 discriminator 3
 2253 0014 7B68     	 ldr r3,[r7,#4]
 2254 0016 1B68     	 ldr r3,[r3]
 2255 0018 3A68     	 ldr r2,[r7]
 2256 001a F968     	 ldr r1,[r7,#12]
 2257 001c 52F82120 	 ldr r2,[r2,r1,lsl#2]
 2258 0020 996A     	 ldr r1,[r3,#40]
 2259 0022 0021     	 movs r1,#0
 2260 0024 0A43     	 orrs r2,r2,r1
 2261 0026 9A62     	 str r2,[r3,#40]
 673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 2262              	 .loc 3 673 0 discriminator 3
 2263 0028 FB68     	 ldr r3,[r7,#12]
 2264 002a 0133     	 adds r3,r3,#1
 2265 002c FB60     	 str r3,[r7,#12]
 2266              	.L84:
 673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 2267              	 .loc 3 673 0 is_stmt 0 discriminator 1
 2268 002e FB68     	 ldr r3,[r7,#12]
 2269 0030 072B     	 cmp r3,#7
 2270 0032 EFD9     	 bls .L85
 677:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 678:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2271              	 .loc 3 678 0 is_stmt 1
 2272 0034 1437     	 adds r7,r7,#20
 2273              	.LCFI138:
 2274              	 .cfi_def_cfa_offset 4
 2275 0036 BD46     	 mov sp,r7
 2276              	.LCFI139:
 2277              	 .cfi_def_cfa_register 13
 2278              	 
 2279 0038 5DF8047B 	 ldr r7,[sp],#4
 2280              	.LCFI140:
 2281              	 .cfi_restore 7
 2282              	 .cfi_def_cfa_offset 0
 2283 003c 7047     	 bx lr
 2284              	 .cfi_endproc
 2285              	.LFE246:
 2287              	 .section .text.XMC_ETH_MAC_EnableEvent,"ax",%progbits
 2288              	 .align 2
 2289              	 .global XMC_ETH_MAC_EnableEvent
 2290              	 .thumb
 2291              	 .thumb_func
 2293              	XMC_ETH_MAC_EnableEvent:
 2294              	.LFB247:
 679:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 680:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Enable event */
 681:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_EnableEvent(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 682:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2295              	 .loc 3 682 0
 2296              	 .cfi_startproc
 2297              	 
 2298              	 
 2299 0000 80B5     	 push {r7,lr}
 2300              	.LCFI141:
 2301              	 .cfi_def_cfa_offset 8
 2302              	 .cfi_offset 7,-8
 2303              	 .cfi_offset 14,-4
 2304 0002 82B0     	 sub sp,sp,#8
 2305              	.LCFI142:
 2306              	 .cfi_def_cfa_offset 16
 2307 0004 00AF     	 add r7,sp,#0
 2308              	.LCFI143:
 2309              	 .cfi_def_cfa_register 7
 2310 0006 7860     	 str r0,[r7,#4]
 2311 0008 3960     	 str r1,[r7]
 683:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_EnableDMAEvent: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 684:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 685:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK &= ~(event >> 16U);
 2312              	 .loc 3 685 0
 2313 000a 7B68     	 ldr r3,[r7,#4]
 2314 000c 1B68     	 ldr r3,[r3]
 2315 000e 7A68     	 ldr r2,[r7,#4]
 2316 0010 1268     	 ldr r2,[r2]
 2317 0012 D16B     	 ldr r1,[r2,#60]
 2318 0014 3A68     	 ldr r2,[r7]
 2319 0016 120C     	 lsrs r2,r2,#16
 2320 0018 D243     	 mvns r2,r2
 2321 001a 0A40     	 ands r2,r2,r1
 2322 001c D96B     	 ldr r1,[r3,#60]
 2323 001e 0021     	 movs r1,#0
 2324 0020 0A43     	 orrs r2,r2,r1
 2325 0022 DA63     	 str r2,[r3,#60]
 686:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 687:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   event &= (uint16_t)0x7fffU;
 2326              	 .loc 3 687 0
 2327 0024 3B68     	 ldr r3,[r7]
 2328 0026 C3F30E03 	 ubfx r3,r3,#0,#15
 2329 002a 3B60     	 str r3,[r7]
 688:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (XCM_ETH_MAC_IsNormalEvent(event))
 2330              	 .loc 3 688 0
 2331 002c 3868     	 ldr r0,[r7]
 2332 002e FFF7FEFF 	 bl XCM_ETH_MAC_IsNormalEvent
 2333 0032 0346     	 mov r3,r0
 2334 0034 002B     	 cmp r3,#0
 2335 0036 03D0     	 beq .L87
 689:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 690:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   event |= (uint32_t)ETH_INTERRUPT_ENABLE_NIE_Msk;
 2336              	 .loc 3 690 0
 2337 0038 3B68     	 ldr r3,[r7]
 2338 003a 43F48033 	 orr r3,r3,#65536
 2339 003e 3B60     	 str r3,[r7]
 2340              	.L87:
 691:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 692:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 693:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (XCM_ETH_MAC_IsAbnormalEvent(event))
 2341              	 .loc 3 693 0
 2342 0040 3868     	 ldr r0,[r7]
 2343 0042 FFF7FEFF 	 bl XCM_ETH_MAC_IsAbnormalEvent
 2344 0046 0346     	 mov r3,r0
 2345 0048 002B     	 cmp r3,#0
 2346 004a 03D0     	 beq .L88
 694:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 695:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   event |= (uint32_t)ETH_INTERRUPT_ENABLE_AIE_Msk;
 2347              	 .loc 3 695 0
 2348 004c 3B68     	 ldr r3,[r7]
 2349 004e 43F40043 	 orr r3,r3,#32768
 2350 0052 3B60     	 str r3,[r7]
 2351              	.L88:
 696:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 697:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_ENABLE |= event;
 2352              	 .loc 3 698 0
 2353 0054 7B68     	 ldr r3,[r7,#4]
 2354 0056 1968     	 ldr r1,[r3]
 2355 0058 7B68     	 ldr r3,[r7,#4]
 2356 005a 1B68     	 ldr r3,[r3]
 2357 005c 03F58053 	 add r3,r3,#4096
 2358 0060 1C33     	 adds r3,r3,#28
 2359 0062 1A68     	 ldr r2,[r3]
 2360 0064 3B68     	 ldr r3,[r7]
 2361 0066 1A43     	 orrs r2,r2,r3
 2362 0068 01F58053 	 add r3,r1,#4096
 2363 006c 1C33     	 adds r3,r3,#28
 2364 006e 1968     	 ldr r1,[r3]
 2365 0070 0021     	 movs r1,#0
 2366 0072 0A43     	 orrs r2,r2,r1
 2367 0074 1A60     	 str r2,[r3]
 699:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2368              	 .loc 3 699 0
 2369 0076 0837     	 adds r7,r7,#8
 2370              	.LCFI144:
 2371              	 .cfi_def_cfa_offset 8
 2372 0078 BD46     	 mov sp,r7
 2373              	.LCFI145:
 2374              	 .cfi_def_cfa_register 13
 2375              	 
 2376 007a 80BD     	 pop {r7,pc}
 2377              	 .cfi_endproc
 2378              	.LFE247:
 2380              	 .section .text.XMC_ETH_MAC_DisableEvent,"ax",%progbits
 2381              	 .align 2
 2382              	 .global XMC_ETH_MAC_DisableEvent
 2383              	 .thumb
 2384              	 .thumb_func
 2386              	XMC_ETH_MAC_DisableEvent:
 2387              	.LFB248:
 700:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 701:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Disable event */
 702:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_DisableEvent(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 703:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2388              	 .loc 3 703 0
 2389              	 .cfi_startproc
 2390              	 
 2391              	 
 2392              	 
 2393 0000 80B4     	 push {r7}
 2394              	.LCFI146:
 2395              	 .cfi_def_cfa_offset 4
 2396              	 .cfi_offset 7,-4
 2397 0002 83B0     	 sub sp,sp,#12
 2398              	.LCFI147:
 2399              	 .cfi_def_cfa_offset 16
 2400 0004 00AF     	 add r7,sp,#0
 2401              	.LCFI148:
 2402              	 .cfi_def_cfa_register 7
 2403 0006 7860     	 str r0,[r7,#4]
 2404 0008 3960     	 str r1,[r7]
 704:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_DisableDMAEvent: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->
 705:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 706:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK |= event >> 16U;
 2405              	 .loc 3 706 0
 2406 000a 7B68     	 ldr r3,[r7,#4]
 2407 000c 1B68     	 ldr r3,[r3]
 2408 000e 7A68     	 ldr r2,[r7,#4]
 2409 0010 1268     	 ldr r2,[r2]
 2410 0012 D16B     	 ldr r1,[r2,#60]
 2411 0014 3A68     	 ldr r2,[r7]
 2412 0016 120C     	 lsrs r2,r2,#16
 2413 0018 0A43     	 orrs r2,r2,r1
 2414 001a D96B     	 ldr r1,[r3,#60]
 2415 001c 0021     	 movs r1,#0
 2416 001e 0A43     	 orrs r2,r2,r1
 2417 0020 DA63     	 str r2,[r3,#60]
 707:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 708:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   event &= 0x7fffU;
 2418              	 .loc 3 708 0
 2419 0022 3B68     	 ldr r3,[r7]
 2420 0024 C3F30E03 	 ubfx r3,r3,#0,#15
 2421 0028 3B60     	 str r3,[r7]
 709:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_ENABLE &= ~event;
 2422              	 .loc 3 709 0
 2423 002a 7B68     	 ldr r3,[r7,#4]
 2424 002c 1968     	 ldr r1,[r3]
 2425 002e 7B68     	 ldr r3,[r7,#4]
 2426 0030 1B68     	 ldr r3,[r3]
 2427 0032 03F58053 	 add r3,r3,#4096
 2428 0036 1C33     	 adds r3,r3,#28
 2429 0038 1A68     	 ldr r2,[r3]
 2430 003a 3B68     	 ldr r3,[r7]
 2431 003c DB43     	 mvns r3,r3
 2432 003e 1A40     	 ands r2,r2,r3
 2433 0040 01F58053 	 add r3,r1,#4096
 2434 0044 1C33     	 adds r3,r3,#28
 2435 0046 1968     	 ldr r1,[r3]
 2436 0048 0021     	 movs r1,#0
 2437 004a 0A43     	 orrs r2,r2,r1
 2438 004c 1A60     	 str r2,[r3]
 710:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2439              	 .loc 3 710 0
 2440 004e 0C37     	 adds r7,r7,#12
 2441              	.LCFI149:
 2442              	 .cfi_def_cfa_offset 4
 2443 0050 BD46     	 mov sp,r7
 2444              	.LCFI150:
 2445              	 .cfi_def_cfa_register 13
 2446              	 
 2447 0052 5DF8047B 	 ldr r7,[sp],#4
 2448              	.LCFI151:
 2449              	 .cfi_restore 7
 2450              	 .cfi_def_cfa_offset 0
 2451 0056 7047     	 bx lr
 2452              	 .cfi_endproc
 2453              	.LFE248:
 2455              	 .section .text.XMC_ETH_MAC_ClearEventStatus,"ax",%progbits
 2456              	 .align 2
 2457              	 .global XMC_ETH_MAC_ClearEventStatus
 2458              	 .thumb
 2459              	 .thumb_func
 2461              	XMC_ETH_MAC_ClearEventStatus:
 2462              	.LFB249:
 711:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 712:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Clear event status */
 713:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_ClearEventStatus(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 714:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2463              	 .loc 3 714 0
 2464              	 .cfi_startproc
 2465              	 
 2466              	 
 2467              	 
 2468 0000 80B4     	 push {r7}
 2469              	.LCFI152:
 2470              	 .cfi_def_cfa_offset 4
 2471              	 .cfi_offset 7,-4
 2472 0002 83B0     	 sub sp,sp,#12
 2473              	.LCFI153:
 2474              	 .cfi_def_cfa_offset 16
 2475 0004 00AF     	 add r7,sp,#0
 2476              	.LCFI154:
 2477              	 .cfi_def_cfa_register 7
 2478 0006 7860     	 str r0,[r7,#4]
 2479 0008 3960     	 str r1,[r7]
 715:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ClearEventStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac-
 716:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 717:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if ((eth_mac->regs->STATUS & ETH_STATUS_NIS_Msk) != 0U)
 2480              	 .loc 3 717 0
 2481 000a 7B68     	 ldr r3,[r7,#4]
 2482 000c 1B68     	 ldr r3,[r3]
 2483 000e 03F58053 	 add r3,r3,#4096
 2484 0012 1433     	 adds r3,r3,#20
 2485 0014 1B68     	 ldr r3,[r3]
 2486 0016 03F48033 	 and r3,r3,#65536
 2487 001a 002B     	 cmp r3,#0
 2488 001c 03D0     	 beq .L91
 718:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 719:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     event |= (uint32_t)ETH_STATUS_NIS_Msk;
 2489              	 .loc 3 719 0
 2490 001e 3B68     	 ldr r3,[r7]
 2491 0020 43F48033 	 orr r3,r3,#65536
 2492 0024 3B60     	 str r3,[r7]
 2493              	.L91:
 720:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 721:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 722:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if ((eth_mac->regs->STATUS & ETH_STATUS_AIS_Msk) != 0U)
 2494              	 .loc 3 722 0
 2495 0026 7B68     	 ldr r3,[r7,#4]
 2496 0028 1B68     	 ldr r3,[r3]
 2497 002a 03F58053 	 add r3,r3,#4096
 2498 002e 1433     	 adds r3,r3,#20
 2499 0030 1B68     	 ldr r3,[r3]
 2500 0032 03F40043 	 and r3,r3,#32768
 2501 0036 002B     	 cmp r3,#0
 2502 0038 03D0     	 beq .L92
 723:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 724:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     event |= (uint32_t)ETH_STATUS_AIS_Msk;
 2503              	 .loc 3 724 0
 2504 003a 3B68     	 ldr r3,[r7]
 2505 003c 43F40043 	 orr r3,r3,#32768
 2506 0040 3B60     	 str r3,[r7]
 2507              	.L92:
 725:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 726:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 727:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->STATUS = event & 0x0001FFFFU;
 2508              	 .loc 3 727 0
 2509 0042 7B68     	 ldr r3,[r7,#4]
 2510 0044 1B68     	 ldr r3,[r3]
 2511 0046 3A68     	 ldr r2,[r7]
 2512 0048 C2F31002 	 ubfx r2,r2,#0,#17
 2513 004c 03F58053 	 add r3,r3,#4096
 2514 0050 1433     	 adds r3,r3,#20
 2515 0052 1968     	 ldr r1,[r3]
 2516 0054 0021     	 movs r1,#0
 2517 0056 0A43     	 orrs r2,r2,r1
 2518 0058 1A60     	 str r2,[r3]
 728:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2519              	 .loc 3 728 0
 2520 005a 0C37     	 adds r7,r7,#12
 2521              	.LCFI155:
 2522              	 .cfi_def_cfa_offset 4
 2523 005c BD46     	 mov sp,r7
 2524              	.LCFI156:
 2525              	 .cfi_def_cfa_register 13
 2526              	 
 2527 005e 5DF8047B 	 ldr r7,[sp],#4
 2528              	.LCFI157:
 2529              	 .cfi_restore 7
 2530              	 .cfi_def_cfa_offset 0
 2531 0062 7047     	 bx lr
 2532              	 .cfi_endproc
 2533              	.LFE249:
 2535              	 .section .text.XMC_ETH_MAC_GetEventStatus,"ax",%progbits
 2536              	 .align 2
 2537              	 .global XMC_ETH_MAC_GetEventStatus
 2538              	 .thumb
 2539              	 .thumb_func
 2541              	XMC_ETH_MAC_GetEventStatus:
 2542              	.LFB250:
 729:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 730:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Obtain event status */
 731:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetEventStatus(const XMC_ETH_MAC_t *const eth_mac)
 732:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2543              	 .loc 3 732 0
 2544              	 .cfi_startproc
 2545              	 
 2546              	 
 2547              	 
 2548 0000 80B4     	 push {r7}
 2549              	.LCFI158:
 2550              	 .cfi_def_cfa_offset 4
 2551              	 .cfi_offset 7,-4
 2552 0002 85B0     	 sub sp,sp,#20
 2553              	.LCFI159:
 2554              	 .cfi_def_cfa_offset 24
 2555 0004 00AF     	 add r7,sp,#0
 2556              	.LCFI160:
 2557              	 .cfi_def_cfa_register 7
 2558 0006 7860     	 str r0,[r7,#4]
 733:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t temp_status = 0;
 2559              	 .loc 3 733 0
 2560 0008 0023     	 movs r3,#0
 2561 000a FB60     	 str r3,[r7,#12]
 734:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetEventStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 735:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   
 736:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   temp_status =  (eth_mac->regs->STATUS & (uint32_t)0x7ffUL);
 2562              	 .loc 3 736 0
 2563 000c 7B68     	 ldr r3,[r7,#4]
 2564 000e 1B68     	 ldr r3,[r3]
 2565 0010 03F58053 	 add r3,r3,#4096
 2566 0014 1433     	 adds r3,r3,#20
 2567 0016 1B68     	 ldr r3,[r3]
 2568 0018 C3F30A03 	 ubfx r3,r3,#0,#11
 2569 001c FB60     	 str r3,[r7,#12]
 737:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 738:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return ((uint32_t)((eth_mac->regs->INTERRUPT_STATUS & (ETH_INTERRUPT_MASK_PMTIM_Msk | ETH_INTERRU
 2570              	 .loc 3 738 0
 2571 001e 7B68     	 ldr r3,[r7,#4]
 2572 0020 1B68     	 ldr r3,[r3]
 2573 0022 9B6B     	 ldr r3,[r3,#56]
 2574 0024 03F40273 	 and r3,r3,#520
 2575 0028 1A04     	 lsls r2,r3,#16
 2576 002a FB68     	 ldr r3,[r7,#12]
 2577 002c 1343     	 orrs r3,r3,r2
 739:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       temp_status);
 740:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2578              	 .loc 3 740 0
 2579 002e 1846     	 mov r0,r3
 2580 0030 1437     	 adds r7,r7,#20
 2581              	.LCFI161:
 2582              	 .cfi_def_cfa_offset 4
 2583 0032 BD46     	 mov sp,r7
 2584              	.LCFI162:
 2585              	 .cfi_def_cfa_register 13
 2586              	 
 2587 0034 5DF8047B 	 ldr r7,[sp],#4
 2588              	.LCFI163:
 2589              	 .cfi_restore 7
 2590              	 .cfi_def_cfa_offset 0
 2591 0038 7047     	 bx lr
 2592              	 .cfi_endproc
 2593              	.LFE250:
 2595 003a 00BF     	 .section .text.XMC_ETH_MAC_ReturnRxDescriptor,"ax",%progbits
 2596              	 .align 2
 2597              	 .global XMC_ETH_MAC_ReturnRxDescriptor
 2598              	 .thumb
 2599              	 .thumb_func
 2601              	XMC_ETH_MAC_ReturnRxDescriptor:
 2602              	.LFB251:
 741:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 742:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Return RX descriptor */
 743:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_ReturnRxDescriptor(XMC_ETH_MAC_t *const eth_mac)
 744:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2603              	 .loc 3 744 0
 2604              	 .cfi_startproc
 2605              	 
 2606              	 
 2607              	 
 2608 0000 80B4     	 push {r7}
 2609              	.LCFI164:
 2610              	 .cfi_def_cfa_offset 4
 2611              	 .cfi_offset 7,-4
 2612 0002 83B0     	 sub sp,sp,#12
 2613              	.LCFI165:
 2614              	 .cfi_def_cfa_offset 16
 2615 0004 00AF     	 add r7,sp,#0
 2616              	.LCFI166:
 2617              	 .cfi_def_cfa_register 7
 2618 0006 7860     	 str r0,[r7,#4]
 745:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_desc[eth_mac->rx_index].status |= ETH_MAC_DMA_RDES0_OWN;
 2619              	 .loc 3 745 0
 2620 0008 7B68     	 ldr r3,[r7,#4]
 2621 000a DA68     	 ldr r2,[r3,#12]
 2622 000c 7B68     	 ldr r3,[r7,#4]
 2623 000e 93F82330 	 ldrb r3,[r3,#35]
 2624 0012 5B01     	 lsls r3,r3,#5
 2625 0014 1344     	 add r3,r3,r2
 2626 0016 7A68     	 ldr r2,[r7,#4]
 2627 0018 D168     	 ldr r1,[r2,#12]
 2628 001a 7A68     	 ldr r2,[r7,#4]
 2629 001c 92F82320 	 ldrb r2,[r2,#35]
 2630 0020 5201     	 lsls r2,r2,#5
 2631 0022 0A44     	 add r2,r2,r1
 2632 0024 1268     	 ldr r2,[r2]
 2633 0026 42F00042 	 orr r2,r2,#-2147483648
 2634 002a 1968     	 ldr r1,[r3]
 2635 002c 0021     	 movs r1,#0
 2636 002e 0A43     	 orrs r2,r2,r1
 2637 0030 1A60     	 str r2,[r3]
 746:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_index++;
 2638              	 .loc 3 746 0
 2639 0032 7B68     	 ldr r3,[r7,#4]
 2640 0034 93F82330 	 ldrb r3,[r3,#35]
 2641 0038 0133     	 adds r3,r3,#1
 2642 003a DAB2     	 uxtb r2,r3
 2643 003c 7B68     	 ldr r3,[r7,#4]
 2644 003e 83F82320 	 strb r2,[r3,#35]
 747:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->rx_index == eth_mac->num_rx_buf)
 2645              	 .loc 3 747 0
 2646 0042 7B68     	 ldr r3,[r7,#4]
 2647 0044 93F82320 	 ldrb r2,[r3,#35]
 2648 0048 7B68     	 ldr r3,[r7,#4]
 2649 004a 93F82030 	 ldrb r3,[r3,#32]
 2650 004e 9A42     	 cmp r2,r3
 2651 0050 03D1     	 bne .L95
 748:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 749:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_index = 0U;
 2652              	 .loc 3 749 0
 2653 0052 7B68     	 ldr r3,[r7,#4]
 2654 0054 0022     	 movs r2,#0
 2655 0056 83F82320 	 strb r2,[r3,#35]
 2656              	.L95:
 750:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   } 
 751:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2657              	 .loc 3 751 0
 2658 005a 0C37     	 adds r7,r7,#12
 2659              	.LCFI167:
 2660              	 .cfi_def_cfa_offset 4
 2661 005c BD46     	 mov sp,r7
 2662              	.LCFI168:
 2663              	 .cfi_def_cfa_register 13
 2664              	 
 2665 005e 5DF8047B 	 ldr r7,[sp],#4
 2666              	.LCFI169:
 2667              	 .cfi_restore 7
 2668              	 .cfi_def_cfa_offset 0
 2669 0062 7047     	 bx lr
 2670              	 .cfi_endproc
 2671              	.LFE251:
 2673              	 .section .text.XMC_ETH_MAC_ReturnTxDescriptor,"ax",%progbits
 2674              	 .align 2
 2675              	 .global XMC_ETH_MAC_ReturnTxDescriptor
 2676              	 .thumb
 2677              	 .thumb_func
 2679              	XMC_ETH_MAC_ReturnTxDescriptor:
 2680              	.LFB252:
 752:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 753:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Return TX descriptor */
 754:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_ReturnTxDescriptor(XMC_ETH_MAC_t *const eth_mac)
 755:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2681              	 .loc 3 755 0
 2682              	 .cfi_startproc
 2683              	 
 2684              	 
 2685              	 
 2686 0000 80B4     	 push {r7}
 2687              	.LCFI170:
 2688              	 .cfi_def_cfa_offset 4
 2689              	 .cfi_offset 7,-4
 2690 0002 83B0     	 sub sp,sp,#12
 2691              	.LCFI171:
 2692              	 .cfi_def_cfa_offset 16
 2693 0004 00AF     	 add r7,sp,#0
 2694              	.LCFI172:
 2695              	 .cfi_def_cfa_register 7
 2696 0006 7860     	 str r0,[r7,#4]
 756:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_ts_index = eth_mac->tx_index;
 2697              	 .loc 3 756 0
 2698 0008 7B68     	 ldr r3,[r7,#4]
 2699 000a 93F82220 	 ldrb r2,[r3,#34]
 2700 000e 7B68     	 ldr r3,[r7,#4]
 2701 0010 83F82420 	 strb r2,[r3,#36]
 757:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 758:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_desc[eth_mac->tx_index].status |= ETH_MAC_DMA_TDES0_CIC |ETH_MAC_DMA_TDES0_OWN;
 2702              	 .loc 3 758 0
 2703 0014 7B68     	 ldr r3,[r7,#4]
 2704 0016 1A69     	 ldr r2,[r3,#16]
 2705 0018 7B68     	 ldr r3,[r7,#4]
 2706 001a 93F82230 	 ldrb r3,[r3,#34]
 2707 001e 5B01     	 lsls r3,r3,#5
 2708 0020 1A44     	 add r2,r2,r3
 2709 0022 7B68     	 ldr r3,[r7,#4]
 2710 0024 1969     	 ldr r1,[r3,#16]
 2711 0026 7B68     	 ldr r3,[r7,#4]
 2712 0028 93F82230 	 ldrb r3,[r3,#34]
 2713 002c 5B01     	 lsls r3,r3,#5
 2714 002e 0B44     	 add r3,r3,r1
 2715 0030 1B68     	 ldr r3,[r3]
 2716 0032 43F00043 	 orr r3,r3,#-2147483648
 2717 0036 43F44003 	 orr r3,r3,#12582912
 2718 003a 1168     	 ldr r1,[r2]
 2719 003c 0021     	 movs r1,#0
 2720 003e 0B43     	 orrs r3,r3,r1
 2721 0040 1360     	 str r3,[r2]
 759:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_index++;
 2722              	 .loc 3 759 0
 2723 0042 7B68     	 ldr r3,[r7,#4]
 2724 0044 93F82230 	 ldrb r3,[r3,#34]
 2725 0048 0133     	 adds r3,r3,#1
 2726 004a DAB2     	 uxtb r2,r3
 2727 004c 7B68     	 ldr r3,[r7,#4]
 2728 004e 83F82220 	 strb r2,[r3,#34]
 760:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->tx_index == eth_mac->num_tx_buf)
 2729              	 .loc 3 760 0
 2730 0052 7B68     	 ldr r3,[r7,#4]
 2731 0054 93F82220 	 ldrb r2,[r3,#34]
 2732 0058 7B68     	 ldr r3,[r7,#4]
 2733 005a 93F82130 	 ldrb r3,[r3,#33]
 2734 005e 9A42     	 cmp r2,r3
 2735 0060 03D1     	 bne .L98
 761:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 762:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     eth_mac->tx_index = 0U;
 2736              	 .loc 3 762 0
 2737 0062 7B68     	 ldr r3,[r7,#4]
 2738 0064 0022     	 movs r2,#0
 2739 0066 83F82220 	 strb r2,[r3,#34]
 2740              	.L98:
 763:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   } 
 764:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 765:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->frame_end = NULL;
 2741              	 .loc 3 765 0
 2742 006a 7B68     	 ldr r3,[r7,#4]
 2743 006c 0022     	 movs r2,#0
 2744 006e 1A77     	 strb r2,[r3,#28]
 2745 0070 0022     	 movs r2,#0
 2746 0072 5A77     	 strb r2,[r3,#29]
 2747 0074 0022     	 movs r2,#0
 2748 0076 9A77     	 strb r2,[r3,#30]
 2749 0078 0022     	 movs r2,#0
 2750 007a DA77     	 strb r2,[r3,#31]
 766:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2751              	 .loc 3 766 0
 2752 007c 0C37     	 adds r7,r7,#12
 2753              	.LCFI173:
 2754              	 .cfi_def_cfa_offset 4
 2755 007e BD46     	 mov sp,r7
 2756              	.LCFI174:
 2757              	 .cfi_def_cfa_register 13
 2758              	 
 2759 0080 5DF8047B 	 ldr r7,[sp],#4
 2760              	.LCFI175:
 2761              	 .cfi_restore 7
 2762              	 .cfi_def_cfa_offset 0
 2763 0084 7047     	 bx lr
 2764              	 .cfi_endproc
 2765              	.LFE252:
 2767 0086 00BF     	 .section .text.XMC_ETH_MAC_SetVLANTag,"ax",%progbits
 2768              	 .align 2
 2769              	 .global XMC_ETH_MAC_SetVLANTag
 2770              	 .thumb
 2771              	 .thumb_func
 2773              	XMC_ETH_MAC_SetVLANTag:
 2774              	.LFB253:
 767:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 768:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Set VLAN tag */
 769:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetVLANTag(XMC_ETH_MAC_t *const eth_mac, uint32_t tag)
 770:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2775              	 .loc 3 770 0
 2776              	 .cfi_startproc
 2777              	 
 2778              	 
 2779              	 
 2780 0000 80B4     	 push {r7}
 2781              	.LCFI176:
 2782              	 .cfi_def_cfa_offset 4
 2783              	 .cfi_offset 7,-4
 2784 0002 83B0     	 sub sp,sp,#12
 2785              	.LCFI177:
 2786              	 .cfi_def_cfa_offset 16
 2787 0004 00AF     	 add r7,sp,#0
 2788              	.LCFI178:
 2789              	 .cfi_def_cfa_register 7
 2790 0006 7860     	 str r0,[r7,#4]
 2791 0008 3960     	 str r1,[r7]
 771:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetVLANTag: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 772:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 773:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->VLAN_TAG = tag;
 2792              	 .loc 3 773 0
 2793 000a 7B68     	 ldr r3,[r7,#4]
 2794 000c 1B68     	 ldr r3,[r3]
 2795 000e DA69     	 ldr r2,[r3,#28]
 2796 0010 0021     	 movs r1,#0
 2797 0012 3A68     	 ldr r2,[r7]
 2798 0014 0A43     	 orrs r2,r2,r1
 2799 0016 DA61     	 str r2,[r3,#28]
 774:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2800              	 .loc 3 774 0
 2801 0018 0C37     	 adds r7,r7,#12
 2802              	.LCFI179:
 2803              	 .cfi_def_cfa_offset 4
 2804 001a BD46     	 mov sp,r7
 2805              	.LCFI180:
 2806              	 .cfi_def_cfa_register 13
 2807              	 
 2808 001c 5DF8047B 	 ldr r7,[sp],#4
 2809              	.LCFI181:
 2810              	 .cfi_restore 7
 2811              	 .cfi_def_cfa_offset 0
 2812 0020 7047     	 bx lr
 2813              	 .cfi_endproc
 2814              	.LFE253:
 2816              	 .section .text.XMC_ETH_MAC_InitPTP,"ax",%progbits
 2817              	 .align 2
 2818              	 .global XMC_ETH_MAC_InitPTP
 2819              	 .thumb
 2820              	 .thumb_func
 2822              	XMC_ETH_MAC_InitPTP:
 2823              	.LFB254:
 775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 776:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Initialize PTP */
 777:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitPTP(XMC_ETH_MAC_t *const eth_mac, uint32_t config)
 778:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2824              	 .loc 3 778 0
 2825              	 .cfi_startproc
 2826              	 
 2827              	 
 2828 0000 90B5     	 push {r4,r7,lr}
 2829              	.LCFI182:
 2830              	 .cfi_def_cfa_offset 12
 2831              	 .cfi_offset 4,-12
 2832              	 .cfi_offset 7,-8
 2833              	 .cfi_offset 14,-4
 2834 0002 85B0     	 sub sp,sp,#20
 2835              	.LCFI183:
 2836              	 .cfi_def_cfa_offset 32
 2837 0004 00AF     	 add r7,sp,#0
 2838              	.LCFI184:
 2839              	 .cfi_def_cfa_register 7
 2840 0006 7860     	 str r0,[r7,#4]
 2841 0008 3960     	 str r1,[r7]
 779:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitPTP: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 780:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 781:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Mask the time stamp interrupt */
 782:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK |= (uint32_t)ETH_INTERRUPT_MASK_TSIM_Msk;
 2842              	 .loc 3 782 0
 2843 000a 7B68     	 ldr r3,[r7,#4]
 2844 000c 1B68     	 ldr r3,[r3]
 2845 000e 7A68     	 ldr r2,[r7,#4]
 2846 0010 1268     	 ldr r2,[r2]
 2847 0012 D26B     	 ldr r2,[r2,#60]
 2848 0014 42F40072 	 orr r2,r2,#512
 2849 0018 D96B     	 ldr r1,[r3,#60]
 2850 001a 0021     	 movs r1,#0
 2851 001c 0A43     	 orrs r2,r2,r1
 2852 001e DA63     	 str r2,[r3,#60]
 783:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 784:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Enable time stamp, rollover mode of nanosecond counter set to digital mode, i.e. after 0x3B9AC
 785:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL = ETH_TIMESTAMP_CONTROL_TSENA_Msk | ETH_TIMESTAMP_CONTROL_TSCTRL
 2853              	 .loc 3 785 0
 2854 0020 7B68     	 ldr r3,[r7,#4]
 2855 0022 1A68     	 ldr r2,[r3]
 2856 0024 3B68     	 ldr r3,[r7]
 2857 0026 43F40073 	 orr r3,r3,#512
 2858 002a 43F00103 	 orr r3,r3,#1
 2859 002e D2F80017 	 ldr r1,[r2,#1792]
 2860 0032 0021     	 movs r1,#0
 2861 0034 0B43     	 orrs r3,r3,r1
 2862 0036 C2F80037 	 str r3,[r2,#1792]
 786:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 787:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if ((config & (uint32_t)XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE) != 0U)
 2863              	 .loc 3 787 0
 2864 003a 3B68     	 ldr r3,[r7]
 2865 003c 03F00203 	 and r3,r3,#2
 2866 0040 002B     	 cmp r3,#0
 2867 0042 42D0     	 beq .L101
 2868              	.LBB2:
 788:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 789:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* Program sub-second increment register based on PTP clock frequency ~ 50MHz */
 790:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->SUB_SECOND_INCREMENT = 20;
 2869              	 .loc 3 790 0
 2870 0044 7B68     	 ldr r3,[r7,#4]
 2871 0046 1B68     	 ldr r3,[r3]
 2872 0048 D3F80427 	 ldr r2,[r3,#1796]
 2873 004c 0022     	 movs r2,#0
 2874 004e 42F01402 	 orr r2,r2,#20
 2875 0052 C3F80427 	 str r2,[r3,#1796]
 791:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     
 792:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* fSYS = Reference Clock for the Time Stamp Update Logic*/
 793:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     float ratio = (float)XMC_SCU_CLOCK_GetSystemClockFrequency() / (float)XMC_ETH_SUB_SECOND_UPDATE
 2876              	 .loc 3 793 0
 2877 0056 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2878 005a 07EE900A 	 fmsr s15,r0
 2879 005e F8EE677A 	 fuitos s15,s15
 2880 0062 9FED347A 	 flds s14,.L105
 2881 0066 C7EE877A 	 fdivs s15,s15,s14
 2882 006a C7ED037A 	 fsts s15,[r7,#12]
 794:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->TIMESTAMP_ADDEND = (uint32_t)(((float)0x100000000ULL / ratio) + 0.5F);
 2883              	 .loc 3 794 0
 2884 006e 7B68     	 ldr r3,[r7,#4]
 2885 0070 1B68     	 ldr r3,[r3]
 2886 0072 9FED317A 	 flds s14,.L105+4
 2887 0076 D7ED037A 	 flds s15,[r7,#12]
 2888 007a C7EE277A 	 fdivs s15,s14,s15
 2889 007e B6EE007A 	 fconsts s14,#96
 2890 0082 77EE877A 	 fadds s15,s15,s14
 2891 0086 FCEEE77A 	 ftouizs s15,s15
 2892 008a 17EE901A 	 fmrs r1,s15
 2893 008e D3F81827 	 ldr r2,[r3,#1816]
 2894 0092 0022     	 movs r2,#0
 2895 0094 0A43     	 orrs r2,r2,r1
 2896 0096 C3F81827 	 str r2,[r3,#1816]
 795:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 796:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* Addend register update */
 797:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 2897              	 .loc 3 797 0
 2898 009a 7B68     	 ldr r3,[r7,#4]
 2899 009c 1B68     	 ldr r3,[r3]
 2900 009e 7A68     	 ldr r2,[r7,#4]
 2901 00a0 1268     	 ldr r2,[r2]
 2902 00a2 D2F80027 	 ldr r2,[r2,#1792]
 2903 00a6 42F02002 	 orr r2,r2,#32
 2904 00aa D3F80017 	 ldr r1,[r3,#1792]
 2905 00ae 0021     	 movs r1,#0
 2906 00b0 0A43     	 orrs r2,r2,r1
 2907 00b2 C3F80027 	 str r2,[r3,#1792]
 798:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 799:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     /* Poll the Timestamp Control register until the bit TSADDREG is cleared */
 800:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSADDREG_Msk);
 2908              	 .loc 3 800 0
 2909 00b6 00BF     	 nop
 2910              	.L102:
 2911              	 .loc 3 800 0 is_stmt 0 discriminator 1
 2912 00b8 7B68     	 ldr r3,[r7,#4]
 2913 00ba 1B68     	 ldr r3,[r3]
 2914 00bc D3F80037 	 ldr r3,[r3,#1792]
 2915 00c0 03F02003 	 and r3,r3,#32
 2916 00c4 002B     	 cmp r3,#0
 2917 00c6 F7D1     	 bne .L102
 2918              	.LBE2:
 2919 00c8 19E0     	 b .L103
 2920              	.L101:
 801:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 802:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else
 803:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 804:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Program sub-second increment register based on PTP clock frequency = fSYS/2 */
 805:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SUB_SECOND_INCREMENT = (uint32_t)(((float)1000000000 / (float)XMC_SCU_CLOCK_GetSys
 2921              	 .loc 3 805 0 is_stmt 1
 2922 00ca 7B68     	 ldr r3,[r7,#4]
 2923 00cc 1C68     	 ldr r4,[r3]
 2924 00ce FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2925 00d2 07EE900A 	 fmsr s15,r0
 2926 00d6 F8EE677A 	 fuitos s15,s15
 2927 00da 9FED187A 	 flds s14,.L105+8
 2928 00de C7EE277A 	 fdivs s15,s14,s15
 2929 00e2 B6EE007A 	 fconsts s14,#96
 2930 00e6 77EE877A 	 fadds s15,s15,s14
 2931 00ea FCEEE77A 	 ftouizs s15,s15
 2932 00ee 17EE902A 	 fmrs r2,s15
 2933 00f2 D4F80437 	 ldr r3,[r4,#1796]
 2934 00f6 0023     	 movs r3,#0
 2935 00f8 1343     	 orrs r3,r3,r2
 2936 00fa C4F80437 	 str r3,[r4,#1796]
 2937              	.L103:
 806:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 807:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   
 808:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSINIT_Msk;
 2938              	 .loc 3 808 0
 2939 00fe 7B68     	 ldr r3,[r7,#4]
 2940 0100 1B68     	 ldr r3,[r3]
 2941 0102 7A68     	 ldr r2,[r7,#4]
 2942 0104 1268     	 ldr r2,[r2]
 2943 0106 D2F80027 	 ldr r2,[r2,#1792]
 2944 010a 42F00402 	 orr r2,r2,#4
 2945 010e D3F80017 	 ldr r1,[r3,#1792]
 2946 0112 0021     	 movs r1,#0
 2947 0114 0A43     	 orrs r2,r2,r1
 2948 0116 C3F80027 	 str r2,[r3,#1792]
 809:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSINIT_Msk);  
 2949              	 .loc 3 809 0
 2950 011a 00BF     	 nop
 2951              	.L104:
 2952              	 .loc 3 809 0 is_stmt 0 discriminator 1
 2953 011c 7B68     	 ldr r3,[r7,#4]
 2954 011e 1B68     	 ldr r3,[r3]
 2955 0120 D3F80037 	 ldr r3,[r3,#1792]
 2956 0124 03F00403 	 and r3,r3,#4
 2957 0128 002B     	 cmp r3,#0
 2958 012a F7D1     	 bne .L104
 810:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 2959              	 .loc 3 810 0 is_stmt 1
 2960 012c 1437     	 adds r7,r7,#20
 2961              	.LCFI185:
 2962              	 .cfi_def_cfa_offset 12
 2963 012e BD46     	 mov sp,r7
 2964              	.LCFI186:
 2965              	 .cfi_def_cfa_register 13
 2966              	 
 2967 0130 90BD     	 pop {r4,r7,pc}
 2968              	.L106:
 2969 0132 00BF     	 .align 2
 2970              	.L105:
 2971 0134 20BC3E4C 	 .word 1279179808
 2972 0138 0000804F 	 .word 1333788672
 2973 013c 286B6E4E 	 .word 1315859240
 2974              	 .cfi_endproc
 2975              	.LFE254:
 2977              	 .section .text.XMC_ETH_MAC_InitPTPEx,"ax",%progbits
 2978              	 .align 2
 2979              	 .global XMC_ETH_MAC_InitPTPEx
 2980              	 .thumb
 2981              	 .thumb_func
 2983              	XMC_ETH_MAC_InitPTPEx:
 2984              	.LFB255:
 811:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 812:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Initialize PTP using a given time */
 813:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitPTPEx(XMC_ETH_MAC_t *const eth_mac, uint32_t config, XMC_ETH_MAC_TIME_t *const
 814:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 2985              	 .loc 3 814 0
 2986              	 .cfi_startproc
 2987              	 
 2988              	 
 2989 0000 80B5     	 push {r7,lr}
 2990              	.LCFI187:
 2991              	 .cfi_def_cfa_offset 8
 2992              	 .cfi_offset 7,-8
 2993              	 .cfi_offset 14,-4
 2994 0002 84B0     	 sub sp,sp,#16
 2995              	.LCFI188:
 2996              	 .cfi_def_cfa_offset 24
 2997 0004 00AF     	 add r7,sp,#0
 2998              	.LCFI189:
 2999              	 .cfi_def_cfa_register 7
 3000 0006 F860     	 str r0,[r7,#12]
 3001 0008 B960     	 str r1,[r7,#8]
 3002 000a 7A60     	 str r2,[r7,#4]
 815:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitPTP: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 816:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 817:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Initialize the system time */
 818:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = time->nanoseconds;
 3003              	 .loc 3 818 0
 3004 000c FB68     	 ldr r3,[r7,#12]
 3005 000e 1B68     	 ldr r3,[r3]
 3006 0010 7A68     	 ldr r2,[r7,#4]
 3007 0012 5268     	 ldr r2,[r2,#4]
 3008 0014 1146     	 mov r1,r2
 3009 0016 D3F81427 	 ldr r2,[r3,#1812]
 3010 001a 0022     	 movs r2,#0
 3011 001c 0A43     	 orrs r2,r2,r1
 3012 001e C3F81427 	 str r2,[r3,#1812]
 819:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 3013              	 .loc 3 819 0
 3014 0022 FB68     	 ldr r3,[r7,#12]
 3015 0024 1B68     	 ldr r3,[r3]
 3016 0026 7A68     	 ldr r2,[r7,#4]
 3017 0028 1268     	 ldr r2,[r2]
 3018 002a D3F81017 	 ldr r1,[r3,#1808]
 3019 002e 0021     	 movs r1,#0
 3020 0030 0A43     	 orrs r2,r2,r1
 3021 0032 C3F81027 	 str r2,[r3,#1808]
 820:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 821:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitPTP(eth_mac, config);
 3022              	 .loc 3 821 0
 3023 0036 F868     	 ldr r0,[r7,#12]
 3024 0038 B968     	 ldr r1,[r7,#8]
 3025 003a FFF7FEFF 	 bl XMC_ETH_MAC_InitPTP
 822:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3026              	 .loc 3 822 0
 3027 003e 1037     	 adds r7,r7,#16
 3028              	.LCFI190:
 3029              	 .cfi_def_cfa_offset 8
 3030 0040 BD46     	 mov sp,r7
 3031              	.LCFI191:
 3032              	 .cfi_def_cfa_register 13
 3033              	 
 3034 0042 80BD     	 pop {r7,pc}
 3035              	 .cfi_endproc
 3036              	.LFE255:
 3038              	 .section .text.XMC_ETH_MAC_GetPTPTime,"ax",%progbits
 3039              	 .align 2
 3040              	 .global XMC_ETH_MAC_GetPTPTime
 3041              	 .thumb
 3042              	 .thumb_func
 3044              	XMC_ETH_MAC_GetPTPTime:
 3045              	.LFB256:
 823:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 824:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Get PTP time */
 825:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_GetPTPTime(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)
 826:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 3046              	 .loc 3 826 0
 3047              	 .cfi_startproc
 3048              	 
 3049              	 
 3050              	 
 3051 0000 80B4     	 push {r7}
 3052              	.LCFI192:
 3053              	 .cfi_def_cfa_offset 4
 3054              	 .cfi_offset 7,-4
 3055 0002 83B0     	 sub sp,sp,#12
 3056              	.LCFI193:
 3057              	 .cfi_def_cfa_offset 16
 3058 0004 00AF     	 add r7,sp,#0
 3059              	.LCFI194:
 3060              	 .cfi_def_cfa_register 7
 3061 0006 7860     	 str r0,[r7,#4]
 3062 0008 3960     	 str r1,[r7]
 827:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 828:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 829:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   time->nanoseconds = (uint32_t)(eth_mac->regs->SYSTEM_TIME_NANOSECONDS); /* accuracy of 1 ns */
 3063              	 .loc 3 829 0
 3064 000a 7B68     	 ldr r3,[r7,#4]
 3065 000c 1B68     	 ldr r3,[r3]
 3066 000e D3F80C37 	 ldr r3,[r3,#1804]
 3067 0012 1A46     	 mov r2,r3
 3068 0014 3B68     	 ldr r3,[r7]
 3069 0016 5A60     	 str r2,[r3,#4]
 830:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   time->seconds = eth_mac->regs->SYSTEM_TIME_SECONDS;
 3070              	 .loc 3 830 0
 3071 0018 7B68     	 ldr r3,[r7,#4]
 3072 001a 1B68     	 ldr r3,[r3]
 3073 001c D3F80827 	 ldr r2,[r3,#1800]
 3074 0020 3B68     	 ldr r3,[r7]
 3075 0022 1A60     	 str r2,[r3]
 831:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3076              	 .loc 3 831 0
 3077 0024 0C37     	 adds r7,r7,#12
 3078              	.LCFI195:
 3079              	 .cfi_def_cfa_offset 4
 3080 0026 BD46     	 mov sp,r7
 3081              	.LCFI196:
 3082              	 .cfi_def_cfa_register 13
 3083              	 
 3084 0028 5DF8047B 	 ldr r7,[sp],#4
 3085              	.LCFI197:
 3086              	 .cfi_restore 7
 3087              	 .cfi_def_cfa_offset 0
 3088 002c 7047     	 bx lr
 3089              	 .cfi_endproc
 3090              	.LFE256:
 3092 002e 00BF     	 .section .text.XMC_ETH_MAC_SetPTPTime,"ax",%progbits
 3093              	 .align 2
 3094              	 .global XMC_ETH_MAC_SetPTPTime
 3095              	 .thumb
 3096              	 .thumb_func
 3098              	XMC_ETH_MAC_SetPTPTime:
 3099              	.LFB257:
 832:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 833:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Set PTP time */
 834:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetPTPTime(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)
 835:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 3100              	 .loc 3 835 0
 3101              	 .cfi_startproc
 3102              	 
 3103              	 
 3104              	 
 3105 0000 80B4     	 push {r7}
 3106              	.LCFI198:
 3107              	 .cfi_def_cfa_offset 4
 3108              	 .cfi_offset 7,-4
 3109 0002 83B0     	 sub sp,sp,#12
 3110              	.LCFI199:
 3111              	 .cfi_def_cfa_offset 16
 3112 0004 00AF     	 add r7,sp,#0
 3113              	.LCFI200:
 3114              	 .cfi_def_cfa_register 7
 3115 0006 7860     	 str r0,[r7,#4]
 3116 0008 3960     	 str r1,[r7]
 836:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 837:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 838:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 3117              	 .loc 3 838 0
 3118 000a 7B68     	 ldr r3,[r7,#4]
 3119 000c 1B68     	 ldr r3,[r3]
 3120 000e 3A68     	 ldr r2,[r7]
 3121 0010 1268     	 ldr r2,[r2]
 3122 0012 D3F81017 	 ldr r1,[r3,#1808]
 3123 0016 0021     	 movs r1,#0
 3124 0018 0A43     	 orrs r2,r2,r1
 3125 001a C3F81027 	 str r2,[r3,#1808]
 839:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = time->nanoseconds;
 3126              	 .loc 3 839 0
 3127 001e 7B68     	 ldr r3,[r7,#4]
 3128 0020 1B68     	 ldr r3,[r3]
 3129 0022 3A68     	 ldr r2,[r7]
 3130 0024 5268     	 ldr r2,[r2,#4]
 3131 0026 1146     	 mov r1,r2
 3132 0028 D3F81427 	 ldr r2,[r3,#1812]
 3133 002c 0022     	 movs r2,#0
 3134 002e 0A43     	 orrs r2,r2,r1
 3135 0030 C3F81427 	 str r2,[r3,#1812]
 840:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 841:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Initialize precision timer */
 842:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   ETH0->TIMESTAMP_CONTROL |= ETH_TIMESTAMP_CONTROL_TSINIT_Msk;
 3136              	 .loc 3 842 0
 3137 0034 0C4B     	 ldr r3,.L111
 3138 0036 0C4A     	 ldr r2,.L111
 3139 0038 D2F80027 	 ldr r2,[r2,#1792]
 3140 003c 42F00402 	 orr r2,r2,#4
 3141 0040 D3F80017 	 ldr r1,[r3,#1792]
 3142 0044 0021     	 movs r1,#0
 3143 0046 0A43     	 orrs r2,r2,r1
 3144 0048 C3F80027 	 str r2,[r3,#1792]
 843:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSINIT_Msk);
 3145              	 .loc 3 843 0
 3146 004c 00BF     	 nop
 3147              	.L110:
 3148              	 .loc 3 843 0 is_stmt 0 discriminator 1
 3149 004e 7B68     	 ldr r3,[r7,#4]
 3150 0050 1B68     	 ldr r3,[r3]
 3151 0052 D3F80037 	 ldr r3,[r3,#1792]
 3152 0056 03F00403 	 and r3,r3,#4
 3153 005a 002B     	 cmp r3,#0
 3154 005c F7D1     	 bne .L110
 844:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3155              	 .loc 3 844 0 is_stmt 1
 3156 005e 0C37     	 adds r7,r7,#12
 3157              	.LCFI201:
 3158              	 .cfi_def_cfa_offset 4
 3159 0060 BD46     	 mov sp,r7
 3160              	.LCFI202:
 3161              	 .cfi_def_cfa_register 13
 3162              	 
 3163 0062 5DF8047B 	 ldr r7,[sp],#4
 3164              	.LCFI203:
 3165              	 .cfi_restore 7
 3166              	 .cfi_def_cfa_offset 0
 3167 0066 7047     	 bx lr
 3168              	.L112:
 3169              	 .align 2
 3170              	.L111:
 3171 0068 00C00050 	 .word 1342226432
 3172              	 .cfi_endproc
 3173              	.LFE257:
 3175              	 .section .text.XMC_ETH_MAC_UpdatePTPTime,"ax",%progbits
 3176              	 .align 2
 3177              	 .global XMC_ETH_MAC_UpdatePTPTime
 3178              	 .thumb
 3179              	 .thumb_func
 3181              	XMC_ETH_MAC_UpdatePTPTime:
 3182              	.LFB258:
 845:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 846:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Update PTP time */
 847:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_UpdatePTPTime(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)
 848:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 3183              	 .loc 3 848 0
 3184              	 .cfi_startproc
 3185              	 
 3186              	 
 3187              	 
 3188 0000 80B4     	 push {r7}
 3189              	.LCFI204:
 3190              	 .cfi_def_cfa_offset 4
 3191              	 .cfi_offset 7,-4
 3192 0002 85B0     	 sub sp,sp,#20
 3193              	.LCFI205:
 3194              	 .cfi_def_cfa_offset 24
 3195 0004 00AF     	 add r7,sp,#0
 3196              	.LCFI206:
 3197              	 .cfi_def_cfa_register 7
 3198 0006 7860     	 str r0,[r7,#4]
 3199 0008 3960     	 str r1,[r7]
 849:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   uint32_t temp;
 850:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 851:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_UpdatePTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->re
 852:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_UpdatePTPTime: time.time_stamp_nanoseconds not in range", (time->nanoseco
 853:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 854:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   temp = (uint32_t)(abs(time->nanoseconds));
 3200              	 .loc 3 854 0
 3201 000a 3B68     	 ldr r3,[r7]
 3202 000c 5B68     	 ldr r3,[r3,#4]
 3203 000e 002B     	 cmp r3,#0
 3204 0010 B8BF     	 it lt
 3205 0012 5B42     	 rsblt r3,r3,#0
 3206 0014 FB60     	 str r3,[r7,#12]
 855:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (time->nanoseconds < 0)
 3207              	 .loc 3 855 0
 3208 0016 3B68     	 ldr r3,[r7]
 3209 0018 5B68     	 ldr r3,[r3,#4]
 3210 001a 002B     	 cmp r3,#0
 3211 001c 03DA     	 bge .L114
 856:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 857:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     temp |= (uint32_t)ETH_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB_Msk;
 3212              	 .loc 3 857 0
 3213 001e FB68     	 ldr r3,[r7,#12]
 3214 0020 43F00043 	 orr r3,r3,#-2147483648
 3215 0024 FB60     	 str r3,[r7,#12]
 3216              	.L114:
 858:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 859:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 860:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = temp;
 3217              	 .loc 3 860 0
 3218 0026 7B68     	 ldr r3,[r7,#4]
 3219 0028 1B68     	 ldr r3,[r3]
 3220 002a D3F81427 	 ldr r2,[r3,#1812]
 3221 002e 0021     	 movs r1,#0
 3222 0030 FA68     	 ldr r2,[r7,#12]
 3223 0032 0A43     	 orrs r2,r2,r1
 3224 0034 C3F81427 	 str r2,[r3,#1812]
 861:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 3225              	 .loc 3 861 0
 3226 0038 7B68     	 ldr r3,[r7,#4]
 3227 003a 1B68     	 ldr r3,[r3]
 3228 003c 3A68     	 ldr r2,[r7]
 3229 003e 1268     	 ldr r2,[r2]
 3230 0040 D3F81017 	 ldr r1,[r3,#1808]
 3231 0044 0021     	 movs r1,#0
 3232 0046 0A43     	 orrs r2,r2,r1
 3233 0048 C3F81027 	 str r2,[r3,#1808]
 862:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 863:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSUPDT_Msk;
 3234              	 .loc 3 863 0
 3235 004c 7B68     	 ldr r3,[r7,#4]
 3236 004e 1B68     	 ldr r3,[r3]
 3237 0050 7A68     	 ldr r2,[r7,#4]
 3238 0052 1268     	 ldr r2,[r2]
 3239 0054 D2F80027 	 ldr r2,[r2,#1792]
 3240 0058 42F00802 	 orr r2,r2,#8
 3241 005c D3F80017 	 ldr r1,[r3,#1792]
 3242 0060 0021     	 movs r1,#0
 3243 0062 0A43     	 orrs r2,r2,r1
 3244 0064 C3F80027 	 str r2,[r3,#1792]
 864:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3245              	 .loc 3 864 0
 3246 0068 1437     	 adds r7,r7,#20
 3247              	.LCFI207:
 3248              	 .cfi_def_cfa_offset 4
 3249 006a BD46     	 mov sp,r7
 3250              	.LCFI208:
 3251              	 .cfi_def_cfa_register 13
 3252              	 
 3253 006c 5DF8047B 	 ldr r7,[sp],#4
 3254              	.LCFI209:
 3255              	 .cfi_restore 7
 3256              	 .cfi_def_cfa_offset 0
 3257 0070 7047     	 bx lr
 3258              	 .cfi_endproc
 3259              	.LFE258:
 3261 0072 00BF     	 .section .text.XMC_ETH_MAC_SetPTPAlarm,"ax",%progbits
 3262              	 .align 2
 3263              	 .global XMC_ETH_MAC_SetPTPAlarm
 3264              	 .thumb
 3265              	 .thumb_func
 3267              	XMC_ETH_MAC_SetPTPAlarm:
 3268              	.LFB259:
 865:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 866:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Set PTP alarm */
 867:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetPTPAlarm(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)
 868:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 3269              	 .loc 3 868 0
 3270              	 .cfi_startproc
 3271              	 
 3272              	 
 3273              	 
 3274 0000 80B4     	 push {r7}
 3275              	.LCFI210:
 3276              	 .cfi_def_cfa_offset 4
 3277              	 .cfi_offset 7,-4
 3278 0002 83B0     	 sub sp,sp,#12
 3279              	.LCFI211:
 3280              	 .cfi_def_cfa_offset 16
 3281 0004 00AF     	 add r7,sp,#0
 3282              	.LCFI212:
 3283              	 .cfi_def_cfa_register 7
 3284 0006 7860     	 str r0,[r7,#4]
 3285 0008 3960     	 str r1,[r7]
 869:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetPTPAlarm: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs
 870:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetPTPAlarm: time.time_stamp_nanoseconds not in range", (time->nanosecond
 871:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 872:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TARGET_TIME_NANOSECONDS = time->nanoseconds;
 3286              	 .loc 3 872 0
 3287 000a 7B68     	 ldr r3,[r7,#4]
 3288 000c 1B68     	 ldr r3,[r3]
 3289 000e 3A68     	 ldr r2,[r7]
 3290 0010 5268     	 ldr r2,[r2,#4]
 3291 0012 1146     	 mov r1,r2
 3292 0014 D3F82027 	 ldr r2,[r3,#1824]
 3293 0018 0022     	 movs r2,#0
 3294 001a 0A43     	 orrs r2,r2,r1
 3295 001c C3F82027 	 str r2,[r3,#1824]
 873:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TARGET_TIME_SECONDS = time->seconds;
 3296              	 .loc 3 873 0
 3297 0020 7B68     	 ldr r3,[r7,#4]
 3298 0022 1B68     	 ldr r3,[r3]
 3299 0024 3A68     	 ldr r2,[r7]
 3300 0026 1268     	 ldr r2,[r2]
 3301 0028 D3F81C17 	 ldr r1,[r3,#1820]
 3302 002c 0021     	 movs r1,#0
 3303 002e 0A43     	 orrs r2,r2,r1
 3304 0030 C3F81C27 	 str r2,[r3,#1820]
 874:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3305              	 .loc 3 874 0
 3306 0034 0C37     	 adds r7,r7,#12
 3307              	.LCFI213:
 3308              	 .cfi_def_cfa_offset 4
 3309 0036 BD46     	 mov sp,r7
 3310              	.LCFI214:
 3311              	 .cfi_def_cfa_register 13
 3312              	 
 3313 0038 5DF8047B 	 ldr r7,[sp],#4
 3314              	.LCFI215:
 3315              	 .cfi_restore 7
 3316              	 .cfi_def_cfa_offset 0
 3317 003c 7047     	 bx lr
 3318              	 .cfi_endproc
 3319              	.LFE259:
 3321 003e 00BF     	 .section .text.XMC_ETH_MAC_AdjustPTPClock,"ax",%progbits
 3322              	 .align 2
 3323              	 .global XMC_ETH_MAC_AdjustPTPClock
 3324              	 .thumb
 3325              	 .thumb_func
 3327              	XMC_ETH_MAC_AdjustPTPClock:
 3328              	.LFB260:
 875:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 876:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Adjust PTP clock */
 877:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_AdjustPTPClock(XMC_ETH_MAC_t *const eth_mac, uint32_t correction)
 878:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 3329              	 .loc 3 878 0
 3330              	 .cfi_startproc
 3331              	 
 3332              	 
 3333 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 3334              	.LCFI216:
 3335              	 .cfi_def_cfa_offset 20
 3336              	 .cfi_offset 4,-20
 3337              	 .cfi_offset 5,-16
 3338              	 .cfi_offset 6,-12
 3339              	 .cfi_offset 7,-8
 3340              	 .cfi_offset 14,-4
 3341 0002 83B0     	 sub sp,sp,#12
 3342              	.LCFI217:
 3343              	 .cfi_def_cfa_offset 32
 3344 0004 00AF     	 add r7,sp,#0
 3345              	.LCFI218:
 3346              	 .cfi_def_cfa_register 7
 3347 0006 7860     	 str r0,[r7,#4]
 3348 0008 3960     	 str r1,[r7]
 879:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_AdjustPTPClock: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 880:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 881:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Correction factor is Q31 (0x80000000 = 1.000000000) */
 882:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_ADDEND = (uint32_t)(((uint64_t)correction * eth_mac->regs->TIMESTAMP_ADD
 3349              	 .loc 3 882 0
 3350 000a 7B68     	 ldr r3,[r7,#4]
 3351 000c 1E68     	 ldr r6,[r3]
 3352 000e 3B68     	 ldr r3,[r7]
 3353 0010 1846     	 mov r0,r3
 3354 0012 4FF00001 	 mov r1,#0
 3355 0016 7B68     	 ldr r3,[r7,#4]
 3356 0018 1B68     	 ldr r3,[r3]
 3357 001a D3F81837 	 ldr r3,[r3,#1816]
 3358 001e 1A46     	 mov r2,r3
 3359 0020 4FF00003 	 mov r3,#0
 3360 0024 02FB01FC 	 mul ip,r2,r1
 3361 0028 00FB03FE 	 mul lr,r0,r3
 3362 002c E644     	 add lr,lr,ip
 3363 002e A0FB0223 	 umull r2,r3,r0,r2
 3364 0032 0EEB0301 	 add r1,lr,r3
 3365 0036 0B46     	 mov r3,r1
 3366 0038 D40F     	 lsrs r4,r2,#31
 3367 003a 44EA4304 	 orr r4,r4,r3,lsl#1
 3368 003e DD0F     	 lsrs r5,r3,#31
 3369 0040 2246     	 mov r2,r4
 3370 0042 D6F81837 	 ldr r3,[r6,#1816]
 3371 0046 0023     	 movs r3,#0
 3372 0048 1343     	 orrs r3,r3,r2
 3373 004a C6F81837 	 str r3,[r6,#1816]
 883:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 884:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Update addend register */
 885:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 3374              	 .loc 3 885 0
 3375 004e 7B68     	 ldr r3,[r7,#4]
 3376 0050 1B68     	 ldr r3,[r3]
 3377 0052 7A68     	 ldr r2,[r7,#4]
 3378 0054 1268     	 ldr r2,[r2]
 3379 0056 D2F80027 	 ldr r2,[r2,#1792]
 3380 005a 42F02002 	 orr r2,r2,#32
 3381 005e D3F80017 	 ldr r1,[r3,#1792]
 3382 0062 0021     	 movs r1,#0
 3383 0064 0A43     	 orrs r2,r2,r1
 3384 0066 C3F80027 	 str r2,[r3,#1792]
 886:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 887:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Poll the Timestamp Control register until the bit TSADDREG is cleared */
 888:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSADDREG_Msk);  
 3385              	 .loc 3 888 0
 3386 006a 00BF     	 nop
 3387              	.L117:
 3388              	 .loc 3 888 0 is_stmt 0 discriminator 1
 3389 006c 7B68     	 ldr r3,[r7,#4]
 3390 006e 1B68     	 ldr r3,[r3]
 3391 0070 D3F80037 	 ldr r3,[r3,#1792]
 3392 0074 03F02003 	 and r3,r3,#32
 3393 0078 002B     	 cmp r3,#0
 3394 007a F7D1     	 bne .L117
 889:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3395              	 .loc 3 889 0 is_stmt 1
 3396 007c 0C37     	 adds r7,r7,#12
 3397              	.LCFI219:
 3398              	 .cfi_def_cfa_offset 20
 3399 007e BD46     	 mov sp,r7
 3400              	.LCFI220:
 3401              	 .cfi_def_cfa_register 13
 3402              	 
 3403 0080 F0BD     	 pop {r4,r5,r6,r7,pc}
 3404              	 .cfi_endproc
 3405              	.LFE260:
 3407 0082 00BF     	 .section .text.XMC_ETH_MAC_UpdateAddend,"ax",%progbits
 3408              	 .align 2
 3409              	 .global XMC_ETH_MAC_UpdateAddend
 3410              	 .thumb
 3411              	 .thumb_func
 3413              	XMC_ETH_MAC_UpdateAddend:
 3414              	.LFB261:
 890:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 891:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Update Addend */
 892:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_UpdateAddend(XMC_ETH_MAC_t *const eth_mac, uint32_t addend)
 893:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 3415              	 .loc 3 893 0
 3416              	 .cfi_startproc
 3417              	 
 3418              	 
 3419              	 
 3420 0000 80B4     	 push {r7}
 3421              	.LCFI221:
 3422              	 .cfi_def_cfa_offset 4
 3423              	 .cfi_offset 7,-4
 3424 0002 83B0     	 sub sp,sp,#12
 3425              	.LCFI222:
 3426              	 .cfi_def_cfa_offset 16
 3427 0004 00AF     	 add r7,sp,#0
 3428              	.LCFI223:
 3429              	 .cfi_def_cfa_register 7
 3430 0006 7860     	 str r0,[r7,#4]
 3431 0008 3960     	 str r1,[r7]
 894:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_AdjustPTPClock: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 895:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 896:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_ADDEND = addend;
 3432              	 .loc 3 896 0
 3433 000a 7B68     	 ldr r3,[r7,#4]
 3434 000c 1B68     	 ldr r3,[r3]
 3435 000e D3F81827 	 ldr r2,[r3,#1816]
 3436 0012 0021     	 movs r1,#0
 3437 0014 3A68     	 ldr r2,[r7]
 3438 0016 0A43     	 orrs r2,r2,r1
 3439 0018 C3F81827 	 str r2,[r3,#1816]
 897:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 898:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Update addend register */
 899:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 3440              	 .loc 3 899 0
 3441 001c 7B68     	 ldr r3,[r7,#4]
 3442 001e 1B68     	 ldr r3,[r3]
 3443 0020 7A68     	 ldr r2,[r7,#4]
 3444 0022 1268     	 ldr r2,[r2]
 3445 0024 D2F80027 	 ldr r2,[r2,#1792]
 3446 0028 42F02002 	 orr r2,r2,#32
 3447 002c D3F80017 	 ldr r1,[r3,#1792]
 3448 0030 0021     	 movs r1,#0
 3449 0032 0A43     	 orrs r2,r2,r1
 3450 0034 C3F80027 	 str r2,[r3,#1792]
 900:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 901:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   /* Poll the Timestamp Control register until the bit TSADDREG is cleared */
 902:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   while (eth_mac->regs->TIMESTAMP_CONTROL & ETH_TIMESTAMP_CONTROL_TSADDREG_Msk);
 3451              	 .loc 3 902 0
 3452 0038 00BF     	 nop
 3453              	.L119:
 3454              	 .loc 3 902 0 is_stmt 0 discriminator 1
 3455 003a 7B68     	 ldr r3,[r7,#4]
 3456 003c 1B68     	 ldr r3,[r3]
 3457 003e D3F80037 	 ldr r3,[r3,#1792]
 3458 0042 03F02003 	 and r3,r3,#32
 3459 0046 002B     	 cmp r3,#0
 3460 0048 F7D1     	 bne .L119
 903:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3461              	 .loc 3 903 0 is_stmt 1
 3462 004a 0C37     	 adds r7,r7,#12
 3463              	.LCFI224:
 3464              	 .cfi_def_cfa_offset 4
 3465 004c BD46     	 mov sp,r7
 3466              	.LCFI225:
 3467              	 .cfi_def_cfa_register 13
 3468              	 
 3469 004e 5DF8047B 	 ldr r7,[sp],#4
 3470              	.LCFI226:
 3471              	 .cfi_restore 7
 3472              	 .cfi_def_cfa_offset 0
 3473 0052 7047     	 bx lr
 3474              	 .cfi_endproc
 3475              	.LFE261:
 3477              	 .section .text.XMC_ETH_MAC_GetPTPStatus,"ax",%progbits
 3478              	 .align 2
 3479              	 .global XMC_ETH_MAC_GetPTPStatus
 3480              	 .thumb
 3481              	 .thumb_func
 3483              	XMC_ETH_MAC_GetPTPStatus:
 3484              	.LFB262:
 904:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 905:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Set PTP status */
 906:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetPTPStatus(const XMC_ETH_MAC_t *const eth_mac)
 907:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 3485              	 .loc 3 907 0
 3486              	 .cfi_startproc
 3487              	 
 3488              	 
 3489              	 
 3490 0000 80B4     	 push {r7}
 3491              	.LCFI227:
 3492              	 .cfi_def_cfa_offset 4
 3493              	 .cfi_offset 7,-4
 3494 0002 83B0     	 sub sp,sp,#12
 3495              	.LCFI228:
 3496              	 .cfi_def_cfa_offset 16
 3497 0004 00AF     	 add r7,sp,#0
 3498              	.LCFI229:
 3499              	 .cfi_def_cfa_register 7
 3500 0006 7860     	 str r0,[r7,#4]
 908:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->reg
 909:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 910:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return (eth_mac->regs->TIMESTAMP_STATUS);
 3501              	 .loc 3 910 0
 3502 0008 7B68     	 ldr r3,[r7,#4]
 3503 000a 1B68     	 ldr r3,[r3]
 3504 000c D3F82837 	 ldr r3,[r3,#1832]
 911:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3505              	 .loc 3 911 0
 3506 0010 1846     	 mov r0,r3
 3507 0012 0C37     	 adds r7,r7,#12
 3508              	.LCFI230:
 3509              	 .cfi_def_cfa_offset 4
 3510 0014 BD46     	 mov sp,r7
 3511              	.LCFI231:
 3512              	 .cfi_def_cfa_register 13
 3513              	 
 3514 0016 5DF8047B 	 ldr r7,[sp],#4
 3515              	.LCFI232:
 3516              	 .cfi_restore 7
 3517              	 .cfi_def_cfa_offset 0
 3518 001a 7047     	 bx lr
 3519              	 .cfi_endproc
 3520              	.LFE262:
 3522              	 .section .text.XMC_ETH_MAC_GetRxTimeStamp,"ax",%progbits
 3523              	 .align 2
 3524              	 .global XMC_ETH_MAC_GetRxTimeStamp
 3525              	 .thumb
 3526              	 .thumb_func
 3528              	XMC_ETH_MAC_GetRxTimeStamp:
 3529              	.LFB263:
 912:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 913:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Get TX time-stamp */
 914:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetRxTimeStamp(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *c
 915:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 3530              	 .loc 3 915 0
 3531              	 .cfi_startproc
 3532              	 
 3533              	 
 3534              	 
 3535 0000 80B4     	 push {r7}
 3536              	.LCFI233:
 3537              	 .cfi_def_cfa_offset 4
 3538              	 .cfi_offset 7,-4
 3539 0002 85B0     	 sub sp,sp,#20
 3540              	.LCFI234:
 3541              	 .cfi_def_cfa_offset 24
 3542 0004 00AF     	 add r7,sp,#0
 3543              	.LCFI235:
 3544              	 .cfi_def_cfa_register 7
 3545 0006 7860     	 str r0,[r7,#4]
 3546 0008 3960     	 str r1,[r7]
 916:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_DMA_DESC_t *rx_desc;
 917:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 918:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 919:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetRxTimeStamp: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 920:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetRxTimeStamp: time is invalid", time != NULL);
 921:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 922:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   rx_desc = &eth_mac->rx_desc[eth_mac->rx_index];
 3547              	 .loc 3 922 0
 3548 000a 7B68     	 ldr r3,[r7,#4]
 3549 000c DA68     	 ldr r2,[r3,#12]
 3550 000e 7B68     	 ldr r3,[r7,#4]
 3551 0010 93F82330 	 ldrb r3,[r3,#35]
 3552 0014 5B01     	 lsls r3,r3,#5
 3553 0016 1344     	 add r3,r3,r2
 3554 0018 BB60     	 str r3,[r7,#8]
 923:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (rx_desc->status & ETH_MAC_DMA_RDES0_OWN)
 3555              	 .loc 3 923 0
 3556 001a BB68     	 ldr r3,[r7,#8]
 3557 001c 1B68     	 ldr r3,[r3]
 3558 001e 002B     	 cmp r3,#0
 3559 0020 02DA     	 bge .L123
 924:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 925:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 3560              	 .loc 3 925 0
 3561 0022 0123     	 movs r3,#1
 3562 0024 FB73     	 strb r3,[r7,#15]
 3563 0026 14E0     	 b .L124
 3564              	.L123:
 926:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 927:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else
 928:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 929:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     if ((rx_desc->status & (ETH_MAC_DMA_RDES0_TSA | ETH_MAC_DMA_RDES0_LS)) == (ETH_MAC_DMA_RDES0_TS
 3565              	 .loc 3 929 0
 3566 0028 BB68     	 ldr r3,[r7,#8]
 3567 002a 1B68     	 ldr r3,[r3]
 3568 002c 03F4C073 	 and r3,r3,#384
 3569 0030 B3F5C07F 	 cmp r3,#384
 3570 0034 0BD1     	 bne .L125
 930:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 931:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       time->nanoseconds = (int32_t)(rx_desc->time_stamp_nanoseconds);
 3571              	 .loc 3 931 0
 3572 0036 BB68     	 ldr r3,[r7,#8]
 3573 0038 9B69     	 ldr r3,[r3,#24]
 3574 003a 1A46     	 mov r2,r3
 3575 003c 3B68     	 ldr r3,[r7]
 3576 003e 5A60     	 str r2,[r3,#4]
 932:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       time->seconds = rx_desc->time_stamp_seconds;      
 3577              	 .loc 3 932 0
 3578 0040 BB68     	 ldr r3,[r7,#8]
 3579 0042 DA69     	 ldr r2,[r3,#28]
 3580 0044 3B68     	 ldr r3,[r7]
 3581 0046 1A60     	 str r2,[r3]
 933:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 934:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_OK;
 3582              	 .loc 3 934 0
 3583 0048 0023     	 movs r3,#0
 3584 004a FB73     	 strb r3,[r7,#15]
 3585 004c 01E0     	 b .L124
 3586              	.L125:
 935:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 936:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     else
 937:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 938:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_ERROR;  
 3587              	 .loc 3 938 0
 3588 004e 0223     	 movs r3,#2
 3589 0050 FB73     	 strb r3,[r7,#15]
 3590              	.L124:
 939:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 940:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 941:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 942:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return status;
 3591              	 .loc 3 942 0
 3592 0052 FB7B     	 ldrb r3,[r7,#15]
 943:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3593              	 .loc 3 943 0
 3594 0054 1846     	 mov r0,r3
 3595 0056 1437     	 adds r7,r7,#20
 3596              	.LCFI236:
 3597              	 .cfi_def_cfa_offset 4
 3598 0058 BD46     	 mov sp,r7
 3599              	.LCFI237:
 3600              	 .cfi_def_cfa_register 13
 3601              	 
 3602 005a 5DF8047B 	 ldr r7,[sp],#4
 3603              	.LCFI238:
 3604              	 .cfi_restore 7
 3605              	 .cfi_def_cfa_offset 0
 3606 005e 7047     	 bx lr
 3607              	 .cfi_endproc
 3608              	.LFE263:
 3610              	 .section .text.XMC_ETH_MAC_GetTxTimeStamp,"ax",%progbits
 3611              	 .align 2
 3612              	 .global XMC_ETH_MAC_GetTxTimeStamp
 3613              	 .thumb
 3614              	 .thumb_func
 3616              	XMC_ETH_MAC_GetTxTimeStamp:
 3617              	.LFB264:
 944:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 945:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** /* Get TX time-stamp */
 946:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetTxTimeStamp(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *c
 947:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** {
 3618              	 .loc 3 947 0
 3619              	 .cfi_startproc
 3620              	 
 3621              	 
 3622              	 
 3623 0000 80B4     	 push {r7}
 3624              	.LCFI239:
 3625              	 .cfi_def_cfa_offset 4
 3626              	 .cfi_offset 7,-4
 3627 0002 85B0     	 sub sp,sp,#20
 3628              	.LCFI240:
 3629              	 .cfi_def_cfa_offset 24
 3630 0004 00AF     	 add r7,sp,#0
 3631              	.LCFI241:
 3632              	 .cfi_def_cfa_register 7
 3633 0006 7860     	 str r0,[r7,#4]
 3634 0008 3960     	 str r1,[r7]
 948:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_DMA_DESC_t *tx_desc;
 949:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 950:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 951:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetTxTimeStamp: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 952:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetTxTimeStamp: time is invalid", time != NULL);
 953:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 954:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   tx_desc = &eth_mac->tx_desc[eth_mac->tx_ts_index];
 3635              	 .loc 3 954 0
 3636 000a 7B68     	 ldr r3,[r7,#4]
 3637 000c 1A69     	 ldr r2,[r3,#16]
 3638 000e 7B68     	 ldr r3,[r7,#4]
 3639 0010 93F82430 	 ldrb r3,[r3,#36]
 3640 0014 5B01     	 lsls r3,r3,#5
 3641 0016 1344     	 add r3,r3,r2
 3642 0018 BB60     	 str r3,[r7,#8]
 955:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   if (tx_desc->status & ETH_MAC_DMA_TDES0_OWN)
 3643              	 .loc 3 955 0
 3644 001a BB68     	 ldr r3,[r7,#8]
 3645 001c 1B68     	 ldr r3,[r3]
 3646 001e 002B     	 cmp r3,#0
 3647 0020 02DA     	 bge .L128
 956:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 957:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 3648              	 .loc 3 957 0
 3649 0022 0123     	 movs r3,#1
 3650 0024 FB73     	 strb r3,[r7,#15]
 3651 0026 14E0     	 b .L129
 3652              	.L128:
 958:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 959:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   else
 960:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   {
 961:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     if ((tx_desc->status & (ETH_MAC_DMA_TDES0_TTSS | ETH_MAC_DMA_TDES0_LS)) == (ETH_MAC_DMA_TDES0_T
 3653              	 .loc 3 961 0
 3654 0028 BB68     	 ldr r3,[r7,#8]
 3655 002a 1A68     	 ldr r2,[r3]
 3656 002c 0C4B     	 ldr r3,.L132
 3657 002e 1340     	 ands r3,r3,r2
 3658 0030 0B4A     	 ldr r2,.L132
 3659 0032 9342     	 cmp r3,r2
 3660 0034 0BD1     	 bne .L130
 962:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 963:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       time->nanoseconds = (int32_t)(tx_desc->time_stamp_nanoseconds); /* accuracy of 1 ns */
 3661              	 .loc 3 963 0
 3662 0036 BB68     	 ldr r3,[r7,#8]
 3663 0038 9B69     	 ldr r3,[r3,#24]
 3664 003a 1A46     	 mov r2,r3
 3665 003c 3B68     	 ldr r3,[r7]
 3666 003e 5A60     	 str r2,[r3,#4]
 964:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       time->seconds = tx_desc->time_stamp_seconds;
 3667              	 .loc 3 964 0
 3668 0040 BB68     	 ldr r3,[r7,#8]
 3669 0042 DA69     	 ldr r2,[r3,#28]
 3670 0044 3B68     	 ldr r3,[r7]
 3671 0046 1A60     	 str r2,[r3]
 965:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 966:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_OK;
 3672              	 .loc 3 966 0
 3673 0048 0023     	 movs r3,#0
 3674 004a FB73     	 strb r3,[r7,#15]
 3675 004c 01E0     	 b .L129
 3676              	.L130:
 967:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 968:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     else
 969:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     {
 970:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****       status = XMC_ETH_MAC_STATUS_ERROR;
 3677              	 .loc 3 970 0
 3678 004e 0223     	 movs r3,#2
 3679 0050 FB73     	 strb r3,[r7,#15]
 3680              	.L129:
 971:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****     }
 972:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   }
 973:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** 
 974:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c ****   return status;
 3681              	 .loc 3 974 0
 3682 0052 FB7B     	 ldrb r3,[r7,#15]
 975:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_eth_mac.c **** }
 3683              	 .loc 3 975 0
 3684 0054 1846     	 mov r0,r3
 3685 0056 1437     	 adds r7,r7,#20
 3686              	.LCFI242:
 3687              	 .cfi_def_cfa_offset 4
 3688 0058 BD46     	 mov sp,r7
 3689              	.LCFI243:
 3690              	 .cfi_def_cfa_register 13
 3691              	 
 3692 005a 5DF8047B 	 ldr r7,[sp],#4
 3693              	.LCFI244:
 3694              	 .cfi_restore 7
 3695              	 .cfi_def_cfa_offset 0
 3696 005e 7047     	 bx lr
 3697              	.L133:
 3698              	 .align 2
 3699              	.L132:
 3700 0060 00000220 	 .word 537001984
 3701              	 .cfi_endproc
 3702              	.LFE264:
 3704              	 .text
 3705              	.Letext0:
 3706              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3707              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3708              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 3709              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 3710              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_eth_mac.c
    {standard input}:20     .text.XMC_ETH_MAC_Reset:00000000 $t
    {standard input}:24     .text.XMC_ETH_MAC_Reset:00000000 XMC_ETH_MAC_Reset
    {standard input}:84     .text.XMC_ETH_MAC_SetAddress:00000000 $t
    {standard input}:88     .text.XMC_ETH_MAC_SetAddress:00000000 XMC_ETH_MAC_SetAddress
    {standard input}:147    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 $t
    {standard input}:151    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemClockFrequency
    {standard input}:187    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000020 $d
    {standard input}:193    .text.XMC_SCU_CLOCK_GetEthernetClockFrequency:00000000 $t
    {standard input}:197    .text.XMC_SCU_CLOCK_GetEthernetClockFrequency:00000000 XMC_SCU_CLOCK_GetEthernetClockFrequency
    {standard input}:222    .text.XCM_ETH_MAC_IsNormalEvent:00000000 $t
    {standard input}:226    .text.XCM_ETH_MAC_IsNormalEvent:00000000 XCM_ETH_MAC_IsNormalEvent
    {standard input}:272    .text.XCM_ETH_MAC_IsAbnormalEvent:00000000 $t
    {standard input}:276    .text.XCM_ETH_MAC_IsAbnormalEvent:00000000 XCM_ETH_MAC_IsAbnormalEvent
    {standard input}:321    .text.XMC_ETH_MAC_InitEx:00000000 $t
    {standard input}:326    .text.XMC_ETH_MAC_InitEx:00000000 XMC_ETH_MAC_InitEx
    {standard input}:510    .text.XMC_ETH_MAC_InitRxDescriptors:00000000 XMC_ETH_MAC_InitRxDescriptors
    {standard input}:652    .text.XMC_ETH_MAC_InitTxDescriptors:00000000 XMC_ETH_MAC_InitTxDescriptors
    {standard input}:444    .text.XMC_ETH_MAC_InitEx:000000d0 $d
    {standard input}:449    .text.XMC_ETH_MAC_Init:00000000 $t
    {standard input}:454    .text.XMC_ETH_MAC_Init:00000000 XMC_ETH_MAC_Init
    {standard input}:1780   .text.XMC_ETH_MAC_Enable:00000000 XMC_ETH_MAC_Enable
    {standard input}:1651   .text.XMC_ETH_MAC_SetManagmentClockDivider:00000000 XMC_ETH_MAC_SetManagmentClockDivider
    {standard input}:505    .text.XMC_ETH_MAC_InitRxDescriptors:00000000 $t
    {standard input}:647    .text.XMC_ETH_MAC_InitTxDescriptors:00000000 $t
    {standard input}:779    .text.XMC_ETH_MAC_SetAddressEx:00000000 $t
    {standard input}:784    .text.XMC_ETH_MAC_SetAddressEx:00000000 XMC_ETH_MAC_SetAddressEx
    {standard input}:863    .text.XMC_ETH_MAC_GetAddressEx:00000000 $t
    {standard input}:868    .text.XMC_ETH_MAC_GetAddressEx:00000000 XMC_ETH_MAC_GetAddressEx
    {standard input}:953    .text.XMC_ETH_MAC_SetAddressPerfectFilter:00000000 $t
    {standard input}:958    .text.XMC_ETH_MAC_SetAddressPerfectFilter:00000000 XMC_ETH_MAC_SetAddressPerfectFilter
    {standard input}:1025   .text.XMC_ETH_MAC_SetAddressPerfectFilterEx:00000000 $t
    {standard input}:1030   .text.XMC_ETH_MAC_SetAddressPerfectFilterEx:00000000 XMC_ETH_MAC_SetAddressPerfectFilterEx
    {standard input}:1117   .text.XMC_ETH_MAC_SetAddressHashFilter:00000000 $t
    {standard input}:1122   .text.XMC_ETH_MAC_SetAddressHashFilter:00000000 XMC_ETH_MAC_SetAddressHashFilter
    {standard input}:1181   .text.XMC_ETH_MAC_SendFrame:00000000 $t
    {standard input}:1186   .text.XMC_ETH_MAC_SendFrame:00000000 XMC_ETH_MAC_SendFrame
    {standard input}:1435   .text.XMC_ETH_MAC_ReadFrame:00000000 $t
    {standard input}:1440   .text.XMC_ETH_MAC_ReadFrame:00000000 XMC_ETH_MAC_ReadFrame
    {standard input}:1547   .text.XMC_ETH_MAC_GetRxFrameSize:00000000 $t
    {standard input}:1552   .text.XMC_ETH_MAC_GetRxFrameSize:00000000 XMC_ETH_MAC_GetRxFrameSize
    {standard input}:1641   .text.XMC_ETH_MAC_GetRxFrameSize:0000006c $d
    {standard input}:1646   .text.XMC_ETH_MAC_SetManagmentClockDivider:00000000 $t
    {standard input}:1765   .text.XMC_ETH_MAC_SetManagmentClockDivider:00000088 $d
    {standard input}:1775   .text.XMC_ETH_MAC_Enable:00000000 $t
    {standard input}:1819   .text.XMC_ETH_MAC_Enable:00000020 $d
    {standard input}:1824   .text.XMC_ETH_MAC_Disable:00000000 $t
    {standard input}:1829   .text.XMC_ETH_MAC_Disable:00000000 XMC_ETH_MAC_Disable
    {standard input}:1868   .text.XMC_ETH_MAC_Disable:00000020 $d
    {standard input}:1873   .text.XMC_ETH_MAC_ReadPhy:00000000 $t
    {standard input}:1878   .text.XMC_ETH_MAC_ReadPhy:00000000 XMC_ETH_MAC_ReadPhy
    {standard input}:1975   .text.XMC_ETH_MAC_WritePhy:00000000 $t
    {standard input}:1980   .text.XMC_ETH_MAC_WritePhy:00000000 XMC_ETH_MAC_WritePhy
    {standard input}:2082   .text.XMC_ETH_MAC_FlushTx:00000000 $t
    {standard input}:2087   .text.XMC_ETH_MAC_FlushTx:00000000 XMC_ETH_MAC_FlushTx
    {standard input}:2151   .text.XMC_ETH_MAC_FlushRx:00000000 $t
    {standard input}:2156   .text.XMC_ETH_MAC_FlushRx:00000000 XMC_ETH_MAC_FlushRx
    {standard input}:2220   .text.XMC_ETH_MAC_SetWakeUpFrameFilter:00000000 $t
    {standard input}:2225   .text.XMC_ETH_MAC_SetWakeUpFrameFilter:00000000 XMC_ETH_MAC_SetWakeUpFrameFilter
    {standard input}:2288   .text.XMC_ETH_MAC_EnableEvent:00000000 $t
    {standard input}:2293   .text.XMC_ETH_MAC_EnableEvent:00000000 XMC_ETH_MAC_EnableEvent
    {standard input}:2381   .text.XMC_ETH_MAC_DisableEvent:00000000 $t
    {standard input}:2386   .text.XMC_ETH_MAC_DisableEvent:00000000 XMC_ETH_MAC_DisableEvent
    {standard input}:2456   .text.XMC_ETH_MAC_ClearEventStatus:00000000 $t
    {standard input}:2461   .text.XMC_ETH_MAC_ClearEventStatus:00000000 XMC_ETH_MAC_ClearEventStatus
    {standard input}:2536   .text.XMC_ETH_MAC_GetEventStatus:00000000 $t
    {standard input}:2541   .text.XMC_ETH_MAC_GetEventStatus:00000000 XMC_ETH_MAC_GetEventStatus
    {standard input}:2596   .text.XMC_ETH_MAC_ReturnRxDescriptor:00000000 $t
    {standard input}:2601   .text.XMC_ETH_MAC_ReturnRxDescriptor:00000000 XMC_ETH_MAC_ReturnRxDescriptor
    {standard input}:2674   .text.XMC_ETH_MAC_ReturnTxDescriptor:00000000 $t
    {standard input}:2679   .text.XMC_ETH_MAC_ReturnTxDescriptor:00000000 XMC_ETH_MAC_ReturnTxDescriptor
    {standard input}:2768   .text.XMC_ETH_MAC_SetVLANTag:00000000 $t
    {standard input}:2773   .text.XMC_ETH_MAC_SetVLANTag:00000000 XMC_ETH_MAC_SetVLANTag
    {standard input}:2817   .text.XMC_ETH_MAC_InitPTP:00000000 $t
    {standard input}:2822   .text.XMC_ETH_MAC_InitPTP:00000000 XMC_ETH_MAC_InitPTP
    {standard input}:2971   .text.XMC_ETH_MAC_InitPTP:00000134 $d
    {standard input}:2978   .text.XMC_ETH_MAC_InitPTPEx:00000000 $t
    {standard input}:2983   .text.XMC_ETH_MAC_InitPTPEx:00000000 XMC_ETH_MAC_InitPTPEx
    {standard input}:3039   .text.XMC_ETH_MAC_GetPTPTime:00000000 $t
    {standard input}:3044   .text.XMC_ETH_MAC_GetPTPTime:00000000 XMC_ETH_MAC_GetPTPTime
    {standard input}:3093   .text.XMC_ETH_MAC_SetPTPTime:00000000 $t
    {standard input}:3098   .text.XMC_ETH_MAC_SetPTPTime:00000000 XMC_ETH_MAC_SetPTPTime
    {standard input}:3171   .text.XMC_ETH_MAC_SetPTPTime:00000068 $d
    {standard input}:3176   .text.XMC_ETH_MAC_UpdatePTPTime:00000000 $t
    {standard input}:3181   .text.XMC_ETH_MAC_UpdatePTPTime:00000000 XMC_ETH_MAC_UpdatePTPTime
    {standard input}:3262   .text.XMC_ETH_MAC_SetPTPAlarm:00000000 $t
    {standard input}:3267   .text.XMC_ETH_MAC_SetPTPAlarm:00000000 XMC_ETH_MAC_SetPTPAlarm
    {standard input}:3322   .text.XMC_ETH_MAC_AdjustPTPClock:00000000 $t
    {standard input}:3327   .text.XMC_ETH_MAC_AdjustPTPClock:00000000 XMC_ETH_MAC_AdjustPTPClock
    {standard input}:3408   .text.XMC_ETH_MAC_UpdateAddend:00000000 $t
    {standard input}:3413   .text.XMC_ETH_MAC_UpdateAddend:00000000 XMC_ETH_MAC_UpdateAddend
    {standard input}:3478   .text.XMC_ETH_MAC_GetPTPStatus:00000000 $t
    {standard input}:3483   .text.XMC_ETH_MAC_GetPTPStatus:00000000 XMC_ETH_MAC_GetPTPStatus
    {standard input}:3523   .text.XMC_ETH_MAC_GetRxTimeStamp:00000000 $t
    {standard input}:3528   .text.XMC_ETH_MAC_GetRxTimeStamp:00000000 XMC_ETH_MAC_GetRxTimeStamp
    {standard input}:3611   .text.XMC_ETH_MAC_GetTxTimeStamp:00000000 $t
    {standard input}:3616   .text.XMC_ETH_MAC_GetTxTimeStamp:00000000 XMC_ETH_MAC_GetTxTimeStamp
    {standard input}:3700   .text.XMC_ETH_MAC_GetTxTimeStamp:00000060 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
memcpy
XMC_SCU_CLOCK_EnableClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_DisableClock
