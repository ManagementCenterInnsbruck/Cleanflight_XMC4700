   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ledts.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_LEDTS_InitGlobal,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_LEDTS_InitGlobal
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_LEDTS_InitGlobal:
  26              	.LFB171:
  27              	 .file 1 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * @file xmc_ledts.c
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * @date 2017-02-25
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * 
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * 
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * products derived from this software without specific prior written permission.                  
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *                                                                              
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *                                                                              
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * Change History
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * --------------
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * 2015-02-20:
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *     - Initial draft <br>
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *     - New API added: XMC_LEDTS_SetActivePADNo() <br>
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *      
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * 2015-06-20:
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * 2017-02-25:
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *     - XMC_LEDTS_InitGlobal() fixed compilation warnings
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * <b>Detailed description of file:</b><br>
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * APIs for the functional blocks of LEDTS have been defined:<br>
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * -- GLOBAL (APIs prefixed with LEDTS_GLOBAL_) <br>
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * -- Clock configuration, Function/Event configuration, Interrupt configuration
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * @endcond
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  *
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  */
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * HEADER FILES
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #include <xmc_ledts.h>
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS0)
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #include "xmc_scu.h"
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * MACROS
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #define XMC_LEDTS_CLOCK_NOT_RUNNING 0U
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * ENUMS
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * DATA STRUCTURES
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * GLOBAL DATA
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * LOCAL/UTILITY ROUTINES
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**************************************************************************************************
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  * API IMPLEMENTATION
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****  **************************************************************************************************
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Initialization of global register
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitGlobal(XMC_LEDTS_t *const ledts, const XMC_LEDTS_GLOBAL_CONFIG_t *
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
  28              	 .loc 1 95 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 3960     	 str r1,[r7]
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_InitGlobal:Null Pointer", (config != (XMC_LEDTS_GLOBAL_CONFIG_t *)NULL));
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   if (ledts == XMC_LEDTS0)
  45              	 .loc 1 99 0
  46 000a 7B68     	 ldr r3,[r7,#4]
  47 000c 0E4A     	 ldr r2,.L5
  48 000e 9342     	 cmp r3,r2
  49 0010 05D1     	 bne .L2
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   {
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS0);
  50              	 .loc 1 102 0
  51 0012 0E48     	 ldr r0,.L5+4
  52 0014 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #endif
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS0);
  53              	 .loc 1 105 0
  54 0018 0C48     	 ldr r0,.L5+4
  55 001a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
  56              	.L2:
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #endif
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   }
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS1)
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS1)
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   {
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS1);
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #endif
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS1);
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #endif
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   }
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #endif
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #if defined(LEDTS2)
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   else if (ledts == XMC_LEDTS2)
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   {
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #if defined(CLOCK_GATING_SUPPORTED)
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_LEDTS2);
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #endif
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_LEDTS2);
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #endif
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   }
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** #endif
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   else
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   {
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****     XMC_ASSERT("XMC_LEDTS_InitGlobal:Invalid Module Pointer", 0);
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   }
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
  57              	 .loc 1 135 0
  58 001e 7B68     	 ldr r3,[r7,#4]
  59 0020 5B68     	 ldr r3,[r3,#4]
  60 0022 1B0C     	 lsrs r3,r3,#16
  61 0024 1B04     	 lsls r3,r3,#16
  62 0026 002B     	 cmp r3,#0
  63 0028 01D0     	 beq .L3
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   {
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
  64              	 .loc 1 137 0
  65 002a 0123     	 movs r3,#1
  66 002c 07E0     	 b .L4
  67              	.L3:
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   }
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL = config->globctl;
  68              	 .loc 1 140 0
  69 002e 3B68     	 ldr r3,[r7]
  70 0030 1A68     	 ldr r2,[r3]
  71 0032 7B68     	 ldr r3,[r7,#4]
  72 0034 5968     	 ldr r1,[r3,#4]
  73 0036 0021     	 movs r1,#0
  74 0038 0A43     	 orrs r2,r2,r1
  75 003a 5A60     	 str r2,[r3,#4]
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
  76              	 .loc 1 142 0
  77 003c 0023     	 movs r3,#0
  78              	.L4:
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
  79              	 .loc 1 143 0
  80 003e 1846     	 mov r0,r3
  81 0040 0837     	 adds r7,r7,#8
  82              	.LCFI3:
  83              	 .cfi_def_cfa_offset 8
  84 0042 BD46     	 mov sp,r7
  85              	.LCFI4:
  86              	 .cfi_def_cfa_register 13
  87              	 
  88 0044 80BD     	 pop {r7,pc}
  89              	.L6:
  90 0046 00BF     	 .align 2
  91              	.L5:
  92 0048 00000148 	 .word 1208025088
  93 004c 08000010 	 .word 268435464
  94              	 .cfi_endproc
  95              	.LFE171:
  97              	 .section .text.XMC_LEDTS_InitLED,"ax",%progbits
  98              	 .align 2
  99              	 .global XMC_LEDTS_InitLED
 100              	 .thumb
 101              	 .thumb_func
 103              	XMC_LEDTS_InitLED:
 104              	.LFB172:
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for LED-driving function
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitLED(XMC_LEDTS_t *const ledts, const XMC_LEDTS_LED_CONFIG_t *config
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 105              	 .loc 1 149 0
 106              	 .cfi_startproc
 107              	 
 108              	 
 109              	 
 110 0000 80B4     	 push {r7}
 111              	.LCFI5:
 112              	 .cfi_def_cfa_offset 4
 113              	 .cfi_offset 7,-4
 114 0002 83B0     	 sub sp,sp,#12
 115              	.LCFI6:
 116              	 .cfi_def_cfa_offset 16
 117 0004 00AF     	 add r7,sp,#0
 118              	.LCFI7:
 119              	 .cfi_def_cfa_register 7
 120 0006 7860     	 str r0,[r7,#4]
 121 0008 3960     	 str r1,[r7]
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_LED_Init:Null Pointer", (config != (XMC_LEDTS_LED_CONFIG_t *)NULL));
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 122              	 .loc 1 153 0
 123 000a 7B68     	 ldr r3,[r7,#4]
 124 000c 5B68     	 ldr r3,[r3,#4]
 125 000e 1B0C     	 lsrs r3,r3,#16
 126 0010 1B04     	 lsls r3,r3,#16
 127 0012 002B     	 cmp r3,#0
 128 0014 01D0     	 beq .L8
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   {
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 129              	 .loc 1 155 0
 130 0016 0123     	 movs r3,#1
 131 0018 1CE0     	 b .L9
 132              	.L8:
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   }
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_COLLEV_Msk | LEDTS_FNCTL_NR_LEDCOL_Msk);
 133              	 .loc 1 158 0
 134 001a 7B68     	 ldr r3,[r7,#4]
 135 001c 9B68     	 ldr r3,[r3,#8]
 136 001e 23F07042 	 bic r2,r3,#-268435456
 137 0022 7B68     	 ldr r3,[r7,#4]
 138 0024 9968     	 ldr r1,[r3,#8]
 139 0026 0021     	 movs r1,#0
 140 0028 0A43     	 orrs r2,r2,r1
 141 002a 9A60     	 str r2,[r3,#8]
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 142              	 .loc 1 159 0
 143 002c 7B68     	 ldr r3,[r7,#4]
 144 002e 9A68     	 ldr r2,[r3,#8]
 145 0030 3B68     	 ldr r3,[r7]
 146 0032 1B68     	 ldr r3,[r3]
 147 0034 1A43     	 orrs r2,r2,r3
 148 0036 7B68     	 ldr r3,[r7,#4]
 149 0038 9968     	 ldr r1,[r3,#8]
 150 003a 0021     	 movs r1,#0
 151 003c 0A43     	 orrs r2,r2,r1
 152 003e 9A60     	 str r2,[r3,#8]
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   /* Enable LED function */
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_LD_EN_Msk;
 153              	 .loc 1 162 0
 154 0040 7B68     	 ldr r3,[r7,#4]
 155 0042 5B68     	 ldr r3,[r3,#4]
 156 0044 43F00202 	 orr r2,r3,#2
 157 0048 7B68     	 ldr r3,[r7,#4]
 158 004a 5968     	 ldr r1,[r3,#4]
 159 004c 0021     	 movs r1,#0
 160 004e 0A43     	 orrs r2,r2,r1
 161 0050 5A60     	 str r2,[r3,#4]
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 162              	 .loc 1 164 0
 163 0052 0023     	 movs r3,#0
 164              	.L9:
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 165              	 .loc 1 165 0
 166 0054 1846     	 mov r0,r3
 167 0056 0C37     	 adds r7,r7,#12
 168              	.LCFI8:
 169              	 .cfi_def_cfa_offset 4
 170 0058 BD46     	 mov sp,r7
 171              	.LCFI9:
 172              	 .cfi_def_cfa_register 13
 173              	 
 174 005a 5DF8047B 	 ldr r7,[sp],#4
 175              	.LCFI10:
 176              	 .cfi_restore 7
 177              	 .cfi_def_cfa_offset 0
 178 005e 7047     	 bx lr
 179              	 .cfi_endproc
 180              	.LFE172:
 182              	 .section .text.XMC_LEDTS_InitTSBasic,"ax",%progbits
 183              	 .align 2
 184              	 .global XMC_LEDTS_InitTSBasic
 185              	 .thumb
 186              	 .thumb_func
 188              	XMC_LEDTS_InitTSBasic:
 189              	.LFB173:
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for basic Touch-Sense control function
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSBasic(XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_BASIC_
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 190              	 .loc 1 171 0
 191              	 .cfi_startproc
 192              	 
 193              	 
 194              	 
 195 0000 80B4     	 push {r7}
 196              	.LCFI11:
 197              	 .cfi_def_cfa_offset 4
 198              	 .cfi_offset 7,-4
 199 0002 85B0     	 sub sp,sp,#20
 200              	.LCFI12:
 201              	 .cfi_def_cfa_offset 24
 202 0004 00AF     	 add r7,sp,#0
 203              	.LCFI13:
 204              	 .cfi_def_cfa_register 7
 205 0006 7860     	 str r0,[r7,#4]
 206 0008 3960     	 str r1,[r7]
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Basic_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_BASIC_t *)NULL
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 207              	 .loc 1 177 0
 208 000a 7B68     	 ldr r3,[r7,#4]
 209 000c 5B68     	 ldr r3,[r3,#4]
 210 000e 1B0C     	 lsrs r3,r3,#16
 211 0010 1B04     	 lsls r3,r3,#16
 212 0012 002B     	 cmp r3,#0
 213 0014 01D0     	 beq .L11
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   {
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 214              	 .loc 1 179 0
 215 0016 0123     	 movs r3,#1
 216 0018 1EE0     	 b .L12
 217              	.L11:
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   }
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_ACCCNT_Msk | LEDTS_FNCTL_TSCCMP_Msk | LEDTS_FNCTL_TSCTRR_Msk | LEDTS_FNCTL_TS
 218              	 .loc 1 182 0
 219 001a 124B     	 ldr r3,.L13
 220 001c FB60     	 str r3,[r7,#12]
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 		 LEDTS_FNCTL_NR_TSIN_Msk);
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 221              	 .loc 1 184 0
 222 001e 7B68     	 ldr r3,[r7,#4]
 223 0020 9A68     	 ldr r2,[r3,#8]
 224 0022 FB68     	 ldr r3,[r7,#12]
 225 0024 1A40     	 ands r2,r2,r3
 226 0026 7B68     	 ldr r3,[r7,#4]
 227 0028 9968     	 ldr r1,[r3,#8]
 228 002a 0021     	 movs r1,#0
 229 002c 0A43     	 orrs r2,r2,r1
 230 002e 9A60     	 str r2,[r3,#8]
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 231              	 .loc 1 185 0
 232 0030 7B68     	 ldr r3,[r7,#4]
 233 0032 9A68     	 ldr r2,[r3,#8]
 234 0034 3B68     	 ldr r3,[r7]
 235 0036 1B68     	 ldr r3,[r3]
 236 0038 1A43     	 orrs r2,r2,r3
 237 003a 7B68     	 ldr r3,[r7,#4]
 238 003c 9968     	 ldr r1,[r3,#8]
 239 003e 0021     	 movs r1,#0
 240 0040 0A43     	 orrs r2,r2,r1
 241 0042 9A60     	 str r2,[r3,#8]
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   /* Enable TS function */
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= LEDTS_GLOBCTL_TS_EN_Msk;
 242              	 .loc 1 188 0
 243 0044 7B68     	 ldr r3,[r7,#4]
 244 0046 5B68     	 ldr r3,[r3,#4]
 245 0048 43F00102 	 orr r2,r3,#1
 246 004c 7B68     	 ldr r3,[r7,#4]
 247 004e 5968     	 ldr r1,[r3,#4]
 248 0050 0021     	 movs r1,#0
 249 0052 0A43     	 orrs r2,r2,r1
 250 0054 5A60     	 str r2,[r3,#4]
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 251              	 .loc 1 190 0
 252 0056 0023     	 movs r3,#0
 253              	.L12:
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 254              	 .loc 1 191 0
 255 0058 1846     	 mov r0,r3
 256 005a 1437     	 adds r7,r7,#20
 257              	.LCFI14:
 258              	 .cfi_def_cfa_offset 4
 259 005c BD46     	 mov sp,r7
 260              	.LCFI15:
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 005e 5DF8047B 	 ldr r7,[sp],#4
 264              	.LCFI16:
 265              	 .cfi_restore 7
 266              	 .cfi_def_cfa_offset 0
 267 0062 7047     	 bx lr
 268              	.L14:
 269              	 .align 2
 270              	.L13:
 271 0064 FFFF60F0 	 .word -262078465
 272              	 .cfi_endproc
 273              	.LFE173:
 275              	 .section .text.XMC_LEDTS_InitTSAdvanced,"ax",%progbits
 276              	 .align 2
 277              	 .global XMC_LEDTS_InitTSAdvanced
 278              	 .thumb
 279              	 .thumb_func
 281              	XMC_LEDTS_InitTSAdvanced:
 282              	.LFB174:
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Initialization of registers for advanced Touch-Sense control function
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** XMC_LEDTS_STATUS_t XMC_LEDTS_InitTSAdvanced (XMC_LEDTS_t *const ledts, const XMC_LEDTS_TS_CONFIG_AD
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 283              	 .loc 1 197 0
 284              	 .cfi_startproc
 285              	 
 286              	 
 287              	 
 288 0000 80B4     	 push {r7}
 289              	.LCFI17:
 290              	 .cfi_def_cfa_offset 4
 291              	 .cfi_offset 7,-4
 292 0002 85B0     	 sub sp,sp,#20
 293              	.LCFI18:
 294              	 .cfi_def_cfa_offset 24
 295 0004 00AF     	 add r7,sp,#0
 296              	.LCFI19:
 297              	 .cfi_def_cfa_register 7
 298 0006 7860     	 str r0,[r7,#4]
 299 0008 3960     	 str r1,[r7]
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_TS_Advanced_Init:Null Pointer", (config != (XMC_LEDTS_TS_CONFIG_ADVANCED_t 
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   if((ledts->GLOBCTL & LEDTS_GLOBCTL_CLK_PS_Msk) != XMC_LEDTS_CLOCK_NOT_RUNNING)
 300              	 .loc 1 203 0
 301 000a 7B68     	 ldr r3,[r7,#4]
 302 000c 5B68     	 ldr r3,[r3,#4]
 303 000e 1B0C     	 lsrs r3,r3,#16
 304 0010 1B04     	 lsls r3,r3,#16
 305 0012 002B     	 cmp r3,#0
 306 0014 01D0     	 beq .L16
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   {
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****     return XMC_LEDTS_STATUS_RUNNING;
 307              	 .loc 1 205 0
 308 0016 0123     	 movs r3,#1
 309 0018 2BE0     	 b .L17
 310              	.L16:
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   }
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_GLOBCTL_MASKVAL_Msk | LEDTS_GLOBCTL_FENVAL_Msk);
 311              	 .loc 1 208 0
 312 001a 6FF4F053 	 mvn r3,#7680
 313 001e FB60     	 str r3,[r7,#12]
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= (reg);
 314              	 .loc 1 209 0
 315 0020 7B68     	 ldr r3,[r7,#4]
 316 0022 5A68     	 ldr r2,[r3,#4]
 317 0024 FB68     	 ldr r3,[r7,#12]
 318 0026 1A40     	 ands r2,r2,r3
 319 0028 7B68     	 ldr r3,[r7,#4]
 320 002a 5968     	 ldr r1,[r3,#4]
 321 002c 0021     	 movs r1,#0
 322 002e 0A43     	 orrs r2,r2,r1
 323 0030 5A60     	 str r2,[r3,#4]
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= (config->globctl);
 324              	 .loc 1 210 0
 325 0032 7B68     	 ldr r3,[r7,#4]
 326 0034 5A68     	 ldr r2,[r3,#4]
 327 0036 3B68     	 ldr r3,[r7]
 328 0038 1B68     	 ldr r3,[r3]
 329 003a 1A43     	 orrs r2,r2,r3
 330 003c 7B68     	 ldr r3,[r7,#4]
 331 003e 5968     	 ldr r1,[r3,#4]
 332 0040 0021     	 movs r1,#0
 333 0042 0A43     	 orrs r2,r2,r1
 334 0044 5A60     	 str r2,[r3,#4]
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg = ~(LEDTS_FNCTL_PADT_Msk | LEDTS_FNCTL_PADTSW_Msk | LEDTS_FNCTL_EPULL_Msk | LEDTS_FNCTL_TSOEX
 335              	 .loc 1 212 0
 336 0046 0E4B     	 ldr r3,.L18
 337 0048 FB60     	 str r3,[r7,#12]
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= (reg);
 338              	 .loc 1 213 0
 339 004a 7B68     	 ldr r3,[r7,#4]
 340 004c 9A68     	 ldr r2,[r3,#8]
 341 004e FB68     	 ldr r3,[r7,#12]
 342 0050 1A40     	 ands r2,r2,r3
 343 0052 7B68     	 ldr r3,[r7,#4]
 344 0054 9968     	 ldr r1,[r3,#8]
 345 0056 0021     	 movs r1,#0
 346 0058 0A43     	 orrs r2,r2,r1
 347 005a 9A60     	 str r2,[r3,#8]
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (config->fnctl);
 348              	 .loc 1 214 0
 349 005c 7B68     	 ldr r3,[r7,#4]
 350 005e 9A68     	 ldr r2,[r3,#8]
 351 0060 3B68     	 ldr r3,[r7]
 352 0062 5B68     	 ldr r3,[r3,#4]
 353 0064 1A43     	 orrs r2,r2,r3
 354 0066 7B68     	 ldr r3,[r7,#4]
 355 0068 9968     	 ldr r1,[r3,#8]
 356 006a 0021     	 movs r1,#0
 357 006c 0A43     	 orrs r2,r2,r1
 358 006e 9A60     	 str r2,[r3,#8]
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   return XMC_LEDTS_STATUS_SUCCESS;
 359              	 .loc 1 216 0
 360 0070 0023     	 movs r3,#0
 361              	.L17:
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 362              	 .loc 1 217 0
 363 0072 1846     	 mov r0,r3
 364 0074 1437     	 adds r7,r7,#20
 365              	.LCFI20:
 366              	 .cfi_def_cfa_offset 4
 367 0076 BD46     	 mov sp,r7
 368              	.LCFI21:
 369              	 .cfi_def_cfa_register 13
 370              	 
 371 0078 5DF8047B 	 ldr r7,[sp],#4
 372              	.LCFI22:
 373              	 .cfi_restore 7
 374              	 .cfi_def_cfa_offset 0
 375 007c 7047     	 bx lr
 376              	.L19:
 377 007e 00BF     	 .align 2
 378              	.L18:
 379 0080 E0FF9FFF 	 .word -6291488
 380              	 .cfi_endproc
 381              	.LFE174:
 383              	 .section .text.XMC_LEDTS_StartCounter,"ax",%progbits
 384              	 .align 2
 385              	 .global XMC_LEDTS_StartCounter
 386              	 .thumb
 387              	 .thumb_func
 389              	XMC_LEDTS_StartCounter:
 390              	.LFB175:
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Starts LEDTS-counter
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StartCounter(XMC_LEDTS_t *const ledts, const uint16_t prescaler)
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 391              	 .loc 1 223 0
 392              	 .cfi_startproc
 393              	 
 394              	 
 395              	 
 396 0000 80B4     	 push {r7}
 397              	.LCFI23:
 398              	 .cfi_def_cfa_offset 4
 399              	 .cfi_offset 7,-4
 400 0002 83B0     	 sub sp,sp,#12
 401              	.LCFI24:
 402              	 .cfi_def_cfa_offset 16
 403 0004 00AF     	 add r7,sp,#0
 404              	.LCFI25:
 405              	 .cfi_def_cfa_register 7
 406 0006 7860     	 str r0,[r7,#4]
 407 0008 0B46     	 mov r3,r1
 408 000a 7B80     	 strh r3,[r7,#2]
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Start_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL |= prescaler<<16U;
 409              	 .loc 1 226 0
 410 000c 7B68     	 ldr r3,[r7,#4]
 411 000e 5B68     	 ldr r3,[r3,#4]
 412 0010 7A88     	 ldrh r2,[r7,#2]
 413 0012 1204     	 lsls r2,r2,#16
 414 0014 1A43     	 orrs r2,r2,r3
 415 0016 7B68     	 ldr r3,[r7,#4]
 416 0018 5968     	 ldr r1,[r3,#4]
 417 001a 0021     	 movs r1,#0
 418 001c 0A43     	 orrs r2,r2,r1
 419 001e 5A60     	 str r2,[r3,#4]
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 420              	 .loc 1 227 0
 421 0020 0C37     	 adds r7,r7,#12
 422              	.LCFI26:
 423              	 .cfi_def_cfa_offset 4
 424 0022 BD46     	 mov sp,r7
 425              	.LCFI27:
 426              	 .cfi_def_cfa_register 13
 427              	 
 428 0024 5DF8047B 	 ldr r7,[sp],#4
 429              	.LCFI28:
 430              	 .cfi_restore 7
 431              	 .cfi_def_cfa_offset 0
 432 0028 7047     	 bx lr
 433              	 .cfi_endproc
 434              	.LFE175:
 436 002a 00BF     	 .section .text.XMC_LEDTS_StopCounter,"ax",%progbits
 437              	 .align 2
 438              	 .global XMC_LEDTS_StopCounter
 439              	 .thumb
 440              	 .thumb_func
 442              	XMC_LEDTS_StopCounter:
 443              	.LFB176:
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Stops LEDTS-counter
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_StopCounter(XMC_LEDTS_t *const ledts)
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 444              	 .loc 1 233 0
 445              	 .cfi_startproc
 446              	 
 447              	 
 448              	 
 449 0000 80B4     	 push {r7}
 450              	.LCFI29:
 451              	 .cfi_def_cfa_offset 4
 452              	 .cfi_offset 7,-4
 453 0002 83B0     	 sub sp,sp,#12
 454              	.LCFI30:
 455              	 .cfi_def_cfa_offset 16
 456 0004 00AF     	 add r7,sp,#0
 457              	.LCFI31:
 458              	 .cfi_def_cfa_register 7
 459 0006 7860     	 str r0,[r7,#4]
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Stop_Counter:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->GLOBCTL &= 0x0000FFFF;
 460              	 .loc 1 236 0
 461 0008 7B68     	 ldr r3,[r7,#4]
 462 000a 5B68     	 ldr r3,[r3,#4]
 463 000c 9AB2     	 uxth r2,r3
 464 000e 7B68     	 ldr r3,[r7,#4]
 465 0010 5968     	 ldr r1,[r3,#4]
 466 0012 0021     	 movs r1,#0
 467 0014 0A43     	 orrs r2,r2,r1
 468 0016 5A60     	 str r2,[r3,#4]
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 469              	 .loc 1 237 0
 470 0018 0C37     	 adds r7,r7,#12
 471              	.LCFI32:
 472              	 .cfi_def_cfa_offset 4
 473 001a BD46     	 mov sp,r7
 474              	.LCFI33:
 475              	 .cfi_def_cfa_register 13
 476              	 
 477 001c 5DF8047B 	 ldr r7,[sp],#4
 478              	.LCFI34:
 479              	 .cfi_restore 7
 480              	 .cfi_def_cfa_offset 0
 481 0020 7047     	 bx lr
 482              	 .cfi_endproc
 483              	.LFE176:
 485 0022 00BF     	 .section .text.XMC_LEDTS_ReadInterruptFlag,"ax",%progbits
 486              	 .align 2
 487              	 .global XMC_LEDTS_ReadInterruptFlag
 488              	 .thumb
 489              	 .thumb_func
 491              	XMC_LEDTS_ReadInterruptFlag:
 492              	.LFB177:
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Reads time interrupt flags
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadInterruptFlag(XMC_LEDTS_t *const ledts)
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 493              	 .loc 1 243 0
 494              	 .cfi_startproc
 495              	 
 496              	 
 497              	 
 498 0000 80B4     	 push {r7}
 499              	.LCFI35:
 500              	 .cfi_def_cfa_offset 4
 501              	 .cfi_offset 7,-4
 502 0002 83B0     	 sub sp,sp,#12
 503              	.LCFI36:
 504              	 .cfi_def_cfa_offset 16
 505 0004 00AF     	 add r7,sp,#0
 506              	.LCFI37:
 507              	 .cfi_def_cfa_register 7
 508 0006 7860     	 str r0,[r7,#4]
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ReadInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts))
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   return (ledts->EVFR & 0xF);
 509              	 .loc 1 246 0
 510 0008 7B68     	 ldr r3,[r7,#4]
 511 000a DB68     	 ldr r3,[r3,#12]
 512 000c 03F00F03 	 and r3,r3,#15
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 513              	 .loc 1 247 0
 514 0010 1846     	 mov r0,r3
 515 0012 0C37     	 adds r7,r7,#12
 516              	.LCFI38:
 517              	 .cfi_def_cfa_offset 4
 518 0014 BD46     	 mov sp,r7
 519              	.LCFI39:
 520              	 .cfi_def_cfa_register 13
 521              	 
 522 0016 5DF8047B 	 ldr r7,[sp],#4
 523              	.LCFI40:
 524              	 .cfi_restore 7
 525              	 .cfi_def_cfa_offset 0
 526 001a 7047     	 bx lr
 527              	 .cfi_endproc
 528              	.LFE177:
 530              	 .section .text.XMC_LEDTS_SetActivePADNo,"ax",%progbits
 531              	 .align 2
 532              	 .global XMC_LEDTS_SetActivePADNo
 533              	 .thumb
 534              	 .thumb_func
 536              	XMC_LEDTS_SetActivePADNo:
 537              	.LFB178:
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Set the active pad number
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetActivePADNo(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t pad_num)
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 538              	 .loc 1 253 0
 539              	 .cfi_startproc
 540              	 
 541              	 
 542              	 
 543 0000 80B4     	 push {r7}
 544              	.LCFI41:
 545              	 .cfi_def_cfa_offset 4
 546              	 .cfi_offset 7,-4
 547 0002 85B0     	 sub sp,sp,#20
 548              	.LCFI42:
 549              	 .cfi_def_cfa_offset 24
 550 0004 00AF     	 add r7,sp,#0
 551              	.LCFI43:
 552              	 .cfi_def_cfa_register 7
 553 0006 7860     	 str r0,[r7,#4]
 554 0008 0B46     	 mov r3,r1
 555 000a FB70     	 strb r3,[r7,#3]
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetActivePADNo:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg = ledts->FNCTL;
 556              	 .loc 1 258 0
 557 000c 7B68     	 ldr r3,[r7,#4]
 558 000e 9B68     	 ldr r3,[r3,#8]
 559 0010 FB60     	 str r3,[r7,#12]
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg &= ~(LEDTS_FNCTL_PADT_Msk);
 560              	 .loc 1 259 0
 561 0012 FB68     	 ldr r3,[r7,#12]
 562 0014 23F00703 	 bic r3,r3,#7
 563 0018 FB60     	 str r3,[r7,#12]
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg |= (uint32_t)pad_num;
 564              	 .loc 1 260 0
 565 001a FB78     	 ldrb r3,[r7,#3]
 566 001c FA68     	 ldr r2,[r7,#12]
 567 001e 1343     	 orrs r3,r3,r2
 568 0020 FB60     	 str r3,[r7,#12]
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL = reg;
 569              	 .loc 1 261 0
 570 0022 7B68     	 ldr r3,[r7,#4]
 571 0024 9A68     	 ldr r2,[r3,#8]
 572 0026 0021     	 movs r1,#0
 573 0028 FA68     	 ldr r2,[r7,#12]
 574 002a 0A43     	 orrs r2,r2,r1
 575 002c 9A60     	 str r2,[r3,#8]
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 576              	 .loc 1 262 0
 577 002e 1437     	 adds r7,r7,#20
 578              	.LCFI44:
 579              	 .cfi_def_cfa_offset 4
 580 0030 BD46     	 mov sp,r7
 581              	.LCFI45:
 582              	 .cfi_def_cfa_register 13
 583              	 
 584 0032 5DF8047B 	 ldr r7,[sp],#4
 585              	.LCFI46:
 586              	 .cfi_restore 7
 587              	 .cfi_def_cfa_offset 0
 588 0036 7047     	 bx lr
 589              	 .cfi_endproc
 590              	.LFE178:
 592              	 .section .text.XMC_LEDTS_ClearInterruptFlag,"ax",%progbits
 593              	 .align 2
 594              	 .global XMC_LEDTS_ClearInterruptFlag
 595              	 .thumb
 596              	 .thumb_func
 598              	XMC_LEDTS_ClearInterruptFlag:
 599              	.LFB179:
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Clears interrupt indication flags
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_ClearInterruptFlag(XMC_LEDTS_t *const ledts, uint32_t interrupt_mask)
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 600              	 .loc 1 268 0
 601              	 .cfi_startproc
 602              	 
 603              	 
 604              	 
 605 0000 80B4     	 push {r7}
 606              	.LCFI47:
 607              	 .cfi_def_cfa_offset 4
 608              	 .cfi_offset 7,-4
 609 0002 83B0     	 sub sp,sp,#12
 610              	.LCFI48:
 611              	 .cfi_def_cfa_offset 16
 612 0004 00AF     	 add r7,sp,#0
 613              	.LCFI49:
 614              	 .cfi_def_cfa_register 7
 615 0006 7860     	 str r0,[r7,#4]
 616 0008 3960     	 str r1,[r7]
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_ClearInterruptFlag:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->EVFR = (interrupt_mask << LEDTS_EVFR_CTSF_Pos);
 617              	 .loc 1 271 0
 618 000a 3B68     	 ldr r3,[r7]
 619 000c 1A04     	 lsls r2,r3,#16
 620 000e 7B68     	 ldr r3,[r7,#4]
 621 0010 D968     	 ldr r1,[r3,#12]
 622 0012 0021     	 movs r1,#0
 623 0014 0A43     	 orrs r2,r2,r1
 624 0016 DA60     	 str r2,[r3,#12]
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 625              	 .loc 1 272 0
 626 0018 0C37     	 adds r7,r7,#12
 627              	.LCFI50:
 628              	 .cfi_def_cfa_offset 4
 629 001a BD46     	 mov sp,r7
 630              	.LCFI51:
 631              	 .cfi_def_cfa_register 13
 632              	 
 633 001c 5DF8047B 	 ldr r7,[sp],#4
 634              	.LCFI52:
 635              	 .cfi_restore 7
 636              	 .cfi_def_cfa_offset 0
 637 0020 7047     	 bx lr
 638              	 .cfi_endproc
 639              	.LFE179:
 641 0022 00BF     	 .section .text.XMC_LEDTS_SetLEDLinePattern,"ax",%progbits
 642              	 .align 2
 643              	 .global XMC_LEDTS_SetLEDLinePattern
 644              	 .thumb
 645              	 .thumb_func
 647              	XMC_LEDTS_SetLEDLinePattern:
 648              	.LFB180:
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Programming of registers to output pattern on an LED column in LED matrix
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetLEDLinePattern(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const uin
 278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 649              	 .loc 1 278 0
 650              	 .cfi_startproc
 651              	 
 652              	 
 653              	 
 654 0000 80B4     	 push {r7}
 655              	.LCFI53:
 656              	 .cfi_def_cfa_offset 4
 657              	 .cfi_offset 7,-4
 658 0002 85B0     	 sub sp,sp,#20
 659              	.LCFI54:
 660              	 .cfi_def_cfa_offset 24
 661 0004 00AF     	 add r7,sp,#0
 662              	.LCFI55:
 663              	 .cfi_def_cfa_register 7
 664 0006 7860     	 str r0,[r7,#4]
 665 0008 0B46     	 mov r3,r1
 666 000a FB70     	 strb r3,[r7,#3]
 667 000c 1346     	 mov r3,r2
 668 000e BB70     	 strb r3,[r7,#2]
 279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 669              	 .loc 1 280 0
 670 0010 FB78     	 ldrb r3,[r7,#3]
 671 0012 9B08     	 lsrs r3,r3,#2
 672 0014 FB73     	 strb r3,[r7,#15]
 281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 673              	 .loc 1 281 0
 674 0016 FB78     	 ldrb r3,[r7,#3]
 675 0018 03F00303 	 and r3,r3,#3
 676 001c DBB2     	 uxtb r3,r3
 677 001e DB00     	 lsls r3,r3,#3
 678 0020 BB73     	 strb r3,[r7,#14]
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_LED_Line_Pattern:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledt
 284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg = ledts->LINE[reg_index];
 679              	 .loc 1 285 0
 680 0022 FB7B     	 ldrb r3,[r7,#15]
 681 0024 7A68     	 ldr r2,[r7,#4]
 682 0026 0433     	 adds r3,r3,#4
 683 0028 9B00     	 lsls r3,r3,#2
 684 002a 1344     	 add r3,r3,r2
 685 002c 5B68     	 ldr r3,[r3,#4]
 686 002e BB60     	 str r3,[r7,#8]
 286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg &= (~(0xff << bit_shift_count));
 687              	 .loc 1 286 0
 688 0030 BB7B     	 ldrb r3,[r7,#14]
 689 0032 FF22     	 movs r2,#255
 690 0034 02FA03F3 	 lsl r3,r2,r3
 691 0038 DB43     	 mvns r3,r3
 692 003a 1A46     	 mov r2,r3
 693 003c BB68     	 ldr r3,[r7,#8]
 694 003e 1340     	 ands r3,r3,r2
 695 0040 BB60     	 str r3,[r7,#8]
 287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg |= pattern << bit_shift_count;
 696              	 .loc 1 287 0
 697 0042 BA78     	 ldrb r2,[r7,#2]
 698 0044 BB7B     	 ldrb r3,[r7,#14]
 699 0046 02FA03F3 	 lsl r3,r2,r3
 700 004a 1A46     	 mov r2,r3
 701 004c BB68     	 ldr r3,[r7,#8]
 702 004e 1343     	 orrs r3,r3,r2
 703 0050 BB60     	 str r3,[r7,#8]
 288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->LINE[reg_index] = reg;
 704              	 .loc 1 288 0
 705 0052 FB7B     	 ldrb r3,[r7,#15]
 706 0054 7A68     	 ldr r2,[r7,#4]
 707 0056 0433     	 adds r3,r3,#4
 708 0058 9B00     	 lsls r3,r3,#2
 709 005a 1344     	 add r3,r3,r2
 710 005c 5A68     	 ldr r2,[r3,#4]
 711 005e 0021     	 movs r1,#0
 712 0060 BA68     	 ldr r2,[r7,#8]
 713 0062 0A43     	 orrs r2,r2,r1
 714 0064 5A60     	 str r2,[r3,#4]
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 715              	 .loc 1 290 0
 716 0066 1437     	 adds r7,r7,#20
 717              	.LCFI56:
 718              	 .cfi_def_cfa_offset 4
 719 0068 BD46     	 mov sp,r7
 720              	.LCFI57:
 721              	 .cfi_def_cfa_register 13
 722              	 
 723 006a 5DF8047B 	 ldr r7,[sp],#4
 724              	.LCFI58:
 725              	 .cfi_restore 7
 726              	 .cfi_def_cfa_offset 0
 727 006e 7047     	 bx lr
 728              	 .cfi_endproc
 729              	.LFE180:
 731              	 .section .text.XMC_LEDTS_SetColumnBrightness,"ax",%progbits
 732              	 .align 2
 733              	 .global XMC_LEDTS_SetColumnBrightness
 734              	 .thumb
 735              	 .thumb_func
 737              	XMC_LEDTS_SetColumnBrightness:
 738              	.LFB181:
 291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust brightness of an LED column in LED matrix
 294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetColumnBrightness(XMC_LEDTS_t *const ledts, XMC_LEDTS_LED_COLUMN_t column, const u
 296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 739              	 .loc 1 296 0
 740              	 .cfi_startproc
 741              	 
 742              	 
 743              	 
 744 0000 80B4     	 push {r7}
 745              	.LCFI59:
 746              	 .cfi_def_cfa_offset 4
 747              	 .cfi_offset 7,-4
 748 0002 85B0     	 sub sp,sp,#20
 749              	.LCFI60:
 750              	 .cfi_def_cfa_offset 24
 751 0004 00AF     	 add r7,sp,#0
 752              	.LCFI61:
 753              	 .cfi_def_cfa_register 7
 754 0006 7860     	 str r0,[r7,#4]
 755 0008 0B46     	 mov r3,r1
 756 000a FB70     	 strb r3,[r7,#3]
 757 000c 1346     	 mov r3,r2
 758 000e BB70     	 strb r3,[r7,#2]
 297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)column) >> 2;
 759              	 .loc 1 298 0
 760 0010 FB78     	 ldrb r3,[r7,#3]
 761 0012 9B08     	 lsrs r3,r3,#2
 762 0014 FB73     	 strb r3,[r7,#15]
 299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)column & 0x03) * 8;
 763              	 .loc 1 299 0
 764 0016 FB78     	 ldrb r3,[r7,#3]
 765 0018 03F00303 	 and r3,r3,#3
 766 001c DBB2     	 uxtb r3,r3
 767 001e DB00     	 lsls r3,r3,#3
 768 0020 BB73     	 strb r3,[r7,#14]
 300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Column_Brightness:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(led
 302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 	reg = ledts->LDCMP[reg_index];
 769              	 .loc 1 303 0
 770 0022 FB7B     	 ldrb r3,[r7,#15]
 771 0024 7A68     	 ldr r2,[r7,#4]
 772 0026 0633     	 adds r3,r3,#6
 773 0028 9B00     	 lsls r3,r3,#2
 774 002a 1344     	 add r3,r3,r2
 775 002c 5B68     	 ldr r3,[r3,#4]
 776 002e BB60     	 str r3,[r7,#8]
 304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 777              	 .loc 1 304 0
 778 0030 BB7B     	 ldrb r3,[r7,#14]
 779 0032 FF22     	 movs r2,#255
 780 0034 02FA03F3 	 lsl r3,r2,r3
 781 0038 DB43     	 mvns r3,r3
 782 003a 1A46     	 mov r2,r3
 783 003c BB68     	 ldr r3,[r7,#8]
 784 003e 1340     	 ands r3,r3,r2
 785 0040 BB60     	 str r3,[r7,#8]
 305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 	reg |= brightness << bit_shift_count;
 786              	 .loc 1 305 0
 787 0042 BA78     	 ldrb r2,[r7,#2]
 788 0044 BB7B     	 ldrb r3,[r7,#14]
 789 0046 02FA03F3 	 lsl r3,r2,r3
 790 004a 1A46     	 mov r2,r3
 791 004c BB68     	 ldr r3,[r7,#8]
 792 004e 1343     	 orrs r3,r3,r2
 793 0050 BB60     	 str r3,[r7,#8]
 306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 	ledts->LDCMP[reg_index] = reg;
 794              	 .loc 1 306 0
 795 0052 FB7B     	 ldrb r3,[r7,#15]
 796 0054 7A68     	 ldr r2,[r7,#4]
 797 0056 0633     	 adds r3,r3,#6
 798 0058 9B00     	 lsls r3,r3,#2
 799 005a 1344     	 add r3,r3,r2
 800 005c 5A68     	 ldr r2,[r3,#4]
 801 005e 0021     	 movs r1,#0
 802 0060 BA68     	 ldr r2,[r7,#8]
 803 0062 0A43     	 orrs r2,r2,r1
 804 0064 5A60     	 str r2,[r3,#4]
 307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 805              	 .loc 1 307 0
 806 0066 1437     	 adds r7,r7,#20
 807              	.LCFI62:
 808              	 .cfi_def_cfa_offset 4
 809 0068 BD46     	 mov sp,r7
 810              	.LCFI63:
 811              	 .cfi_def_cfa_register 13
 812              	 
 813 006a 5DF8047B 	 ldr r7,[sp],#4
 814              	.LCFI64:
 815              	 .cfi_restore 7
 816              	 .cfi_def_cfa_offset 0
 817 006e 7047     	 bx lr
 818              	 .cfi_endproc
 819              	.LFE181:
 821              	 .section .text.XMC_LEDTS_SetCommonOscillationWindow,"ax",%progbits
 822              	 .align 2
 823              	 .global XMC_LEDTS_SetCommonOscillationWindow
 824              	 .thumb
 825              	 .thumb_func
 827              	XMC_LEDTS_SetCommonOscillationWindow:
 828              	.LFB182:
 308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Programming of registers to set common oscillation window size for touch-sense inputs
 311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetCommonOscillationWindow(XMC_LEDTS_t *const ledts, const uint8_t common_size)
 313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 829              	 .loc 1 313 0
 830              	 .cfi_startproc
 831              	 
 832              	 
 833              	 
 834 0000 80B4     	 push {r7}
 835              	.LCFI65:
 836              	 .cfi_def_cfa_offset 4
 837              	 .cfi_offset 7,-4
 838 0002 85B0     	 sub sp,sp,#20
 839              	.LCFI66:
 840              	 .cfi_def_cfa_offset 24
 841 0004 00AF     	 add r7,sp,#0
 842              	.LCFI67:
 843              	 .cfi_def_cfa_register 7
 844 0006 7860     	 str r0,[r7,#4]
 845 0008 0B46     	 mov r3,r1
 846 000a FB70     	 strb r3,[r7,#3]
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Common_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL
 317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg = ledts->LDCMP[1];
 847              	 .loc 1 318 0
 848 000c 7B68     	 ldr r3,[r7,#4]
 849 000e 1B6A     	 ldr r3,[r3,#32]
 850 0010 FB60     	 str r3,[r7,#12]
 319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg &= ~LEDTS_LDCMP1_CMP_LDA_TSCOM_Msk;
 851              	 .loc 1 319 0
 852 0012 FB68     	 ldr r3,[r7,#12]
 853 0014 23F07F43 	 bic r3,r3,#-16777216
 854 0018 FB60     	 str r3,[r7,#12]
 320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   reg |= (common_size << LEDTS_LDCMP1_CMP_LDA_TSCOM_Pos);
 855              	 .loc 1 320 0
 856 001a FB78     	 ldrb r3,[r7,#3]
 857 001c 1B06     	 lsls r3,r3,#24
 858 001e 1A46     	 mov r2,r3
 859 0020 FB68     	 ldr r3,[r7,#12]
 860 0022 1343     	 orrs r3,r3,r2
 861 0024 FB60     	 str r3,[r7,#12]
 321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->LDCMP[1] = reg;
 862              	 .loc 1 321 0
 863 0026 7B68     	 ldr r3,[r7,#4]
 864 0028 1A6A     	 ldr r2,[r3,#32]
 865 002a 0021     	 movs r1,#0
 866 002c FA68     	 ldr r2,[r7,#12]
 867 002e 0A43     	 orrs r2,r2,r1
 868 0030 1A62     	 str r2,[r3,#32]
 322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 869              	 .loc 1 322 0
 870 0032 1437     	 adds r7,r7,#20
 871              	.LCFI68:
 872              	 .cfi_def_cfa_offset 4
 873 0034 BD46     	 mov sp,r7
 874              	.LCFI69:
 875              	 .cfi_def_cfa_register 13
 876              	 
 877 0036 5DF8047B 	 ldr r7,[sp],#4
 878              	.LCFI70:
 879              	 .cfi_restore 7
 880              	 .cfi_def_cfa_offset 0
 881 003a 7047     	 bx lr
 882              	 .cfi_endproc
 883              	.LFE182:
 885              	 .section .text.XMC_LEDTS_ReadFNCOL,"ax",%progbits
 886              	 .align 2
 887              	 .global XMC_LEDTS_ReadFNCOL
 888              	 .thumb
 889              	 .thumb_func
 891              	XMC_LEDTS_ReadFNCOL:
 892              	.LFB183:
 323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Checking the previous active function or LED column status
 326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** uint32_t XMC_LEDTS_ReadFNCOL(XMC_LEDTS_t *const ledts)
 328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 893              	 .loc 1 328 0
 894              	 .cfi_startproc
 895              	 
 896              	 
 897              	 
 898 0000 80B4     	 push {r7}
 899              	.LCFI71:
 900              	 .cfi_def_cfa_offset 4
 901              	 .cfi_offset 7,-4
 902 0002 85B0     	 sub sp,sp,#20
 903              	.LCFI72:
 904              	 .cfi_def_cfa_offset 24
 905 0004 00AF     	 add r7,sp,#0
 906              	.LCFI73:
 907              	 .cfi_def_cfa_register 7
 908 0006 7860     	 str r0,[r7,#4]
 329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint32_t fncol_read;
 330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_FNCOL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   fncol_read = ledts->FNCTL & LEDTS_FNCTL_FNCOL_Msk;
 909              	 .loc 1 333 0
 910 0008 7B68     	 ldr r3,[r7,#4]
 911 000a 9B68     	 ldr r3,[r3,#8]
 912 000c 03F0E003 	 and r3,r3,#224
 913 0010 FB60     	 str r3,[r7,#12]
 334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   fncol_read >>= LEDTS_FNCTL_FNCOL_Pos;
 914              	 .loc 1 334 0
 915 0012 FB68     	 ldr r3,[r7,#12]
 916 0014 5B09     	 lsrs r3,r3,#5
 917 0016 FB60     	 str r3,[r7,#12]
 335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   return fncol_read;
 918              	 .loc 1 336 0
 919 0018 FB68     	 ldr r3,[r7,#12]
 337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 920              	 .loc 1 337 0
 921 001a 1846     	 mov r0,r3
 922 001c 1437     	 adds r7,r7,#20
 923              	.LCFI74:
 924              	 .cfi_def_cfa_offset 4
 925 001e BD46     	 mov sp,r7
 926              	.LCFI75:
 927              	 .cfi_def_cfa_register 13
 928              	 
 929 0020 5DF8047B 	 ldr r7,[sp],#4
 930              	.LCFI76:
 931              	 .cfi_restore 7
 932              	 .cfi_def_cfa_offset 0
 933 0024 7047     	 bx lr
 934              	 .cfi_endproc
 935              	.LFE183:
 937 0026 00BF     	 .section .text.XMC_LEDTS_SetNumOfLEDColumns,"ax",%progbits
 938              	 .align 2
 939              	 .global XMC_LEDTS_SetNumOfLEDColumns
 940              	 .thumb
 941              	 .thumb_func
 943              	XMC_LEDTS_SetNumOfLEDColumns:
 944              	.LFB184:
 338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Set the number of LED column Enabled
 341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetNumOfLEDColumns(XMC_LEDTS_t *const ledts, uint8_t count)
 343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 945              	 .loc 1 343 0
 946              	 .cfi_startproc
 947              	 
 948              	 
 949              	 
 950 0000 80B4     	 push {r7}
 951              	.LCFI77:
 952              	 .cfi_def_cfa_offset 4
 953              	 .cfi_offset 7,-4
 954 0002 83B0     	 sub sp,sp,#12
 955              	.LCFI78:
 956              	 .cfi_def_cfa_offset 16
 957 0004 00AF     	 add r7,sp,#0
 958              	.LCFI79:
 959              	 .cfi_def_cfa_register 7
 960 0006 7860     	 str r0,[r7,#4]
 961 0008 0B46     	 mov r3,r1
 962 000a FB70     	 strb r3,[r7,#3]
 344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_SetNumOfLEDColumns:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts)
 346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL &= ~(LEDTS_FNCTL_NR_LEDCOL_Msk);
 963              	 .loc 1 347 0
 964 000c 7B68     	 ldr r3,[r7,#4]
 965 000e 9B68     	 ldr r3,[r3,#8]
 966 0010 23F06042 	 bic r2,r3,#-536870912
 967 0014 7B68     	 ldr r3,[r7,#4]
 968 0016 9968     	 ldr r1,[r3,#8]
 969 0018 0021     	 movs r1,#0
 970 001a 0A43     	 orrs r2,r2,r1
 971 001c 9A60     	 str r2,[r3,#8]
 348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   ledts->FNCTL |= (count << LEDTS_FNCTL_NR_LEDCOL_Pos);
 972              	 .loc 1 348 0
 973 001e 7B68     	 ldr r3,[r7,#4]
 974 0020 9B68     	 ldr r3,[r3,#8]
 975 0022 FA78     	 ldrb r2,[r7,#3]
 976 0024 5207     	 lsls r2,r2,#29
 977 0026 1A43     	 orrs r2,r2,r3
 978 0028 7B68     	 ldr r3,[r7,#4]
 979 002a 9968     	 ldr r1,[r3,#8]
 980 002c 0021     	 movs r1,#0
 981 002e 0A43     	 orrs r2,r2,r1
 982 0030 9A60     	 str r2,[r3,#8]
 349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 983              	 .loc 1 349 0
 984 0032 0C37     	 adds r7,r7,#12
 985              	.LCFI80:
 986              	 .cfi_def_cfa_offset 4
 987 0034 BD46     	 mov sp,r7
 988              	.LCFI81:
 989              	 .cfi_def_cfa_register 13
 990              	 
 991 0036 5DF8047B 	 ldr r7,[sp],#4
 992              	.LCFI82:
 993              	 .cfi_restore 7
 994              	 .cfi_def_cfa_offset 0
 995 003a 7047     	 bx lr
 996              	 .cfi_endproc
 997              	.LFE184:
 999              	 .section .text.XMC_LEDTS_ReadTSVAL,"ax",%progbits
 1000              	 .align 2
 1001              	 .global XMC_LEDTS_ReadTSVAL
 1002              	 .thumb
 1003              	 .thumb_func
 1005              	XMC_LEDTS_ReadTSVAL:
 1006              	.LFB185:
 350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Reading recorded number of oscillation counts
 353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** uint16_t XMC_LEDTS_ReadTSVAL(XMC_LEDTS_t *const ledts)
 355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 1007              	 .loc 1 355 0
 1008              	 .cfi_startproc
 1009              	 
 1010              	 
 1011              	 
 1012 0000 80B4     	 push {r7}
 1013              	.LCFI83:
 1014              	 .cfi_def_cfa_offset 4
 1015              	 .cfi_offset 7,-4
 1016 0002 85B0     	 sub sp,sp,#20
 1017              	.LCFI84:
 1018              	 .cfi_def_cfa_offset 24
 1019 0004 00AF     	 add r7,sp,#0
 1020              	.LCFI85:
 1021              	 .cfi_def_cfa_register 7
 1022 0006 7860     	 str r0,[r7,#4]
 356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint16_t no_of_oscillations;
 357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Read_TSVAL:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(ledts));
 359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   no_of_oscillations = (ledts->TSVAL & 0xFFFF);
 1023              	 .loc 1 360 0
 1024 0008 7B68     	 ldr r3,[r7,#4]
 1025 000a 1B69     	 ldr r3,[r3,#16]
 1026 000c FB81     	 strh r3,[r7,#14]
 361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   return no_of_oscillations;
 1027              	 .loc 1 362 0
 1028 000e FB89     	 ldrh r3,[r7,#14]
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 1029              	 .loc 1 363 0
 1030 0010 1846     	 mov r0,r3
 1031 0012 1437     	 adds r7,r7,#20
 1032              	.LCFI86:
 1033              	 .cfi_def_cfa_offset 4
 1034 0014 BD46     	 mov sp,r7
 1035              	.LCFI87:
 1036              	 .cfi_def_cfa_register 13
 1037              	 
 1038 0016 5DF8047B 	 ldr r7,[sp],#4
 1039              	.LCFI88:
 1040              	 .cfi_restore 7
 1041              	 .cfi_def_cfa_offset 0
 1042 001a 7047     	 bx lr
 1043              	 .cfi_endproc
 1044              	.LFE185:
 1046              	 .section .text.XMC_LEDTS_SetOscillationWindow,"ax",%progbits
 1047              	 .align 2
 1048              	 .global XMC_LEDTS_SetOscillationWindow
 1049              	 .thumb
 1050              	 .thumb_func
 1052              	XMC_LEDTS_SetOscillationWindow:
 1053              	.LFB186:
 364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** /**
 366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   * Programming of registers to adjust the size of oscillation window
 367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   */
 368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** void XMC_LEDTS_SetOscillationWindow(XMC_LEDTS_t *const ledts, XMC_LEDTS_NUMBER_TS_INPUT_t touchpad,
 369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** {
 1054              	 .loc 1 369 0
 1055              	 .cfi_startproc
 1056              	 
 1057              	 
 1058              	 
 1059 0000 80B4     	 push {r7}
 1060              	.LCFI89:
 1061              	 .cfi_def_cfa_offset 4
 1062              	 .cfi_offset 7,-4
 1063 0002 85B0     	 sub sp,sp,#20
 1064              	.LCFI90:
 1065              	 .cfi_def_cfa_offset 24
 1066 0004 00AF     	 add r7,sp,#0
 1067              	.LCFI91:
 1068              	 .cfi_def_cfa_register 7
 1069 0006 7860     	 str r0,[r7,#4]
 1070 0008 0B46     	 mov r3,r1
 1071 000a FB70     	 strb r3,[r7,#3]
 1072 000c 1346     	 mov r3,r2
 1073 000e BB70     	 strb r3,[r7,#2]
 370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint32_t reg;
 371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint8_t reg_index = ((uint8_t)touchpad) >> 2;
 1074              	 .loc 1 371 0
 1075 0010 FB78     	 ldrb r3,[r7,#3]
 1076 0012 9B08     	 lsrs r3,r3,#2
 1077 0014 FB73     	 strb r3,[r7,#15]
 372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   uint8_t bit_shift_count = ((uint8_t)touchpad & 0x03) * 8;
 1078              	 .loc 1 372 0
 1079 0016 FB78     	 ldrb r3,[r7,#3]
 1080 0018 03F00303 	 and r3,r3,#3
 1081 001c DBB2     	 uxtb r3,r3
 1082 001e DB00     	 lsls r3,r3,#3
 1083 0020 BB73     	 strb r3,[r7,#14]
 373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c ****   XMC_ASSERT("XMC_LEDTS_Set_Oscillation_Window:Wrong Module Pointer", XMC_LEDTS_CHECK_KERNEL_PTR(le
 375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 
 376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 	reg = ledts->TSCMP[reg_index];
 1084              	 .loc 1 376 0
 1085 0022 FB7B     	 ldrb r3,[r7,#15]
 1086 0024 7A68     	 ldr r2,[r7,#4]
 1087 0026 0833     	 adds r3,r3,#8
 1088 0028 9B00     	 lsls r3,r3,#2
 1089 002a 1344     	 add r3,r3,r2
 1090 002c 5B68     	 ldr r3,[r3,#4]
 1091 002e BB60     	 str r3,[r7,#8]
 377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 	reg &= (~(0xff << bit_shift_count));
 1092              	 .loc 1 377 0
 1093 0030 BB7B     	 ldrb r3,[r7,#14]
 1094 0032 FF22     	 movs r2,#255
 1095 0034 02FA03F3 	 lsl r3,r2,r3
 1096 0038 DB43     	 mvns r3,r3
 1097 003a 1A46     	 mov r2,r3
 1098 003c BB68     	 ldr r3,[r7,#8]
 1099 003e 1340     	 ands r3,r3,r2
 1100 0040 BB60     	 str r3,[r7,#8]
 378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 	reg |= size << bit_shift_count;
 1101              	 .loc 1 378 0
 1102 0042 BA78     	 ldrb r2,[r7,#2]
 1103 0044 BB7B     	 ldrb r3,[r7,#14]
 1104 0046 02FA03F3 	 lsl r3,r2,r3
 1105 004a 1A46     	 mov r2,r3
 1106 004c BB68     	 ldr r3,[r7,#8]
 1107 004e 1343     	 orrs r3,r3,r2
 1108 0050 BB60     	 str r3,[r7,#8]
 379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** 	ledts->TSCMP[reg_index] = reg;
 1109              	 .loc 1 379 0
 1110 0052 FB7B     	 ldrb r3,[r7,#15]
 1111 0054 7A68     	 ldr r2,[r7,#4]
 1112 0056 0833     	 adds r3,r3,#8
 1113 0058 9B00     	 lsls r3,r3,#2
 1114 005a 1344     	 add r3,r3,r2
 1115 005c 5A68     	 ldr r2,[r3,#4]
 1116 005e 0021     	 movs r1,#0
 1117 0060 BA68     	 ldr r2,[r7,#8]
 1118 0062 0A43     	 orrs r2,r2,r1
 1119 0064 5A60     	 str r2,[r3,#4]
 380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_ledts.c **** }
 1120              	 .loc 1 380 0
 1121 0066 1437     	 adds r7,r7,#20
 1122              	.LCFI92:
 1123              	 .cfi_def_cfa_offset 4
 1124 0068 BD46     	 mov sp,r7
 1125              	.LCFI93:
 1126              	 .cfi_def_cfa_register 13
 1127              	 
 1128 006a 5DF8047B 	 ldr r7,[sp],#4
 1129              	.LCFI94:
 1130              	 .cfi_restore 7
 1131              	 .cfi_def_cfa_offset 0
 1132 006e 7047     	 bx lr
 1133              	 .cfi_endproc
 1134              	.LFE186:
 1136              	 .text
 1137              	.Letext0:
 1138              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1139              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1140              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 1141              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_scu.h"
 1142              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_ledts.h"
 1143              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 1144              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ledts.c
    {standard input}:20     .text.XMC_LEDTS_InitGlobal:00000000 $t
    {standard input}:25     .text.XMC_LEDTS_InitGlobal:00000000 XMC_LEDTS_InitGlobal
    {standard input}:92     .text.XMC_LEDTS_InitGlobal:00000048 $d
    {standard input}:98     .text.XMC_LEDTS_InitLED:00000000 $t
    {standard input}:103    .text.XMC_LEDTS_InitLED:00000000 XMC_LEDTS_InitLED
    {standard input}:183    .text.XMC_LEDTS_InitTSBasic:00000000 $t
    {standard input}:188    .text.XMC_LEDTS_InitTSBasic:00000000 XMC_LEDTS_InitTSBasic
    {standard input}:271    .text.XMC_LEDTS_InitTSBasic:00000064 $d
    {standard input}:276    .text.XMC_LEDTS_InitTSAdvanced:00000000 $t
    {standard input}:281    .text.XMC_LEDTS_InitTSAdvanced:00000000 XMC_LEDTS_InitTSAdvanced
    {standard input}:379    .text.XMC_LEDTS_InitTSAdvanced:00000080 $d
    {standard input}:384    .text.XMC_LEDTS_StartCounter:00000000 $t
    {standard input}:389    .text.XMC_LEDTS_StartCounter:00000000 XMC_LEDTS_StartCounter
    {standard input}:437    .text.XMC_LEDTS_StopCounter:00000000 $t
    {standard input}:442    .text.XMC_LEDTS_StopCounter:00000000 XMC_LEDTS_StopCounter
    {standard input}:486    .text.XMC_LEDTS_ReadInterruptFlag:00000000 $t
    {standard input}:491    .text.XMC_LEDTS_ReadInterruptFlag:00000000 XMC_LEDTS_ReadInterruptFlag
    {standard input}:531    .text.XMC_LEDTS_SetActivePADNo:00000000 $t
    {standard input}:536    .text.XMC_LEDTS_SetActivePADNo:00000000 XMC_LEDTS_SetActivePADNo
    {standard input}:593    .text.XMC_LEDTS_ClearInterruptFlag:00000000 $t
    {standard input}:598    .text.XMC_LEDTS_ClearInterruptFlag:00000000 XMC_LEDTS_ClearInterruptFlag
    {standard input}:642    .text.XMC_LEDTS_SetLEDLinePattern:00000000 $t
    {standard input}:647    .text.XMC_LEDTS_SetLEDLinePattern:00000000 XMC_LEDTS_SetLEDLinePattern
    {standard input}:732    .text.XMC_LEDTS_SetColumnBrightness:00000000 $t
    {standard input}:737    .text.XMC_LEDTS_SetColumnBrightness:00000000 XMC_LEDTS_SetColumnBrightness
    {standard input}:822    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 $t
    {standard input}:827    .text.XMC_LEDTS_SetCommonOscillationWindow:00000000 XMC_LEDTS_SetCommonOscillationWindow
    {standard input}:886    .text.XMC_LEDTS_ReadFNCOL:00000000 $t
    {standard input}:891    .text.XMC_LEDTS_ReadFNCOL:00000000 XMC_LEDTS_ReadFNCOL
    {standard input}:938    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 $t
    {standard input}:943    .text.XMC_LEDTS_SetNumOfLEDColumns:00000000 XMC_LEDTS_SetNumOfLEDColumns
    {standard input}:1000   .text.XMC_LEDTS_ReadTSVAL:00000000 $t
    {standard input}:1005   .text.XMC_LEDTS_ReadTSVAL:00000000 XMC_LEDTS_ReadTSVAL
    {standard input}:1047   .text.XMC_LEDTS_SetOscillationWindow:00000000 $t
    {standard input}:1052   .text.XMC_LEDTS_SetOscillationWindow:00000000 XMC_LEDTS_SetOscillationWindow
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
