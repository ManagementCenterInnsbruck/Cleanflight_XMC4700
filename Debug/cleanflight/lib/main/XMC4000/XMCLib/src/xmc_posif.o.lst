   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_posif.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_POSIF_Stop,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_POSIF_Stop:
  25              	.LFB171:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_posif.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @file xmc_posif.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @date 2017-06-24
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @cond
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * All rights reserved.                        
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *                                             
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * following conditions are met:   
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *                                                                              
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * disclaimer.                        
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *                                                                              
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *                                                                              
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Change History
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * --------------
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 2015-02-18:
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *     - Initial version
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *      
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 2015-02-20:
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *     - Driver description added <BR>
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 2015-06-19:
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *     - Removed version macros and declaration of GetDriverVersion API <BR> 
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 2015-07-02:
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *     - Updated XMC_POSIF_QD_GetDirection API
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 2016-03-09:
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *     - Optimization of write only registers
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 2017-06-24
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *     - Added posif map connectivity file<br>
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @endcond 
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #ifndef XMC_POSIF_H
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_H
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * HEADER FILES
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #include <xmc_common.h>
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #if defined(POSIF0)
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #include <xmc_scu.h>
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #include "xmc_posif_map.h"
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @addtogroup XMClib XMC Peripheral Library
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @{
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @addtogroup POSIF
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @brief Position Interface Unit (POSIF) driver for the XMC microcontroller family <br>
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * The POSIF unit is a flexible and powerful component for motor control systems that use
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * rotary encoders or hall sensors as feedback loop. It provides interface for motor position and v
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * POSIF unit works with CCU4 and CCU8 to enable position and velocity measurement and to control P
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Driver is divided in three POSIF functional blocks - Hall Sensor Control (POSIF_HSC), Quadrature
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * MultiChannel Mode (POSIF_MCM). <br>
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * POSIF driver features:
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * -#  Configuration structure XMC_POSIF_CONFIG_t and initialization function XMC_POSIF_Init() to c
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * -# Allows to change the operating mode using XMC_POSIF_SetMode()
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * -# Allows the selection of one of the four inputs (A, B, C or D) using XMC_POSIF_SelectInputSour
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * hall0, hall1 and hall2 signals. For quadrature decoder mode, inputs are phase A, phase B and ind
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * -#  Hall Sensor Control (APIs prefixed with XMC_POSIF_HSC_) <br>
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_HSC_CONFIG_t and initialization function XMC_POSIF_HSC_Ini
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 	-  Update current and expected hall pattern in shadow register using XMC_POSIF_HSC_SetHallPatte
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 	- Allows immediate shadow transfer using XMC_POSIF_HSC_UpdateHallPattern()
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * -#  Quadrature Decoder (APIs prefixed with XMC_POSIF_QD_) <br>
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 	-  Configuration structure XMC_POSIF_QD_CONFIG_t and initialization function XMC_POSIF_QD_Init(
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 	-  Get direction of rotation using XMC_POSIF_QD_GetDirection()
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * -#  MultiChannel Mode (APIs prefixed with XMC_POSIF_MCM_) <br>
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *	-  Configuration structure XMC_POSIF_MCM_CONFIG_t and initialization function XMC_POSIF_MCM_Init
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *	-  Update multichannel pattern in shadow register using XMC_POSIF_MCM_SetMultiChannelPattern()
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *	-  Allows immediate shadow transfer using XMC_POSIF_MCM_UpdateMultiChannelPattern()
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * -# User need to call respective init functions to configure POSIF operating mode. e.g to configu
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * call both XMC_POSIF_HSC_Init() and XMC_POSIF_MCM_Init().
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * -# Allows to enable and disable interrupt sources and assign to service request node using XMC_P
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * 
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @note POSIF is not available on XMC11 and XMC12 devices
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @{
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * MACROS
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #if ((UC_SERIES == XMC45) || (UC_SERIES == XMC44) || (UC_SERIES == XMC47) || (UC_SERIES == XMC48) |
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0) || ((PTR)== POSIF1) ) /*< Check for val
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #else
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #define XMC_POSIF_CHECK_MODULE_PTR(PTR)  ( ((PTR)== POSIF0))  /*< Check for valid module pointer */
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #endif
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * ENUMS
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  Defines the return status, to verify the POSIF related API calls. Use type @ref XMC_POSIF_STATU
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_STATUS
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_STATUS_OK = 0U,     /**< API fulfills request */
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_STATUS_ERROR        /**< API cannot fulfill request */
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_STATUS_t;
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines POSIF configurable modes.Use type @ref XMC_POSIF_MODE_t for this enum.
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * The members defines the function selector(FSEL) bitfields of \a PCONF register.
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_MODE
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_HALL_SENSOR = 0U, /**< Hall sensor mode */
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_QD              , /**< Quadrature Decoder mode */
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM             , /**< Standalone Multichannel mode */
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_MODE_MCM_QD           /**< Quadrature Decoder + Standalone Multichannel mode */
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_MODE_t;
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines POSIF configurable input ports.Use type @ref XMC_POSIF_INPUT_PORT_t for this enum.
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * The member defines the respective input selector(INSELX) bitfields of \a PCONF register.
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It selects, which input is used for the phase or Hall input function (depending on the module is
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Quadrature Decoder or Hall Sensor Mode). Same enum can be used to configure pattern update signa
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \a PCONF register's \a MSETS bit field.
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_PORT
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_A = 0U, /**< INPUT-A */
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_B     , /**< INPUT-B */
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_C     , /**< INPUT-C */
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_D     , /**< INPUT-D */
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_E     , /**< INPUT-E */
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_F     , /**< INPUT-F */
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_G     , /**< INPUT-G */
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_PORT_H       /**< INPUT-H */
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_INPUT_PORT_t;
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  Defines active level of an input signal.Use type @ref XMC_POSIF_INPUT_ACTIVE_LEVEL_t for this e
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_INPUT_ACTIVE_LEVEL
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_HIGH  = 0U, /**< Input - Active High */
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_INPUT_ACTIVE_LEVEL_LOW         /**< Input - Active Low */
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_INPUT_ACTIVE_LEVEL_t;
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines POSIF input debounce filter configuration.POSIF inputs are connected to low pass filter 
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * this enum is used to configure low pass filters cut off frequency.
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_FILTER_t for this enum.
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * The member defines the low pass filter configuration(LPC) bitfield of \a PCONF register.
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_FILTER
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_DISABLED     = 0U, /**< No filtering */
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_1_CLOCK_CYCLE    , /**< Filter of 1 Clock Cycle */
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_2_CLOCK_CYCLE    , /**< Filter of 2 Clock Cycles */
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_4_CLOCK_CYCLE    , /**< Filter of 4 Clock Cycles */
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_8_CLOCK_CYCLE    , /**< Filter of 8 Clock Cycles */
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_16_CLOCK_CYCLE   , /**< Filter of 16 Clock Cycles */
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_32_CLOCK_CYCLE   , /**< Filter of 32 Clock Cycles */
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_FILTER_64_CLOCK_CYCLE     /**< Filter of 64 Clock Cycles */
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_FILTER_t;
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines POSIF events.Use type @ref XMC_POSIF_IRQ_EVENT_t for this enum.
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * The member defines available event sources.It is used to configure which event to be used for
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * interrupt generation using \a PFLGE register. [ PFLG,SPFLG,RPFLG]
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_IRQ_EVENT
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CHE                  = 0U, /**< Hall Mode : Correct Hall Event */
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_WHE                  = 1U, /**< Hall Mode : Wrong Hall Event */
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_HALL_INPUT           = 2U, /**< Hall Mode : Hall Input update */
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_MCP_SHADOW_TRANSFER  = 4U, /**< Hall Mode + MCM Mode : MC Pattern shadow tran
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_INDX                 = 8U, /**< Quadrature Mode : Index event detection */
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_ERR                  = 9U, /**< Quadrature Mode : Quadrature Phase Error */
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_CNT                  = 10U, /**< Quadrature Mode : Quadrature Clock event */
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_DIR                  = 11U, /**< Quadrature Mode : Quadrature Direction chang
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_IRQ_EVENT_PCLK                 = 12U  /**< Quadrature Mode : Quadrature period clock ge
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_IRQ_EVENT_t;
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines POSIF service request lines.Use type @ref XMC_POSIF_SR_ID_t for this enum.
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It used to connect POSIF event to required service request line.
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * in \a PFLGE register for interrupt generation.
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_SR_ID
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_SR_ID_0 = 0U, /**< SR-0 */
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_SR_ID_1      /**< SR-1 */
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_SR_ID_t;
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines position decoder mode selection.Use type @ref XMC_POSIF_QD_MODE_t for this enum.
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * The member defines configuration for the operation of the quadrature decoder mode.
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It used to configure \a QDC register.
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_MODE
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_QUADRATURE       = 0U, /**< Standard Quadrature Mode */
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_DIRECTION_COUNT       /**< Direction Count Mode */
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_MODE_t;
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines motor rotation direction.Use type @ref XMC_POSIF_QD_DIR_t for this enum.
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * The member defines the direction in quadrature mode.
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_DIR
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_COUNTERCLOCKWISE  = 0U, /**< Counter Clockwise */
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_DIR_CLOCKWISE              /**< Clockwise */
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_DIR_t;
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines frequency of index signal generation.Use type @ref XMC_POSIF_QD_INDEX_GENERATION_t for t
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Member represents available configuration for index marker generation using \a ICM  bit field in
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_QD_INDEX_GENERATION
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_NEVER  = 0U, /**< Never generate the index marker signal */
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ONCE      , /**< Generate only once after the first revolution */
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_INDEX_GENERATION_ALWAYS      /**< Index marker generated upon every revolution */
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_INDEX_GENERATION_t;
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  Defines trigger edge in hall sensor mode.Use type @ref XMC_POSIF_HSC_TRIGGER_EDGE_t for this en
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  It can be used to configure \a PCONF register's \a SPES and \a MSES bit fields.
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef enum XMC_POSIF_HSC_TRIGGER_EDGE
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_RISING  = 0U, /**< Rising edge */
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_HSC_TRIGGER_EDGE_FALLING      /**< Falling edge */
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_HSC_TRIGGER_EDGE_t;
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * DATA STRUCTURES
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /*Anonymous structure/union guard start*/
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #if defined(__CC_ARM)
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   #pragma push
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   #pragma anon_unions
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #elif defined(__TASKING__)
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   #pragma warning 586
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #endif
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines POSIF peripheral register structure.Use type @ref XMC_POSIF_t for this data structure.
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef POSIF_GLOBAL_TypeDef XMC_POSIF_t;
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  Defines POSIF quadrature decoder initialization data structure.
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_QD_CONFIG_t for this data structure.
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  It used to configure Quadrature mode using \a QDC register.
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_QD_CONFIG
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   XMC_POSIF_QD_MODE_t mode;      /**< Operational Mode of the quadrature encoder and decoder */
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   union
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   {
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     struct
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     {
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t phase_a: 1;       /**< Phase-A active level configuration */
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t phase_b: 1;       /**< Phase-B active level configuration */
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t phase_leader: 1;  /**< Which of the two phase signals[Phase A or Phase B] leads the 
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t : 1;
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t index: 2;        /**< Index signal generation control. Use @ref XMC_POSIF_QD_INDEX_G
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t : 26;
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     };
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     uint32_t qdc;
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   };
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_QD_CONFIG_t;
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines POSIF hall sensor control initialization data structure.
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_HSC_CONFIG_t for this data structure.
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It used to initialize hall sensor mode configuration using \a PCONF register.
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_HSC_CONFIG
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   union
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   {
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     struct
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     {
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t : 4;
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t disable_idle_signal: 1;   /**< Should idle signal be disabled upon wrong hall event?
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t : 11;
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t sampling_trigger: 1;      /**< Of HSDA and HSDB, which one is to be used to trigger 
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t sampling_trigger_edge: 1; /**< Which edge of the sampling trigger signal is to be co
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 	  uint32_t : 6;
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_port: 2;    /**< Of the 4 external error ports, which one is to be co
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_enable: 1;  /**< Should external errors lead to Wrong Hall event? */
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t external_error_level: 1;   /**< What should be the active level of external error si
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t: 4;
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     };
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     uint32_t hall_config;
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   };
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_HSC_CONFIG_t;
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Defines POSIF multi-channel mode initialization data structure.
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Use type @ref XMC_POSIF_MCM_CONFIG_t for this data structure.
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It used to initialize multi channel mode configuration using \a PCONF register.
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_MCM_CONFIG
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   union
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   {
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     struct
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     {
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t : 5;
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_sw_update: 1; /**< should multi channel pattern updated by SW ? */
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t : 12;
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 	  uint32_t pattern_update_trigger: 3; /**< Of the 8 update triggers, which one is to be considered
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t pattern_trigger_edge: 1;  /**< Which edge of the pattern update trigger is to be con
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t pwm_sync: 2;         /**< Of the 4 pwm sync inputs, which one is to be considered? *
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t : 8;
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     };
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     uint32_t mcm_config;
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   };
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** }XMC_POSIF_MCM_CONFIG_t;
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  Defines POSIF module initialization data structure.
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  Use type @ref XMC_POSIF_CONFIG_t for this data structure.
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *  It is used to initialize POSIF module using \a PCONF register.
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** typedef struct XMC_POSIF_CONFIG
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   union
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   {
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     struct
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     {
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t mode: 2;    /**< POSIF Operational mode. Use @ref XMC_POSIF_MODE_t to configure */
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t :6;
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t input0: 2; /**< Choice of input for Input-1 */
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t input1: 2; /**< Choice of input for Input-2 */
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t input2: 2; /**< Choice of input for Input-3 */
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t :14;
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t filter: 3; /**< Input filter configuration */
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****       uint32_t: 1;
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     };
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     uint32_t pconf;
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   };
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** } XMC_POSIF_CONFIG_t;
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /*Anonymous structure/union guard end*/
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #if defined(__CC_ARM)
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   #pragma pop
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #elif defined(__TASKING__)
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   #pragma warning restore
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #endif
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**************************************************************************************************
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * API Prototypes
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  **************************************************************************************************
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #ifdef __cplusplus
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** extern "C" {
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** #endif
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval None
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * De-asserts the POSIF module from reset and enables the clock.\n
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bit field depends upon \a peripheral.
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * If running on other than XMC45 device then it will ungate the peripheral clock.
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * This is the first API which application must invoke to configure POSIF.
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It is internally called by XMC_POSIF_Init().
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Disable(),XMC_POSIF_Init() \n\n\n
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Enable(XMC_POSIF_t *const peripheral);
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval None
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Asserts the POSIF module into reset and disables the clock.\n
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * If running on other than XMC45 device then in addition it will gate the peripheral clock.
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures \a PRCLR0 register's \a POSIF0RS or \a POSIF1RS bitfield depends upon \a peripheral.
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Enable()\n\n\n
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Disable(XMC_POSIF_t *const peripheral);
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module of type @ref XMC_POSIF_t
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to POSIF configuration data(operation mode,input selection and filter conf
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval None
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Initialize POSIF module with \a config.\n
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures POSIF global registers.This is the first API which application must invoke to configu
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It sets up parameters common to all the POSIF modes - hall sensor,quadrature decoder and multi-c
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with mode of operation,input selection and filter configuration.
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init(),XMC_POSIF_MCM_Init() \n\n\n
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** */
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_CONFIG_t * const config);
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to hall sensor control initialization data of type @ref XMC_POSIF_HSC_CONF
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t  Returns @ref XMC_POSIF_STATUS_OK if configured in Hall Sensor Mode
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *                             else return @ref XMC_POSIF_STATUS_ERROR.
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Initializes hall sensor control mode.\n
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with which POSIF input trigger to be used for
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * sampling hall pattern.Configures \a PCONF register for idle signal generation for wrong hall eve
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Hall sensor mode before invocation of t
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_HSC_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_HSC_CONFIG_t *
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns quadrature mode initialization status of type @ref XMC_POSIF_
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Initializes quadrature decoder control mode.\n
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with quadrature mode using @ref XMC_POSIF_QD_MODE_t data structure.
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Initializes \a QDC register with quadrature mode configuration using @ref XMC_POSIF_QD_CONFIG_t 
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It is necessary to have called XMC_POSIF_Init first with Quadrature decoder mode before invocati
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_QD_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_QD_CONFIG_t * c
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param config Pointer to quadrature decoder initialization data
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval XMC_POSIF_STATUS_t Returns multi channel pattern initialization status of type @ref XMC_
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Initializes multi channel mode in Hall mode, standalone multi-channel mode and quadrature with m
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register with multi channel mode using @ref XMC_POSIF_MCM_CONFIG_t data stru
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * It is necessary to call XMC_POSIF_Init first before invocation of this API.
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * For XMC_POSIF_MODE_HALL_SENSOR, it is necessary to have called XMC_POSIF_HSC_Init before invocat
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * For XMC_POSIF_MODE_MCM_QD, it is necessary to have called XMC_POSIF_QD_Init before invocation of
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init(),XMC_POSIF_HSC_Init(),XMC_POSIF_QD_Init() \n\n\n
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** XMC_POSIF_STATUS_t XMC_POSIF_MCM_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_MCM_CONFIG_t *
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param mode POSIF operating mode of type @ref XMC_POSIF_MODE_t
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval None
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures POSIF module for \a mode.\n
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register's a\ FSEL bitfield with \a mode.
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Refer @ref XMC_POSIF_MODE_t for available options.
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * POSIF module should be in stopped state while changing the operating mode.
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Stop() \n\n\n
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_SetMode(XMC_POSIF_t *const peripheral, const XMC_POSIF_MODE_t mode)
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   peripheral->PCONF = ((peripheral->PCONF & ~(uint32_t)(POSIF_PCONF_FSEL_Msk)) |
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****                      (((uint32_t)mode << POSIF_PCONF_FSEL_Pos) & (uint32_t)POSIF_PCONF_FSEL_Msk));
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** }
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param input0 Choice of input for input 0 [0-3]
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param input1 Choice of input for input 1 [0-3]
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param input2 Choice of input for input 2 [0-3]
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval None
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures which input to be connected to POSIF module. \n
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures \a PCONF register's INSEL0,INSEL1,INSEL2 bit fields with source for the input connect
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \a input1, \a input2 respectively.
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures which input is used for the Phase X or Hall input X function depending upon the modul
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * set for Quadrature Decoder or Hall Sensor Mode.
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Init() \n\n\n
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** void XMC_POSIF_SelectInputSource(XMC_POSIF_t *const peripheral, const XMC_POSIF_INPUT_PORT_t input0
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****     const XMC_POSIF_INPUT_PORT_t input1, const XMC_POSIF_INPUT_PORT_t input2);
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval None
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Starts POSIF \a peripheral functional state machine.\n
 548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Starts POSIF state machine for \a peripheral.Configures \a PRUNS register's \a SRB bit field wit
 549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Note</b><br>
 551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Global properties of POSIF along with mode specific properties should have been initialized befo
 552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * FSM.
 553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Stop(),XMC_POSIF_IsRunning() \n\n\n
 556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Start(XMC_POSIF_t *const peripheral)
 558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
 559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   peripheral->PRUNS = (uint32_t)POSIF_PRUNS_SRB_Msk;
 560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** }
 561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** 
 562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** /**
 563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @param peripheral Pointer to an instance of POSIF module
 564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * @retval None
 565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Description</b><br>
 567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Stops POSIF \a peripheral functional state machine.\n
 568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Stop POSIF functional state machine and clears current internal status of the \a peripheral.
 569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * Configures \a PRUNC register's \a CRB bit field with 1.
 570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  *
 571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * \par<b>Related APIs:</b><BR>
 572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  * XMC_POSIF_Start(),XMC_POSIF_IsRunning() \n\n\n
 573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****  */
 574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** __STATIC_INLINE void XMC_POSIF_Stop(XMC_POSIF_t *const peripheral)
 575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** {
  27              	 .loc 1 575 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h ****   peripheral->PRUNC = (uint32_t)(POSIF_PRUNC_CRB_Msk | POSIF_PRUNC_CSM_Msk);
  43              	 .loc 1 576 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DA68     	 ldr r2,[r3,#12]
  46 000c 0022     	 movs r2,#0
  47 000e 42F00302 	 orr r2,r2,#3
  48 0012 DA60     	 str r2,[r3,#12]
 577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_posif.h **** }
  49              	 .loc 1 577 0
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE171:
  65 001e 00BF     	 .section .text.XMC_POSIF_Enable,"ax",%progbits
  66              	 .align 2
  67              	 .global XMC_POSIF_Enable
  68              	 .thumb
  69              	 .thumb_func
  71              	XMC_POSIF_Enable:
  72              	.LFB194:
  73              	 .file 2 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /**
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * @file xmc_posif.c
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * @date 2017-02-25
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  **********************************************************************************
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *   this list of conditions and the following disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * 
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *   and/or other materials provided with the distribution.                       
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * 
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *   may be used to endorse or promote products derived from this software without
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *   specific prior written permission.                                           
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *                                                                              
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *                                                                              
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * dave@infineon.com).                                                          
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  **********************************************************************************
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * Change History
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * --------------
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * 2015-02-18:
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *     - Initial version
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *      
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * 2015-02-20:
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *     - Driver description added <BR>
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * 2015-04-30:
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *     - XMC_POSIF_Enable and XMC_POSIF_Disable APIs updated for POSIF1 peripheral check <BR>
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * 2015-06-19:
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *     - Removed GetDriverVersion API <BR> 
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * 2017-02-25:
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *     - XMC_POSIF_Enable() and XMC_POSIF_Disable() fixed compilation warnings
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * @endcond 
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  *
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  */
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * HEADER FILES
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #include <xmc_posif.h>
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /* POSIF is not available on XMC1100 and XMC1200 */
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(POSIF0)
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #include <xmc_scu.h>
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * MACROS
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #define XMC_POSIF_PCONF_INSEL_Msk        (0x3fUL << POSIF_PCONF_INSEL0_Pos) /*< Mask for input pins
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #define XMC_POSIF_INSEL_MAX              (4U) /*< Maximum possible input selector */
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * LOCAL ROUTINES
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #ifdef XMC_ASSERT_ENABLE
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** __STATIC_INLINE bool XMC_POSIF_IsPeripheralValid(const XMC_POSIF_t *const peripheral)
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** {
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   bool tmp;
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   tmp = (peripheral == POSIF0);
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(POSIF1)  
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   tmp |= (peripheral == POSIF1);
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   return tmp;  
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** }
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /**************************************************************************************************
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * API IMPLEMENTATION
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  **************************************************************************************************
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /* API to enable the POSIF module */
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** void XMC_POSIF_Enable(XMC_POSIF_t *const peripheral)
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** {
  74              	 .loc 2 102 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78 0000 80B5     	 push {r7,lr}
  79              	.LCFI6:
  80              	 .cfi_def_cfa_offset 8
  81              	 .cfi_offset 7,-8
  82              	 .cfi_offset 14,-4
  83 0002 82B0     	 sub sp,sp,#8
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if UC_FAMILY == XMC4
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
  90              	 .loc 2 104 0
  91 0008 1020     	 movs r0,#16
  92 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   if (peripheral == POSIF0)
  93              	 .loc 2 107 0
  94 000e 7B68     	 ldr r3,[r7,#4]
  95 0010 0D4A     	 ldr r2,.L5
  96 0012 9342     	 cmp r3,r2
  97 0014 08D1     	 bne .L3
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF0);
  98              	 .loc 2 110 0
  99 0016 4FF40070 	 mov r0,#512
 100 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF0);
 101              	 .loc 2 113 0
 102 001e 4FF40070 	 mov r0,#512
 103 0022 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 104 0026 0BE0     	 b .L2
 105              	.L3:
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(POSIF1)
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   else if (peripheral == POSIF1)
 106              	 .loc 2 117 0
 107 0028 7B68     	 ldr r3,[r7,#4]
 108 002a 084A     	 ldr r2,.L5+4
 109 002c 9342     	 cmp r3,r2
 110 002e 07D1     	 bne .L2
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF1);
 111              	 .loc 2 120 0
 112 0030 4FF48060 	 mov r0,#1024
 113 0034 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF1);
 114              	 .loc 2 123 0
 115 0038 4FF48060 	 mov r0,#1024
 116 003c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 117              	.L2:
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   else
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     XMC_ASSERT("XMC_POSIF_Disable:Invalid module pointer", 0);
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** }
 118              	 .loc 2 131 0
 119 0040 0837     	 adds r7,r7,#8
 120              	.LCFI9:
 121              	 .cfi_def_cfa_offset 8
 122 0042 BD46     	 mov sp,r7
 123              	.LCFI10:
 124              	 .cfi_def_cfa_register 13
 125              	 
 126 0044 80BD     	 pop {r7,pc}
 127              	.L6:
 128 0046 00BF     	 .align 2
 129              	.L5:
 130 0048 00800240 	 .word 1073905664
 131 004c 00C00240 	 .word 1073922048
 132              	 .cfi_endproc
 133              	.LFE194:
 135              	 .section .text.XMC_POSIF_Disable,"ax",%progbits
 136              	 .align 2
 137              	 .global XMC_POSIF_Disable
 138              	 .thumb
 139              	 .thumb_func
 141              	XMC_POSIF_Disable:
 142              	.LFB195:
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /* API to disable the POSIF module */
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** void XMC_POSIF_Disable(XMC_POSIF_t *const peripheral)
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** {
 143              	 .loc 2 135 0
 144              	 .cfi_startproc
 145              	 
 146              	 
 147 0000 80B5     	 push {r7,lr}
 148              	.LCFI11:
 149              	 .cfi_def_cfa_offset 8
 150              	 .cfi_offset 7,-8
 151              	 .cfi_offset 14,-4
 152 0002 82B0     	 sub sp,sp,#8
 153              	.LCFI12:
 154              	 .cfi_def_cfa_offset 16
 155 0004 00AF     	 add r7,sp,#0
 156              	.LCFI13:
 157              	 .cfi_def_cfa_register 7
 158 0006 7860     	 str r0,[r7,#4]
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   if (peripheral == POSIF0)
 159              	 .loc 2 136 0
 160 0008 7B68     	 ldr r3,[r7,#4]
 161 000a 0D4A     	 ldr r2,.L10
 162 000c 9342     	 cmp r3,r2
 163 000e 08D1     	 bne .L8
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF0);
 164              	 .loc 2 139 0
 165 0010 4FF40070 	 mov r0,#512
 166 0014 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF0);
 167              	 .loc 2 142 0
 168 0018 4FF40070 	 mov r0,#512
 169 001c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 170 0020 0BE0     	 b .L7
 171              	.L8:
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(POSIF1)
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   else if (peripheral == POSIF1)
 172              	 .loc 2 146 0
 173 0022 7B68     	 ldr r3,[r7,#4]
 174 0024 074A     	 ldr r2,.L10+4
 175 0026 9342     	 cmp r3,r2
 176 0028 07D1     	 bne .L7
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_POSIF1);
 177              	 .loc 2 149 0
 178 002a 4FF48060 	 mov r0,#1024
 179 002e FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #if defined(CLOCK_GATING_SUPPORTED)
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_POSIF1);
 180              	 .loc 2 152 0
 181 0032 4FF48060 	 mov r0,#1024
 182 0036 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 183              	.L7:
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** #endif
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   else
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     XMC_ASSERT("XMC_POSIF_Disable:Invalid module pointer", 0);
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** }
 184              	 .loc 2 160 0
 185 003a 0837     	 adds r7,r7,#8
 186              	.LCFI14:
 187              	 .cfi_def_cfa_offset 8
 188 003c BD46     	 mov sp,r7
 189              	.LCFI15:
 190              	 .cfi_def_cfa_register 13
 191              	 
 192 003e 80BD     	 pop {r7,pc}
 193              	.L11:
 194              	 .align 2
 195              	.L10:
 196 0040 00800240 	 .word 1073905664
 197 0044 00C00240 	 .word 1073922048
 198              	 .cfi_endproc
 199              	.LFE195:
 201              	 .section .text.XMC_POSIF_Init,"ax",%progbits
 202              	 .align 2
 203              	 .global XMC_POSIF_Init
 204              	 .thumb
 205              	 .thumb_func
 207              	XMC_POSIF_Init:
 208              	.LFB196:
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /* API to initialize POSIF global resources */
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** void XMC_POSIF_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_CONFIG_t *const config)
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** {
 209              	 .loc 2 164 0
 210              	 .cfi_startproc
 211              	 
 212              	 
 213 0000 80B5     	 push {r7,lr}
 214              	.LCFI16:
 215              	 .cfi_def_cfa_offset 8
 216              	 .cfi_offset 7,-8
 217              	 .cfi_offset 14,-4
 218 0002 82B0     	 sub sp,sp,#8
 219              	.LCFI17:
 220              	 .cfi_def_cfa_offset 16
 221 0004 00AF     	 add r7,sp,#0
 222              	.LCFI18:
 223              	 .cfi_def_cfa_register 7
 224 0006 7860     	 str r0,[r7,#4]
 225 0008 3960     	 str r1,[r7]
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_Init:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peripheral));
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_Init:NULL Pointer", (config != (XMC_POSIF_CONFIG_t *)NULL) );
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   /* Enable the POSIF module */
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_POSIF_Enable(peripheral);
 226              	 .loc 2 169 0
 227 000a 7868     	 ldr r0,[r7,#4]
 228 000c FFF7FEFF 	 bl XMC_POSIF_Enable
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   /* Stop POSIF */
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_POSIF_Stop(peripheral);
 229              	 .loc 2 172 0
 230 0010 7868     	 ldr r0,[r7,#4]
 231 0012 FFF7FEFF 	 bl XMC_POSIF_Stop
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   /* Program the operational mode, input selectors and debounce filter */
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   peripheral->PCONF = config->pconf;
 232              	 .loc 2 175 0
 233 0016 3B68     	 ldr r3,[r7]
 234 0018 1A68     	 ldr r2,[r3]
 235 001a 7B68     	 ldr r3,[r7,#4]
 236 001c 1968     	 ldr r1,[r3]
 237 001e 0021     	 movs r1,#0
 238 0020 0A43     	 orrs r2,r2,r1
 239 0022 1A60     	 str r2,[r3]
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** }
 240              	 .loc 2 176 0
 241 0024 0837     	 adds r7,r7,#8
 242              	.LCFI19:
 243              	 .cfi_def_cfa_offset 8
 244 0026 BD46     	 mov sp,r7
 245              	.LCFI20:
 246              	 .cfi_def_cfa_register 13
 247              	 
 248 0028 80BD     	 pop {r7,pc}
 249              	 .cfi_endproc
 250              	.LFE196:
 252 002a 00BF     	 .section .text.XMC_POSIF_HSC_Init,"ax",%progbits
 253              	 .align 2
 254              	 .global XMC_POSIF_HSC_Init
 255              	 .thumb
 256              	 .thumb_func
 258              	XMC_POSIF_HSC_Init:
 259              	.LFB197:
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /* API to initialize hall sensor interface */
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** XMC_POSIF_STATUS_t XMC_POSIF_HSC_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_HSC_CONFIG_t *
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** {
 260              	 .loc 2 180 0
 261              	 .cfi_startproc
 262              	 
 263              	 
 264              	 
 265 0000 80B4     	 push {r7}
 266              	.LCFI21:
 267              	 .cfi_def_cfa_offset 4
 268              	 .cfi_offset 7,-4
 269 0002 85B0     	 sub sp,sp,#20
 270              	.LCFI22:
 271              	 .cfi_def_cfa_offset 24
 272 0004 00AF     	 add r7,sp,#0
 273              	.LCFI23:
 274              	 .cfi_def_cfa_register 7
 275 0006 7860     	 str r0,[r7,#4]
 276 0008 3960     	 str r1,[r7]
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_POSIF_STATUS_t retval;
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_HSC_Init:Invalid module pointer\n", XMC_POSIF_IsPeripheralValid(peripheral)
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_HSC_Init:NULL Pointer\n", (config != (XMC_POSIF_HSC_CONFIG_t *)NULL) );
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   if (XMC_POSIF_MODE_HALL_SENSOR == (XMC_POSIF_MODE_t)((peripheral->PCONF) & (uint32_t)POSIF_PCONF_
 277              	 .loc 2 186 0
 278 000a 7B68     	 ldr r3,[r7,#4]
 279 000c 1B68     	 ldr r3,[r3]
 280 000e DBB2     	 uxtb r3,r3
 281 0010 03F00303 	 and r3,r3,#3
 282 0014 002B     	 cmp r3,#0
 283 0016 0CD1     	 bne .L14
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     peripheral->PCONF |= config->hall_config;
 284              	 .loc 2 188 0
 285 0018 7B68     	 ldr r3,[r7,#4]
 286 001a 1A68     	 ldr r2,[r3]
 287 001c 3B68     	 ldr r3,[r7]
 288 001e 1B68     	 ldr r3,[r3]
 289 0020 1A43     	 orrs r2,r2,r3
 290 0022 7B68     	 ldr r3,[r7,#4]
 291 0024 1968     	 ldr r1,[r3]
 292 0026 0021     	 movs r1,#0
 293 0028 0A43     	 orrs r2,r2,r1
 294 002a 1A60     	 str r2,[r3]
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_OK;
 295              	 .loc 2 189 0
 296 002c 0023     	 movs r3,#0
 297 002e FB73     	 strb r3,[r7,#15]
 298 0030 01E0     	 b .L15
 299              	.L14:
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   else
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_ERROR;
 300              	 .loc 2 193 0
 301 0032 0123     	 movs r3,#1
 302 0034 FB73     	 strb r3,[r7,#15]
 303              	.L15:
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   return retval;
 304              	 .loc 2 195 0
 305 0036 FB7B     	 ldrb r3,[r7,#15]
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** }
 306              	 .loc 2 196 0
 307 0038 1846     	 mov r0,r3
 308 003a 1437     	 adds r7,r7,#20
 309              	.LCFI24:
 310              	 .cfi_def_cfa_offset 4
 311 003c BD46     	 mov sp,r7
 312              	.LCFI25:
 313              	 .cfi_def_cfa_register 13
 314              	 
 315 003e 5DF8047B 	 ldr r7,[sp],#4
 316              	.LCFI26:
 317              	 .cfi_restore 7
 318              	 .cfi_def_cfa_offset 0
 319 0042 7047     	 bx lr
 320              	 .cfi_endproc
 321              	.LFE197:
 323              	 .section .text.XMC_POSIF_QD_Init,"ax",%progbits
 324              	 .align 2
 325              	 .global XMC_POSIF_QD_Init
 326              	 .thumb
 327              	 .thumb_func
 329              	XMC_POSIF_QD_Init:
 330              	.LFB198:
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /* API to initialize quadrature decoder interface */
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** XMC_POSIF_STATUS_t XMC_POSIF_QD_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_QD_CONFIG_t * c
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** {
 331              	 .loc 2 200 0
 332              	 .cfi_startproc
 333              	 
 334              	 
 335              	 
 336 0000 80B4     	 push {r7}
 337              	.LCFI27:
 338              	 .cfi_def_cfa_offset 4
 339              	 .cfi_offset 7,-4
 340 0002 85B0     	 sub sp,sp,#20
 341              	.LCFI28:
 342              	 .cfi_def_cfa_offset 24
 343 0004 00AF     	 add r7,sp,#0
 344              	.LCFI29:
 345              	 .cfi_def_cfa_register 7
 346 0006 7860     	 str r0,[r7,#4]
 347 0008 3960     	 str r1,[r7]
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   uint8_t reg;
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_POSIF_STATUS_t retval;
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_QD_Init:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peripheral));
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_QD_Init:NULL Pointer", (config != (XMC_POSIF_QD_CONFIG_t *)NULL) );
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   reg = (uint8_t)((peripheral->PCONF) & (uint32_t)POSIF_PCONF_FSEL_Msk);
 348              	 .loc 2 207 0
 349 000a 7B68     	 ldr r3,[r7,#4]
 350 000c 1B68     	 ldr r3,[r3]
 351 000e DBB2     	 uxtb r3,r3
 352 0010 03F00303 	 and r3,r3,#3
 353 0014 BB73     	 strb r3,[r7,#14]
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   if (((uint32_t)XMC_POSIF_MODE_QD == reg) || ((uint32_t)XMC_POSIF_MODE_MCM_QD == reg))
 354              	 .loc 2 208 0
 355 0016 BB7B     	 ldrb r3,[r7,#14]
 356 0018 012B     	 cmp r3,#1
 357 001a 02D0     	 beq .L18
 358              	 .loc 2 208 0 is_stmt 0 discriminator 1
 359 001c BB7B     	 ldrb r3,[r7,#14]
 360 001e 032B     	 cmp r3,#3
 361 0020 15D1     	 bne .L19
 362              	.L18:
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     /* Program the quadrature mode */
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     peripheral->PCONF |= (uint32_t)(config->mode) << POSIF_PCONF_QDCM_Pos;
 363              	 .loc 2 211 0 is_stmt 1
 364 0022 7B68     	 ldr r3,[r7,#4]
 365 0024 1A68     	 ldr r2,[r3]
 366 0026 3B68     	 ldr r3,[r7]
 367 0028 1B78     	 ldrb r3,[r3]
 368 002a 9B00     	 lsls r3,r3,#2
 369 002c 1A43     	 orrs r2,r2,r3
 370 002e 7B68     	 ldr r3,[r7,#4]
 371 0030 1968     	 ldr r1,[r3]
 372 0032 0021     	 movs r1,#0
 373 0034 0A43     	 orrs r2,r2,r1
 374 0036 1A60     	 str r2,[r3]
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     peripheral->QDC = config->qdc;
 375              	 .loc 2 212 0
 376 0038 3B68     	 ldr r3,[r7]
 377 003a D3F80120 	 ldr r2,[r3,#1]
 378 003e 7B68     	 ldr r3,[r7,#4]
 379 0040 196E     	 ldr r1,[r3,#96]
 380 0042 0021     	 movs r1,#0
 381 0044 0A43     	 orrs r2,r2,r1
 382 0046 1A66     	 str r2,[r3,#96]
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_OK;
 383              	 .loc 2 213 0
 384 0048 0023     	 movs r3,#0
 385 004a FB73     	 strb r3,[r7,#15]
 386 004c 01E0     	 b .L20
 387              	.L19:
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   else
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_ERROR;
 388              	 .loc 2 217 0
 389 004e 0123     	 movs r3,#1
 390 0050 FB73     	 strb r3,[r7,#15]
 391              	.L20:
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   return retval;
 392              	 .loc 2 220 0
 393 0052 FB7B     	 ldrb r3,[r7,#15]
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** }
 394              	 .loc 2 221 0
 395 0054 1846     	 mov r0,r3
 396 0056 1437     	 adds r7,r7,#20
 397              	.LCFI30:
 398              	 .cfi_def_cfa_offset 4
 399 0058 BD46     	 mov sp,r7
 400              	.LCFI31:
 401              	 .cfi_def_cfa_register 13
 402              	 
 403 005a 5DF8047B 	 ldr r7,[sp],#4
 404              	.LCFI32:
 405              	 .cfi_restore 7
 406              	 .cfi_def_cfa_offset 0
 407 005e 7047     	 bx lr
 408              	 .cfi_endproc
 409              	.LFE198:
 411              	 .section .text.XMC_POSIF_MCM_Init,"ax",%progbits
 412              	 .align 2
 413              	 .global XMC_POSIF_MCM_Init
 414              	 .thumb
 415              	 .thumb_func
 417              	XMC_POSIF_MCM_Init:
 418              	.LFB199:
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /* API to initialize multi-channel mode.
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  * This is used in Hall mode, standalone multi-channel mode and quadrature with multi-channel mode
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****  */
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** XMC_POSIF_STATUS_t XMC_POSIF_MCM_Init(XMC_POSIF_t *const peripheral, const XMC_POSIF_MCM_CONFIG_t *
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** {
 419              	 .loc 2 227 0
 420              	 .cfi_startproc
 421              	 
 422              	 
 423              	 
 424 0000 80B4     	 push {r7}
 425              	.LCFI33:
 426              	 .cfi_def_cfa_offset 4
 427              	 .cfi_offset 7,-4
 428 0002 85B0     	 sub sp,sp,#20
 429              	.LCFI34:
 430              	 .cfi_def_cfa_offset 24
 431 0004 00AF     	 add r7,sp,#0
 432              	.LCFI35:
 433              	 .cfi_def_cfa_register 7
 434 0006 7860     	 str r0,[r7,#4]
 435 0008 3960     	 str r1,[r7]
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_POSIF_STATUS_t retval;
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_MCM_Init:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peripheral));
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_MCM_Init:NULL Pointer", (config != (XMC_POSIF_MCM_CONFIG_t *)NULL) );
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   if ((XMC_POSIF_MODE_t)((peripheral->PCONF) & (uint32_t)POSIF_PCONF_FSEL_Msk) != XMC_POSIF_MODE_QD
 436              	 .loc 2 233 0
 437 000a 7B68     	 ldr r3,[r7,#4]
 438 000c 1B68     	 ldr r3,[r3]
 439 000e DBB2     	 uxtb r3,r3
 440 0010 03F00303 	 and r3,r3,#3
 441 0014 012B     	 cmp r3,#1
 442 0016 0CD0     	 beq .L23
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     peripheral->PCONF |= config->mcm_config;
 443              	 .loc 2 235 0
 444 0018 7B68     	 ldr r3,[r7,#4]
 445 001a 1A68     	 ldr r2,[r3]
 446 001c 3B68     	 ldr r3,[r7]
 447 001e 1B68     	 ldr r3,[r3]
 448 0020 1A43     	 orrs r2,r2,r3
 449 0022 7B68     	 ldr r3,[r7,#4]
 450 0024 1968     	 ldr r1,[r3]
 451 0026 0021     	 movs r1,#0
 452 0028 0A43     	 orrs r2,r2,r1
 453 002a 1A60     	 str r2,[r3]
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_OK;
 454              	 .loc 2 236 0
 455 002c 0023     	 movs r3,#0
 456 002e FB73     	 strb r3,[r7,#15]
 457 0030 01E0     	 b .L24
 458              	.L23:
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   else
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   {
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     retval = XMC_POSIF_STATUS_ERROR;
 459              	 .loc 2 240 0
 460 0032 0123     	 movs r3,#1
 461 0034 FB73     	 strb r3,[r7,#15]
 462              	.L24:
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   }
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   return retval;
 463              	 .loc 2 242 0
 464 0036 FB7B     	 ldrb r3,[r7,#15]
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** }
 465              	 .loc 2 243 0
 466 0038 1846     	 mov r0,r3
 467 003a 1437     	 adds r7,r7,#20
 468              	.LCFI36:
 469              	 .cfi_def_cfa_offset 4
 470 003c BD46     	 mov sp,r7
 471              	.LCFI37:
 472              	 .cfi_def_cfa_register 13
 473              	 
 474 003e 5DF8047B 	 ldr r7,[sp],#4
 475              	.LCFI38:
 476              	 .cfi_restore 7
 477              	 .cfi_def_cfa_offset 0
 478 0042 7047     	 bx lr
 479              	 .cfi_endproc
 480              	.LFE199:
 482              	 .section .text.XMC_POSIF_SelectInputSource,"ax",%progbits
 483              	 .align 2
 484              	 .global XMC_POSIF_SelectInputSource
 485              	 .thumb
 486              	 .thumb_func
 488              	XMC_POSIF_SelectInputSource:
 489              	.LFB200:
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /* API to configure input source */
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** void XMC_POSIF_SelectInputSource (XMC_POSIF_t *const peripheral, const XMC_POSIF_INPUT_PORT_t input
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****     const XMC_POSIF_INPUT_PORT_t input1, const XMC_POSIF_INPUT_PORT_t input2)
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** {
 490              	 .loc 2 248 0
 491              	 .cfi_startproc
 492              	 
 493              	 
 494              	 
 495 0000 80B4     	 push {r7}
 496              	.LCFI39:
 497              	 .cfi_def_cfa_offset 4
 498              	 .cfi_offset 7,-4
 499 0002 85B0     	 sub sp,sp,#20
 500              	.LCFI40:
 501              	 .cfi_def_cfa_offset 24
 502 0004 00AF     	 add r7,sp,#0
 503              	.LCFI41:
 504              	 .cfi_def_cfa_register 7
 505 0006 7860     	 str r0,[r7,#4]
 506 0008 0846     	 mov r0,r1
 507 000a 1146     	 mov r1,r2
 508 000c 1A46     	 mov r2,r3
 509 000e 0346     	 mov r3,r0
 510 0010 FB70     	 strb r3,[r7,#3]
 511 0012 0B46     	 mov r3,r1
 512 0014 BB70     	 strb r3,[r7,#2]
 513 0016 1346     	 mov r3,r2
 514 0018 7B70     	 strb r3,[r7,#1]
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   uint32_t reg;
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Invalid module pointer", XMC_POSIF_IsPeripheralValid(peri
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Wrong input port input0", (input0 < XMC_POSIF_INSEL_MAX))
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Wrong input port input1", (input1 < XMC_POSIF_INSEL_MAX))
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SelectInputSource:Wrong input port input2", (input2 < XMC_POSIF_INSEL_MAX))
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   reg = (uint32_t)((((uint32_t)input0 << POSIF_PCONF_INSEL0_Pos) & (uint32_t)POSIF_PCONF_INSEL0_Msk
 515              	 .loc 2 255 0
 516 001a FB78     	 ldrb r3,[r7,#3]
 517 001c 1B02     	 lsls r3,r3,#8
 518 001e 03F44072 	 and r2,r3,#768
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****         (((uint32_t)input1 << POSIF_PCONF_INSEL1_Pos) & (uint32_t)POSIF_PCONF_INSEL1_Msk) |
 519              	 .loc 2 256 0
 520 0022 BB78     	 ldrb r3,[r7,#2]
 521 0024 9B02     	 lsls r3,r3,#10
 522 0026 03F44063 	 and r3,r3,#3072
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****         (((uint32_t)input1 << POSIF_PCONF_INSEL1_Pos) & (uint32_t)POSIF_PCONF_INSEL1_Msk) |
 523              	 .loc 2 255 0
 524 002a 1A43     	 orrs r2,r2,r3
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****         (((uint32_t)input2 << POSIF_PCONF_INSEL2_Pos) & (uint32_t)POSIF_PCONF_INSEL2_Msk));
 525              	 .loc 2 257 0
 526 002c 7B78     	 ldrb r3,[r7,#1]
 527 002e 1B03     	 lsls r3,r3,#12
 528 0030 03F44053 	 and r3,r3,#12288
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****         (((uint32_t)input1 << POSIF_PCONF_INSEL1_Pos) & (uint32_t)POSIF_PCONF_INSEL1_Msk) |
 529              	 .loc 2 255 0
 530 0034 1343     	 orrs r3,r3,r2
 531 0036 FB60     	 str r3,[r7,#12]
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   peripheral->PCONF = ((peripheral->PCONF & ~(uint32_t)XMC_POSIF_PCONF_INSEL_Msk) | reg);
 532              	 .loc 2 258 0
 533 0038 7B68     	 ldr r3,[r7,#4]
 534 003a 1B68     	 ldr r3,[r3]
 535 003c 23F47C52 	 bic r2,r3,#16128
 536 0040 FB68     	 ldr r3,[r7,#12]
 537 0042 1A43     	 orrs r2,r2,r3
 538 0044 7B68     	 ldr r3,[r7,#4]
 539 0046 1968     	 ldr r1,[r3]
 540 0048 0021     	 movs r1,#0
 541 004a 0A43     	 orrs r2,r2,r1
 542 004c 1A60     	 str r2,[r3]
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** }
 543              	 .loc 2 259 0
 544 004e 1437     	 adds r7,r7,#20
 545              	.LCFI42:
 546              	 .cfi_def_cfa_offset 4
 547 0050 BD46     	 mov sp,r7
 548              	.LCFI43:
 549              	 .cfi_def_cfa_register 13
 550              	 
 551 0052 5DF8047B 	 ldr r7,[sp],#4
 552              	.LCFI44:
 553              	 .cfi_restore 7
 554              	 .cfi_def_cfa_offset 0
 555 0056 7047     	 bx lr
 556              	 .cfi_endproc
 557              	.LFE200:
 559              	 .section .text.XMC_POSIF_SetInterruptNode,"ax",%progbits
 560              	 .align 2
 561              	 .global XMC_POSIF_SetInterruptNode
 562              	 .thumb
 563              	 .thumb_func
 565              	XMC_POSIF_SetInterruptNode:
 566              	.LFB201:
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** 
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** /* API to select an interrupt node */
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** void XMC_POSIF_SetInterruptNode(XMC_POSIF_t *const peripheral, const XMC_POSIF_IRQ_EVENT_t event, c
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** {
 567              	 .loc 2 263 0
 568              	 .cfi_startproc
 569              	 
 570              	 
 571              	 
 572 0000 80B4     	 push {r7}
 573              	.LCFI45:
 574              	 .cfi_def_cfa_offset 4
 575              	 .cfi_offset 7,-4
 576 0002 85B0     	 sub sp,sp,#20
 577              	.LCFI46:
 578              	 .cfi_def_cfa_offset 24
 579 0004 00AF     	 add r7,sp,#0
 580              	.LCFI47:
 581              	 .cfi_def_cfa_register 7
 582 0006 7860     	 str r0,[r7,#4]
 583 0008 0B46     	 mov r3,r1
 584 000a FB70     	 strb r3,[r7,#3]
 585 000c 1346     	 mov r3,r2
 586 000e BB70     	 strb r3,[r7,#2]
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   uint32_t reg;
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SetInterruptNode:Invalid module pointer", XMC_POSIF_IsPeripheralValid(perip
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SetInterruptNode:Wrong IRQ event", (event <= XMC_POSIF_IRQ_EVENT_PCLK) );
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   XMC_ASSERT("XMC_POSIF_SetInterruptNode:Wrong SR ID", (sr <= XMC_POSIF_SR_ID_1) );
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   reg = peripheral->PFLGE;
 587              	 .loc 2 270 0
 588 0010 7B68     	 ldr r3,[r7,#4]
 589 0012 5B6F     	 ldr r3,[r3,#116]
 590 0014 FB60     	 str r3,[r7,#12]
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   reg &= ~((uint32_t)1 << ((uint32_t)event + (uint32_t)POSIF_PFLGE_CHESEL_Pos));
 591              	 .loc 2 271 0
 592 0016 FB78     	 ldrb r3,[r7,#3]
 593 0018 1033     	 adds r3,r3,#16
 594 001a 1A46     	 mov r2,r3
 595 001c 0123     	 movs r3,#1
 596 001e 9340     	 lsls r3,r3,r2
 597 0020 DB43     	 mvns r3,r3
 598 0022 FA68     	 ldr r2,[r7,#12]
 599 0024 1340     	 ands r3,r3,r2
 600 0026 FB60     	 str r3,[r7,#12]
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   reg |= (uint32_t)sr << ((uint32_t)event + (uint32_t)POSIF_PFLGE_CHESEL_Pos);
 601              	 .loc 2 272 0
 602 0028 BB78     	 ldrb r3,[r7,#2]
 603 002a FA78     	 ldrb r2,[r7,#3]
 604 002c 1032     	 adds r2,r2,#16
 605 002e 9340     	 lsls r3,r3,r2
 606 0030 FA68     	 ldr r2,[r7,#12]
 607 0032 1343     	 orrs r3,r3,r2
 608 0034 FB60     	 str r3,[r7,#12]
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c ****   peripheral->PFLGE = reg;
 609              	 .loc 2 273 0
 610 0036 7B68     	 ldr r3,[r7,#4]
 611 0038 5A6F     	 ldr r2,[r3,#116]
 612 003a 0021     	 movs r1,#0
 613 003c FA68     	 ldr r2,[r7,#12]
 614 003e 0A43     	 orrs r2,r2,r1
 615 0040 5A67     	 str r2,[r3,#116]
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_posif.c **** }
 616              	 .loc 2 274 0
 617 0042 1437     	 adds r7,r7,#20
 618              	.LCFI48:
 619              	 .cfi_def_cfa_offset 4
 620 0044 BD46     	 mov sp,r7
 621              	.LCFI49:
 622              	 .cfi_def_cfa_register 13
 623              	 
 624 0046 5DF8047B 	 ldr r7,[sp],#4
 625              	.LCFI50:
 626              	 .cfi_restore 7
 627              	 .cfi_def_cfa_offset 0
 628 004a 7047     	 bx lr
 629              	 .cfi_endproc
 630              	.LFE201:
 632              	 .text
 633              	.Letext0:
 634              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 635              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 636              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 637              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_scu.h"
 638              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 639              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_posif.c
    {standard input}:20     .text.XMC_POSIF_Stop:00000000 $t
    {standard input}:24     .text.XMC_POSIF_Stop:00000000 XMC_POSIF_Stop
    {standard input}:66     .text.XMC_POSIF_Enable:00000000 $t
    {standard input}:71     .text.XMC_POSIF_Enable:00000000 XMC_POSIF_Enable
    {standard input}:130    .text.XMC_POSIF_Enable:00000048 $d
    {standard input}:136    .text.XMC_POSIF_Disable:00000000 $t
    {standard input}:141    .text.XMC_POSIF_Disable:00000000 XMC_POSIF_Disable
    {standard input}:196    .text.XMC_POSIF_Disable:00000040 $d
    {standard input}:202    .text.XMC_POSIF_Init:00000000 $t
    {standard input}:207    .text.XMC_POSIF_Init:00000000 XMC_POSIF_Init
    {standard input}:253    .text.XMC_POSIF_HSC_Init:00000000 $t
    {standard input}:258    .text.XMC_POSIF_HSC_Init:00000000 XMC_POSIF_HSC_Init
    {standard input}:324    .text.XMC_POSIF_QD_Init:00000000 $t
    {standard input}:329    .text.XMC_POSIF_QD_Init:00000000 XMC_POSIF_QD_Init
    {standard input}:412    .text.XMC_POSIF_MCM_Init:00000000 $t
    {standard input}:417    .text.XMC_POSIF_MCM_Init:00000000 XMC_POSIF_MCM_Init
    {standard input}:483    .text.XMC_POSIF_SelectInputSource:00000000 $t
    {standard input}:488    .text.XMC_POSIF_SelectInputSource:00000000 XMC_POSIF_SelectInputSource
    {standard input}:560    .text.XMC_POSIF_SetInterruptNode:00000000 $t
    {standard input}:565    .text.XMC_POSIF_SetInterruptNode:00000000 XMC_POSIF_SetInterruptNode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_EnableClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
