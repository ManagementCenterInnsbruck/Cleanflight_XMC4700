   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_rtc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_SCU_GetMirrorStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_SCU_GetMirrorStatus:
  25              	.LFB168:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_scu.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @file xmc_scu.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @date 2016-03-09
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @cond
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * All rights reserved.                        
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                                             
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * following conditions are met:   
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                                                                              
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * disclaimer.                        
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                                                                              
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                                                                              
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Change History
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * --------------
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2015-02-20:
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Initial <br>
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2015-05-20:
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - XMC_ASSERT() hanging issues have fixed for XMC4 devices. <br>
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2015-06-20:
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Removed STATIC_INLINE property for the below APIs and declared as void
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_EnableEvent, XMC_SCU_INTERRUPT_DisableEvent,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERRUPT_TriggerEvent, XMC_SCU_INTERUPT_GetEventStatus,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *       XMC_SCU_INTERUPT_ClearEventStatus
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2015-11-30:
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Documentation improved <br>
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *      
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 2016-03-09:
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *     - Optimization of write only registers
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *      
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @endcond 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #ifndef XMC_SCU_H
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #define XMC_SCU_H
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * HEADER FILES
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #include <xmc_common.h>
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @{
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @addtogroup SCU
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @brief System Control Unit(SCU) driver for XMC microcontroller family.
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * System control unit is the SoC power, reset and a clock manager with additional responsibility o
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * providing system stability protection and other auxiliary functions.<br>
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SCU provides the following features,
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Power control
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Hibernate control 
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Reset control
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Clock control
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Miscellaneous control(boot mode, system interrupts etc.)<br><br>
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The SCU driver is divided in to clock control logic, reset control logic, system interrupt contr
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * , hibernate control logic, trap control logic, parity control logic 
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * and miscellaneous control logic.<br>
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clock driver features:
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows clock configuration using the structure XMC_SCU_CLOCK_CONFIG_t and API XMC_SCU_CLOCK_I
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides structure XMC_SCU_CLOCK_SYSPLL_CONFIG_t for configuring the system PLL
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for system PLL, XMC_SCU_CLOCK_GetSystemPllClockSource()
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for configuring different module clock frequencies XMC_SCU_CLOCK_SetWdtClockDiv
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of clock source for external output, XMC_SCU_CLOCK_SetExternalOutputClockSou
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling external high power oscillator and ultra low power oscillator, XMC
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for getting various clock frequencies XMC_SCU_CLOCK_GetPeripheralClockFrequency
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  XMC_SCU_CLOCK_GetCpuClockFrequency(), XMC_SCU_CLOCK_GetSystemClockFrequency()<br>
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC1
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of peripheral clock frequency, XMC_SCU_CLOCK_SetFastPeripheralClockSource()
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides API to get the peripheral clock frequency, XMC_SCU_CLOCK_GetFastPeripheralClockFrequ
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Reset driver features:
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to handle peripheral reset XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_Deasse
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of NMI generation for selected events, XMC_SCU_INTERRUPT_EnableNmiReques
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC1
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger device reset XMC_SCU_RESET_AssertMasterReset()
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to configure multiple sources for reset, XMC_SCU_RESET_EnableResetRequest()
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif <br>
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Interrupt driver features:
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides APIs for enabling/ disabling interrupt event generation XMC_SCU_INTERRUPT_EnableEven
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  XMC_SCU_INTERRUPT_DisableEvent()
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides API for registering callback function for events XMC_SCU_INTERRUPT_SetEventHandler()
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Hibernate driver features:
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of hibernate domain XMC_SCU_HIB_EnableHibernateDomain(), XMC_SCU_HIB_Dis
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of standby clock source, XMC_SCU_HIB_SetStandbyClockSource()
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows selection of RTC clock source, XMC_SCU_HIB_SetRtcClockSource()
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Provides API for enabling slow internal clock used for backup clock, XMC_SCU_HIB_EnableIntern
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Trap driver features:
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of trap XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_GetStatus(), XMC_SCU_TRAP_Trigger
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Parity driver features:
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Parity error generated by on-chip RAM can be monitored, XMC_SCU_PARITY_Enable(), XMC_SCU_PARI
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows configuration of trap generation on detection of parity error, XMC_SCU_PARITY_EnableTr
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Power driver features:
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to power the USB module XMC_SCU_POWER_EnableUsb(), XMC_SCU_POWER_DisableUsb()
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Miscellaneous features:
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows to trigger multiple capture compare unit(CCU) channels to be started together XMC_SCU_
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC4
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of out of range comparator (ORC) XMC_SCU_EnableOutOfRangeComparator()
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_EnableTemperatureSensor(), XMC_SCU_Ca
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of device boot mode XMC_SCU_SetBootMode()<br>
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \if XMC1
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Enables configuration of die temperature sensor XMC_SCU_StartTempMeasurement(), XMC_SCU_SetRa
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows configuring supply monitor unit using the structure XMC_SCU_SUPPLYMONITOR_t and API XM
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * -# Allows handling of protected bits XMC_SCU_LockProtectedBits(), XMC_SCU_UnlockProtectedBits()<
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  \endif
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @{
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * MACROS
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * ENUMS
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *  Defines the status of SCU API execution, used to verify the SCU related API calls.
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** typedef enum XMC_SCU_STATUS 
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_OK   = 0UL, /**< SCU related operation successfully completed.*/
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_ERROR,      /**< SCU related operation failed. When API cannot fulfill request, th
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   XMC_SCU_STATUS_BUSY,       /**< Cannot execute the SCU related operation request because
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****                                   another operation is in progress. \a XMC_SCU_STATUS_BUSY is retur
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****                                   processing another request. */
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** } XMC_SCU_STATUS_t;
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * DATA TYPES
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Function pointer type used for registering callback functions on SCU event occurrence.
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** typedef void (*XMC_SCU_INTERRUPT_EVENT_HANDLER_t)(void);
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * DEVICE EXTENSIONS
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #if (UC_FAMILY == XMC1)
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #include <xmc1_scu.h>
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #elif (UC_FAMILY == XMC4)
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #include <xmc4_scu.h>
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #else
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #error "Unspecified chipset"
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #endif
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**************************************************************************************************
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * API Prototypes
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  **************************************************************************************************
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #ifdef __cplusplus
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** extern "C" {
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #endif
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param trigger    CCU slices to be triggered synchronously via software. The value is a bitmask 
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Generates active edge(low to high) trigger for multiple CCU units at the same time.\n\n
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as active edge.
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerLow()\n\n\n
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerHigh(const uint32_t trigger)
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON |= (uint32_t)trigger;
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param trigger  CCU slices to be triggered synchronously via software. The value is a bitmask of
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    in the register CCUCON. <br>
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_CCU_TRIGGER_t for bitmask of individual CCU s
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    combined using \a OR operation.
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Generates passive edge(high to low) trigger for multiple CCU units at the same time.\n\n
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Before executing this API, all the required CCU timers should configure external start.
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The edge of the start signal should be selected as passive edge.
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The input signal for the CCU slice should be selected as SCU input.
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The above mentioned configurations can be made using the CCU LLD API XMC_CCU4_SLICE_StartConfig(
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * CCU timer slice should be started using XMC_CCU4_SLICE_StartTimer() before triggering 
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the timer using this API.<BR>
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_CCU4_SLICE_StartConfig(), XMC_CCU4_SLICE_SetInput(), XMC_SCU_SetCcuTriggerHigh()\n\n\n
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_SetCcuTriggerLow(const uint32_t trigger)
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   SCU_GENERAL->CCUCON &= (uint32_t)~trigger;
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param config Pointer to structure holding the clock prescaler values and divider values for 
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                configuring clock generators and clock tree.\n
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                \b Range: Configure the members of structure @ref XMC_SCU_CLOCK_CONFIG_t for vari
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                parameters of clock setup.
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Initializes clock generators and clock tree.\n\n
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Peripheral clock and system clock are configured based on the input configuration \a config.
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The system clock frequency is tuned by configuring the FDIV and IDIV values of CLKCR register.
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The values of FDIV and IDIV can be provided as part of input configuration.
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The PCLK divider determines the ratio of peripheral clock to the system clock. 
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The source of RTC clock is set based on the input configuration. 
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \a SystemCoreClock variable will be updated with the value of
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * system clock frequency. Access to protected bit fields are handled internally.
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Enables the high precision oscillator(fOHP) input and configures the system and peripheral clock
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Based on the system clock source selected in \a config, either fPLL or fOFI will be chosen as sy
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Based on PLL mode(normal or prescaler mode) used, PLL ramps up in steps to achieve target freque
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The clock dividers for CPU, CCU and peripheral clocks will be set based on the input configurati
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The \a SystemCoreClock variable is set with the value of system clock frequency.
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GetCpuClockFrequency() \n\n\n
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_Init(const XMC_SCU_CLOCK_CONFIG_t *const config);
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to enable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Enables the generation of interrupt for the input events.\n\n
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The events are enabled by setting the respective bit fields in the SRMSK register. \n
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Note: User should separately enable the NVIC node responsible for handling the SCU interrupt.
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The interrupt will be generated when the respective event occurs.
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERRUPT_DisableEvent()\n\n\n
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_EnableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the event to disable. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Disables generation of interrupt on occurrence of the input event.\n\n
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The events are disabled by resetting the respective bit fields in the SRMSK register. \n
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * NVIC_DisableIRQ(), XMC_SCU_INTERRUPT_EnableEvent()\n\n\n
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_DisableEvent(const XMC_SCU_INTERRUPT_EVENT_t event);
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param event Bit mask of the event to be triggered. \b Range: Use type @ref XMC_SCU_INTERRUPT_EV
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Triggers the event as if the hardware raised it.\n\n
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Event will be triggered by setting the respective bitfield in the SRSET register.\n
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Note: User should enable the NVIC node that handles the respective event for interrupt generatio
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * NVIC_EnableIRQ(), XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_ClearEventStatus() \n\n\n
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_TriggerEvent(const XMC_SCU_INTERRUPT_EVENT_t  event);
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status of the SCU events.
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the status of all SCU events.\n\n
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The status is read from the SRRAW register. To check the status of a particular 
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * event, the returned value should be masked with the bit mask of the event. The bitmask
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * of events can be obtained using the type @ref XMC_SCU_INTERRUPT_EVENT_t. Multiple events'
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * status can be checked by combining the bit masks using \a OR operation. 
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * After detecting the event, the event status should be cleared using software to detect the event
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERRUPT_ClearEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent(), XMC_SCU_INTERRUPT_SetEve
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** XMC_SCU_INTERRUPT_EVENT_t XMC_SCU_INTERUPT_GetEventStatus(void);
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param event  Bit mask of the events to clear. \b Range: Use type @ref XMC_SCU_INTERRUPT_EVENT_t
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                for providing the input value. Multiple events can be combined using the \a OR op
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clears the event status bit in SRRAW register.\n\n
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The events are cleared by writing value 1 to their bit positions in the SRCLR register.
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The API can be used when polling method is used. After detecting the event, the event status
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * should be cleared using software to detect the event again.
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_INTERUPT_GetEventStatus(), XMC_SCU_INTERRUPT_TriggerEvent() \n\n\n
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_INTERRUPT_ClearEventStatus(const XMC_SCU_INTERRUPT_EVENT_t event);
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Status representing the reason for device reset.
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the value representing the reason for device reset.\n\n
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The return value is an encoded word, which can indicate multiple reasons for the last reset. Eac
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * returned word is representative of a last reset cause. The returned value should be appropriatel
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the cause of reset. 
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The cause of the last reset gets automatically stored in 
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the \a SCU_RSTSTAT register. The reset status shall be reset after each
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * startup in order to ensure consistent source indication after the next reset.
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \b Range: The type @ref XMC_SCU_RESET_REASON_t can be used to get the bit masks of the reset cau
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_ClearDeviceResetReason() \n\n\n
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_RESET_GetDeviceResetReason(void)
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   return ((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None 
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clears the reset reason bits in the reset status register. \n\n
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clearing of the reset status information in the \a SCU_RSTSTAT register via register bit \a RSTC
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * recommended to ensure a clear indication of the cause of next reset.
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_RESET_GetDeviceResetReason() \n\n\n
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE void XMC_SCU_RESET_ClearDeviceResetReason(void)
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   /* Clear RSTSTAT.RSTSTAT bitfield */
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   SCU_RESET->RSTCLR = (uint32_t)SCU_RESET_RSTCLR_RSCLR_Msk;
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of CPU clock frequency.
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of CPU clock frequency.\n\n
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The value is stored in a global variable \a \b SystemCoreClock.
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * It is updated when the clock configuration is done using the SCU LLD APIs.
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The value represents the frequency of clock used for CPU operation.
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \b Range: Value is of type uint32_t, and gives the value of frequency in Hertz.
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockFrequency(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockFrequency(void)
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   return SystemCoreClock;
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return uint32_t  Value of peripheral clock frequency in Hertz.
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the vlaue of clock frequency at which the peripherals are working.\n\n
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The value is derived from the CPU frequency. \b Range: Value is of type uint32_t. It is represen
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockFrequency(),XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** uint32_t XMC_SCU_CLOCK_GetPeripheralClockFrequency(void); 
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #if(UC_SERIES != XMC45)
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param  peripheral The peripheral for which the clock has to be gated. \b Range: Use type @ref X
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral clock to be gated.
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Blocks the supply of clock to the selected peripheral.\n\n
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Clock gating helps in reducing the power consumption. User can selectively gate the clocks of un
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling the \a SCU_CGAT
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * register bit field. Every bit in \a SCU_CGATSET0 register is protected by the bit protection sch
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * bit fields are handled internally.
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate. Such a
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * the clock supply for the selected peripheral.
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Software can request for individual gating of such peripheral clocks by enabling one of the \a
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SCU_CGATSET0, \a SCU_CGATSET1 or \a SCU_CGATSET2 register bitfields.
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * 
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Note: Clock gating shall not be activated unless the module is in reset state. So use \a
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated() API before enabling the gating of any peripheral.
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_UngatePeripheralClock() \n\n\n
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_GatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the clock has to be ungated. \b Range: Use type @re
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    to identify the peripheral.
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return None
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Enables the supply of clock to the selected peripheral.\n\n
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * By default when the device powers on, the peripheral clock will be gated for the 
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * peripherals that support clock gating.
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The peripheral clock should be enabled before using it for any functionality.
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * fPCLK is the source of clock to various peripherals. Some peripherals support clock gate.
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting respective bit
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * in the \a SCU_CGATCLR0 register.
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * fPERI is the source of clock to various peripherals. Some peripherals support clock gate.
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Software can request for individual ungating of such peripheral clocks by setting the respective
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * SCU_CGATCLR0, \a SCU_CGATCLR1 or \a SCU_CGATCLR2 registers.
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_IsPeripheralClockGated(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** void XMC_SCU_CLOCK_UngatePeripheralClock(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @param  peripheral  The peripheral for which the check for clock gating has to be done. 
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use type @ref XMC_SCU_PERIPHERAL_CLOCK_t to identify the peripheral
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return bool Status of the peripheral clock gating. \b Range: true if the peripheral clock is ga
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *              false if the peripheral clock ungated(gate de-asserted).
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Gives the status of peripheral clock gating.\n\n
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC1
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using the register CGATSTAT0.
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \if XMC4
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Checks the status of peripheral clock gating using one of CGATSTAT0, CGATSTAT1 or CGATSTAT2 regi
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \endif
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * It is recommended to use this API before
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * enabling the gating of any peripherals through \a XMC_SCU_CLOCK_GatePeripheralClock() API.
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Related APIs:</b><BR>
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * XMC_SCU_CLOCK_UngatePeripheralClock(), XMC_SCU_CLOCK_GatePeripheralClock() \n\n\n
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** bool XMC_SCU_CLOCK_IsPeripheralClockGated(const XMC_SCU_PERIPHERAL_CLOCK_t peripheral);
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** #endif
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** 
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** /**
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * @return  uint32_t  Status of the register mirror update.\n
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    \b Range: Use the bit mask of the SCU_GENERAL_MIRRSTS register for the mirror
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    interest. e.g.: SCU_GENERAL_MIRRSTS_RTC_CTR_Msk. Multiple update events can b
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *                    using \a OR operation.
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  *
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * \par<b>Description</b><br>
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Provides the status of hibernate domain register update, when the respective mirror registers ar
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * The hibernate domain is connected to the core domain via SPI serial communication. MIRRSTS is a 
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * representing the communication of changed value of a mirror register to its corresponding regist
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * hibernate domain. The bit fields of the register indicate
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * that a corresponding register of the hibernate domain is ready to accept a write or that the com
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * is busy with executing the previous operation.\n
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  * Note: There is no hibernate domain in XMC1x devices. This register is retained for legacy purpos
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****  */
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_GetMirrorStatus(void)
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** {
  27              	 .loc 1 544 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h ****   return(SCU_GENERAL->MIRRSTS);
  39              	 .loc 1 545 0
  40 0004 034B     	 ldr r3,.L3
  41 0006 D3F8C430 	 ldr r3,[r3,#196]
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_scu.h **** }
  42              	 .loc 1 546 0
  43 000a 1846     	 mov r0,r3
  44 000c BD46     	 mov sp,r7
  45              	.LCFI2:
  46              	 .cfi_def_cfa_register 13
  47              	 
  48 000e 5DF8047B 	 ldr r7,[sp],#4
  49              	.LCFI3:
  50              	 .cfi_restore 7
  51              	 .cfi_def_cfa_offset 0
  52 0012 7047     	 bx lr
  53              	.L4:
  54              	 .align 2
  55              	.L3:
  56 0014 00400050 	 .word 1342193664
  57              	 .cfi_endproc
  58              	.LFE168:
  60              	 .section .text.XMC_RTC_Start,"ax",%progbits
  61              	 .align 2
  62              	 .global XMC_RTC_Start
  63              	 .thumb
  64              	 .thumb_func
  66              	XMC_RTC_Start:
  67              	.LFB171:
  68              	 .file 2 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /**
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * @file xmc_rtc.c
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * @date 2018-06-21
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * 
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * 
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * products derived from this software without specific prior written permission.                  
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *                                                                              
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *                                                                              
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Change History
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * --------------
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * 2015-02-20:
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *     - Initial <br>
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *      
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * 2015-06-20:
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *     - Removed GetDriverVersion API
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * 
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * 2016-05-19:
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *     - Added XMC_RTC_SetTimeStdFormat() and XMC_RTC_SetAlarmStdFormat()
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * 2018-06-21:
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *     - Fixed value of XMC_RTC_MAXSECONDS, XMC_RTC_MAXMINUTES, XMC_RTC_MAXHOURS macros
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *     - Fixed assertion on XMC_RTC_MAXDAYS
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * @endcond 
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /**
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * @brief RTC driver for XMC microcontroller family.
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  *
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * HEADER FILES
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #include "xmc_scu.h"
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #include "xmc_rtc.h"
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * MACROS
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXSECONDS  (60U)   /**< RTC time : Maximum seconds */
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMINUTES  (60U)   /**< RTC time : Maximum minutes */
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXHOURS    (24U)   /**< RTC time : Maximum hours */
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYS     (31U)   /**< RTC time : Maximum days */
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXDAYSOFWEEK  (7U) /**< RTC time : Maximum days of week */
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXMONTH  (12U)     /**< RTC time : Maximum month */
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXYEAR  (0xFFFFU)  /**< RTC time : Maximum year */
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_MAXPRESCALER  (0xFFFFU)  /**< RTC time : Maximum prescaler */
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_YEAR_OFFSET (1900U)      /**< RTC year offset : Year offset */
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC4)
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (1U)
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #endif
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #if (UC_FAMILY == XMC1)
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #define XMC_RTC_INIT_SEQUENCE  (0U)
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** #endif
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /**************************************************************************************************
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * API IMPLEMENTATION
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  **************************************************************************************************
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Enables RTC peripheral to start counting time
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Start(void)
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
  69              	 .loc 2 98 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73 0000 80B5     	 push {r7,lr}
  74              	.LCFI4:
  75              	 .cfi_def_cfa_offset 8
  76              	 .cfi_offset 7,-8
  77              	 .cfi_offset 14,-4
  78 0002 00AF     	 add r7,sp,#0
  79              	.LCFI5:
  80              	 .cfi_def_cfa_register 7
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
  81              	 .loc 2 99 0
  82 0004 00BF     	 nop
  83              	.L6:
  84              	 .loc 2 99 0 is_stmt 0 discriminator 1
  85 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
  86 000a 0346     	 mov r3,r0
  87 000c 03F48073 	 and r3,r3,#256
  88 0010 002B     	 cmp r3,#0
  89 0012 F8D1     	 bne .L6
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   {
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   }
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   RTC->CTR |= (uint32_t)RTC_CTR_ENB_Msk;
  90              	 .loc 2 103 0 is_stmt 1
  91 0014 044B     	 ldr r3,.L7
  92 0016 044A     	 ldr r2,.L7
  93 0018 5268     	 ldr r2,[r2,#4]
  94 001a 42F00102 	 orr r2,r2,#1
  95 001e 5968     	 ldr r1,[r3,#4]
  96 0020 0021     	 movs r1,#0
  97 0022 0A43     	 orrs r2,r2,r1
  98 0024 5A60     	 str r2,[r3,#4]
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
  99              	 .loc 2 104 0
 100 0026 80BD     	 pop {r7,pc}
 101              	.L8:
 102              	 .align 2
 103              	.L7:
 104 0028 004A0050 	 .word 1342196224
 105              	 .cfi_endproc
 106              	.LFE171:
 108              	 .section .text.XMC_RTC_Stop,"ax",%progbits
 109              	 .align 2
 110              	 .global XMC_RTC_Stop
 111              	 .thumb
 112              	 .thumb_func
 114              	XMC_RTC_Stop:
 115              	.LFB172:
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Disables RTC peripheral to start counting time
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_Stop(void)
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 116              	 .loc 2 110 0
 117              	 .cfi_startproc
 118              	 
 119              	 
 120 0000 80B5     	 push {r7,lr}
 121              	.LCFI6:
 122              	 .cfi_def_cfa_offset 8
 123              	 .cfi_offset 7,-8
 124              	 .cfi_offset 14,-4
 125 0002 00AF     	 add r7,sp,#0
 126              	.LCFI7:
 127              	 .cfi_def_cfa_register 7
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 128              	 .loc 2 111 0
 129 0004 00BF     	 nop
 130              	.L10:
 131              	 .loc 2 111 0 is_stmt 0 discriminator 1
 132 0006 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 133 000a 0346     	 mov r3,r0
 134 000c 03F48073 	 and r3,r3,#256
 135 0010 002B     	 cmp r3,#0
 136 0012 F8D1     	 bne .L10
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   {
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   }
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   RTC->CTR &= ~(uint32_t)RTC_CTR_ENB_Msk;
 137              	 .loc 2 115 0 is_stmt 1
 138 0014 044B     	 ldr r3,.L11
 139 0016 044A     	 ldr r2,.L11
 140 0018 5268     	 ldr r2,[r2,#4]
 141 001a 22F00102 	 bic r2,r2,#1
 142 001e 5968     	 ldr r1,[r3,#4]
 143 0020 0021     	 movs r1,#0
 144 0022 0A43     	 orrs r2,r2,r1
 145 0024 5A60     	 str r2,[r3,#4]
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 146              	 .loc 2 116 0
 147 0026 80BD     	 pop {r7,pc}
 148              	.L12:
 149              	 .align 2
 150              	.L11:
 151 0028 004A0050 	 .word 1342196224
 152              	 .cfi_endproc
 153              	.LFE172:
 155              	 .section .text.XMC_RTC_SetPrescaler,"ax",%progbits
 156              	 .align 2
 157              	 .global XMC_RTC_SetPrescaler
 158              	 .thumb
 159              	 .thumb_func
 161              	XMC_RTC_SetPrescaler:
 162              	.LFB173:
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module prescaler value
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetPrescaler(uint16_t prescaler)
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 163              	 .loc 2 122 0
 164              	 .cfi_startproc
 165              	 
 166              	 
 167 0000 80B5     	 push {r7,lr}
 168              	.LCFI8:
 169              	 .cfi_def_cfa_offset 8
 170              	 .cfi_offset 7,-8
 171              	 .cfi_offset 14,-4
 172 0002 82B0     	 sub sp,sp,#8
 173              	.LCFI9:
 174              	 .cfi_def_cfa_offset 16
 175 0004 00AF     	 add r7,sp,#0
 176              	.LCFI10:
 177              	 .cfi_def_cfa_register 7
 178 0006 0346     	 mov r3,r0
 179 0008 FB80     	 strh r3,[r7,#6]
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetPrescaler:Wrong prescaler value", (prescaler < XMC_RTC_MAXPRESCALER));
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   while((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_CTR_Msk) != 0U)
 180              	 .loc 2 125 0
 181 000a 00BF     	 nop
 182              	.L14:
 183              	 .loc 2 125 0 is_stmt 0 discriminator 1
 184 000c FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 185 0010 0346     	 mov r3,r0
 186 0012 03F48073 	 and r3,r3,#256
 187 0016 002B     	 cmp r3,#0
 188 0018 F8D1     	 bne .L14
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   {
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   }
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   RTC->CTR = (RTC->CTR & ~(uint32_t)RTC_CTR_DIV_Msk) |
 189              	 .loc 2 129 0 is_stmt 1
 190 001a 074B     	 ldr r3,.L15
 191 001c 064A     	 ldr r2,.L15
 192 001e 5268     	 ldr r2,[r2,#4]
 193 0020 91B2     	 uxth r1,r2
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 194              	 .loc 2 130 0
 195 0022 FA88     	 ldrh r2,[r7,#6]
 196 0024 1204     	 lsls r2,r2,#16
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****              ((uint32_t)prescaler << (uint32_t)RTC_CTR_DIV_Pos);
 197              	 .loc 2 129 0
 198 0026 0A43     	 orrs r2,r2,r1
 199 0028 5968     	 ldr r1,[r3,#4]
 200 002a 0021     	 movs r1,#0
 201 002c 0A43     	 orrs r2,r2,r1
 202 002e 5A60     	 str r2,[r3,#4]
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 203              	 .loc 2 131 0
 204 0030 0837     	 adds r7,r7,#8
 205              	.LCFI11:
 206              	 .cfi_def_cfa_offset 8
 207 0032 BD46     	 mov sp,r7
 208              	.LCFI12:
 209              	 .cfi_def_cfa_register 13
 210              	 
 211 0034 80BD     	 pop {r7,pc}
 212              	.L16:
 213 0036 00BF     	 .align 2
 214              	.L15:
 215 0038 004A0050 	 .word 1342196224
 216              	 .cfi_endproc
 217              	.LFE173:
 219              	 .section .text.XMC_RTC_SetTime,"ax",%progbits
 220              	 .align 2
 221              	 .global XMC_RTC_SetTime
 222              	 .thumb
 223              	 .thumb_func
 225              	XMC_RTC_SetTime:
 226              	.LFB174:
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Sets the RTC_TIM0, RTC_TIM1 registers with time values
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTime(const XMC_RTC_TIME_t *const time)
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 227              	 .loc 2 137 0
 228              	 .cfi_startproc
 229              	 
 230              	 
 231 0000 80B5     	 push {r7,lr}
 232              	.LCFI13:
 233              	 .cfi_def_cfa_offset 8
 234              	 .cfi_offset 7,-8
 235              	 .cfi_offset 14,-4
 236 0002 82B0     	 sub sp,sp,#8
 237              	.LCFI14:
 238              	 .cfi_def_cfa_offset 16
 239 0004 00AF     	 add r7,sp,#0
 240              	.LCFI15:
 241              	 .cfi_def_cfa_register 7
 242 0006 7860     	 str r0,[r7,#4]
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong seconds value", ((uint32_t)time->seconds < XMC_RTC_MAXSECONDS))
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong minutes value", ((uint32_t)time->minutes < XMC_RTC_MAXMINUTES))
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong hours value", ((uint32_t)time->hours < XMC_RTC_MAXHOURS));
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month day value", ((uint32_t)time->days <= XMC_RTC_MAXDAYS));
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong week day value", ((uint32_t)time->daysofweek < XMC_RTC_MAXDAYSO
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong month value", ((uint32_t)time->month < XMC_RTC_MAXMONTH));
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetTime:Wrong year value", ((uint32_t)time->year < XMC_RTC_MAXYEAR));
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk) != 0U)
 243              	 .loc 2 147 0
 244 0008 00BF     	 nop
 245              	.L18:
 246              	 .loc 2 147 0 is_stmt 0 discriminator 1
 247 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 248 000e 0346     	 mov r3,r0
 249 0010 03F40063 	 and r3,r3,#2048
 250 0014 002B     	 cmp r3,#0
 251 0016 F8D1     	 bne .L18
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       { 
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****          /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       }
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 252              	 .loc 2 151 0 is_stmt 1
 253 0018 0C4B     	 ldr r3,.L20
 254 001a 7A68     	 ldr r2,[r7,#4]
 255 001c 1268     	 ldr r2,[r2]
 256 001e 196A     	 ldr r1,[r3,#32]
 257 0020 0021     	 movs r1,#0
 258 0022 0A43     	 orrs r2,r2,r1
 259 0024 1A62     	 str r2,[r3,#32]
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_TIM1_Msk) != 0U)
 260              	 .loc 2 153 0
 261 0026 00BF     	 nop
 262              	.L19:
 263              	 .loc 2 153 0 is_stmt 0 discriminator 1
 264 0028 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 265 002c 0346     	 mov r3,r0
 266 002e 03F48053 	 and r3,r3,#4096
 267 0032 002B     	 cmp r3,#0
 268 0034 F8D1     	 bne .L19
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       {
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       }
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	     
 269              	 .loc 2 157 0 is_stmt 1
 270 0036 054B     	 ldr r3,.L20
 271 0038 7A68     	 ldr r2,[r7,#4]
 272 003a 5268     	 ldr r2,[r2,#4]
 273 003c 596A     	 ldr r1,[r3,#36]
 274 003e 0021     	 movs r1,#0
 275 0040 0A43     	 orrs r2,r2,r1
 276 0042 5A62     	 str r2,[r3,#36]
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   #endif
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_TIM0_Msk | SCU_GENERAL_MIRRSTS_R
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       {
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       }
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       RTC->TIM0 = time->raw0;
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       RTC->TIM1 = time->raw1;	; 
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   #endif  
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 277              	 .loc 2 167 0
 278 0044 0837     	 adds r7,r7,#8
 279              	.LCFI16:
 280              	 .cfi_def_cfa_offset 8
 281 0046 BD46     	 mov sp,r7
 282              	.LCFI17:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 0048 80BD     	 pop {r7,pc}
 286              	.L21:
 287 004a 00BF     	 .align 2
 288              	.L20:
 289 004c 004A0050 	 .word 1342196224
 290              	 .cfi_endproc
 291              	.LFE174:
 293              	 .section .text.XMC_RTC_GetTime,"ax",%progbits
 294              	 .align 2
 295              	 .global XMC_RTC_GetTime
 296              	 .thumb
 297              	 .thumb_func
 299              	XMC_RTC_GetTime:
 300              	.LFB175:
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time value
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTime(XMC_RTC_TIME_t *const time)
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 301              	 .loc 2 173 0
 302              	 .cfi_startproc
 303              	 
 304              	 
 305              	 
 306 0000 80B4     	 push {r7}
 307              	.LCFI18:
 308              	 .cfi_def_cfa_offset 4
 309              	 .cfi_offset 7,-4
 310 0002 83B0     	 sub sp,sp,#12
 311              	.LCFI19:
 312              	 .cfi_def_cfa_offset 16
 313 0004 00AF     	 add r7,sp,#0
 314              	.LCFI20:
 315              	 .cfi_def_cfa_register 7
 316 0006 7860     	 str r0,[r7,#4]
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time->raw0 = RTC->TIM0;
 317              	 .loc 2 174 0
 318 0008 064B     	 ldr r3,.L23
 319 000a 1A6A     	 ldr r2,[r3,#32]
 320 000c 7B68     	 ldr r3,[r7,#4]
 321 000e 1A60     	 str r2,[r3]
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time->raw1 = RTC->TIM1;
 322              	 .loc 2 175 0
 323 0010 044B     	 ldr r3,.L23
 324 0012 5A6A     	 ldr r2,[r3,#36]
 325 0014 7B68     	 ldr r3,[r7,#4]
 326 0016 5A60     	 str r2,[r3,#4]
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 327              	 .loc 2 176 0
 328 0018 0C37     	 adds r7,r7,#12
 329              	.LCFI21:
 330              	 .cfi_def_cfa_offset 4
 331 001a BD46     	 mov sp,r7
 332              	.LCFI22:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 001c 5DF8047B 	 ldr r7,[sp],#4
 336              	.LCFI23:
 337              	 .cfi_restore 7
 338              	 .cfi_def_cfa_offset 0
 339 0020 7047     	 bx lr
 340              	.L24:
 341 0022 00BF     	 .align 2
 342              	.L23:
 343 0024 004A0050 	 .word 1342196224
 344              	 .cfi_endproc
 345              	.LFE175:
 347              	 .section .text.XMC_RTC_SetTimeStdFormat,"ax",%progbits
 348              	 .align 2
 349              	 .global XMC_RTC_SetTimeStdFormat
 350              	 .thumb
 351              	 .thumb_func
 353              	XMC_RTC_SetTimeStdFormat:
 354              	.LFB176:
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module time values in standard format
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetTimeStdFormat(const struct tm *const stdtime)
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 355              	 .loc 2 182 0
 356              	 .cfi_startproc
 357              	 
 358              	 
 359 0000 80B5     	 push {r7,lr}
 360              	.LCFI24:
 361              	 .cfi_def_cfa_offset 8
 362              	 .cfi_offset 7,-8
 363              	 .cfi_offset 14,-4
 364 0002 84B0     	 sub sp,sp,#16
 365              	.LCFI25:
 366              	 .cfi_def_cfa_offset 24
 367 0004 00AF     	 add r7,sp,#0
 368              	.LCFI26:
 369              	 .cfi_def_cfa_register 7
 370 0006 7860     	 str r0,[r7,#4]
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time.seconds = stdtime->tm_sec;
 371              	 .loc 2 186 0
 372 0008 7B68     	 ldr r3,[r7,#4]
 373 000a 1B68     	 ldr r3,[r3]
 374 000c DBB2     	 uxtb r3,r3
 375 000e 03F03F03 	 and r3,r3,#63
 376 0012 DAB2     	 uxtb r2,r3
 377 0014 3B7A     	 ldrb r3,[r7,#8]
 378 0016 62F30503 	 bfi r3,r2,#0,#6
 379 001a 3B72     	 strb r3,[r7,#8]
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time.minutes = stdtime->tm_min;
 380              	 .loc 2 187 0
 381 001c 7B68     	 ldr r3,[r7,#4]
 382 001e 5B68     	 ldr r3,[r3,#4]
 383 0020 DBB2     	 uxtb r3,r3
 384 0022 03F03F03 	 and r3,r3,#63
 385 0026 DAB2     	 uxtb r2,r3
 386 0028 7B7A     	 ldrb r3,[r7,#9]
 387 002a 62F30503 	 bfi r3,r2,#0,#6
 388 002e 7B72     	 strb r3,[r7,#9]
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time.hours = stdtime->tm_hour;
 389              	 .loc 2 188 0
 390 0030 7B68     	 ldr r3,[r7,#4]
 391 0032 9B68     	 ldr r3,[r3,#8]
 392 0034 DBB2     	 uxtb r3,r3
 393 0036 03F01F03 	 and r3,r3,#31
 394 003a DAB2     	 uxtb r2,r3
 395 003c BB7A     	 ldrb r3,[r7,#10]
 396 003e 62F30403 	 bfi r3,r2,#0,#5
 397 0042 BB72     	 strb r3,[r7,#10]
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time.days = stdtime->tm_mday - 1;
 398              	 .loc 2 189 0
 399 0044 7B68     	 ldr r3,[r7,#4]
 400 0046 DB68     	 ldr r3,[r3,#12]
 401 0048 DBB2     	 uxtb r3,r3
 402 004a 013B     	 subs r3,r3,#1
 403 004c DBB2     	 uxtb r3,r3
 404 004e 03F01F03 	 and r3,r3,#31
 405 0052 DAB2     	 uxtb r2,r3
 406 0054 FB7A     	 ldrb r3,[r7,#11]
 407 0056 62F30403 	 bfi r3,r2,#0,#5
 408 005a FB72     	 strb r3,[r7,#11]
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time.month = stdtime->tm_mon;
 409              	 .loc 2 190 0
 410 005c 7B68     	 ldr r3,[r7,#4]
 411 005e 1B69     	 ldr r3,[r3,#16]
 412 0060 DBB2     	 uxtb r3,r3
 413 0062 03F00F03 	 and r3,r3,#15
 414 0066 DAB2     	 uxtb r2,r3
 415 0068 7B7B     	 ldrb r3,[r7,#13]
 416 006a 62F30303 	 bfi r3,r2,#0,#4
 417 006e 7B73     	 strb r3,[r7,#13]
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 418              	 .loc 2 191 0
 419 0070 7B68     	 ldr r3,[r7,#4]
 420 0072 5B69     	 ldr r3,[r3,#20]
 421 0074 9BB2     	 uxth r3,r3
 422 0076 03F26C73 	 addw r3,r3,#1900
 423 007a 9BB2     	 uxth r3,r3
 424 007c FB81     	 strh r3,[r7,#14]
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time.daysofweek = stdtime->tm_wday;
 425              	 .loc 2 192 0
 426 007e 7B68     	 ldr r3,[r7,#4]
 427 0080 9B69     	 ldr r3,[r3,#24]
 428 0082 DBB2     	 uxtb r3,r3
 429 0084 03F00703 	 and r3,r3,#7
 430 0088 DAB2     	 uxtb r2,r3
 431 008a 3B7B     	 ldrb r3,[r7,#12]
 432 008c 62F30203 	 bfi r3,r2,#0,#3
 433 0090 3B73     	 strb r3,[r7,#12]
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetTime(&time);
 434              	 .loc 2 194 0
 435 0092 07F10803 	 add r3,r7,#8
 436 0096 1846     	 mov r0,r3
 437 0098 FFF7FEFF 	 bl XMC_RTC_SetTime
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 438              	 .loc 2 195 0
 439 009c 1037     	 adds r7,r7,#16
 440              	.LCFI27:
 441              	 .cfi_def_cfa_offset 8
 442 009e BD46     	 mov sp,r7
 443              	.LCFI28:
 444              	 .cfi_def_cfa_register 13
 445              	 
 446 00a0 80BD     	 pop {r7,pc}
 447              	 .cfi_endproc
 448              	.LFE176:
 450 00a2 00BF     	 .section .text.XMC_RTC_GetTimeStdFormat,"ax",%progbits
 451              	 .align 2
 452              	 .global XMC_RTC_GetTimeStdFormat
 453              	 .thumb
 454              	 .thumb_func
 456              	XMC_RTC_GetTimeStdFormat:
 457              	.LFB177:
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module time values in standard format
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetTimeStdFormat(struct tm *const stdtime)
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 458              	 .loc 2 201 0
 459              	 .cfi_startproc
 460              	 
 461              	 
 462              	 
 463 0000 80B4     	 push {r7}
 464              	.LCFI29:
 465              	 .cfi_def_cfa_offset 4
 466              	 .cfi_offset 7,-4
 467 0002 85B0     	 sub sp,sp,#20
 468              	.LCFI30:
 469              	 .cfi_def_cfa_offset 24
 470 0004 00AF     	 add r7,sp,#0
 471              	.LCFI31:
 472              	 .cfi_def_cfa_register 7
 473 0006 7860     	 str r0,[r7,#4]
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_RTC_TIME_t time;
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time.raw0 = RTC->TIM0;
 474              	 .loc 2 203 0
 475 0008 1C4B     	 ldr r3,.L27
 476 000a 1B6A     	 ldr r3,[r3,#32]
 477 000c BB60     	 str r3,[r7,#8]
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   time.raw1 = RTC->TIM1;
 478              	 .loc 2 204 0
 479 000e 1B4B     	 ldr r3,.L27
 480 0010 5B6A     	 ldr r3,[r3,#36]
 481 0012 FB60     	 str r3,[r7,#12]
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)time.seconds;
 482              	 .loc 2 206 0
 483 0014 3B7A     	 ldrb r3,[r7,#8]
 484 0016 C3F30503 	 ubfx r3,r3,#0,#6
 485 001a DBB2     	 uxtb r3,r3
 486 001c 1A46     	 mov r2,r3
 487 001e 7B68     	 ldr r3,[r7,#4]
 488 0020 1A60     	 str r2,[r3]
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)time.minutes;
 489              	 .loc 2 207 0
 490 0022 7B7A     	 ldrb r3,[r7,#9]
 491 0024 C3F30503 	 ubfx r3,r3,#0,#6
 492 0028 DBB2     	 uxtb r3,r3
 493 002a 1A46     	 mov r2,r3
 494 002c 7B68     	 ldr r3,[r7,#4]
 495 002e 5A60     	 str r2,[r3,#4]
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)time.hours;
 496              	 .loc 2 208 0
 497 0030 BB7A     	 ldrb r3,[r7,#10]
 498 0032 C3F30403 	 ubfx r3,r3,#0,#5
 499 0036 DBB2     	 uxtb r3,r3
 500 0038 1A46     	 mov r2,r3
 501 003a 7B68     	 ldr r3,[r7,#4]
 502 003c 9A60     	 str r2,[r3,#8]
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)time.days + (int8_t)1);
 503              	 .loc 2 209 0
 504 003e FB7A     	 ldrb r3,[r7,#11]
 505 0040 C3F30403 	 ubfx r3,r3,#0,#5
 506 0044 DBB2     	 uxtb r3,r3
 507 0046 5A1C     	 adds r2,r3,#1
 508 0048 7B68     	 ldr r3,[r7,#4]
 509 004a DA60     	 str r2,[r3,#12]
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)time.month;
 510              	 .loc 2 210 0
 511 004c 7B7B     	 ldrb r3,[r7,#13]
 512 004e C3F30303 	 ubfx r3,r3,#0,#4
 513 0052 DBB2     	 uxtb r3,r3
 514 0054 1A46     	 mov r2,r3
 515 0056 7B68     	 ldr r3,[r7,#4]
 516 0058 1A61     	 str r2,[r3,#16]
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)time.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 517              	 .loc 2 211 0
 518 005a FB89     	 ldrh r3,[r7,#14]
 519 005c A3F26C72 	 subw r2,r3,#1900
 520 0060 7B68     	 ldr r3,[r7,#4]
 521 0062 5A61     	 str r2,[r3,#20]
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_wday = (int8_t)time.daysofweek;
 522              	 .loc 2 212 0
 523 0064 3B7B     	 ldrb r3,[r7,#12]
 524 0066 C3F30203 	 ubfx r3,r3,#0,#3
 525 006a DBB2     	 uxtb r3,r3
 526 006c 1A46     	 mov r2,r3
 527 006e 7B68     	 ldr r3,[r7,#4]
 528 0070 9A61     	 str r2,[r3,#24]
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 529              	 .loc 2 213 0
 530 0072 1437     	 adds r7,r7,#20
 531              	.LCFI32:
 532              	 .cfi_def_cfa_offset 4
 533 0074 BD46     	 mov sp,r7
 534              	.LCFI33:
 535              	 .cfi_def_cfa_register 13
 536              	 
 537 0076 5DF8047B 	 ldr r7,[sp],#4
 538              	.LCFI34:
 539              	 .cfi_restore 7
 540              	 .cfi_def_cfa_offset 0
 541 007a 7047     	 bx lr
 542              	.L28:
 543              	 .align 2
 544              	.L27:
 545 007c 004A0050 	 .word 1342196224
 546              	 .cfi_endproc
 547              	.LFE177:
 549              	 .section .text.XMC_RTC_SetAlarm,"ax",%progbits
 550              	 .align 2
 551              	 .global XMC_RTC_SetAlarm
 552              	 .thumb
 553              	 .thumb_func
 555              	XMC_RTC_SetAlarm:
 556              	.LFB178:
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarm(const XMC_RTC_ALARM_t *const alarm)
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 557              	 .loc 2 219 0
 558              	 .cfi_startproc
 559              	 
 560              	 
 561 0000 80B5     	 push {r7,lr}
 562              	.LCFI35:
 563              	 .cfi_def_cfa_offset 8
 564              	 .cfi_offset 7,-8
 565              	 .cfi_offset 14,-4
 566 0002 82B0     	 sub sp,sp,#8
 567              	.LCFI36:
 568              	 .cfi_def_cfa_offset 16
 569 0004 00AF     	 add r7,sp,#0
 570              	.LCFI37:
 571              	 .cfi_def_cfa_register 7
 572 0006 7860     	 str r0,[r7,#4]
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong seconds value", ((uint32_t)alarm->seconds < XMC_RTC_MAXSECONDS
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong minutes value", ((uint32_t)alarm->minutes < XMC_RTC_MAXMINUTES
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong hours value", ((uint32_t)alarm->hours < XMC_RTC_MAXHOURS));
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong days value", ((uint32_t)alarm->days <= XMC_RTC_MAXDAYS));
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong month value", ((uint32_t)alarm->month < XMC_RTC_MAXMONTH));
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_ASSERT("XMC_RTC_SetAlarm:Wrong year value", ((uint32_t)alarm->year < XMC_RTC_MAXYEAR));
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 1U)
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk) != 0U)
 573              	 .loc 2 228 0
 574 0008 00BF     	 nop
 575              	.L30:
 576              	 .loc 2 228 0 is_stmt 0 discriminator 1
 577 000a FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 578 000e 0346     	 mov r3,r0
 579 0010 03F40073 	 and r3,r3,#512
 580 0014 002B     	 cmp r3,#0
 581 0016 F8D1     	 bne .L30
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       {
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       }
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 582              	 .loc 2 232 0 is_stmt 1
 583 0018 0C4B     	 ldr r3,.L32
 584 001a 7A68     	 ldr r2,[r7,#4]
 585 001c 1268     	 ldr r2,[r2]
 586 001e 9969     	 ldr r1,[r3,#24]
 587 0020 0021     	 movs r1,#0
 588 0022 0A43     	 orrs r2,r2,r1
 589 0024 9A61     	 str r2,[r3,#24]
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & SCU_GENERAL_MIRRSTS_RTC_ATIM1_Msk) != 0U)
 590              	 .loc 2 234 0
 591 0026 00BF     	 nop
 592              	.L31:
 593              	 .loc 2 234 0 is_stmt 0 discriminator 1
 594 0028 FFF7FEFF 	 bl XMC_SCU_GetMirrorStatus
 595 002c 0346     	 mov r3,r0
 596 002e 03F48063 	 and r3,r3,#1024
 597 0032 002B     	 cmp r3,#0
 598 0034 F8D1     	 bne .L31
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       {
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       }
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 599              	 .loc 2 238 0 is_stmt 1
 600 0036 054B     	 ldr r3,.L32
 601 0038 7A68     	 ldr r2,[r7,#4]
 602 003a 5268     	 ldr r2,[r2,#4]
 603 003c D969     	 ldr r1,[r3,#28]
 604 003e 0021     	 movs r1,#0
 605 0040 0A43     	 orrs r2,r2,r1
 606 0042 DA61     	 str r2,[r3,#28]
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   #endif
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   #if (XMC_RTC_INIT_SEQUENCE == 0U)
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       while ((XMC_SCU_GetMirrorStatus() & (SCU_GENERAL_MIRRSTS_RTC_ATIM0_Msk | SCU_GENERAL_MIRRSTS_
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       {
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       }
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       RTC->ATIM0 = alarm->raw0;
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****       RTC->ATIM1 = alarm->raw1; 
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   #endif  
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 607              	 .loc 2 248 0
 608 0044 0837     	 adds r7,r7,#8
 609              	.LCFI38:
 610              	 .cfi_def_cfa_offset 8
 611 0046 BD46     	 mov sp,r7
 612              	.LCFI39:
 613              	 .cfi_def_cfa_register 13
 614              	 
 615 0048 80BD     	 pop {r7,pc}
 616              	.L33:
 617 004a 00BF     	 .align 2
 618              	.L32:
 619 004c 004A0050 	 .word 1342196224
 620              	 .cfi_endproc
 621              	.LFE178:
 623              	 .section .text.XMC_RTC_GetAlarm,"ax",%progbits
 624              	 .align 2
 625              	 .global XMC_RTC_GetAlarm
 626              	 .thumb
 627              	 .thumb_func
 629              	XMC_RTC_GetAlarm:
 630              	.LFB179:
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarm(XMC_RTC_ALARM_t *const alarm)
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 631              	 .loc 2 254 0
 632              	 .cfi_startproc
 633              	 
 634              	 
 635              	 
 636 0000 80B4     	 push {r7}
 637              	.LCFI40:
 638              	 .cfi_def_cfa_offset 4
 639              	 .cfi_offset 7,-4
 640 0002 83B0     	 sub sp,sp,#12
 641              	.LCFI41:
 642              	 .cfi_def_cfa_offset 16
 643 0004 00AF     	 add r7,sp,#0
 644              	.LCFI42:
 645              	 .cfi_def_cfa_register 7
 646 0006 7860     	 str r0,[r7,#4]
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm->raw0 = RTC->ATIM0;
 647              	 .loc 2 255 0
 648 0008 064B     	 ldr r3,.L35
 649 000a 9A69     	 ldr r2,[r3,#24]
 650 000c 7B68     	 ldr r3,[r7,#4]
 651 000e 1A60     	 str r2,[r3]
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm->raw1 = RTC->ATIM1;
 652              	 .loc 2 256 0
 653 0010 044B     	 ldr r3,.L35
 654 0012 DA69     	 ldr r2,[r3,#28]
 655 0014 7B68     	 ldr r3,[r7,#4]
 656 0016 5A60     	 str r2,[r3,#4]
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 657              	 .loc 2 257 0
 658 0018 0C37     	 adds r7,r7,#12
 659              	.LCFI43:
 660              	 .cfi_def_cfa_offset 4
 661 001a BD46     	 mov sp,r7
 662              	.LCFI44:
 663              	 .cfi_def_cfa_register 13
 664              	 
 665 001c 5DF8047B 	 ldr r7,[sp],#4
 666              	.LCFI45:
 667              	 .cfi_restore 7
 668              	 .cfi_def_cfa_offset 0
 669 0020 7047     	 bx lr
 670              	.L36:
 671 0022 00BF     	 .align 2
 672              	.L35:
 673 0024 004A0050 	 .word 1342196224
 674              	 .cfi_endproc
 675              	.LFE179:
 677              	 .section .text.XMC_RTC_SetAlarmStdFormat,"ax",%progbits
 678              	 .align 2
 679              	 .global XMC_RTC_SetAlarmStdFormat
 680              	 .thumb
 681              	 .thumb_func
 683              	XMC_RTC_SetAlarmStdFormat:
 684              	.LFB180:
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Sets the RTC module alarm time value in standard format
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_SetAlarmStdFormat(const struct tm *const stdtime)
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 685              	 .loc 2 264 0
 686              	 .cfi_startproc
 687              	 
 688              	 
 689 0000 80B5     	 push {r7,lr}
 690              	.LCFI46:
 691              	 .cfi_def_cfa_offset 8
 692              	 .cfi_offset 7,-8
 693              	 .cfi_offset 14,-4
 694 0002 84B0     	 sub sp,sp,#16
 695              	.LCFI47:
 696              	 .cfi_def_cfa_offset 24
 697 0004 00AF     	 add r7,sp,#0
 698              	.LCFI48:
 699              	 .cfi_def_cfa_register 7
 700 0006 7860     	 str r0,[r7,#4]
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm.seconds = stdtime->tm_sec;
 701              	 .loc 2 268 0
 702 0008 7B68     	 ldr r3,[r7,#4]
 703 000a 1B68     	 ldr r3,[r3]
 704 000c DBB2     	 uxtb r3,r3
 705 000e 03F03F03 	 and r3,r3,#63
 706 0012 DAB2     	 uxtb r2,r3
 707 0014 3B7A     	 ldrb r3,[r7,#8]
 708 0016 62F30503 	 bfi r3,r2,#0,#6
 709 001a 3B72     	 strb r3,[r7,#8]
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm.minutes = stdtime->tm_min;
 710              	 .loc 2 269 0
 711 001c 7B68     	 ldr r3,[r7,#4]
 712 001e 5B68     	 ldr r3,[r3,#4]
 713 0020 DBB2     	 uxtb r3,r3
 714 0022 03F03F03 	 and r3,r3,#63
 715 0026 DAB2     	 uxtb r2,r3
 716 0028 7B7A     	 ldrb r3,[r7,#9]
 717 002a 62F30503 	 bfi r3,r2,#0,#6
 718 002e 7B72     	 strb r3,[r7,#9]
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm.hours = stdtime->tm_hour;
 719              	 .loc 2 270 0
 720 0030 7B68     	 ldr r3,[r7,#4]
 721 0032 9B68     	 ldr r3,[r3,#8]
 722 0034 DBB2     	 uxtb r3,r3
 723 0036 03F01F03 	 and r3,r3,#31
 724 003a DAB2     	 uxtb r2,r3
 725 003c BB7A     	 ldrb r3,[r7,#10]
 726 003e 62F30403 	 bfi r3,r2,#0,#5
 727 0042 BB72     	 strb r3,[r7,#10]
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm.days = stdtime->tm_mday - 1;
 728              	 .loc 2 271 0
 729 0044 7B68     	 ldr r3,[r7,#4]
 730 0046 DB68     	 ldr r3,[r3,#12]
 731 0048 DBB2     	 uxtb r3,r3
 732 004a 013B     	 subs r3,r3,#1
 733 004c DBB2     	 uxtb r3,r3
 734 004e 03F01F03 	 and r3,r3,#31
 735 0052 DAB2     	 uxtb r2,r3
 736 0054 FB7A     	 ldrb r3,[r7,#11]
 737 0056 62F30403 	 bfi r3,r2,#0,#5
 738 005a FB72     	 strb r3,[r7,#11]
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm.month = stdtime->tm_mon;
 739              	 .loc 2 272 0
 740 005c 7B68     	 ldr r3,[r7,#4]
 741 005e 1B69     	 ldr r3,[r3,#16]
 742 0060 DBB2     	 uxtb r3,r3
 743 0062 03F00F03 	 and r3,r3,#15
 744 0066 DAB2     	 uxtb r2,r3
 745 0068 7B7B     	 ldrb r3,[r7,#13]
 746 006a 62F30303 	 bfi r3,r2,#0,#4
 747 006e 7B73     	 strb r3,[r7,#13]
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm.year = stdtime->tm_year + XMC_RTC_YEAR_OFFSET;
 748              	 .loc 2 273 0
 749 0070 7B68     	 ldr r3,[r7,#4]
 750 0072 5B69     	 ldr r3,[r3,#20]
 751 0074 9BB2     	 uxth r3,r3
 752 0076 03F26C73 	 addw r3,r3,#1900
 753 007a 9BB2     	 uxth r3,r3
 754 007c FB81     	 strh r3,[r7,#14]
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_RTC_SetAlarm(&alarm);
 755              	 .loc 2 275 0
 756 007e 07F10803 	 add r3,r7,#8
 757 0082 1846     	 mov r0,r3
 758 0084 FFF7FEFF 	 bl XMC_RTC_SetAlarm
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 759              	 .loc 2 276 0
 760 0088 1037     	 adds r7,r7,#16
 761              	.LCFI49:
 762              	 .cfi_def_cfa_offset 8
 763 008a BD46     	 mov sp,r7
 764              	.LCFI50:
 765              	 .cfi_def_cfa_register 13
 766              	 
 767 008c 80BD     	 pop {r7,pc}
 768              	 .cfi_endproc
 769              	.LFE180:
 771 008e 00BF     	 .section .text.XMC_RTC_GetAlarmStdFormat,"ax",%progbits
 772              	 .align 2
 773              	 .global XMC_RTC_GetAlarmStdFormat
 774              	 .thumb
 775              	 .thumb_func
 777              	XMC_RTC_GetAlarmStdFormat:
 778              	.LFB181:
 277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Gets the RTC module alarm time value in standard format
 280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** void XMC_RTC_GetAlarmStdFormat(struct tm *const stdtime)
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 779              	 .loc 2 282 0
 780              	 .cfi_startproc
 781              	 
 782              	 
 783              	 
 784 0000 80B4     	 push {r7}
 785              	.LCFI51:
 786              	 .cfi_def_cfa_offset 4
 787              	 .cfi_offset 7,-4
 788 0002 85B0     	 sub sp,sp,#20
 789              	.LCFI52:
 790              	 .cfi_def_cfa_offset 24
 791 0004 00AF     	 add r7,sp,#0
 792              	.LCFI53:
 793              	 .cfi_def_cfa_register 7
 794 0006 7860     	 str r0,[r7,#4]
 283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   XMC_RTC_ALARM_t alarm;
 284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm.raw0 = RTC->ATIM0;
 795              	 .loc 2 285 0
 796 0008 194B     	 ldr r3,.L39
 797 000a 9B69     	 ldr r3,[r3,#24]
 798 000c BB60     	 str r3,[r7,#8]
 286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   alarm.raw1 = RTC->ATIM1;
 799              	 .loc 2 286 0
 800 000e 184B     	 ldr r3,.L39
 801 0010 DB69     	 ldr r3,[r3,#28]
 802 0012 FB60     	 str r3,[r7,#12]
 287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_sec = (int8_t)alarm.seconds;
 803              	 .loc 2 288 0
 804 0014 3B7A     	 ldrb r3,[r7,#8]
 805 0016 C3F30503 	 ubfx r3,r3,#0,#6
 806 001a DBB2     	 uxtb r3,r3
 807 001c 1A46     	 mov r2,r3
 808 001e 7B68     	 ldr r3,[r7,#4]
 809 0020 1A60     	 str r2,[r3]
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_min = (int8_t)alarm.minutes;
 810              	 .loc 2 289 0
 811 0022 7B7A     	 ldrb r3,[r7,#9]
 812 0024 C3F30503 	 ubfx r3,r3,#0,#6
 813 0028 DBB2     	 uxtb r3,r3
 814 002a 1A46     	 mov r2,r3
 815 002c 7B68     	 ldr r3,[r7,#4]
 816 002e 5A60     	 str r2,[r3,#4]
 290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_hour = (int8_t)alarm.hours;
 817              	 .loc 2 290 0
 818 0030 BB7A     	 ldrb r3,[r7,#10]
 819 0032 C3F30403 	 ubfx r3,r3,#0,#5
 820 0036 DBB2     	 uxtb r3,r3
 821 0038 1A46     	 mov r2,r3
 822 003a 7B68     	 ldr r3,[r7,#4]
 823 003c 9A60     	 str r2,[r3,#8]
 291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mday = ((int8_t)alarm.days + (int8_t)1);
 824              	 .loc 2 291 0
 825 003e FB7A     	 ldrb r3,[r7,#11]
 826 0040 C3F30403 	 ubfx r3,r3,#0,#5
 827 0044 DBB2     	 uxtb r3,r3
 828 0046 5A1C     	 adds r2,r3,#1
 829 0048 7B68     	 ldr r3,[r7,#4]
 830 004a DA60     	 str r2,[r3,#12]
 292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_mon = (int8_t)alarm.month;
 831              	 .loc 2 292 0
 832 004c 7B7B     	 ldrb r3,[r7,#13]
 833 004e C3F30303 	 ubfx r3,r3,#0,#4
 834 0052 DBB2     	 uxtb r3,r3
 835 0054 1A46     	 mov r2,r3
 836 0056 7B68     	 ldr r3,[r7,#4]
 837 0058 1A61     	 str r2,[r3,#16]
 293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   stdtime->tm_year = (int32_t)alarm.year - (int32_t)XMC_RTC_YEAR_OFFSET;
 838              	 .loc 2 293 0
 839 005a FB89     	 ldrh r3,[r7,#14]
 840 005c A3F26C72 	 subw r2,r3,#1900
 841 0060 7B68     	 ldr r3,[r7,#4]
 842 0062 5A61     	 str r2,[r3,#20]
 294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 843              	 .loc 2 294 0
 844 0064 1437     	 adds r7,r7,#20
 845              	.LCFI54:
 846              	 .cfi_def_cfa_offset 4
 847 0066 BD46     	 mov sp,r7
 848              	.LCFI55:
 849              	 .cfi_def_cfa_register 13
 850              	 
 851 0068 5DF8047B 	 ldr r7,[sp],#4
 852              	.LCFI56:
 853              	 .cfi_restore 7
 854              	 .cfi_def_cfa_offset 0
 855 006c 7047     	 bx lr
 856              	.L40:
 857 006e 00BF     	 .align 2
 858              	.L39:
 859 0070 004A0050 	 .word 1342196224
 860              	 .cfi_endproc
 861              	.LFE181:
 863              	 .section .text.XMC_RTC_GetEventStatus,"ax",%progbits
 864              	 .align 2
 865              	 .global XMC_RTC_GetEventStatus
 866              	 .thumb
 867              	 .thumb_func
 869              	XMC_RTC_GetEventStatus:
 870              	.LFB182:
 295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** 
 296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** /*
 297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  * Gets the RTC periodic and alarm event(s) status
 298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****  */
 299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** uint32_t XMC_RTC_GetEventStatus(void)
 300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** {
 871              	 .loc 2 300 0
 872              	 .cfi_startproc
 873              	 
 874              	 
 875              	 
 876 0000 80B4     	 push {r7}
 877              	.LCFI57:
 878              	 .cfi_def_cfa_offset 4
 879              	 .cfi_offset 7,-4
 880 0002 00AF     	 add r7,sp,#0
 881              	.LCFI58:
 882              	 .cfi_def_cfa_register 7
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c ****   return RTC->STSSR;
 883              	 .loc 2 301 0
 884 0004 034B     	 ldr r3,.L43
 885 0006 DB68     	 ldr r3,[r3,#12]
 302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_rtc.c **** }
 886              	 .loc 2 302 0
 887 0008 1846     	 mov r0,r3
 888 000a BD46     	 mov sp,r7
 889              	.LCFI59:
 890              	 .cfi_def_cfa_register 13
 891              	 
 892 000c 5DF8047B 	 ldr r7,[sp],#4
 893              	.LCFI60:
 894              	 .cfi_restore 7
 895              	 .cfi_def_cfa_offset 0
 896 0010 7047     	 bx lr
 897              	.L44:
 898 0012 00BF     	 .align 2
 899              	.L43:
 900 0014 004A0050 	 .word 1342196224
 901              	 .cfi_endproc
 902              	.LFE182:
 904              	 .text
 905              	.Letext0:
 906              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 907              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 908              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 909              	 .file 6 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\time.h"
 910              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_rtc.h"
 911              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 912              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_rtc.c
    {standard input}:20     .text.XMC_SCU_GetMirrorStatus:00000000 $t
    {standard input}:24     .text.XMC_SCU_GetMirrorStatus:00000000 XMC_SCU_GetMirrorStatus
    {standard input}:56     .text.XMC_SCU_GetMirrorStatus:00000014 $d
    {standard input}:61     .text.XMC_RTC_Start:00000000 $t
    {standard input}:66     .text.XMC_RTC_Start:00000000 XMC_RTC_Start
    {standard input}:104    .text.XMC_RTC_Start:00000028 $d
    {standard input}:109    .text.XMC_RTC_Stop:00000000 $t
    {standard input}:114    .text.XMC_RTC_Stop:00000000 XMC_RTC_Stop
    {standard input}:151    .text.XMC_RTC_Stop:00000028 $d
    {standard input}:156    .text.XMC_RTC_SetPrescaler:00000000 $t
    {standard input}:161    .text.XMC_RTC_SetPrescaler:00000000 XMC_RTC_SetPrescaler
    {standard input}:215    .text.XMC_RTC_SetPrescaler:00000038 $d
    {standard input}:220    .text.XMC_RTC_SetTime:00000000 $t
    {standard input}:225    .text.XMC_RTC_SetTime:00000000 XMC_RTC_SetTime
    {standard input}:289    .text.XMC_RTC_SetTime:0000004c $d
    {standard input}:294    .text.XMC_RTC_GetTime:00000000 $t
    {standard input}:299    .text.XMC_RTC_GetTime:00000000 XMC_RTC_GetTime
    {standard input}:343    .text.XMC_RTC_GetTime:00000024 $d
    {standard input}:348    .text.XMC_RTC_SetTimeStdFormat:00000000 $t
    {standard input}:353    .text.XMC_RTC_SetTimeStdFormat:00000000 XMC_RTC_SetTimeStdFormat
    {standard input}:451    .text.XMC_RTC_GetTimeStdFormat:00000000 $t
    {standard input}:456    .text.XMC_RTC_GetTimeStdFormat:00000000 XMC_RTC_GetTimeStdFormat
    {standard input}:545    .text.XMC_RTC_GetTimeStdFormat:0000007c $d
    {standard input}:550    .text.XMC_RTC_SetAlarm:00000000 $t
    {standard input}:555    .text.XMC_RTC_SetAlarm:00000000 XMC_RTC_SetAlarm
    {standard input}:619    .text.XMC_RTC_SetAlarm:0000004c $d
    {standard input}:624    .text.XMC_RTC_GetAlarm:00000000 $t
    {standard input}:629    .text.XMC_RTC_GetAlarm:00000000 XMC_RTC_GetAlarm
    {standard input}:673    .text.XMC_RTC_GetAlarm:00000024 $d
    {standard input}:678    .text.XMC_RTC_SetAlarmStdFormat:00000000 $t
    {standard input}:683    .text.XMC_RTC_SetAlarmStdFormat:00000000 XMC_RTC_SetAlarmStdFormat
    {standard input}:772    .text.XMC_RTC_GetAlarmStdFormat:00000000 $t
    {standard input}:777    .text.XMC_RTC_GetAlarmStdFormat:00000000 XMC_RTC_GetAlarmStdFormat
    {standard input}:859    .text.XMC_RTC_GetAlarmStdFormat:00000070 $d
    {standard input}:864    .text.XMC_RTC_GetEventStatus:00000000 $t
    {standard input}:869    .text.XMC_RTC_GetEventStatus:00000000 XMC_RTC_GetEventStatus
    {standard input}:900    .text.XMC_RTC_GetEventStatus:00000014 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
