   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_usbd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global XMC_USBD_EP_OUT_BUFFERSIZE
  20              	 .section .bss.XMC_USBD_EP_OUT_BUFFERSIZE,"aw",%nobits
  21              	 .align 2
  24              	XMC_USBD_EP_OUT_BUFFERSIZE:
  25 0000 00000000 	 .space 28
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              	 .global XMC_USBD_EP_IN_BUFFERSIZE
  27              	 .section .bss.XMC_USBD_EP_IN_BUFFERSIZE,"aw",%nobits
  28              	 .align 2
  31              	XMC_USBD_EP_IN_BUFFERSIZE:
  32 0000 00000000 	 .space 28
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              	 .comm xmc_device,471,4
  34              	 .section USB_RAM,"aw",%progbits
  35              	 .align 2
  38              	XMC_USBD_EP_OUT_BUFFER:
  39 0000 00000000 	 .space 1792
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              	 .align 2
  43              	XMC_USBD_EP_IN_BUFFER:
  44 0700 00000000 	 .space 1792
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              	 .comm usbd_init,4,4
  46              	 .global Driver_USBD0
  47              	 .section .rodata.Driver_USBD0,"a",%progbits
  48              	 .align 2
  51              	Driver_USBD0:
  52 0000 00000000 	 .word XMC_USBD_GetCapabilities
  53 0004 00000000 	 .word XMC_USBD_Init
  54 0008 00000000 	 .word XMC_USBD_Uninitialize
  55 000c 00000000 	 .word XMC_USBD_DeviceConnect
  56 0010 00000000 	 .word XMC_USBD_DeviceDisconnect
  57 0014 00000000 	 .word XMC_USBD_DeviceGetState
  58 0018 00000000 	 .word XMC_USBD_DeviceSetAddress
  59 001c 00000000 	 .word XMC_USBD_EndpointConfigure
  60 0020 00000000 	 .word XMC_USBD_EndpointUnconfigure
  61 0024 00000000 	 .word XMC_USBD_EndpointStall
  62 0028 00000000 	 .word XMC_USBD_EndpointReadStart
  63 002c 00000000 	 .word XMC_USBD_EndpointRead
  64 0030 00000000 	 .word XMC_USBD_EndpointWrite
  65 0034 00000000 	 .word XMC_USBD_EndpointAbort
  66 0038 00000000 	 .word XMC_USBD_GetFrameNumber
  67 003c 00000000 	 .word XMC_USBD_IsEnumDone
  68              	 .section .text.XMC_USBD_lDeviceActive,"ax",%progbits
  69              	 .align 2
  70              	 .global XMC_USBD_lDeviceActive
  71              	 .thumb
  72              	 .thumb_func
  74              	XMC_USBD_lDeviceActive:
  75              	.LFB169:
  76              	 .file 1 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @file xmc_usbd.c
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @date 2015-06-20
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Redistribution and use in source and binary forms, with or without           
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * modification,are permitted provided that the following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *   Redistributions of source code must retain the above copyright notice,      
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * 
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *   Redistributions in binary form must reproduce the above copyright notice,   
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *   this list of conditions and the following disclaimer in the documentation    
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *   and/or other materials provided with the distribution.                       
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * 
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *   Neither the name of the copyright holders nor the names of its contributors 
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *   may be used to endorse or promote products derived from this software without
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *   specific prior written permission.                                           
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *                                                                              
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * POSSIBILITY OF SUCH DAMAGE.                                                  
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *                                                                              
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * To improve the quality of the software, users are encouraged to share        
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * modifications, enhancements or bug fixes with Infineon Technologies AG       
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * dave@infineon.com).                                                          
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **********************************************************************************
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Change History
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * --------------
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * 2015-02-16:
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *     - Initial Version.<br>           
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * 2015-03-18:
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointStall() to fix issue on USB clear stall. <br>
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_EndpointConfigure() to fix issue in EP0 configuration.<br>
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IRQHandler()(Removed the DAVE_CE check on SOF event).<br>
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * 2015-06-20:
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *     - Removed GetDriverVersion API.<br>
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_IsEnumDone() API.<br>
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *     - Updated the copy right in the file header.<br>
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *     - Updated the XMC_USBD_Disable() API to gate the clock after programming the SCU registers.<
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @endcond 
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * HEADER FILES
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #include <xmc_usbd.h>
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #if defined(USB0)
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**< macro to check the maximum number of endpoints used*/
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #define XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(usbd_max_num_eps) \
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ((usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_1 ) || \
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_2 ) || \
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_3 ) || \
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_4 ) || \
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_5 ) || \
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps ==  XMC_USBD_MAX_NUM_EPS_6 ) || \
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****    (usbd_max_num_eps == XMC_USBD_MAX_NUM_EPS_7 ))
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *GLOBAL DATA
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo Size
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_OUT_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo Size
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_EP_IN_BUFFERSIZE[7] = {0U,0U,0U,0U,0U,0U,0U};
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Device definition
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  XMC_USBD_DEVICE_t xmc_device;
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #ifdef __GNUC__															  /*GCC*/
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section("U
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section("US
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #endif
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #if defined(__ICCARM__)
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] @ ".dram";
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #pragma data_alignment=4
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_EP_IN_BUFFER[7][256] @ ".dram";
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #endif
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #if defined(__CC_ARM)
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Endpoint Out Fifo
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_OUT_BUFFER[7][256] __attribute__((section ("
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Endpoint In Fifo
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static __attribute__((aligned(4))) uint8_t XMC_USBD_EP_IN_BUFFER[7][256] __attribute__((section ("R
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #endif
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_t *usbd_init;
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *LOCAL ROUTINES
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*Local routines prototypes*/
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj);
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count);
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *ep);
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num);
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void);
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void);
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep);
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep);
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void);
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj);
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void);
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj);
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr);
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj);
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void);
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event);
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *  The device driver
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** const XMC_USBD_DRIVER_t Driver_USBD0 =
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .GetCapabilities = XMC_USBD_GetCapabilities,
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .Initialize = XMC_USBD_Init,
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .Uninitialize = XMC_USBD_Uninitialize,
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .DeviceConnect = XMC_USBD_DeviceConnect,
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .DeviceDisconnect = XMC_USBD_DeviceDisconnect,
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .DeviceGetState = XMC_USBD_DeviceGetState,
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .DeviceSetAddress = XMC_USBD_DeviceSetAddress,
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .EndpointConfigure = XMC_USBD_EndpointConfigure,
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .EndpointUnconfigure = XMC_USBD_EndpointUnconfigure,
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .EndpointStall = XMC_USBD_EndpointStall,
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .EndpointReadStart = XMC_USBD_EndpointReadStart,
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .EndpointRead = XMC_USBD_EndpointRead,
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .EndpointWrite = XMC_USBD_EndpointWrite,
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .EndpointAbort = XMC_USBD_EndpointAbort,
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .GetFrameNumber = XMC_USBD_GetFrameNumber,
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   .IsEnumDone = XMC_USBD_IsEnumDone
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** };
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Checks if device is active
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Therefore the endpoint inInUse flag are checked and if one endpoint is in use, 1 is returned,
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * else 0 is returned.
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @return 1 if an endpoint is active else 0
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** uint8_t XMC_USBD_lDeviceActive(const XMC_USBD_t *const obj) 
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
  77              	 .loc 1 181 0
  78              	 .cfi_startproc
  79              	 
  80              	 
  81              	 
  82 0000 80B4     	 push {r7}
  83              	.LCFI0:
  84              	 .cfi_def_cfa_offset 4
  85              	 .cfi_offset 7,-4
  86 0002 85B0     	 sub sp,sp,#20
  87              	.LCFI1:
  88              	 .cfi_def_cfa_offset 24
  89 0004 00AF     	 add r7,sp,#0
  90              	.LCFI2:
  91              	 .cfi_def_cfa_register 7
  92 0006 7860     	 str r0,[r7,#4]
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint8_t i;
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
  93              	 .loc 1 183 0
  94 0008 0023     	 movs r3,#0
  95 000a BB73     	 strb r3,[r7,#14]
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for (i = 0U; i < (uint8_t)obj->usbd_max_num_eps; i++)
  96              	 .loc 1 184 0
  97 000c 0023     	 movs r3,#0
  98 000e FB73     	 strb r3,[r7,#15]
  99 0010 1EE0     	 b .L2
 100              	.L5:
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (xmc_device.ep[i].inInUse || xmc_device.ep[i].outInUse)
 101              	 .loc 1 186 0
 102 0012 FB7B     	 ldrb r3,[r7,#15]
 103 0014 144A     	 ldr r2,.L7
 104 0016 2E21     	 movs r1,#46
 105 0018 01FB03F3 	 mul r3,r1,r3
 106 001c 1344     	 add r3,r3,r2
 107 001e 1B68     	 ldr r3,[r3]
 108 0020 DB0A     	 lsrs r3,r3,#11
 109 0022 03F00103 	 and r3,r3,#1
 110 0026 DBB2     	 uxtb r3,r3
 111 0028 002B     	 cmp r3,#0
 112 002a 0CD1     	 bne .L3
 113              	 .loc 1 186 0 is_stmt 0 discriminator 1
 114 002c FB7B     	 ldrb r3,[r7,#15]
 115 002e 0E4A     	 ldr r2,.L7
 116 0030 2E21     	 movs r1,#46
 117 0032 01FB03F3 	 mul r3,r1,r3
 118 0036 1344     	 add r3,r3,r2
 119 0038 1B68     	 ldr r3,[r3]
 120 003a 1B0B     	 lsrs r3,r3,#12
 121 003c 03F00103 	 and r3,r3,#1
 122 0040 DBB2     	 uxtb r3,r3
 123 0042 002B     	 cmp r3,#0
 124 0044 01D0     	 beq .L4
 125              	.L3:
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       result = 1U;
 126              	 .loc 1 188 0 is_stmt 1
 127 0046 0123     	 movs r3,#1
 128 0048 BB73     	 strb r3,[r7,#14]
 129              	.L4:
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 130              	 .loc 1 184 0 discriminator 2
 131 004a FB7B     	 ldrb r3,[r7,#15]
 132 004c 0133     	 adds r3,r3,#1
 133 004e FB73     	 strb r3,[r7,#15]
 134              	.L2:
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 135              	 .loc 1 184 0 is_stmt 0 discriminator 1
 136 0050 7B68     	 ldr r3,[r7,#4]
 137 0052 1B7B     	 ldrb r3,[r3,#12]
 138 0054 FA7B     	 ldrb r2,[r7,#15]
 139 0056 9A42     	 cmp r2,r3
 140 0058 DBD3     	 bcc .L5
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return result;
 141              	 .loc 1 191 0 is_stmt 1
 142 005a BB7B     	 ldrb r3,[r7,#14]
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 143              	 .loc 1 192 0
 144 005c 1846     	 mov r0,r3
 145 005e 1437     	 adds r7,r7,#20
 146              	.LCFI3:
 147              	 .cfi_def_cfa_offset 4
 148 0060 BD46     	 mov sp,r7
 149              	.LCFI4:
 150              	 .cfi_def_cfa_register 13
 151              	 
 152 0062 5DF8047B 	 ldr r7,[sp],#4
 153              	.LCFI5:
 154              	 .cfi_restore 7
 155              	 .cfi_def_cfa_offset 0
 156 0066 7047     	 bx lr
 157              	.L8:
 158              	 .align 2
 159              	.L7:
 160 0068 00000000 	 .word xmc_device
 161              	 .cfi_endproc
 162              	.LFE169:
 164              	 .section .text.XMC_USBD_lReadFifo,"ax",%progbits
 165              	 .align 2
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_USBD_lReadFifo:
 170              	.LFB170:
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Read data from the rx fifo
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * The data from the fifo is copied in to the buffer specified by @ref xfer_buffer and
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * the transfer values get updated. If the endpoint is disabled or the buffer not existent
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * the function exits.
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @arg ep_num the endpoint to read for
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @arg byte_count the byte count to read
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lReadFifo(const uint32_t ep_num,const uint32_t byte_count) 
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 171              	 .loc 1 206 0
 172              	 .cfi_startproc
 173              	 
 174              	 
 175              	 
 176 0000 80B4     	 push {r7}
 177              	.LCFI6:
 178              	 .cfi_def_cfa_offset 4
 179              	 .cfi_offset 7,-4
 180 0002 8BB0     	 sub sp,sp,#44
 181              	.LCFI7:
 182              	 .cfi_def_cfa_offset 48
 183 0004 00AF     	 add r7,sp,#0
 184              	.LCFI8:
 185              	 .cfi_def_cfa_register 7
 186 0006 7860     	 str r0,[r7,#4]
 187 0008 3960     	 str r1,[r7]
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num];
 188              	 .loc 1 207 0
 189 000a 7B68     	 ldr r3,[r7,#4]
 190 000c 2E22     	 movs r2,#46
 191 000e 02FB03F3 	 mul r3,r2,r3
 192 0012 384A     	 ldr r2,.L16
 193 0014 1344     	 add r3,r3,r2
 194 0016 3B62     	 str r3,[r7,#32]
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t temp_data;
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t temp_word_count;
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo = xmc_device.fifo[0U];
 195              	 .loc 1 211 0
 196 0018 364B     	 ldr r3,.L16
 197 001a D3F8B031 	 ldr r3,[r3,#432]
 198 001e FB61     	 str r3,[r7,#28]
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.endpoint_out_register[ep_num]->doepctl;
 199              	 .loc 1 214 0
 200 0020 344A     	 ldr r2,.L16
 201 0022 7B68     	 ldr r3,[r7,#4]
 202 0024 6433     	 adds r3,r3,#100
 203 0026 9B00     	 lsls r3,r3,#2
 204 0028 1344     	 add r3,r3,r2
 205 002a 5B68     	 ldr r3,[r3,#4]
 206 002c 1B68     	 ldr r3,[r3]
 207 002e FB60     	 str r3,[r7,#12]
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   word_count = (byte_count >> 2U );
 208              	 .loc 1 215 0
 209 0030 3B68     	 ldr r3,[r7]
 210 0032 9B08     	 lsrs r3,r3,#2
 211 0034 BB61     	 str r3,[r7,#24]
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   temp_word_count = (word_count << 2U);
 212              	 .loc 1 216 0
 213 0036 BB69     	 ldr r3,[r7,#24]
 214 0038 9B00     	 lsls r3,r3,#2
 215 003a 7B61     	 str r3,[r7,#20]
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Check if ep is enabled and has buffer */
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (!data.b.usbactep)
 216              	 .loc 1 218 0
 217 003c 7B7B     	 ldrb r3,[r7,#13]
 218 003e 23F07F03 	 bic r3,r3,#127
 219 0042 DBB2     	 uxtb r3,r3
 220 0044 002B     	 cmp r3,#0
 221 0046 4FD0     	 beq .L9
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /*Do Nothing*/
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else if (ep->xferBuffer == NULL)
 222              	 .loc 1 222 0
 223 0048 3B6A     	 ldr r3,[r7,#32]
 224 004a D3F81E30 	 ldr r3,[r3,#30]
 225 004e 002B     	 cmp r3,#0
 226 0050 4AD0     	 beq .L9
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	/*Do Nothing*/
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* store the data */
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     for (i = 0U;i < word_count; i++)
 227              	 .loc 1 229 0
 228 0052 0023     	 movs r3,#0
 229 0054 7B62     	 str r3,[r7,#36]
 230 0056 0BE0     	 b .L11
 231              	.L12:
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       *(((uint32_t*)ep->xferBuffer)+i) = *fifo;
 232              	 .loc 1 231 0 discriminator 3
 233 0058 3B6A     	 ldr r3,[r7,#32]
 234 005a D3F81E20 	 ldr r2,[r3,#30]
 235 005e 7B6A     	 ldr r3,[r7,#36]
 236 0060 9B00     	 lsls r3,r3,#2
 237 0062 1344     	 add r3,r3,r2
 238 0064 FA69     	 ldr r2,[r7,#28]
 239 0066 1268     	 ldr r2,[r2]
 240 0068 1A60     	 str r2,[r3]
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 241              	 .loc 1 229 0 discriminator 3
 242 006a 7B6A     	 ldr r3,[r7,#36]
 243 006c 0133     	 adds r3,r3,#1
 244 006e 7B62     	 str r3,[r7,#36]
 245              	.L11:
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 246              	 .loc 1 229 0 is_stmt 0 discriminator 1
 247 0070 7A6A     	 ldr r2,[r7,#36]
 248 0072 BB69     	 ldr r3,[r7,#24]
 249 0074 9A42     	 cmp r2,r3
 250 0076 EFD3     	 bcc .L12
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* space is not devidable by 4 */
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (byte_count!=temp_word_count)
 251              	 .loc 1 234 0 is_stmt 1
 252 0078 3A68     	 ldr r2,[r7]
 253 007a 7B69     	 ldr r3,[r7,#20]
 254 007c 9A42     	 cmp r2,r3
 255 007e 23D0     	 beq .L13
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       temp_data = *fifo;
 256              	 .loc 1 236 0
 257 0080 FB69     	 ldr r3,[r7,#28]
 258 0082 1B68     	 ldr r3,[r3]
 259 0084 3B61     	 str r3,[r7,#16]
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 260              	 .loc 1 237 0
 261 0086 0023     	 movs r3,#0
 262 0088 7B62     	 str r3,[r7,#36]
 263 008a 17E0     	 b .L14
 264              	.L15:
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       {
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         ep->xferBuffer[(word_count << 2)+i] = (uint8_t)((temp_data & ((uint32_t)0xFFU << (i * 8U)))
 265              	 .loc 1 239 0 discriminator 3
 266 008c 3B6A     	 ldr r3,[r7,#32]
 267 008e D3F81E20 	 ldr r2,[r3,#30]
 268 0092 BB69     	 ldr r3,[r7,#24]
 269 0094 9900     	 lsls r1,r3,#2
 270 0096 7B6A     	 ldr r3,[r7,#36]
 271 0098 0B44     	 add r3,r3,r1
 272 009a 1344     	 add r3,r3,r2
 273 009c 7A6A     	 ldr r2,[r7,#36]
 274 009e D200     	 lsls r2,r2,#3
 275 00a0 1146     	 mov r1,r2
 276 00a2 FF22     	 movs r2,#255
 277 00a4 02FA01F1 	 lsl r1,r2,r1
 278 00a8 3A69     	 ldr r2,[r7,#16]
 279 00aa 0A40     	 ands r2,r2,r1
 280 00ac 796A     	 ldr r1,[r7,#36]
 281 00ae C900     	 lsls r1,r1,#3
 282 00b0 CA40     	 lsrs r2,r2,r1
 283 00b2 D2B2     	 uxtb r2,r2
 284 00b4 1A70     	 strb r2,[r3]
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 285              	 .loc 1 237 0 discriminator 3
 286 00b6 7B6A     	 ldr r3,[r7,#36]
 287 00b8 0133     	 adds r3,r3,#1
 288 00ba 7B62     	 str r3,[r7,#36]
 289              	.L14:
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       for (i = 0U;(temp_word_count + i) < byte_count;i++)
 290              	 .loc 1 237 0 is_stmt 0 discriminator 1
 291 00bc 7A69     	 ldr r2,[r7,#20]
 292 00be 7B6A     	 ldr r3,[r7,#36]
 293 00c0 1A44     	 add r2,r2,r3
 294 00c2 3B68     	 ldr r3,[r7]
 295 00c4 9A42     	 cmp r2,r3
 296 00c6 E1D3     	 bcc .L15
 297              	.L13:
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       }
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* save the amount of data */
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferCount += byte_count;
 298              	 .loc 1 244 0 is_stmt 1
 299 00c8 3B6A     	 ldr r3,[r7,#32]
 300 00ca D3F82620 	 ldr r2,[r3,#38]
 301 00ce 3B68     	 ldr r3,[r7]
 302 00d0 1A44     	 add r2,r2,r3
 303 00d2 3B6A     	 ldr r3,[r7,#32]
 304 00d4 C3F82620 	 str r2,[r3,#38]
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer += byte_count;
 305              	 .loc 1 245 0
 306 00d8 3B6A     	 ldr r3,[r7,#32]
 307 00da D3F81E20 	 ldr r2,[r3,#30]
 308 00de 3B68     	 ldr r3,[r7]
 309 00e0 1A44     	 add r2,r2,r3
 310 00e2 3B6A     	 ldr r3,[r7,#32]
 311 00e4 C3F81E20 	 str r2,[r3,#30]
 312              	.L9:
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 313              	 .loc 1 247 0
 314 00e8 2C37     	 adds r7,r7,#44
 315              	.LCFI9:
 316              	 .cfi_def_cfa_offset 4
 317 00ea BD46     	 mov sp,r7
 318              	.LCFI10:
 319              	 .cfi_def_cfa_register 13
 320              	 
 321 00ec 5DF8047B 	 ldr r7,[sp],#4
 322              	.LCFI11:
 323              	 .cfi_restore 7
 324              	 .cfi_def_cfa_offset 0
 325 00f0 7047     	 bx lr
 326              	.L17:
 327 00f2 00BF     	 .align 2
 328              	.L16:
 329 00f4 00000000 	 .word xmc_device
 330              	 .cfi_endproc
 331              	.LFE170:
 333              	 .section .text.XMC_USBD_lWriteFifo,"ax",%progbits
 334              	 .align 2
 335              	 .thumb
 336              	 .thumb_func
 338              	XMC_USBD_lWriteFifo:
 339              	.LFB171:
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Write data to an endpoint fifo
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * The data from the @ref xfer_buffer gets copied in to the tx fifo of the endpoint until the buffe
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *completely or the tx fifo is full. The transfer values are not updated.
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @arg[in] ep the endpoint to use
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @return the number of bytes written to the fifo
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static uint32_t XMC_USBD_lWriteFifo(XMC_USBD_EP_t *const ep) 
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 340              	 .loc 1 259 0
 341              	 .cfi_startproc
 342              	 
 343              	 
 344              	 
 345 0000 80B4     	 push {r7}
 346              	.LCFI12:
 347              	 .cfi_def_cfa_offset 4
 348              	 .cfi_offset 7,-4
 349 0002 89B0     	 sub sp,sp,#36
 350              	.LCFI13:
 351              	 .cfi_def_cfa_offset 40
 352 0004 00AF     	 add r7,sp,#0
 353              	.LCFI14:
 354              	 .cfi_def_cfa_register 7
 355 0006 7860     	 str r0,[r7,#4]
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dtxfsts_data_t freeSpace; 
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   volatile uint32_t *fifo;
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t byte_count;
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t word_count;
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t result;
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   fifo = xmc_device.fifo[ep->address_u.address_st.number]; /* fifo */
 356              	 .loc 1 266 0
 357 0008 7B68     	 ldr r3,[r7,#4]
 358 000a 1B78     	 ldrb r3,[r3]
 359 000c C3F30303 	 ubfx r3,r3,#0,#4
 360 0010 DBB2     	 uxtb r3,r3
 361 0012 264A     	 ldr r2,.L25
 362 0014 6C33     	 adds r3,r3,#108
 363 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 364 001a FB60     	 str r3,[r7,#12]
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   freeSpace.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dtxfsts;
 365              	 .loc 1 267 0
 366 001c 7B68     	 ldr r3,[r7,#4]
 367 001e 1B78     	 ldrb r3,[r3]
 368 0020 C3F30303 	 ubfx r3,r3,#0,#4
 369 0024 DBB2     	 uxtb r3,r3
 370 0026 214A     	 ldr r2,.L25
 371 0028 5E33     	 adds r3,r3,#94
 372 002a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 373 002e 9B69     	 ldr r3,[r3,#24]
 374 0030 BB60     	 str r3,[r7,#8]
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* calculate the length and the amount of dwords to copy based on the fifo status */
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   byte_count = ep->xferLength - ep->xferCount;
 375              	 .loc 1 269 0
 376 0032 7B68     	 ldr r3,[r7,#4]
 377 0034 D3F82220 	 ldr r2,[r3,#34]
 378 0038 7B68     	 ldr r3,[r7,#4]
 379 003a D3F82630 	 ldr r3,[r3,#38]
 380 003e D31A     	 subs r3,r2,r3
 381 0040 FB61     	 str r3,[r7,#28]
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (!byte_count)
 382              	 .loc 1 270 0
 383 0042 FB69     	 ldr r3,[r7,#28]
 384 0044 002B     	 cmp r3,#0
 385 0046 02D1     	 bne .L19
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     result = 0U;
 386              	 .loc 1 272 0
 387 0048 0023     	 movs r3,#0
 388 004a 7B61     	 str r3,[r7,#20]
 389 004c 26E0     	 b .L20
 390              	.L19:
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
 275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* add the unaligned bytes to the word count to compare with the fifo space */
 277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     word_count = ((uint32_t)byte_count + 3U) >> 2U;
 391              	 .loc 1 277 0
 392 004e FB69     	 ldr r3,[r7,#28]
 393 0050 0333     	 adds r3,r3,#3
 394 0052 9B08     	 lsrs r3,r3,#2
 395 0054 BB61     	 str r3,[r7,#24]
 278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (word_count > (uint32_t)freeSpace.b.txfspcavail )
 396              	 .loc 1 278 0
 397 0056 3B89     	 ldrh r3,[r7,#8]
 398 0058 1A46     	 mov r2,r3
 399 005a BB69     	 ldr r3,[r7,#24]
 400 005c 9A42     	 cmp r2,r3
 401 005e 04D2     	 bcs .L21
 279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       word_count = (uint32_t)freeSpace.b.txfspcavail;
 402              	 .loc 1 280 0
 403 0060 3B89     	 ldrh r3,[r7,#8]
 404 0062 BB61     	 str r3,[r7,#24]
 281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       byte_count = (uint32_t)word_count << (uint32_t)2U;
 405              	 .loc 1 281 0
 406 0064 BB69     	 ldr r3,[r7,#24]
 407 0066 9B00     	 lsls r3,r3,#2
 408 0068 FB61     	 str r3,[r7,#28]
 409              	.L21:
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* copy data dword wise */
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     for (i = 0U; i < word_count;ep->xferBuffer+= 4U)
 410              	 .loc 1 285 0
 411 006a 0023     	 movs r3,#0
 412 006c 3B61     	 str r3,[r7,#16]
 413 006e 0FE0     	 b .L22
 414              	.L23:
 286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       *fifo = *(uint32_t*)ep->xferBuffer;
 415              	 .loc 1 287 0 discriminator 3
 416 0070 7B68     	 ldr r3,[r7,#4]
 417 0072 D3F81E30 	 ldr r3,[r3,#30]
 418 0076 1A68     	 ldr r2,[r3]
 419 0078 FB68     	 ldr r3,[r7,#12]
 420 007a 1A60     	 str r2,[r3]
 288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       i++;
 421              	 .loc 1 288 0 discriminator 3
 422 007c 3B69     	 ldr r3,[r7,#16]
 423 007e 0133     	 adds r3,r3,#1
 424 0080 3B61     	 str r3,[r7,#16]
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 425              	 .loc 1 285 0 discriminator 3
 426 0082 7B68     	 ldr r3,[r7,#4]
 427 0084 D3F81E30 	 ldr r3,[r3,#30]
 428 0088 1A1D     	 adds r2,r3,#4
 429 008a 7B68     	 ldr r3,[r7,#4]
 430 008c C3F81E20 	 str r2,[r3,#30]
 431              	.L22:
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 432              	 .loc 1 285 0 is_stmt 0 discriminator 1
 433 0090 3A69     	 ldr r2,[r7,#16]
 434 0092 BB69     	 ldr r3,[r7,#24]
 435 0094 9A42     	 cmp r2,r3
 436 0096 EBD3     	 bcc .L23
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     result=byte_count;
 437              	 .loc 1 290 0 is_stmt 1
 438 0098 FB69     	 ldr r3,[r7,#28]
 439 009a 7B61     	 str r3,[r7,#20]
 440              	.L20:
 291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return result;
 441              	 .loc 1 292 0
 442 009c 7B69     	 ldr r3,[r7,#20]
 293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 443              	 .loc 1 293 0
 444 009e 1846     	 mov r0,r3
 445 00a0 2437     	 adds r7,r7,#36
 446              	.LCFI15:
 447              	 .cfi_def_cfa_offset 4
 448 00a2 BD46     	 mov sp,r7
 449              	.LCFI16:
 450              	 .cfi_def_cfa_register 13
 451              	 
 452 00a4 5DF8047B 	 ldr r7,[sp],#4
 453              	.LCFI17:
 454              	 .cfi_restore 7
 455              	 .cfi_def_cfa_offset 0
 456 00a8 7047     	 bx lr
 457              	.L26:
 458 00aa 00BF     	 .align 2
 459              	.L25:
 460 00ac 00000000 	 .word xmc_device
 461              	 .cfi_endproc
 462              	.LFE171:
 464              	 .section .text.XMC_USBD_lFlushTXFifo,"ax",%progbits
 465              	 .align 2
 466              	 .thumb
 467              	 .thumb_func
 469              	XMC_USBD_lFlushTXFifo:
 470              	.LFB172:
 294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Flush a tx fifo
 297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_num Fifo number to flush
 299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @note Use 0x10 as parameter to flush all tx fifos.
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushTXFifo(const uint8_t fifo_num) 
 303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 471              	 .loc 1 303 0
 472              	 .cfi_startproc
 473              	 
 474              	 
 475              	 
 476 0000 80B4     	 push {r7}
 477              	.LCFI18:
 478              	 .cfi_def_cfa_offset 4
 479              	 .cfi_offset 7,-4
 480 0002 85B0     	 sub sp,sp,#20
 481              	.LCFI19:
 482              	 .cfi_def_cfa_offset 24
 483 0004 00AF     	 add r7,sp,#0
 484              	.LCFI20:
 485              	 .cfi_def_cfa_register 7
 486 0006 0346     	 mov r3,r0
 487 0008 FB71     	 strb r3,[r7,#7]
 304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;
 488              	 .loc 1 306 0
 489 000a 0023     	 movs r3,#0
 490 000c BB60     	 str r3,[r7,#8]
 307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /*flush fifo */
 308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.b.txfflsh = 1U;
 491              	 .loc 1 308 0
 492 000e BB68     	 ldr r3,[r7,#8]
 493 0010 43F02003 	 orr r3,r3,#32
 494 0014 BB60     	 str r3,[r7,#8]
 309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.b.txfnum = fifo_num;
 495              	 .loc 1 309 0
 496 0016 FB79     	 ldrb r3,[r7,#7]
 497 0018 03F01F03 	 and r3,r3,#31
 498 001c DBB2     	 uxtb r3,r3
 499 001e 03F01F03 	 and r3,r3,#31
 500 0022 9B01     	 lsls r3,r3,#6
 501 0024 BA68     	 ldr r2,[r7,#8]
 502 0026 22F4F862 	 bic r2,r2,#1984
 503 002a 1343     	 orrs r3,r3,r2
 504 002c BB60     	 str r3,[r7,#8]
 310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 505              	 .loc 1 310 0
 506 002e 164B     	 ldr r3,.L32
 507 0030 D3F87031 	 ldr r3,[r3,#368]
 508 0034 BA68     	 ldr r2,[r7,#8]
 509 0036 1969     	 ldr r1,[r3,#16]
 510 0038 0021     	 movs r1,#0
 511 003a 0A43     	 orrs r2,r2,r1
 512 003c 1A61     	 str r2,[r3,#16]
 311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for (count = 0U;count < 1000U; count++){}
 513              	 .loc 1 311 0
 514 003e 0023     	 movs r3,#0
 515 0040 FB60     	 str r3,[r7,#12]
 516 0042 02E0     	 b .L28
 517              	.L29:
 518              	 .loc 1 311 0 is_stmt 0 discriminator 3
 519 0044 FB68     	 ldr r3,[r7,#12]
 520 0046 0133     	 adds r3,r3,#1
 521 0048 FB60     	 str r3,[r7,#12]
 522              	.L28:
 523              	 .loc 1 311 0 discriminator 1
 524 004a FB68     	 ldr r3,[r7,#12]
 525 004c B3F57A7F 	 cmp r3,#1000
 526 0050 F8D3     	 bcc .L29
 527              	.L30:
 312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   do
 313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****    data.d32 = xmc_device.global_register->grstctl;
 528              	 .loc 1 314 0 is_stmt 1 discriminator 1
 529 0052 0D4B     	 ldr r3,.L32
 530 0054 D3F87031 	 ldr r3,[r3,#368]
 531 0058 1B69     	 ldr r3,[r3,#16]
 532 005a BB60     	 str r3,[r7,#8]
 315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   } while (data.b.txfflsh);
 533              	 .loc 1 315 0 discriminator 1
 534 005c BB68     	 ldr r3,[r7,#8]
 535 005e 5B09     	 lsrs r3,r3,#5
 536 0060 03F00103 	 and r3,r3,#1
 537 0064 DBB2     	 uxtb r3,r3
 538 0066 002B     	 cmp r3,#0
 539 0068 F3D1     	 bne .L30
 316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     count = 0U;
 540              	 .loc 1 316 0
 541 006a 0023     	 movs r3,#0
 542 006c FB60     	 str r3,[r7,#12]
 317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 543              	 .loc 1 317 0
 544 006e 00BF     	 nop
 545              	.L31:
 546              	 .loc 1 317 0 is_stmt 0 discriminator 1
 547 0070 FB68     	 ldr r3,[r7,#12]
 548 0072 5A1C     	 adds r2,r3,#1
 549 0074 FA60     	 str r2,[r7,#12]
 550 0076 B3F57A7F 	 cmp r3,#1000
 551 007a F9D3     	 bcc .L31
 318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 552              	 .loc 1 321 0 is_stmt 1
 553 007c 1437     	 adds r7,r7,#20
 554              	.LCFI21:
 555              	 .cfi_def_cfa_offset 4
 556 007e BD46     	 mov sp,r7
 557              	.LCFI22:
 558              	 .cfi_def_cfa_register 13
 559              	 
 560 0080 5DF8047B 	 ldr r7,[sp],#4
 561              	.LCFI23:
 562              	 .cfi_restore 7
 563              	 .cfi_def_cfa_offset 0
 564 0084 7047     	 bx lr
 565              	.L33:
 566 0086 00BF     	 .align 2
 567              	.L32:
 568 0088 00000000 	 .word xmc_device
 569              	 .cfi_endproc
 570              	.LFE172:
 572              	 .section .text.XMC_USBD_lFlushRXFifo,"ax",%progbits
 573              	 .align 2
 574              	 .thumb
 575              	 .thumb_func
 577              	XMC_USBD_lFlushRXFifo:
 578              	.LFB173:
 322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Flush the rx fifo
 325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lFlushRXFifo(void) 
 327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 579              	 .loc 1 327 0
 580              	 .cfi_startproc
 581              	 
 582              	 
 583              	 
 584 0000 80B4     	 push {r7}
 585              	.LCFI24:
 586              	 .cfi_def_cfa_offset 4
 587              	 .cfi_offset 7,-4
 588 0002 83B0     	 sub sp,sp,#12
 589              	.LCFI25:
 590              	 .cfi_def_cfa_offset 16
 591 0004 00AF     	 add r7,sp,#0
 592              	.LCFI26:
 593              	 .cfi_def_cfa_register 7
 328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   volatile grstctl_t data;  
 329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t count;
 330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
 331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	data.d32 = 0U;
 594              	 .loc 1 331 0
 595 0006 0023     	 movs r3,#0
 596 0008 3B60     	 str r3,[r7]
 332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.b.rxfflsh = 1U;
 597              	 .loc 1 332 0
 598 000a 3B68     	 ldr r3,[r7]
 599 000c 43F01003 	 orr r3,r3,#16
 600 0010 3B60     	 str r3,[r7]
 333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* flush FIFO */
 334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grstctl = data.d32;
 601              	 .loc 1 334 0
 602 0012 164B     	 ldr r3,.L39
 603 0014 D3F87031 	 ldr r3,[r3,#368]
 604 0018 3A68     	 ldr r2,[r7]
 605 001a 1969     	 ldr r1,[r3,#16]
 606 001c 0021     	 movs r1,#0
 607 001e 0A43     	 orrs r2,r2,r1
 608 0020 1A61     	 str r2,[r3,#16]
 609              	.L37:
 335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   do
 336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     for (count = 0U; count < 1000U; count++){}
 610              	 .loc 1 337 0
 611 0022 0023     	 movs r3,#0
 612 0024 7B60     	 str r3,[r7,#4]
 613 0026 02E0     	 b .L35
 614              	.L36:
 615              	 .loc 1 337 0 is_stmt 0 discriminator 3
 616 0028 7B68     	 ldr r3,[r7,#4]
 617 002a 0133     	 adds r3,r3,#1
 618 002c 7B60     	 str r3,[r7,#4]
 619              	.L35:
 620              	 .loc 1 337 0 discriminator 1
 621 002e 7B68     	 ldr r3,[r7,#4]
 622 0030 B3F57A7F 	 cmp r3,#1000
 623 0034 F8D3     	 bcc .L36
 338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.global_register->grstctl;
 624              	 .loc 1 338 0 is_stmt 1
 625 0036 0D4B     	 ldr r3,.L39
 626 0038 D3F87031 	 ldr r3,[r3,#368]
 627 003c 1B69     	 ldr r3,[r3,#16]
 628 003e 3B60     	 str r3,[r7]
 339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   } while (data.b.rxfflsh);
 629              	 .loc 1 339 0
 630 0040 3B68     	 ldr r3,[r7]
 631 0042 1B09     	 lsrs r3,r3,#4
 632 0044 03F00103 	 and r3,r3,#1
 633 0048 DBB2     	 uxtb r3,r3
 634 004a 002B     	 cmp r3,#0
 635 004c E9D1     	 bne .L37
 340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   count = 0U;
 636              	 .loc 1 340 0
 637 004e 0023     	 movs r3,#0
 638 0050 7B60     	 str r3,[r7,#4]
 341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   while (count++ < 1000U)
 639              	 .loc 1 341 0
 640 0052 00BF     	 nop
 641              	.L38:
 642              	 .loc 1 341 0 is_stmt 0 discriminator 1
 643 0054 7B68     	 ldr r3,[r7,#4]
 644 0056 5A1C     	 adds r2,r3,#1
 645 0058 7A60     	 str r2,[r7,#4]
 646 005a B3F57A7F 	 cmp r3,#1000
 647 005e F9D3     	 bcc .L38
 342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* wait 3 phy clocks */
 344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 648              	 .loc 1 345 0 is_stmt 1
 649 0060 0C37     	 adds r7,r7,#12
 650              	.LCFI27:
 651              	 .cfi_def_cfa_offset 4
 652 0062 BD46     	 mov sp,r7
 653              	.LCFI28:
 654              	 .cfi_def_cfa_register 13
 655              	 
 656 0064 5DF8047B 	 ldr r7,[sp],#4
 657              	.LCFI29:
 658              	 .cfi_restore 7
 659              	 .cfi_def_cfa_offset 0
 660 0068 7047     	 bx lr
 661              	.L40:
 662 006a 00BF     	 .align 2
 663              	.L39:
 664 006c 00000000 	 .word xmc_device
 665              	 .cfi_endproc
 666              	.LFE173:
 668              	 .section .text.XMC_USBD_lAssignTXFifo,"ax",%progbits
 669              	 .align 2
 670              	 .thumb
 671              	 .thumb_func
 673              	XMC_USBD_lAssignTXFifo:
 674              	.LFB174:
 346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*
 348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Support Functions
 349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Assign a free tx fifo
 353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * A free tx fifo will be searched and the number will be returned.
 355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @return Fifo number for a free fifo
 357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static uint8_t XMC_USBD_lAssignTXFifo(void) 
 359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 675              	 .loc 1 359 0
 676              	 .cfi_startproc
 677              	 
 678              	 
 679              	 
 680 0000 80B4     	 push {r7}
 681              	.LCFI30:
 682              	 .cfi_def_cfa_offset 4
 683              	 .cfi_offset 7,-4
 684 0002 83B0     	 sub sp,sp,#12
 685              	.LCFI31:
 686              	 .cfi_def_cfa_offset 16
 687 0004 00AF     	 add r7,sp,#0
 688              	.LCFI32:
 689              	 .cfi_def_cfa_register 7
 360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint16_t mask = 1U;
 690              	 .loc 1 360 0
 691 0006 0123     	 movs r3,#1
 692 0008 FB80     	 strh r3,[r7,#6]
 361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint8_t i = 0U;
 693              	 .loc 1 361 0
 694 000a 0023     	 movs r3,#0
 695 000c 7B71     	 strb r3,[r7,#5]
 362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint8_t result = 0U;
 696              	 .loc 1 362 0
 697 000e 0023     	 movs r3,#0
 698 0010 3B71     	 strb r3,[r7,#4]
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 699              	 .loc 1 363 0
 700 0012 05E0     	 b .L42
 701              	.L44:
 364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     mask = (uint16_t)(mask << 1U);
 702              	 .loc 1 365 0
 703 0014 FB88     	 ldrh r3,[r7,#6]
 704 0016 5B00     	 lsls r3,r3,#1
 705 0018 FB80     	 strh r3,[r7,#6]
 366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     i++;
 706              	 .loc 1 366 0
 707 001a 7B79     	 ldrb r3,[r7,#5]
 708 001c 0133     	 adds r3,r3,#1
 709 001e 7B71     	 strb r3,[r7,#5]
 710              	.L42:
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 711              	 .loc 1 363 0
 712 0020 7B79     	 ldrb r3,[r7,#5]
 713 0022 062B     	 cmp r3,#6
 714 0024 08D8     	 bhi .L43
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   while( (i < (uint8_t)XMC_USBD_NUM_TX_FIFOS)&&((xmc_device.txfifomsk & mask) != 0U))
 715              	 .loc 1 363 0 is_stmt 0 discriminator 1
 716 0026 124B     	 ldr r3,.L47
 717 0028 B3F8CC31 	 ldrh r3,[r3,#460]
 718 002c 9AB2     	 uxth r2,r3
 719 002e FB88     	 ldrh r3,[r7,#6]
 720 0030 1340     	 ands r3,r3,r2
 721 0032 9BB2     	 uxth r3,r3
 722 0034 002B     	 cmp r3,#0
 723 0036 EDD1     	 bne .L44
 724              	.L43:
 367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if ((xmc_device.txfifomsk & mask) == 0U)
 725              	 .loc 1 368 0 is_stmt 1
 726 0038 0D4B     	 ldr r3,.L47
 727 003a B3F8CC31 	 ldrh r3,[r3,#460]
 728 003e 9AB2     	 uxth r2,r3
 729 0040 FB88     	 ldrh r3,[r7,#6]
 730 0042 1340     	 ands r3,r3,r2
 731 0044 9BB2     	 uxth r3,r3
 732 0046 002B     	 cmp r3,#0
 733 0048 0BD1     	 bne .L45
 369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.txfifomsk |= mask;
 734              	 .loc 1 370 0
 735 004a 094B     	 ldr r3,.L47
 736 004c B3F8CC31 	 ldrh r3,[r3,#460]
 737 0050 9AB2     	 uxth r2,r3
 738 0052 FB88     	 ldrh r3,[r7,#6]
 739 0054 1343     	 orrs r3,r3,r2
 740 0056 9AB2     	 uxth r2,r3
 741 0058 054B     	 ldr r3,.L47
 742 005a A3F8CC21 	 strh r2,[r3,#460]
 371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     result=i;
 743              	 .loc 1 371 0
 744 005e 7B79     	 ldrb r3,[r7,#5]
 745 0060 3B71     	 strb r3,[r7,#4]
 746              	.L45:
 372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return result;
 747              	 .loc 1 373 0
 748 0062 3B79     	 ldrb r3,[r7,#4]
 374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 749              	 .loc 1 374 0
 750 0064 1846     	 mov r0,r3
 751 0066 0C37     	 adds r7,r7,#12
 752              	.LCFI33:
 753              	 .cfi_def_cfa_offset 4
 754 0068 BD46     	 mov sp,r7
 755              	.LCFI34:
 756              	 .cfi_def_cfa_register 13
 757              	 
 758 006a 5DF8047B 	 ldr r7,[sp],#4
 759              	.LCFI35:
 760              	 .cfi_restore 7
 761              	 .cfi_def_cfa_offset 0
 762 006e 7047     	 bx lr
 763              	.L48:
 764              	 .align 2
 765              	.L47:
 766 0070 00000000 	 .word xmc_device
 767              	 .cfi_endproc
 768              	.LFE174:
 770              	 .section .text.XMC_USBD_lUnassignFifo,"ax",%progbits
 771              	 .align 2
 772              	 .thumb
 773              	 .thumb_func
 775              	XMC_USBD_lUnassignFifo:
 776              	.LFB175:
 375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Free a tx fifo
 378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Mark an used tx fifo as free.
 380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @param[in] fifo_nr Fifo number to free
 381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lUnassignFifo(const uint8_t fifo_nr) 
 383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 777              	 .loc 1 383 0
 778              	 .cfi_startproc
 779              	 
 780              	 
 781              	 
 782 0000 80B4     	 push {r7}
 783              	.LCFI36:
 784              	 .cfi_def_cfa_offset 4
 785              	 .cfi_offset 7,-4
 786 0002 83B0     	 sub sp,sp,#12
 787              	.LCFI37:
 788              	 .cfi_def_cfa_offset 16
 789 0004 00AF     	 add r7,sp,#0
 790              	.LCFI38:
 791              	 .cfi_def_cfa_register 7
 792 0006 0346     	 mov r3,r0
 793 0008 FB71     	 strb r3,[r7,#7]
 384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.txfifomsk = (uint16_t)((uint32_t)xmc_device.txfifomsk & (uint32_t)(~((uint32_t)((uint3
 794              	 .loc 1 384 0
 795 000a 0A4B     	 ldr r3,.L50
 796 000c B3F8CC31 	 ldrh r3,[r3,#460]
 797 0010 9AB2     	 uxth r2,r3
 798 0012 FB79     	 ldrb r3,[r7,#7]
 799 0014 0121     	 movs r1,#1
 800 0016 01FA03F3 	 lsl r3,r1,r3
 801 001a 9BB2     	 uxth r3,r3
 802 001c DB43     	 mvns r3,r3
 803 001e 9BB2     	 uxth r3,r3
 804 0020 1340     	 ands r3,r3,r2
 805 0022 9AB2     	 uxth r2,r3
 806 0024 034B     	 ldr r3,.L50
 807 0026 A3F8CC21 	 strh r2,[r3,#460]
 385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 808              	 .loc 1 385 0
 809 002a 0C37     	 adds r7,r7,#12
 810              	.LCFI39:
 811              	 .cfi_def_cfa_offset 4
 812 002c BD46     	 mov sp,r7
 813              	.LCFI40:
 814              	 .cfi_def_cfa_register 13
 815              	 
 816 002e 5DF8047B 	 ldr r7,[sp],#4
 817              	.LCFI41:
 818              	 .cfi_restore 7
 819              	 .cfi_def_cfa_offset 0
 820 0032 7047     	 bx lr
 821              	.L51:
 822              	 .align 2
 823              	.L50:
 824 0034 00000000 	 .word xmc_device
 825              	 .cfi_endproc
 826              	.LFE175:
 828              	 .section .text.XMC_USBD_lStartReadXfer,"ax",%progbits
 829              	 .align 2
 830              	 .thumb
 831              	 .thumb_func
 833              	XMC_USBD_lStartReadXfer:
 834              	.LFB176:
 386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Start a transfer for an out endpoint
 389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint, the out endpoint registers will be programmed
 391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * to start a new out transfer.
 392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @note No checking of the transfer values are done in this function. Be sure,
 394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * that the transfer values are reasonable (e.g. buffer size is not exceeded).
 395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartReadXfer(XMC_USBD_EP_t *const ep) 
 399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 835              	 .loc 1 399 0
 836              	 .cfi_startproc
 837              	 
 838              	 
 839              	 
 840 0000 80B4     	 push {r7}
 841              	.LCFI42:
 842              	 .cfi_def_cfa_offset 4
 843              	 .cfi_offset 7,-4
 844 0002 87B0     	 sub sp,sp,#28
 845              	.LCFI43:
 846              	 .cfi_def_cfa_offset 32
 847 0004 00AF     	 add r7,sp,#0
 848              	.LCFI44:
 849              	 .cfi_def_cfa_register 7
 850 0006 7860     	 str r0,[r7,#4]
 400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t data;
 401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
 403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.d32 =  0U;
 851              	 .loc 1 403 0
 852 0008 0023     	 movs r3,#0
 853 000a 3B61     	 str r3,[r7,#16]
 404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength) > ep->maxTransferSize)
 854              	 .loc 1 404 0
 855 000c 7B68     	 ldr r3,[r7,#4]
 856 000e D3F82A20 	 ldr r2,[r3,#42]
 857 0012 7B68     	 ldr r3,[r7,#4]
 858 0014 D3F82230 	 ldr r3,[r3,#34]
 859 0018 D21A     	 subs r2,r2,r3
 860 001a 7B68     	 ldr r3,[r7,#4]
 861 001c D978     	 ldrb r1,[r3,#3]
 862 001e 8908     	 lsrs r1,r1,#2
 863 0020 C9B2     	 uxtb r1,r1
 864 0022 1879     	 ldrb r0,[r3,#4]
 865 0024 8001     	 lsls r0,r0,#6
 866 0026 0143     	 orrs r1,r1,r0
 867 0028 5B79     	 ldrb r3,[r3,#5]
 868 002a 03F01F03 	 and r3,r3,#31
 869 002e 9B03     	 lsls r3,r3,#14
 870 0030 0B43     	 orrs r3,r3,r1
 871 0032 9A42     	 cmp r2,r3
 872 0034 13D9     	 bls .L53
 405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 873              	 .loc 1 406 0
 874 0036 7B68     	 ldr r3,[r7,#4]
 875 0038 D3F82220 	 ldr r2,[r3,#34]
 876 003c 7B68     	 ldr r3,[r7,#4]
 877 003e D978     	 ldrb r1,[r3,#3]
 878 0040 8908     	 lsrs r1,r1,#2
 879 0042 C9B2     	 uxtb r1,r1
 880 0044 1879     	 ldrb r0,[r3,#4]
 881 0046 8001     	 lsls r0,r0,#6
 882 0048 0143     	 orrs r1,r1,r0
 883 004a 5B79     	 ldrb r3,[r3,#5]
 884 004c 03F01F03 	 and r3,r3,#31
 885 0050 9B03     	 lsls r3,r3,#14
 886 0052 0B43     	 orrs r3,r3,r1
 887 0054 1A44     	 add r2,r2,r3
 888 0056 7B68     	 ldr r3,[r7,#4]
 889 0058 C3F82220 	 str r2,[r3,#34]
 890 005c 05E0     	 b .L54
 891              	.L53:
 407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
 409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 892              	 .loc 1 410 0
 893 005e 7B68     	 ldr r3,[r7,#4]
 894 0060 D3F82A20 	 ldr r2,[r3,#42]
 895 0064 7B68     	 ldr r3,[r7,#4]
 896 0066 C3F82220 	 str r2,[r3,#34]
 897              	.L54:
 411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.number == 0U)
 898              	 .loc 1 412 0
 899 006a 7B68     	 ldr r3,[r7,#4]
 900 006c 1B78     	 ldrb r3,[r3]
 901 006e 03F00F03 	 and r3,r3,#15
 902 0072 DBB2     	 uxtb r3,r3
 903 0074 002B     	 cmp r3,#0
 904 0076 1AD1     	 bne .L55
 905              	.LBB2:
 413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	/* Setup the endpoint to receive 3 setup packages and one normal package.*/
 415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	/* Cast the data pointer to use only one variable */
 416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     deptsiz0_data_t *ep0_data = (deptsiz0_data_t*)&data;
 906              	 .loc 1 416 0
 907 0078 07F11003 	 add r3,r7,#16
 908 007c 7B61     	 str r3,[r7,#20]
 417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep0_data->b.pktcnt = 0x1U;
 909              	 .loc 1 417 0
 910 007e 7A69     	 ldr r2,[r7,#20]
 911 0080 9378     	 ldrb r3,[r2,#2]
 912 0082 0121     	 movs r1,#1
 913 0084 61F3C403 	 bfi r3,r1,#3,#2
 914 0088 9370     	 strb r3,[r2,#2]
 418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep0_data->b.supcnt = 0x3U;
 915              	 .loc 1 418 0
 916 008a 7A69     	 ldr r2,[r7,#20]
 917 008c D378     	 ldrb r3,[r2,#3]
 918 008e 43F06003 	 orr r3,r3,#96
 919 0092 D370     	 strb r3,[r2,#3]
 419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep0_data->b.xfersize = (uint8_t)ep->xferTotal;
 920              	 .loc 1 419 0
 921 0094 7B68     	 ldr r3,[r7,#4]
 922 0096 D3F82A30 	 ldr r3,[r3,#42]
 923 009a DBB2     	 uxtb r3,r3
 924 009c 03F07F03 	 and r3,r3,#127
 925 00a0 D9B2     	 uxtb r1,r3
 926 00a2 7A69     	 ldr r2,[r7,#20]
 927 00a4 1378     	 ldrb r3,[r2]
 928 00a6 61F30603 	 bfi r3,r1,#0,#7
 929 00aa 1370     	 strb r3,[r2]
 930              	.LBE2:
 931 00ac 42E0     	 b .L56
 932              	.L55:
 420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
 422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* If requested length is zero, just receive one zero length packet */
 424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (ep->xferLength == 0U)
 933              	 .loc 1 424 0
 934 00ae 7B68     	 ldr r3,[r7,#4]
 935 00b0 D3F82230 	 ldr r3,[r3,#34]
 936 00b4 002B     	 cmp r3,#0
 937 00b6 09D1     	 bne .L57
 425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       data.b.xfersize = 0U;
 938              	 .loc 1 426 0
 939 00b8 3B69     	 ldr r3,[r7,#16]
 940 00ba 6FF31203 	 bfc r3,#0,#19
 941 00be 3B61     	 str r3,[r7,#16]
 427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = 1U;
 942              	 .loc 1 427 0
 943 00c0 7B8A     	 ldrh r3,[r7,#18]
 944 00c2 0122     	 movs r2,#1
 945 00c4 62F3CC03 	 bfi r3,r2,#3,#10
 946 00c8 7B82     	 strh r3,[r7,#18]
 947 00ca 33E0     	 b .L56
 948              	.L57:
 428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     else
 430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /* setup endpoint to recive a amount of packages by given size */
 432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       data.b.pktcnt = (uint16_t)(((ep->xferLength - ep->xferCount) + (ep->maxPacketSize -(uint32_t)
 949              	 .loc 1 432 0
 950 00cc 7B68     	 ldr r3,[r7,#4]
 951 00ce D3F82220 	 ldr r2,[r3,#34]
 952 00d2 7B68     	 ldr r3,[r7,#4]
 953 00d4 D3F82630 	 ldr r3,[r3,#38]
 954 00d8 D21A     	 subs r2,r2,r3
 955 00da 7B68     	 ldr r3,[r7,#4]
 956 00dc 9978     	 ldrb r1,[r3,#2]
 957 00de C908     	 lsrs r1,r1,#3
 958 00e0 C9B2     	 uxtb r1,r1
 959 00e2 DB78     	 ldrb r3,[r3,#3]
 960 00e4 03F00303 	 and r3,r3,#3
 961 00e8 5B01     	 lsls r3,r3,#5
 962 00ea 0B43     	 orrs r3,r3,r1
 963 00ec DBB2     	 uxtb r3,r3
 964 00ee 1344     	 add r3,r3,r2
 965 00f0 5A1E     	 subs r2,r3,#1
 966 00f2 7B68     	 ldr r3,[r7,#4]
 967 00f4 9978     	 ldrb r1,[r3,#2]
 968 00f6 C908     	 lsrs r1,r1,#3
 969 00f8 C9B2     	 uxtb r1,r1
 970 00fa DB78     	 ldrb r3,[r3,#3]
 971 00fc 03F00303 	 and r3,r3,#3
 972 0100 5B01     	 lsls r3,r3,#5
 973 0102 0B43     	 orrs r3,r3,r1
 974 0104 DBB2     	 uxtb r3,r3
 975 0106 B2FBF3F3 	 udiv r3,r2,r3
 976 010a 9BB2     	 uxth r3,r3
 977 010c C3F30903 	 ubfx r3,r3,#0,#10
 978 0110 9AB2     	 uxth r2,r3
 979 0112 7B8A     	 ldrh r3,[r7,#18]
 980 0114 62F3CC03 	 bfi r3,r2,#3,#10
 981 0118 7B82     	 strh r3,[r7,#18]
 433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       data.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 982              	 .loc 1 433 0
 983 011a 7B68     	 ldr r3,[r7,#4]
 984 011c D3F82220 	 ldr r2,[r3,#34]
 985 0120 7B68     	 ldr r3,[r7,#4]
 986 0122 D3F82630 	 ldr r3,[r3,#38]
 987 0126 D31A     	 subs r3,r2,r3
 988 0128 C3F31202 	 ubfx r2,r3,#0,#19
 989 012c 3B69     	 ldr r3,[r7,#16]
 990 012e 62F31203 	 bfi r3,r2,#0,#19
 991 0132 3B61     	 str r3,[r7,#16]
 992              	.L56:
 434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 993              	 .loc 1 436 0
 994 0134 264B     	 ldr r3,.L59
 995 0136 1B68     	 ldr r3,[r3]
 996 0138 5B7B     	 ldrb r3,[r3,#13]
 997 013a 002B     	 cmp r3,#0
 998 013c 11D1     	 bne .L58
 437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* Programm dma address if needed */
 439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepdma = (uint32_t)(ep->xfe
 999              	 .loc 1 439 0
 1000 013e 7B68     	 ldr r3,[r7,#4]
 1001 0140 1B78     	 ldrb r3,[r3]
 1002 0142 C3F30303 	 ubfx r3,r3,#0,#4
 1003 0146 DBB2     	 uxtb r3,r3
 1004 0148 224A     	 ldr r2,.L59+4
 1005 014a 6433     	 adds r3,r3,#100
 1006 014c 9B00     	 lsls r3,r3,#2
 1007 014e 1344     	 add r3,r3,r2
 1008 0150 5B68     	 ldr r3,[r3,#4]
 1009 0152 7A68     	 ldr r2,[r7,#4]
 1010 0154 D2F81E20 	 ldr r2,[r2,#30]
 1011 0158 1146     	 mov r1,r2
 1012 015a 5A69     	 ldr r2,[r3,#20]
 1013 015c 0022     	 movs r2,#0
 1014 015e 0A43     	 orrs r2,r2,r1
 1015 0160 5A61     	 str r2,[r3,#20]
 1016              	.L58:
 440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* setup endpoint size and enable endpoint */
 442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doeptsiz = data.d32;
 1017              	 .loc 1 442 0
 1018 0162 7B68     	 ldr r3,[r7,#4]
 1019 0164 1B78     	 ldrb r3,[r3]
 1020 0166 C3F30303 	 ubfx r3,r3,#0,#4
 1021 016a DBB2     	 uxtb r3,r3
 1022 016c 194A     	 ldr r2,.L59+4
 1023 016e 6433     	 adds r3,r3,#100
 1024 0170 9B00     	 lsls r3,r3,#2
 1025 0172 1344     	 add r3,r3,r2
 1026 0174 5B68     	 ldr r3,[r3,#4]
 1027 0176 3A69     	 ldr r2,[r7,#16]
 1028 0178 1969     	 ldr r1,[r3,#16]
 1029 017a 0021     	 movs r1,#0
 1030 017c 0A43     	 orrs r2,r2,r1
 1031 017e 1A61     	 str r2,[r3,#16]
 443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  
 444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   epctl.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 1032              	 .loc 1 444 0
 1033 0180 7B68     	 ldr r3,[r7,#4]
 1034 0182 1B78     	 ldrb r3,[r3]
 1035 0184 C3F30303 	 ubfx r3,r3,#0,#4
 1036 0188 DBB2     	 uxtb r3,r3
 1037 018a 124A     	 ldr r2,.L59+4
 1038 018c 6433     	 adds r3,r3,#100
 1039 018e 9B00     	 lsls r3,r3,#2
 1040 0190 1344     	 add r3,r3,r2
 1041 0192 5B68     	 ldr r3,[r3,#4]
 1042 0194 1B68     	 ldr r3,[r3]
 1043 0196 FB60     	 str r3,[r7,#12]
 445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   epctl.b.cnak = 1U;
 1044              	 .loc 1 445 0
 1045 0198 FB7B     	 ldrb r3,[r7,#15]
 1046 019a 43F00403 	 orr r3,r3,#4
 1047 019e FB73     	 strb r3,[r7,#15]
 446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   epctl.b.epena = 1U;
 1048              	 .loc 1 446 0
 1049 01a0 FB7B     	 ldrb r3,[r7,#15]
 1050 01a2 43F08003 	 orr r3,r3,#128
 1051 01a6 FB73     	 strb r3,[r7,#15]
 447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = epctl.d32;
 1052              	 .loc 1 447 0
 1053 01a8 7B68     	 ldr r3,[r7,#4]
 1054 01aa 1B78     	 ldrb r3,[r3]
 1055 01ac C3F30303 	 ubfx r3,r3,#0,#4
 1056 01b0 DBB2     	 uxtb r3,r3
 1057 01b2 084A     	 ldr r2,.L59+4
 1058 01b4 6433     	 adds r3,r3,#100
 1059 01b6 9B00     	 lsls r3,r3,#2
 1060 01b8 1344     	 add r3,r3,r2
 1061 01ba 5B68     	 ldr r3,[r3,#4]
 1062 01bc FA68     	 ldr r2,[r7,#12]
 1063 01be 1968     	 ldr r1,[r3]
 1064 01c0 0021     	 movs r1,#0
 1065 01c2 0A43     	 orrs r2,r2,r1
 1066 01c4 1A60     	 str r2,[r3]
 448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 1067              	 .loc 1 448 0
 1068 01c6 1C37     	 adds r7,r7,#28
 1069              	.LCFI45:
 1070              	 .cfi_def_cfa_offset 4
 1071 01c8 BD46     	 mov sp,r7
 1072              	.LCFI46:
 1073              	 .cfi_def_cfa_register 13
 1074              	 
 1075 01ca 5DF8047B 	 ldr r7,[sp],#4
 1076              	.LCFI47:
 1077              	 .cfi_restore 7
 1078              	 .cfi_def_cfa_offset 0
 1079 01ce 7047     	 bx lr
 1080              	.L60:
 1081              	 .align 2
 1082              	.L59:
 1083 01d0 00000000 	 .word usbd_init
 1084 01d4 00000000 	 .word xmc_device
 1085              	 .cfi_endproc
 1086              	.LFE176:
 1088              	 .section .text.XMC_USBD_lStartWriteXfer,"ax",%progbits
 1089              	 .align 2
 1090              	 .thumb
 1091              	 .thumb_func
 1093              	XMC_USBD_lStartWriteXfer:
 1094              	.LFB177:
 449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Start a new in transfer
 452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Based on the transfer values of the endpoint the in endpoint registers will be programmed
 454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * to start a new in transfer
 455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @param[in] ep Endpoint to start the transfer
 457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lStartWriteXfer(XMC_USBD_EP_t *const ep) 
 459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 1095              	 .loc 1 459 0
 1096              	 .cfi_startproc
 1097              	 
 1098              	 
 1099              	 
 1100 0000 80B4     	 push {r7}
 1101              	.LCFI48:
 1102              	 .cfi_def_cfa_offset 4
 1103              	 .cfi_offset 7,-4
 1104 0002 85B0     	 sub sp,sp,#20
 1105              	.LCFI49:
 1106              	 .cfi_def_cfa_offset 24
 1107 0004 00AF     	 add r7,sp,#0
 1108              	.LCFI50:
 1109              	 .cfi_def_cfa_register 7
 1110 0006 7860     	 str r0,[r7,#4]
 460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t size;
 461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   depctl_data_t ctl;
 462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
 463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   size.d32 = 0U;  
 1111              	 .loc 1 463 0
 1112 0008 0023     	 movs r3,#0
 1113 000a FB60     	 str r3,[r7,#12]
 464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ctl.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 1114              	 .loc 1 464 0
 1115 000c 7B68     	 ldr r3,[r7,#4]
 1116 000e 1B78     	 ldrb r3,[r3]
 1117 0010 C3F30303 	 ubfx r3,r3,#0,#4
 1118 0014 DBB2     	 uxtb r3,r3
 1119 0016 784A     	 ldr r2,.L69
 1120 0018 5E33     	 adds r3,r3,#94
 1121 001a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1122 001e 1B68     	 ldr r3,[r3]
 1123 0020 BB60     	 str r3,[r7,#8]
 465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if ((ep->xferTotal - ep->xferLength)  < ep->maxTransferSize)
 1124              	 .loc 1 466 0
 1125 0022 7B68     	 ldr r3,[r7,#4]
 1126 0024 D3F82A20 	 ldr r2,[r3,#42]
 1127 0028 7B68     	 ldr r3,[r7,#4]
 1128 002a D3F82230 	 ldr r3,[r3,#34]
 1129 002e D21A     	 subs r2,r2,r3
 1130 0030 7B68     	 ldr r3,[r7,#4]
 1131 0032 D978     	 ldrb r1,[r3,#3]
 1132 0034 8908     	 lsrs r1,r1,#2
 1133 0036 C9B2     	 uxtb r1,r1
 1134 0038 1879     	 ldrb r0,[r3,#4]
 1135 003a 8001     	 lsls r0,r0,#6
 1136 003c 0143     	 orrs r1,r1,r0
 1137 003e 5B79     	 ldrb r3,[r3,#5]
 1138 0040 03F01F03 	 and r3,r3,#31
 1139 0044 9B03     	 lsls r3,r3,#14
 1140 0046 0B43     	 orrs r3,r3,r1
 1141 0048 9A42     	 cmp r2,r3
 1142 004a 06D2     	 bcs .L62
 467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferLength = ep->xferTotal;
 1143              	 .loc 1 468 0
 1144 004c 7B68     	 ldr r3,[r7,#4]
 1145 004e D3F82A20 	 ldr r2,[r3,#42]
 1146 0052 7B68     	 ldr r3,[r7,#4]
 1147 0054 C3F82220 	 str r2,[r3,#34]
 1148 0058 12E0     	 b .L63
 1149              	.L62:
 469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
 471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferLength += ep->maxTransferSize;
 1150              	 .loc 1 472 0
 1151 005a 7B68     	 ldr r3,[r7,#4]
 1152 005c D3F82220 	 ldr r2,[r3,#34]
 1153 0060 7B68     	 ldr r3,[r7,#4]
 1154 0062 D978     	 ldrb r1,[r3,#3]
 1155 0064 8908     	 lsrs r1,r1,#2
 1156 0066 C9B2     	 uxtb r1,r1
 1157 0068 1879     	 ldrb r0,[r3,#4]
 1158 006a 8001     	 lsls r0,r0,#6
 1159 006c 0143     	 orrs r1,r1,r0
 1160 006e 5B79     	 ldrb r3,[r3,#5]
 1161 0070 03F01F03 	 and r3,r3,#31
 1162 0074 9B03     	 lsls r3,r3,#14
 1163 0076 0B43     	 orrs r3,r3,r1
 1164 0078 1A44     	 add r2,r2,r3
 1165 007a 7B68     	 ldr r3,[r7,#4]
 1166 007c C3F82220 	 str r2,[r3,#34]
 1167              	.L63:
 473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (ep->xferLength == 0U)
 1168              	 .loc 1 474 0
 1169 0080 7B68     	 ldr r3,[r7,#4]
 1170 0082 D3F82230 	 ldr r3,[r3,#34]
 1171 0086 002B     	 cmp r3,#0
 1172 0088 09D1     	 bne .L64
 475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     size.b.xfersize = 0U;
 1173              	 .loc 1 476 0
 1174 008a FB68     	 ldr r3,[r7,#12]
 1175 008c 6FF31203 	 bfc r3,#0,#19
 1176 0090 FB60     	 str r3,[r7,#12]
 477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     size.b.pktcnt = 1U;
 1177              	 .loc 1 477 0
 1178 0092 FB89     	 ldrh r3,[r7,#14]
 1179 0094 0122     	 movs r2,#1
 1180 0096 62F3CC03 	 bfi r3,r2,#3,#10
 1181 009a FB81     	 strh r3,[r7,#14]
 1182 009c 82E0     	 b .L65
 1183              	.L64:
 478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
 480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (ep->address_u.address_st.number == 0U)
 1184              	 .loc 1 481 0
 1185 009e 7B68     	 ldr r3,[r7,#4]
 1186 00a0 1B78     	 ldrb r3,[r3]
 1187 00a2 03F00F03 	 and r3,r3,#15
 1188 00a6 DBB2     	 uxtb r3,r3
 1189 00a8 002B     	 cmp r3,#0
 1190 00aa 12D1     	 bne .L66
 482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = 1U;
 1191              	 .loc 1 483 0
 1192 00ac FB89     	 ldrh r3,[r7,#14]
 1193 00ae 0122     	 movs r2,#1
 1194 00b0 62F3CC03 	 bfi r3,r2,#3,#10
 1195 00b4 FB81     	 strh r3,[r7,#14]
 484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /* ep->maxXferSize equals maxPacketSize */
 485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       size.b.xfersize = (uint32_t)(ep->xferLength - ep->xferCount);
 1196              	 .loc 1 485 0
 1197 00b6 7B68     	 ldr r3,[r7,#4]
 1198 00b8 D3F82220 	 ldr r2,[r3,#34]
 1199 00bc 7B68     	 ldr r3,[r7,#4]
 1200 00be D3F82630 	 ldr r3,[r3,#38]
 1201 00c2 D31A     	 subs r3,r2,r3
 1202 00c4 C3F31202 	 ubfx r2,r3,#0,#19
 1203 00c8 FB68     	 ldr r3,[r7,#12]
 1204 00ca 62F31203 	 bfi r3,r2,#0,#19
 1205 00ce FB60     	 str r3,[r7,#12]
 1206 00d0 39E0     	 b .L67
 1207              	.L66:
 486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     else
 488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       size.b.xfersize =(uint32_t)(ep->xferLength - ep->xferCount);
 1208              	 .loc 1 489 0
 1209 00d2 7B68     	 ldr r3,[r7,#4]
 1210 00d4 D3F82220 	 ldr r2,[r3,#34]
 1211 00d8 7B68     	 ldr r3,[r7,#4]
 1212 00da D3F82630 	 ldr r3,[r3,#38]
 1213 00de D31A     	 subs r3,r2,r3
 1214 00e0 C3F31202 	 ubfx r2,r3,#0,#19
 1215 00e4 FB68     	 ldr r3,[r7,#12]
 1216 00e6 62F31203 	 bfi r3,r2,#0,#19
 1217 00ea FB60     	 str r3,[r7,#12]
 490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1218              	 .loc 1 490 0
 1219 00ec 7B68     	 ldr r3,[r7,#4]
 1220 00ee D3F82230 	 ldr r3,[r3,#34]
 1221 00f2 9AB2     	 uxth r2,r3
 1222 00f4 7B68     	 ldr r3,[r7,#4]
 1223 00f6 D3F82630 	 ldr r3,[r3,#38]
 1224 00fa 9BB2     	 uxth r3,r3
 1225 00fc D31A     	 subs r3,r2,r3
 1226 00fe 9BB2     	 uxth r3,r3
 1227 0100 1946     	 mov r1,r3
 1228 0102 7B68     	 ldr r3,[r7,#4]
 1229 0104 9A78     	 ldrb r2,[r3,#2]
 1230 0106 D208     	 lsrs r2,r2,#3
 1231 0108 D2B2     	 uxtb r2,r2
 1232 010a DB78     	 ldrb r3,[r3,#3]
 1233 010c 03F00303 	 and r3,r3,#3
 1234 0110 5B01     	 lsls r3,r3,#5
 1235 0112 1343     	 orrs r3,r3,r2
 1236 0114 DBB2     	 uxtb r3,r3
 1237 0116 9BB2     	 uxth r3,r3
 1238 0118 013B     	 subs r3,r3,#1
 1239 011a 9BB2     	 uxth r3,r3
 1240 011c CA18     	 adds r2,r1,r3
 491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     		 ep->maxPacketSize);
 1241              	 .loc 1 491 0
 1242 011e 7B68     	 ldr r3,[r7,#4]
 1243 0120 9978     	 ldrb r1,[r3,#2]
 1244 0122 C908     	 lsrs r1,r1,#3
 1245 0124 C9B2     	 uxtb r1,r1
 1246 0126 DB78     	 ldrb r3,[r3,#3]
 1247 0128 03F00303 	 and r3,r3,#3
 1248 012c 5B01     	 lsls r3,r3,#5
 1249 012e 0B43     	 orrs r3,r3,r1
 1250 0130 DBB2     	 uxtb r3,r3
 490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       size.b.pktcnt = (uint16_t)(((uint16_t)(ep->xferLength - ep->xferCount) + (uint16_t)((uint16_t
 1251              	 .loc 1 490 0
 1252 0132 92FBF3F3 	 sdiv r3,r2,r3
 1253 0136 9BB2     	 uxth r3,r3
 1254 0138 C3F30903 	 ubfx r3,r3,#0,#10
 1255 013c 9AB2     	 uxth r2,r3
 1256 013e FB89     	 ldrh r3,[r7,#14]
 1257 0140 62F3CC03 	 bfi r3,r2,#3,#10
 1258 0144 FB81     	 strh r3,[r7,#14]
 1259              	.L67:
 492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1260              	 .loc 1 493 0
 1261 0146 2D4B     	 ldr r3,.L69+4
 1262 0148 1B68     	 ldr r3,[r3]
 1263 014a 5B7B     	 ldrb r3,[r3,#13]
 1264 014c 002B     	 cmp r3,#0
 1265 014e 10D1     	 bne .L68
 494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /* Program dma*/
 496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepdma = (uint32_t)ep->xfe
 1266              	 .loc 1 496 0
 1267 0150 7B68     	 ldr r3,[r7,#4]
 1268 0152 1B78     	 ldrb r3,[r3]
 1269 0154 C3F30303 	 ubfx r3,r3,#0,#4
 1270 0158 DBB2     	 uxtb r3,r3
 1271 015a 274A     	 ldr r2,.L69
 1272 015c 5E33     	 adds r3,r3,#94
 1273 015e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1274 0162 7A68     	 ldr r2,[r7,#4]
 1275 0164 D2F81E20 	 ldr r2,[r2,#30]
 1276 0168 1146     	 mov r1,r2
 1277 016a 5A69     	 ldr r2,[r3,#20]
 1278 016c 0022     	 movs r2,#0
 1279 016e 0A43     	 orrs r2,r2,r1
 1280 0170 5A61     	 str r2,[r3,#20]
 1281              	.L68:
 497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1282              	 .loc 1 498 0
 1283 0172 224B     	 ldr r3,.L69+4
 1284 0174 1B68     	 ldr r3,[r3]
 1285 0176 5B7B     	 ldrb r3,[r3,#13]
 1286 0178 012B     	 cmp r3,#1
 1287 017a 13D1     	 bne .L65
 499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /* enable fifo empty interrupt */
 501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			xmc_device.device_register->dtknqr4_fifoemptymsk |= (uint32_t)((uint32_t)1U << (uint8_t)ep->addr
 1288              	 .loc 1 501 0
 1289 017c 1E4B     	 ldr r3,.L69
 1290 017e D3F87431 	 ldr r3,[r3,#372]
 1291 0182 1D4A     	 ldr r2,.L69
 1292 0184 D2F87421 	 ldr r2,[r2,#372]
 1293 0188 516B     	 ldr r1,[r2,#52]
 1294 018a 7A68     	 ldr r2,[r7,#4]
 1295 018c 1278     	 ldrb r2,[r2]
 1296 018e C2F30302 	 ubfx r2,r2,#0,#4
 1297 0192 D2B2     	 uxtb r2,r2
 1298 0194 1046     	 mov r0,r2
 1299 0196 0122     	 movs r2,#1
 1300 0198 8240     	 lsls r2,r2,r0
 1301 019a 0A43     	 orrs r2,r2,r1
 1302 019c 596B     	 ldr r1,[r3,#52]
 1303 019e 0021     	 movs r1,#0
 1304 01a0 0A43     	 orrs r2,r2,r1
 1305 01a2 5A63     	 str r2,[r3,#52]
 1306              	.L65:
 502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Program size of transfer and enable endpoint */
 506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->dieptsiz = size.d32;
 1307              	 .loc 1 506 0
 1308 01a4 7B68     	 ldr r3,[r7,#4]
 1309 01a6 1B78     	 ldrb r3,[r3]
 1310 01a8 C3F30303 	 ubfx r3,r3,#0,#4
 1311 01ac DBB2     	 uxtb r3,r3
 1312 01ae 124A     	 ldr r2,.L69
 1313 01b0 5E33     	 adds r3,r3,#94
 1314 01b2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1315 01b6 FA68     	 ldr r2,[r7,#12]
 1316 01b8 1969     	 ldr r1,[r3,#16]
 1317 01ba 0021     	 movs r1,#0
 1318 01bc 0A43     	 orrs r2,r2,r1
 1319 01be 1A61     	 str r2,[r3,#16]
 507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ctl.b.epena = 1U;
 1320              	 .loc 1 507 0
 1321 01c0 FB7A     	 ldrb r3,[r7,#11]
 1322 01c2 43F08003 	 orr r3,r3,#128
 1323 01c6 FB72     	 strb r3,[r7,#11]
 508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ctl.b.cnak = 1U;
 1324              	 .loc 1 508 0
 1325 01c8 FB7A     	 ldrb r3,[r7,#11]
 1326 01ca 43F00403 	 orr r3,r3,#4
 1327 01ce FB72     	 strb r3,[r7,#11]
 509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = ctl.d32;
 1328              	 .loc 1 509 0
 1329 01d0 7B68     	 ldr r3,[r7,#4]
 1330 01d2 1B78     	 ldrb r3,[r3]
 1331 01d4 C3F30303 	 ubfx r3,r3,#0,#4
 1332 01d8 DBB2     	 uxtb r3,r3
 1333 01da 074A     	 ldr r2,.L69
 1334 01dc 5E33     	 adds r3,r3,#94
 1335 01de 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1336 01e2 BA68     	 ldr r2,[r7,#8]
 1337 01e4 1968     	 ldr r1,[r3]
 1338 01e6 0021     	 movs r1,#0
 1339 01e8 0A43     	 orrs r2,r2,r1
 1340 01ea 1A60     	 str r2,[r3]
 510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 1341              	 .loc 1 510 0
 1342 01ec 1437     	 adds r7,r7,#20
 1343              	.LCFI51:
 1344              	 .cfi_def_cfa_offset 4
 1345 01ee BD46     	 mov sp,r7
 1346              	.LCFI52:
 1347              	 .cfi_def_cfa_register 13
 1348              	 
 1349 01f0 5DF8047B 	 ldr r7,[sp],#4
 1350              	.LCFI53:
 1351              	 .cfi_restore 7
 1352              	 .cfi_def_cfa_offset 0
 1353 01f4 7047     	 bx lr
 1354              	.L70:
 1355 01f6 00BF     	 .align 2
 1356              	.L69:
 1357 01f8 00000000 	 .word xmc_device
 1358 01fc 00000000 	 .word usbd_init
 1359              	 .cfi_endproc
 1360              	.LFE177:
 1362              	 .section .text.XMC_USBD_lHandleUSBReset,"ax",%progbits
 1363              	 .align 2
 1364              	 .thumb
 1365              	 .thumb_func
 1367              	XMC_USBD_lHandleUSBReset:
 1368              	.LFB178:
 511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Handles the USBD reset interrupt
 515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * When ever the host sets the bus into reset condition the usb otg_core generates
 517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * an interrupt, which is handled by this function. It resets the complete otg_core
 518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * into the default state.
 519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleUSBReset(const XMC_USBD_t *const obj) 
 521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 1369              	 .loc 1 521 0
 1370              	 .cfi_startproc
 1371              	 
 1372              	 
 1373 0000 80B5     	 push {r7,lr}
 1374              	.LCFI54:
 1375              	 .cfi_def_cfa_offset 8
 1376              	 .cfi_offset 7,-8
 1377              	 .cfi_offset 14,-4
 1378 0002 88B0     	 sub sp,sp,#32
 1379              	.LCFI55:
 1380              	 .cfi_def_cfa_offset 40
 1381 0004 00AF     	 add r7,sp,#0
 1382              	.LCFI56:
 1383              	 .cfi_def_cfa_register 7
 1384 0006 7860     	 str r0,[r7,#4]
 522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t i;
 523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
 525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   fifosize_data_t gnptxfsiz;
 526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
 528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
 529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Clear the Remote Wakeup Signaling */
 530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 1385              	 .loc 1 530 0
 1386 0008 5D4B     	 ldr r3,.L77
 1387 000a D3F87431 	 ldr r3,[r3,#372]
 1388 000e 5B68     	 ldr r3,[r3,#4]
 1389 0010 7B61     	 str r3,[r7,#20]
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl.b.rmtwkupsig = 1U;
 1390              	 .loc 1 531 0
 1391 0012 3B7D     	 ldrb r3,[r7,#20]
 1392 0014 43F00103 	 orr r3,r3,#1
 1393 0018 3B75     	 strb r3,[r7,#20]
 532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 1394              	 .loc 1 532 0
 1395 001a 594B     	 ldr r3,.L77
 1396 001c D3F87431 	 ldr r3,[r3,#372]
 1397 0020 7A69     	 ldr r2,[r7,#20]
 1398 0022 5968     	 ldr r1,[r3,#4]
 1399 0024 0021     	 movs r1,#0
 1400 0026 0A43     	 orrs r2,r2,r1
 1401 0028 5A60     	 str r2,[r3,#4]
 533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* enable naks for all eps */
 535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint8_t)XMC_USBD_NUM_EPS;i++)
 1402              	 .loc 1 535 0
 1403 002a 0023     	 movs r3,#0
 1404 002c FB61     	 str r3,[r7,#28]
 1405 002e 1DE0     	 b .L72
 1406              	.L73:
 536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     epctl.d32 = xmc_device.endpoint_out_register[i]->doepctl;
 1407              	 .loc 1 537 0 discriminator 3
 1408 0030 534A     	 ldr r2,.L77
 1409 0032 FB69     	 ldr r3,[r7,#28]
 1410 0034 6433     	 adds r3,r3,#100
 1411 0036 9B00     	 lsls r3,r3,#2
 1412 0038 1344     	 add r3,r3,r2
 1413 003a 5B68     	 ldr r3,[r3,#4]
 1414 003c 1B68     	 ldr r3,[r3]
 1415 003e BB61     	 str r3,[r7,#24]
 538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		epctl.b.snak = 1U;
 1416              	 .loc 1 538 0 discriminator 3
 1417 0040 FB7E     	 ldrb r3,[r7,#27]
 1418 0042 43F00803 	 orr r3,r3,#8
 1419 0046 FB76     	 strb r3,[r7,#27]
 539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		epctl.b.stall = 0U;
 1420              	 .loc 1 539 0 discriminator 3
 1421 0048 BB7E     	 ldrb r3,[r7,#26]
 1422 004a 6FF34513 	 bfc r3,#5,#1
 1423 004e BB76     	 strb r3,[r7,#26]
 540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[i]->doepctl = epctl.d32;
 1424              	 .loc 1 540 0 discriminator 3
 1425 0050 4B4A     	 ldr r2,.L77
 1426 0052 FB69     	 ldr r3,[r7,#28]
 1427 0054 6433     	 adds r3,r3,#100
 1428 0056 9B00     	 lsls r3,r3,#2
 1429 0058 1344     	 add r3,r3,r2
 1430 005a 5B68     	 ldr r3,[r3,#4]
 1431 005c BA69     	 ldr r2,[r7,#24]
 1432 005e 1968     	 ldr r1,[r3]
 1433 0060 0021     	 movs r1,#0
 1434 0062 0A43     	 orrs r2,r2,r1
 1435 0064 1A60     	 str r2,[r3]
 535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 1436              	 .loc 1 535 0 discriminator 3
 1437 0066 FB69     	 ldr r3,[r7,#28]
 1438 0068 0133     	 adds r3,r3,#1
 1439 006a FB61     	 str r3,[r7,#28]
 1440              	.L72:
 535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 1441              	 .loc 1 535 0 is_stmt 0 discriminator 1
 1442 006c FB69     	 ldr r3,[r7,#28]
 1443 006e 062B     	 cmp r3,#6
 1444 0070 DED9     	 bls .L73
 541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Configure fifos */
 544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the rx fifo */
 545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->grxfsiz = 64U;
 1445              	 .loc 1 545 0 is_stmt 1
 1446 0072 434B     	 ldr r3,.L77
 1447 0074 D3F87031 	 ldr r3,[r3,#368]
 1448 0078 5A6A     	 ldr r2,[r3,#36]
 1449 007a 0022     	 movs r2,#0
 1450 007c 42F04002 	 orr r2,r2,#64
 1451 0080 5A62     	 str r2,[r3,#36]
 546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Calculate the size of the tx fifo for ep 0 */  
 547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.d32 = 0U;
 1452              	 .loc 1 547 0
 1453 0082 0023     	 movs r3,#0
 1454 0084 3B61     	 str r3,[r7,#16]
 548:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.depth = 16U;
 1455              	 .loc 1 548 0
 1456 0086 7B8A     	 ldrh r3,[r7,#18]
 1457 0088 1022     	 movs r2,#16
 1458 008a 62F30F03 	 bfi r3,r2,#0,#16
 1459 008e 7B82     	 strh r3,[r7,#18]
 549:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gnptxfsiz.b.startaddr = 64U;
 1460              	 .loc 1 549 0
 1461 0090 3B8A     	 ldrh r3,[r7,#16]
 1462 0092 4022     	 movs r2,#64
 1463 0094 62F30F03 	 bfi r3,r2,#0,#16
 1464 0098 3B82     	 strh r3,[r7,#16]
 550:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gnptxfsiz = gnptxfsiz.d32;
 1465              	 .loc 1 550 0
 1466 009a 394B     	 ldr r3,.L77
 1467 009c D3F87031 	 ldr r3,[r3,#368]
 1468 00a0 3A69     	 ldr r2,[r7,#16]
 1469 00a2 996A     	 ldr r1,[r3,#40]
 1470 00a4 0021     	 movs r1,#0
 1471 00a6 0A43     	 orrs r2,r2,r1
 1472 00a8 9A62     	 str r2,[r3,#40]
 551:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* calculate the size for the rest */
 552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for (i = 1U;i < (uint8_t)XMC_USBD_NUM_TX_FIFOS;i++)
 1473              	 .loc 1 552 0
 1474 00aa 0123     	 movs r3,#1
 1475 00ac FB61     	 str r3,[r7,#28]
 1476 00ae 14E0     	 b .L74
 1477              	.L75:
 553:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 554:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.global_register->dtxfsiz[i- 1U] = (uint32_t)(((256U + (i*(64U)))/4U) | ((uint32_t)16
 1478              	 .loc 1 554 0 discriminator 3
 1479 00b0 334B     	 ldr r3,.L77
 1480 00b2 D3F87011 	 ldr r1,[r3,#368]
 1481 00b6 FB69     	 ldr r3,[r7,#28]
 1482 00b8 013B     	 subs r3,r3,#1
 1483 00ba FA69     	 ldr r2,[r7,#28]
 1484 00bc 0432     	 adds r2,r2,#4
 1485 00be 9201     	 lsls r2,r2,#6
 1486 00c0 9208     	 lsrs r2,r2,#2
 1487 00c2 42F48012 	 orr r2,r2,#1048576
 1488 00c6 4033     	 adds r3,r3,#64
 1489 00c8 9B00     	 lsls r3,r3,#2
 1490 00ca 0B44     	 add r3,r3,r1
 1491 00cc 5968     	 ldr r1,[r3,#4]
 1492 00ce 0021     	 movs r1,#0
 1493 00d0 0A43     	 orrs r2,r2,r1
 1494 00d2 5A60     	 str r2,[r3,#4]
 552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 1495              	 .loc 1 552 0 discriminator 3
 1496 00d4 FB69     	 ldr r3,[r7,#28]
 1497 00d6 0133     	 adds r3,r3,#1
 1498 00d8 FB61     	 str r3,[r7,#28]
 1499              	.L74:
 552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 1500              	 .loc 1 552 0 is_stmt 0 discriminator 1
 1501 00da FB69     	 ldr r3,[r7,#28]
 1502 00dc 062B     	 cmp r3,#6
 1503 00de E7D9     	 bls .L75
 555:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 556:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 557:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
 558:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x10U); /* 0x10 == all fifos, see doc */
 1504              	 .loc 1 558 0 is_stmt 1
 1505 00e0 1020     	 movs r0,#16
 1506 00e2 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 559:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo(0x0U);
 1507              	 .loc 1 559 0
 1508 00e6 0020     	 movs r0,#0
 1509 00e8 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
 560:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 1510              	 .loc 1 560 0
 1511 00ec FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
 561:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Flush learning queue not needed due to fifo config */
 562:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* enable ep0 interrupts */  
 563:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint.d32 = 0U;
 1512              	 .loc 1 563 0
 1513 00f0 0023     	 movs r3,#0
 1514 00f2 FB60     	 str r3,[r7,#12]
 564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint.b.inep0 = 1U;
 1515              	 .loc 1 564 0
 1516 00f4 3B7B     	 ldrb r3,[r7,#12]
 1517 00f6 43F00103 	 orr r3,r3,#1
 1518 00fa 3B73     	 strb r3,[r7,#12]
 565:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint.b.outep0 = 1U;
 1519              	 .loc 1 565 0
 1520 00fc BB7B     	 ldrb r3,[r7,#14]
 1521 00fe 43F00103 	 orr r3,r3,#1
 1522 0102 BB73     	 strb r3,[r7,#14]
 566:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daint.d32;
 1523              	 .loc 1 566 0
 1524 0104 1E4B     	 ldr r3,.L77
 1525 0106 D3F87431 	 ldr r3,[r3,#372]
 1526 010a FA68     	 ldr r2,[r7,#12]
 1527 010c D969     	 ldr r1,[r3,#28]
 1528 010e 0021     	 movs r1,#0
 1529 0110 0A43     	 orrs r2,r2,r1
 1530 0112 DA61     	 str r2,[r3,#28]
 567:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 568:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* enable endpoint interrupts */
 569:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* out ep interrupts */
 570:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventOUTEP(((uint32_t)XMC_USBD_EVENT_OUT_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_
 1531              	 .loc 1 570 0
 1532 0114 0F20     	 movs r0,#15
 1533 0116 FFF7FEFF 	 bl XMC_USBD_EnableEventOUTEP
 571:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		  	  	  	  	  	  (uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP | (uint32_t)XMC_USBD_EVENT_OUT_EP_AHB_ERRO
 572:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 573:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /*in ep interrupts */
 574:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EnableEventINEP(((uint32_t)XMC_USBD_EVENT_IN_EP_TX_COMPLET | (uint32_t)XMC_USBD_EVENT_IN
 1534              	 .loc 1 574 0
 1535 011a 0F20     	 movs r0,#15
 1536 011c FFF7FEFF 	 bl XMC_USBD_EnableEventINEP
 575:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)XMC_USBD_EVENT_IN_EP_AHB_ERROR | (uint32_t)XMC_USBD_EVENT_IN_EP_TIMEOUT));
 576:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 577:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 578:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Clear device Address */  
 579:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 1537              	 .loc 1 579 0
 1538 0120 174B     	 ldr r3,.L77
 1539 0122 D3F87431 	 ldr r3,[r3,#372]
 1540 0126 1B68     	 ldr r3,[r3]
 1541 0128 BB60     	 str r3,[r7,#8]
 580:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dcfg.b.devaddr = 0U;
 1542              	 .loc 1 580 0
 1543 012a 3B89     	 ldrh r3,[r7,#8]
 1544 012c 6FF30A13 	 bfc r3,#4,#7
 1545 0130 3B81     	 strh r3,[r7,#8]
 581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 1546              	 .loc 1 581 0
 1547 0132 134B     	 ldr r3,.L77
 1548 0134 D3F87431 	 ldr r3,[r3,#372]
 1549 0138 BA68     	 ldr r2,[r7,#8]
 1550 013a 1968     	 ldr r1,[r3]
 1551 013c 0021     	 movs r1,#0
 1552 013e 0A43     	 orrs r2,r2,r1
 1553 0140 1A60     	 str r2,[r3]
 582:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 583:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1554              	 .loc 1 583 0
 1555 0142 7B68     	 ldr r3,[r7,#4]
 1556 0144 5B7B     	 ldrb r3,[r3,#13]
 1557 0146 012B     	 cmp r3,#1
 1558 0148 05D1     	 bne .L76
 584:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 585:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* Clear Empty interrupt */
 586:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dtknqr4_fifoemptymsk = 0U;
 1559              	 .loc 1 586 0
 1560 014a 0D4B     	 ldr r3,.L77
 1561 014c D3F87431 	 ldr r3,[r3,#372]
 1562 0150 5A6B     	 ldr r2,[r3,#52]
 1563 0152 0022     	 movs r2,#0
 1564 0154 5A63     	 str r2,[r3,#52]
 1565              	.L76:
 587:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 588:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].outInUse = 0U;
 1566              	 .loc 1 589 0
 1567 0156 0A4A     	 ldr r2,.L77
 1568 0158 5378     	 ldrb r3,[r2,#1]
 1569 015a 6FF30413 	 bfc r3,#4,#1
 1570 015e 5370     	 strb r3,[r2,#1]
 590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.ep[0U].inInUse = 0U;
 1571              	 .loc 1 590 0
 1572 0160 074A     	 ldr r2,.L77
 1573 0162 5378     	 ldrb r3,[r2,#1]
 1574 0164 6FF3C303 	 bfc r3,#3,#1
 1575 0168 5370     	 strb r3,[r2,#1]
 591:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 592:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_RESET);
 1576              	 .loc 1 592 0
 1577 016a 054B     	 ldr r3,.L77
 1578 016c D3F8CF31 	 ldr r3,[r3,#463]
 1579 0170 0420     	 movs r0,#4
 1580 0172 9847     	 blx r3
 593:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 594:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* clear reset intr */
 595:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_RESET);
 1581              	 .loc 1 595 0
 1582 0174 0420     	 movs r0,#4
 1583 0176 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 596:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 1584              	 .loc 1 596 0
 1585 017a 2037     	 adds r7,r7,#32
 1586              	.LCFI57:
 1587              	 .cfi_def_cfa_offset 8
 1588 017c BD46     	 mov sp,r7
 1589              	.LCFI58:
 1590              	 .cfi_def_cfa_register 13
 1591              	 
 1592 017e 80BD     	 pop {r7,pc}
 1593              	.L78:
 1594              	 .align 2
 1595              	.L77:
 1596 0180 00000000 	 .word xmc_device
 1597              	 .cfi_endproc
 1598              	.LFE178:
 1600              	 .section .text.XMC_USBD_lHandleOTGInt,"ax",%progbits
 1601              	 .align 2
 1602              	 .thumb
 1603              	 .thumb_func
 1605              	XMC_USBD_lHandleOTGInt:
 1606              	.LFB179:
 597:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 598:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 599:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** * @brief Handle OTG Interrupt
 600:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** *
 601:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** * It detects especially connect and disconnect events.
 602:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** */
 603:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOTGInt(void) 
 604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 1607              	 .loc 1 604 0
 1608              	 .cfi_startproc
 1609              	 
 1610              	 
 1611 0000 80B5     	 push {r7,lr}
 1612              	.LCFI59:
 1613              	 .cfi_def_cfa_offset 8
 1614              	 .cfi_offset 7,-8
 1615              	 .cfi_offset 14,-4
 1616 0002 82B0     	 sub sp,sp,#8
 1617              	.LCFI60:
 1618              	 .cfi_def_cfa_offset 16
 1619 0004 00AF     	 add r7,sp,#0
 1620              	.LCFI61:
 1621              	 .cfi_def_cfa_register 7
 605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gotgint_data_t data;
 606:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gotgint;
 1622              	 .loc 1 606 0
 1623 0006 0F4B     	 ldr r3,.L81
 1624 0008 D3F87031 	 ldr r3,[r3,#368]
 1625 000c 5B68     	 ldr r3,[r3,#4]
 1626 000e 7B60     	 str r3,[r7,#4]
 607:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.sesenddet)
 1627              	 .loc 1 607 0
 1628 0010 3B79     	 ldrb r3,[r7,#4]
 1629 0012 03F00403 	 and r3,r3,#4
 1630 0016 DBB2     	 uxtb r3,r3
 1631 0018 002B     	 cmp r3,#0
 1632 001a 0BD0     	 beq .L80
 608:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 609:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		xmc_device.IsPowered = 0U;
 1633              	 .loc 1 609 0
 1634 001c 094A     	 ldr r2,.L81
 1635 001e 92F8CE31 	 ldrb r3,[r2,#462]
 1636 0022 6FF38203 	 bfc r3,#2,#1
 1637 0026 82F8CE31 	 strb r3,[r2,#462]
 610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_OFF);
 1638              	 .loc 1 610 0
 1639 002a 064B     	 ldr r3,.L81
 1640 002c D3F8CF31 	 ldr r3,[r3,#463]
 1641 0030 0120     	 movs r0,#1
 1642 0032 9847     	 blx r3
 1643              	.L80:
 611:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 612:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lClearEventOTG(data.d32);
 1644              	 .loc 1 612 0
 1645 0034 7B68     	 ldr r3,[r7,#4]
 1646 0036 1846     	 mov r0,r3
 1647 0038 FFF7FEFF 	 bl XMC_USBD_lClearEventOTG
 613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 614:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 1648              	 .loc 1 614 0
 1649 003c 0837     	 adds r7,r7,#8
 1650              	.LCFI62:
 1651              	 .cfi_def_cfa_offset 8
 1652 003e BD46     	 mov sp,r7
 1653              	.LCFI63:
 1654              	 .cfi_def_cfa_register 13
 1655              	 
 1656 0040 80BD     	 pop {r7,pc}
 1657              	.L82:
 1658 0042 00BF     	 .align 2
 1659              	.L81:
 1660 0044 00000000 	 .word xmc_device
 1661              	 .cfi_endproc
 1662              	.LFE179:
 1664              	 .section .text.XMC_USBD_lHandleEnumDone,"ax",%progbits
 1665              	 .align 2
 1666              	 .thumb
 1667              	 .thumb_func
 1669              	XMC_USBD_lHandleEnumDone:
 1670              	.LFB180:
 615:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 616:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 617:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Interrupt handler for device enumeration done.
 618:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 619:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Handles the enumeration done from dwc_otg, when the host has enumerated the device.
 620:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 621:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleEnumDone(void) 
 622:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 1671              	 .loc 1 622 0
 1672              	 .cfi_startproc
 1673              	 
 1674              	 
 1675 0000 80B5     	 push {r7,lr}
 1676              	.LCFI64:
 1677              	 .cfi_def_cfa_offset 8
 1678              	 .cfi_offset 7,-8
 1679              	 .cfi_offset 14,-4
 1680 0002 82B0     	 sub sp,sp,#8
 1681              	.LCFI65:
 1682              	 .cfi_def_cfa_offset 16
 1683 0004 00AF     	 add r7,sp,#0
 1684              	.LCFI66:
 1685              	 .cfi_def_cfa_register 7
 623:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Normaly we need to check dctl
 624:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****    * We are always fullspeed, so max it up. */
 625:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   depctl_data_t epctl;
 626:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
 627:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
 628:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   epctl.d32=xmc_device.endpoint_in_register[0U]->diepctl;
 1686              	 .loc 1 628 0
 1687 0006 1E4B     	 ldr r3,.L84
 1688 0008 D3F87831 	 ldr r3,[r3,#376]
 1689 000c 1B68     	 ldr r3,[r3]
 1690 000e 7B60     	 str r3,[r7,#4]
 629:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   epctl.b.mps = 0x00U; /* 64 Byte, this is also automatically set for out ep */
 1691              	 .loc 1 629 0
 1692 0010 BB88     	 ldrh r3,[r7,#4]
 1693 0012 6FF30A03 	 bfc r3,#0,#11
 1694 0016 BB80     	 strh r3,[r7,#4]
 630:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[0U]->diepctl = epctl.d32;
 1695              	 .loc 1 630 0
 1696 0018 194B     	 ldr r3,.L84
 1697 001a D3F87831 	 ldr r3,[r3,#376]
 1698 001e 7A68     	 ldr r2,[r7,#4]
 1699 0020 1968     	 ldr r1,[r3]
 1700 0022 0021     	 movs r1,#0
 1701 0024 0A43     	 orrs r2,r2,r1
 1702 0026 1A60     	 str r2,[r3]
 631:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 632:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* update device connected flag */
 633:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.IsConnected = 1U;
 1703              	 .loc 1 633 0
 1704 0028 154A     	 ldr r2,.L84
 1705 002a 92F8CE31 	 ldrb r3,[r2,#462]
 1706 002e 43F00103 	 orr r3,r3,#1
 1707 0032 82F8CE31 	 strb r3,[r2,#462]
 634:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.IsPowered = 1U;
 1708              	 .loc 1 634 0
 1709 0036 124A     	 ldr r2,.L84
 1710 0038 92F8CE31 	 ldrb r3,[r2,#462]
 1711 003c 43F00403 	 orr r3,r3,#4
 1712 0040 82F8CE31 	 strb r3,[r2,#462]
 635:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 636:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_CONNECT);
 1713              	 .loc 1 636 0
 1714 0044 0E4B     	 ldr r3,.L84
 1715 0046 D3F8CF31 	 ldr r3,[r3,#463]
 1716 004a 0220     	 movs r0,#2
 1717 004c 9847     	 blx r3
 637:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 638:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Set Trim */  
 639:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32 = xmc_device.global_register->gusbcfg;
 1718              	 .loc 1 639 0
 1719 004e 0C4B     	 ldr r3,.L84
 1720 0050 D3F87031 	 ldr r3,[r3,#368]
 1721 0054 DB68     	 ldr r3,[r3,#12]
 1722 0056 3B60     	 str r3,[r7]
 640:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.usbtrdtim = 9U; /* default value for LS/FS */
 1723              	 .loc 1 640 0
 1724 0058 7B78     	 ldrb r3,[r7,#1]
 1725 005a 0922     	 movs r2,#9
 1726 005c 62F38503 	 bfi r3,r2,#2,#4
 1727 0060 7B70     	 strb r3,[r7,#1]
 641:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 1728              	 .loc 1 641 0
 1729 0062 074B     	 ldr r3,.L84
 1730 0064 D3F87031 	 ldr r3,[r3,#368]
 1731 0068 3A68     	 ldr r2,[r7]
 1732 006a D968     	 ldr r1,[r3,#12]
 1733 006c 0021     	 movs r1,#0
 1734 006e 0A43     	 orrs r2,r2,r1
 1735 0070 DA60     	 str r2,[r3,#12]
 642:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 643:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 644:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_ENUMDONE);
 1736              	 .loc 1 644 0
 1737 0072 0B20     	 movs r0,#11
 1738 0074 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 645:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 1739              	 .loc 1 645 0
 1740 0078 0837     	 adds r7,r7,#8
 1741              	.LCFI67:
 1742              	 .cfi_def_cfa_offset 8
 1743 007a BD46     	 mov sp,r7
 1744              	.LCFI68:
 1745              	 .cfi_def_cfa_register 13
 1746              	 
 1747 007c 80BD     	 pop {r7,pc}
 1748              	.L85:
 1749 007e 00BF     	 .align 2
 1750              	.L84:
 1751 0080 00000000 	 .word xmc_device
 1752              	 .cfi_endproc
 1753              	.LFE180:
 1755              	 .section .text.XMC_USBD_lHandleOEPInt,"ax",%progbits
 1756              	 .align 2
 1757              	 .thumb
 1758              	 .thumb_func
 1760              	XMC_USBD_lHandleOEPInt:
 1761              	.LFB181:
 646:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 647:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 648:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 649:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all out endpoints
 650:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 651:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 652:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 653:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 654:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleOEPInt(const XMC_USBD_t *const obj) 
 655:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 1762              	 .loc 1 655 0
 1763              	 .cfi_startproc
 1764              	 
 1765              	 
 1766 0000 80B5     	 push {r7,lr}
 1767              	.LCFI69:
 1768              	 .cfi_def_cfa_offset 8
 1769              	 .cfi_offset 7,-8
 1770              	 .cfi_offset 14,-4
 1771 0002 8CB0     	 sub sp,sp,#48
 1772              	.LCFI70:
 1773              	 .cfi_def_cfa_offset 56
 1774 0004 00AF     	 add r7,sp,#0
 1775              	.LCFI71:
 1776              	 .cfi_def_cfa_register 7
 1777 0006 7860     	 str r0,[r7,#4]
 656:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 657:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
 658:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   doepmsk_data_t doepmsk;
 659:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   doepint_data_t doepint;
 660:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t doeptsiz;
 661:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 662:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 663:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 664:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 665:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 666:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
 667:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 1778              	 .loc 1 667 0
 1779 0008 714B     	 ldr r3,.L97
 1780 000a D3F87431 	 ldr r3,[r3,#372]
 1781 000e 9B69     	 ldr r3,[r3,#24]
 1782 0010 FB61     	 str r3,[r7,#28]
 668:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   
 669:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;
 1783              	 .loc 1 669 0
 1784 0012 6F4B     	 ldr r3,.L97
 1785 0014 D3F87431 	 ldr r3,[r3,#372]
 1786 0018 DB69     	 ldr r3,[r3,#28]
 1787 001a BB61     	 str r3,[r7,#24]
 670:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   
 671:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   doepmsk.d32 = xmc_device.device_register->doepmsk;  
 1788              	 .loc 1 671 0
 1789 001c 6C4B     	 ldr r3,.L97
 1790 001e D3F87431 	 ldr r3,[r3,#372]
 1791 0022 5B69     	 ldr r3,[r3,#20]
 1792 0024 7B61     	 str r3,[r7,#20]
 672:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   
 673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.out & daintmsk.ep.out;
 1793              	 .loc 1 673 0
 1794 0026 FA8B     	 ldrh r2,[r7,#30]
 1795 0028 7B8B     	 ldrh r3,[r7,#26]
 1796 002a 1340     	 ands r3,r3,r2
 1797 002c BB85     	 strh r3,[r7,#44]
 674:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 1798              	 .loc 1 674 0
 1799 002e 0023     	 movs r3,#0
 1800 0030 87F82F30 	 strb r3,[r7,#47]
 675:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   doeptsiz.d32 = 0U;
 1801              	 .loc 1 675 0
 1802 0034 0023     	 movs r3,#0
 1803 0036 FB60     	 str r3,[r7,#12]
 676:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  
 677:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 1804              	 .loc 1 677 0
 1805 0038 BCE0     	 b .L87
 1806              	.L96:
 678:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 679:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     temp1 = (mask >> (uint16_t)ep_num);
 1807              	 .loc 1 679 0
 1808 003a BA8D     	 ldrh r2,[r7,#44]
 1809 003c 97F82F30 	 ldrb r3,[r7,#47]
 1810 0040 42FA03F3 	 asr r3,r2,r3
 1811 0044 7B85     	 strh r3,[r7,#42]
 680:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     temp = temp1 & 0x1U;
 1812              	 .loc 1 680 0
 1813 0046 7B8D     	 ldrh r3,[r7,#42]
 1814 0048 03F00103 	 and r3,r3,#1
 1815 004c 3B85     	 strh r3,[r7,#40]
 681:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (temp)
 1816              	 .loc 1 681 0
 1817 004e 3B8D     	 ldrh r3,[r7,#40]
 1818 0050 002B     	 cmp r3,#0
 1819 0052 00F0AA80 	 beq .L88
 682:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 683:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /* load register data for endpoint */
 684:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 1820              	 .loc 1 684 0
 1821 0056 97F82F30 	 ldrb r3,[r7,#47]
 1822 005a 2E22     	 movs r2,#46
 1823 005c 02FB03F3 	 mul r3,r2,r3
 1824 0060 5B4A     	 ldr r2,.L97
 1825 0062 1344     	 add r3,r3,r2
 1826 0064 7B62     	 str r3,[r7,#36]
 685:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       doepint.d32 = xmc_device.endpoint_out_register[ep_num]->doepint & doepmsk.d32;
 1827              	 .loc 1 685 0
 1828 0066 97F82F30 	 ldrb r3,[r7,#47]
 1829 006a 594A     	 ldr r2,.L97
 1830 006c 6433     	 adds r3,r3,#100
 1831 006e 9B00     	 lsls r3,r3,#2
 1832 0070 1344     	 add r3,r3,r2
 1833 0072 5B68     	 ldr r3,[r3,#4]
 1834 0074 9A68     	 ldr r2,[r3,#8]
 1835 0076 7B69     	 ldr r3,[r7,#20]
 1836 0078 1340     	 ands r3,r3,r2
 1837 007a 3B61     	 str r3,[r7,#16]
 686:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1838              	 .loc 1 686 0
 1839 007c 7B68     	 ldr r3,[r7,#4]
 1840 007e 5B7B     	 ldrb r3,[r3,#13]
 1841 0080 002B     	 cmp r3,#0
 1842 0082 08D1     	 bne .L89
 687:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       {
 688:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         doeptsiz.d32 = xmc_device.endpoint_out_register[ep_num]->doeptsiz;
 1843              	 .loc 1 688 0
 1844 0084 97F82F30 	 ldrb r3,[r7,#47]
 1845 0088 514A     	 ldr r2,.L97
 1846 008a 6433     	 adds r3,r3,#100
 1847 008c 9B00     	 lsls r3,r3,#2
 1848 008e 1344     	 add r3,r3,r2
 1849 0090 5B68     	 ldr r3,[r3,#4]
 1850 0092 1B69     	 ldr r3,[r3,#16]
 1851 0094 FB60     	 str r3,[r7,#12]
 1852              	.L89:
 689:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       }
 690:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  /* Setup Phase Complete */
 691:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       if (doepint.b.setup)
 1853              	 .loc 1 691 0
 1854 0096 3B7C     	 ldrb r3,[r7,#16]
 1855 0098 03F00803 	 and r3,r3,#8
 1856 009c DBB2     	 uxtb r3,r3
 1857 009e 002B     	 cmp r3,#0
 1858 00a0 37D0     	 beq .L90
 692:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       {
 693:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         /* ep0 not stalled any more */
 694:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         ep->isStalled = 0U;
 1859              	 .loc 1 694 0
 1860 00a2 7A6A     	 ldr r2,[r7,#36]
 1861 00a4 5378     	 ldrb r3,[r2,#1]
 1862 00a6 6FF34513 	 bfc r3,#5,#1
 1863 00aa 5370     	 strb r3,[r2,#1]
 695:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1864              	 .loc 1 695 0
 1865 00ac 7B68     	 ldr r3,[r7,#4]
 1866 00ae 5B7B     	 ldrb r3,[r3,#13]
 1867 00b0 002B     	 cmp r3,#0
 1868 00b2 0FD1     	 bne .L91
 696:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         {
 697:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           /* calculate size for setup packet */
 698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		  ep->outBytesAvailable = (uint32_t)(((uint32_t)XMC_USBD_SETUP_COUNT -
 699:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 1869              	 .loc 1 699 0
 1870 00b4 07F10C03 	 add r3,r7,#12
 1871 00b8 DB78     	 ldrb r3,[r3,#3]
 1872 00ba C3F34113 	 ubfx r3,r3,#5,#2
 1873 00be DBB2     	 uxtb r3,r3
 1874 00c0 1A46     	 mov r2,r3
 698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		  (uint32_t)((deptsiz0_data_t*)&doeptsiz)->b.supcnt)*(uint32_t)XMC_USBD_SETUP_SIZE);
 1875              	 .loc 1 698 0
 1876 00c2 1346     	 mov r3,r2
 1877 00c4 5B07     	 lsls r3,r3,#29
 1878 00c6 9B1A     	 subs r3,r3,r2
 1879 00c8 DB00     	 lsls r3,r3,#3
 1880 00ca 03F11802 	 add r2,r3,#24
 1881 00ce 7B6A     	 ldr r3,[r7,#36]
 1882 00d0 C3F80A20 	 str r2,[r3,#10]
 1883              	.L91:
 700:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         }
 701:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 1884              	 .loc 1 701 0
 1885 00d4 7B68     	 ldr r3,[r7,#4]
 1886 00d6 5B7B     	 ldrb r3,[r3,#13]
 1887 00d8 012B     	 cmp r3,#1
 1888 00da 09D1     	 bne .L92
 702:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		{
 703:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			ep->outBytesAvailable += ep->xferCount;
 1889              	 .loc 1 703 0
 1890 00dc 7B6A     	 ldr r3,[r7,#36]
 1891 00de D3F80A20 	 ldr r2,[r3,#10]
 1892 00e2 7B6A     	 ldr r3,[r7,#36]
 1893 00e4 D3F82630 	 ldr r3,[r3,#38]
 1894 00e8 1A44     	 add r2,r2,r3
 1895 00ea 7B6A     	 ldr r3,[r7,#36]
 1896 00ec C3F80A20 	 str r2,[r3,#10]
 1897              	.L92:
 704:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		}
 705:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		ep->outInUse = 0U;
 1898              	 .loc 1 705 0
 1899 00f0 7A6A     	 ldr r2,[r7,#36]
 1900 00f2 5378     	 ldrb r3,[r2,#1]
 1901 00f4 6FF30413 	 bfc r3,#4,#1
 1902 00f8 5370     	 strb r3,[r2,#1]
 706:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		xmc_device.EndpointEvent_cb(0U,XMC_USBD_EP_EVENT_SETUP); /* signal endpoint event */
 1903              	 .loc 1 706 0
 1904 00fa 354B     	 ldr r3,.L97
 1905 00fc D3F8D331 	 ldr r3,[r3,#467]
 1906 0100 0020     	 movs r0,#0
 1907 0102 0021     	 movs r1,#0
 1908 0104 9847     	 blx r3
 707:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				/* clear the interrupt */
 708:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_ClearEventOUTEP((uint32_t)XMC_USBD_EVENT_OUT_EP_SETUP,ep_num);
 1909              	 .loc 1 708 0
 1910 0106 97F82F30 	 ldrb r3,[r7,#47]
 1911 010a 0820     	 movs r0,#8
 1912 010c 1946     	 mov r1,r3
 1913 010e FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1914              	.L90:
 709:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       }
 710:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       if (doepint.b.xfercompl)
 1915              	 .loc 1 710 0
 1916 0112 3B7C     	 ldrb r3,[r7,#16]
 1917 0114 03F00103 	 and r3,r3,#1
 1918 0118 DBB2     	 uxtb r3,r3
 1919 011a 002B     	 cmp r3,#0
 1920 011c 3ED0     	 beq .L93
 711:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       {
 712:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 1921              	 .loc 1 712 0
 1922 011e 7B68     	 ldr r3,[r7,#4]
 1923 0120 5B7B     	 ldrb r3,[r3,#13]
 1924 0122 002B     	 cmp r3,#0
 1925 0124 1BD1     	 bne .L94
 1926              	.LBB3:
 713:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         {
 714:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           uint32_t bytes = (ep->xferLength - ep->xferCount) - doeptsiz.b.xfersize;
 1927              	 .loc 1 714 0
 1928 0126 7B6A     	 ldr r3,[r7,#36]
 1929 0128 D3F82220 	 ldr r2,[r3,#34]
 1930 012c 7B6A     	 ldr r3,[r7,#36]
 1931 012e D3F82630 	 ldr r3,[r3,#38]
 1932 0132 D31A     	 subs r3,r2,r3
 1933 0134 FA68     	 ldr r2,[r7,#12]
 1934 0136 C2F31202 	 ubfx r2,r2,#0,#19
 1935 013a 9B1A     	 subs r3,r3,r2
 1936 013c 3B62     	 str r3,[r7,#32]
 715:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 1937              	 .loc 1 715 0
 1938 013e 7B6A     	 ldr r3,[r7,#36]
 1939 0140 D3F82620 	 ldr r2,[r3,#38]
 1940 0144 3B6A     	 ldr r3,[r7,#32]
 1941 0146 1A44     	 add r2,r2,r3
 1942 0148 7B6A     	 ldr r3,[r7,#36]
 1943 014a C3F82620 	 str r2,[r3,#38]
 716:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 1944              	 .loc 1 716 0
 1945 014e 7B6A     	 ldr r3,[r7,#36]
 1946 0150 D3F81E20 	 ldr r2,[r3,#30]
 1947 0154 3B6A     	 ldr r3,[r7,#32]
 1948 0156 1A44     	 add r2,r2,r3
 1949 0158 7B6A     	 ldr r3,[r7,#36]
 1950 015a C3F81E20 	 str r2,[r3,#30]
 1951              	.L94:
 1952              	.LBE3:
 717:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				}
 718:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal == ep->xferLength)
 1953              	 .loc 1 718 0
 1954 015e 7B6A     	 ldr r3,[r7,#36]
 1955 0160 D3F82A20 	 ldr r2,[r3,#42]
 1956 0164 7B6A     	 ldr r3,[r7,#36]
 1957 0166 D3F82230 	 ldr r3,[r3,#34]
 1958 016a 9A42     	 cmp r2,r3
 1959 016c 13D1     	 bne .L95
 719:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         {
 720:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           ep->outBytesAvailable = ep->xferCount;
 1960              	 .loc 1 720 0
 1961 016e 7B6A     	 ldr r3,[r7,#36]
 1962 0170 D3F82620 	 ldr r2,[r3,#38]
 1963 0174 7B6A     	 ldr r3,[r7,#36]
 1964 0176 C3F80A20 	 str r2,[r3,#10]
 721:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           ep->outInUse = 0U;
 1965              	 .loc 1 721 0
 1966 017a 7A6A     	 ldr r2,[r7,#36]
 1967 017c 5378     	 ldrb r3,[r2,#1]
 1968 017e 6FF30413 	 bfc r3,#4,#1
 1969 0182 5370     	 strb r3,[r2,#1]
 722:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(ep_num,XMC_USBD_EP_EVENT_OUT);
 1970              	 .loc 1 722 0
 1971 0184 124B     	 ldr r3,.L97
 1972 0186 D3F8D331 	 ldr r3,[r3,#467]
 1973 018a 97F82F20 	 ldrb r2,[r7,#47]
 1974 018e 1046     	 mov r0,r2
 1975 0190 0121     	 movs r1,#1
 1976 0192 9847     	 blx r3
 1977 0194 02E0     	 b .L93
 1978              	.L95:
 723:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         }
 724:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         else
 725:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         {
 726:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartReadXfer(ep);
 1979              	 .loc 1 726 0
 1980 0196 786A     	 ldr r0,[r7,#36]
 1981 0198 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
 1982              	.L93:
 727:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         }
 728:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 729:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       }
 730:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 731:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventOUTEP(doepint.d32,ep_num);
 1983              	 .loc 1 731 0
 1984 019c 3A69     	 ldr r2,[r7,#16]
 1985 019e 97F82F30 	 ldrb r3,[r7,#47]
 1986 01a2 1046     	 mov r0,r2
 1987 01a4 1946     	 mov r1,r3
 1988 01a6 FFF7FEFF 	 bl XMC_USBD_ClearEventOUTEP
 1989              	.L88:
 732:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 733:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep_num++;
 1990              	 .loc 1 733 0
 1991 01aa 97F82F30 	 ldrb r3,[r7,#47]
 1992 01ae 0133     	 adds r3,r3,#1
 1993 01b0 87F82F30 	 strb r3,[r7,#47]
 1994              	.L87:
 677:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 1995              	 .loc 1 677 0
 1996 01b4 BA8D     	 ldrh r2,[r7,#44]
 1997 01b6 97F82F30 	 ldrb r3,[r7,#47]
 1998 01ba 42FA03F3 	 asr r3,r2,r3
 1999 01be 002B     	 cmp r3,#0
 2000 01c0 7FF43BAF 	 bne .L96
 734:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 735:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 736:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* clear interrupt */
 737:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_OUTEP);
 2001              	 .loc 1 737 0
 2002 01c4 0D20     	 movs r0,#13
 2003 01c6 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 738:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2004              	 .loc 1 738 0
 2005 01ca 3037     	 adds r7,r7,#48
 2006              	.LCFI72:
 2007              	 .cfi_def_cfa_offset 8
 2008 01cc BD46     	 mov sp,r7
 2009              	.LCFI73:
 2010              	 .cfi_def_cfa_register 13
 2011              	 
 2012 01ce 80BD     	 pop {r7,pc}
 2013              	.L98:
 2014              	 .align 2
 2015              	.L97:
 2016 01d0 00000000 	 .word xmc_device
 2017              	 .cfi_endproc
 2018              	.LFE181:
 2020              	 .section .text.XMC_USBD_lHandleIEPInt,"ax",%progbits
 2021              	 .align 2
 2022              	 .thumb
 2023              	 .thumb_func
 2025              	XMC_USBD_lHandleIEPInt:
 2026              	.LFB182:
 739:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 740:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 741:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Handles all interrupts for all in endpoints
 742:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 743:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * The interrupt handler first checks, which endpoint has caused the interrupt and then
 744:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * determines, which interrupt should be handled.
 745:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 746:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleIEPInt(const XMC_USBD_t *const obj) 
 747:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2027              	 .loc 1 747 0
 2028              	 .cfi_startproc
 2029              	 
 2030              	 
 2031 0000 80B5     	 push {r7,lr}
 2032              	.LCFI74:
 2033              	 .cfi_def_cfa_offset 8
 2034              	 .cfi_offset 7,-8
 2035              	 .cfi_offset 14,-4
 2036 0002 8CB0     	 sub sp,sp,#48
 2037              	.LCFI75:
 2038              	 .cfi_def_cfa_offset 56
 2039 0004 00AF     	 add r7,sp,#0
 2040              	.LCFI76:
 2041              	 .cfi_def_cfa_register 7
 2042 0006 7860     	 str r0,[r7,#4]
 748:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
 749:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint_data_t daint;
 750:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   diepmsk_data_t diepmsk;
 751:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   diepint_data_t diepint;
 752:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   deptsiz_data_t dieptsiz;
 753:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint16_t temp;
 754:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint16_t temp1;
 755:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint16_t mask;
 756:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint8_t ep_num;
 757:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t inepint;
 758:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
 759:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint.d32 = xmc_device.device_register->daint;
 2043              	 .loc 1 759 0
 2044 0008 714B     	 ldr r3,.L109
 2045 000a D3F87431 	 ldr r3,[r3,#372]
 2046 000e 9B69     	 ldr r3,[r3,#24]
 2047 0010 7B61     	 str r3,[r7,#20]
 760:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   
 761:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   diepmsk.d32 = xmc_device.device_register->diepmsk;
 2048              	 .loc 1 761 0
 2049 0012 6F4B     	 ldr r3,.L109
 2050 0014 D3F87431 	 ldr r3,[r3,#372]
 2051 0018 1B69     	 ldr r3,[r3,#16]
 2052 001a 3B61     	 str r3,[r7,#16]
 762:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   
 763:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dieptsiz.d32 = 0U;
 2053              	 .loc 1 763 0
 2054 001c 0023     	 movs r3,#0
 2055 001e BB60     	 str r3,[r7,#8]
 764:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   mask = daint.ep.in;
 2056              	 .loc 1 764 0
 2057 0020 BB8A     	 ldrh r3,[r7,#20]
 2058 0022 BB85     	 strh r3,[r7,#44]
 765:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep_num = 0U;
 2059              	 .loc 1 765 0
 2060 0024 0023     	 movs r3,#0
 2061 0026 87F82F30 	 strb r3,[r7,#47]
 766:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   
 767:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   while ((uint16_t)mask >> ep_num)
 2062              	 .loc 1 767 0
 2063 002a C3E0     	 b .L100
 2064              	.L108:
 768:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 769:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     temp1 = ((uint16_t)mask >> (uint16_t)ep_num);
 2065              	 .loc 1 769 0
 2066 002c BA8D     	 ldrh r2,[r7,#44]
 2067 002e 97F82F30 	 ldrb r3,[r7,#47]
 2068 0032 42FA03F3 	 asr r3,r2,r3
 2069 0036 7B85     	 strh r3,[r7,#42]
 770:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     temp = (uint16_t)temp1 & (uint16_t)0x1U;
 2070              	 .loc 1 770 0
 2071 0038 7B8D     	 ldrh r3,[r7,#42]
 2072 003a 03F00103 	 and r3,r3,#1
 2073 003e 3B85     	 strh r3,[r7,#40]
 771:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if ((uint16_t)temp)
 2074              	 .loc 1 771 0
 2075 0040 3B8D     	 ldrh r3,[r7,#40]
 2076 0042 002B     	 cmp r3,#0
 2077 0044 00F0B180 	 beq .L101
 772:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 773:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       ep = &xmc_device.ep[ep_num];
 2078              	 .loc 1 773 0
 2079 0048 97F82F30 	 ldrb r3,[r7,#47]
 2080 004c 2E22     	 movs r2,#46
 2081 004e 02FB03F3 	 mul r3,r2,r3
 2082 0052 5F4A     	 ldr r2,.L109
 2083 0054 1344     	 add r3,r3,r2
 2084 0056 7B62     	 str r3,[r7,#36]
 774:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			inepint = (uint32_t)xmc_device.endpoint_in_register[ep_num]->diepint;
 2085              	 .loc 1 774 0
 2086 0058 97F82F30 	 ldrb r3,[r7,#47]
 2087 005c 5C4A     	 ldr r2,.L109
 2088 005e 5E33     	 adds r3,r3,#94
 2089 0060 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2090 0064 9B68     	 ldr r3,[r3,#8]
 2091 0066 3B62     	 str r3,[r7,#32]
 775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 776:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       ((((uint32_t)((uint32_t)xmc_device.device_register->dtknqr4_fifoemptymsk >> ep->address_u.add
 2092              	 .loc 1 776 0
 2093 0068 594B     	 ldr r3,.L109
 2094 006a D3F87431 	 ldr r3,[r3,#372]
 2095 006e 5B6B     	 ldr r3,[r3,#52]
 2096 0070 7A6A     	 ldr r2,[r7,#36]
 2097 0072 1278     	 ldrb r2,[r2]
 2098 0074 C2F30302 	 ubfx r2,r2,#0,#4
 2099 0078 D2B2     	 uxtb r2,r2
 2100 007a D340     	 lsrs r3,r3,r2
 777:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****                      0x1U) << 7U) | (uint32_t)diepmsk.d32);
 2101              	 .loc 1 777 0
 2102 007c DB01     	 lsls r3,r3,#7
 2103 007e DAB2     	 uxtb r2,r3
 2104 0080 3B69     	 ldr r3,[r7,#16]
 2105 0082 1A43     	 orrs r2,r2,r3
 775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       diepint.d32 = inepint &
 2106              	 .loc 1 775 0
 2107 0084 3B6A     	 ldr r3,[r7,#32]
 2108 0086 1340     	 ands r3,r3,r2
 2109 0088 FB60     	 str r3,[r7,#12]
 778:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2110              	 .loc 1 778 0
 2111 008a 7B68     	 ldr r3,[r7,#4]
 2112 008c 5B7B     	 ldrb r3,[r3,#13]
 2113 008e 002B     	 cmp r3,#0
 2114 0090 07D1     	 bne .L102
 779:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       {
 780:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         dieptsiz.d32 = xmc_device.endpoint_in_register[ep_num]->dieptsiz;
 2115              	 .loc 1 780 0
 2116 0092 97F82F30 	 ldrb r3,[r7,#47]
 2117 0096 4E4A     	 ldr r2,.L109
 2118 0098 5E33     	 adds r3,r3,#94
 2119 009a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2120 009e 1B69     	 ldr r3,[r3,#16]
 2121 00a0 BB60     	 str r3,[r7,#8]
 2122              	.L102:
 781:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       }
 782:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2123              	 .loc 1 782 0
 2124 00a2 7B68     	 ldr r3,[r7,#4]
 2125 00a4 5B7B     	 ldrb r3,[r3,#13]
 2126 00a6 012B     	 cmp r3,#1
 2127 00a8 19D1     	 bne .L103
 783:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       {
 784:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         if (diepint.b.emptyintr)
 2128              	 .loc 1 784 0
 2129 00aa 3B7B     	 ldrb r3,[r7,#12]
 2130 00ac 23F07F03 	 bic r3,r3,#127
 2131 00b0 DBB2     	 uxtb r3,r3
 2132 00b2 002B     	 cmp r3,#0
 2133 00b4 13D0     	 beq .L103
 2134              	.LBB4:
 785:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         {
 786:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           uint32_t bytes;
 787:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           bytes = XMC_USBD_lWriteFifo(ep);
 2135              	 .loc 1 787 0
 2136 00b6 786A     	 ldr r0,[r7,#36]
 2137 00b8 FFF7FEFF 	 bl XMC_USBD_lWriteFifo
 2138 00bc F861     	 str r0,[r7,#28]
 788:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           ep->xferCount += bytes;
 2139              	 .loc 1 788 0
 2140 00be 7B6A     	 ldr r3,[r7,#36]
 2141 00c0 D3F82620 	 ldr r2,[r3,#38]
 2142 00c4 FB69     	 ldr r3,[r7,#28]
 2143 00c6 1A44     	 add r2,r2,r3
 2144 00c8 7B6A     	 ldr r3,[r7,#36]
 2145 00ca C3F82620 	 str r2,[r3,#38]
 789:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           ep->xferBuffer += bytes;
 2146              	 .loc 1 789 0
 2147 00ce 7B6A     	 ldr r3,[r7,#36]
 2148 00d0 D3F81E20 	 ldr r2,[r3,#30]
 2149 00d4 FB69     	 ldr r3,[r7,#28]
 2150 00d6 1A44     	 add r2,r2,r3
 2151 00d8 7B6A     	 ldr r3,[r7,#36]
 2152 00da C3F81E20 	 str r2,[r3,#30]
 2153              	.L103:
 2154              	.LBE4:
 790:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         }
 791:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       }
 792:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       if (diepint.b.xfercompl)
 2155              	 .loc 1 792 0
 2156 00de 3B7B     	 ldrb r3,[r7,#12]
 2157 00e0 03F00103 	 and r3,r3,#1
 2158 00e4 DBB2     	 uxtb r3,r3
 2159 00e6 002B     	 cmp r3,#0
 2160 00e8 58D0     	 beq .L104
 793:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       {
 794:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 2161              	 .loc 1 794 0
 2162 00ea 7B68     	 ldr r3,[r7,#4]
 2163 00ec 5B7B     	 ldrb r3,[r3,#13]
 2164 00ee 002B     	 cmp r3,#0
 2165 00f0 22D1     	 bne .L105
 795:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         {
 796:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           /* update xfer values */
 797:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           if ((dieptsiz.b.pktcnt == 0U) && (dieptsiz.b.xfersize == 0U))
 2166              	 .loc 1 797 0
 2167 00f2 7B89     	 ldrh r3,[r7,#10]
 2168 00f4 C3F3C903 	 ubfx r3,r3,#3,#10
 2169 00f8 9BB2     	 uxth r3,r3
 2170 00fa 002B     	 cmp r3,#0
 2171 00fc 1CD1     	 bne .L105
 2172              	 .loc 1 797 0 is_stmt 0 discriminator 1
 2173 00fe BB68     	 ldr r3,[r7,#8]
 2174 0100 C3F31203 	 ubfx r3,r3,#0,#19
 2175 0104 002B     	 cmp r3,#0
 2176 0106 17D1     	 bne .L105
 2177              	.LBB5:
 798:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           {
 799:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****             uint32_t Bytes = ep->xferLength - ep->xferCount;
 2178              	 .loc 1 799 0 is_stmt 1
 2179 0108 7B6A     	 ldr r3,[r7,#36]
 2180 010a D3F82220 	 ldr r2,[r3,#34]
 2181 010e 7B6A     	 ldr r3,[r7,#36]
 2182 0110 D3F82630 	 ldr r3,[r3,#38]
 2183 0114 D31A     	 subs r3,r2,r3
 2184 0116 BB61     	 str r3,[r7,#24]
 800:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****             ep->xferCount += Bytes;
 2185              	 .loc 1 800 0
 2186 0118 7B6A     	 ldr r3,[r7,#36]
 2187 011a D3F82620 	 ldr r2,[r3,#38]
 2188 011e BB69     	 ldr r3,[r7,#24]
 2189 0120 1A44     	 add r2,r2,r3
 2190 0122 7B6A     	 ldr r3,[r7,#36]
 2191 0124 C3F82620 	 str r2,[r3,#38]
 801:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****             ep->xferBuffer += Bytes;
 2192              	 .loc 1 801 0
 2193 0128 7B6A     	 ldr r3,[r7,#36]
 2194 012a D3F81E20 	 ldr r2,[r3,#30]
 2195 012e BB69     	 ldr r3,[r7,#24]
 2196 0130 1A44     	 add r2,r2,r3
 2197 0132 7B6A     	 ldr r3,[r7,#36]
 2198 0134 C3F81E20 	 str r2,[r3,#30]
 2199              	.L105:
 2200              	.LBE5:
 802:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           }
 803:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         }
 804:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         if (ep->xferTotal==ep->xferLength)
 2201              	 .loc 1 804 0
 2202 0138 7B6A     	 ldr r3,[r7,#36]
 2203 013a D3F82A20 	 ldr r2,[r3,#42]
 2204 013e 7B6A     	 ldr r3,[r7,#36]
 2205 0140 D3F82230 	 ldr r3,[r3,#34]
 2206 0144 9A42     	 cmp r2,r3
 2207 0146 26D1     	 bne .L106
 805:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         {
 806:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           ep->inInUse = 0U;
 2208              	 .loc 1 806 0
 2209 0148 7A6A     	 ldr r2,[r7,#36]
 2210 014a 5378     	 ldrb r3,[r2,#1]
 2211 014c 6FF3C303 	 bfc r3,#3,#1
 2212 0150 5370     	 strb r3,[r2,#1]
 807:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2213              	 .loc 1 807 0
 2214 0152 7B68     	 ldr r3,[r7,#4]
 2215 0154 5B7B     	 ldrb r3,[r3,#13]
 2216 0156 012B     	 cmp r3,#1
 2217 0158 11D1     	 bne .L107
 808:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           {
 809:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****             /* mask fifo empty interrupt */
 810:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****             xmc_device.device_register->dtknqr4_fifoemptymsk =
 2218              	 .loc 1 810 0
 2219 015a 1D4B     	 ldr r3,.L109
 2220 015c D3F87431 	 ldr r3,[r3,#372]
 811:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 2221              	 .loc 1 811 0
 2222 0160 1B4A     	 ldr r2,.L109
 2223 0162 D2F87421 	 ldr r2,[r2,#372]
 2224 0166 516B     	 ldr r1,[r2,#52]
 2225 0168 97F82F20 	 ldrb r2,[r7,#47]
 2226 016c 0120     	 movs r0,#1
 2227 016e 00FA02F2 	 lsl r2,r0,r2
 2228 0172 D243     	 mvns r2,r2
 2229 0174 0A40     	 ands r2,r2,r1
 810:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****             (uint32_t)(xmc_device.device_register->dtknqr4_fifoemptymsk & ~(((uint32_t)1U << ep_num
 2230              	 .loc 1 810 0
 2231 0176 596B     	 ldr r1,[r3,#52]
 2232 0178 0021     	 movs r1,#0
 2233 017a 0A43     	 orrs r2,r2,r1
 2234 017c 5A63     	 str r2,[r3,#52]
 2235              	.L107:
 812:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           }
 813:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           xmc_device.EndpointEvent_cb(0x80U | ep_num,XMC_USBD_EP_EVENT_IN);
 2236              	 .loc 1 813 0
 2237 017e 144B     	 ldr r3,.L109
 2238 0180 D3F8D331 	 ldr r3,[r3,#467]
 2239 0184 97F82F20 	 ldrb r2,[r7,#47]
 2240 0188 62F07F02 	 orn r2,r2,#127
 2241 018c D2B2     	 uxtb r2,r2
 2242 018e 1046     	 mov r0,r2
 2243 0190 0221     	 movs r1,#2
 2244 0192 9847     	 blx r3
 2245 0194 02E0     	 b .L104
 2246              	.L106:
 814:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         }
 815:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         else
 816:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         {
 817:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           /* start next step of transfer */
 818:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****           XMC_USBD_lStartWriteXfer(ep);
 2247              	 .loc 1 818 0
 2248 0196 786A     	 ldr r0,[r7,#36]
 2249 0198 FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
 2250              	.L104:
 819:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         }
 820:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 821:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       }
 822:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 823:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       XMC_USBD_ClearEventINEP((uint32_t)diepint.d32,ep_num);
 2251              	 .loc 1 823 0
 2252 019c FA68     	 ldr r2,[r7,#12]
 2253 019e 97F82F30 	 ldrb r3,[r7,#47]
 2254 01a2 1046     	 mov r0,r2
 2255 01a4 1946     	 mov r1,r3
 2256 01a6 FFF7FEFF 	 bl XMC_USBD_ClearEventINEP
 2257              	.L101:
 824:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 825:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep_num++;
 2258              	 .loc 1 825 0
 2259 01aa 97F82F30 	 ldrb r3,[r7,#47]
 2260 01ae 0133     	 adds r3,r3,#1
 2261 01b0 87F82F30 	 strb r3,[r7,#47]
 2262              	.L100:
 767:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 2263              	 .loc 1 767 0
 2264 01b4 BA8D     	 ldrh r2,[r7,#44]
 2265 01b6 97F82F30 	 ldrb r3,[r7,#47]
 2266 01ba 42FA03F3 	 asr r3,r2,r3
 2267 01be 002B     	 cmp r3,#0
 2268 01c0 7FF434AF 	 bne .L108
 826:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 827:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_ClearEvent(XMC_USBD_EVENT_INEP);
 2269              	 .loc 1 827 0
 2270 01c4 0E20     	 movs r0,#14
 2271 01c6 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 828:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2272              	 .loc 1 828 0
 2273 01ca 3037     	 adds r7,r7,#48
 2274              	.LCFI77:
 2275              	 .cfi_def_cfa_offset 8
 2276 01cc BD46     	 mov sp,r7
 2277              	.LCFI78:
 2278              	 .cfi_def_cfa_register 13
 2279              	 
 2280 01ce 80BD     	 pop {r7,pc}
 2281              	.L110:
 2282              	 .align 2
 2283              	.L109:
 2284 01d0 00000000 	 .word xmc_device
 2285              	 .cfi_endproc
 2286              	.LFE182:
 2288              	 .section .text.XMC_USBD_lHandleRxFLvl,"ax",%progbits
 2289              	 .align 2
 2290              	 .thumb
 2291              	 .thumb_func
 2293              	XMC_USBD_lHandleRxFLvl:
 2294              	.LFB183:
 829:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 830:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 831:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief RX Fifo interrupt handler
 832:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 833:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * This function handles the interrupt, when the rx fifo is not empty anymore.
 834:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 835:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lHandleRxFLvl(void) 
 836:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2295              	 .loc 1 836 0
 2296              	 .cfi_startproc
 2297              	 
 2298              	 
 2299 0000 80B5     	 push {r7,lr}
 2300              	.LCFI79:
 2301              	 .cfi_def_cfa_offset 8
 2302              	 .cfi_offset 7,-8
 2303              	 .cfi_offset 14,-4
 2304 0002 82B0     	 sub sp,sp,#8
 2305              	.LCFI80:
 2306              	 .cfi_def_cfa_offset 16
 2307 0004 00AF     	 add r7,sp,#0
 2308              	.LCFI81:
 2309              	 .cfi_def_cfa_register 7
 837:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   device_grxsts_data_t data;	
 838:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->grxstsp;
 2310              	 .loc 1 838 0
 2311 0006 1D4B     	 ldr r3,.L121
 2312 0008 D3F87031 	 ldr r3,[r3,#368]
 2313 000c 1B6A     	 ldr r3,[r3,#32]
 2314 000e 7B60     	 str r3,[r7,#4]
 839:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 840:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   switch (data.b.pktsts)
 2315              	 .loc 1 840 0
 2316 0010 BB79     	 ldrb r3,[r7,#6]
 2317 0012 C3F34303 	 ubfx r3,r3,#1,#4
 2318 0016 DBB2     	 uxtb r3,r3
 2319 0018 013B     	 subs r3,r3,#1
 2320 001a 052B     	 cmp r3,#5
 2321 001c 2AD8     	 bhi .L120
 2322 001e 01A2     	 adr r2,.L114
 2323 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2324              	 .p2align 2
 2325              	.L114:
 2326 0024 75000000 	 .word .L120+1
 2327 0028 3D000000 	 .word .L115+1
 2328 002c 75000000 	 .word .L120+1
 2329 0030 75000000 	 .word .L120+1
 2330 0034 75000000 	 .word .L120+1
 2331 0038 59000000 	 .word .L118+1
 2332              	 .p2align 1
 2333              	.L115:
 841:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	{
 842:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_GOUTNAK:
 843:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       break;
 844:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTCMPL:
 845:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       break;
 846:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_OUTDATA:
 847:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 2334              	 .loc 1 847 0
 2335 003c 3B79     	 ldrb r3,[r7,#4]
 2336 003e C3F30303 	 ubfx r3,r3,#0,#4
 2337 0042 DBB2     	 uxtb r3,r3
 2338 0044 1A46     	 mov r2,r3
 2339 0046 BB88     	 ldrh r3,[r7,#4]
 2340 0048 C3F30A13 	 ubfx r3,r3,#4,#11
 2341 004c 9BB2     	 uxth r3,r3
 2342 004e 1046     	 mov r0,r2
 2343 0050 1946     	 mov r1,r3
 2344 0052 FFF7FEFF 	 bl XMC_USBD_lReadFifo
 848:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       break;
 2345              	 .loc 1 848 0
 2346 0056 0EE0     	 b .L111
 2347              	.L118:
 849:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUP:
 850:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lReadFifo((uint32_t)data.b.epnum,(uint32_t)data.b.bcnt);
 2348              	 .loc 1 850 0
 2349 0058 3B79     	 ldrb r3,[r7,#4]
 2350 005a C3F30303 	 ubfx r3,r3,#0,#4
 2351 005e DBB2     	 uxtb r3,r3
 2352 0060 1A46     	 mov r2,r3
 2353 0062 BB88     	 ldrh r3,[r7,#4]
 2354 0064 C3F30A13 	 ubfx r3,r3,#4,#11
 2355 0068 9BB2     	 uxth r3,r3
 2356 006a 1046     	 mov r0,r2
 2357 006c 1946     	 mov r1,r3
 2358 006e FFF7FEFF 	 bl XMC_USBD_lReadFifo
 851:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       break;
 2359              	 .loc 1 851 0
 2360 0072 00E0     	 b .L111
 2361              	.L120:
 852:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case XMC_USBD_GRXSTS_PKTSTS_SETUPCMPL:
 853:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       break;
 854:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     default:
 855:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       break;
 2362              	 .loc 1 855 0
 2363 0074 00BF     	 nop
 2364              	.L111:
 856:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	}
 857:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* no need to clear */
 858:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2365              	 .loc 1 858 0
 2366 0076 0837     	 adds r7,r7,#8
 2367              	.LCFI82:
 2368              	 .cfi_def_cfa_offset 8
 2369 0078 BD46     	 mov sp,r7
 2370              	.LCFI83:
 2371              	 .cfi_def_cfa_register 13
 2372              	 
 2373 007a 80BD     	 pop {r7,pc}
 2374              	.L122:
 2375              	 .align 2
 2376              	.L121:
 2377 007c 00000000 	 .word xmc_device
 2378              	 .cfi_endproc
 2379              	.LFE183:
 2381              	 .section .text.XMC_USBD_IRQHandler,"ax",%progbits
 2382              	 .align 2
 2383              	 .global XMC_USBD_IRQHandler
 2384              	 .thumb
 2385              	 .thumb_func
 2387              	XMC_USBD_IRQHandler:
 2388              	.LFB184:
 859:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 860:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 861:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * @brief Global interrupt handler
 862:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *
 863:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * The handler first checks, which global interrupt has caused the interrupt
 864:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * and then dispatches interrupt to the corresponding sub-handler.
 865:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  */
 866:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** void XMC_USBD_IRQHandler(const XMC_USBD_t *const obj) 
 867:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2389              	 .loc 1 867 0
 2390              	 .cfi_startproc
 2391              	 
 2392              	 
 2393 0000 80B5     	 push {r7,lr}
 2394              	.LCFI84:
 2395              	 .cfi_def_cfa_offset 8
 2396              	 .cfi_offset 7,-8
 2397              	 .cfi_offset 14,-4
 2398 0002 84B0     	 sub sp,sp,#16
 2399              	.LCFI85:
 2400              	 .cfi_def_cfa_offset 24
 2401 0004 00AF     	 add r7,sp,#0
 2402              	.LCFI86:
 2403              	 .cfi_def_cfa_register 7
 2404 0006 7860     	 str r0,[r7,#4]
 868:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
 869:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintsts_data_t data;
 870:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
 871:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = xmc_device.global_register->gintmsk;
 2405              	 .loc 1 871 0
 2406 0008 524B     	 ldr r3,.L135
 2407 000a D3F87031 	 ldr r3,[r3,#368]
 2408 000e 9B69     	 ldr r3,[r3,#24]
 2409 0010 FB60     	 str r3,[r7,#12]
 872:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.global_register->gintsts & gintmsk.d32;
 2410              	 .loc 1 872 0
 2411 0012 504B     	 ldr r3,.L135
 2412 0014 D3F87031 	 ldr r3,[r3,#368]
 2413 0018 5A69     	 ldr r2,[r3,#20]
 2414 001a FB68     	 ldr r3,[r7,#12]
 2415 001c 1340     	 ands r3,r3,r2
 2416 001e BB60     	 str r3,[r7,#8]
 873:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
 874:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.sofintr)
 2417              	 .loc 1 874 0
 2418 0020 3B7A     	 ldrb r3,[r7,#8]
 2419 0022 03F00803 	 and r3,r3,#8
 2420 0026 DBB2     	 uxtb r3,r3
 2421 0028 002B     	 cmp r3,#0
 2422 002a 07D0     	 beq .L124
 875:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 876:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SOF);
 2423              	 .loc 1 876 0
 2424 002c 494B     	 ldr r3,.L135
 2425 002e D3F8CF31 	 ldr r3,[r3,#463]
 2426 0032 0920     	 movs r0,#9
 2427 0034 9847     	 blx r3
 877:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SOF);
 2428              	 .loc 1 877 0
 2429 0036 0920     	 movs r0,#9
 2430 0038 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2431              	.L124:
 878:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 879:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 2432              	 .loc 1 879 0
 2433 003c 7B68     	 ldr r3,[r7,#4]
 2434 003e 5B7B     	 ldrb r3,[r3,#13]
 2435 0040 012B     	 cmp r3,#1
 2436 0042 1FD1     	 bne .L125
 880:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 881:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (data.b.rxstsqlvl)
 2437              	 .loc 1 881 0
 2438 0044 3B7A     	 ldrb r3,[r7,#8]
 2439 0046 03F01003 	 and r3,r3,#16
 2440 004a DBB2     	 uxtb r3,r3
 2441 004c 002B     	 cmp r3,#0
 2442 004e 19D0     	 beq .L125
 882:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
 883:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /* Masked that interrupt so its only done once */
 884:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 0U;
 2443              	 .loc 1 884 0
 2444 0050 3B7B     	 ldrb r3,[r7,#12]
 2445 0052 6FF30413 	 bfc r3,#4,#1
 2446 0056 3B73     	 strb r3,[r7,#12]
 885:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2447              	 .loc 1 885 0
 2448 0058 3E4B     	 ldr r3,.L135
 2449 005a D3F87031 	 ldr r3,[r3,#368]
 2450 005e FA68     	 ldr r2,[r7,#12]
 2451 0060 9969     	 ldr r1,[r3,#24]
 2452 0062 0021     	 movs r1,#0
 2453 0064 0A43     	 orrs r2,r2,r1
 2454 0066 9A61     	 str r2,[r3,#24]
 886:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       XMC_USBD_lHandleRxFLvl(); /* handle the interrupt */
 2455              	 .loc 1 886 0
 2456 0068 FFF7FEFF 	 bl XMC_USBD_lHandleRxFLvl
 887:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       gintmsk.b.rxstsqlvl = 1U;
 2457              	 .loc 1 887 0
 2458 006c 3B7B     	 ldrb r3,[r7,#12]
 2459 006e 43F01003 	 orr r3,r3,#16
 2460 0072 3B73     	 strb r3,[r7,#12]
 888:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       xmc_device.global_register->gintmsk = gintmsk.d32;
 2461              	 .loc 1 888 0
 2462 0074 374B     	 ldr r3,.L135
 2463 0076 D3F87031 	 ldr r3,[r3,#368]
 2464 007a FA68     	 ldr r2,[r7,#12]
 2465 007c 9969     	 ldr r1,[r3,#24]
 2466 007e 0021     	 movs r1,#0
 2467 0080 0A43     	 orrs r2,r2,r1
 2468 0082 9A61     	 str r2,[r3,#24]
 2469              	.L125:
 889:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
 890:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 891:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.erlysuspend)
 2470              	 .loc 1 891 0
 2471 0084 7B7A     	 ldrb r3,[r7,#9]
 2472 0086 03F00403 	 and r3,r3,#4
 2473 008a DBB2     	 uxtb r3,r3
 2474 008c 002B     	 cmp r3,#0
 2475 008e 02D0     	 beq .L126
 892:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 893:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_EARLYSUSPEND);
 2476              	 .loc 1 893 0
 2477 0090 0A20     	 movs r0,#10
 2478 0092 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2479              	.L126:
 894:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 895:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.usbsuspend)
 2480              	 .loc 1 895 0
 2481 0096 7B7A     	 ldrb r3,[r7,#9]
 2482 0098 03F00803 	 and r3,r3,#8
 2483 009c DBB2     	 uxtb r3,r3
 2484 009e 002B     	 cmp r3,#0
 2485 00a0 07D0     	 beq .L127
 896:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 897:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_SUSPEND);
 2486              	 .loc 1 897 0
 2487 00a2 2C4B     	 ldr r3,.L135
 2488 00a4 D3F8CF31 	 ldr r3,[r3,#463]
 2489 00a8 0620     	 movs r0,#6
 2490 00aa 9847     	 blx r3
 898:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_SUSPEND);
 2491              	 .loc 1 898 0
 2492 00ac 0620     	 movs r0,#6
 2493 00ae FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2494              	.L127:
 899:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 900:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.wkupintr)
 2495              	 .loc 1 900 0
 2496 00b2 FB7A     	 ldrb r3,[r7,#11]
 2497 00b4 23F07F03 	 bic r3,r3,#127
 2498 00b8 DBB2     	 uxtb r3,r3
 2499 00ba 002B     	 cmp r3,#0
 2500 00bc 07D0     	 beq .L128
 901:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 902:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2501              	 .loc 1 902 0
 2502 00be 254B     	 ldr r3,.L135
 2503 00c0 D3F8CF31 	 ldr r3,[r3,#463]
 2504 00c4 0820     	 movs r0,#8
 2505 00c6 9847     	 blx r3
 903:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_REMOTE_WAKEUP);
 2506              	 .loc 1 903 0
 2507 00c8 0820     	 movs r0,#8
 2508 00ca FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2509              	.L128:
 904:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 905:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.sessreqintr)
 2510              	 .loc 1 905 0
 2511 00ce FB7A     	 ldrb r3,[r7,#11]
 2512 00d0 03F04003 	 and r3,r3,#64
 2513 00d4 DBB2     	 uxtb r3,r3
 2514 00d6 002B     	 cmp r3,#0
 2515 00d8 0ED0     	 beq .L129
 906:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 907:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.IsPowered = 1U;
 2516              	 .loc 1 907 0
 2517 00da 1E4A     	 ldr r2,.L135
 2518 00dc 92F8CE31 	 ldrb r3,[r2,#462]
 2519 00e0 43F00403 	 orr r3,r3,#4
 2520 00e4 82F8CE31 	 strb r3,[r2,#462]
 908:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.DeviceEvent_cb(XMC_USBD_EVENT_POWER_ON);
 2521              	 .loc 1 908 0
 2522 00e8 1A4B     	 ldr r3,.L135
 2523 00ea D3F8CF31 	 ldr r3,[r3,#463]
 2524 00ee 0020     	 movs r0,#0
 2525 00f0 9847     	 blx r3
 909:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_ClearEvent(XMC_USBD_EVENT_POWER_ON);
 2526              	 .loc 1 909 0
 2527 00f2 0020     	 movs r0,#0
 2528 00f4 FFF7FEFF 	 bl XMC_USBD_ClearEvent
 2529              	.L129:
 910:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 911:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.usbreset)
 2530              	 .loc 1 911 0
 2531 00f8 7B7A     	 ldrb r3,[r7,#9]
 2532 00fa 03F01003 	 and r3,r3,#16
 2533 00fe DBB2     	 uxtb r3,r3
 2534 0100 002B     	 cmp r3,#0
 2535 0102 02D0     	 beq .L130
 912:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 913:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleUSBReset(obj);
 2536              	 .loc 1 913 0
 2537 0104 7868     	 ldr r0,[r7,#4]
 2538 0106 FFF7FEFF 	 bl XMC_USBD_lHandleUSBReset
 2539              	.L130:
 914:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 915:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.enumdone)
 2540              	 .loc 1 915 0
 2541 010a 7B7A     	 ldrb r3,[r7,#9]
 2542 010c 03F02003 	 and r3,r3,#32
 2543 0110 DBB2     	 uxtb r3,r3
 2544 0112 002B     	 cmp r3,#0
 2545 0114 01D0     	 beq .L131
 916:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 917:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleEnumDone();
 2546              	 .loc 1 917 0
 2547 0116 FFF7FEFF 	 bl XMC_USBD_lHandleEnumDone
 2548              	.L131:
 918:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 919:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.inepint)
 2549              	 .loc 1 919 0
 2550 011a BB7A     	 ldrb r3,[r7,#10]
 2551 011c 03F00403 	 and r3,r3,#4
 2552 0120 DBB2     	 uxtb r3,r3
 2553 0122 002B     	 cmp r3,#0
 2554 0124 02D0     	 beq .L132
 920:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 921:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lHandleIEPInt(obj);
 2555              	 .loc 1 921 0
 2556 0126 7868     	 ldr r0,[r7,#4]
 2557 0128 FFF7FEFF 	 bl XMC_USBD_lHandleIEPInt
 2558              	.L132:
 922:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 923:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (data.b.outepintr)
 2559              	 .loc 1 923 0
 2560 012c BB7A     	 ldrb r3,[r7,#10]
 2561 012e 03F00803 	 and r3,r3,#8
 2562 0132 DBB2     	 uxtb r3,r3
 2563 0134 002B     	 cmp r3,#0
 2564 0136 02D0     	 beq .L133
 924:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 925:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		XMC_USBD_lHandleOEPInt(obj);
 2565              	 .loc 1 925 0
 2566 0138 7868     	 ldr r0,[r7,#4]
 2567 013a FFF7FEFF 	 bl XMC_USBD_lHandleOEPInt
 2568              	.L133:
 926:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 927:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	if (data.b.otgintr)
 2569              	 .loc 1 927 0
 2570 013e 3B7A     	 ldrb r3,[r7,#8]
 2571 0140 03F00403 	 and r3,r3,#4
 2572 0144 DBB2     	 uxtb r3,r3
 2573 0146 002B     	 cmp r3,#0
 2574 0148 01D0     	 beq .L123
 928:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 929:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_lHandleOTGInt();
 2575              	 .loc 1 929 0
 2576 014a FFF7FEFF 	 bl XMC_USBD_lHandleOTGInt
 2577              	.L123:
 930:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
 931:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 932:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2578              	 .loc 1 932 0
 2579 014e 1037     	 adds r7,r7,#16
 2580              	.LCFI87:
 2581              	 .cfi_def_cfa_offset 8
 2582 0150 BD46     	 mov sp,r7
 2583              	.LCFI88:
 2584              	 .cfi_def_cfa_register 13
 2585              	 
 2586 0152 80BD     	 pop {r7,pc}
 2587              	.L136:
 2588              	 .align 2
 2589              	.L135:
 2590 0154 00000000 	 .word xmc_device
 2591              	 .cfi_endproc
 2592              	.LFE184:
 2594              	 .section .text.XMC_USBD_Enable,"ax",%progbits
 2595              	 .align 2
 2596              	 .global XMC_USBD_Enable
 2597              	 .thumb
 2598              	 .thumb_func
 2600              	XMC_USBD_Enable:
 2601              	.LFB185:
 933:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 934:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 935:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /*******************************************************************************
 936:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * API IMPLEMENTATION
 937:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  *******************************************************************************/
 938:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 939:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Enables the USB0 module
 940:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
 941:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Enable(void) 
 942:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2602              	 .loc 1 942 0
 2603              	 .cfi_startproc
 2604              	 
 2605              	 
 2606 0000 80B5     	 push {r7,lr}
 2607              	.LCFI89:
 2608              	 .cfi_def_cfa_offset 8
 2609              	 .cfi_offset 7,-8
 2610              	 .cfi_offset 14,-4
 2611 0002 00AF     	 add r7,sp,#0
 2612              	.LCFI90:
 2613              	 .cfi_def_cfa_register 7
 943:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 944:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2614              	 .loc 1 944 0
 2615 0004 0448     	 ldr r0,.L138
 2616 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 945:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #endif
 946:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Reset and power up */
 947:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2617              	 .loc 1 947 0
 2618 000a 0348     	 ldr r0,.L138
 2619 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 948:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_EnableUsb();
 2620              	 .loc 1 948 0
 2621 0010 FFF7FEFF 	 bl XMC_SCU_POWER_EnableUsb
 949:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2622              	 .loc 1 949 0
 2623 0014 80BD     	 pop {r7,pc}
 2624              	.L139:
 2625 0016 00BF     	 .align 2
 2626              	.L138:
 2627 0018 80000020 	 .word 536871040
 2628              	 .cfi_endproc
 2629              	.LFE185:
 2631              	 .section .text.XMC_USBD_Disable,"ax",%progbits
 2632              	 .align 2
 2633              	 .global XMC_USBD_Disable
 2634              	 .thumb
 2635              	 .thumb_func
 2637              	XMC_USBD_Disable:
 2638              	.LFB186:
 950:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 951:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 952:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Disables the USB0 module
 953:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
 954:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** void XMC_USBD_Disable(void) 
 955:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2639              	 .loc 1 955 0
 2640              	 .cfi_startproc
 2641              	 
 2642              	 
 2643 0000 80B5     	 push {r7,lr}
 2644              	.LCFI91:
 2645              	 .cfi_def_cfa_offset 8
 2646              	 .cfi_offset 7,-8
 2647              	 .cfi_offset 14,-4
 2648 0002 00AF     	 add r7,sp,#0
 2649              	.LCFI92:
 2650              	 .cfi_def_cfa_register 7
 956:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Clear Reset and power up */
 957:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USB0);
 2651              	 .loc 1 957 0
 2652 0004 0448     	 ldr r0,.L141
 2653 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 958:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #if defined(CLOCK_GATING_SUPPORTED)
 959:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USB0);
 2654              	 .loc 1 959 0
 2655 000a 0348     	 ldr r0,.L141
 2656 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 960:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #endif
 961:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_SCU_POWER_DisableUsb();
 2657              	 .loc 1 961 0
 2658 0010 FFF7FEFF 	 bl XMC_SCU_POWER_DisableUsb
 962:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2659              	 .loc 1 962 0
 2660 0014 80BD     	 pop {r7,pc}
 2661              	.L142:
 2662 0016 00BF     	 .align 2
 2663              	.L141:
 2664 0018 80000020 	 .word 536871040
 2665              	 .cfi_endproc
 2666              	.LFE186:
 2668              	 .section .text.XMC_USBD_ClearEvent,"ax",%progbits
 2669              	 .align 2
 2670              	 .global XMC_USBD_ClearEvent
 2671              	 .thumb
 2672              	 .thumb_func
 2674              	XMC_USBD_ClearEvent:
 2675              	.LFB187:
 963:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
 964:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
 965:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Clear the USB device event
 966:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
 967:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEvent(const XMC_USBD_EVENT_t event) 
 968:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2676              	 .loc 1 968 0
 2677              	 .cfi_startproc
 2678              	 
 2679              	 
 2680              	 
 2681 0000 80B4     	 push {r7}
 2682              	.LCFI93:
 2683              	 .cfi_def_cfa_offset 4
 2684              	 .cfi_offset 7,-4
 2685 0002 85B0     	 sub sp,sp,#20
 2686              	.LCFI94:
 2687              	 .cfi_def_cfa_offset 24
 2688 0004 00AF     	 add r7,sp,#0
 2689              	.LCFI95:
 2690              	 .cfi_def_cfa_register 7
 2691 0006 0346     	 mov r3,r0
 2692 0008 FB71     	 strb r3,[r7,#7]
 969:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintsts_data_t clear;
 970:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   clear.d32 = 0U;
 2693              	 .loc 1 970 0
 2694 000a 0023     	 movs r3,#0
 2695 000c FB60     	 str r3,[r7,#12]
 971:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   switch(event)
 2696              	 .loc 1 971 0
 2697 000e FB79     	 ldrb r3,[r7,#7]
 2698 0010 0D2B     	 cmp r3,#13
 2699 0012 4CD8     	 bhi .L156
 2700 0014 01A2     	 adr r2,.L146
 2701 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2702 001a 00BF     	 .p2align 2
 2703              	.L146:
 2704 001c 55000000 	 .word .L145+1
 2705 0020 AF000000 	 .word .L156+1
 2706 0024 AF000000 	 .word .L156+1
 2707 0028 AF000000 	 .word .L156+1
 2708 002c 5F000000 	 .word .L147+1
 2709 0030 AF000000 	 .word .L156+1
 2710 0034 69000000 	 .word .L148+1
 2711 0038 73000000 	 .word .L149+1
 2712 003c 7D000000 	 .word .L150+1
 2713 0040 87000000 	 .word .L151+1
 2714 0044 91000000 	 .word .L152+1
 2715 0048 9B000000 	 .word .L153+1
 2716 004c AF000000 	 .word .L156+1
 2717 0050 A5000000 	 .word .L154+1
 2718              	 .p2align 1
 2719              	.L145:
 972:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 973:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_POWER_ON):
 974:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  clear.b.sessreqintr = 1U;
 2720              	 .loc 1 974 0
 2721 0054 FB7B     	 ldrb r3,[r7,#15]
 2722 0056 43F04003 	 orr r3,r3,#64
 2723 005a FB73     	 strb r3,[r7,#15]
 975:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  break;
 2724              	 .loc 1 975 0
 2725 005c 28E0     	 b .L155
 2726              	.L147:
 976:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESET):
 977:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbreset = 1U;
 2727              	 .loc 1 977 0
 2728 005e 7B7B     	 ldrb r3,[r7,#13]
 2729 0060 43F01003 	 orr r3,r3,#16
 2730 0064 7B73     	 strb r3,[r7,#13]
 978:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  break;
 2731              	 .loc 1 978 0
 2732 0066 23E0     	 b .L155
 2733              	.L148:
 979:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SUSPEND):
 980:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  clear.b.usbsuspend = 1U;
 2734              	 .loc 1 980 0
 2735 0068 7B7B     	 ldrb r3,[r7,#13]
 2736 006a 43F00803 	 orr r3,r3,#8
 2737 006e 7B73     	 strb r3,[r7,#13]
 981:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  break;
 2738              	 .loc 1 981 0
 2739 0070 1EE0     	 b .L155
 2740              	.L149:
 982:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_RESUME):
 983:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 2741              	 .loc 1 983 0
 2742 0072 FB7B     	 ldrb r3,[r7,#15]
 2743 0074 43F08003 	 orr r3,r3,#128
 2744 0078 FB73     	 strb r3,[r7,#15]
 984:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  break;
 2745              	 .loc 1 984 0
 2746 007a 19E0     	 b .L155
 2747              	.L150:
 985:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_REMOTE_WAKEUP):
 986:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  clear.b.wkupintr = 1U;
 2748              	 .loc 1 986 0
 2749 007c FB7B     	 ldrb r3,[r7,#15]
 2750 007e 43F08003 	 orr r3,r3,#128
 2751 0082 FB73     	 strb r3,[r7,#15]
 987:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  break;
 2752              	 .loc 1 987 0
 2753 0084 14E0     	 b .L155
 2754              	.L151:
 988:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_SOF):
 989:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  clear.b.sofintr = 1U;
 2755              	 .loc 1 989 0
 2756 0086 3B7B     	 ldrb r3,[r7,#12]
 2757 0088 43F00803 	 orr r3,r3,#8
 2758 008c 3B73     	 strb r3,[r7,#12]
 990:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  break;
 2759              	 .loc 1 990 0
 2760 008e 0FE0     	 b .L155
 2761              	.L152:
 991:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_EARLYSUSPEND):
 992:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  clear.b.erlysuspend = 1U;
 2762              	 .loc 1 992 0
 2763 0090 7B7B     	 ldrb r3,[r7,#13]
 2764 0092 43F00403 	 orr r3,r3,#4
 2765 0096 7B73     	 strb r3,[r7,#13]
 993:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  break;
 2766              	 .loc 1 993 0
 2767 0098 0AE0     	 b .L155
 2768              	.L153:
 994:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_ENUMDONE):
 995:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  clear.b.enumdone = 1U;
 2769              	 .loc 1 995 0
 2770 009a 7B7B     	 ldrb r3,[r7,#13]
 2771 009c 43F02003 	 orr r3,r3,#32
 2772 00a0 7B73     	 strb r3,[r7,#13]
 996:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  break;
 2773              	 .loc 1 996 0
 2774 00a2 05E0     	 b .L155
 2775              	.L154:
 997:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     case (XMC_USBD_EVENT_OUTEP):
 998:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  clear.b.outepintr = 1U;
 2776              	 .loc 1 998 0
 2777 00a4 BB7B     	 ldrb r3,[r7,#14]
 2778 00a6 43F00803 	 orr r3,r3,#8
 2779 00aa BB73     	 strb r3,[r7,#14]
 999:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  break;
 2780              	 .loc 1 999 0
 2781 00ac 00E0     	 b .L155
 2782              	.L156:
1000:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		default:
1001:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		break;
 2783              	 .loc 1 1001 0
 2784 00ae 00BF     	 nop
 2785              	.L155:
1002:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	}
1003:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	xmc_device.global_register->gintsts = clear.d32;
 2786              	 .loc 1 1003 0
 2787 00b0 064B     	 ldr r3,.L157
 2788 00b2 D3F87031 	 ldr r3,[r3,#368]
 2789 00b6 FA68     	 ldr r2,[r7,#12]
 2790 00b8 5969     	 ldr r1,[r3,#20]
 2791 00ba 0021     	 movs r1,#0
 2792 00bc 0A43     	 orrs r2,r2,r1
 2793 00be 5A61     	 str r2,[r3,#20]
1004:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2794              	 .loc 1 1004 0
 2795 00c0 1437     	 adds r7,r7,#20
 2796              	.LCFI96:
 2797              	 .cfi_def_cfa_offset 4
 2798 00c2 BD46     	 mov sp,r7
 2799              	.LCFI97:
 2800              	 .cfi_def_cfa_register 13
 2801              	 
 2802 00c4 5DF8047B 	 ldr r7,[sp],#4
 2803              	.LCFI98:
 2804              	 .cfi_restore 7
 2805              	 .cfi_def_cfa_offset 0
 2806 00c8 7047     	 bx lr
 2807              	.L158:
 2808 00ca 00BF     	 .align 2
 2809              	.L157:
 2810 00cc 00000000 	 .word xmc_device
 2811              	 .cfi_endproc
 2812              	.LFE187:
 2814              	 .section .text.XMC_USBD_lClearEventOTG,"ax",%progbits
 2815              	 .align 2
 2816              	 .thumb
 2817              	 .thumb_func
 2819              	XMC_USBD_lClearEventOTG:
 2820              	.LFB188:
1005:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1006:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1007:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Clear the USB OTG events
1008:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1009:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** static void XMC_USBD_lClearEventOTG(uint32_t event)
1010:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2821              	 .loc 1 1010 0
 2822              	 .cfi_startproc
 2823              	 
 2824              	 
 2825              	 
 2826 0000 80B4     	 push {r7}
 2827              	.LCFI99:
 2828              	 .cfi_def_cfa_offset 4
 2829              	 .cfi_offset 7,-4
 2830 0002 85B0     	 sub sp,sp,#20
 2831              	.LCFI100:
 2832              	 .cfi_def_cfa_offset 24
 2833 0004 00AF     	 add r7,sp,#0
 2834              	.LCFI101:
 2835              	 .cfi_def_cfa_register 7
 2836 0006 7860     	 str r0,[r7,#4]
1011:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gotgint_data_t clear = { .d32 = 0U};
 2837              	 .loc 1 1011 0
 2838 0008 0023     	 movs r3,#0
 2839 000a FB60     	 str r3,[r7,#12]
1012:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2840              	 .loc 1 1012 0
 2841 000c 7B68     	 ldr r3,[r7,#4]
 2842 000e FB60     	 str r3,[r7,#12]
1013:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gotgint = clear.d32;
 2843              	 .loc 1 1013 0
 2844 0010 064B     	 ldr r3,.L160
 2845 0012 D3F87031 	 ldr r3,[r3,#368]
 2846 0016 FA68     	 ldr r2,[r7,#12]
 2847 0018 5968     	 ldr r1,[r3,#4]
 2848 001a 0021     	 movs r1,#0
 2849 001c 0A43     	 orrs r2,r2,r1
 2850 001e 5A60     	 str r2,[r3,#4]
1014:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2851              	 .loc 1 1014 0
 2852 0020 1437     	 adds r7,r7,#20
 2853              	.LCFI102:
 2854              	 .cfi_def_cfa_offset 4
 2855 0022 BD46     	 mov sp,r7
 2856              	.LCFI103:
 2857              	 .cfi_def_cfa_register 13
 2858              	 
 2859 0024 5DF8047B 	 ldr r7,[sp],#4
 2860              	.LCFI104:
 2861              	 .cfi_restore 7
 2862              	 .cfi_def_cfa_offset 0
 2863 0028 7047     	 bx lr
 2864              	.L161:
 2865 002a 00BF     	 .align 2
 2866              	.L160:
 2867 002c 00000000 	 .word xmc_device
 2868              	 .cfi_endproc
 2869              	.LFE188:
 2871              	 .section .text.XMC_USBD_ClearEventINEP,"ax",%progbits
 2872              	 .align 2
 2873              	 .global XMC_USBD_ClearEventINEP
 2874              	 .thumb
 2875              	 .thumb_func
 2877              	XMC_USBD_ClearEventINEP:
 2878              	.LFB189:
1015:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1016:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1017:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Clear the USB IN EP events
1018:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1019:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventINEP(uint32_t event,const uint8_t ep_num)
1020:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2879              	 .loc 1 1020 0
 2880              	 .cfi_startproc
 2881              	 
 2882              	 
 2883              	 
 2884 0000 80B4     	 push {r7}
 2885              	.LCFI105:
 2886              	 .cfi_def_cfa_offset 4
 2887              	 .cfi_offset 7,-4
 2888 0002 85B0     	 sub sp,sp,#20
 2889              	.LCFI106:
 2890              	 .cfi_def_cfa_offset 24
 2891 0004 00AF     	 add r7,sp,#0
 2892              	.LCFI107:
 2893              	 .cfi_def_cfa_register 7
 2894 0006 7860     	 str r0,[r7,#4]
 2895 0008 0B46     	 mov r3,r1
 2896 000a FB70     	 strb r3,[r7,#3]
1021:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   diepint_data_t clear;
1022:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2897              	 .loc 1 1022 0
 2898 000c 7B68     	 ldr r3,[r7,#4]
 2899 000e FB60     	 str r3,[r7,#12]
1023:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_in_register[ep_num]->diepint = clear.d32;
 2900              	 .loc 1 1023 0
 2901 0010 FB78     	 ldrb r3,[r7,#3]
 2902 0012 074A     	 ldr r2,.L163
 2903 0014 5E33     	 adds r3,r3,#94
 2904 0016 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2905 001a FA68     	 ldr r2,[r7,#12]
 2906 001c 9968     	 ldr r1,[r3,#8]
 2907 001e 0021     	 movs r1,#0
 2908 0020 0A43     	 orrs r2,r2,r1
 2909 0022 9A60     	 str r2,[r3,#8]
1024:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2910              	 .loc 1 1024 0
 2911 0024 1437     	 adds r7,r7,#20
 2912              	.LCFI108:
 2913              	 .cfi_def_cfa_offset 4
 2914 0026 BD46     	 mov sp,r7
 2915              	.LCFI109:
 2916              	 .cfi_def_cfa_register 13
 2917              	 
 2918 0028 5DF8047B 	 ldr r7,[sp],#4
 2919              	.LCFI110:
 2920              	 .cfi_restore 7
 2921              	 .cfi_def_cfa_offset 0
 2922 002c 7047     	 bx lr
 2923              	.L164:
 2924 002e 00BF     	 .align 2
 2925              	.L163:
 2926 0030 00000000 	 .word xmc_device
 2927              	 .cfi_endproc
 2928              	.LFE189:
 2930              	 .section .text.XMC_USBD_ClearEventOUTEP,"ax",%progbits
 2931              	 .align 2
 2932              	 .global XMC_USBD_ClearEventOUTEP
 2933              	 .thumb
 2934              	 .thumb_func
 2936              	XMC_USBD_ClearEventOUTEP:
 2937              	.LFB190:
1025:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1026:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1027:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Clear the USB OUT EP events
1028:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1029:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** void XMC_USBD_ClearEventOUTEP(uint32_t event,const uint8_t ep_num)
1030:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2938              	 .loc 1 1030 0
 2939              	 .cfi_startproc
 2940              	 
 2941              	 
 2942              	 
 2943 0000 80B4     	 push {r7}
 2944              	.LCFI111:
 2945              	 .cfi_def_cfa_offset 4
 2946              	 .cfi_offset 7,-4
 2947 0002 85B0     	 sub sp,sp,#20
 2948              	.LCFI112:
 2949              	 .cfi_def_cfa_offset 24
 2950 0004 00AF     	 add r7,sp,#0
 2951              	.LCFI113:
 2952              	 .cfi_def_cfa_register 7
 2953 0006 7860     	 str r0,[r7,#4]
 2954 0008 0B46     	 mov r3,r1
 2955 000a FB70     	 strb r3,[r7,#3]
1031:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   doepint_data_t clear;
1032:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   clear.d32 = event;
 2956              	 .loc 1 1032 0
 2957 000c 7B68     	 ldr r3,[r7,#4]
 2958 000e FB60     	 str r3,[r7,#12]
1033:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.endpoint_out_register[ep_num]->doepint = clear.d32;
 2959              	 .loc 1 1033 0
 2960 0010 FB78     	 ldrb r3,[r7,#3]
 2961 0012 074A     	 ldr r2,.L166
 2962 0014 6433     	 adds r3,r3,#100
 2963 0016 9B00     	 lsls r3,r3,#2
 2964 0018 1344     	 add r3,r3,r2
 2965 001a 5B68     	 ldr r3,[r3,#4]
 2966 001c FA68     	 ldr r2,[r7,#12]
 2967 001e 9968     	 ldr r1,[r3,#8]
 2968 0020 0021     	 movs r1,#0
 2969 0022 0A43     	 orrs r2,r2,r1
 2970 0024 9A60     	 str r2,[r3,#8]
1034:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 2971              	 .loc 1 1034 0
 2972 0026 1437     	 adds r7,r7,#20
 2973              	.LCFI114:
 2974              	 .cfi_def_cfa_offset 4
 2975 0028 BD46     	 mov sp,r7
 2976              	.LCFI115:
 2977              	 .cfi_def_cfa_register 13
 2978              	 
 2979 002a 5DF8047B 	 ldr r7,[sp],#4
 2980              	.LCFI116:
 2981              	 .cfi_restore 7
 2982              	 .cfi_def_cfa_offset 0
 2983 002e 7047     	 bx lr
 2984              	.L167:
 2985              	 .align 2
 2986              	.L166:
 2987 0030 00000000 	 .word xmc_device
 2988              	 .cfi_endproc
 2989              	.LFE190:
 2991              	 .section .text.XMC_USBD_EnableEventOUTEP,"ax",%progbits
 2992              	 .align 2
 2993              	 .global XMC_USBD_EnableEventOUTEP
 2994              	 .thumb
 2995              	 .thumb_func
 2997              	XMC_USBD_EnableEventOUTEP:
 2998              	.LFB191:
1035:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1036:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1037:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Enable the USB OUT EP events
1038:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1039:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventOUTEP(uint32_t event)
1040:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 2999              	 .loc 1 1040 0
 3000              	 .cfi_startproc
 3001              	 
 3002              	 
 3003              	 
 3004 0000 80B4     	 push {r7}
 3005              	.LCFI117:
 3006              	 .cfi_def_cfa_offset 4
 3007              	 .cfi_offset 7,-4
 3008 0002 85B0     	 sub sp,sp,#20
 3009              	.LCFI118:
 3010              	 .cfi_def_cfa_offset 24
 3011 0004 00AF     	 add r7,sp,#0
 3012              	.LCFI119:
 3013              	 .cfi_def_cfa_register 7
 3014 0006 7860     	 str r0,[r7,#4]
1041:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	doepint_data_t doepint;
1042:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	doepint.d32 = event;
 3015              	 .loc 1 1042 0
 3016 0008 7B68     	 ldr r3,[r7,#4]
 3017 000a FB60     	 str r3,[r7,#12]
1043:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->doepmsk |= doepint.d32;
 3018              	 .loc 1 1043 0
 3019 000c 084B     	 ldr r3,.L169
 3020 000e D3F87431 	 ldr r3,[r3,#372]
 3021 0012 074A     	 ldr r2,.L169
 3022 0014 D2F87421 	 ldr r2,[r2,#372]
 3023 0018 5169     	 ldr r1,[r2,#20]
 3024 001a FA68     	 ldr r2,[r7,#12]
 3025 001c 0A43     	 orrs r2,r2,r1
 3026 001e 5969     	 ldr r1,[r3,#20]
 3027 0020 0021     	 movs r1,#0
 3028 0022 0A43     	 orrs r2,r2,r1
 3029 0024 5A61     	 str r2,[r3,#20]
1044:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 3030              	 .loc 1 1044 0
 3031 0026 1437     	 adds r7,r7,#20
 3032              	.LCFI120:
 3033              	 .cfi_def_cfa_offset 4
 3034 0028 BD46     	 mov sp,r7
 3035              	.LCFI121:
 3036              	 .cfi_def_cfa_register 13
 3037              	 
 3038 002a 5DF8047B 	 ldr r7,[sp],#4
 3039              	.LCFI122:
 3040              	 .cfi_restore 7
 3041              	 .cfi_def_cfa_offset 0
 3042 002e 7047     	 bx lr
 3043              	.L170:
 3044              	 .align 2
 3045              	.L169:
 3046 0030 00000000 	 .word xmc_device
 3047              	 .cfi_endproc
 3048              	.LFE191:
 3050              	 .section .text.XMC_USBD_EnableEventINEP,"ax",%progbits
 3051              	 .align 2
 3052              	 .global XMC_USBD_EnableEventINEP
 3053              	 .thumb
 3054              	 .thumb_func
 3056              	XMC_USBD_EnableEventINEP:
 3057              	.LFB192:
1045:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1046:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1047:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Enable the USB IN EP events
1048:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1049:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** void XMC_USBD_EnableEventINEP(uint32_t event)
1050:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 3058              	 .loc 1 1050 0
 3059              	 .cfi_startproc
 3060              	 
 3061              	 
 3062              	 
 3063 0000 80B4     	 push {r7}
 3064              	.LCFI123:
 3065              	 .cfi_def_cfa_offset 4
 3066              	 .cfi_offset 7,-4
 3067 0002 85B0     	 sub sp,sp,#20
 3068              	.LCFI124:
 3069              	 .cfi_def_cfa_offset 24
 3070 0004 00AF     	 add r7,sp,#0
 3071              	.LCFI125:
 3072              	 .cfi_def_cfa_register 7
 3073 0006 7860     	 str r0,[r7,#4]
1051:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	diepint_data_t diepint;
1052:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	diepint.d32 = event;
 3074              	 .loc 1 1052 0
 3075 0008 7B68     	 ldr r3,[r7,#4]
 3076 000a FB60     	 str r3,[r7,#12]
1053:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	xmc_device.device_register->diepmsk |= diepint.d32;
 3077              	 .loc 1 1053 0
 3078 000c 084B     	 ldr r3,.L172
 3079 000e D3F87431 	 ldr r3,[r3,#372]
 3080 0012 074A     	 ldr r2,.L172
 3081 0014 D2F87421 	 ldr r2,[r2,#372]
 3082 0018 1169     	 ldr r1,[r2,#16]
 3083 001a FA68     	 ldr r2,[r7,#12]
 3084 001c 0A43     	 orrs r2,r2,r1
 3085 001e 1969     	 ldr r1,[r3,#16]
 3086 0020 0021     	 movs r1,#0
 3087 0022 0A43     	 orrs r2,r2,r1
 3088 0024 1A61     	 str r2,[r3,#16]
1054:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 3089              	 .loc 1 1054 0
 3090 0026 1437     	 adds r7,r7,#20
 3091              	.LCFI126:
 3092              	 .cfi_def_cfa_offset 4
 3093 0028 BD46     	 mov sp,r7
 3094              	.LCFI127:
 3095              	 .cfi_def_cfa_register 13
 3096              	 
 3097 002a 5DF8047B 	 ldr r7,[sp],#4
 3098              	.LCFI128:
 3099              	 .cfi_restore 7
 3100              	 .cfi_def_cfa_offset 0
 3101 002e 7047     	 bx lr
 3102              	.L173:
 3103              	 .align 2
 3104              	.L172:
 3105 0030 00000000 	 .word xmc_device
 3106              	 .cfi_endproc
 3107              	.LFE192:
 3109              	 .section .text.XMC_USBD_GetCapabilities,"ax",%progbits
 3110              	 .align 2
 3111              	 .global XMC_USBD_GetCapabilities
 3112              	 .thumb
 3113              	 .thumb_func
 3115              	XMC_USBD_GetCapabilities:
 3116              	.LFB193:
1055:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1056:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1057:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Gets the USB device capabilities
1058:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1059:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_CAPABILITIES_t XMC_USBD_GetCapabilities()
1060:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 3117              	 .loc 1 1060 0
 3118              	 .cfi_startproc
 3119              	 
 3120              	 
 3121              	 
 3122 0000 80B4     	 push {r7}
 3123              	.LCFI129:
 3124              	 .cfi_def_cfa_offset 4
 3125              	 .cfi_offset 7,-4
 3126 0002 83B0     	 sub sp,sp,#12
 3127              	.LCFI130:
 3128              	 .cfi_def_cfa_offset 16
 3129 0004 00AF     	 add r7,sp,#0
 3130              	.LCFI131:
 3131              	 .cfi_def_cfa_register 7
1061:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_CAPABILITIES_t cap={0U};
 3132              	 .loc 1 1061 0
 3133 0006 0023     	 movs r3,#0
 3134 0008 3B60     	 str r3,[r7]
1062:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_connect = 1U;
 3135              	 .loc 1 1062 0
 3136 000a 3B78     	 ldrb r3,[r7]
 3137 000c 43F00403 	 orr r3,r3,#4
 3138 0010 3B70     	 strb r3,[r7]
1063:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_disconnect = 1U;
 3139              	 .loc 1 1063 0
 3140 0012 3B78     	 ldrb r3,[r7]
 3141 0014 43F00803 	 orr r3,r3,#8
 3142 0018 3B70     	 strb r3,[r7]
1064:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #if UC_SERIES == 45
1065:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 1U;
1066:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 1U;
1067:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #else
1068:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_power_off = 0U;
 3143              	 .loc 1 1068 0
 3144 001a 3B78     	 ldrb r3,[r7]
 3145 001c 6FF34103 	 bfc r3,#1,#1
 3146 0020 3B70     	 strb r3,[r7]
1069:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_power_on = 0U;
 3147              	 .loc 1 1069 0
 3148 0022 3B78     	 ldrb r3,[r7]
 3149 0024 6FF30003 	 bfc r3,#0,#1
 3150 0028 3B70     	 strb r3,[r7]
1070:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** #endif
1071:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_high_speed = 0U;
 3151              	 .loc 1 1071 0
 3152 002a 3B78     	 ldrb r3,[r7]
 3153 002c 6FF34513 	 bfc r3,#5,#1
 3154 0030 3B70     	 strb r3,[r7]
1072:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_remote_wakeup = 1U;
 3155              	 .loc 1 1072 0
 3156 0032 7B78     	 ldrb r3,[r7,#1]
 3157 0034 43F00103 	 orr r3,r3,#1
 3158 0038 7B70     	 strb r3,[r7,#1]
1073:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_reset = 1U;
 3159              	 .loc 1 1073 0
 3160 003a 3B78     	 ldrb r3,[r7]
 3161 003c 43F01003 	 orr r3,r3,#16
 3162 0040 3B70     	 strb r3,[r7]
1074:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_resume = 1U;
 3163              	 .loc 1 1074 0
 3164 0042 3B78     	 ldrb r3,[r7]
 3165 0044 43F08003 	 orr r3,r3,#128
 3166 0048 3B70     	 strb r3,[r7]
1075:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.event_suspend = 1U;
 3167              	 .loc 1 1075 0
 3168 004a 3B78     	 ldrb r3,[r7]
 3169 004c 43F04003 	 orr r3,r3,#64
 3170 0050 3B70     	 strb r3,[r7]
1076:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   cap.reserved = 0U;
 3171              	 .loc 1 1076 0
 3172 0052 3B68     	 ldr r3,[r7]
 3173 0054 6FF35F23 	 bfc r3,#9,#23
 3174 0058 3B60     	 str r3,[r7]
1077:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return cap;
 3175              	 .loc 1 1077 0
 3176 005a 3B68     	 ldr r3,[r7]
 3177 005c 7B60     	 str r3,[r7,#4]
 3178 005e 0023     	 movs r3,#0
 3179 0060 3A79     	 ldrb r2,[r7,#4]
 3180 0062 62F30703 	 bfi r3,r2,#0,#8
 3181 0066 7A79     	 ldrb r2,[r7,#5]
 3182 0068 62F30F23 	 bfi r3,r2,#8,#8
 3183 006c BA79     	 ldrb r2,[r7,#6]
 3184 006e 62F31743 	 bfi r3,r2,#16,#8
 3185 0072 FA79     	 ldrb r2,[r7,#7]
 3186 0074 62F31F63 	 bfi r3,r2,#24,#8
1078:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 3187              	 .loc 1 1078 0
 3188 0078 1846     	 mov r0,r3
 3189 007a 0C37     	 adds r7,r7,#12
 3190              	.LCFI132:
 3191              	 .cfi_def_cfa_offset 4
 3192 007c BD46     	 mov sp,r7
 3193              	.LCFI133:
 3194              	 .cfi_def_cfa_register 13
 3195              	 
 3196 007e 5DF8047B 	 ldr r7,[sp],#4
 3197              	.LCFI134:
 3198              	 .cfi_restore 7
 3199              	 .cfi_def_cfa_offset 0
 3200 0082 7047     	 bx lr
 3201              	 .cfi_endproc
 3202              	.LFE193:
 3204              	 .section .text.XMC_USBD_Init,"ax",%progbits
 3205              	 .align 2
 3206              	 .global XMC_USBD_Init
 3207              	 .thumb
 3208              	 .thumb_func
 3210              	XMC_USBD_Init:
 3211              	.LFB194:
1079:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1080:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1081:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Initializes the USB device
1082:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1083:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Init(XMC_USBD_t *obj)
1084:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 3212              	 .loc 1 1084 0
 3213              	 .cfi_startproc
 3214              	 
 3215              	 
 3216 0000 80B5     	 push {r7,lr}
 3217              	.LCFI135:
 3218              	 .cfi_def_cfa_offset 8
 3219              	 .cfi_offset 7,-8
 3220              	 .cfi_offset 14,-4
 3221 0002 8AB0     	 sub sp,sp,#40
 3222              	.LCFI136:
 3223              	 .cfi_def_cfa_offset 48
 3224 0004 00AF     	 add r7,sp,#0
 3225              	.LCFI137:
 3226              	 .cfi_def_cfa_register 7
 3227 0006 7860     	 str r0,[r7,#4]
1085:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint8_t *XMC_USBD_BASE_ADDRESS;
1086:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint32_t i;
1087:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gahbcfg_data_t gahbcfg;
1088:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gusbcfg_data_t gusbcfg;
1089:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dcfg_data_t dcfg;
1090:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1091:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk_data_t gintmsk;
1092:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1093:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_ASSERT("XMC_USBD_Init: obj.usbd_max_num_eps not of type XMC_USBD_MAX_NUM_EPS_t",
1094:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  		      XMC_USBD_CHECK_INPUT_MAX_NUM_EPS(obj->usbd_max_num_eps))
1095:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   
1096:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_Enable();
 3228              	 .loc 1 1096 0
 3229 0008 FFF7FEFF 	 bl XMC_USBD_Enable
1097:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   
1098:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   usbd_init = obj;
 3230              	 .loc 1 1098 0
 3231 000c 8F4A     	 ldr r2,.L189
 3232 000e 7B68     	 ldr r3,[r7,#4]
 3233 0010 1360     	 str r3,[r2]
1099:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Filling out buffer size */
1101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for(i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3234              	 .loc 1 1101 0
 3235 0012 0023     	 movs r3,#0
 3236 0014 7B62     	 str r3,[r7,#36]
 3237 0016 0CE0     	 b .L177
 3238              	.L178:
1102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_OUT_BUFFERSIZE[i] = XMC_USBD_EP0_BUFFER_SIZE;
 3239              	 .loc 1 1103 0 discriminator 3
 3240 0018 8D4A     	 ldr r2,.L189+4
 3241 001a 7B6A     	 ldr r3,[r7,#36]
 3242 001c 4021     	 movs r1,#64
 3243 001e 42F82310 	 str r1,[r2,r3,lsl#2]
1104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	  XMC_USBD_EP_IN_BUFFERSIZE[i] 	= XMC_USBD_EP0_BUFFER_SIZE;
 3244              	 .loc 1 1104 0 discriminator 3
 3245 0022 8C4A     	 ldr r2,.L189+8
 3246 0024 7B6A     	 ldr r3,[r7,#36]
 3247 0026 4021     	 movs r1,#64
 3248 0028 42F82310 	 str r1,[r2,r3,lsl#2]
1101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 3249              	 .loc 1 1101 0 discriminator 3
 3250 002c 7B6A     	 ldr r3,[r7,#36]
 3251 002e 0133     	 adds r3,r3,#1
 3252 0030 7B62     	 str r3,[r7,#36]
 3253              	.L177:
1101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 3254              	 .loc 1 1101 0 is_stmt 0 discriminator 1
 3255 0032 7B6A     	 ldr r3,[r7,#36]
 3256 0034 062B     	 cmp r3,#6
 3257 0036 EFD9     	 bls .L178
1105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* clear device status */
1108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0x0U,sizeof(XMC_USBD_DEVICE_t));
 3258              	 .loc 1 1108 0 is_stmt 1
 3259 0038 8748     	 ldr r0,.L189+12
 3260 003a 0021     	 movs r1,#0
 3261 003c 40F2D712 	 movw r2,#471
 3262 0040 FFF7FEFF 	 bl memset
1109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* assign callbacks */
1111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.DeviceEvent_cb = obj->cb_xmc_device_event;
 3263              	 .loc 1 1111 0
 3264 0044 7B68     	 ldr r3,[r7,#4]
 3265 0046 5B68     	 ldr r3,[r3,#4]
 3266 0048 834A     	 ldr r2,.L189+12
 3267 004a C2F8CF31 	 str r3,[r2,#463]
1112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.EndpointEvent_cb = obj->cb_endpoint_event;
 3268              	 .loc 1 1112 0
 3269 004e 7B68     	 ldr r3,[r7,#4]
 3270 0050 9B68     	 ldr r3,[r3,#8]
 3271 0052 814A     	 ldr r2,.L189+12
 3272 0054 C2F8D331 	 str r3,[r2,#467]
1113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_BASE_ADDRESS = (uint8_t *)(obj->usbd);
 3273              	 .loc 1 1113 0
 3274 0058 7B68     	 ldr r3,[r7,#4]
 3275 005a 1B68     	 ldr r3,[r3]
 3276 005c 3B62     	 str r3,[r7,#32]
1114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* assign register address */
1115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register = (dwc_otg_core_global_regs_t*)(obj->usbd);
 3277              	 .loc 1 1115 0
 3278 005e 7B68     	 ldr r3,[r7,#4]
 3279 0060 1B68     	 ldr r3,[r3]
 3280 0062 7D4A     	 ldr r2,.L189+12
 3281 0064 C2F87031 	 str r3,[r2,#368]
1116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register = ((dwc_otg_device_global_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DEV_GLO
 3282              	 .loc 1 1116 0
 3283 0068 3B6A     	 ldr r3,[r7,#32]
 3284 006a 03F50063 	 add r3,r3,#2048
 3285 006e 7A4A     	 ldr r2,.L189+12
 3286 0070 C2F87431 	 str r3,[r2,#372]
1117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3287              	 .loc 1 1117 0
 3288 0074 0023     	 movs r3,#0
 3289 0076 7B62     	 str r3,[r7,#36]
 3290 0078 0CE0     	 b .L179
 3291              	.L180:
1118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_in_register[i] = (dwc_otg_dev_in_ep_regs_t*)(XMC_USBD_BASE_ADDRESS + DWC_DE
 3292              	 .loc 1 1119 0 discriminator 3
 3293 007a 7B6A     	 ldr r3,[r7,#36]
 3294 007c 4833     	 adds r3,r3,#72
 3295 007e 5B01     	 lsls r3,r3,#5
 3296 0080 3A6A     	 ldr r2,[r7,#32]
 3297 0082 1A44     	 add r2,r2,r3
 3298 0084 7449     	 ldr r1,.L189+12
 3299 0086 7B6A     	 ldr r3,[r7,#36]
 3300 0088 5E33     	 adds r3,r3,#94
 3301 008a 41F82320 	 str r2,[r1,r3,lsl#2]
1117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3302              	 .loc 1 1117 0 discriminator 3
 3303 008e 7B6A     	 ldr r3,[r7,#36]
 3304 0090 0133     	 adds r3,r3,#1
 3305 0092 7B62     	 str r3,[r7,#36]
 3306              	.L179:
1117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3307              	 .loc 1 1117 0 is_stmt 0 discriminator 1
 3308 0094 7B6A     	 ldr r3,[r7,#36]
 3309 0096 062B     	 cmp r3,#6
 3310 0098 EFD9     	 bls .L180
1120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ((uint32_t)DWC_EP_REG_OFFSET*i));
1121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_EPS;i++)
 3311              	 .loc 1 1122 0 is_stmt 1
 3312 009a 0023     	 movs r3,#0
 3313 009c 7B62     	 str r3,[r7,#36]
 3314 009e 0DE0     	 b .L181
 3315              	.L182:
1123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.endpoint_out_register[i] = (dwc_otg_dev_out_ep_regs_t*)(XMC_USBD_BASE_ADDRESS +
1125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 3316              	 .loc 1 1125 0 discriminator 3
 3317 00a0 7B6A     	 ldr r3,[r7,#36]
 3318 00a2 5833     	 adds r3,r3,#88
 3319 00a4 5B01     	 lsls r3,r3,#5
 3320 00a6 3A6A     	 ldr r2,[r7,#32]
 3321 00a8 1A44     	 add r2,r2,r3
1124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     									  DWC_DEV_OUT_EP_REG_OFFSET +
 3322              	 .loc 1 1124 0 discriminator 3
 3323 00aa 6B49     	 ldr r1,.L189+12
 3324 00ac 7B6A     	 ldr r3,[r7,#36]
 3325 00ae 6433     	 adds r3,r3,#100
 3326 00b0 9B00     	 lsls r3,r3,#2
 3327 00b2 0B44     	 add r3,r3,r1
 3328 00b4 5A60     	 str r2,[r3,#4]
1122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 3329              	 .loc 1 1122 0 discriminator 3
 3330 00b6 7B6A     	 ldr r3,[r7,#36]
 3331 00b8 0133     	 adds r3,r3,#1
 3332 00ba 7B62     	 str r3,[r7,#36]
 3333              	.L181:
1122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 3334              	 .loc 1 1122 0 is_stmt 0 discriminator 1
 3335 00bc 7B6A     	 ldr r3,[r7,#36]
 3336 00be 062B     	 cmp r3,#6
 3337 00c0 EED9     	 bls .L182
1126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     									  ((uint32_t)DWC_EP_REG_OFFSET*i));
1127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   for (i = 0U;i < (uint32_t)XMC_USBD_NUM_TX_FIFOS;i++)
 3338              	 .loc 1 1128 0 is_stmt 1
 3339 00c2 0023     	 movs r3,#0
 3340 00c4 7B62     	 str r3,[r7,#36]
 3341 00c6 0CE0     	 b .L183
 3342              	.L184:
1129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.fifo[i] = (uint32_t*)(XMC_USBD_BASE_ADDRESS +
1131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 3343              	 .loc 1 1131 0 discriminator 3
 3344 00c8 7B6A     	 ldr r3,[r7,#36]
 3345 00ca 0133     	 adds r3,r3,#1
 3346 00cc 1B03     	 lsls r3,r3,#12
 3347 00ce 3A6A     	 ldr r2,[r7,#32]
 3348 00d0 1A44     	 add r2,r2,r3
1130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     						XMC_USBD_TX_FIFO_REG_OFFSET +
 3349              	 .loc 1 1130 0 discriminator 3
 3350 00d2 6149     	 ldr r1,.L189+12
 3351 00d4 7B6A     	 ldr r3,[r7,#36]
 3352 00d6 6C33     	 adds r3,r3,#108
 3353 00d8 41F82320 	 str r2,[r1,r3,lsl#2]
1128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 3354              	 .loc 1 1128 0 discriminator 3
 3355 00dc 7B6A     	 ldr r3,[r7,#36]
 3356 00de 0133     	 adds r3,r3,#1
 3357 00e0 7B62     	 str r3,[r7,#36]
 3358              	.L183:
1128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
 3359              	 .loc 1 1128 0 is_stmt 0 discriminator 1
 3360 00e2 7B6A     	 ldr r3,[r7,#36]
 3361 00e4 062B     	 cmp r3,#6
 3362 00e6 EFD9     	 bls .L184
1132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     						(i * XMC_USBD_TX_FIFO_OFFSET));
1133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* obj data structure for endpoint 0 */
1135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Done by driver core */
1136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* configure ahb details */  
1137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gahbcfg.d32 = xmc_device.global_register->gahbcfg;
 3363              	 .loc 1 1137 0 is_stmt 1
 3364 00e8 5B4B     	 ldr r3,.L189+12
 3365 00ea D3F87031 	 ldr r3,[r3,#368]
 3366 00ee 9B68     	 ldr r3,[r3,#8]
 3367 00f0 FB61     	 str r3,[r7,#28]
1138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.glblintrmsk = 1U; /* enable interrupts ( global mask ) */
 3368              	 .loc 1 1138 0
 3369 00f2 3B7F     	 ldrb r3,[r7,#28]
 3370 00f4 43F00103 	 orr r3,r3,#1
 3371 00f8 3B77     	 strb r3,[r7,#28]
1139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gahbcfg.b.nptxfemplvl_txfemplvl = 1U;
 3372              	 .loc 1 1139 0
 3373 00fa 3B7F     	 ldrb r3,[r7,#28]
 3374 00fc 43F08003 	 orr r3,r3,#128
 3375 0100 3B77     	 strb r3,[r7,#28]
1140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_DMA)
 3376              	 .loc 1 1140 0
 3377 0102 7B68     	 ldr r3,[r7,#4]
 3378 0104 5B7B     	 ldrb r3,[r3,#13]
 3379 0106 002B     	 cmp r3,#0
 3380 0108 04D1     	 bne .L185
1141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* Enable dma if needed */
1143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 1U; /* enable dma if needed */
 3381              	 .loc 1 1143 0
 3382 010a 3B7F     	 ldrb r3,[r7,#28]
 3383 010c 43F02003 	 orr r3,r3,#32
 3384 0110 3B77     	 strb r3,[r7,#28]
 3385 0112 03E0     	 b .L186
 3386              	.L185:
1144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
1146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     gahbcfg.b.dmaenable = 0U;
 3387              	 .loc 1 1147 0
 3388 0114 3B7F     	 ldrb r3,[r7,#28]
 3389 0116 6FF34513 	 bfc r3,#5,#1
 3390 011a 3B77     	 strb r3,[r7,#28]
 3391              	.L186:
1148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gahbcfg = gahbcfg.d32;
 3392              	 .loc 1 1149 0
 3393 011c 4E4B     	 ldr r3,.L189+12
 3394 011e D3F87031 	 ldr r3,[r3,#368]
 3395 0122 FA69     	 ldr r2,[r7,#28]
 3396 0124 9968     	 ldr r1,[r3,#8]
 3397 0126 0021     	 movs r1,#0
 3398 0128 0A43     	 orrs r2,r2,r1
 3399 012a 9A60     	 str r2,[r3,#8]
1150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* configure usb details */  
1151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gusbcfg.d32= xmc_device.global_register->gusbcfg;
 3400              	 .loc 1 1151 0
 3401 012c 4A4B     	 ldr r3,.L189+12
 3402 012e D3F87031 	 ldr r3,[r3,#368]
 3403 0132 DB68     	 ldr r3,[r3,#12]
 3404 0134 BB61     	 str r3,[r7,#24]
1152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.force_dev_mode = 1U; /* force us into device mode */
 3405              	 .loc 1 1152 0
 3406 0136 FB7E     	 ldrb r3,[r7,#27]
 3407 0138 43F04003 	 orr r3,r3,#64
 3408 013c FB76     	 strb r3,[r7,#27]
1153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gusbcfg.b.srpcap = 1U; /* enable session request protocoll */
 3409              	 .loc 1 1153 0
 3410 013e 7B7E     	 ldrb r3,[r7,#25]
 3411 0140 43F00103 	 orr r3,r3,#1
 3412 0144 7B76     	 strb r3,[r7,#25]
1154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gusbcfg = gusbcfg.d32;
 3413              	 .loc 1 1154 0
 3414 0146 444B     	 ldr r3,.L189+12
 3415 0148 D3F87031 	 ldr r3,[r3,#368]
 3416 014c BA69     	 ldr r2,[r7,#24]
 3417 014e D968     	 ldr r1,[r3,#12]
 3418 0150 0021     	 movs r1,#0
 3419 0152 0A43     	 orrs r2,r2,r1
 3420 0154 DA60     	 str r2,[r3,#12]
1155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Device init */
1157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* configure device speed */  
1158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dcfg.d32 = xmc_device.device_register->dcfg;
 3421              	 .loc 1 1158 0
 3422 0156 404B     	 ldr r3,.L189+12
 3423 0158 D3F87431 	 ldr r3,[r3,#372]
 3424 015c 1B68     	 ldr r3,[r3]
 3425 015e 7B61     	 str r3,[r7,#20]
1159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dcfg.b.devspd = XMC_USBD_DCFG_DEVSPD_FS;
 3426              	 .loc 1 1159 0
 3427 0160 3B7D     	 ldrb r3,[r7,#20]
 3428 0162 43F00303 	 orr r3,r3,#3
 3429 0166 3B75     	 strb r3,[r7,#20]
1160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dcfg.b.descdma = 0U;
 3430              	 .loc 1 1160 0
 3431 0168 BB7D     	 ldrb r3,[r7,#22]
 3432 016a 6FF3C713 	 bfc r3,#7,#1
 3433 016e BB75     	 strb r3,[r7,#22]
1161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dcfg = dcfg.d32;
 3434              	 .loc 1 1161 0
 3435 0170 394B     	 ldr r3,.L189+12
 3436 0172 D3F87431 	 ldr r3,[r3,#372]
 3437 0176 7A69     	 ldr r2,[r7,#20]
 3438 0178 1968     	 ldr r1,[r3]
 3439 017a 0021     	 movs r1,#0
 3440 017c 0A43     	 orrs r2,r2,r1
 3441 017e 1A60     	 str r2,[r3]
1162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* configure device functions */  
1163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl.d32 = xmc_device.device_register->dctl;
 3442              	 .loc 1 1163 0
 3443 0180 354B     	 ldr r3,.L189+12
 3444 0182 D3F87431 	 ldr r3,[r3,#372]
 3445 0186 5B68     	 ldr r3,[r3,#4]
 3446 0188 3B61     	 str r3,[r7,#16]
1164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U; /* disconnect the device until its connected by the user */
 3447              	 .loc 1 1164 0
 3448 018a 3B7C     	 ldrb r3,[r7,#16]
 3449 018c 43F00203 	 orr r3,r3,#2
 3450 0190 3B74     	 strb r3,[r7,#16]
1165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* all other config is done by default register value */
1166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3451              	 .loc 1 1166 0
 3452 0192 314B     	 ldr r3,.L189+12
 3453 0194 D3F87431 	 ldr r3,[r3,#372]
 3454 0198 3A69     	 ldr r2,[r7,#16]
 3455 019a 5968     	 ldr r1,[r3,#4]
 3456 019c 0021     	 movs r1,#0
 3457 019e 0A43     	 orrs r2,r2,r1
 3458 01a0 5A60     	 str r2,[r3,#4]
1167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* flush the fifos for proper operation */
1168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushTXFifo((uint8_t)0x10U); /* 0x10 == all fifos, see doc */
 3459              	 .loc 1 1168 0
 3460 01a2 1020     	 movs r0,#16
 3461 01a4 FFF7FEFF 	 bl XMC_USBD_lFlushTXFifo
1169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_lFlushRXFifo();
 3462              	 .loc 1 1169 0
 3463 01a8 FFF7FEFF 	 bl XMC_USBD_lFlushRXFifo
1170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Enable Global Interrupts */
1171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* clear interrupt status bits prior to unmasking */
1172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = 0U; /* disable all interrupts */
 3464              	 .loc 1 1172 0
 3465 01ac 2A4B     	 ldr r3,.L189+12
 3466 01ae D3F87031 	 ldr r3,[r3,#368]
 3467 01b2 9A69     	 ldr r2,[r3,#24]
 3468 01b4 0022     	 movs r2,#0
 3469 01b6 9A61     	 str r2,[r3,#24]
1173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintsts = 0xFFFFFFFFU; /* clear all interrupts */
 3470              	 .loc 1 1173 0
 3471 01b8 274B     	 ldr r3,.L189+12
 3472 01ba D3F87031 	 ldr r3,[r3,#368]
 3473 01be 5A69     	 ldr r2,[r3,#20]
 3474 01c0 4FF0FF32 	 mov r2,#-1
 3475 01c4 5A61     	 str r2,[r3,#20]
1174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  
1175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.d32 = 0U;
 3476              	 .loc 1 1175 0
 3477 01c6 0023     	 movs r3,#0
 3478 01c8 FB60     	 str r3,[r7,#12]
1176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* enable common interrupts */
1177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.modemismatch = 1U;
 3479              	 .loc 1 1177 0
 3480 01ca 3B7B     	 ldrb r3,[r7,#12]
 3481 01cc 43F00203 	 orr r3,r3,#2
 3482 01d0 3B73     	 strb r3,[r7,#12]
1178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.otgintr = 1U;
 3483              	 .loc 1 1178 0
 3484 01d2 3B7B     	 ldrb r3,[r7,#12]
 3485 01d4 43F00403 	 orr r3,r3,#4
 3486 01d8 3B73     	 strb r3,[r7,#12]
1179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sessreqintr = 1U;
 3487              	 .loc 1 1179 0
 3488 01da FB7B     	 ldrb r3,[r7,#15]
 3489 01dc 43F04003 	 orr r3,r3,#64
 3490 01e0 FB73     	 strb r3,[r7,#15]
1180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* enable device interrupts */
1181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbreset = 1U;
 3491              	 .loc 1 1181 0
 3492 01e2 7B7B     	 ldrb r3,[r7,#13]
 3493 01e4 43F01003 	 orr r3,r3,#16
 3494 01e8 7B73     	 strb r3,[r7,#13]
1182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.enumdone = 1U;
 3495              	 .loc 1 1182 0
 3496 01ea 7B7B     	 ldrb r3,[r7,#13]
 3497 01ec 43F02003 	 orr r3,r3,#32
 3498 01f0 7B73     	 strb r3,[r7,#13]
1183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.erlysuspend = 1U;
 3499              	 .loc 1 1183 0
 3500 01f2 7B7B     	 ldrb r3,[r7,#13]
 3501 01f4 43F00403 	 orr r3,r3,#4
 3502 01f8 7B73     	 strb r3,[r7,#13]
1184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.usbsuspend = 1U;
 3503              	 .loc 1 1184 0
 3504 01fa 7B7B     	 ldrb r3,[r7,#13]
 3505 01fc 43F00803 	 orr r3,r3,#8
 3506 0200 7B73     	 strb r3,[r7,#13]
1185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.wkupintr = 1U;
 3507              	 .loc 1 1185 0
 3508 0202 FB7B     	 ldrb r3,[r7,#15]
 3509 0204 43F08003 	 orr r3,r3,#128
 3510 0208 FB73     	 strb r3,[r7,#15]
1186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.sofintr = 1U;
 3511              	 .loc 1 1186 0
 3512 020a 3B7B     	 ldrb r3,[r7,#12]
 3513 020c 43F00803 	 orr r3,r3,#8
 3514 0210 3B73     	 strb r3,[r7,#12]
1187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if(obj->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 3515              	 .loc 1 1187 0
 3516 0212 7B68     	 ldr r3,[r7,#4]
 3517 0214 5B7B     	 ldrb r3,[r3,#13]
 3518 0216 012B     	 cmp r3,#1
 3519 0218 03D1     	 bne .L187
1188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     gintmsk.b.rxstsqlvl = 1U;
 3520              	 .loc 1 1189 0
 3521 021a 3B7B     	 ldrb r3,[r7,#12]
 3522 021c 43F01003 	 orr r3,r3,#16
 3523 0220 3B73     	 strb r3,[r7,#12]
 3524              	.L187:
1190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.outepintr = 1U;
 3525              	 .loc 1 1191 0
 3526 0222 BB7B     	 ldrb r3,[r7,#14]
 3527 0224 43F00803 	 orr r3,r3,#8
 3528 0228 BB73     	 strb r3,[r7,#14]
1192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   gintmsk.b.inepintr = 1U;
 3529              	 .loc 1 1192 0
 3530 022a BB7B     	 ldrb r3,[r7,#14]
 3531 022c 43F00403 	 orr r3,r3,#4
 3532 0230 BB73     	 strb r3,[r7,#14]
1193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.global_register->gintmsk = gintmsk.d32;
 3533              	 .loc 1 1193 0
 3534 0232 094B     	 ldr r3,.L189+12
 3535 0234 D3F87031 	 ldr r3,[r3,#368]
 3536 0238 FA68     	 ldr r2,[r7,#12]
 3537 023a 9969     	 ldr r1,[r3,#24]
 3538 023c 0021     	 movs r1,#0
 3539 023e 0A43     	 orrs r2,r2,r1
 3540 0240 9A61     	 str r2,[r3,#24]
1194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3541              	 .loc 1 1194 0
 3542 0242 0023     	 movs r3,#0
1195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 3543              	 .loc 1 1195 0
 3544 0244 1846     	 mov r0,r3
 3545 0246 2837     	 adds r7,r7,#40
 3546              	.LCFI138:
 3547              	 .cfi_def_cfa_offset 8
 3548 0248 BD46     	 mov sp,r7
 3549              	.LCFI139:
 3550              	 .cfi_def_cfa_register 13
 3551              	 
 3552 024a 80BD     	 pop {r7,pc}
 3553              	.L190:
 3554              	 .align 2
 3555              	.L189:
 3556 024c 00000000 	 .word usbd_init
 3557 0250 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 3558 0254 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 3559 0258 00000000 	 .word xmc_device
 3560              	 .cfi_endproc
 3561              	.LFE194:
 3563              	 .section .text.XMC_USBD_Uninitialize,"ax",%progbits
 3564              	 .align 2
 3565              	 .global XMC_USBD_Uninitialize
 3566              	 .thumb
 3567              	 .thumb_func
 3569              	XMC_USBD_Uninitialize:
 3570              	.LFB195:
1196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Uninitializes the USB device
1199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_Uninitialize() 
1201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 3571              	 .loc 1 1201 0
 3572              	 .cfi_startproc
 3573              	 
 3574              	 
 3575 0000 80B5     	 push {r7,lr}
 3576              	.LCFI140:
 3577              	 .cfi_def_cfa_offset 8
 3578              	 .cfi_offset 7,-8
 3579              	 .cfi_offset 14,-4
 3580 0002 82B0     	 sub sp,sp,#8
 3581              	.LCFI141:
 3582              	 .cfi_def_cfa_offset 16
 3583 0004 00AF     	 add r7,sp,#0
 3584              	.LCFI142:
 3585              	 .cfi_def_cfa_register 7
1202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Disconnect the device */
1203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3586              	 .loc 1 1204 0
 3587 0006 0E4B     	 ldr r3,.L193
 3588 0008 D3F87431 	 ldr r3,[r3,#372]
 3589 000c 5B68     	 ldr r3,[r3,#4]
 3590 000e 7B60     	 str r3,[r7,#4]
1205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3591              	 .loc 1 1205 0
 3592 0010 3B79     	 ldrb r3,[r7,#4]
 3593 0012 43F00203 	 orr r3,r3,#2
 3594 0016 3B71     	 strb r3,[r7,#4]
1206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3595              	 .loc 1 1206 0
 3596 0018 094B     	 ldr r3,.L193
 3597 001a D3F87431 	 ldr r3,[r3,#372]
 3598 001e 7A68     	 ldr r2,[r7,#4]
 3599 0020 5968     	 ldr r1,[r3,#4]
 3600 0022 0021     	 movs r1,#0
 3601 0024 0A43     	 orrs r2,r2,r1
 3602 0026 5A60     	 str r2,[r3,#4]
1207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* clean up */
1208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   memset((void*)&xmc_device,0U,sizeof(xmc_device));
 3603              	 .loc 1 1208 0
 3604 0028 0548     	 ldr r0,.L193
 3605 002a 0021     	 movs r1,#0
 3606 002c 40F2D712 	 movw r2,#471
 3607 0030 FFF7FEFF 	 bl memset
1209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3608              	 .loc 1 1209 0
 3609 0034 0023     	 movs r3,#0
1210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 3610              	 .loc 1 1210 0
 3611 0036 1846     	 mov r0,r3
 3612 0038 0837     	 adds r7,r7,#8
 3613              	.LCFI143:
 3614              	 .cfi_def_cfa_offset 8
 3615 003a BD46     	 mov sp,r7
 3616              	.LCFI144:
 3617              	 .cfi_def_cfa_register 13
 3618              	 
 3619 003c 80BD     	 pop {r7,pc}
 3620              	.L194:
 3621 003e 00BF     	 .align 2
 3622              	.L193:
 3623 0040 00000000 	 .word xmc_device
 3624              	 .cfi_endproc
 3625              	.LFE195:
 3627              	 .section .text.XMC_USBD_DeviceConnect,"ax",%progbits
 3628              	 .align 2
 3629              	 .global XMC_USBD_DeviceConnect
 3630              	 .thumb
 3631              	 .thumb_func
 3633              	XMC_USBD_DeviceConnect:
 3634              	.LFB196:
1211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Connects the USB device to host
1214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceConnect() 
1216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 3635              	 .loc 1 1216 0
 3636              	 .cfi_startproc
 3637              	 
 3638              	 
 3639              	 
 3640 0000 80B4     	 push {r7}
 3641              	.LCFI145:
 3642              	 .cfi_def_cfa_offset 4
 3643              	 .cfi_offset 7,-4
 3644 0002 83B0     	 sub sp,sp,#12
 3645              	.LCFI146:
 3646              	 .cfi_def_cfa_offset 16
 3647 0004 00AF     	 add r7,sp,#0
 3648              	.LCFI147:
 3649              	 .cfi_def_cfa_register 7
1217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* Just disable softdisconnect */
1218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3650              	 .loc 1 1219 0
 3651 0006 0C4B     	 ldr r3,.L197
 3652 0008 D3F87431 	 ldr r3,[r3,#372]
 3653 000c 5B68     	 ldr r3,[r3,#4]
 3654 000e 7B60     	 str r3,[r7,#4]
1220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 0U;
 3655              	 .loc 1 1220 0
 3656 0010 3B79     	 ldrb r3,[r7,#4]
 3657 0012 6FF34103 	 bfc r3,#1,#1
 3658 0016 3B71     	 strb r3,[r7,#4]
1221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3659              	 .loc 1 1221 0
 3660 0018 074B     	 ldr r3,.L197
 3661 001a D3F87431 	 ldr r3,[r3,#372]
 3662 001e 7A68     	 ldr r2,[r7,#4]
 3663 0020 5968     	 ldr r1,[r3,#4]
 3664 0022 0021     	 movs r1,#0
 3665 0024 0A43     	 orrs r2,r2,r1
 3666 0026 5A60     	 str r2,[r3,#4]
1222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3667              	 .loc 1 1222 0
 3668 0028 0023     	 movs r3,#0
1223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 3669              	 .loc 1 1223 0
 3670 002a 1846     	 mov r0,r3
 3671 002c 0C37     	 adds r7,r7,#12
 3672              	.LCFI148:
 3673              	 .cfi_def_cfa_offset 4
 3674 002e BD46     	 mov sp,r7
 3675              	.LCFI149:
 3676              	 .cfi_def_cfa_register 13
 3677              	 
 3678 0030 5DF8047B 	 ldr r7,[sp],#4
 3679              	.LCFI150:
 3680              	 .cfi_restore 7
 3681              	 .cfi_def_cfa_offset 0
 3682 0034 7047     	 bx lr
 3683              	.L198:
 3684 0036 00BF     	 .align 2
 3685              	.L197:
 3686 0038 00000000 	 .word xmc_device
 3687              	 .cfi_endproc
 3688              	.LFE196:
 3690              	 .section .text.XMC_USBD_DeviceDisconnect,"ax",%progbits
 3691              	 .align 2
 3692              	 .global XMC_USBD_DeviceDisconnect
 3693              	 .thumb
 3694              	 .thumb_func
 3696              	XMC_USBD_DeviceDisconnect:
 3697              	.LFB197:
1224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Disconnects the USB device from host
1227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceDisconnect() 
1229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 3698              	 .loc 1 1229 0
 3699              	 .cfi_startproc
 3700              	 
 3701              	 
 3702              	 
 3703 0000 80B4     	 push {r7}
 3704              	.LCFI151:
 3705              	 .cfi_def_cfa_offset 4
 3706              	 .cfi_offset 7,-4
 3707 0002 83B0     	 sub sp,sp,#12
 3708              	.LCFI152:
 3709              	 .cfi_def_cfa_offset 16
 3710 0004 00AF     	 add r7,sp,#0
 3711              	.LCFI153:
 3712              	 .cfi_def_cfa_register 7
1230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl_data_t dctl;
1231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	dctl.d32 = xmc_device.device_register->dctl;
 3713              	 .loc 1 1231 0
 3714 0006 0C4B     	 ldr r3,.L201
 3715 0008 D3F87431 	 ldr r3,[r3,#372]
 3716 000c 5B68     	 ldr r3,[r3,#4]
 3717 000e 7B60     	 str r3,[r7,#4]
1232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dctl.b.sftdiscon = 1U;
 3718              	 .loc 1 1232 0
 3719 0010 3B79     	 ldrb r3,[r7,#4]
 3720 0012 43F00203 	 orr r3,r3,#2
 3721 0016 3B71     	 strb r3,[r7,#4]
1233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->dctl = dctl.d32;
 3722              	 .loc 1 1233 0
 3723 0018 074B     	 ldr r3,.L201
 3724 001a D3F87431 	 ldr r3,[r3,#372]
 3725 001e 7A68     	 ldr r2,[r7,#4]
 3726 0020 5968     	 ldr r1,[r3,#4]
 3727 0022 0021     	 movs r1,#0
 3728 0024 0A43     	 orrs r2,r2,r1
 3729 0026 5A60     	 str r2,[r3,#4]
1234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 3730              	 .loc 1 1234 0
 3731 0028 0023     	 movs r3,#0
1235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 3732              	 .loc 1 1235 0
 3733 002a 1846     	 mov r0,r3
 3734 002c 0C37     	 adds r7,r7,#12
 3735              	.LCFI154:
 3736              	 .cfi_def_cfa_offset 4
 3737 002e BD46     	 mov sp,r7
 3738              	.LCFI155:
 3739              	 .cfi_def_cfa_register 13
 3740              	 
 3741 0030 5DF8047B 	 ldr r7,[sp],#4
 3742              	.LCFI156:
 3743              	 .cfi_restore 7
 3744              	 .cfi_def_cfa_offset 0
 3745 0034 7047     	 bx lr
 3746              	.L202:
 3747 0036 00BF     	 .align 2
 3748              	.L201:
 3749 0038 00000000 	 .word xmc_device
 3750              	 .cfi_endproc
 3751              	.LFE197:
 3753              	 .section .text.XMC_USBD_DeviceGetState,"ax",%progbits
 3754              	 .align 2
 3755              	 .global XMC_USBD_DeviceGetState
 3756              	 .thumb
 3757              	 .thumb_func
 3759              	XMC_USBD_DeviceGetState:
 3760              	.LFB198:
1236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Gets the USB device state.
1239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATE_t XMC_USBD_DeviceGetState(const XMC_USBD_t *const obj) 
1241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 3761              	 .loc 1 1241 0
 3762              	 .cfi_startproc
 3763              	 
 3764              	 
 3765 0000 80B5     	 push {r7,lr}
 3766              	.LCFI157:
 3767              	 .cfi_def_cfa_offset 8
 3768              	 .cfi_offset 7,-8
 3769              	 .cfi_offset 14,-4
 3770 0002 84B0     	 sub sp,sp,#16
 3771              	.LCFI158:
 3772              	 .cfi_def_cfa_offset 24
 3773 0004 00AF     	 add r7,sp,#0
 3774              	.LCFI159:
 3775              	 .cfi_def_cfa_register 7
 3776 0006 7860     	 str r0,[r7,#4]
1242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATE_t state={0U};
 3777              	 .loc 1 1242 0
 3778 0008 0023     	 movs r3,#0
 3779 000a 3B73     	 strb r3,[r7,#12]
1243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   state.speed = XMC_USBD_SPEED_FULL;
 3780              	 .loc 1 1243 0
 3781 000c 3B7B     	 ldrb r3,[r7,#12]
 3782 000e 0122     	 movs r2,#1
 3783 0010 62F3C403 	 bfi r3,r2,#3,#2
 3784 0014 3B73     	 strb r3,[r7,#12]
1244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   state.connected = xmc_device.IsConnected;
 3785              	 .loc 1 1244 0
 3786 0016 124B     	 ldr r3,.L205
 3787 0018 93F8CE31 	 ldrb r3,[r3,#462]
 3788 001c C3F30003 	 ubfx r3,r3,#0,#1
 3789 0020 DAB2     	 uxtb r2,r3
 3790 0022 3B7B     	 ldrb r3,[r7,#12]
 3791 0024 62F34103 	 bfi r3,r2,#1,#1
 3792 0028 3B73     	 strb r3,[r7,#12]
1245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   state.active = XMC_USBD_lDeviceActive(obj);
 3793              	 .loc 1 1245 0
 3794 002a 7868     	 ldr r0,[r7,#4]
 3795 002c FFF7FEFF 	 bl XMC_USBD_lDeviceActive
 3796 0030 0346     	 mov r3,r0
 3797 0032 03F00103 	 and r3,r3,#1
 3798 0036 DAB2     	 uxtb r2,r3
 3799 0038 3B7B     	 ldrb r3,[r7,#12]
 3800 003a 62F38203 	 bfi r3,r2,#2,#1
 3801 003e 3B73     	 strb r3,[r7,#12]
1246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   state.powered = xmc_device.IsPowered;
 3802              	 .loc 1 1246 0
 3803 0040 074B     	 ldr r3,.L205
 3804 0042 93F8CE31 	 ldrb r3,[r3,#462]
 3805 0046 C3F38003 	 ubfx r3,r3,#2,#1
 3806 004a DAB2     	 uxtb r2,r3
 3807 004c 3B7B     	 ldrb r3,[r7,#12]
 3808 004e 62F30003 	 bfi r3,r2,#0,#1
 3809 0052 3B73     	 strb r3,[r7,#12]
1247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return state;
 3810              	 .loc 1 1247 0
 3811 0054 3B7B     	 ldrb r3,[r7,#12]
1248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 3812              	 .loc 1 1248 0
 3813 0056 1846     	 mov r0,r3
 3814 0058 1037     	 adds r7,r7,#16
 3815              	.LCFI160:
 3816              	 .cfi_def_cfa_offset 8
 3817 005a BD46     	 mov sp,r7
 3818              	.LCFI161:
 3819              	 .cfi_def_cfa_register 13
 3820              	 
 3821 005c 80BD     	 pop {r7,pc}
 3822              	.L206:
 3823 005e 00BF     	 .align 2
 3824              	.L205:
 3825 0060 00000000 	 .word xmc_device
 3826              	 .cfi_endproc
 3827              	.LFE198:
 3829              	 .section .text.XMC_USBD_EndpointReadStart,"ax",%progbits
 3830              	 .align 2
 3831              	 .global XMC_USBD_EndpointReadStart
 3832              	 .thumb
 3833              	 .thumb_func
 3835              	XMC_USBD_EndpointReadStart:
 3836              	.LFB199:
1249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Prepares the endpoint to read next OUT packet
1252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointReadStart(const uint8_t ep_addr, uint32_t size) 
1254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 3837              	 .loc 1 1254 0
 3838              	 .cfi_startproc
 3839              	 
 3840              	 
 3841 0000 80B5     	 push {r7,lr}
 3842              	.LCFI162:
 3843              	 .cfi_def_cfa_offset 8
 3844              	 .cfi_offset 7,-8
 3845              	 .cfi_offset 14,-4
 3846 0002 84B0     	 sub sp,sp,#16
 3847              	.LCFI163:
 3848              	 .cfi_def_cfa_offset 24
 3849 0004 00AF     	 add r7,sp,#0
 3850              	.LCFI164:
 3851              	 .cfi_def_cfa_register 7
 3852 0006 0346     	 mov r3,r0
 3853 0008 3960     	 str r1,[r7]
 3854 000a FB71     	 strb r3,[r7,#7]
1255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK];
 3855              	 .loc 1 1255 0
 3856 000c FB79     	 ldrb r3,[r7,#7]
 3857 000e 03F00F03 	 and r3,r3,#15
 3858 0012 2E22     	 movs r2,#46
 3859 0014 02FB03F3 	 mul r3,r2,r3
 3860 0018 2A4A     	 ldr r2,.L213
 3861 001a 1344     	 add r3,r3,r2
 3862 001c BB60     	 str r3,[r7,#8]
1256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_STATUS_t result;
1257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	
1258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (ep->outInUse || !ep->isConfigured)
 3863              	 .loc 1 1258 0
 3864 001e BB68     	 ldr r3,[r7,#8]
 3865 0020 1B68     	 ldr r3,[r3]
 3866 0022 1B0B     	 lsrs r3,r3,#12
 3867 0024 03F00103 	 and r3,r3,#1
 3868 0028 DBB2     	 uxtb r3,r3
 3869 002a 002B     	 cmp r3,#0
 3870 002c 06D1     	 bne .L208
 3871              	 .loc 1 1258 0 is_stmt 0 discriminator 1
 3872 002e BB68     	 ldr r3,[r7,#8]
 3873 0030 5B78     	 ldrb r3,[r3,#1]
 3874 0032 03F00403 	 and r3,r3,#4
 3875 0036 DBB2     	 uxtb r3,r3
 3876 0038 002B     	 cmp r3,#0
 3877 003a 02D1     	 bne .L209
 3878              	.L208:
1259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_ERROR;
 3879              	 .loc 1 1260 0 is_stmt 1
 3880 003c 0123     	 movs r3,#1
 3881 003e FB73     	 strb r3,[r7,#15]
 3882 0040 3BE0     	 b .L210
 3883              	.L209:
1261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
1263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* short the length to buffer size if needed */
1265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (size > ep->outBufferSize)
 3884              	 .loc 1 1265 0
 3885 0042 BB68     	 ldr r3,[r7,#8]
 3886 0044 D3F80E20 	 ldr r2,[r3,#14]
 3887 0048 3B68     	 ldr r3,[r7]
 3888 004a 9A42     	 cmp r2,r3
 3889 004c 03D2     	 bcs .L211
1266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
1267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       size = ep->outBufferSize;
 3890              	 .loc 1 1267 0
 3891 004e BB68     	 ldr r3,[r7,#8]
 3892 0050 D3F80E30 	 ldr r3,[r3,#14]
 3893 0054 3B60     	 str r3,[r7]
 3894              	.L211:
1268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
1269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* set ep values */
1270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = size;
 3895              	 .loc 1 1270 0
 3896 0056 BB68     	 ldr r3,[r7,#8]
 3897 0058 3A68     	 ldr r2,[r7]
 3898 005a C3F82A20 	 str r2,[r3,#42]
1271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 3899              	 .loc 1 1271 0
 3900 005e BB68     	 ldr r3,[r7,#8]
 3901 0060 0022     	 movs r2,#0
 3902 0062 83F82620 	 strb r2,[r3,#38]
 3903 0066 0022     	 movs r2,#0
 3904 0068 83F82720 	 strb r2,[r3,#39]
 3905 006c 0022     	 movs r2,#0
 3906 006e 83F82820 	 strb r2,[r3,#40]
 3907 0072 0022     	 movs r2,#0
 3908 0074 83F82920 	 strb r2,[r3,#41]
1272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 3909              	 .loc 1 1272 0
 3910 0078 BB68     	 ldr r3,[r7,#8]
 3911 007a 0022     	 movs r2,#0
 3912 007c 83F82220 	 strb r2,[r3,#34]
 3913 0080 0022     	 movs r2,#0
 3914 0082 83F82320 	 strb r2,[r3,#35]
 3915 0086 0022     	 movs r2,#0
 3916 0088 83F82420 	 strb r2,[r3,#36]
 3917 008c 0022     	 movs r2,#0
 3918 008e 83F82520 	 strb r2,[r3,#37]
1273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferBuffer = ep->outBuffer;
 3919              	 .loc 1 1273 0
 3920 0092 BB68     	 ldr r3,[r7,#8]
 3921 0094 D3F80620 	 ldr r2,[r3,#6]
 3922 0098 BB68     	 ldr r3,[r7,#8]
 3923 009a C3F81E20 	 str r2,[r3,#30]
1274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->outBytesAvailable = 0U;
 3924              	 .loc 1 1274 0
 3925 009e BB68     	 ldr r3,[r7,#8]
 3926 00a0 0022     	 movs r2,#0
 3927 00a2 9A72     	 strb r2,[r3,#10]
 3928 00a4 0022     	 movs r2,#0
 3929 00a6 DA72     	 strb r2,[r3,#11]
 3930 00a8 0022     	 movs r2,#0
 3931 00aa 1A73     	 strb r2,[r3,#12]
 3932 00ac 0022     	 movs r2,#0
 3933 00ae 5A73     	 strb r2,[r3,#13]
1275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartReadXfer(ep);
 3934              	 .loc 1 1275 0
 3935 00b0 B868     	 ldr r0,[r7,#8]
 3936 00b2 FFF7FEFF 	 bl XMC_USBD_lStartReadXfer
1276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     result= XMC_USBD_STATUS_OK;
 3937              	 .loc 1 1276 0
 3938 00b6 0023     	 movs r3,#0
 3939 00b8 FB73     	 strb r3,[r7,#15]
 3940              	.L210:
1277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return result;
 3941              	 .loc 1 1278 0
 3942 00ba FB7B     	 ldrb r3,[r7,#15]
1279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 3943              	 .loc 1 1279 0
 3944 00bc 1846     	 mov r0,r3
 3945 00be 1037     	 adds r7,r7,#16
 3946              	.LCFI165:
 3947              	 .cfi_def_cfa_offset 8
 3948 00c0 BD46     	 mov sp,r7
 3949              	.LCFI166:
 3950              	 .cfi_def_cfa_register 13
 3951              	 
 3952 00c2 80BD     	 pop {r7,pc}
 3953              	.L214:
 3954              	 .align 2
 3955              	.L213:
 3956 00c4 00000000 	 .word xmc_device
 3957              	 .cfi_endproc
 3958              	.LFE199:
 3960              	 .section .text.XMC_USBD_EndpointRead,"ax",%progbits
 3961              	 .align 2
 3962              	 .global XMC_USBD_EndpointRead
 3963              	 .thumb
 3964              	 .thumb_func
 3966              	XMC_USBD_EndpointRead:
 3967              	.LFB200:
1280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Reads the number of bytes from the USB OUT endpoint
1283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointRead(const uint8_t ep_num,uint8_t * buffer,uint32_t length) 
1285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 3968              	 .loc 1 1285 0
 3969              	 .cfi_startproc
 3970              	 
 3971              	 
 3972 0000 80B5     	 push {r7,lr}
 3973              	.LCFI167:
 3974              	 .cfi_def_cfa_offset 8
 3975              	 .cfi_offset 7,-8
 3976              	 .cfi_offset 14,-4
 3977 0002 86B0     	 sub sp,sp,#24
 3978              	.LCFI168:
 3979              	 .cfi_def_cfa_offset 32
 3980 0004 00AF     	 add r7,sp,#0
 3981              	.LCFI169:
 3982              	 .cfi_def_cfa_register 7
 3983 0006 0346     	 mov r3,r0
 3984 0008 B960     	 str r1,[r7,#8]
 3985 000a 7A60     	 str r2,[r7,#4]
 3986 000c FB73     	 strb r3,[r7,#15]
1286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_num];
 3987              	 .loc 1 1286 0
 3988 000e FB7B     	 ldrb r3,[r7,#15]
 3989 0010 2E22     	 movs r2,#46
 3990 0012 02FB03F3 	 mul r3,r2,r3
 3991 0016 1E4A     	 ldr r2,.L220
 3992 0018 1344     	 add r3,r3,r2
 3993 001a 7B61     	 str r3,[r7,#20]
1287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (length > ep->outBytesAvailable)
 3994              	 .loc 1 1287 0
 3995 001c 7B69     	 ldr r3,[r7,#20]
 3996 001e D3F80A20 	 ldr r2,[r3,#10]
 3997 0022 7B68     	 ldr r3,[r7,#4]
 3998 0024 9A42     	 cmp r2,r3
 3999 0026 03D2     	 bcs .L216
1288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     length = ep->outBytesAvailable;
 4000              	 .loc 1 1289 0
 4001 0028 7B69     	 ldr r3,[r7,#20]
 4002 002a D3F80A30 	 ldr r3,[r3,#10]
 4003 002e 7B60     	 str r3,[r7,#4]
 4004              	.L216:
1290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   memcpy(buffer,&ep->outBuffer[ep->outOffset],length);
 4005              	 .loc 1 1291 0
 4006 0030 7B69     	 ldr r3,[r7,#20]
 4007 0032 D3F80620 	 ldr r2,[r3,#6]
 4008 0036 7B69     	 ldr r3,[r7,#20]
 4009 0038 D3F81230 	 ldr r3,[r3,#18]
 4010 003c 1344     	 add r3,r3,r2
 4011 003e B868     	 ldr r0,[r7,#8]
 4012 0040 1946     	 mov r1,r3
 4013 0042 7A68     	 ldr r2,[r7,#4]
 4014 0044 FFF7FEFF 	 bl memcpy
1292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable -= length;
 4015              	 .loc 1 1292 0
 4016 0048 7B69     	 ldr r3,[r7,#20]
 4017 004a D3F80A20 	 ldr r2,[r3,#10]
 4018 004e 7B68     	 ldr r3,[r7,#4]
 4019 0050 D21A     	 subs r2,r2,r3
 4020 0052 7B69     	 ldr r3,[r7,#20]
 4021 0054 C3F80A20 	 str r2,[r3,#10]
1293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (ep->outBytesAvailable)
 4022              	 .loc 1 1293 0
 4023 0058 7B69     	 ldr r3,[r7,#20]
 4024 005a D3F80A30 	 ldr r3,[r3,#10]
 4025 005e 002B     	 cmp r3,#0
 4026 0060 08D0     	 beq .L217
1294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->outOffset += length;
 4027              	 .loc 1 1295 0
 4028 0062 7B69     	 ldr r3,[r7,#20]
 4029 0064 D3F81220 	 ldr r2,[r3,#18]
 4030 0068 7B68     	 ldr r3,[r7,#4]
 4031 006a 1A44     	 add r2,r2,r3
 4032 006c 7B69     	 ldr r3,[r7,#20]
 4033 006e C3F81220 	 str r2,[r3,#18]
 4034 0072 08E0     	 b .L218
 4035              	.L217:
1296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
1298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->outOffset = 0U;
 4036              	 .loc 1 1299 0
 4037 0074 7B69     	 ldr r3,[r7,#20]
 4038 0076 0022     	 movs r2,#0
 4039 0078 9A74     	 strb r2,[r3,#18]
 4040 007a 0022     	 movs r2,#0
 4041 007c DA74     	 strb r2,[r3,#19]
 4042 007e 0022     	 movs r2,#0
 4043 0080 1A75     	 strb r2,[r3,#20]
 4044 0082 0022     	 movs r2,#0
 4045 0084 5A75     	 strb r2,[r3,#21]
 4046              	.L218:
1300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return (int32_t)length;
 4047              	 .loc 1 1301 0
 4048 0086 7B68     	 ldr r3,[r7,#4]
1302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 4049              	 .loc 1 1302 0
 4050 0088 1846     	 mov r0,r3
 4051 008a 1837     	 adds r7,r7,#24
 4052              	.LCFI170:
 4053              	 .cfi_def_cfa_offset 8
 4054 008c BD46     	 mov sp,r7
 4055              	.LCFI171:
 4056              	 .cfi_def_cfa_register 13
 4057              	 
 4058 008e 80BD     	 pop {r7,pc}
 4059              	.L221:
 4060              	 .align 2
 4061              	.L220:
 4062 0090 00000000 	 .word xmc_device
 4063              	 .cfi_endproc
 4064              	.LFE200:
 4066              	 .section .text.XMC_USBD_EndpointWrite,"ax",%progbits
 4067              	 .align 2
 4068              	 .global XMC_USBD_EndpointWrite
 4069              	 .thumb
 4070              	 .thumb_func
 4072              	XMC_USBD_EndpointWrite:
 4073              	.LFB201:
1303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Writes number of bytes in to the USB IN endpoint.
1306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** int32_t XMC_USBD_EndpointWrite(const uint8_t ep_num,const uint8_t * buffer,uint32_t length) 
1308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 4074              	 .loc 1 1308 0
 4075              	 .cfi_startproc
 4076              	 
 4077              	 
 4078 0000 80B5     	 push {r7,lr}
 4079              	.LCFI172:
 4080              	 .cfi_def_cfa_offset 8
 4081              	 .cfi_offset 7,-8
 4082              	 .cfi_offset 14,-4
 4083 0002 86B0     	 sub sp,sp,#24
 4084              	.LCFI173:
 4085              	 .cfi_def_cfa_offset 32
 4086 0004 00AF     	 add r7,sp,#0
 4087              	.LCFI174:
 4088              	 .cfi_def_cfa_register 7
 4089 0006 0346     	 mov r3,r0
 4090 0008 B960     	 str r1,[r7,#8]
 4091 000a 7A60     	 str r2,[r7,#4]
 4092 000c FB73     	 strb r3,[r7,#15]
1309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t * ep = &xmc_device.ep[ep_num & (uint8_t)XMC_USBD_EP_NUM_MASK];
 4093              	 .loc 1 1309 0
 4094 000e FB7B     	 ldrb r3,[r7,#15]
 4095 0010 03F00F03 	 and r3,r3,#15
 4096 0014 2E22     	 movs r2,#46
 4097 0016 02FB03F3 	 mul r3,r2,r3
 4098 001a 2F4A     	 ldr r2,.L228
 4099 001c 1344     	 add r3,r3,r2
 4100 001e 3B61     	 str r3,[r7,#16]
1310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   int32_t result;
1311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 4101              	 .loc 1 1311 0
 4102 0020 3B69     	 ldr r3,[r7,#16]
 4103 0022 5B78     	 ldrb r3,[r3,#1]
 4104 0024 03F00403 	 and r3,r3,#4
 4105 0028 DBB2     	 uxtb r3,r3
 4106 002a 002B     	 cmp r3,#0
 4107 002c 02D1     	 bne .L223
1312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     result = (int32_t)XMC_USBD_STATUS_ERROR;
 4108              	 .loc 1 1313 0
 4109 002e 0123     	 movs r3,#1
 4110 0030 7B61     	 str r3,[r7,#20]
 4111 0032 4CE0     	 b .L224
 4112              	.L223:
1314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else if (ep->inInUse == 1U)
 4113              	 .loc 1 1315 0
 4114 0034 3B69     	 ldr r3,[r7,#16]
 4115 0036 1B68     	 ldr r3,[r3]
 4116 0038 DB0A     	 lsrs r3,r3,#11
 4117 003a 03F00103 	 and r3,r3,#1
 4118 003e DBB2     	 uxtb r3,r3
 4119 0040 012B     	 cmp r3,#1
 4120 0042 02D1     	 bne .L225
1316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     result=(int32_t)0;
 4121              	 .loc 1 1317 0
 4122 0044 0023     	 movs r3,#0
 4123 0046 7B61     	 str r3,[r7,#20]
 4124 0048 41E0     	 b .L224
 4125              	.L225:
1318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
1320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (length > ep->inBufferSize)
 4126              	 .loc 1 1321 0
 4127 004a 3B69     	 ldr r3,[r7,#16]
 4128 004c D3F81A20 	 ldr r2,[r3,#26]
 4129 0050 7B68     	 ldr r3,[r7,#4]
 4130 0052 9A42     	 cmp r2,r3
 4131 0054 03D2     	 bcs .L226
1322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
1323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       length = ep->inBufferSize;
 4132              	 .loc 1 1323 0
 4133 0056 3B69     	 ldr r3,[r7,#16]
 4134 0058 D3F81A30 	 ldr r3,[r3,#26]
 4135 005c 7B60     	 str r3,[r7,#4]
 4136              	.L226:
1324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
1325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* copy data into input buffer for DMA and FIFO mode */
1326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		memcpy(ep->inBuffer,(const void *)buffer,length);
 4137              	 .loc 1 1326 0
 4138 005e 3B69     	 ldr r3,[r7,#16]
 4139 0060 D3F81630 	 ldr r3,[r3,#22]
 4140 0064 1846     	 mov r0,r3
 4141 0066 B968     	 ldr r1,[r7,#8]
 4142 0068 7A68     	 ldr r2,[r7,#4]
 4143 006a FFF7FEFF 	 bl memcpy
1327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		ep->xferBuffer = ep->inBuffer;
 4144              	 .loc 1 1327 0
 4145 006e 3B69     	 ldr r3,[r7,#16]
 4146 0070 D3F81620 	 ldr r2,[r3,#22]
 4147 0074 3B69     	 ldr r3,[r7,#16]
 4148 0076 C3F81E20 	 str r2,[r3,#30]
1328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferTotal = length;
 4149              	 .loc 1 1328 0
 4150 007a 3B69     	 ldr r3,[r7,#16]
 4151 007c 7A68     	 ldr r2,[r7,#4]
 4152 007e C3F82A20 	 str r2,[r3,#42]
1329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* set transfer values */
1330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferLength = 0U;
 4153              	 .loc 1 1330 0
 4154 0082 3B69     	 ldr r3,[r7,#16]
 4155 0084 0022     	 movs r2,#0
 4156 0086 83F82220 	 strb r2,[r3,#34]
 4157 008a 0022     	 movs r2,#0
 4158 008c 83F82320 	 strb r2,[r3,#35]
 4159 0090 0022     	 movs r2,#0
 4160 0092 83F82420 	 strb r2,[r3,#36]
 4161 0096 0022     	 movs r2,#0
 4162 0098 83F82520 	 strb r2,[r3,#37]
1331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->xferCount = 0U;
 4163              	 .loc 1 1331 0
 4164 009c 3B69     	 ldr r3,[r7,#16]
 4165 009e 0022     	 movs r2,#0
 4166 00a0 83F82620 	 strb r2,[r3,#38]
 4167 00a4 0022     	 movs r2,#0
 4168 00a6 83F82720 	 strb r2,[r3,#39]
 4169 00aa 0022     	 movs r2,#0
 4170 00ac 83F82820 	 strb r2,[r3,#40]
 4171 00b0 0022     	 movs r2,#0
 4172 00b2 83F82920 	 strb r2,[r3,#41]
1332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 1U;
 4173              	 .loc 1 1332 0
 4174 00b6 3A69     	 ldr r2,[r7,#16]
 4175 00b8 5378     	 ldrb r3,[r2,#1]
 4176 00ba 43F00803 	 orr r3,r3,#8
 4177 00be 5370     	 strb r3,[r2,#1]
1333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* start the transfer */
1334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lStartWriteXfer(ep);
 4178              	 .loc 1 1334 0
 4179 00c0 3869     	 ldr r0,[r7,#16]
 4180 00c2 FFF7FEFF 	 bl XMC_USBD_lStartWriteXfer
1335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     result=(int32_t)ep->xferTotal;
 4181              	 .loc 1 1335 0
 4182 00c6 3B69     	 ldr r3,[r7,#16]
 4183 00c8 D3F82A30 	 ldr r3,[r3,#42]
 4184 00cc 7B61     	 str r3,[r7,#20]
 4185              	.L224:
1336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return result;
 4186              	 .loc 1 1337 0
 4187 00ce 7B69     	 ldr r3,[r7,#20]
1338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 4188              	 .loc 1 1338 0
 4189 00d0 1846     	 mov r0,r3
 4190 00d2 1837     	 adds r7,r7,#24
 4191              	.LCFI175:
 4192              	 .cfi_def_cfa_offset 8
 4193 00d4 BD46     	 mov sp,r7
 4194              	.LCFI176:
 4195              	 .cfi_def_cfa_register 13
 4196              	 
 4197 00d6 80BD     	 pop {r7,pc}
 4198              	.L229:
 4199              	 .align 2
 4200              	.L228:
 4201 00d8 00000000 	 .word xmc_device
 4202              	 .cfi_endproc
 4203              	.LFE201:
 4205              	 .section .text.XMC_USBD_DeviceSetAddress,"ax",%progbits
 4206              	 .align 2
 4207              	 .global XMC_USBD_DeviceSetAddress
 4208              	 .thumb
 4209              	 .thumb_func
 4211              	XMC_USBD_DeviceSetAddress:
 4212              	.LFB202:
1339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Sets the USB device address.
1342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_DeviceSetAddress(const uint8_t address,const XMC_USBD_SET_ADDRESS_STAGE_
1344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 4213              	 .loc 1 1344 0
 4214              	 .cfi_startproc
 4215              	 
 4216              	 
 4217              	 
 4218 0000 80B4     	 push {r7}
 4219              	.LCFI177:
 4220              	 .cfi_def_cfa_offset 4
 4221              	 .cfi_offset 7,-4
 4222 0002 85B0     	 sub sp,sp,#20
 4223              	.LCFI178:
 4224              	 .cfi_def_cfa_offset 24
 4225 0004 00AF     	 add r7,sp,#0
 4226              	.LCFI179:
 4227              	 .cfi_def_cfa_register 7
 4228 0006 0346     	 mov r3,r0
 4229 0008 0A46     	 mov r2,r1
 4230 000a FB71     	 strb r3,[r7,#7]
 4231 000c 1346     	 mov r3,r2
 4232 000e BB71     	 strb r3,[r7,#6]
1345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dcfg_data_t data;
1346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.d32 = xmc_device.device_register->dcfg;
 4233              	 .loc 1 1346 0
 4234 0010 0F4B     	 ldr r3,.L233
 4235 0012 D3F87431 	 ldr r3,[r3,#372]
 4236 0016 1B68     	 ldr r3,[r3]
 4237 0018 FB60     	 str r3,[r7,#12]
1347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (stage == XMC_USBD_SET_ADDRESS_STAGE_SETUP)
 4238              	 .loc 1 1347 0
 4239 001a BB79     	 ldrb r3,[r7,#6]
 4240 001c 002B     	 cmp r3,#0
 4241 001e 0FD1     	 bne .L231
1348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     data.b.devaddr = address;
 4242              	 .loc 1 1349 0
 4243 0020 FB79     	 ldrb r3,[r7,#7]
 4244 0022 03F07F03 	 and r3,r3,#127
 4245 0026 DAB2     	 uxtb r2,r3
 4246 0028 BB89     	 ldrh r3,[r7,#12]
 4247 002a 62F30A13 	 bfi r3,r2,#4,#7
 4248 002e BB81     	 strh r3,[r7,#12]
1350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->dcfg = data.d32;
 4249              	 .loc 1 1350 0
 4250 0030 074B     	 ldr r3,.L233
 4251 0032 D3F87431 	 ldr r3,[r3,#372]
 4252 0036 FA68     	 ldr r2,[r7,#12]
 4253 0038 1968     	 ldr r1,[r3]
 4254 003a 0021     	 movs r1,#0
 4255 003c 0A43     	 orrs r2,r2,r1
 4256 003e 1A60     	 str r2,[r3]
 4257              	.L231:
1351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
 4258              	 .loc 1 1352 0
 4259 0040 0023     	 movs r3,#0
1353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 4260              	 .loc 1 1353 0
 4261 0042 1846     	 mov r0,r3
 4262 0044 1437     	 adds r7,r7,#20
 4263              	.LCFI180:
 4264              	 .cfi_def_cfa_offset 4
 4265 0046 BD46     	 mov sp,r7
 4266              	.LCFI181:
 4267              	 .cfi_def_cfa_register 13
 4268              	 
 4269 0048 5DF8047B 	 ldr r7,[sp],#4
 4270              	.LCFI182:
 4271              	 .cfi_restore 7
 4272              	 .cfi_def_cfa_offset 0
 4273 004c 7047     	 bx lr
 4274              	.L234:
 4275 004e 00BF     	 .align 2
 4276              	.L233:
 4277 0050 00000000 	 .word xmc_device
 4278              	 .cfi_endproc
 4279              	.LFE202:
 4281              	 .section .text.XMC_USBD_EndpointStall,"ax",%progbits
 4282              	 .align 2
 4283              	 .global XMC_USBD_EndpointStall
 4284              	 .thumb
 4285              	 .thumb_func
 4287              	XMC_USBD_EndpointStall:
 4288              	.LFB203:
1354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Set/clear stall on the selected endpoint.
1357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointStall(const uint8_t ep_addr, const bool stall) 
1359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 4289              	 .loc 1 1359 0
 4290              	 .cfi_startproc
 4291              	 
 4292              	 
 4293              	 
 4294 0000 80B4     	 push {r7}
 4295              	.LCFI183:
 4296              	 .cfi_def_cfa_offset 4
 4297              	 .cfi_offset 7,-4
 4298 0002 85B0     	 sub sp,sp,#20
 4299              	.LCFI184:
 4300              	 .cfi_def_cfa_offset 24
 4301 0004 00AF     	 add r7,sp,#0
 4302              	.LCFI185:
 4303              	 .cfi_def_cfa_register 7
 4304 0006 0346     	 mov r3,r0
 4305 0008 0A46     	 mov r2,r1
 4306 000a FB71     	 strb r3,[r7,#7]
 4307 000c 1346     	 mov r3,r2
 4308 000e BB71     	 strb r3,[r7,#6]
1360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[(ep_addr & (uint8_t)XMC_USBD_EP_NUM_MASK)];
 4309              	 .loc 1 1361 0
 4310 0010 FB79     	 ldrb r3,[r7,#7]
 4311 0012 03F00F03 	 and r3,r3,#15
 4312 0016 2E22     	 movs r2,#46
 4313 0018 02FB03F3 	 mul r3,r2,r3
 4314 001c 504A     	 ldr r2,.L243
 4315 001e 1344     	 add r3,r3,r2
 4316 0020 FB60     	 str r3,[r7,#12]
1362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (stall)
 4317              	 .loc 1 1362 0
 4318 0022 BB79     	 ldrb r3,[r7,#6]
 4319 0024 002B     	 cmp r3,#0
 4320 0026 46D0     	 beq .L236
1363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4321              	 .loc 1 1364 0
 4322 0028 FB79     	 ldrb r3,[r7,#7]
 4323 002a 5BB2     	 sxtb r3,r3
 4324 002c 002B     	 cmp r3,#0
 4325 002e 1DDA     	 bge .L237
1365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
1366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4326              	 .loc 1 1367 0
 4327 0030 FB68     	 ldr r3,[r7,#12]
 4328 0032 1B78     	 ldrb r3,[r3]
 4329 0034 C3F30303 	 ubfx r3,r3,#0,#4
 4330 0038 DBB2     	 uxtb r3,r3
 4331 003a 494A     	 ldr r2,.L243
 4332 003c 5E33     	 adds r3,r3,#94
 4333 003e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4334 0042 1B68     	 ldr r3,[r3]
 4335 0044 BB60     	 str r3,[r7,#8]
1368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4336              	 .loc 1 1368 0
 4337 0046 BB7A     	 ldrb r3,[r7,#10]
 4338 0048 43F02003 	 orr r3,r3,#32
 4339 004c BB72     	 strb r3,[r7,#10]
1369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4340              	 .loc 1 1369 0
 4341 004e FB68     	 ldr r3,[r7,#12]
 4342 0050 1B78     	 ldrb r3,[r3]
 4343 0052 C3F30303 	 ubfx r3,r3,#0,#4
 4344 0056 DBB2     	 uxtb r3,r3
 4345 0058 414A     	 ldr r2,.L243
 4346 005a 5E33     	 adds r3,r3,#94
 4347 005c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4348 0060 BA68     	 ldr r2,[r7,#8]
 4349 0062 1968     	 ldr r1,[r3]
 4350 0064 0021     	 movs r1,#0
 4351 0066 0A43     	 orrs r2,r2,r1
 4352 0068 1A60     	 str r2,[r3]
 4353 006a 1EE0     	 b .L238
 4354              	.L237:
1370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
1371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     else
1372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
1373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /*set stall bit */
1374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4355              	 .loc 1 1374 0
 4356 006c FB68     	 ldr r3,[r7,#12]
 4357 006e 1B78     	 ldrb r3,[r3]
 4358 0070 C3F30303 	 ubfx r3,r3,#0,#4
 4359 0074 DBB2     	 uxtb r3,r3
 4360 0076 3A4A     	 ldr r2,.L243
 4361 0078 6433     	 adds r3,r3,#100
 4362 007a 9B00     	 lsls r3,r3,#2
 4363 007c 1344     	 add r3,r3,r2
 4364 007e 5B68     	 ldr r3,[r3,#4]
 4365 0080 1B68     	 ldr r3,[r3]
 4366 0082 BB60     	 str r3,[r7,#8]
1375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       data.b.stall = 1U;
 4367              	 .loc 1 1375 0
 4368 0084 BB7A     	 ldrb r3,[r7,#10]
 4369 0086 43F02003 	 orr r3,r3,#32
 4370 008a BB72     	 strb r3,[r7,#10]
1376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4371              	 .loc 1 1376 0
 4372 008c FB68     	 ldr r3,[r7,#12]
 4373 008e 1B78     	 ldrb r3,[r3]
 4374 0090 C3F30303 	 ubfx r3,r3,#0,#4
 4375 0094 DBB2     	 uxtb r3,r3
 4376 0096 324A     	 ldr r2,.L243
 4377 0098 6433     	 adds r3,r3,#100
 4378 009a 9B00     	 lsls r3,r3,#2
 4379 009c 1344     	 add r3,r3,r2
 4380 009e 5B68     	 ldr r3,[r3,#4]
 4381 00a0 BA68     	 ldr r2,[r7,#8]
 4382 00a2 1968     	 ldr r1,[r3]
 4383 00a4 0021     	 movs r1,#0
 4384 00a6 0A43     	 orrs r2,r2,r1
 4385 00a8 1A60     	 str r2,[r3]
 4386              	.L238:
1377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
1378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->isStalled = 1U;
 4387              	 .loc 1 1378 0
 4388 00aa FA68     	 ldr r2,[r7,#12]
 4389 00ac 5378     	 ldrb r3,[r2,#1]
 4390 00ae 43F02003 	 orr r3,r3,#32
 4391 00b2 5370     	 strb r3,[r2,#1]
 4392 00b4 4DE0     	 b .L239
 4393              	.L236:
1379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
1381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* just clear stall bit */
1383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		if (ep_addr & (uint8_t)XMC_USBD_ENDPOINT_DIRECTION_MASK)
 4394              	 .loc 1 1383 0
 4395 00b6 FB79     	 ldrb r3,[r7,#7]
 4396 00b8 5BB2     	 sxtb r3,r3
 4397 00ba 002B     	 cmp r3,#0
 4398 00bc 21DA     	 bge .L240
1384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		{
1385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4399              	 .loc 1 1385 0
 4400 00be FB68     	 ldr r3,[r7,#12]
 4401 00c0 1B78     	 ldrb r3,[r3]
 4402 00c2 C3F30303 	 ubfx r3,r3,#0,#4
 4403 00c6 DBB2     	 uxtb r3,r3
 4404 00c8 254A     	 ldr r2,.L243
 4405 00ca 5E33     	 adds r3,r3,#94
 4406 00cc 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4407 00d0 1B68     	 ldr r3,[r3]
 4408 00d2 BB60     	 str r3,[r7,#8]
1386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 4409              	 .loc 1 1386 0
 4410 00d4 BB7A     	 ldrb r3,[r7,#10]
 4411 00d6 6FF34513 	 bfc r3,#5,#1
 4412 00da BB72     	 strb r3,[r7,#10]
1387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 4413              	 .loc 1 1387 0
 4414 00dc FB7A     	 ldrb r3,[r7,#11]
 4415 00de 43F01003 	 orr r3,r3,#16
 4416 00e2 FB72     	 strb r3,[r7,#11]
1388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 4417              	 .loc 1 1388 0
 4418 00e4 FB68     	 ldr r3,[r7,#12]
 4419 00e6 1B78     	 ldrb r3,[r3]
 4420 00e8 C3F30303 	 ubfx r3,r3,#0,#4
 4421 00ec DBB2     	 uxtb r3,r3
 4422 00ee 1C4A     	 ldr r2,.L243
 4423 00f0 5E33     	 adds r3,r3,#94
 4424 00f2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4425 00f6 BA68     	 ldr r2,[r7,#8]
 4426 00f8 1968     	 ldr r1,[r3]
 4427 00fa 0021     	 movs r1,#0
 4428 00fc 0A43     	 orrs r2,r2,r1
 4429 00fe 1A60     	 str r2,[r3]
 4430 0100 22E0     	 b .L241
 4431              	.L240:
1389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		}
1390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		else
1391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		{
1392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4432              	 .loc 1 1392 0
 4433 0102 FB68     	 ldr r3,[r7,#12]
 4434 0104 1B78     	 ldrb r3,[r3]
 4435 0106 C3F30303 	 ubfx r3,r3,#0,#4
 4436 010a DBB2     	 uxtb r3,r3
 4437 010c 144A     	 ldr r2,.L243
 4438 010e 6433     	 adds r3,r3,#100
 4439 0110 9B00     	 lsls r3,r3,#2
 4440 0112 1344     	 add r3,r3,r2
 4441 0114 5B68     	 ldr r3,[r3,#4]
 4442 0116 1B68     	 ldr r3,[r3]
 4443 0118 BB60     	 str r3,[r7,#8]
1393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			data.b.stall = 0U;
 4444              	 .loc 1 1393 0
 4445 011a BB7A     	 ldrb r3,[r7,#10]
 4446 011c 6FF34513 	 bfc r3,#5,#1
 4447 0120 BB72     	 strb r3,[r7,#10]
1394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			data.b.setd0pid = 1U; /* reset pid to 0 */
 4448              	 .loc 1 1394 0
 4449 0122 FB7A     	 ldrb r3,[r7,#11]
 4450 0124 43F01003 	 orr r3,r3,#16
 4451 0128 FB72     	 strb r3,[r7,#11]
1395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 4452              	 .loc 1 1395 0
 4453 012a FB68     	 ldr r3,[r7,#12]
 4454 012c 1B78     	 ldrb r3,[r3]
 4455 012e C3F30303 	 ubfx r3,r3,#0,#4
 4456 0132 DBB2     	 uxtb r3,r3
 4457 0134 0A4A     	 ldr r2,.L243
 4458 0136 6433     	 adds r3,r3,#100
 4459 0138 9B00     	 lsls r3,r3,#2
 4460 013a 1344     	 add r3,r3,r2
 4461 013c 5B68     	 ldr r3,[r3,#4]
 4462 013e BA68     	 ldr r2,[r7,#8]
 4463 0140 1968     	 ldr r1,[r3]
 4464 0142 0021     	 movs r1,#0
 4465 0144 0A43     	 orrs r2,r2,r1
 4466 0146 1A60     	 str r2,[r3]
 4467              	.L241:
1396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		}
1397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		ep->isStalled = 0U;
 4468              	 .loc 1 1397 0
 4469 0148 FA68     	 ldr r2,[r7,#12]
 4470 014a 5378     	 ldrb r3,[r2,#1]
 4471 014c 6FF34513 	 bfc r3,#5,#1
 4472 0150 5370     	 strb r3,[r2,#1]
 4473              	.L239:
1398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	}
1399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	return XMC_USBD_STATUS_OK;
 4474              	 .loc 1 1399 0
 4475 0152 0023     	 movs r3,#0
1400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 4476              	 .loc 1 1400 0
 4477 0154 1846     	 mov r0,r3
 4478 0156 1437     	 adds r7,r7,#20
 4479              	.LCFI186:
 4480              	 .cfi_def_cfa_offset 4
 4481 0158 BD46     	 mov sp,r7
 4482              	.LCFI187:
 4483              	 .cfi_def_cfa_register 13
 4484              	 
 4485 015a 5DF8047B 	 ldr r7,[sp],#4
 4486              	.LCFI188:
 4487              	 .cfi_restore 7
 4488              	 .cfi_def_cfa_offset 0
 4489 015e 7047     	 bx lr
 4490              	.L244:
 4491              	 .align 2
 4492              	.L243:
 4493 0160 00000000 	 .word xmc_device
 4494              	 .cfi_endproc
 4495              	.LFE203:
 4497              	 .section .text.XMC_USBD_EndpointAbort,"ax",%progbits
 4498              	 .align 2
 4499              	 .global XMC_USBD_EndpointAbort
 4500              	 .thumb
 4501              	 .thumb_func
 4503              	XMC_USBD_EndpointAbort:
 4504              	.LFB204:
1401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Aborts the data transfer on the selected endpoint
1404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointAbort(const uint8_t ep_addr) {
 4505              	 .loc 1 1405 0
 4506              	 .cfi_startproc
 4507              	 
 4508              	 
 4509              	 
 4510 0000 80B4     	 push {r7}
 4511              	.LCFI189:
 4512              	 .cfi_def_cfa_offset 4
 4513              	 .cfi_offset 7,-4
 4514 0002 85B0     	 sub sp,sp,#20
 4515              	.LCFI190:
 4516              	 .cfi_def_cfa_offset 24
 4517 0004 00AF     	 add r7,sp,#0
 4518              	.LCFI191:
 4519              	 .cfi_def_cfa_register 7
 4520 0006 0346     	 mov r3,r0
 4521 0008 FB71     	 strb r3,[r7,#7]
1406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4522              	 .loc 1 1406 0
 4523 000a FB79     	 ldrb r3,[r7,#7]
 4524 000c 03F00F03 	 and r3,r3,#15
 4525 0010 2E22     	 movs r2,#46
 4526 0012 02FB03F3 	 mul r3,r2,r3
 4527 0016 304A     	 ldr r2,.L249
 4528 0018 1344     	 add r3,r3,r2
 4529 001a FB60     	 str r3,[r7,#12]
1407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address_st.direction)
 4530              	 .loc 1 1407 0
 4531 001c FB68     	 ldr r3,[r7,#12]
 4532 001e 1B78     	 ldrb r3,[r3]
 4533 0020 23F07F03 	 bic r3,r3,#127
 4534 0024 DBB2     	 uxtb r3,r3
 4535 0026 002B     	 cmp r3,#0
 4536 0028 04D0     	 beq .L246
1408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->inInUse = 0U;
 4537              	 .loc 1 1409 0
 4538 002a FA68     	 ldr r2,[r7,#12]
 4539 002c 5378     	 ldrb r3,[r2,#1]
 4540 002e 6FF3C303 	 bfc r3,#3,#1
 4541 0032 5370     	 strb r3,[r2,#1]
 4542              	.L246:
1410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (!ep->address_u.address_st.direction)
 4543              	 .loc 1 1411 0
 4544 0034 FB68     	 ldr r3,[r7,#12]
 4545 0036 1B78     	 ldrb r3,[r3]
 4546 0038 23F07F03 	 bic r3,r3,#127
 4547 003c DBB2     	 uxtb r3,r3
 4548 003e 002B     	 cmp r3,#0
 4549 0040 04D1     	 bne .L247
1412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->outInUse = 0U;
 4550              	 .loc 1 1413 0
 4551 0042 FA68     	 ldr r2,[r7,#12]
 4552 0044 5378     	 ldrb r3,[r2,#1]
 4553 0046 6FF30413 	 bfc r3,#4,#1
 4554 004a 5370     	 strb r3,[r2,#1]
 4555              	.L247:
1414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->isStalled = 0U;
 4556              	 .loc 1 1415 0
 4557 004c FA68     	 ldr r2,[r7,#12]
 4558 004e 5378     	 ldrb r3,[r2,#1]
 4559 0050 6FF34513 	 bfc r3,#5,#1
 4560 0054 5370     	 strb r3,[r2,#1]
1416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->outBytesAvailable = 0U;
 4561              	 .loc 1 1416 0
 4562 0056 FB68     	 ldr r3,[r7,#12]
 4563 0058 0022     	 movs r2,#0
 4564 005a 9A72     	 strb r2,[r3,#10]
 4565 005c 0022     	 movs r2,#0
 4566 005e DA72     	 strb r2,[r3,#11]
 4567 0060 0022     	 movs r2,#0
 4568 0062 1A73     	 strb r2,[r3,#12]
 4569 0064 0022     	 movs r2,#0
 4570 0066 5A73     	 strb r2,[r3,#13]
1417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->outOffset = 0U;
 4571              	 .loc 1 1417 0
 4572 0068 FB68     	 ldr r3,[r7,#12]
 4573 006a 0022     	 movs r2,#0
 4574 006c 9A74     	 strb r2,[r3,#18]
 4575 006e 0022     	 movs r2,#0
 4576 0070 DA74     	 strb r2,[r3,#19]
 4577 0072 0022     	 movs r2,#0
 4578 0074 1A75     	 strb r2,[r3,#20]
 4579 0076 0022     	 movs r2,#0
 4580 0078 5A75     	 strb r2,[r3,#21]
1418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->xferLength = 0U;
 4581              	 .loc 1 1418 0
 4582 007a FB68     	 ldr r3,[r7,#12]
 4583 007c 0022     	 movs r2,#0
 4584 007e 83F82220 	 strb r2,[r3,#34]
 4585 0082 0022     	 movs r2,#0
 4586 0084 83F82320 	 strb r2,[r3,#35]
 4587 0088 0022     	 movs r2,#0
 4588 008a 83F82420 	 strb r2,[r3,#36]
 4589 008e 0022     	 movs r2,#0
 4590 0090 83F82520 	 strb r2,[r3,#37]
1419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->xferCount = 0U;
 4591              	 .loc 1 1419 0
 4592 0094 FB68     	 ldr r3,[r7,#12]
 4593 0096 0022     	 movs r2,#0
 4594 0098 83F82620 	 strb r2,[r3,#38]
 4595 009c 0022     	 movs r2,#0
 4596 009e 83F82720 	 strb r2,[r3,#39]
 4597 00a2 0022     	 movs r2,#0
 4598 00a4 83F82820 	 strb r2,[r3,#40]
 4599 00a8 0022     	 movs r2,#0
 4600 00aa 83F82920 	 strb r2,[r3,#41]
1420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->xferTotal = 0U;
 4601              	 .loc 1 1420 0
 4602 00ae FB68     	 ldr r3,[r7,#12]
 4603 00b0 0022     	 movs r2,#0
 4604 00b2 83F82A20 	 strb r2,[r3,#42]
 4605 00b6 0022     	 movs r2,#0
 4606 00b8 83F82B20 	 strb r2,[r3,#43]
 4607 00bc 0022     	 movs r2,#0
 4608 00be 83F82C20 	 strb r2,[r3,#44]
 4609 00c2 0022     	 movs r2,#0
 4610 00c4 83F82D20 	 strb r2,[r3,#45]
1421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 4611              	 .loc 1 1422 0
 4612 00c8 0023     	 movs r3,#0
1423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 4613              	 .loc 1 1423 0
 4614 00ca 1846     	 mov r0,r3
 4615 00cc 1437     	 adds r7,r7,#20
 4616              	.LCFI192:
 4617              	 .cfi_def_cfa_offset 4
 4618 00ce BD46     	 mov sp,r7
 4619              	.LCFI193:
 4620              	 .cfi_def_cfa_register 13
 4621              	 
 4622 00d0 5DF8047B 	 ldr r7,[sp],#4
 4623              	.LCFI194:
 4624              	 .cfi_restore 7
 4625              	 .cfi_def_cfa_offset 0
 4626 00d4 7047     	 bx lr
 4627              	.L250:
 4628 00d6 00BF     	 .align 2
 4629              	.L249:
 4630 00d8 00000000 	 .word xmc_device
 4631              	 .cfi_endproc
 4632              	.LFE204:
 4634              	 .section .text.XMC_USBD_EndpointConfigure,"ax",%progbits
 4635              	 .align 2
 4636              	 .global XMC_USBD_EndpointConfigure
 4637              	 .thumb
 4638              	 .thumb_func
 4640              	XMC_USBD_EndpointConfigure:
 4641              	.LFB205:
1424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Configures the given endpoint
1427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointConfigure(const uint8_t ep_addr,
1429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		                                     const XMC_USBD_ENDPOINT_TYPE_t ep_type,
1430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		                                     const uint16_t ep_max_packet_size) 
1431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 4642              	 .loc 1 1431 0
 4643              	 .cfi_startproc
 4644              	 
 4645              	 
 4646 0000 90B5     	 push {r4,r7,lr}
 4647              	.LCFI195:
 4648              	 .cfi_def_cfa_offset 12
 4649              	 .cfi_offset 4,-12
 4650              	 .cfi_offset 7,-8
 4651              	 .cfi_offset 14,-4
 4652 0002 87B0     	 sub sp,sp,#28
 4653              	.LCFI196:
 4654              	 .cfi_def_cfa_offset 40
 4655 0004 00AF     	 add r7,sp,#0
 4656              	.LCFI197:
 4657              	 .cfi_def_cfa_register 7
 4658 0006 0346     	 mov r3,r0
 4659 0008 FB71     	 strb r3,[r7,#7]
 4660 000a 0B46     	 mov r3,r1
 4661 000c BB71     	 strb r3,[r7,#6]
 4662 000e 1346     	 mov r3,r2
 4663 0010 BB80     	 strh r3,[r7,#4]
1432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daint_data_t daintmsk;
1433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep;
1434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 4664              	 .loc 1 1434 0
 4665 0012 B84B     	 ldr r3,.L277
 4666 0014 D3F87431 	 ldr r3,[r3,#372]
 4667 0018 DB69     	 ldr r3,[r3,#28]
 4668 001a 3B61     	 str r3,[r7,#16]
1435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep =&xmc_device.ep[ep_addr & (uint32_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 4669              	 .loc 1 1435 0
 4670 001c FB79     	 ldrb r3,[r7,#7]
 4671 001e 03F00F03 	 and r3,r3,#15
 4672 0022 2E22     	 movs r2,#46
 4673 0024 02FB03F3 	 mul r3,r2,r3
 4674 0028 B24A     	 ldr r2,.L277
 4675 002a 1344     	 add r3,r3,r2
 4676 002c 7B61     	 str r3,[r7,#20]
1436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   memset((void*)ep,0x0U,sizeof(XMC_USBD_EP_t)); /* clear endpoint structure */
 4677              	 .loc 1 1436 0
 4678 002e 7869     	 ldr r0,[r7,#20]
 4679 0030 0021     	 movs r1,#0
 4680 0032 2E22     	 movs r2,#46
 4681 0034 FFF7FEFF 	 bl memset
1437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* do ep configuration */
1438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->address_u.address = ep_addr;
 4682              	 .loc 1 1438 0
 4683 0038 7B69     	 ldr r3,[r7,#20]
 4684 003a FA79     	 ldrb r2,[r7,#7]
 4685 003c 1A70     	 strb r2,[r3]
1439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->isConfigured = 1U;
 4686              	 .loc 1 1439 0
 4687 003e 7A69     	 ldr r2,[r7,#20]
 4688 0040 5378     	 ldrb r3,[r2,#1]
 4689 0042 43F00403 	 orr r3,r3,#4
 4690 0046 5370     	 strb r3,[r2,#1]
1440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->maxPacketSize = (uint8_t)ep_max_packet_size;
 4691              	 .loc 1 1440 0
 4692 0048 BB88     	 ldrh r3,[r7,#4]
 4693 004a DBB2     	 uxtb r3,r3
 4694 004c 03F07F03 	 and r3,r3,#127
 4695 0050 DAB2     	 uxtb r2,r3
 4696 0052 7B69     	 ldr r3,[r7,#20]
 4697 0054 02F01F01 	 and r1,r2,#31
 4698 0058 CC00     	 lsls r4,r1,#3
 4699 005a 9978     	 ldrb r1,[r3,#2]
 4700 005c 01F00701 	 and r1,r1,#7
 4701 0060 0846     	 mov r0,r1
 4702 0062 2146     	 mov r1,r4
 4703 0064 0143     	 orrs r1,r1,r0
 4704 0066 9970     	 strb r1,[r3,#2]
 4705 0068 5209     	 lsrs r2,r2,#5
 4706 006a D2B2     	 uxtb r2,r2
 4707 006c 02F00302 	 and r2,r2,#3
 4708 0070 02F00300 	 and r0,r2,#3
 4709 0074 DA78     	 ldrb r2,[r3,#3]
 4710 0076 22F00302 	 bic r2,r2,#3
 4711 007a 1146     	 mov r1,r2
 4712 007c 0246     	 mov r2,r0
 4713 007e 0A43     	 orrs r2,r2,r1
 4714 0080 DA70     	 strb r2,[r3,#3]
1441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (ep->address_u.address != 0U)
 4715              	 .loc 1 1441 0
 4716 0082 7B69     	 ldr r3,[r7,#20]
 4717 0084 1B78     	 ldrb r3,[r3]
 4718 0086 002B     	 cmp r3,#0
 4719 0088 0ED0     	 beq .L252
1442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE;
 4720              	 .loc 1 1443 0
 4721 008a 7B69     	 ldr r3,[r7,#20]
 4722 008c DA78     	 ldrb r2,[r3,#3]
 4723 008e 02F00302 	 and r2,r2,#3
 4724 0092 DA70     	 strb r2,[r3,#3]
 4725 0094 4FF0FF32 	 mov r2,#-1
 4726 0098 1A71     	 strb r2,[r3,#4]
 4727 009a 5A79     	 ldrb r2,[r3,#5]
 4728 009c 22F01F02 	 bic r2,r2,#31
 4729 00a0 42F00302 	 orr r2,r2,#3
 4730 00a4 5A71     	 strb r2,[r3,#5]
 4731 00a6 0CE0     	 b .L253
 4732              	.L252:
1444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
1446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->maxTransferSize = (uint32_t)XMC_USBD_MAX_TRANSFER_SIZE_EP0;
 4733              	 .loc 1 1447 0
 4734 00a8 7B69     	 ldr r3,[r7,#20]
 4735 00aa DA78     	 ldrb r2,[r3,#3]
 4736 00ac 02F00302 	 and r2,r2,#3
 4737 00b0 DA70     	 strb r2,[r3,#3]
 4738 00b2 0022     	 movs r2,#0
 4739 00b4 42F00102 	 orr r2,r2,#1
 4740 00b8 1A71     	 strb r2,[r3,#4]
 4741 00ba 5A79     	 ldrb r2,[r3,#5]
 4742 00bc 22F01F02 	 bic r2,r2,#31
 4743 00c0 5A71     	 strb r2,[r3,#5]
 4744              	.L253:
1448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* transfer buffer */
1450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->inBuffer = XMC_USBD_EP_IN_BUFFER[ep->address_u.address_st.number];
 4745              	 .loc 1 1450 0
 4746 00c2 7B69     	 ldr r3,[r7,#20]
 4747 00c4 1B78     	 ldrb r3,[r3]
 4748 00c6 C3F30303 	 ubfx r3,r3,#0,#4
 4749 00ca DBB2     	 uxtb r3,r3
 4750 00cc 1B02     	 lsls r3,r3,#8
 4751 00ce 8A4A     	 ldr r2,.L277+4
 4752 00d0 1A44     	 add r2,r2,r3
 4753 00d2 7B69     	 ldr r3,[r7,#20]
 4754 00d4 C3F81620 	 str r2,[r3,#22]
1451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->outBuffer = XMC_USBD_EP_OUT_BUFFER[ep->address_u.address_st.number];
 4755              	 .loc 1 1451 0
 4756 00d8 7B69     	 ldr r3,[r7,#20]
 4757 00da 1B78     	 ldrb r3,[r3]
 4758 00dc C3F30303 	 ubfx r3,r3,#0,#4
 4759 00e0 DBB2     	 uxtb r3,r3
 4760 00e2 1B02     	 lsls r3,r3,#8
 4761 00e4 854A     	 ldr r2,.L277+8
 4762 00e6 1A44     	 add r2,r2,r3
 4763 00e8 7B69     	 ldr r3,[r7,#20]
 4764 00ea C3F80620 	 str r2,[r3,#6]
1452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* buffer size*/
1453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->inBufferSize = XMC_USBD_EP_IN_BUFFERSIZE[ep->address_u.address_st.number];
 4765              	 .loc 1 1453 0
 4766 00ee 7B69     	 ldr r3,[r7,#20]
 4767 00f0 1B78     	 ldrb r3,[r3]
 4768 00f2 C3F30303 	 ubfx r3,r3,#0,#4
 4769 00f6 DBB2     	 uxtb r3,r3
 4770 00f8 1A46     	 mov r2,r3
 4771 00fa 814B     	 ldr r3,.L277+12
 4772 00fc 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4773 0100 7B69     	 ldr r3,[r7,#20]
 4774 0102 C3F81A20 	 str r2,[r3,#26]
1454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   ep->outBufferSize = XMC_USBD_EP_OUT_BUFFERSIZE[ep->address_u.address_st.number];
 4775              	 .loc 1 1454 0
 4776 0106 7B69     	 ldr r3,[r7,#20]
 4777 0108 1B78     	 ldrb r3,[r3]
 4778 010a C3F30303 	 ubfx r3,r3,#0,#4
 4779 010e DBB2     	 uxtb r3,r3
 4780 0110 1A46     	 mov r2,r3
 4781 0112 7C4B     	 ldr r3,.L277+16
 4782 0114 53F82220 	 ldr r2,[r3,r2,lsl#2]
 4783 0118 7B69     	 ldr r3,[r7,#20]
 4784 011a C3F80E20 	 str r2,[r3,#14]
1455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* is in */
1456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 1U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4785              	 .loc 1 1456 0
 4786 011e 7B69     	 ldr r3,[r7,#20]
 4787 0120 1B78     	 ldrb r3,[r3]
 4788 0122 23F07F03 	 bic r3,r3,#127
 4789 0126 DBB2     	 uxtb r3,r3
 4790 0128 002B     	 cmp r3,#0
 4791 012a 03D1     	 bne .L254
 4792              	 .loc 1 1456 0 is_stmt 0 discriminator 1
 4793 012c BB79     	 ldrb r3,[r7,#6]
 4794 012e 002B     	 cmp r3,#0
 4795 0130 40F09680 	 bne .L255
 4796              	.L254:
 4797              	.LBB6:
1457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     depctl_data_t data;
1459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     data.d32 = xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl;
 4798              	 .loc 1 1459 0 is_stmt 1
 4799 0134 7B69     	 ldr r3,[r7,#20]
 4800 0136 1B78     	 ldrb r3,[r3]
 4801 0138 C3F30303 	 ubfx r3,r3,#0,#4
 4802 013c DBB2     	 uxtb r3,r3
 4803 013e 6D4A     	 ldr r2,.L277
 4804 0140 5E33     	 adds r3,r3,#94
 4805 0142 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4806 0146 1B68     	 ldr r3,[r3]
 4807 0148 FB60     	 str r3,[r7,#12]
1460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
 4808              	 .loc 1 1461 0
 4809 014a 7B7B     	 ldrb r3,[r7,#13]
 4810 014c 43F08003 	 orr r3,r3,#128
 4811 0150 7B73     	 strb r3,[r7,#13]
1462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
 4812              	 .loc 1 1463 0
 4813 0152 BB79     	 ldrb r3,[r7,#6]
 4814 0154 03F00303 	 and r3,r3,#3
 4815 0158 DAB2     	 uxtb r2,r3
 4816 015a BB7B     	 ldrb r3,[r7,#14]
 4817 015c 62F38303 	 bfi r3,r2,#2,#2
 4818 0160 BB73     	 strb r3,[r7,#14]
1464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/* set mps */
1465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4819              	 .loc 1 1465 0
 4820 0162 BB79     	 ldrb r3,[r7,#6]
 4821 0164 002B     	 cmp r3,#0
 4822 0166 24D1     	 bne .L256
1466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
1467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
 4823              	 .loc 1 1467 0
 4824 0168 BB88     	 ldrh r3,[r7,#4]
 4825 016a 102B     	 cmp r3,#16
 4826 016c 14D0     	 beq .L258
 4827 016e 102B     	 cmp r3,#16
 4828 0170 02DC     	 bgt .L259
 4829 0172 082B     	 cmp r3,#8
 4830 0174 16D0     	 beq .L260
1468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			{
1469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (64U):
1470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x0U;
1471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				break;
1472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (32U):
1473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x1U;
1474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				break;
1475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (16U):
1476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x2U;
1477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				break;
1478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (8U):
1479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				data.b.mps = 0x3U;
1480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				break;
1481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				default:
1482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				break;
 4831              	 .loc 1 1482 0
 4832 0176 1BE0     	 b .L263
 4833              	.L259:
1467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			{
 4834              	 .loc 1 1467 0
 4835 0178 202B     	 cmp r3,#32
 4836 017a 07D0     	 beq .L261
 4837 017c 402B     	 cmp r3,#64
 4838 017e 00D0     	 beq .L262
 4839              	 .loc 1 1482 0
 4840 0180 16E0     	 b .L263
 4841              	.L262:
1470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				break;
 4842              	 .loc 1 1470 0
 4843 0182 BB89     	 ldrh r3,[r7,#12]
 4844 0184 6FF30A03 	 bfc r3,#0,#11
 4845 0188 BB81     	 strh r3,[r7,#12]
1471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (32U):
 4846              	 .loc 1 1471 0
 4847 018a 11E0     	 b .L263
 4848              	.L261:
1473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				break;
 4849              	 .loc 1 1473 0
 4850 018c BB89     	 ldrh r3,[r7,#12]
 4851 018e 0122     	 movs r2,#1
 4852 0190 62F30A03 	 bfi r3,r2,#0,#11
 4853 0194 BB81     	 strh r3,[r7,#12]
1474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (16U):
 4854              	 .loc 1 1474 0
 4855 0196 0BE0     	 b .L263
 4856              	.L258:
1476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				break;
 4857              	 .loc 1 1476 0
 4858 0198 BB89     	 ldrh r3,[r7,#12]
 4859 019a 0222     	 movs r2,#2
 4860 019c 62F30A03 	 bfi r3,r2,#0,#11
 4861 01a0 BB81     	 strh r3,[r7,#12]
1477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (8U):
 4862              	 .loc 1 1477 0
 4863 01a2 05E0     	 b .L263
 4864              	.L260:
1479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				break;
 4865              	 .loc 1 1479 0
 4866 01a4 BB89     	 ldrh r3,[r7,#12]
 4867 01a6 0322     	 movs r2,#3
 4868 01a8 62F30A03 	 bfi r3,r2,#0,#11
 4869 01ac BB81     	 strh r3,[r7,#12]
1480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				default:
 4870              	 .loc 1 1480 0
 4871 01ae 00BF     	 nop
 4872              	.L263:
 4873 01b0 07E0     	 b .L264
 4874              	.L256:
1483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			}
1484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		}
1485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		else
1486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		{
1487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
 4875              	 .loc 1 1487 0
 4876 01b2 BB88     	 ldrh r3,[r7,#4]
 4877 01b4 C3F30A03 	 ubfx r3,r3,#0,#11
 4878 01b8 9AB2     	 uxth r2,r3
 4879 01ba BB89     	 ldrh r3,[r7,#12]
 4880 01bc 62F30A03 	 bfi r3,r2,#0,#11
 4881 01c0 BB81     	 strh r3,[r7,#12]
 4882              	.L264:
1488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		}
1489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
 4883              	 .loc 1 1490 0 discriminator 2
 4884 01c2 FB7B     	 ldrb r3,[r7,#15]
 4885 01c4 43F01003 	 orr r3,r3,#16
 4886 01c8 FB73     	 strb r3,[r7,#15]
1491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.b.stall = 0U;
 4887              	 .loc 1 1492 0 discriminator 2
 4888 01ca BB7B     	 ldrb r3,[r7,#14]
 4889 01cc 6FF34513 	 bfc r3,#5,#1
 4890 01d0 BB73     	 strb r3,[r7,#14]
1493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/* set tx fifo */
1494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		ep->txFifoNum = XMC_USBD_lAssignTXFifo(); /* get tx fifo */
 4891              	 .loc 1 1494 0 discriminator 2
 4892 01d2 FFF7FEFF 	 bl XMC_USBD_lAssignTXFifo
 4893 01d6 0346     	 mov r3,r0
 4894 01d8 03F00F03 	 and r3,r3,#15
 4895 01dc DAB2     	 uxtb r2,r3
 4896 01de 7B69     	 ldr r3,[r7,#20]
 4897 01e0 02F00301 	 and r1,r2,#3
 4898 01e4 8C01     	 lsls r4,r1,#6
 4899 01e6 5978     	 ldrb r1,[r3,#1]
 4900 01e8 01F03F01 	 and r1,r1,#63
 4901 01ec 0846     	 mov r0,r1
 4902 01ee 2146     	 mov r1,r4
 4903 01f0 0143     	 orrs r1,r1,r0
 4904 01f2 5970     	 strb r1,[r3,#1]
 4905 01f4 9208     	 lsrs r2,r2,#2
 4906 01f6 D2B2     	 uxtb r2,r2
 4907 01f8 02F00302 	 and r2,r2,#3
 4908 01fc 02F00300 	 and r0,r2,#3
 4909 0200 9A78     	 ldrb r2,[r3,#2]
 4910 0202 22F00302 	 bic r2,r2,#3
 4911 0206 1146     	 mov r1,r2
 4912 0208 0246     	 mov r2,r0
 4913 020a 0A43     	 orrs r2,r2,r1
 4914 020c 9A70     	 strb r2,[r3,#2]
1495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.b.txfnum = ep->txFifoNum;
 4915              	 .loc 1 1495 0 discriminator 2
 4916 020e 7B69     	 ldr r3,[r7,#20]
 4917 0210 5A78     	 ldrb r2,[r3,#1]
 4918 0212 9209     	 lsrs r2,r2,#6
 4919 0214 D2B2     	 uxtb r2,r2
 4920 0216 9B78     	 ldrb r3,[r3,#2]
 4921 0218 03F00303 	 and r3,r3,#3
 4922 021c 9B00     	 lsls r3,r3,#2
 4923 021e 1343     	 orrs r3,r3,r2
 4924 0220 DAB2     	 uxtb r2,r3
 4925 0222 FB89     	 ldrh r3,[r7,#14]
 4926 0224 62F38913 	 bfi r3,r2,#6,#4
 4927 0228 FB81     	 strh r3,[r7,#14]
1496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32; /* configur
 4928              	 .loc 1 1496 0 discriminator 2
 4929 022a 7B69     	 ldr r3,[r7,#20]
 4930 022c 1B78     	 ldrb r3,[r3]
 4931 022e C3F30303 	 ubfx r3,r3,#0,#4
 4932 0232 DBB2     	 uxtb r3,r3
 4933 0234 2F4A     	 ldr r2,.L277
 4934 0236 5E33     	 adds r3,r3,#94
 4935 0238 52F82330 	 ldr r3,[r2,r3,lsl#2]
 4936 023c FA68     	 ldr r2,[r7,#12]
 4937 023e 1968     	 ldr r1,[r3]
 4938 0240 0021     	 movs r1,#0
 4939 0242 0A43     	 orrs r2,r2,r1
 4940 0244 1A60     	 str r2,[r3]
1497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.in |= (uint16_t)((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enable
 4941              	 .loc 1 1497 0 discriminator 2
 4942 0246 3A8A     	 ldrh r2,[r7,#16]
 4943 0248 7B69     	 ldr r3,[r7,#20]
 4944 024a 1B78     	 ldrb r3,[r3]
 4945 024c C3F30303 	 ubfx r3,r3,#0,#4
 4946 0250 DBB2     	 uxtb r3,r3
 4947 0252 1946     	 mov r1,r3
 4948 0254 0123     	 movs r3,#1
 4949 0256 8B40     	 lsls r3,r3,r1
 4950 0258 9BB2     	 uxth r3,r3
 4951 025a 1343     	 orrs r3,r3,r2
 4952 025c 9BB2     	 uxth r3,r3
 4953 025e 3B82     	 strh r3,[r7,#16]
 4954              	.L255:
 4955              	.LBE6:
1498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if ((ep->address_u.address_st.direction == 0U) || (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL))
 4956              	 .loc 1 1499 0
 4957 0260 7B69     	 ldr r3,[r7,#20]
 4958 0262 1B78     	 ldrb r3,[r3]
 4959 0264 23F07F03 	 bic r3,r3,#127
 4960 0268 DBB2     	 uxtb r3,r3
 4961 026a 002B     	 cmp r3,#0
 4962 026c 02D0     	 beq .L265
 4963              	 .loc 1 1499 0 is_stmt 0 discriminator 1
 4964 026e BB79     	 ldrb r3,[r7,#6]
 4965 0270 002B     	 cmp r3,#0
 4966 0272 75D1     	 bne .L266
 4967              	.L265:
 4968              	.LBB7:
1500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* is out */
1502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		depctl_data_t data;
1503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.d32 = xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl;
 4969              	 .loc 1 1503 0 is_stmt 1
 4970 0274 7B69     	 ldr r3,[r7,#20]
 4971 0276 1B78     	 ldrb r3,[r3]
 4972 0278 C3F30303 	 ubfx r3,r3,#0,#4
 4973 027c DBB2     	 uxtb r3,r3
 4974 027e 1D4A     	 ldr r2,.L277
 4975 0280 6433     	 adds r3,r3,#100
 4976 0282 9B00     	 lsls r3,r3,#2
 4977 0284 1344     	 add r3,r3,r2
 4978 0286 5B68     	 ldr r3,[r3,#4]
 4979 0288 1B68     	 ldr r3,[r3]
 4980 028a BB60     	 str r3,[r7,#8]
1504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/*enable endpoint */
1505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.b.usbactep = 1U;
 4981              	 .loc 1 1505 0
 4982 028c 7B7A     	 ldrb r3,[r7,#9]
 4983 028e 43F08003 	 orr r3,r3,#128
 4984 0292 7B72     	 strb r3,[r7,#9]
1506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/* set ep type */
1507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.b.eptype = (uint8_t)ep_type;
 4985              	 .loc 1 1507 0
 4986 0294 BB79     	 ldrb r3,[r7,#6]
 4987 0296 03F00303 	 and r3,r3,#3
 4988 029a DAB2     	 uxtb r2,r3
 4989 029c BB7A     	 ldrb r3,[r7,#10]
 4990 029e 62F38303 	 bfi r3,r2,#2,#2
 4991 02a2 BB72     	 strb r3,[r7,#10]
1508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* set mps */
1509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if (ep_type == XMC_USBD_ENDPOINT_TYPE_CONTROL)
 4992              	 .loc 1 1509 0
 4993 02a4 BB79     	 ldrb r3,[r7,#6]
 4994 02a6 002B     	 cmp r3,#0
 4995 02a8 2ED1     	 bne .L267
1510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		{
1511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			switch(ep_max_packet_size)
 4996              	 .loc 1 1511 0
 4997 02aa BB88     	 ldrh r3,[r7,#4]
 4998 02ac 102B     	 cmp r3,#16
 4999 02ae 14D0     	 beq .L269
 5000 02b0 102B     	 cmp r3,#16
 5001 02b2 02DC     	 bgt .L270
 5002 02b4 082B     	 cmp r3,#8
 5003 02b6 16D0     	 beq .L271
1512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			{
1513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (64U):
1514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x0U;
1515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					break;
1516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (32U):
1517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x1U;
1518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					break;
1519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (16U):
1520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x2U;
1521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					break;
1522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (8U):
1523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					data.b.mps = 0x3U;
1524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					break;
1525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				default:
1526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					break;
 5004              	 .loc 1 1526 0
 5005 02b8 1BE0     	 b .L274
 5006              	.L270:
1511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			{
 5007              	 .loc 1 1511 0
 5008 02ba 202B     	 cmp r3,#32
 5009 02bc 07D0     	 beq .L272
 5010 02be 402B     	 cmp r3,#64
 5011 02c0 00D0     	 beq .L273
 5012              	 .loc 1 1526 0
 5013 02c2 16E0     	 b .L274
 5014              	.L273:
1514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					break;
 5015              	 .loc 1 1514 0
 5016 02c4 3B89     	 ldrh r3,[r7,#8]
 5017 02c6 6FF30A03 	 bfc r3,#0,#11
 5018 02ca 3B81     	 strh r3,[r7,#8]
1515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (32U):
 5019              	 .loc 1 1515 0
 5020 02cc 11E0     	 b .L274
 5021              	.L272:
1517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					break;
 5022              	 .loc 1 1517 0
 5023 02ce 3B89     	 ldrh r3,[r7,#8]
 5024 02d0 0122     	 movs r2,#1
 5025 02d2 62F30A03 	 bfi r3,r2,#0,#11
 5026 02d6 3B81     	 strh r3,[r7,#8]
1518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (16U):
 5027              	 .loc 1 1518 0
 5028 02d8 0BE0     	 b .L274
 5029              	.L269:
1520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					break;
 5030              	 .loc 1 1520 0
 5031 02da 3B89     	 ldrh r3,[r7,#8]
 5032 02dc 0222     	 movs r2,#2
 5033 02de 62F30A03 	 bfi r3,r2,#0,#11
 5034 02e2 3B81     	 strh r3,[r7,#8]
1521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				case (8U):
 5035              	 .loc 1 1521 0
 5036 02e4 05E0     	 b .L274
 5037              	.L271:
1523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 					break;
 5038              	 .loc 1 1523 0
 5039 02e6 3B89     	 ldrh r3,[r7,#8]
 5040 02e8 0322     	 movs r2,#3
 5041 02ea 62F30A03 	 bfi r3,r2,#0,#11
 5042 02ee 3B81     	 strh r3,[r7,#8]
1524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 				default:
 5043              	 .loc 1 1524 0
 5044 02f0 00BF     	 nop
 5045              	.L274:
 5046 02f2 11E0     	 b .L275
 5047              	.L278:
 5048              	 .align 2
 5049              	.L277:
 5050 02f4 00000000 	 .word xmc_device
 5051 02f8 00070000 	 .word XMC_USBD_EP_IN_BUFFER
 5052 02fc 00000000 	 .word XMC_USBD_EP_OUT_BUFFER
 5053 0300 00000000 	 .word XMC_USBD_EP_IN_BUFFERSIZE
 5054 0304 00000000 	 .word XMC_USBD_EP_OUT_BUFFERSIZE
 5055              	.L267:
1527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			}
1528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		}
1529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		else
1530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		{
1531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 			data.b.mps = ep_max_packet_size;
 5056              	 .loc 1 1531 0
 5057 0308 BB88     	 ldrh r3,[r7,#4]
 5058 030a C3F30A03 	 ubfx r3,r3,#0,#11
 5059 030e 9AB2     	 uxth r2,r3
 5060 0310 3B89     	 ldrh r3,[r7,#8]
 5061 0312 62F30A03 	 bfi r3,r2,#0,#11
 5062 0316 3B81     	 strh r3,[r7,#8]
 5063              	.L275:
1532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		}
1533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/* set first data0 pid */
1534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.b.setd0pid = 1U;
 5064              	 .loc 1 1534 0 discriminator 4
 5065 0318 FB7A     	 ldrb r3,[r7,#11]
 5066 031a 43F01003 	 orr r3,r3,#16
 5067 031e FB72     	 strb r3,[r7,#11]
1535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		/* clear stall */
1536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		data.b.stall =(uint8_t) 0U;
 5068              	 .loc 1 1536 0 discriminator 4
 5069 0320 BB7A     	 ldrb r3,[r7,#10]
 5070 0322 6FF34513 	 bfc r3,#5,#1
 5071 0326 BB72     	 strb r3,[r7,#10]
1537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32; /* configu
 5072              	 .loc 1 1537 0 discriminator 4
 5073 0328 7B69     	 ldr r3,[r7,#20]
 5074 032a 1B78     	 ldrb r3,[r3]
 5075 032c C3F30303 	 ubfx r3,r3,#0,#4
 5076 0330 DBB2     	 uxtb r3,r3
 5077 0332 124A     	 ldr r2,.L279
 5078 0334 6433     	 adds r3,r3,#100
 5079 0336 9B00     	 lsls r3,r3,#2
 5080 0338 1344     	 add r3,r3,r2
 5081 033a 5B68     	 ldr r3,[r3,#4]
 5082 033c BA68     	 ldr r2,[r7,#8]
 5083 033e 1968     	 ldr r1,[r3]
 5084 0340 0021     	 movs r1,#0
 5085 0342 0A43     	 orrs r2,r2,r1
 5086 0344 1A60     	 str r2,[r3]
1538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 		daintmsk.ep.out |=(uint16_t) ((uint16_t)1U << (uint8_t)ep->address_u.address_st.number); /* enabl
 5087              	 .loc 1 1538 0 discriminator 4
 5088 0346 7A8A     	 ldrh r2,[r7,#18]
 5089 0348 7B69     	 ldr r3,[r7,#20]
 5090 034a 1B78     	 ldrb r3,[r3]
 5091 034c C3F30303 	 ubfx r3,r3,#0,#4
 5092 0350 DBB2     	 uxtb r3,r3
 5093 0352 1946     	 mov r1,r3
 5094 0354 0123     	 movs r3,#1
 5095 0356 8B40     	 lsls r3,r3,r1
 5096 0358 9BB2     	 uxth r3,r3
 5097 035a 1343     	 orrs r3,r3,r2
 5098 035c 9BB2     	 uxth r3,r3
 5099 035e 7B82     	 strh r3,[r7,#18]
 5100              	.L266:
 5101              	.LBE7:
1539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   xmc_device.device_register->daintmsk = daintmsk.d32;
 5102              	 .loc 1 1540 0
 5103 0360 064B     	 ldr r3,.L279
 5104 0362 D3F87431 	 ldr r3,[r3,#372]
 5105 0366 3A69     	 ldr r2,[r7,#16]
 5106 0368 D969     	 ldr r1,[r3,#28]
 5107 036a 0021     	 movs r1,#0
 5108 036c 0A43     	 orrs r2,r2,r1
 5109 036e DA61     	 str r2,[r3,#28]
1541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return XMC_USBD_STATUS_OK;
 5110              	 .loc 1 1541 0
 5111 0370 0023     	 movs r3,#0
1542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 5112              	 .loc 1 1542 0
 5113 0372 1846     	 mov r0,r3
 5114 0374 1C37     	 adds r7,r7,#28
 5115              	.LCFI198:
 5116              	 .cfi_def_cfa_offset 12
 5117 0376 BD46     	 mov sp,r7
 5118              	.LCFI199:
 5119              	 .cfi_def_cfa_register 13
 5120              	 
 5121 0378 90BD     	 pop {r4,r7,pc}
 5122              	.L280:
 5123 037a 00BF     	 .align 2
 5124              	.L279:
 5125 037c 00000000 	 .word xmc_device
 5126              	 .cfi_endproc
 5127              	.LFE205:
 5129              	 .section .text.XMC_USBD_EndpointUnconfigure,"ax",%progbits
 5130              	 .align 2
 5131              	 .global XMC_USBD_EndpointUnconfigure
 5132              	 .thumb
 5133              	 .thumb_func
 5135              	XMC_USBD_EndpointUnconfigure:
 5136              	.LFB206:
1543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Unconfigure the selected endpoint.
1546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** XMC_USBD_STATUS_t XMC_USBD_EndpointUnconfigure(const uint8_t ep_addr) 
1548:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 5137              	 .loc 1 1548 0
 5138              	 .cfi_startproc
 5139              	 
 5140              	 
 5141 0000 80B5     	 push {r7,lr}
 5142              	.LCFI200:
 5143              	 .cfi_def_cfa_offset 8
 5144              	 .cfi_offset 7,-8
 5145              	 .cfi_offset 14,-4
 5146 0002 88B0     	 sub sp,sp,#32
 5147              	.LCFI201:
 5148              	 .cfi_def_cfa_offset 40
 5149 0004 00AF     	 add r7,sp,#0
 5150              	.LCFI202:
 5151              	 .cfi_def_cfa_register 7
 5152 0006 0346     	 mov r3,r0
 5153 0008 FB71     	 strb r3,[r7,#7]
1549:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   XMC_USBD_EP_t *ep = &xmc_device.ep[ep_addr & (uint8_t)XMC_USBD_ENDPOINT_NUMBER_MASK];
 5154              	 .loc 1 1549 0
 5155 000a FB79     	 ldrb r3,[r7,#7]
 5156 000c 03F00F03 	 and r3,r3,#15
 5157 0010 2E22     	 movs r2,#46
 5158 0012 02FB03F3 	 mul r3,r2,r3
 5159 0016 5C4A     	 ldr r2,.L289
 5160 0018 1344     	 add r3,r3,r2
 5161 001a BB61     	 str r3,[r7,#24]
1550:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   depctl_data_t data;
1551:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	daint_data_t daintmsk;
1552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	XMC_USBD_STATUS_t result;
1553:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 	uint32_t number_temp;
1554:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   data.d32 = 0U;  
 5162              	 .loc 1 1554 0
 5163 001c 0023     	 movs r3,#0
 5164 001e 3B61     	 str r3,[r7,#16]
1555:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   daintmsk.d32 = xmc_device.device_register->daintmsk;  
 5165              	 .loc 1 1555 0
 5166 0020 594B     	 ldr r3,.L289
 5167 0022 D3F87431 	 ldr r3,[r3,#372]
 5168 0026 DB69     	 ldr r3,[r3,#28]
 5169 0028 FB60     	 str r3,[r7,#12]
1556:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   number_temp = (uint32_t)((uint32_t)1U << (uint8_t)ep->address_u.address_st.number);
 5170              	 .loc 1 1556 0
 5171 002a BB69     	 ldr r3,[r7,#24]
 5172 002c 1B78     	 ldrb r3,[r3]
 5173 002e C3F30303 	 ubfx r3,r3,#0,#4
 5174 0032 DBB2     	 uxtb r3,r3
 5175 0034 1A46     	 mov r2,r3
 5176 0036 0123     	 movs r3,#1
 5177 0038 9340     	 lsls r3,r3,r2
 5178 003a 7B61     	 str r3,[r7,#20]
1557:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   /* if not configured return an error */
1558:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   if (!ep->isConfigured)
 5179              	 .loc 1 1558 0
 5180 003c BB69     	 ldr r3,[r7,#24]
 5181 003e 5B78     	 ldrb r3,[r3,#1]
 5182 0040 03F00403 	 and r3,r3,#4
 5183 0044 DBB2     	 uxtb r3,r3
 5184 0046 002B     	 cmp r3,#0
 5185 0048 02D1     	 bne .L282
1559:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1560:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****      result = XMC_USBD_STATUS_ERROR;
 5186              	 .loc 1 1560 0
 5187 004a 0123     	 movs r3,#1
 5188 004c FB77     	 strb r3,[r7,#31]
 5189 004e 96E0     	 b .L283
 5190              	.L282:
1561:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1562:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   else
1563:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   {
1564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* disable the endpoint, deactivate it and only send naks */
1565:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     data.b.usbactep = 0U;
 5191              	 .loc 1 1565 0
 5192 0050 7B7C     	 ldrb r3,[r7,#17]
 5193 0052 6FF3C713 	 bfc r3,#7,#1
 5194 0056 7B74     	 strb r3,[r7,#17]
1566:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     data.b.epdis =  1U;
 5195              	 .loc 1 1566 0
 5196 0058 FB7C     	 ldrb r3,[r7,#19]
 5197 005a 43F04003 	 orr r3,r3,#64
 5198 005e FB74     	 strb r3,[r7,#19]
1567:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     data.b.snak =  1U;
 5199              	 .loc 1 1567 0
 5200 0060 FB7C     	 ldrb r3,[r7,#19]
 5201 0062 43F00803 	 orr r3,r3,#8
 5202 0066 FB74     	 strb r3,[r7,#19]
1568:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     data.b.stall =  0U;
 5203              	 .loc 1 1568 0
 5204 0068 BB7C     	 ldrb r3,[r7,#18]
 5205 006a 6FF34513 	 bfc r3,#5,#1
 5206 006e BB74     	 strb r3,[r7,#18]
1569:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->isConfigured =  0U;
 5207              	 .loc 1 1569 0
 5208 0070 BA69     	 ldr r2,[r7,#24]
 5209 0072 5378     	 ldrb r3,[r2,#1]
 5210 0074 6FF38203 	 bfc r3,#2,#1
 5211 0078 5370     	 strb r3,[r2,#1]
1570:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->isStalled =  0U;
 5212              	 .loc 1 1570 0
 5213 007a BA69     	 ldr r2,[r7,#24]
 5214 007c 5378     	 ldrb r3,[r2,#1]
 5215 007e 6FF34513 	 bfc r3,#5,#1
 5216 0082 5370     	 strb r3,[r2,#1]
1571:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->outInUse =  0U;
 5217              	 .loc 1 1571 0
 5218 0084 BA69     	 ldr r2,[r7,#24]
 5219 0086 5378     	 ldrb r3,[r2,#1]
 5220 0088 6FF30413 	 bfc r3,#4,#1
 5221 008c 5370     	 strb r3,[r2,#1]
1572:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     ep->inInUse =  0U;
 5222              	 .loc 1 1572 0
 5223 008e BA69     	 ldr r2,[r7,#24]
 5224 0090 5378     	 ldrb r3,[r2,#1]
 5225 0092 6FF3C303 	 bfc r3,#3,#1
 5226 0096 5370     	 strb r3,[r2,#1]
1573:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     /* chose register based on the direction. Control Endpoint need both */
1574:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 1U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 5227              	 .loc 1 1574 0
 5228 0098 BB69     	 ldr r3,[r7,#24]
 5229 009a 1B78     	 ldrb r3,[r3]
 5230 009c 23F07F03 	 bic r3,r3,#127
 5231 00a0 DBB2     	 uxtb r3,r3
 5232 00a2 002B     	 cmp r3,#0
 5233 00a4 06D1     	 bne .L284
 5234              	 .loc 1 1574 0 is_stmt 0 discriminator 1
 5235 00a6 BB69     	 ldr r3,[r7,#24]
 5236 00a8 5B78     	 ldrb r3,[r3,#1]
 5237 00aa 03F00303 	 and r3,r3,#3
 5238 00ae DBB2     	 uxtb r3,r3
 5239 00b0 002B     	 cmp r3,#0
 5240 00b2 15D1     	 bne .L285
 5241              	.L284:
1575:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
1576:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /* disable endpoint configuration */
1577:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_in_register[ep->address_u.address_st.number]->diepctl = data.d32;
 5242              	 .loc 1 1577 0 is_stmt 1
 5243 00b4 BB69     	 ldr r3,[r7,#24]
 5244 00b6 1B78     	 ldrb r3,[r3]
 5245 00b8 C3F30303 	 ubfx r3,r3,#0,#4
 5246 00bc DBB2     	 uxtb r3,r3
 5247 00be 324A     	 ldr r2,.L289
 5248 00c0 5E33     	 adds r3,r3,#94
 5249 00c2 52F82330 	 ldr r3,[r2,r3,lsl#2]
 5250 00c6 3A69     	 ldr r2,[r7,#16]
 5251 00c8 1968     	 ldr r1,[r3]
 5252 00ca 0021     	 movs r1,#0
 5253 00cc 0A43     	 orrs r2,r2,r1
 5254 00ce 1A60     	 str r2,[r3]
1578:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       /* disable interrupts */
1579:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.in = (uint16_t)((uint32_t)daintmsk.ep.in & (~(uint32_t)number_temp));
 5255              	 .loc 1 1579 0
 5256 00d0 BA89     	 ldrh r2,[r7,#12]
 5257 00d2 7B69     	 ldr r3,[r7,#20]
 5258 00d4 9BB2     	 uxth r3,r3
 5259 00d6 DB43     	 mvns r3,r3
 5260 00d8 9BB2     	 uxth r3,r3
 5261 00da 1340     	 ands r3,r3,r2
 5262 00dc 9BB2     	 uxth r3,r3
 5263 00de BB81     	 strh r3,[r7,#12]
 5264              	.L285:
1580:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
1581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     if ((ep->address_u.address_st.direction == 0U) || (ep->type == (uint8_t)XMC_USBD_ENDPOINT_TYPE_
 5265              	 .loc 1 1581 0
 5266 00e0 BB69     	 ldr r3,[r7,#24]
 5267 00e2 1B78     	 ldrb r3,[r3]
 5268 00e4 23F07F03 	 bic r3,r3,#127
 5269 00e8 DBB2     	 uxtb r3,r3
 5270 00ea 002B     	 cmp r3,#0
 5271 00ec 06D0     	 beq .L286
 5272              	 .loc 1 1581 0 is_stmt 0 discriminator 1
 5273 00ee BB69     	 ldr r3,[r7,#24]
 5274 00f0 5B78     	 ldrb r3,[r3,#1]
 5275 00f2 03F00303 	 and r3,r3,#3
 5276 00f6 DBB2     	 uxtb r3,r3
 5277 00f8 002B     	 cmp r3,#0
 5278 00fa 29D1     	 bne .L287
 5279              	.L286:
1582:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     {
1583:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       xmc_device.endpoint_out_register[ep->address_u.address_st.number]->doepctl = data.d32;
 5280              	 .loc 1 1583 0 is_stmt 1
 5281 00fc BB69     	 ldr r3,[r7,#24]
 5282 00fe 1B78     	 ldrb r3,[r3]
 5283 0100 C3F30303 	 ubfx r3,r3,#0,#4
 5284 0104 DBB2     	 uxtb r3,r3
 5285 0106 204A     	 ldr r2,.L289
 5286 0108 6433     	 adds r3,r3,#100
 5287 010a 9B00     	 lsls r3,r3,#2
 5288 010c 1344     	 add r3,r3,r2
 5289 010e 5B68     	 ldr r3,[r3,#4]
 5290 0110 3A69     	 ldr r2,[r7,#16]
 5291 0112 1968     	 ldr r1,[r3]
 5292 0114 0021     	 movs r1,#0
 5293 0116 0A43     	 orrs r2,r2,r1
 5294 0118 1A60     	 str r2,[r3]
1584:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       daintmsk.ep.out = (uint16_t)((uint32_t)daintmsk.ep.out & (~(uint32_t)number_temp));
 5295              	 .loc 1 1584 0
 5296 011a FA89     	 ldrh r2,[r7,#14]
 5297 011c 7B69     	 ldr r3,[r7,#20]
 5298 011e 9BB2     	 uxth r3,r3
 5299 0120 DB43     	 mvns r3,r3
 5300 0122 9BB2     	 uxth r3,r3
 5301 0124 1340     	 ands r3,r3,r2
 5302 0126 9BB2     	 uxth r3,r3
 5303 0128 FB81     	 strh r3,[r7,#14]
1585:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       if(usbd_init->usbd_transfer_mode == XMC_USBD_USE_FIFO)
 5304              	 .loc 1 1585 0
 5305 012a 184B     	 ldr r3,.L289+4
 5306 012c 1B68     	 ldr r3,[r3]
 5307 012e 5B7B     	 ldrb r3,[r3,#13]
 5308 0130 012B     	 cmp r3,#1
 5309 0132 0DD1     	 bne .L287
1586:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       {
1587:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****         xmc_device.device_register->dtknqr4_fifoemptymsk &= ~number_temp;
 5310              	 .loc 1 1587 0
 5311 0134 144B     	 ldr r3,.L289
 5312 0136 D3F87431 	 ldr r3,[r3,#372]
 5313 013a 134A     	 ldr r2,.L289
 5314 013c D2F87421 	 ldr r2,[r2,#372]
 5315 0140 516B     	 ldr r1,[r2,#52]
 5316 0142 7A69     	 ldr r2,[r7,#20]
 5317 0144 D243     	 mvns r2,r2
 5318 0146 0A40     	 ands r2,r2,r1
 5319 0148 596B     	 ldr r1,[r3,#52]
 5320 014a 0021     	 movs r1,#0
 5321 014c 0A43     	 orrs r2,r2,r1
 5322 014e 5A63     	 str r2,[r3,#52]
 5323              	.L287:
1588:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****       }
1589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     }
1590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     xmc_device.device_register->daintmsk = daintmsk.d32;
 5324              	 .loc 1 1590 0
 5325 0150 0D4B     	 ldr r3,.L289
 5326 0152 D3F87431 	 ldr r3,[r3,#372]
 5327 0156 FA68     	 ldr r2,[r7,#12]
 5328 0158 D969     	 ldr r1,[r3,#28]
 5329 015a 0021     	 movs r1,#0
 5330 015c 0A43     	 orrs r2,r2,r1
 5331 015e DA61     	 str r2,[r3,#28]
1591:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     XMC_USBD_lUnassignFifo(ep->txFifoNum); /* free fifo */
 5332              	 .loc 1 1591 0
 5333 0160 BB69     	 ldr r3,[r7,#24]
 5334 0162 5A78     	 ldrb r2,[r3,#1]
 5335 0164 9209     	 lsrs r2,r2,#6
 5336 0166 D2B2     	 uxtb r2,r2
 5337 0168 9B78     	 ldrb r3,[r3,#2]
 5338 016a 03F00303 	 and r3,r3,#3
 5339 016e 9B00     	 lsls r3,r3,#2
 5340 0170 1343     	 orrs r3,r3,r2
 5341 0172 DBB2     	 uxtb r3,r3
 5342 0174 1846     	 mov r0,r3
 5343 0176 FFF7FEFF 	 bl XMC_USBD_lUnassignFifo
1592:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****     result = XMC_USBD_STATUS_OK;
 5344              	 .loc 1 1592 0
 5345 017a 0023     	 movs r3,#0
 5346 017c FB77     	 strb r3,[r7,#31]
 5347              	.L283:
1593:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   }
1594:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return result;
 5348              	 .loc 1 1594 0
 5349 017e FB7F     	 ldrb r3,[r7,#31]
1595:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 5350              	 .loc 1 1595 0
 5351 0180 1846     	 mov r0,r3
 5352 0182 2037     	 adds r7,r7,#32
 5353              	.LCFI203:
 5354              	 .cfi_def_cfa_offset 8
 5355 0184 BD46     	 mov sp,r7
 5356              	.LCFI204:
 5357              	 .cfi_def_cfa_register 13
 5358              	 
 5359 0186 80BD     	 pop {r7,pc}
 5360              	.L290:
 5361              	 .align 2
 5362              	.L289:
 5363 0188 00000000 	 .word xmc_device
 5364 018c 00000000 	 .word usbd_init
 5365              	 .cfi_endproc
 5366              	.LFE206:
 5368              	 .section .text.XMC_USBD_GetFrameNumber,"ax",%progbits
 5369              	 .align 2
 5370              	 .global XMC_USBD_GetFrameNumber
 5371              	 .thumb
 5372              	 .thumb_func
 5374              	XMC_USBD_GetFrameNumber:
 5375              	.LFB207:
1596:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1597:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1598:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Gets the current USB frame number
1599:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1600:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** uint16_t XMC_USBD_GetFrameNumber(void) 
1601:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 5376              	 .loc 1 1601 0
 5377              	 .cfi_startproc
 5378              	 
 5379              	 
 5380              	 
 5381 0000 80B4     	 push {r7}
 5382              	.LCFI205:
 5383              	 .cfi_def_cfa_offset 4
 5384              	 .cfi_offset 7,-4
 5385 0002 83B0     	 sub sp,sp,#12
 5386              	.LCFI206:
 5387              	 .cfi_def_cfa_offset 16
 5388 0004 00AF     	 add r7,sp,#0
 5389              	.LCFI207:
 5390              	 .cfi_def_cfa_register 7
1602:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   uint16_t result;
1603:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dsts_data_t dsts;
1604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   dsts.d32 = xmc_device.device_register->dsts;
 5391              	 .loc 1 1604 0
 5392 0006 084B     	 ldr r3,.L293
 5393 0008 D3F87431 	 ldr r3,[r3,#372]
 5394 000c 9B68     	 ldr r3,[r3,#8]
 5395 000e 3B60     	 str r3,[r7]
1605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   result = (uint16_t)dsts.b.soffn;
 5396              	 .loc 1 1605 0
 5397 0010 3B68     	 ldr r3,[r7]
 5398 0012 C3F30D23 	 ubfx r3,r3,#8,#14
 5399 0016 9BB2     	 uxth r3,r3
 5400 0018 FB80     	 strh r3,[r7,#6]
1606:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return result;
 5401              	 .loc 1 1606 0
 5402 001a FB88     	 ldrh r3,[r7,#6]
1607:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 5403              	 .loc 1 1607 0
 5404 001c 1846     	 mov r0,r3
 5405 001e 0C37     	 adds r7,r7,#12
 5406              	.LCFI208:
 5407              	 .cfi_def_cfa_offset 4
 5408 0020 BD46     	 mov sp,r7
 5409              	.LCFI209:
 5410              	 .cfi_def_cfa_register 13
 5411              	 
 5412 0022 5DF8047B 	 ldr r7,[sp],#4
 5413              	.LCFI210:
 5414              	 .cfi_restore 7
 5415              	 .cfi_def_cfa_offset 0
 5416 0026 7047     	 bx lr
 5417              	.L294:
 5418              	 .align 2
 5419              	.L293:
 5420 0028 00000000 	 .word xmc_device
 5421              	 .cfi_endproc
 5422              	.LFE207:
 5424              	 .section .text.XMC_USBD_IsEnumDone,"ax",%progbits
 5425              	 .align 2
 5426              	 .global XMC_USBD_IsEnumDone
 5427              	 .thumb
 5428              	 .thumb_func
 5430              	XMC_USBD_IsEnumDone:
 5431              	.LFB208:
1608:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** 
1609:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** /**
1610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * Gets the USB speed enumeration completion status.
1611:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * This should not be used for the actual USB enumeration completion status. For the actual USB enu
1612:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  * the application layer should check for the completion of USB standard request Set configuration.
1613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****  **/
1614:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** uint32_t XMC_USBD_IsEnumDone(void)
1615:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** {
 5432              	 .loc 1 1615 0
 5433              	 .cfi_startproc
 5434              	 
 5435              	 
 5436              	 
 5437 0000 80B4     	 push {r7}
 5438              	.LCFI211:
 5439              	 .cfi_def_cfa_offset 4
 5440              	 .cfi_offset 7,-4
 5441 0002 00AF     	 add r7,sp,#0
 5442              	.LCFI212:
 5443              	 .cfi_def_cfa_register 7
1616:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c ****   return (uint32_t)((uint8_t)xmc_device.IsConnected && (uint8_t)xmc_device.IsPowered);
 5444              	 .loc 1 1616 0
 5445 0004 0B4B     	 ldr r3,.L299
 5446 0006 93F8CE31 	 ldrb r3,[r3,#462]
 5447 000a 03F00103 	 and r3,r3,#1
 5448 000e DBB2     	 uxtb r3,r3
 5449 0010 002B     	 cmp r3,#0
 5450 0012 09D0     	 beq .L296
 5451              	 .loc 1 1616 0 is_stmt 0 discriminator 1
 5452 0014 074B     	 ldr r3,.L299
 5453 0016 93F8CE31 	 ldrb r3,[r3,#462]
 5454 001a 03F00403 	 and r3,r3,#4
 5455 001e DBB2     	 uxtb r3,r3
 5456 0020 002B     	 cmp r3,#0
 5457 0022 01D0     	 beq .L296
 5458              	 .loc 1 1616 0 discriminator 3
 5459 0024 0123     	 movs r3,#1
 5460 0026 00E0     	 b .L297
 5461              	.L296:
 5462              	 .loc 1 1616 0 discriminator 4
 5463 0028 0023     	 movs r3,#0
 5464              	.L297:
1617:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_usbd.c **** }
 5465              	 .loc 1 1617 0 is_stmt 1 discriminator 6
 5466 002a 1846     	 mov r0,r3
 5467 002c BD46     	 mov sp,r7
 5468              	.LCFI213:
 5469              	 .cfi_def_cfa_register 13
 5470              	 
 5471 002e 5DF8047B 	 ldr r7,[sp],#4
 5472              	.LCFI214:
 5473              	 .cfi_restore 7
 5474              	 .cfi_def_cfa_offset 0
 5475 0032 7047     	 bx lr
 5476              	.L300:
 5477              	 .align 2
 5478              	.L299:
 5479 0034 00000000 	 .word xmc_device
 5480              	 .cfi_endproc
 5481              	.LFE208:
 5483              	 .text
 5484              	.Letext0:
 5485              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 5486              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 5487              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 5488              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usbd_regs.h"
 5489              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_scu.h"
 5490              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usbd.h"
 5491              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 5492              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usbd.c
    {standard input}:24     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 XMC_USBD_EP_OUT_BUFFERSIZE
    {standard input}:21     .bss.XMC_USBD_EP_OUT_BUFFERSIZE:00000000 $d
    {standard input}:31     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 XMC_USBD_EP_IN_BUFFERSIZE
    {standard input}:28     .bss.XMC_USBD_EP_IN_BUFFERSIZE:00000000 $d
                            *COM*:000001d7 xmc_device
    {standard input}:35     USB_RAM:00000000 $d
    {standard input}:38     USB_RAM:00000000 XMC_USBD_EP_OUT_BUFFER
    {standard input}:43     USB_RAM:00000700 XMC_USBD_EP_IN_BUFFER
                            *COM*:00000004 usbd_init
    {standard input}:51     .rodata.Driver_USBD0:00000000 Driver_USBD0
    {standard input}:48     .rodata.Driver_USBD0:00000000 $d
    {standard input}:3115   .text.XMC_USBD_GetCapabilities:00000000 XMC_USBD_GetCapabilities
    {standard input}:3210   .text.XMC_USBD_Init:00000000 XMC_USBD_Init
    {standard input}:3569   .text.XMC_USBD_Uninitialize:00000000 XMC_USBD_Uninitialize
    {standard input}:3633   .text.XMC_USBD_DeviceConnect:00000000 XMC_USBD_DeviceConnect
    {standard input}:3696   .text.XMC_USBD_DeviceDisconnect:00000000 XMC_USBD_DeviceDisconnect
    {standard input}:3759   .text.XMC_USBD_DeviceGetState:00000000 XMC_USBD_DeviceGetState
    {standard input}:4211   .text.XMC_USBD_DeviceSetAddress:00000000 XMC_USBD_DeviceSetAddress
    {standard input}:4640   .text.XMC_USBD_EndpointConfigure:00000000 XMC_USBD_EndpointConfigure
    {standard input}:5135   .text.XMC_USBD_EndpointUnconfigure:00000000 XMC_USBD_EndpointUnconfigure
    {standard input}:4287   .text.XMC_USBD_EndpointStall:00000000 XMC_USBD_EndpointStall
    {standard input}:3835   .text.XMC_USBD_EndpointReadStart:00000000 XMC_USBD_EndpointReadStart
    {standard input}:3966   .text.XMC_USBD_EndpointRead:00000000 XMC_USBD_EndpointRead
    {standard input}:4072   .text.XMC_USBD_EndpointWrite:00000000 XMC_USBD_EndpointWrite
    {standard input}:4503   .text.XMC_USBD_EndpointAbort:00000000 XMC_USBD_EndpointAbort
    {standard input}:5374   .text.XMC_USBD_GetFrameNumber:00000000 XMC_USBD_GetFrameNumber
    {standard input}:5430   .text.XMC_USBD_IsEnumDone:00000000 XMC_USBD_IsEnumDone
    {standard input}:69     .text.XMC_USBD_lDeviceActive:00000000 $t
    {standard input}:74     .text.XMC_USBD_lDeviceActive:00000000 XMC_USBD_lDeviceActive
    {standard input}:160    .text.XMC_USBD_lDeviceActive:00000068 $d
    {standard input}:165    .text.XMC_USBD_lReadFifo:00000000 $t
    {standard input}:169    .text.XMC_USBD_lReadFifo:00000000 XMC_USBD_lReadFifo
    {standard input}:329    .text.XMC_USBD_lReadFifo:000000f4 $d
    {standard input}:334    .text.XMC_USBD_lWriteFifo:00000000 $t
    {standard input}:338    .text.XMC_USBD_lWriteFifo:00000000 XMC_USBD_lWriteFifo
    {standard input}:460    .text.XMC_USBD_lWriteFifo:000000ac $d
    {standard input}:465    .text.XMC_USBD_lFlushTXFifo:00000000 $t
    {standard input}:469    .text.XMC_USBD_lFlushTXFifo:00000000 XMC_USBD_lFlushTXFifo
    {standard input}:568    .text.XMC_USBD_lFlushTXFifo:00000088 $d
    {standard input}:573    .text.XMC_USBD_lFlushRXFifo:00000000 $t
    {standard input}:577    .text.XMC_USBD_lFlushRXFifo:00000000 XMC_USBD_lFlushRXFifo
    {standard input}:664    .text.XMC_USBD_lFlushRXFifo:0000006c $d
    {standard input}:669    .text.XMC_USBD_lAssignTXFifo:00000000 $t
    {standard input}:673    .text.XMC_USBD_lAssignTXFifo:00000000 XMC_USBD_lAssignTXFifo
    {standard input}:766    .text.XMC_USBD_lAssignTXFifo:00000070 $d
    {standard input}:771    .text.XMC_USBD_lUnassignFifo:00000000 $t
    {standard input}:775    .text.XMC_USBD_lUnassignFifo:00000000 XMC_USBD_lUnassignFifo
    {standard input}:824    .text.XMC_USBD_lUnassignFifo:00000034 $d
    {standard input}:829    .text.XMC_USBD_lStartReadXfer:00000000 $t
    {standard input}:833    .text.XMC_USBD_lStartReadXfer:00000000 XMC_USBD_lStartReadXfer
    {standard input}:1083   .text.XMC_USBD_lStartReadXfer:000001d0 $d
    {standard input}:1089   .text.XMC_USBD_lStartWriteXfer:00000000 $t
    {standard input}:1093   .text.XMC_USBD_lStartWriteXfer:00000000 XMC_USBD_lStartWriteXfer
    {standard input}:1357   .text.XMC_USBD_lStartWriteXfer:000001f8 $d
    {standard input}:1363   .text.XMC_USBD_lHandleUSBReset:00000000 $t
    {standard input}:1367   .text.XMC_USBD_lHandleUSBReset:00000000 XMC_USBD_lHandleUSBReset
    {standard input}:2997   .text.XMC_USBD_EnableEventOUTEP:00000000 XMC_USBD_EnableEventOUTEP
    {standard input}:3056   .text.XMC_USBD_EnableEventINEP:00000000 XMC_USBD_EnableEventINEP
    {standard input}:2674   .text.XMC_USBD_ClearEvent:00000000 XMC_USBD_ClearEvent
    {standard input}:1596   .text.XMC_USBD_lHandleUSBReset:00000180 $d
    {standard input}:1601   .text.XMC_USBD_lHandleOTGInt:00000000 $t
    {standard input}:1605   .text.XMC_USBD_lHandleOTGInt:00000000 XMC_USBD_lHandleOTGInt
    {standard input}:2819   .text.XMC_USBD_lClearEventOTG:00000000 XMC_USBD_lClearEventOTG
    {standard input}:1660   .text.XMC_USBD_lHandleOTGInt:00000044 $d
    {standard input}:1665   .text.XMC_USBD_lHandleEnumDone:00000000 $t
    {standard input}:1669   .text.XMC_USBD_lHandleEnumDone:00000000 XMC_USBD_lHandleEnumDone
    {standard input}:1751   .text.XMC_USBD_lHandleEnumDone:00000080 $d
    {standard input}:1756   .text.XMC_USBD_lHandleOEPInt:00000000 $t
    {standard input}:1760   .text.XMC_USBD_lHandleOEPInt:00000000 XMC_USBD_lHandleOEPInt
    {standard input}:2936   .text.XMC_USBD_ClearEventOUTEP:00000000 XMC_USBD_ClearEventOUTEP
    {standard input}:2016   .text.XMC_USBD_lHandleOEPInt:000001d0 $d
    {standard input}:2021   .text.XMC_USBD_lHandleIEPInt:00000000 $t
    {standard input}:2025   .text.XMC_USBD_lHandleIEPInt:00000000 XMC_USBD_lHandleIEPInt
    {standard input}:2877   .text.XMC_USBD_ClearEventINEP:00000000 XMC_USBD_ClearEventINEP
    {standard input}:2284   .text.XMC_USBD_lHandleIEPInt:000001d0 $d
    {standard input}:2289   .text.XMC_USBD_lHandleRxFLvl:00000000 $t
    {standard input}:2293   .text.XMC_USBD_lHandleRxFLvl:00000000 XMC_USBD_lHandleRxFLvl
    {standard input}:2326   .text.XMC_USBD_lHandleRxFLvl:00000024 $d
    {standard input}:2332   .text.XMC_USBD_lHandleRxFLvl:0000003c $t
    {standard input}:2377   .text.XMC_USBD_lHandleRxFLvl:0000007c $d
    {standard input}:2382   .text.XMC_USBD_IRQHandler:00000000 $t
    {standard input}:2387   .text.XMC_USBD_IRQHandler:00000000 XMC_USBD_IRQHandler
    {standard input}:2590   .text.XMC_USBD_IRQHandler:00000154 $d
    {standard input}:2595   .text.XMC_USBD_Enable:00000000 $t
    {standard input}:2600   .text.XMC_USBD_Enable:00000000 XMC_USBD_Enable
    {standard input}:2627   .text.XMC_USBD_Enable:00000018 $d
    {standard input}:2632   .text.XMC_USBD_Disable:00000000 $t
    {standard input}:2637   .text.XMC_USBD_Disable:00000000 XMC_USBD_Disable
    {standard input}:2664   .text.XMC_USBD_Disable:00000018 $d
    {standard input}:2669   .text.XMC_USBD_ClearEvent:00000000 $t
    {standard input}:2704   .text.XMC_USBD_ClearEvent:0000001c $d
    {standard input}:2718   .text.XMC_USBD_ClearEvent:00000054 $t
    {standard input}:2810   .text.XMC_USBD_ClearEvent:000000cc $d
    {standard input}:2815   .text.XMC_USBD_lClearEventOTG:00000000 $t
    {standard input}:2867   .text.XMC_USBD_lClearEventOTG:0000002c $d
    {standard input}:2872   .text.XMC_USBD_ClearEventINEP:00000000 $t
    {standard input}:2926   .text.XMC_USBD_ClearEventINEP:00000030 $d
    {standard input}:2931   .text.XMC_USBD_ClearEventOUTEP:00000000 $t
    {standard input}:2987   .text.XMC_USBD_ClearEventOUTEP:00000030 $d
    {standard input}:2992   .text.XMC_USBD_EnableEventOUTEP:00000000 $t
    {standard input}:3046   .text.XMC_USBD_EnableEventOUTEP:00000030 $d
    {standard input}:3051   .text.XMC_USBD_EnableEventINEP:00000000 $t
    {standard input}:3105   .text.XMC_USBD_EnableEventINEP:00000030 $d
    {standard input}:3110   .text.XMC_USBD_GetCapabilities:00000000 $t
    {standard input}:3205   .text.XMC_USBD_Init:00000000 $t
    {standard input}:3556   .text.XMC_USBD_Init:0000024c $d
    {standard input}:3564   .text.XMC_USBD_Uninitialize:00000000 $t
    {standard input}:3623   .text.XMC_USBD_Uninitialize:00000040 $d
    {standard input}:3628   .text.XMC_USBD_DeviceConnect:00000000 $t
    {standard input}:3686   .text.XMC_USBD_DeviceConnect:00000038 $d
    {standard input}:3691   .text.XMC_USBD_DeviceDisconnect:00000000 $t
    {standard input}:3749   .text.XMC_USBD_DeviceDisconnect:00000038 $d
    {standard input}:3754   .text.XMC_USBD_DeviceGetState:00000000 $t
    {standard input}:3825   .text.XMC_USBD_DeviceGetState:00000060 $d
    {standard input}:3830   .text.XMC_USBD_EndpointReadStart:00000000 $t
    {standard input}:3956   .text.XMC_USBD_EndpointReadStart:000000c4 $d
    {standard input}:3961   .text.XMC_USBD_EndpointRead:00000000 $t
    {standard input}:4062   .text.XMC_USBD_EndpointRead:00000090 $d
    {standard input}:4067   .text.XMC_USBD_EndpointWrite:00000000 $t
    {standard input}:4201   .text.XMC_USBD_EndpointWrite:000000d8 $d
    {standard input}:4206   .text.XMC_USBD_DeviceSetAddress:00000000 $t
    {standard input}:4277   .text.XMC_USBD_DeviceSetAddress:00000050 $d
    {standard input}:4282   .text.XMC_USBD_EndpointStall:00000000 $t
    {standard input}:4493   .text.XMC_USBD_EndpointStall:00000160 $d
    {standard input}:4498   .text.XMC_USBD_EndpointAbort:00000000 $t
    {standard input}:4630   .text.XMC_USBD_EndpointAbort:000000d8 $d
    {standard input}:4635   .text.XMC_USBD_EndpointConfigure:00000000 $t
    {standard input}:5050   .text.XMC_USBD_EndpointConfigure:000002f4 $d
    {standard input}:5057   .text.XMC_USBD_EndpointConfigure:00000308 $t
    {standard input}:5125   .text.XMC_USBD_EndpointConfigure:0000037c $d
    {standard input}:5130   .text.XMC_USBD_EndpointUnconfigure:00000000 $t
    {standard input}:5363   .text.XMC_USBD_EndpointUnconfigure:00000188 $d
    {standard input}:5369   .text.XMC_USBD_GetFrameNumber:00000000 $t
    {standard input}:5420   .text.XMC_USBD_GetFrameNumber:00000028 $d
    {standard input}:5425   .text.XMC_USBD_IsEnumDone:00000000 $t
    {standard input}:5479   .text.XMC_USBD_IsEnumDone:00000034 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_POWER_EnableUsb
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_POWER_DisableUsb
memset
memcpy
