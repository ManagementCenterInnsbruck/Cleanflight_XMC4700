   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_vadc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_VADC_GROUP_ExternalMuxControlInit,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_VADC_GROUP_ExternalMuxControlInit:
  25              	.LFB185:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_vadc.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @file xmc_vadc.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @date 2017-08-14
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @cond
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * All rights reserved.                        
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                                             
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * following conditions are met:   
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * disclaimer.                        
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                                                                              
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Change History
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * --------------
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2015-02-15:
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Initial <br>
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *      
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2015-02-20:
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Revised for XMC1201 device.<br>
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2015-04-27:
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for SHS.<br>
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Added New APIs for trigger edge selection.<BR>
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2015-06-20:
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2015-06-25:
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - BFL configuration in channel initialization fixed.
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2015-07-28:
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAlias
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetInputClass
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Added:
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - XMC4300 device supported
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Fixed:
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_TriggerEvent API updated. OR operation removed. 
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - XMC_VADC_GLOBAL_ClearEvent API updated. Multiple events triggering on clearing the event i
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Wrong MACRO name defined in xmc_vadc_map.h file corrected for XMC4200/4100 devices.
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *       XMC_VADC_G3_SAMPLE renamed to XMC_VADC_G1_SAMPLE
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2015-12-01:
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - New APIs Created.
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2016-03-09:
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Optimization of write only registers
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2016-03-18:
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_IsConverterReady(): API checks the STEPCFG register for the read
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *       SHSCFG SFR. 
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2016-06-17:
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - New macros added XMC_VADC_SHS_FULL_SET_REG, XMC_VADC_RESULT_PRIORITY_AVAILABLE
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - New Enum added XMC_VADC_SHS_GAIN_LEVEL_t and XMC_VADC_SYNCTR_EVAL_t
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - New APIs added are:
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncSlaveReadySignal
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_ChannelGetAssertedEvents
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetAssertedResultEvents
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetResultRegPriority
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_SetSyncReadySignal
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetSyncReadySignal
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *           - XMC_VADC_GROUP_GetResultRegPriority
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2017-02-06:
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Added new functions to remove channels from background request source, XMC_VADC_GLOBAL_Bac
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2017-06-24:
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Added new function XMC_VADC_GLOBAL_SHS_SetAnalogReference() for XMC1 family
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * 2017-08-14:
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Added XMC_VADC_GLOBAL_DETAILED_RESULT_t
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *       You can cast the return of XMC_VADC_GLOBAL_GetDetailedResult() to a varible of type XMC_VA
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     - Fixed XMC_VADC_GLOBAL_SHS_SetAnalogReference() to update AREF bitfield correctly
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @endcond 
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #ifndef XMC_VADC_H
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_H
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * HEADER FILES
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #include <xmc_common.h>
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #include <xmc_scu.h>
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #include <xmc_vadc_map.h>
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @addtogroup XMClib XMC Peripheral Library
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @{
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @addtogroup VADC
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @brief Versatile Analog to Digital Converter (VADC) driver for XMC microcontroller family.
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The XMC microcontroller provides a series of analog input channels connected to a cluster of Ana
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Converters using the Successive Approximation Register (SAR) principle to convert analog input v
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to discrete digital values.
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \if XMC1
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The XMC1x is based on Sample & Hold converters, where a cluster contains 2 Sample&Hold units whi
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * converter.
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \endif
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Each converter of the ADC cluster can operate independent of the others, controlled by a dedicat
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * registers and triggered by a dedicated group request source. The results of each channel can be 
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * dedicated channel-specific result register or in a group-specific result register.<BR>
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The Versatile Analog to Digital Converter module (VADC) of the XMC comprises a set of converter 
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * can be operated either independently or via a common request source that emulates a background c
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Each converter block is equipped with a dedicated input multiplexer and dedicated request source
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * which together build separate groups.
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \if XMC4
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc4x.png"
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \else
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @image html "vadc_overview_xmc1x.png"
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \endif
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The VADC LLD is split into GLOBAL and GROUP related APIs.<BR>
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <B>GLOBAL: </B><BR>
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <UL>
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>Global APIs act on the entire ADC module. Configures global configuration registers</LI>
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>Allows configuration of the background request source of the VADC.</LI>
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>The clock related configurations for the VADC module are configured in the Global APIs/</LI>
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>The Global API names are prefixed by the \b XMC_VADC_GLOBAL_ and they accept ::XMC_VADC_GLOB
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the background request source of the VADC. The APIs which act on the background r
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_Background</LI>
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the sample and hold unit of the VADC. The APIs which act on the SHS related regis
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GLOBAL_SHS_</LI>
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <B>GROUP: </B><BR>
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <UL>
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>Group APIs act on a VADC group. Configures the group configuration registers</LI>
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the queue request source of the VADC. The APIs which act on the queue related reg
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Queue</LI>
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>Configures the scan request source of the VADC. The APIs which act on the scan related regis
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     are prefixed by \b XMC_VADC_GROUP_Scan</LI>
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>Configuration of the channels of each group are done by the API which have a prefix as
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     \b XMC_VADC_GROUP_Channel.</LI>
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <LI>The Group API names are prefixed by the \b XMC_VADC_GROUP_ and they accept ::XMC_VADC_GROUP_
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     one of its arguments.</LI>
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * </UL><BR>
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @{
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * MACROS
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if ((UC_SERIES == XMC42)||(UC_SERIES == XMC41) || (UC_SERIES == XMC43))
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE           (1U) /*  Defines the availability of group resource in a
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE           (1U) /*  Defines the availability of scan request resour
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE           (1U) /*  Defines the availability of queue request resou
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE            (1U) /*  Defines the availability of external multiplexe
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE        (1U) /*  Defines the availability of boundary check supp
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS      (1U) /*  Defines the availability of synchronous request
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS        (2U) /*  Defines the maximum number of groups available 
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT      (1U) /*  Defines the availability of boundary flags in a
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE         (1U) /*  Defines the external multiplexer channel select
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE             (0U) /* Defines the availability of sample and hold modu
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG          (0U) /* Defines the availability of sample and hold modu
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE    (1U) /* Define the availability of a source specific res
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC44 || UC_SERIES == XMC47 || UC_SERIES == XMC48)
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC45)
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (4U) /*  Defines the maximum number of groups available in
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (0U) /* Defines the availability of sample and hold module
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC14 || UC_SERIES == XMC13 || UC_SERIES == XMC12)
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (1U) /*  Defines the availability of group resource in a d
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (1U) /*  Defines the availability of scan request resource
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (1U) /*  Defines the availability of queue request resourc
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (1U) /*  Defines the availability of external multiplexer 
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (1U) /*  Defines the availability of boundary check suppor
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (1U) /*  Defines the availability of synchronous request s
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (1U) /*  Defines the availability of boundary flags in a d
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (1U) /*  Defines the external multiplexer channel selectio
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (1U) /* Defines the availability of sample and hold module
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (1U) /* Define the availability of a source specific resul
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (1U) /* Define the availability of a priority for result
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (UC_SERIES == XMC11)
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_AVAILABLE         (0U) /*  Defines the availability of group resource in a d
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GSCAN_AVAILABLE         (0U) /*  Defines the availability of scan request resource
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_QUEUE_AVAILABLE         (0U) /*  Defines the availability of queue request resourc
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_AVAILABLE          (0U) /*  Defines the availability of external multiplexer 
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     device*/
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_AVAILABLE      (0U) /*  Defines the availability of boundary check suppor
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MULTIPLE_SLAVEGROUPS    (0U) /*  Defines the availability of synchronous request s
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_MAXIMUM_NUM_GROUPS      (2U) /*  Defines the maximum number of groups available in
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_BOUNDARY_FLAG_SELECT    (0U) /*  Defines the availability of boundary flags in a d
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_START_UP_CAL_ACTIVE (3U) /*  Defines the need for SHS startup calibration acti
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 devices */
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_CONV_ENABLE_FOR_XMC11   (*(uint32_t*) 0x40010500UL) /*  Defines the additional err
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     XMC1100 device for effective working*/ 
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_EMUX_CH_SEL_STYLE       (0U) /*  Defines the external multiplexer channel selectio
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     operation for a particular device*/
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_AVAILABLE           (1U) /* Defines the availability of sample and hold module
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_SHS_FULL_SET_REG        (0U) /* Defines the availability of sample and hold module
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_GROUP_SRCREG_AVAILABLE  (0U) /* Define the availability of a source specific resul
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_RESULT_PRIORITY_AVAILABLE (0U) /* Define the availability of a priority for result
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_PORTS               (16U) /* Defines the number of hardware ports that can be 
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     as triggers and gating signals */
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_RESULT_REGISTERS    (16U) /* Defines the number of result holding registers pe
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #define XMC_VADC_NUM_CHANNELS_PER_GROUP  (8U)  /**< Defines the number of ADC channels per group */
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * ENUMS
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef uint16_t XMC_VADC_RESULT_SIZE_t; /**< Type defined the converted result size to unsigned 16
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef VADC_GLOBAL_TypeDef XMC_VADC_GLOBAL_t; /**< Type defined the device header file vadc global
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                              type to VADC type*/
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_AVAILABLE == 1U)
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef VADC_G_TypeDef XMC_VADC_GROUP_t; /**< Type defined the device header file vadc group regist
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                              type to VADC Group type*/
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef SHS_Type XMC_VADC_GLOBAL_SHS_t; /**< Type defined the sample and hold register structure*/
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the return status after execution of VADC specific API's. Use @ref XMC_VADC_STATUS_t fo
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STATUS
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_SUCCESS = 0,   /**< Returned when the API has been able to fulfill the callers re
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STATUS_ERROR          /**< Returned when the API cannot fulfill the request */
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STATUS_t;
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the various service requests lines. Each group can raise up to 4 service requests indep
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  all groups together have the possibility of raising 4 module wide service requests. Use @ref XM
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SR
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR0 = 0, /**< Group specific Service Request-0 */
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR1,     /**< Group specific Service Request-1 */
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR2,     /**< Group specific Service Request-2 */
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_GROUP_SR3,     /**< Group specific Service Request-3 */
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR0,    /**< Module Wide Common Service Request-0 */
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR1,    /**< Module Wide Common Service Request-1 */
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR2,    /**< Module Wide Common Service Request-2 */
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SR_SHARED_SR3    /**< Module Wide Common Service Request-3 */
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SR_t;
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the mode of operation of a channel, when an ongoing conversion gets interrupted in betw
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_STARTMODE_t for this enumeration.
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_STARTMODE
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_WFS = 0, /**< An ongoing conversion completes without interruption */
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CIR,     /**< An ongoing conversion can be interrupted and resumed later*/
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_STARTMODE_CNR     /**< An ongoing conversion can be interrupted and never resumed */
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_STARTMODE_t;
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the edge sensitivity of the trigger signal which can assert a conversion.
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_EDGE_t for this enumeration.
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_EDGE
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_NONE = 0, /**< No external trigger. Conversion request can be asserted by s
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_FALLING,  /**< The falling edge of the external trigger can assert conversi
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_RISING,   /**< The rising edge of the external trigger can assert conversio
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_TRIGGER_EDGE_ANY       /**< Both the edges can assert conversion request */
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_EDGE_t;
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the external trigger input selection possibilities, to assert a conversion. Refer the V
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  section of the reference manual for details of peripherals which can be used. Also refer xmc_va
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  detailed definitions of the peripherals which can take the control of these enumeration items.
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Use @ref XMC_VADC_TRIGGER_INPUT_SELECT_t for this enumeration.
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_TRIGGER_INPUT_SELECT
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_A = 0, /**< Trigger select signal A */
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_B,     /**< Trigger select signal B */
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_C,     /**< Trigger select signal C */
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_D,     /**< Trigger select signal D */
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_E,     /**< Trigger select signal E */
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_F,     /**< Trigger select signal F */
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_G,     /**< Trigger select signal G */
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_H,     /**< Trigger select signal H */
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_I,     /**< Trigger select signal I */
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_J,     /**< Trigger select signal J */
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_K,     /**< Trigger select signal K */
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_L,     /**< Trigger select signal L */
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_M,     /**< Trigger select signal M */
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_N,     /**< Trigger select signal N */
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_O,     /**< Trigger select signal O */
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_TR_P      /**< Trigger select signal P */
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_TRIGGER_INPUT_SELECT_t;
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the external gating input selection possibilities, to gate the conversion requests. Ref
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  interconnects section of the reference manual for details of peripherals which can be used. Als
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  xmc_vadc_map.h file for detailed definitions of the peripherals which can take the control of t
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  items. Use @ref XMC_VADC_GATE_INPUT_SELECT_t for this enumeration.
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATE_INPUT_SELECT
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_A = 0, /**< Gating select signal A */
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_B,     /**< Gating select signal B */
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_C,     /**< Gating select signal C */
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_D,     /**< Gating select signal D */
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_E,     /**< Gating select signal E */
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_F,     /**< Gating select signal F */
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_G,     /**< Gating select signal G */
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_H,     /**< Gating select signal H */
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_I,     /**< Gating select signal I */
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_J,     /**< Gating select signal J */
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_K,     /**< Gating select signal K */
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_L,     /**< Gating select signal L */
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_M,     /**< Gating select signal M */
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_N,     /**< Gating select signal N */
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_O,     /**< Gating select signal O */
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_REQ_GT_P      /**< Gating select signal P */
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATE_INPUT_SELECT_t;
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the condition for gating the conversion requests. It can be used to set the ENGT field
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * of ASMR/BSMR/QMR register respectively for auto_scan/background_scan/queue request sources.
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_GATEMODE_t for this enumeration.
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GATEMODE
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_BLOCK = 0,  /**< External triggers are permanently blocked */
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_IGNORE,     /**< External triggers are unconditionally passed */
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVEHIGH, /**< External trigger is passed only if the gate signal is high */
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GATEMODE_ACTIVELOW  /**< External trigger is passed only if the gate signal is low */
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GATEMODE_t;
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion result handling mode. Use @ref XMC_VADC_DMM_t for this enumeration.
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_DMM
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_REDUCTION_MODE = 0, /**< Standard Data reduction mode*/
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_FILTERING_MODE,     /**< Provide option to select Finite Impulse Response Filter (FI
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                         Infinite Impulse Response Filter (IIR)*/
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_DMM_DIFFERENCE_MODE,    /**< Difference mode is selected*/
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DMM_t;
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the conversion mode. It defines the resolution of conversion. Use XMC_VADC_CONVMODE_t f
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CONVMODE
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_12BIT       = 0,  /**< Results of conversion are 12bits wide */
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_10BIT       = 1,  /**< Results of conversion are 10bits wide */
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_8BIT        = 2,  /**< Results of conversion are 8bits wide */
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CONVMODE_FASTCOMPARE = 5  /**< Input signal compared with a preset range */
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CONVMODE_t;
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the output of a fast compare mode. Use @ref XMC_VADC_FAST_COMPARE_t for
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  this enumeration.
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_FAST_COMPARE
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_LOW = 0, /**< Input lower than than programmed reference */
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_HIGH ,   /**< Input higher than than programmed reference */
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_FAST_COMPARE_UNKNOWN  /**< Unknown, Conversion probably still ongoing */
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_FAST_COMPARE_t;
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the type of scan request source to be used. It can choose between auto scan and backgrou
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * source methods. Use @ref XMC_VADC_SCAN_TYPE_t for this enumeration.
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_TYPE
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_GROUPSCAN = 0, /**< Auto scan mode of operation selected. Also called as Group
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_TYPE_BACKGROUND    /**< Background scan mode of operation selected. Also called as 
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_TYPE_t;
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the behavior of load event for the scan request source. Use @ref XMC_VADC_SCAN_LOAD_t fo
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SCAN_LOAD
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_OVERWRITE = 0, /**< The old set of channels is discarded in favor of the new s
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                          awaiting conversion */
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SCAN_LOAD_COMBINE       /**< The new set of channels are combined with the pending chann
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                          previous set */
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_LOAD_t;
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the conversion classes that can be selected for each channel. The enumeration members ho
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * global classes. The conversion classes decides the properties of conversion, like resolution, sa
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Use @ref XMC_VADC_CHANNEL_CONV_t for this enumeration.
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_CONV
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 = 0, /**< Conversion property set-0 specific to the group */
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GROUP_CLASS1,     /**< Conversion property set-1 specific to the group */
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS0,    /**< Conversion property set-0, Module wide */
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1    /**< Conversion property set-1, Module wide */
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONV_t;
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the references to boundary values used for limit checking feature. Each of these can be 
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * either an upper bound or a lower bound. Use @ref XMC_VADC_CHANNEL_BOUNDARY_t for this enumeratio
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 = 0, /**< Group specific Boundary-0 value */
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1,     /**< Group specific Boundary-1 value */
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0,    /**< Module wide Boundary-0 value */
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1    /**< Module wide Boundary-1 value */
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_t;
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the voltage which the capacitor is charged to. Used in Broken wire detection feature. Us
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_CHANNEL_BWDCH_t for this enumeration.
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BWDCH
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAGND = 0, /**< Capacitor pre-charged to ground*/
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BWDCH_VAREF     /**< Capacitor pre-charged to reference voltage*/
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BWDCH_t;
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   Defines the criteria for event generation by the channel. Use @ref XMC_VADC_CHANNEL_EVGEN_t fo
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_EVGEN
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_NEVER     = 0,  /**< No event generated */
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_INBOUND   = 1U, /**< Event generated when the result is within the normal 
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPHIGH  = 1U, /**< Event generated when the result of fast compare opera
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_OUTBOUND  = 2U, /**< Event generated when the result is outside the normal
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_COMPLOW   = 2U, /**< Event generated when the result result of fast compar
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_EVGEN_ALWAYS    = 3U /**< Event generated always after conversion - unconditiona
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_EVGEN_t;
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the reference voltage selection for conversion. Use @ref XMC_VADC_CHANNEL_REF_t for this
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_REF
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_INTREF = 0, /**< Internal VARef */
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_REF_ALT_CH0    /**< External voltage available on Channel-0 of the perticular gr
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_REF_t;
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the criteria for boundary flag assertion. Use @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_BOUNDARY_CONDITION
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_ABOVE_BAND = 0, /**< Set Boundary condition criteria to asser
 548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_BOUNDARY_CONDITION_BELOW_BAND     /**< Set Boundary condition criteria to assert
 549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_BOUNDARY_CONDITION_t;
 550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  
 551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the event which can lead to a global service request assertion. Use @ref XMC_VADC_GLOBAL
 553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * enumeration.
 554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_EVENT
 556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE = VADC_GLOBEFLAG_SEVGLB_Msk, /**< Background scan request sourc
 558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_EVENT_RESULT      = VADC_GLOBEFLAG_REVGLB_Msk  /**< Global result event */
 559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_EVENT_t;
 560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  
 561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the power modes of a VADC Group. Use @ref XMC_VADC_GROUP_POWERMODE_t for this enumeratio
 563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_POWERMODE
 565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_OFF       = 0, /**< Group is powered down */
 567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED1,     /**< Reserved */
 568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_RESERVED2,     /**< Reserved */
 569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_POWERMODE_NORMAL        /**< Group is powered up */
 570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_POWERMODE_t;
 571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the status of a VADC group (also known as kernel). Use @ref XMC_VADC_GROUP_STATE_t for 
 574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_STATE
 576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_IDLE = 0, /**< Idle and can convert if requested */
 578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_STATE_BUSY      /**< Busy with an ongoing conversion */
 579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_STATE_t;
 580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the reference to sample time and conversion mode settings. Use @ref XMC_VADC_GROUP_CONV
 583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  enumeration.
 584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_CONV
 586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_STD = 0, /**< Settings pertaining to channels directly attached to VADC modul
 588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CONV_EMUX    /**< Settings pertaining to channels connected to VADC via EMUX */
 589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONV_t;
 590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbiter behavior. Use @ref XMC_VADC_GROUP_ARBMODE_t for this enumera
 593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_ARBMODE
 595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ALWAYS = 0, /**< Arbiter runs all the time */
 597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_ARBMODE_ONDEMAND    /**< Arbiter runs only if a conversion request is asserted by 
 598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                           request sources */
 599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_ARBMODE_t;
 600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX mode of operation. Use @ref XMC_VADC_GROUP_EMUXMODE_t for this enumeration.
 603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXMODE
 605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SWCTRL = 0,     /**< Perform EMUX in Software control mode*/
 607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_STEADYMODE,     /**< Perform EMUX in Steady mode (Use EMUX set value)*/
 608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SINGLEMODE,     /**< Perform EMUX in Single step mode*/
 609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXMODE_SEQUENCEMODE,   /**< Perform EMUX in Sequence mode*/
 610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXMODE_t;
 611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the EMUX channel selection encoding scheme. Use @ref XMC_VADC_GROUP_EMUXCODE_t for this
 614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_EMUXCODE
 616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_BINARY = 0, /**< A linearly incrementing code serves are MUX-SEL */
 618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_EMUXCODE_GRAY       /**< The MUX-SEL is gray encoded */
 619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCODE_t;
 620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the service request set used. Use @ref XMC_VADC_GROUP_IRQ_t for this enumeration.
 623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_IRQ
 625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_KERNEL = 0, /**< Refers to Group specific service request */
 627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_IRQ_SHARED     /**< Refers to Module wide service request */
 628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_IRQ_t;
 629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the alignment of the converted result. Use @ref XMC_VADC_RESULT_ALIGN_t for this enumer
 632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_ALIGN
 634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_LEFT = 0,  /**< Always align result to left */
 636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_ALIGN_RIGHT      /**< Always align result to right */
 637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_ALIGN_t;
 638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_RESULT_SUBTRATION 
 640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_LEFT_ALIGN  = 0U,  /**< Always align result to left */
 642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_12BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_LEFT_ALIGN  = 2U,  /**< Always align result to left */
 644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_10BIT_RIGHT_ALIGN = 0U,  /**< Always align result to right */
 645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_LEFT_ALIGN   = 4U,  /**< Always align result to left */
 646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_RESULT_SUBTRATION_8BIT_RIGHT_ALIGN  = 0U,  /**< Always align result to right */
 647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_SUBTRATION_t;
 648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the request source arbitration priority. Use @ref XMC_VADC_GROUP_RS_PRIORITY_t for this
 651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_RS_PRIORITY
 653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_0 = 0, /**< Lowest priority for the request source*/
 655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_1,     /**< Second lowest priority for the request source*/
 656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_2,     /**< Second highest priority for the request source*/
 657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_RS_PRIORITY_3,     /**< Highest priority for the request source*/
 658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_RS_PRIORITY_t;
 659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the various modes for the boundary flag. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t f
 662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_BOUNDARY_FLAG_MODE
 664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_DISABLED = 0,       /**< Disable boundary flag*/
 666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED,            /**< Always enable boundary*/
 667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_LOW, /**< Enable boundary flag when gate level
 668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_ENABLED_ACTIVE_HIGH /**< Enable boundary flag when gate level
 669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t;
 670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Defines the boundary select for Channel. Use @ref XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_t for this 
 674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_SELECT
 676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_LOWER_BOUND = 0U,       /**< Select the lower boundary*/
 678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_SELECT_UPPER_BOUND = 2U        /**< Selects the upper boundary*/
 679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_SELECT_t;
 680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the group indices. Use @ref XMC_VADC_GROUP_INDEX_t for this enumeration.
 684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GROUP_INDEX
 686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_0   = 0,
 688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_1,
 689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_2,
 691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_INDEX_3
 692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GROUP_INDEX_t;
 694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** * Defines channel alias.
 697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** * All enum items are available for channels 0 and 1. Other Channels can accept only XMC_VADC_CHANNE
 698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** */
 699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_CHANNEL_ALIAS
 700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_DISABLED = -1,
 702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH0 = 0,
 703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH1 = 1,
 704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH2 = 2,
 705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH3 = 3,
 706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH4 = 4,
 707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH5 = 5,
 708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH6 = 6,
 709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_CHANNEL_ALIAS_CH7 = 7
 710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_ALIAS_t;
 711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Selection of the reference voltage that is required for conversions (VREF).
 716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_AREF
 718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_EXTERNAL_VDD_UPPER_RANGE = 0 << SHS_SHSCFG_AREF_Pos, /**< External refer
 720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_UPPER_RANGE = 2 << SHS_SHSCFG_AREF_Pos, /**< Internal refer
 721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_AREF_INTERNAL_VDD_LOWER_RANGE = 3 << SHS_SHSCFG_AREF_Pos, /**< Internal refer
 722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_SHS_AREF_t;
 723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the gain calibration selection.
 727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_GAIN_LEVEL
 729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_0 = SHS_CALOC0_CALOFFVAL0_Pos, /**< Select the calibration value for gain
 731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_1 = SHS_CALOC0_CALOFFVAL1_Pos, /**< Select the calibration value for gain
 732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_2 = SHS_CALOC0_CALOFFVAL2_Pos, /**< Select the calibration value for gain
 733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_GAIN_LEVEL_3 = SHS_CALOC0_CALOFFVAL3_Pos  /**< Select the calibration value for gain
 734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_GAIN_LEVEL_t;
 735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the Delta sigma loop.
 739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SHS_LOOP_CH
 741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_0 = SHS_LOOP_LPCH0_Pos, /**< Select Delta-sigma loop 0*/
 743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SHS_LOOP_CH_1 = SHS_LOOP_LPCH1_Pos /**< Select Delta-sigma loop 1*/
 744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SHS_LOOP_CH_t;
 745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Provides the order in which the SHS should do the calibration
 748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER
 750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_POST_CONV = 0, /**< Calibration occur after conversion take
 752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_PRE_CONV   /**< Calibration occur before conversion takes p
 753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t;
 754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Provides possible routing values for the boundary flag.
 759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_BOUNDARY_NODE
 761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_0 = 0U, /**<Route the Group boundary flag to Common b
 763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_1,      /**<Route the Group boundary flag to Common b
 764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_2,      /**<Route the Group boundary flag to Common b
 765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_BOUNDARY_FLAG_3,      /**<Route the Group boundary flag to Common b
 766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_0,  /**<Route the Group boundary flag to Common Service Req
 767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_1,  /**<Route the Group boundary flag to Common Service Req
 768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_2,  /**<Route the Group boundary flag to Common Service Req
 769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_BOUNDARY_NODE_COMMON_SR_LINE_3   /**<Route the Group boundary flag to Common Service Req
 770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_BOUNDARY_NODE_t;
 771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Defines the ready signal selection
 776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef enum XMC_VADC_SYNCTR_EVAL
 778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_1 = VADC_G_SYNCTR_EVALR1_Msk, /**<Mask to set the EVAL1 bits of SYNCTR */
 780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
 781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_2 = VADC_G_SYNCTR_EVALR2_Msk, /**<Mask to set the EVAL2 bits of SYNCTR */
 782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_SYNCTR_EVAL_3 = VADC_G_SYNCTR_EVALR3_Msk  /**<Mask to set the EVAL3 bits of SYNCTR */
 783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_SYNCTR_EVAL_t;
 785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
 787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * DATA STRUCTURES
 788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
 789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard start*/
 790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
 791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   #pragma push
 792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   #pragma anon_unions
 793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
 794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   #pragma warning 586
 795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC scan request source. Use type @ref XMC_VADC_SCAN_CONFIG_t for t
 799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_SCAN_CONFIG
 801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how scan request source would
 804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter. If the Conversion
 806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                          selected as Cancel inject repeat/Never mode then this fiel
 807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                          priority of scan request source. Uses @ref XMC_VADC_GROUP_
 808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
 809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
 810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
 811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
 812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Use any one Group related result register as 
 814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
 817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_INPUT_SELECT_t enumeration*/
 822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal. Uses @ref
 824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_TRIGGER_EDGE_t */
 825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GATE_INPUT_SELECT_t */
 828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
 829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Decides whether timer mode for equi-distant s
 830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       activated or not.*/
 831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
 832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
 833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t asctrl;
 834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
 835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
 836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
 837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
 838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
 839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 2;
 840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversions be initiated by external hardware trig
 841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t req_src_interrupt  : 1;  /**< Request source event can be generated after a conv
 842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t enable_auto_scan   : 1;  /**< Enables the continuous conversion mode. Conversion
 843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                  of the last channel in a scan sequence will cause 
 844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t load_mode          : 1;  /**< Selects load event mode. Uses @ref XMC_VADC_SCAN_L
 845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 26;
 846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
 847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t asmr;
 848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
 849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_SCAN_CONFIG_t;
 850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef XMC_VADC_SCAN_CONFIG_t XMC_VADC_BACKGROUND_CONFIG_t; /**< Type defined the scan configurati
 853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                  structure for background Request S
 854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing the VADC channel. Use type XMC_VADC_CHANNEL_CONFIG_t for this enumeratio
 857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_CHANNEL_CONFIG
 859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
 861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
 862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
 863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
 864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t input_class                : 2;  /**< Input conversion class selection.
 865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_CONV_t */
 866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 2;
 867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t lower_boundary_select      : 2;  /**< Which boundary register serves as lower bo
 868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t upper_boundary_select      : 2;  /**< Which boundary register serves as upper bo
 870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Accepts enum @ref XMC_VADC_CHANNEL_BOUNDAR
 871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_criteria         : 2;  /**< When should an event be generated?
 872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_EVGEN_t */
 873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t sync_conversion            : 1;  /**< Enables synchronous conversion for the con
 874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t alternate_reference        : 1;  /**< Input reference voltage selection either V
 875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_REF_t*/
 876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 4;
 877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t result_reg_number          : 4;  /**< Group result register number */
 878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t use_global_result          : 1;  /**< Use global result register for background 
 879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t result_alignment           : 1;  /**< Alignment of the results read in the resul
 880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_RESULT_ALIGN_t */
 881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                            : 6;
 882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect_channel : 2;  /**< Source to be used to charge the capacitor 
 883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BWDCH_t. */
 884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t broken_wire_detect         : 1;  /**< Configures extra phase before the capacito
 885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
 886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t chctr;
 887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
 888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
 889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
 890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
 891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
 892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 8;
 893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch0 : 1; /**< Condition for which the boundary flag should
 895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                        Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDITIO
 896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch1 : 1; /**< Condition for which the boundary flag should
 897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch2 : 1; /**< Condition for which the boundary flag should
 899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t flag_output_condition_ch3 : 1; /**< Condition for which the boundary flag should
 901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          Uses @ref XMC_VADC_CHANNEL_BOUNDARY_CONDIT
 902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
 903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 4;
 906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch0  : 1; /**< Inverts boundary flag output.*/
 908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch1  : 1; /**< Inverts boundary flag output.*/
 909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch2  : 1; /**< Inverts boundary flag output.*/
 910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t invert_boundary_flag_ch3  : 1; /**< Inverts boundary flag output.*/
 911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
 913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch0  : 1; /**< Enable the boundary flag output on the speci
 914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch1  : 1; /**< Enable the boundary flag output on the speci
 915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch2  : 1; /**< Enable the boundary flag output on the speci
 916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary_flag_output_ch3  : 1; /**< Enable the boundary flag output on the speci
 917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 12;
 919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
 920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t bfl;
 921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
 922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
 923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
 924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
 925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
 926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
 927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch0    : 4; /**< Specify the basic operation of boundary flag 
 928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch1    : 4; /**< Specify the basic operation of boundary flag 
 930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch2    : 4; /**< Specify the basic operation of boundary flag 
 932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****          uint32_t boundary_flag_mode_ch3    : 4; /**< Specify the basic operation of boundary flag 
 934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref  XMC_VADC_GROUP_BOUNDARY_FLAG_MODE_
 935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****          uint32_t                           : 16;
 936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
 937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t bflc;
 938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
 939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     bool    channel_priority;  /**< Only non priority channels can be converted by Background Reque
 941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     int8_t  alias_channel;     /**< Specifies the channel which has to be aliased with CH0/CH1 (whi
 942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                     Force the value to \b(int8_t)-1 to bypass alias feature.
 943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                     Uses @ref XMC_VADC_CHANNEL_ALIAS_t  for configuration.*/
 944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_CHANNEL_CONFIG_t;
 945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize a queue entry. Use type @ref XMC_VADC_QUEUE_ENTRY_t.
 948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_ENTRY
 950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
 952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
 953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
 954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
 955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t channel_num        : 5;  /**< Channel number associated with this queue entry.<B
 956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t refill_needed      : 1;  /**< Conversion completed channel gets inserted back in
 957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t generate_interrupt : 1;  /**< Generates a queue request source event */
 958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger   : 1;  /**< Conversion requests are raised on an external trig
 959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                    : 24;
 960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
 962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t qinr0;
 963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
 964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_ENTRY_t;
 965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
 966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
 967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Structure initializing a VADC queue request source. Use type @ref XMC_VADC_QUEUE_CONFIG_t.
 968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
 969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_QUEUE_CONFIG
 970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     uint32_t conv_start_mode  : 2;  /**< One converter is shared between the queue and scan request
 972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                          group. This field determines how queue request source woul
 973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                          conversion. Uses @ref XMC_VADC_STARTMODE_t */
 974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     uint32_t req_src_priority : 2;  /**< Request source priority for the arbiter.Uses @ref XMC_VADC
 975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
 976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
 977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
 978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
 979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_GROUP_SRCREG_AVAILABLE == (1U))
 980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t src_specific_result_reg : 4;  /**< Uses any one Group related result register as
 981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     for all conversions results. To use the  indivi
 982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                     from each channel configuration, configure this
 983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
 984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
 986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
 987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_signal          : 4;  /**< Select one of the 16 possibilities for trigge
 988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_INPUT_SELECT_t */
 989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t trigger_edge            : 2;  /**< Edge selection for trigger signal.
 991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_TRIGGER_EDGE_t */
 992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 1;
 993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t gate_signal             : 4;  /**< Select one of the 16 possibilities for gating
 994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GATE_INPUT_SELECT_t */
 995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 8;
 996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t timer_mode              : 1;  /**< Timer mode for equi-distant sampling shall be
 997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 3;
 998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
 999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t qctrl0;
1000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 2;
1006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t external_trigger  : 1;  /**< Are external triggers supported? */
1007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                   : 29;
1008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t qmr0;
1010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_QUEUE_CONFIG_t;
1012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the global input class configuration. Configured parameters are sample 
1016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLASS
1019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
1031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
1038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 16;
1039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t globiclass;
1042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLASS_t;
1044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize converter and arbiter clock configuration
1048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CLOCK
1050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t analog_clock_divider     : 5;  /**< Clock for the converter. <BR>Range: [0x0 to 
1057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 2;
1058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t msb_conversion_clock     : 1;  /**< Additional clock cycle for analog converter 
1059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_clock_divider    : 2;  /**< Request source arbiter clock divider. <BR>Ra
1060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 5;
1061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 17;
1062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t globcfg;
1064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CLOCK_t;
1066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize the VADC Global functions
1071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_CONFIG
1073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t globbound;
1084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE != 0U)
1086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLOCK_t clock_config; /**< ADC clock configurations*/
1087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class0;      /**< ADC input conversion configurations for GLOBICLASS[0
1089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GLOBAL_CLASS_t  class1;      /**< ADC input conversion configurations for GLOBICLASS[1
1090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Data reduction stages */
1096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Results of the next conversion will not be ov
1098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       result register until the previous value is r
1099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 6;
1100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t globrcr;
1103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t module_disable              : 1;  /**< Disables the module clock.*/
1109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 2;
1110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t disable_sleep_mode_control  : 1;  /**< Set it to true in order to disable the Sl
1111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                             : 28;
1112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t clc;
1114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_CONFIG_t;
1116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Structure to initialize the group input class configuration. Configured parameters are sample t
1120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  conversion Mode.
1121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CLASS
1123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t sample_time_std_conv            : 5;  /**< Sample time for channels directly con
1129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_standard        : 3;  /**< Conversion mode for channels directly
1132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t sampling_phase_emux_channel     : 5;  /**< Sample time for channels connected vi
1135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                               <BR>Range: [0x0 to 0x1F] */
1136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 3;
1137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t conversion_mode_emux            : 3;  /**< Conversion mode for channels connecte
1138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                               Uses @ref XMC_VADC_CONVMODE_t */
1139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                                 : 5;
1140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t g_iclass0;
1142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CLASS_t;
1144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  EMUX related configuration structure.
1148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_EMUXCFG
1150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t starting_external_channel : 3;  /**< External channel number to which the VADC w
1156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                         generate a control signal (needed to select
1157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                         the analog multiplexer)*/
1158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 13;
1159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 10; /**< The Channel to which the EMUX is connected.
1161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
1162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t connected_channel         : 5;  /**< The Channel to which the EMUX is connected.
1163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 5;
1164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_mode                 : 2;  /**< Selects the external multiplexer modes: Ste
1166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                         Uses @ref XMC_VADC_GROUP_EMUXMODE_t*/
1167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_coding               : 1;  /**< Select Binary or Gray coding. Uses @ref XMC
1168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t stce_usage                : 1;  /**< Use STCE for each conversion of an external
1169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
1170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t emux_channel_select_style : 1;  /**< Selects the style of configuring the \b con
1171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                         (Each bit represents the channel or entire 
1172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 1;
1173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
1174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                           : 2;
1175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t g_emuxctr;
1178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_EMUXCFG_t;
1180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   Group Configuration Data Structures
1184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GROUP_CONFIG
1187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_EMUXCFG_t emux_config;    /**< External multiplexer related configurations */
1189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class0;           /**< ADC input conversion configurations for GxICLASS[
1190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     XMC_VADC_GROUP_CLASS_t class1;           /**< ADC input conversion configurations for GxICLASS[
1191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary0  : 12;  /**< Boundary value for results comparison*/
1196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t boundary1  : 12;  /**< Boundary value for results comparison*/
1198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t            : 4;
1199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t g_bound;
1201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 4;
1207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t arbitration_round_length : 2;  /**< Number of arbiter slots to be considered */
1208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 1;
1209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t arbiter_mode             : 1;  /**< Arbiter mode - Select either Continuous mode
1210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_ARBMODE_t */
1211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                          : 24;
1212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t g_arbcfg;
1214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GROUP_CONFIG_t;
1216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   Structure to initialize VADC Group result register.
1219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_RESULT_CONFIG
1222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     union
1224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        struct
1226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        {
1227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 16;
1228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t data_reduction_control  : 4;  /**< Configures the data reduction stages */
1229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t post_processing_mode    : 2;  /**< Result data processing mode. Uses @ref  XMC_V
1230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       For normal operation select
1231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_DMM_t::XMC_VADC_DMM_REDUCTION_MODE
1232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       and data_reduction_control as 0*/
1233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 2;
1234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t wait_for_read_mode      : 1;  /**< Allow the conversion only after previous resu
1235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t part_of_fifo            : 2;  /**< Make the result register a part of Result FIF
1236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t                         : 4;
1237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****           uint32_t event_gen_enable        : 1;  /**< Generates an event on availability of new res
1238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        };
1239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****        uint32_t g_rcr;
1240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_RESULT_CONFIG_t;
1242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Structure to initialize the Stepper configurations
1247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_STEP_CONFIG
1249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   union
1251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   {
1252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     struct
1253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step0            :3;  /**< Select a Sample and hold unit for the stepper's s
1255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step0             :1;  /**< Should the step be added to the sequence */
1257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step1            :3;  /**< Select a Sample and hold unit for the stepper's s
1258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step1             :1;  /**< Should the step be added to the sequence */
1260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step2            :3;  /**< Select a Sample and hold unit for the stepper's s
1261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step2             :1;  /**< Should the step be added to the sequence */
1263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step3            :3;  /**< Select a Sample and hold unit for the stepper's s
1264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step3             :1;  /**< Should the step be added to the sequence */
1266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step4            :3;  /**< Select a Sample and hold unit for the stepper's s
1267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step4             :1;  /**< Should the step be added to the sequence */
1269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step5            :3;  /**< Select a Sample and hold unit for the stepper's s
1270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step5             :1;  /**< Should the step be added to the sequence */
1272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step6            :3;  /**< Select a Sample and hold unit for the stepper's s
1273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step6             :1;  /**< Should the step be added to the sequence */
1275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t sh_unit_step7            :3;  /**< Select a Sample and hold unit for the stepper's s
1276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       Uses @ref XMC_VADC_GROUP_INDEX_t*/
1277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t enable_step7             :1;  /**< Should the step be added to the sequence */
1278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     uint32_t stepcfg;
1281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   };
1282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t;
1283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Sample and hold Initialization structure
1286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_SHS_CONFIG
1288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   union
1290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   {
1291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     struct
1292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t shs_clock_divider        :4; /**< The divider value for the SHS clock. Range: [0x0 t
1295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :6;
1296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
1297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :10;
1298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif      
1299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t analog_reference_select  :2; /**< It is possible to different reference voltage for 
1300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t                          :20;
1301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     uint32_t shscfg;
1303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   };
1304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GLOBAL_SHS_CALIBRATION_ORDER_t calibration_order; /**< order in which the calibration sh
1306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }XMC_VADC_GLOBAL_SHS_CONFIG_t;
1308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Detailed global result structure
1313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_GLOBAL_DETAILED_RESULT
1315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   union
1317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   {
1318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     struct
1319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   :16;  /**< Result of the Analog to digital conversion*/
1321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t group_number             :4;   /**< Indicates the group to which the channel_number 
1322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           :5;   /**< Converted channel number*/
1323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      :3;   /**< Converted external multiplexer channel number.
1324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source :2;   /**< Converted request source*/
1326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      :1;   /**< Fast compare result if conversion mode is fast c
1327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             :1;   /**< Valid flag is set when a new result is available
1328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   };
1331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_GLOBAL_DETAILED_RESULT_t;
1332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Detailed channel result structure
1335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** typedef struct XMC_VADC_DETAILED_RESULT
1337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   union
1339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   {
1340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     struct
1341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     {
1342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t result                   :16;  /**< Result of the Analog to digital conversion*/
1343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t data_reduction_counter   :4;   /**< Results reduction counter value*/
1344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t channel_number           :5;   /**< Converted channel number*/
1345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t emux_channel_number      :3;   /**< Converted external multiplexer channel number.
1346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                  Only applicable for GxRES[0] result register*/
1347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t converted_request_source :2;   /**< Converted request source*/
1348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t fast_compare_result      :1;   /**< Fast compare result if conversion mode is fast c
1349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****       uint32_t vaild_result             :1;   /**< Valid flag is set when a new result is available
1350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     };
1351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     uint32_t res;
1352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   };
1353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** } XMC_VADC_DETAILED_RESULT_t;
1354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  
1355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /*Anonymous structure/union guard end*/
1357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if defined(__CC_ARM)
1358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   #pragma pop
1359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #elif defined(__TASKING__)
1360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   #pragma warning restore
1361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * static inline functions
1364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U) 
1367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_CHECK_GROUP_PTR(XMC_VADC_GROUP_t *const group_ptr)
1368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U)
1370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1) || (group_ptr == VADC_G2) || (group_ptr =
1371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
1372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return((group_ptr == VADC_G0) || (group_ptr == VADC_G1));
1373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**************************************************************************************************
1377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * API Prototypes
1378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  **************************************************************************************************
1379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #ifdef __cplusplus
1381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** extern "C" {
1382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param None
1386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module.<BR>\n
1391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API would ungate the clock to the VADC module (if applicable). Also this API would bring
1392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the VADC module out of reset state(if applicable), by asserting the appropriate registers.
1393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_UngatePeripheralClock() and XMC_SCU_RESET_DeassertPeripheral
1394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * if needed. Directly accessed register is  COMPARATOR.ORCCTRL (Refer to the errata for XMC1100).
1395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableModule().
1398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_EnableModule(void);
1400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param None
1403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module.<BR>\n
1408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API would gate the clock to the VADC module (if applicable). Also this API would put
1409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the VADC module into the reset state(if applicable) by asserting the appropriate registers.
1410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API would invoke XMC_SCU_CLOCK_GatePeripheralClock() and XMC_SCU_RESET_AssertPeripheralRese
1411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModule().
1414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_DisableModule(void);
1416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module.
1420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to initialization data structure
1421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC global module with the associated configuration structure pointed by \a con
1426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * enables the global access to registers by configuring reset and clock un-gating for selected dev
1427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * initializes global class, boundary , result resources by setting GLOBICLASS,GLOBBOUND,GLOBRCR re
1428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * configures the global analog and digital clock dividers by setting GLOBCFG register. Refer relat
1429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the configurations later in the program.
1430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_ClockInit()<BR>
1433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
1435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the VADC module clock.\n\n Call this API before any further configuration of VADC. It se
1444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * register to enable.
1445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Enable:Wrong Module Pointer", (global_ptr == VADC))
1453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_DISR_Msk);
1454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables the VADC module clock.\n\n After this API call, no conversion will occur. Call
1464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableModuleClock() to enable the VADC module later in the program.
1465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_Init()
1468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableModuleClock(XMC_VADC_GLOBAL_t *const global_ptr)
1471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_Disable:Wrong Module Pointer", (global_ptr == VADC))
1473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_DISR_Pos);
1474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables VADC module to sleep if a sleep request comes.\n\n
1484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * It resets the EDIS bit of CLC register for enabling the sleep mode.
1485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableSleepMode().
1488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC &= ~((uint32_t)VADC_CLC_EDIS_Msk);
1493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr    Constant pointer to the VADC module.
1498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Ignores the sleep mode request for the VADC.\n\n
1503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * With the sleep feature enabled, the module will respond to sleep
1504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * requests by going into a low power mode. It resets the EDIS bit of CLC register for enabling the
1505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnableSleepMode().
1508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableSleepMode(XMC_VADC_GLOBAL_t *const global_ptr)
1510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableSleepMode:Wrong Module Pointer", (global_ptr == VADC))
1512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->CLC |= (uint32_t) ((uint32_t)1 <<  VADC_CLC_EDIS_Pos);
1513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to the data structure containing clock configuration data
1520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures the VADC clock.<BR>\n
1525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Sets up the clock configuration of the VADC module using the config structure pointed by \a conf
1526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The clock to the analog converter and to the request source arbiter is configured by setting the
1527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClockInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_
1533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClockInit:Wrong Module Pointer", (global_ptr == VADC))
1535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   /* Write the Clock configuration into the GLOBCFG register */
1537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG = (uint32_t)(config->globcfg | (VADC_GLOBCFG_DIVWC_Msk));
1538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param config  Conversion class parameter structure
1545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param conv_type configure the input call for either standard conversion or EMUX related convers
1546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
1547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                Range: [0x0, 0x1]
1548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures the ADC conversion settings like sample time and resolution.<BR>\n
1551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc global resource associated with \a config structure. It
1552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
1553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the GLOBALICLASS register specified by \a set_num with the required settings.
1554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
1562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
1563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC global module
1567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param config  Pointer to result configuration data structure
1568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Initializes global result register.<BR>\n
1573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Initializes Global Result Register with specified settings configured in the \a config structure
1574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * results in configuration of GLOBRCR register. This helps in configuring the Data reduction mode,
1575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * , wait for read mode on the GLOBRES register.
1576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_ResultInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
1584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  {
1585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ResultInit:Wrong Module Pointer", (global_ptr == VADC))
1586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   /* Configure GLOBRCR*/
1588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBRCR = config->g_rcr;
1589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  }
1590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  
1591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of G
1599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * enable the startup calibration feature. After turning it on, it loops until all active groups fi
1600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Call XMC_VADC_GLOBAL_Enable() and XMC_VADC_GLOBAL_ClockInit() before calling this API in sequenc
1601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisableStartupCalibration() can disable the calibration feature at runtime.
1602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr);
1609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr  Constant pointer to the VADC module.
1614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables the startup calibration feature of the VADC module.\n\n It configures the SUCAL bit of 
1619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * disable the startup calibration feature. Calling the API XMC_VADC_GLOBAL_EnsableStartupCalibrati
1620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * calibration feature at runtime.
1621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisableStartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
1627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisableStartupCalibration:Wrong Module Pointer", (global_ptr == VADC)
1629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= ~((uint32_t)VADC_GLOBCFG_SUCAL_Msk);
1630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
1633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be disabled. <BR>
1637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables the post calibration for a particular group specified as \a group_number.\n\n It config
1643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to disable the post calibration feature. Call XMC_VADC_GLOBAL_Enable() and
1644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit() before calling this API in sequence. Calling the API
1645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_EnablePostCalibration() can enable back the calibration feature at runtime.
1646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_Enable()<BR>
1649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_ClockInit()<BR>
1650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_DisablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, ui
1655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_DisablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG |= (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_numbe
1659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_number  group number whose post calibration feature is to be enabled. <BR>
1665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                      Range[0x0 to 0x3] Accepts the enum ::XMC_VADC_GROUP_INDEX_t
1666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the post calibration for a particular group specified as \a group_number.\n\n It configu
1671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * of GLOBCFG register to enable the post calibration feature. Calling the API XMC_VADC_GLOBAL_Disa
1672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * can disable the calibration feature at runtime.
1673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_DisablePostCalibration()<BR>
1676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_EnablePostCalibration(XMC_VADC_GLOBAL_t *const global_ptr, uin
1679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_EnablePostCalibration:Wrong Module Pointer", (global_ptr == VADC))
1681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBCFG &= (~ (uint32_t)((uint32_t)1 << ((uint32_t)VADC_GLOBCFG_DPCAL0_Pos + group_nu
1683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
1687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>Range[0 - 4095]
1691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>Range[0 - 4095]
1692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
1697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They define a range against which the result of a conversion can be compare
1698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
1699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
1700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * GLOBBOUND1 who will derive their values from this palette.
1701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t boundary0, c
1707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
1712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value  Boundary Value<BR>Range[0 - 4095]
1713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Programs either the boundary 0 or boundary 1 for result comparison.\n\n This defines a range aga
1718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
1719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
1720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
1726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                            const XMC_VADC_CHANNEL_BOUNDARY_t selection,
1727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                            const uint16_t boundary_value); 
1728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_AVAILABLE== 1U)
1731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr   Constant pointer to the VADC module
1734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param emuxif       The EMUX interface<BR>Range[0x0 - 0x1]
1735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group        The VADC group which must be bound to the desired emux
1736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Binds a VADC \a group to an EMUX interface specified in \a emuxif.<BR>\n
1741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Selects which group's scan request source will control the EMUX interface (set of control select
1742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By passing \b group it would configure that group's scan request source to control the EMUX sele
1743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \b emuxif.
1744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
1749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return uint32_t Complete global result register value GLOBRES
1756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Retrieves the complete result from the global result register associated with the \a global_ptr.
1759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the result register GLOBRES for the validity of the data. If the validity is assured, data is fi
1760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the global result register, cached locally next and subsequently returned to the caller.
1761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @note You can cast the return to a varible of type XMC_VADC_GLOBAL_DETAILED_RESULT_t to easily a
1763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetResult()
1766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GLOBAL_GetDetailedResult(XMC_VADC_GLOBAL_t *const global_ptr)
1768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetDetailedResult:Wrong Module Pointer", (global_ptr == VADC))
1770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  return(global_ptr->GLOBRES);
1772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module.
1777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return XMC_VADC_RESULT_SIZE_t 16 bit result register value.<BR>
1779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *         Range[0x0 - 0X0FFF]
1780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Retrieves the conversion result from the global result register associated with the \a global_pt
1783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * lightweight version of XMC_VADC_GLOBAL_GetDetailedResult(). The behavior is exactly the same, ju
1784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * only the 16 bit numeric result returned back to the application instead of the complete GLOBRES 
1785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_GetDetailedResult()
1788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_RESULT_SIZE_t XMC_VADC_GLOBAL_GetResult(XMC_VADC_GLOBAL_t *const global_pt
1790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetResult:Wrong Module Pointer", (global_ptr == VADC))
1792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return ((XMC_VADC_RESULT_SIZE_t)global_ptr->GLOBRES);
1794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param compare_val Compare value which the result of a conversion will be compared against.
1800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *         <BR>Range[0x0 - 0X0FFF]
1801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Set compare value in the global result register for fast compare mode.\n\n The result of a conve
1806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * be compared to the compare value entered as part of \a compare_val. The prerequisite is that the
1807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * with this global register must select an ICLASS which has the conversion mode configured as fast
1808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @ref XMC_VADC_GLOBAL_GetCompareResult() after this API to
1809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
1814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return compare high or low. Refer @ref XMC_VADC_FAST_COMPARE_t enum
1819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Determines the result of fast compare operation.\n\n This API returns the result of fast compare
1824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the valid flag in the global result register GLOBRES is set.
1825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr);
1830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr         Constant pointer to the VADC module
1834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param event_type   Desired event that must be manually asserted
1835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Manually asserts an event that can lead to an interrupt.\n\n This API manually asserts the reque
1840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * (Background request source event or a global result event) by setting the GLOBEVFLAG register wi
1841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \a event_type.
1842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_TriggerEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32
1848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Module Pointer", (global_ptr == VADC))
1850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_TriggerEvent:Wrong Global Event", 
1851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = event_type;
1854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param event_type Event that must be acknowledged
1860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                    Use the enum ::XMC_VADC_GLOBAL_EVENT_t to create a mask to be used with this 
1861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Acknowledges an event that has been asserted manually or automatically.\n\n This API acknowledge
1866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * by clearing GLOBEFLAG sticky flag.
1867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
1870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_ClearEvent(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t
1872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
1873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Module Pointer", (global_ptr == VADC))
1874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_ClearEvent:Wrong Global Event", 
1875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****             ((XMC_VADC_GLOBAL_EVENT_BKGNDSOURCE == event_type) || (XMC_VADC_GLOBAL_EVENT_RESULT == 
1876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG = ((uint32_t)(event_type << (uint32_t)16));
1878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
1879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global result event is connected. Refer @ref XMC_VADC
1884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  Binds the global result event to one of the 4 shared service requests.\n\n This API binds the g
1889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  to one of the 4 module wide shared service requests .Sets GLOBEVNP register with the correspond
1890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode()
1893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
1895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Constant pointer to the VADC module
1899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param sr The service request to which the global request source event is connected. Refer @ref 
1900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Binds the background request source event to one of the 4 shared service requests.\n\n This API 
1905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * request source event to one of the 4 module wide shared service requests. Sets GLOBEVNP register
1906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * corresponding \a sr line.
1907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SetResultEventInterruptNode()
1910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
1912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
1914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  config Struct consisting of various SHS related configurations.
1917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configure the basic SHS parameters.<BR>\n
1922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration, the analog reference selection and
1923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the calibration order for the Sample and Hold unit.
1924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
1927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONF
1929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
1931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
1932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param aref    Analog reference used for conversions. Refer @ref XMC_VADC_GLOBAL_SHS_AREF_t enum
1933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
1935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
1937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Selection of the reference voltage that is required for conversions (VREF).
1938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
1939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
1940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
1941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
1942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetAnalogReference(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                             const XMC_VADC_GLOBAL_SHS_AREF_t aref)
1944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  {
1945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  (shs_ptr->SHSCFG & (uint32_t)~SHS_SHSCFG_AREF_Msk) | (uint32_t)aref | SHS_SHS
1949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  }
1950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  /**
1953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * @param  config Struct consisting of various step configurations.
1955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   *
1956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * @return None
1957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   *
1958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * Configures the stepper sequence for the converter.<BR>\n
1960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * Stepper of the SHS can be configured to take up a specific sequence of groups for conversion.
1961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * The stepper sequence is configured using this API.
1962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   *
1963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * None.
1965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   */
1966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetStepperSequence(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                              const XMC_VADC_GLOBAL_SHS_STEP_CONFIG_
1968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  {
1969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong SHS Pointer",
1970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_StepperInit:Wrong config pointer",
1972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (config == (XMC_VADC_GLOBAL_SHS_STEP_CONFIG_t*)NULL))
1973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   shs_ptr->STEPCFG = (uint32_t) config->stepcfg;
1975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  }
1976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
1977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  /**
1979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * @param shs_ptr Constant pointer to the VADC Sample and hold module
1980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   *
1981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * @return bool returns true if the analog converter is operable
1982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   *              returns false if the analog converter is powered down
1983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   *
1984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * \par<b>Description:</b><br>
1985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * Returns the converter status.<BR>\n
1986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * Returns the ANRDY bit field of the SHSCFG register.
1987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   *
1988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><BR>
1989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * None.
1990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   */
1991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  __STATIC_INLINE bool XMC_VADC_GLOBAL_SHS_IsConverterReady(XMC_VADC_GLOBAL_SHS_t *const shs_ptr)
1992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  {
1993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_IsConverterReady:Wrong SHS Pointer",(shs_ptr == (XMC_VADC_GLOBAL_
1994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return((bool)((shs_ptr->SHSCFG >> (uint32_t)SHS_SHSCFG_ANRDY_Pos) & (uint32_t)0x1));
1996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  }
1997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
1998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
1999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
2002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
2007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
2008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * this mode the ADC module will convert the input depending on the value stored in the SST bit of 
2009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API would configure the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
2010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
2013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP_
2015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be disabled.<BR>Range: [0x
2019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the Accelerated timing mode.<BR>\n
2024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from accelerated mode to compatible mode of conversion is neede
2025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API would clear the accelerated mode in the SHS0_TIMCFG0 and SHS0_TIMCFG1 registers.
2026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
2029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,XMC_VADC_GROUP
2031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_num group number for which the accelerated mode needs to be enabled.<BR>Range: [0x0
2035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param sst_value Value of short sample time that needs to be configured.<BR>
2036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                  Range: [0x0 to 0x3F]
2037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures the Accelerated timing mode sample time.<BR>\n
2042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API is needed when a switch from compatible mode to accelerated mode of conversion is neede
2043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Accelerated mode the ADC module will convert the input depending on the value stored in the SST 
2044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  SHS0_TIMCFGx. This API would configure the shot sample time either in SHS0_TIMCFG0.SST or SHS0_
2045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
2048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                             XMC_VADC_GROUP_INDEX_t group_num,
2051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                             uint8_t sst_value);
2052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
2054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  divs_value The clock divider value that is possible
2057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                    <BR>Range:[0x0 to 0xF]
2058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configure Sample and hold clock divider value.<BR>\n
2062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * API would initialize the clock divider configuration. This determines the frequency of conversio
2063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * of the Sample and hold converter.
2064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
2067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetClockDivider(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, uint
2069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong SHS Pointer",
2071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetClockDivider:Wrong divide factor selected",
2073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (divs_value < (uint32_t)0x10))
2074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG =  (shs_ptr->SHSCFG & (~(uint32_t)SHS_SHSCFG_DIVS_Msk)) | (uint32_t)SHS_SHSCFG_SC
2076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   shs_ptr->SHSCFG |=  ((uint32_t)divs_value << SHS_SHSCFG_DIVS_Pos) | (uint32_t)SHS_SHSCFG_SCWC_Msk
2077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  gain_value gain value possible
2082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                    Range:[0x0 to 0x3]
2083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num The channel number for which the gain has to be configured
2085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configure the gain value for SHS.<BR>\n
2089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * API would set the gain factor for a selected channel.
2090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
2093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                        uint8_t gain_value,
2096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                        XMC_VADC_GROUP_INDEX_t group_num,
2097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                        uint8_t ch_num);
2098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
2100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  max_calibration_time calibration time
2103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                              Range:[0x0 to 0x3F]
2104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configure the Maximum calibration timing.<BR>\n
2108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * API would initialize the Maximum time after which the calibration should occur. If no adc conver
2109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * occur during this duration then the calibration would run irrespective of conversions. The max t
2110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * converter can go without a calibration is set in this API.
2111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
2114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_SetMaxCalTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                        uint32_t max_calibration_time)
2117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetMaxCalTime:Wrong SHS Pointer",
2119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALMAX_Msk);
2122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   shs_ptr->CALCTR |=  ((uint32_t)max_calibration_time << SHS_CALCTR_CALMAX_Pos);
2123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enable the Gain and offset calibration.<BR>\n
2133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enable the gain and offset calibration for all the Sample and hold units.
2134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations()<BR>.
2137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                          XMC_VADC_GROUP_INDEX_t group_num);
2140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disable the Gain and offset calibration.<BR>\n
2148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disable the gain and offset calibration for all the Sample and hold units.
2149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                           XMC_VADC_GROUP_INDEX_t group_num);
2155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Read the calibration value for the selected gain level.<BR>\n
2164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would return the offset calibration val
2165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * selected gain level. This is applicable for all the channels in the group that use the particula
2166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue()<BR>.
2169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
2172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level);
2173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  gain_level The gain level whose calibration value has to read.
2178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  offset_calibration_value The offset calibration value to be set.
2179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Set the calibration value for the selected gain level.<BR>\n
2183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Each gain value has a offset calibration value, this API would set the offset value of the selec
2184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue()<BR>.
2187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
2190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
2191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                    uint8_t offset_calibration_value);
2192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
2193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  group_num The Group number for which the configurations applies
2197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  ch_num Channel number for which the configurations applies
2199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures the delta sigma loop of the SHS.<BR>\n
2203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * There are 2 Delta-Sigma loops that can be configured. This API would configure the loop (loop_se
2204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * with the appropriate group_num and channel_num.
2205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP bit fields.
2206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop()<BR>.
2209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                            XMC_VADC_GROUP_INDEX_t group_num,
2212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
2213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                            uint8_t ch_num);
2214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enable the selected Delta-Sigma loop.<BR>\n
2222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
2229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                               XMC_VADC_SHS_LOOP_CH_t loop_select)
2230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong SHS Pointer",
2232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP |= (uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select;
2237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param shs_ptr Constant pointer to the VADC Sample and hold module
2241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  loop_select The delta sigma loop number for which the configurations applies
2242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disable the selected delta sigma loop.<BR>\n
2246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures the SHS_LOOP.LPENx bit field.
2247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop()<BR>.
2250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations()<BR>.
2251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr
2253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                XMC_VADC_SHS_LOOP_CH_t loop_select)
2254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong SHS Pointer",
2256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
2257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableSigmaDeltaLoop:Wrong Delta sigma loop selected",
2258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
2259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   shs_ptr->LOOP &= ~((uint32_t)SHS_LOOP_LPEN0_Msk << (uint32_t)loop_select);
2261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
2265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
2266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the VADC group.
2269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param config Pointer to the initialization data structure
2270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC group module with the associated configuration structure pointed by \a conf
2275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * initializes the group specified as part of the \a group_ptr. It initializes group conversion cla
2276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * configuration , boundary configuration by setting GxICLASS,GxARBCFG,GxBOUND, registers. It also
2277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * configures the EMUX control register if applicable. Refer related API's to change the configurat
2278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  program.
2279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_InputClassInit()<BR>
2282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetPowerMode()<BR>
2283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_SetBoundaries()<BR>
2284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ExternalMuxControlInit()<BR>
2285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_Init(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config);
2287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group.
2291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param config  group related conversion class parameter structure
2292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param conv_type Use direct channels or EMUX channels. Refer @ref XMC_VADC_GROUP_CONV_t enum
2293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param set_num Conversion class set<BR>
2294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                Range[0x0, 0x1]
2295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Sets up the conversion settings for vadc group resource associated with \a config structure. It 
2300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * conversion class properties like sampling time and resolution for selected \a conv_type channels
2301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the G_ICLASS register specified by \a set_num with the required settings.
2302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_Init()
2306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
2309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                    const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set_num);
2310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC Group which must be set as a slave
2314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param master_grp The master group number<BR>
2315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param slave_group The slave group number<BR>
2317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x3]
2318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a slave group.\n\n Conversion of identically numbered channels across
2323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is the
2325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * master group while Groups-0 and 3 are the slave groups. It uses the SYNCCTR register for the con
2326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_SetSyncMaster()<BR>
2329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR>
2330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_EnableChannelSyncRequest()<BR>
2331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
2334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC Group.
2338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param power_mode  Desired power mode
2339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures the power mode of a VADC group.\n\n For a VADC group to actually convert an analog si
2344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * converter must be turned on.
2345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
2348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
2350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures a VADC Group as a master group.<BR>\n
2359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Conversion of identically numbered channels across groups can be
2360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * synchronized. For example, when the trigger to convert CH-1 of Group-2 is received, it is possib
2361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * request conversion of CH-1 of Group-0 and Group-3. Group-2 in this example is therefore the mast
2362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Groups-0 and 3 are the slave groups.
2363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
2366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr);
2368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                     <BR>Range: [0x0 to 0x3]
2374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures the ready signal for master group.<BR>\n
2378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API would read the \b slave_group number and determine which EVAL configuration to apply fo
2379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * slave set. Checks the readiness of slaves in synchronized conversions. Conversion of identically
2380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * across groups can be synchronized. For example, when the trigger to convert CH-1 of Group-2 is r
2381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * possible to simultaneously request conversion of CH-1 of Group-0 and Group-3. Group-2 in this ex
2382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * therefore the master group while Groups-0 and 3 are the slave groups. Before the master can requ
2383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * for synchronized conversion, it has the option of checking the readiness of the slaves.
2384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()
2387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the master VADC Group
2393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param slave_group  The slave VADC Group number
2394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Clears the ready signal for master group.<BR>\n
2398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Ignores the readiness of slaves in synchronized conversions.This API would read the \b slave_gro
2399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * determine which EVAL configuration to apply for the given master slave set. Then clears the conf
2400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API is called when the master should issue the conversion request without waiting for the s
2401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * assert a ready signal. The ready signal is asserted by the slave group(s) when the conversion is
2402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * in these channels.
2403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_SetSyncMaster()<BR>
2406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group);
2408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group waiting for ready signal
2412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param eval_waiting_group  The VADC Group which expects a ready signal to start it's conversion.
2413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param eval_origin_group  The VADC Group from which the eval_waiting_group will expect a ready s
2414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Sets the ready signal in the eval_waiting_group .<BR>\n
2418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion all the slaves participating need to configure the ready signal.
2419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A slave group will also need to configure the ready signals coming from the other slave groups.
2420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the Sync.slave's EVAL Bits (GxSYNCTR.EVALy).
2421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetSyncSlaveReadySignal(XMC_VADC_GROUP_t *const group_ptr,
2426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                             uint32_t eval_waiting_group,
2427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                             uint32_t eval_origin_group);
2428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group
2432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *         uint32_t EVAL bits for the group
2434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Get the Eval bits of the group.<BR>\n
2437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion the master's ready signal configuration must be copied onto the slav
2438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would return the Sync EVAL Bits (GxSYNCTR.EVALy) which can be used to set in 
2439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetSyncReadySignal(XMC_VADC_GROUP_t *const group_ptr)
2444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   uint32_t eval_mask;
2446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetSyncReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
2447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
2449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk | VADC_G_SYNCTR_EVALR2_Msk | VADC_G_SYNCTR_EVALR3_Msk;
2450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
2451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk;
2452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
2453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return( group_ptr->SYNCTR & eval_mask);
2454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant Pointer to the VADC Group
2458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param eval_mask  mask to configure the eval bits
2459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Use XMC_VADC_SYNCTR_EVAL_t to create the mask.
2460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Set the Eval bits of the group.<BR>\n
2464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * For Synchronized conversion the master's ready signal configuration must be copied onto the slav
2465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the Sync EVAL Bits (GxSYNCTR.EVALy).
2466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_CheckSlaveReadiness()<BR> XMC_VADC_GROUP_IgnoreSlaveReadiness()<BR>
2469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_SetSyncReadySignal(XMC_VADC_GROUP_t *const group_ptr, uint32_t 
2471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   uint32_t eval_mask;
2473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
2474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS > 2U)
2476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk | VADC_G_SYNCTR_EVALR2_Msk | VADC_G_SYNCTR_EVALR3_Msk;
2477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #else
2478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   eval_mask = VADC_G_SYNCTR_EVALR1_Msk;
2479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
2480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->SYNCTR &= ~(eval_mask);
2481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->SYNCTR |= mask;
2482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr   Constant pointer to the master VADC Group
2487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_num  Channel whose conversion triggers conversion in slave groups
2488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Sets up a channel for synchronized conversion.\n\n Conversion of identically numbered channels a
2492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * can be synchronized. For example, when the trigger to
2493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * convert CH-1 of Group-2 is received, it is possible to simultaneously request conversion of CH-1
2494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Group-3. Group-2 in this example is therefore the master group while Groups-0 and 3 are the slav
2495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Before the master can request its slaves for synchronized conversion, it has the option of check
2496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * of the slaves.
2497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
2500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
2502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr       Pointer to the master VADC Group
2506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     Channel whose conversion triggers conversion in slave groups
2507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disable the synchronization request for the particular channel specified as ch_num. To enable th
2511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * call the API @ref XMC_VADC_GROUP_EnableChannelSyncRequest().
2512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
2515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
2517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group.
2521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return retuns IDLE if converter is free else returns busy. Refer @ref XMC_VADC_GROUP_STATE_t en
2523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Checks the live status of the analog to digital converter. The converter can either idle doing n
2526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sampling + converting.
2527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
2530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr);
2532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group whose global boundary registers are to be pr
2536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param boundary0  Boundary-0 Value<BR>
2537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param boundary1  Boundary-1 Value<BR>
2539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Range: [0x0 - 0x0FFF]
2540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Programs the boundaries with \a boundary0 and boundary1 for result comparison.\n\n These two bou
2545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * absolute boundaries. They defines a range against which the result of a conversion can be compar
2546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * fast compare mode, the two boundaries provide hysteresis capability to a compare value. In any c
2547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * values entered here form a boundary pallete. There are dedicated upper and lower boundary regist
2548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * G_BOUND1 who will derive their values from this palette.
2549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
2552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, 
2555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary0, 
2556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                   const uint32_t boundary1);
2557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param selection The boundary value selected for \b boundary_value.
2561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param boundary_value Select the boundary value.
2562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Programs the boundary with \a boundary_value for result comparison.\n\n This defines a range aga
2567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the result of a conversion can be compared. In the fast compare mode, the two boundaries provide
2568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * capability to a compare value.
2569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
2572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetIndividualBoundary(XMC_VADC_GROUP_t *const group_ptr,
2574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_CHANNEL_BOUNDARY_t selection,
2575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                           const uint16_t boundary_value); 
2576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param sr_num   The service request number (0 through 3)
2580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param type     IRQ type (Kernel specific interrupt vs Module wide shared interrupt )
2581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Activates a Service Request line(manually trigger).<BR>\n
2585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * VADC provides few SR lines for each group and a few more which is shared across all the groups.
2586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * These SR lines can be connected to an NVIC node which in-turn would generate an interrupt.
2587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API would manually trigger the given SR line. Could be used for evaluation and testing purp
2588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
2591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr, 
2593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                           const uint32_t sr_num, 
2594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                           const XMC_VADC_GROUP_IRQ_t type);
2595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group
2599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param emux_cfg   EMUX configuration structure
2600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Configures group EMUX parameters associated with the \a emux_cfg configuration structure.\n\n An
2604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * interface allows additional channels to be connected to a VADC group. The conversion properties
2605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * of such channels can be different from the standard channels which are directly connected to the
2606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API configures conversion properties of channels connected via EMUX interface.
2607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None
2610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ExternalMuxControlInit(XMC_VADC_GROUP_t *const group_ptr,
2612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                            const XMC_VADC_GROUP_EMUXCFG_t emux_cfg)
2613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
  27              	 .loc 1 2613 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 3960     	 str r1,[r7]
2614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   uint32_t   emux_config;
2615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ExternalMuxControlInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
2617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.starting_external_channel << (uint32_t)VADC_G_EMUXCTR_EMUXSET_P
  44              	 .loc 1 2618 0
  45 000a 3B78     	 ldrb r3,[r7]
  46 000c C3F30203 	 ubfx r3,r3,#0,#3
  47 0010 DBB2     	 uxtb r3,r3
  48 0012 1A46     	 mov r2,r3
2619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
  49              	 .loc 1 2619 0
  50 0014 7B88     	 ldrh r3,[r7,#2]
  51 0016 C3F30903 	 ubfx r3,r3,#0,#10
  52 001a 9BB2     	 uxth r3,r3
  53 001c 1B04     	 lsls r3,r3,#16
2618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****               ((uint32_t)emux_cfg.connected_channel << (uint32_t)VADC_G_EMUXCTR_EMUXCH_Pos);
  54              	 .loc 1 2618 0
  55 001e 1343     	 orrs r3,r3,r2
  56 0020 FB60     	 str r3,[r7,#12]
2620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  = emux_config;
  57              	 .loc 1 2621 0
  58 0022 7B68     	 ldr r3,[r7,#4]
  59 0024 D3F8F021 	 ldr r2,[r3,#496]
  60 0028 0021     	 movs r1,#0
  61 002a FA68     	 ldr r2,[r7,#12]
  62 002c 0A43     	 orrs r2,r2,r1
  63 002e C3F8F021 	 str r2,[r3,#496]
2622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  64              	 .loc 1 2622 0
  65 0032 FB78     	 ldrb r3,[r7,#3]
  66 0034 C3F30013 	 ubfx r3,r3,#4,#1
  67 0038 DBB2     	 uxtb r3,r3
  68 003a 1A07     	 lsls r2,r3,#28
2623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.emux_mode  << (uint32_t)VADC_G_EMUXCTR_EMUXMODE_Pos)|
  69              	 .loc 1 2623 0
  70 003c FB78     	 ldrb r3,[r7,#3]
  71 003e C3F38103 	 ubfx r3,r3,#2,#2
  72 0042 DBB2     	 uxtb r3,r3
  73 0044 9B06     	 lsls r3,r3,#26
2622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  74              	 .loc 1 2622 0
  75 0046 1A43     	 orrs r2,r2,r3
2624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                 ((uint32_t)emux_cfg.stce_usage << (uint32_t)VADC_G_EMUXCTR_EMXST_Pos);
  76              	 .loc 1 2624 0
  77 0048 FB78     	 ldrb r3,[r7,#3]
  78 004a C3F34013 	 ubfx r3,r3,#5,#1
  79 004e DBB2     	 uxtb r3,r3
  80 0050 5B07     	 lsls r3,r3,#29
2622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   emux_config = ((uint32_t)emux_cfg.emux_coding << (uint32_t)VADC_G_EMUXCTR_EMXCOD_Pos)  |
  81              	 .loc 1 2622 0
  82 0052 1343     	 orrs r3,r3,r2
  83 0054 FB60     	 str r3,[r7,#12]
2625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_EMUX_CH_SEL_STYLE == 1U)
2627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   emux_config |= ((uint32_t)emux_cfg.emux_channel_select_style << (uint32_t)VADC_G_EMUXCTR_EMXCSS_P
  84              	 .loc 1 2627 0
  85 0056 FB78     	 ldrb r3,[r7,#3]
  86 0058 C3F38013 	 ubfx r3,r3,#6,#1
  87 005c DBB2     	 uxtb r3,r3
  88 005e 9B07     	 lsls r3,r3,#30
  89 0060 FA68     	 ldr r2,[r7,#12]
  90 0062 1343     	 orrs r3,r3,r2
  91 0064 FB60     	 str r3,[r7,#12]
2628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
2629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->EMUXCTR  |= (emux_config | ((uint32_t)VADC_G_EMUXCTR_EMXWC_Msk)) ;
  92              	 .loc 1 2629 0
  93 0066 7B68     	 ldr r3,[r7,#4]
  94 0068 D3F8F021 	 ldr r2,[r3,#496]
  95 006c FB68     	 ldr r3,[r7,#12]
  96 006e 1343     	 orrs r3,r3,r2
  97 0070 43F00042 	 orr r2,r3,#-2147483648
  98 0074 7B68     	 ldr r3,[r7,#4]
  99 0076 D3F8F011 	 ldr r1,[r3,#496]
 100 007a 0021     	 movs r1,#0
 101 007c 0A43     	 orrs r2,r2,r1
 102 007e C3F8F021 	 str r2,[r3,#496]
2630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
 103              	 .loc 1 2630 0
 104 0082 1437     	 adds r7,r7,#20
 105              	.LCFI3:
 106              	 .cfi_def_cfa_offset 4
 107 0084 BD46     	 mov sp,r7
 108              	.LCFI4:
 109              	 .cfi_def_cfa_register 13
 110              	 
 111 0086 5DF8047B 	 ldr r7,[sp],#4
 112              	.LCFI5:
 113              	 .cfi_restore 7
 114              	 .cfi_def_cfa_offset 0
 115 008a 7047     	 bx lr
 116              	 .cfi_endproc
 117              	.LFE185:
 119              	 .section .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot,"ax",%progbits
 120              	 .align 2
 121              	 .thumb
 122              	 .thumb_func
 124              	XMC_VADC_GROUP_ScanEnableArbitrationSlot:
 125              	.LFB188:
2631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
2633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param boundary_flag_num The Boundary flag for which the interrupt node needs to be configured.
2637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                          Range: [0x0 to 0x3]
2638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param node    Service Request node Id
2639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Connects the boundary event to the SR line of VADC or to a common boundary flag.<BR>\n
2644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a boundary event. Hence to get a interrupt o
2645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
2646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * field GxBFLNP.BFLxNP.
2647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
2650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
2652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                   const uint8_t boundary_flag_num,
2653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                   const XMC_VADC_BOUNDARY_NODE_t node);
2654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
2655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    uint32_t The complete GxALIAS register
2660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Returns the ALIAS values.\n The ALIAS value that is configured for Channel-0 and channel-1 are r
2663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
2666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE uint32_t XMC_VADC_GROUP_GetAlias(XMC_VADC_GROUP_t *const group_ptr)
2668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetAliasWrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
2670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return (group_ptr->ALIAS);
2671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
2675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param conv_class  conversion property to be extracted
2676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    XMC_VADC_GROUP_CLASS_t The complete GxICLASSy register
2678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Returns the input class configuration values.\n
2681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This returns the sampling time configuration and resolution configured in the appropriate group 
2682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \b conv_class. A call to this API would return the register GxICLASSy.
2683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
2686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE XMC_VADC_GROUP_CLASS_t XMC_VADC_GROUP_GetInputClass(XMC_VADC_GROUP_t *const group_p
2688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                     const XMC_VADC_CHANNEL_CONV_t c
2689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_VADC_GROUP_CLASS_t input_value;
2691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
2692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_GetInputClass:Wrong conv_class selected", 
2693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              (XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLA
2694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   input_value.g_iclass0 = (uint32_t) 0xFFFFFFFF;
2696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   if ((XMC_VADC_CHANNEL_CONV_GROUP_CLASS0 == conv_class) || (XMC_VADC_CHANNEL_CONV_GROUP_CLASS1 == 
2697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   {
2698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     input_value.g_iclass0 = group_ptr->ICLASS[(uint32_t)conv_class];
2699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   }
2700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return (input_value);
2702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
2704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)
2706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
2708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to Scan configuration
2709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return None
2710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Initializes the VADC SCAN functional block.<BR>\n
2713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The GROUP SCAN request source functional block converts channels sequentially starting with the 
2714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * channel to the lowest. Channels must register themselves as being part of the the scan sequence.
2715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_ScanEnableA
2716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
2717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_ScanDisableArbi
2718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxASCTRL, GxASMR needed scan request s
2719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR> XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanSelectGating()<BR>
2723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
2725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the scan request source.<BR>\n
2733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. Thus this must be enabled if any conversion need to take place.
2736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR>
2740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 126              	 .loc 1 2742 0
 127              	 .cfi_startproc
 128              	 
 129              	 
 130              	 
 131 0000 80B4     	 push {r7}
 132              	.LCFI6:
 133              	 .cfi_def_cfa_offset 4
 134              	 .cfi_offset 7,-4
 135 0002 83B0     	 sub sp,sp,#12
 136              	.LCFI7:
 137              	 .cfi_def_cfa_offset 16
 138 0004 00AF     	 add r7,sp,#0
 139              	.LCFI8:
 140              	 .cfi_def_cfa_register 7
 141 0006 7860     	 str r0,[r7,#4]
2743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN1_Msk;
 142              	 .loc 1 2744 0
 143 0008 7B68     	 ldr r3,[r7,#4]
 144 000a D3F88430 	 ldr r3,[r3,#132]
 145 000e 43F00072 	 orr r2,r3,#33554432
 146 0012 7B68     	 ldr r3,[r7,#4]
 147 0014 D3F88410 	 ldr r1,[r3,#132]
 148 0018 0021     	 movs r1,#0
 149 001a 0A43     	 orrs r2,r2,r1
 150 001c C3F88420 	 str r2,[r3,#132]
2745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
 151              	 .loc 1 2745 0
 152 0020 0C37     	 adds r7,r7,#12
 153              	.LCFI9:
 154              	 .cfi_def_cfa_offset 4
 155 0022 BD46     	 mov sp,r7
 156              	.LCFI10:
 157              	 .cfi_def_cfa_register 13
 158              	 
 159 0024 5DF8047B 	 ldr r7,[sp],#4
 160              	.LCFI11:
 161              	 .cfi_restore 7
 162              	 .cfi_def_cfa_offset 0
 163 0028 7047     	 bx lr
 164              	 .cfi_endproc
 165              	.LFE188:
 167 002a 00BF     	 .section .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot,"ax",%progbits
 168              	 .align 2
 169              	 .thumb
 170              	 .thumb_func
 172              	XMC_VADC_GROUP_ScanDisableArbitrationSlot:
 173              	.LFB189:
2746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the scan request source.<BR>\n
2754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to the scan slot.A call to this API will lead to all conversions request by scan to be blocked.
2757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN1.
2758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot()<BR>
2761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
2763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 174              	 .loc 1 2763 0
 175              	 .cfi_startproc
 176              	 
 177              	 
 178              	 
 179 0000 80B4     	 push {r7}
 180              	.LCFI12:
 181              	 .cfi_def_cfa_offset 4
 182              	 .cfi_offset 7,-4
 183 0002 83B0     	 sub sp,sp,#12
 184              	.LCFI13:
 185              	 .cfi_def_cfa_offset 16
 186 0004 00AF     	 add r7,sp,#0
 187              	.LCFI14:
 188              	 .cfi_def_cfa_register 7
 189 0006 7860     	 str r0,[r7,#4]
2764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
2765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN1_Msk);
 190              	 .loc 1 2765 0
 191 0008 7B68     	 ldr r3,[r7,#4]
 192 000a D3F88430 	 ldr r3,[r3,#132]
 193 000e 23F00072 	 bic r2,r3,#33554432
 194 0012 7B68     	 ldr r3,[r7,#4]
 195 0014 D3F88410 	 ldr r1,[r3,#132]
 196 0018 0021     	 movs r1,#0
 197 001a 0A43     	 orrs r2,r2,r1
 198 001c C3F88420 	 str r2,[r3,#132]
2766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
 199              	 .loc 1 2766 0
 200 0020 0C37     	 adds r7,r7,#12
 201              	.LCFI15:
 202              	 .cfi_def_cfa_offset 4
 203 0022 BD46     	 mov sp,r7
 204              	.LCFI16:
 205              	 .cfi_def_cfa_register 13
 206              	 
 207 0024 5DF8047B 	 ldr r7,[sp],#4
 208              	.LCFI17:
 209              	 .cfi_restore 7
 210              	 .cfi_def_cfa_offset 0
 211 0028 7047     	 bx lr
 212              	 .cfi_endproc
 213              	.LFE189:
 215 002a 00BF     	 .section .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot,"ax",%progbits
 216              	 .align 2
 217              	 .thumb
 218              	 .thumb_func
 220              	XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:
 221              	.LFB205:
2767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
2772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the scan request source.<BR>\n
2775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If the scan request source must have its conversion request considered by the arbiter, it must p
2776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the scan channel can only be converted when 
2777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to the scan slot. A call to this API would return the status of the arbitration slot of scan.
2778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
2779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_ScanDisableArbitrationSlot()<BR
2782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr)
2784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GROU
2786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN1_Msk) >> VADC_G_ARBPR_ASEN1_Pos);
2788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param trigger_input  Choice of the input earmarked as a trigger line
2793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for scan request source.<BR>\n
2798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
2800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
2802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTSEL.
2803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectGating()<BR> XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
2806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
2808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Trigger edge selection
2813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Selects the trigger edge for scan request source.<BR>\n
2818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A scan request source will raise conversion request only if there were either a request from app
2819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible trigger edges. This is
2820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the scan request source.
2821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASCTRL.XTMODE.
2822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
2827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param gating_input  Module input signal meant to be selected as gating input
2831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for scan request source.<BR>\n
2836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
2837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the scan request source o
2838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxASMR.ENGT has to be config
2839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxAS
2840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR>
2843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
2845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the scan request source
2849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of scan request source.<BR>\n
2854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
2855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
2856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
2857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
2859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectGating();
2860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_G
2862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMODE
2865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
2867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= (uint32_t) (~((uint32_t)VADC_G_ASMR_ENGT_Msk));
2868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
2869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)((uint32_t)mode_sel << VADC_G_ASMR_ENGT_Pos);
2870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
2879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence. Every request source event will cause a load event to occur. A call to this API would 
2884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableContinuousMode()<BR>
2888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_SCAN_Msk;
2893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
2902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Typically for a scan request source to generate conversion request, either a hardware trigger or
2903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
2904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a scan request s
2905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
2906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this feature the Autoscan mode of operations is disabled. A call to this A
2907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the register bit field GxASMR.SCAN.
2908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableContinuousMode()<BR>
2911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableContinuousMode(XMC_VADC_GROUP_t *const group_ptr)
2913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableContinuousMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
2915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_SCAN_Msk);
2916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
2925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
2926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the s
2927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxASMR.LD
2928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
2931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
2933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
2935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_LDEV_Msk;
2936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing scan sequence conversion.<BR>\n
2945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
2946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
2947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
2948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxASMR, GxASCTRL, GxARBPR to achieve the sequen
2949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
2952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr);
2954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel meant to be added to scan sequence
2958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
2959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the scan sequence.<BR>\n
2964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the scan request source. This will be added to
2965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
2966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddMultipleChannels()<BR>
2970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddChannelToSequence(XMC_VADC_GROUP_t *const group_ptr, con
2972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
2973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("VADC_GSCAN_AddSingleChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
2974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddChannelToSequence:Wrong Channel Number", 
2975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
2976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL |= (uint32_t)((uint32_t)1 << ch_num);
2977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
2978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
2979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
2980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
2981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
2982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
2983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
2984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the selected channels
2985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
2986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
2987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
2988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
2990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
2991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
2992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
2993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of GxASSEL.
2994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
2995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
2996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanAddChannelToSequence()<BR>
2997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
2998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanAddMultipleChannels(XMC_VADC_GROUP_t *const group_ptr, cons
2999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanAddMultipleChannels:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
3001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASSEL = ch_mask;
3002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending for conversion.<BR>\n
3013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (GxASPND).
3017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanGetNumChannelsPending()<BR>
3020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanIsChannelPending(XMC_VADC_GROUP_t *const group_ptr, const u
3022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
3025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanIsChannelPending:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_C
3026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return( (bool)((uint32_t)(group_ptr->ASPND >> ch_num) & 1U));
3028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param  group_ptr     Constant pointer to the VADC group
3032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return  <BR>
3033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to 0x8]
3035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Returns the total number of pending channels.<BR>\n
3038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (GxASPND).
3042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanIsChannelPending()<BR>
3045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr);
3047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for scan. This will trigger a interrupt if the
3056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
3058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
3061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanTriggerReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanTriggerReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFLAG    |= (uint32_t)VADC_G_SEFLAG_SEV1_Msk;
3066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the scan conversion complete request source event.<BR>\n
3075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxSEFLAG.SEV1.
3077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanTriggerReqSrcEvent()<BR>
3080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanClearReqSrcEvent(XMC_VADC_GROUP_t *const group_ptr)
3082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanClearReqSrcEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
3084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->SEFCLR |= (uint32_t)VADC_G_SEFCLR_SEV1_Msk;
3085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the scan request source event. Will return a true
3096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for scan. A call to this API would access the register bit field GxSEF
3097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
3100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_ScanGetReqSrcEventStatus(XMC_VADC_GROUP_t *const group_ptr)
3102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GSCAN_GetRSEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
3104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return( (bool)(group_ptr->SEFLAG & (uint32_t)VADC_G_SEFLAG_SEV1_Msk));
3105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group
3109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param sr    Service Request Id
3110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Connects the scan request source event to the SR line of VADC.<BR>\n
3115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will connect a Service Request line(SR) to a scan request source event. Hence to get a 
3116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Service request line one has to enable the required NVIC node.  A call to this API would configu
3117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * field GxSEVNP.SEV1NP .
3118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
3121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
3123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for scan request source.<BR>\n
3131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By using this API, the trigger signal will be activated for the scan request source. The trigger
3132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the ASCTRL register. The Selection of a input will be done by
3133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_ScanSelectTrigger(). A call to this API would configure the register bit field Gx
3134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanSelectTrigger()<BR> XMC_VADC_GROUP_ScanDisableExternalTrigger()<BR>
3137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
3141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_ENTR_Msk;
3143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for scan request source.<BR>
3152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the scan request source.
3153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the scan request source. If any configuration were
3154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in GxASCTRL, it will be not be effected by this API.
3155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENTR.
3156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableExternalTrigger()<BR>
3159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableExternalTrigger(XMC_VADC_GROUP_t *const group_ptr)
3161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableExternalTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENTR_Msk);
3165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param channel_num   channel number to be removed from the scan sequence.
3170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Removes a channel from the scan sequence.<BR>
3175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By using this API the it is possible to remove a single channel from the conversion sequence.
3176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The remaining channels will continue however they are.
3177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register GxASSEL.
3178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
3181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_ScanRemoveChannel(XMC_VADC_GROUP_t *const group_ptr, const uint32_t channel_num
3183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the scan request source event .<BR>
3191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be activated for the scan request source.
3192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENSI.
3194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanDisableEvent(),<BR> XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode()<BR>
3197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanEnableEvent(XMC_VADC_GROUP_t *const group_ptr)
3199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanEnableEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
3201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR |= ((uint32_t)VADC_G_ASMR_ENSI_Msk);
3203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables the scan request source event .<BR>
3212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be deactivated for the scan request source.
3213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxASMR.ENSI.
3215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_ScanEnableEvent(),<BR> XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode()<BR>
3218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_ScanDisableEvent(XMC_VADC_GROUP_t *const group_ptr)
3220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_ScanDisableEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
3222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENSI_Msk);
3224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
3226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr Pointer to the VADC module
3229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Initializes the Background scan functional block.<BR>\n
3233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The BACKGROUND SCAN request source functional block converts channels of all VADC groups that ha
3234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * been assigned as a priority channel (priority channels can be converted only by queue and scan).
3235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * request source converts the unprioritized channels. Unprioritized channels however can also be u
3236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * and scan. But a channel which is prioritized can not be used with background request source.
3237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR> XMC_VADC_GROUP_BackgroundDisableArbitratio
3240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundSelectGating()<BR>
3241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
3243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
3245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Constant pointer to the VADC group which may receive a
3247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                  conversion request from background request source
3248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the Background request source.<BR>\n
3254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot. Thus this must be enabled if any conversion need to take place.
3257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2.
3258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableArbitrationSlot()<BR>
3261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_p
3263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 222              	 .loc 1 3263 0
 223              	 .cfi_startproc
 224              	 
 225              	 
 226              	 
 227 0000 80B4     	 push {r7}
 228              	.LCFI18:
 229              	 .cfi_def_cfa_offset 4
 230              	 .cfi_offset 7,-4
 231 0002 83B0     	 sub sp,sp,#12
 232              	.LCFI19:
 233              	 .cfi_def_cfa_offset 16
 234 0004 00AF     	 add r7,sp,#0
 235              	.LCFI20:
 236              	 .cfi_def_cfa_register 7
 237 0006 7860     	 str r0,[r7,#4]
3264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK_
3265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)VADC_G_ARBPR_ASEN2_Msk;
 238              	 .loc 1 3265 0
 239 0008 7B68     	 ldr r3,[r7,#4]
 240 000a D3F88430 	 ldr r3,[r3,#132]
 241 000e 43F08062 	 orr r2,r3,#67108864
 242 0012 7B68     	 ldr r3,[r7,#4]
 243 0014 D3F88410 	 ldr r1,[r3,#132]
 244 0018 0021     	 movs r1,#0
 245 001a 0A43     	 orrs r2,r2,r1
 246 001c C3F88420 	 str r2,[r3,#132]
3266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
 247              	 .loc 1 3266 0
 248 0020 0C37     	 adds r7,r7,#12
 249              	.LCFI21:
 250              	 .cfi_def_cfa_offset 4
 251 0022 BD46     	 mov sp,r7
 252              	.LCFI22:
 253              	 .cfi_def_cfa_register 13
 254              	 
 255 0024 5DF8047B 	 ldr r7,[sp],#4
 256              	.LCFI23:
 257              	 .cfi_restore 7
 258              	 .cfi_def_cfa_offset 0
 259 0028 7047     	 bx lr
 260              	 .cfi_endproc
 261              	.LFE205:
 263 002a 00BF     	 .section .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot,"ax",%progbits
 264              	 .align 2
 265              	 .thumb
 266              	 .thumb_func
 268              	XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:
 269              	.LFB206:
3267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr  Constant pointer to the VADC group which may receive a conversion request
3270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                     from background request source
3271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the Background request source.<BR>\n
3276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If the Background request source must have its conversion request considered by the arbiter, it 
3277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the Background channel can only be converted
3278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * comes to the Background slot.A call to this API will lead to all conversions request by Backgrou
3279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN2
3280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableArbitrationSlot()<BR>
3283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_BackgroundDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_
3285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 270              	 .loc 1 3285 0
 271              	 .cfi_startproc
 272              	 
 273              	 
 274              	 
 275 0000 80B4     	 push {r7}
 276              	.LCFI24:
 277              	 .cfi_def_cfa_offset 4
 278              	 .cfi_offset 7,-4
 279 0002 83B0     	 sub sp,sp,#12
 280              	.LCFI25:
 281              	 .cfi_def_cfa_offset 16
 282 0004 00AF     	 add r7,sp,#0
 283              	.LCFI26:
 284              	 .cfi_def_cfa_register 7
 285 0006 7860     	 str r0,[r7,#4]
3286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:Wrong Group Pointer",  XMC_VADC_CHECK
3287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN2_Msk);
 286              	 .loc 1 3287 0
 287 0008 7B68     	 ldr r3,[r7,#4]
 288 000a D3F88430 	 ldr r3,[r3,#132]
 289 000e 23F08062 	 bic r2,r3,#67108864
 290 0012 7B68     	 ldr r3,[r7,#4]
 291 0014 D3F88410 	 ldr r1,[r3,#132]
 292 0018 0021     	 movs r1,#0
 293 001a 0A43     	 orrs r2,r2,r1
 294 001c C3F88420 	 str r2,[r3,#132]
3288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
 295              	 .loc 1 3288 0
 296 0020 0C37     	 adds r7,r7,#12
 297              	.LCFI27:
 298              	 .cfi_def_cfa_offset 4
 299 0022 BD46     	 mov sp,r7
 300              	.LCFI28:
 301              	 .cfi_def_cfa_register 13
 302              	 
 303 0024 5DF8047B 	 ldr r7,[sp],#4
 304              	.LCFI29:
 305              	 .cfi_restore 7
 306              	 .cfi_def_cfa_offset 0
 307 0028 7047     	 bx lr
 308              	 .cfi_endproc
 309              	.LFE206:
 311 002a 00BF     	 .section .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot,"ax",%progbits
 312              	 .align 2
 313              	 .thumb
 314              	 .thumb_func
 316              	XMC_VADC_GROUP_QueueEnableArbitrationSlot:
 317              	.LFB223:
3289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #endif
3290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_TRIGGER_INPUT_SELECT_t
3295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for Background request source.<BR>\n
3300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTSEL.
3305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
3310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Select the trigger edge
3315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Select Trigger edge for Background request source.<BR>\n
3320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A Background request source will raise conversion request only if there were either a request fr
3321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 possible values for the trigger 
3322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the Background request source.
3323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSCTRL.XTMODE.
3324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectGating()<BR> XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<
3327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VAD
3329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Module input signal meant to be selected as gating input
3333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Accepts enum ::XMC_VADC_GATE_INPUT_SELECT_t
3334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for Background request source.<BR>\n
3339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the Background request so
3341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxBRSMR.ENGT has to be confi
3342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field BRSC
3343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR>
3346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
3348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the background scan request source
3352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of background request source.<BR>\n
3357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENGT.
3361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectGating();
3364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundSetGatingMode(XMC_VADC_GLOBAL_t *const global_ptr,
3366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                             XMC_VADC_GATEMODE_t mode_sel)
3367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong Module Pointer", (global_ptr == VADC))
3369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_G
3370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= (uint32_t)(~((uint32_t)VADC_BRSMR_ENGT_Msk));
3373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   /* Configure the new gating mode*/
3374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)((uint32_t)mode_sel << VADC_BRSMR_ENGT_Pos);
3375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables continuous conversion mode.<BR>\n
3385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * request is needed. Using autoscan (continuous conversion)feature it is possible to start the con
3387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * once and allow the sequence to repeat without any further triggers. Once all channels belonging 
3388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * request source have been converted, a request source completion event is generated. Generation o
3389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * can restart the Background configure sequence. Every request source event will cause a load even
3390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would access the register bit field BRSMR.SCAN.
3391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundDisableContinuousMode()<BR>
3394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableContinuousMode(XMC_VADC_GLOBAL_t *const global
3396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableContinuousMode:Wrong Module Pointer", (global_ptr == 
3398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_SCAN_Msk;
3399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables continuous conversion mode.<BR>\n
3408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Typically for a Background request source to generate conversion request, either a hardware trig
3409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * request is a pre-requisite. Using autoscan feature it is possible to start the conversion once a
3410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence to repeat without any further triggers. Once all channels belonging to a Background req
3411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * been converted, a request source completion event is generated. Generation of this event can res
3412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence. By invoking this API the Autoscan mode of operations is disabled. A call to this API w
3413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * register bit field BRSMR.SCAN.
3414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableContinuousMode()<BR>
3417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableContinuousMode(XMC_VADC_GLOBAL_t *const globa
3419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableContinuousMode:Wrong Module Pointer", (global_ptr ==
3421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_SCAN_Msk);
3422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>\n
3431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the scan unit to generate a conversion request to the analog converter. It is assumed that the b
3433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * has already been filled up with entries. A call to this API would set the register bit field BRS
3434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
3437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerConversion(XMC_VADC_GLOBAL_t *const global_pt
3439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerConversion:Wrong Module Pointer", (global_ptr == VAD
3441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_LDEV_Msk;
3442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing background scan conversion(sequence).<BR>\n
3451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * An ongoing sequence can be aborted at any time. The scan unit picks the pending channels one by 
3452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * pending register and requests for their conversion. This API essentially clears the channel pend
3453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * creating an illusion that there are no more channels left in the sequence.
3454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers BRSMR, BRSCTRL, GxARBPR(if group is available) 
3455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * current scan sequence.
3456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
3459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr);
3461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Request source
3466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Adds a channel to the background scan sequence.<BR>\n
3473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddMultipleChannels()<BR>
3479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundAddChannelToSequence(XMC_VADC_GLOBAL_t *const global
3481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                     const uint32_t grp_num,
3482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                     const uint32_t ch_num)
3483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number",((grp_num) < XMC_V
3486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= (uint32_t)((uint32_t)1 << ch_num);
3490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Adds multiple channels to the scan sequence.<BR>\n
3505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndAddMultipleChannels(XMC_VADC_GLOBAL_t *const global_ptr
3513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t ch_mask)
3515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] |= ch_mask;
3519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Request source
3525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The unprioritized channel meant to be added to the scan sequence
3526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Removes a channel to the background scan sequence.<BR>\n
3532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a new single channel into the background scan request source. This will 
3533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channel will be part of the conversion sequence when the next load event occ
3534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundRemoveChannelFromSequence(XMC_VADC_GLOBAL_t *const g
3540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                          const uint32_t grp_num,
3541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                          const uint32_t ch_num)
3542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Module Pointer", (global_ptr == 
3544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Group Number",((grp_num) < XMC_V
3545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAddChannelToSequence:Wrong Channel Number",
3546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] &= (uint32_t)~((uint32_t)1 << ch_num);
3549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_mask    Mask word indicating channels which form part of scan conversion sequence
3555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Bit location 0/1/2/3/4/5/6/7 represents channels-0/1/2/3/4/5/6/7 respectively.
3556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   To Add the channel to the scan sequence enable the respective bit.
3557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   Passing a 0x0 will clear all the previously selected channels
3558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0xFF]
3559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Removes multiple channels to the scan sequence.<BR>\n
3564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Call this API to insert a multiple channels into the scan request source. This will be added to 
3565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * sequence. The added channels will be a part of the conversion sequence when the next load event 
3566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit fields of BRSSEL.
3567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundAddChannelToSequence()<BR>
3570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgndRemoveMultipleChannels(XMC_VADC_GLOBAL_t *const global_
3572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                    const uint32_t grp_num,
3573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                    const uint32_t ch_mask)
3574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Module Pointer", (global_ptr == VADC
3576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgndAddMultipleChannels:Wrong Group Number",   ((grp_num) < XMC_VA
3577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSSEL[grp_num] &= (uint32_t)~ch_mask;
3578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param grp_num    ID of the VADC group whose unprioritized channels have been assigned to backgr
3583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param ch_num     The channel being audited for completion of conversion
3584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *                   <BR>Range: [0x0 to 0x7]
3585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *     bool   returns true if the channel is pending conversion else returns false
3587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Determine if the channel is pending.<BR>\n
3590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will check if the Channel in question is awaiting conversion in the current arbitration
3591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. This API would return true
3593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * if the channel is found in the pending register (BRSPND[\b grp_num]).
3594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending()<BR>
3597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundIsChannelPending(XMC_VADC_GLOBAL_t *const global_ptr
3599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t grp_num,
3600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                                                 const uint32_t ch_num)
3601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Module Pointer", (global_ptr == VADC
3603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Group Number",   ((grp_num) < XMC_VA
3604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundIsChannelPending:Wrong Channel Number",
3605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
3606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return( (bool)(global_ptr->BRSPND[grp_num] & (uint32_t)((uint32_t)1 << ch_num)));
3608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * @return  <BR>
3613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   uint32_t   Returns the total channels pending for conversion.
3614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *              <BR>Range: [0x0 to (0x8*number of groups)]
3615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Returns the number of pending channels.<BR>\n
3618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will read the pending channels register and will return the number of channels that are
3619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * When a load event occurs the scan sequence is pushed to a pending conversion register.
3620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * From the pending register the channels are taken up by the converter. When the API is called it 
3621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * return the total number of channels pending (BRSPND[\b grp_num]).
3622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundIsChannelPending()<BR>
3625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr);
3627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Manually asserts the conversion complete request source event.<BR>\n
3635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will set the request source event for background scan. This will trigger a interrupt if
3636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * service node pointer for the scan has been configured.
3637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB.
3638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * None.
3641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent(XMC_VADC_GLOBAL_t *const global_p
3643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent:Wrong Module Pointer", (global_ptr == VA
3645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk;
3646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Acknowledges the background scan conversion complete request source event.<BR>\n
3655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will clear the request source event that occurred. This will clear a interrupt if it wa
3656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GLOBEFLAG.SEVGLB
3657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundTriggerReqSrcEvent()<BR>
3660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent(XMC_VADC_GLOBAL_t *const global_ptr
3662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundClearReqSrcEvent:Wrong Module Pointer", (global_ptr == VADC
3664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->GLOBEFLAG |= (uint32_t)VADC_GLOBEFLAG_SEVGLBCLR_Msk;
3665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *   bool   returns true if the service request event is raised.
3671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *          returns false if the service request event was not raised.
3672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Determines if the request source event is asserted.<BR>
3675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will get the status of the background scan request source event. Will return a true
3676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * if the event has occurred for background scan. A call to this API would configure the register
3677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * bit field GLOBEFLAG.SEVGLB.
3678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  None.
3681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus(XMC_VADC_GLOBAL_t *const global
3683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetReqSrcEventStatus:Wrong Module Pointer", (global_ptr == 
3685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return((bool)(global_ptr->GLOBEFLAG & (uint32_t)VADC_GLOBEFLAG_SEVGLB_Msk));
3686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the trigger for background scan request source.<BR>\n
3695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be activated for the scan request source. The trigger signal 
3696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * edge will be selected from the BRSCTRL register. The Selection of a input will be done by
3697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GLOBAL_BackgroundSelectTrigger(). A call to this API would configure the register bit f
3698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundSelectTrigger()<BR> XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(
3701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger(XMC_VADC_GLOBAL_t *const globa
3703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger:Wrong Module Pointer", (global_ptr ==
3705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_ENTR_Msk;
3707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables the trigger for background scan request source.<BR>
3716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By using this API the trigger will be deactivated for the background scan request source.
3717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This will just deactivate the H/W trigger for the background scan request source. If any configu
3718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to select the trigger input in BRSCTRL will be not be effected. A call to this API would configu
3719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * bit field BRSMR.ENTR.
3720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   * \par<b>Related APIs:</b><br>
3722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableExternalTrigger()<BR>
3723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger(XMC_VADC_GLOBAL_t *const glob
3725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableExternalTrigger:Wrong Module Pointer", (global_ptr =
3727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENTR_Msk);
3729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr       Pointer to the VADC module
3733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables the background scan request source event .<BR>
3738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be activated for the background scan request sou
3739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENSI.
3741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GLOBAL_BackgroundEnableEvent(),<BR> XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptN
3744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundEnableEvent(XMC_VADC_GLOBAL_t *const global_ptr)
3746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundEnableEvent:Wrong Module Pointer", (global_ptr == VADC))
3748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR |= ((uint32_t)VADC_BRSMR_ENSI_Msk);
3750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param global_ptr     Pointer to the VADC module
3754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables the background scan request source event .<BR>
3759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * By using this API the request source event will be deactivated for the background scan request s
3760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Other configurations w.r.t service node pointer are not done in this API.
3761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field BRSMR.ENSI.
3762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_BackgroundEnableEvent(),<BR> XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNo
3765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GLOBAL_BackgroundDisableEvent(XMC_VADC_GLOBAL_t *const global_ptr)
3767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundDisableEvent:Wrong Module Pointer", (global_ptr == VADC))
3769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   global_ptr->BRSMR &= ~((uint32_t)VADC_BRSMR_ENSI_Msk);
3771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)
3774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr Pointer to the VADC group
3776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param config     Pointer to initialization data structure
3777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Initializes VADC QUEUE functional block.<BR>\n
3782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The QUEUE request source functional block converts channels stored in a queue. The first channel
3783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * queue is converted first. A channel once converted, can be placed back into the queue if desired
3784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API will first disable the arbitration slot for queue (XMC_VADC_GROUP_QueueEnable
3785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * and then it would configure all the related registers with the required configuration values.
3786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The arbitration slot is re-enabled at the end of init by invoking XMC_VADC_GROUP_QueueDisableArb
3787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxARBPR, GxQCTRL0, GxQMR0 to configure the queu
3788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * source.
3789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR> XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR
3792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR> XMC_VADC_GROUP_QueueSelectGating()<BR>
3793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
3795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Enables arbitration slot of the queue request source.<BR>\n
3803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. Thus this must be enabled if any conversion need to take place.
3806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<BR>
3810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueEnableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 318              	 .loc 1 3812 0
 319              	 .cfi_startproc
 320              	 
 321              	 
 322              	 
 323 0000 80B4     	 push {r7}
 324              	.LCFI30:
 325              	 .cfi_def_cfa_offset 4
 326              	 .cfi_offset 7,-4
 327 0002 83B0     	 sub sp,sp,#12
 328              	.LCFI31:
 329              	 .cfi_def_cfa_offset 16
 330 0004 00AF     	 add r7,sp,#0
 331              	.LCFI32:
 332              	 .cfi_def_cfa_register 7
 333 0006 7860     	 str r0,[r7,#4]
3813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueEnableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
3814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)1 << VADC_G_ARBPR_ASEN0_Pos);
 334              	 .loc 1 3814 0
 335 0008 7B68     	 ldr r3,[r7,#4]
 336 000a D3F88430 	 ldr r3,[r3,#132]
 337 000e 43F08072 	 orr r2,r3,#16777216
 338 0012 7B68     	 ldr r3,[r7,#4]
 339 0014 D3F88410 	 ldr r1,[r3,#132]
 340 0018 0021     	 movs r1,#0
 341 001a 0A43     	 orrs r2,r2,r1
 342 001c C3F88420 	 str r2,[r3,#132]
3815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
 343              	 .loc 1 3815 0
 344 0020 0C37     	 adds r7,r7,#12
 345              	.LCFI33:
 346              	 .cfi_def_cfa_offset 4
 347 0022 BD46     	 mov sp,r7
 348              	.LCFI34:
 349              	 .cfi_def_cfa_register 13
 350              	 
 351 0024 5DF8047B 	 ldr r7,[sp],#4
 352              	.LCFI35:
 353              	 .cfi_restore 7
 354              	 .cfi_def_cfa_offset 0
 355 0028 7047     	 bx lr
 356              	 .cfi_endproc
 357              	.LFE223:
 359 002a 00BF     	 .section .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot,"ax",%progbits
 360              	 .align 2
 361              	 .thumb
 362              	 .thumb_func
 364              	XMC_VADC_GROUP_QueueDisableArbitrationSlot:
 365              	.LFB224:
3816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Disables arbitration slot of the queue request source.<BR>\n
3824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If the QUEUE request source must have its conversion request considered by the arbiter, it must 
3825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to the queue slot.A call to this API will lead to all conversions request by queue to be blocked
3827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxARBPR.ASEN0.
3828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot()<BR>
3831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueDisableArbitrationSlot(XMC_VADC_GROUP_t *const group_ptr)
3833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 366              	 .loc 1 3833 0
 367              	 .cfi_startproc
 368              	 
 369              	 
 370              	 
 371 0000 80B4     	 push {r7}
 372              	.LCFI36:
 373              	 .cfi_def_cfa_offset 4
 374              	 .cfi_offset 7,-4
 375 0002 83B0     	 sub sp,sp,#12
 376              	.LCFI37:
 377              	 .cfi_def_cfa_offset 16
 378 0004 00AF     	 add r7,sp,#0
 379              	.LCFI38:
 380              	 .cfi_def_cfa_register 7
 381 0006 7860     	 str r0,[r7,#4]
3834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueDisableArbitrationSlot:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
3835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->ARBPR &= ~((uint32_t)VADC_G_ARBPR_ASEN0_Msk);
 382              	 .loc 1 3835 0
 383 0008 7B68     	 ldr r3,[r7,#4]
 384 000a D3F88430 	 ldr r3,[r3,#132]
 385 000e 23F08072 	 bic r2,r3,#16777216
 386 0012 7B68     	 ldr r3,[r7,#4]
 387 0014 D3F88410 	 ldr r1,[r3,#132]
 388 0018 0021     	 movs r1,#0
 389 001a 0A43     	 orrs r2,r2,r1
 390 001c C3F88420 	 str r2,[r3,#132]
3836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
 391              	 .loc 1 3836 0
 392 0020 0C37     	 adds r7,r7,#12
 393              	.LCFI39:
 394              	 .cfi_def_cfa_offset 4
 395 0022 BD46     	 mov sp,r7
 396              	.LCFI40:
 397              	 .cfi_def_cfa_register 13
 398              	 
 399 0024 5DF8047B 	 ldr r7,[sp],#4
 400              	.LCFI41:
 401              	 .cfi_restore 7
 402              	 .cfi_def_cfa_offset 0
 403 0028 7047     	 bx lr
 404              	 .cfi_endproc
 405              	.LFE224:
 407 002a 00BF     	 .section .text.XMC_VADC_GROUP_QueueFlushEntries,"ax",%progbits
 408              	 .align 2
 409              	 .thumb
 410              	 .thumb_func
 412              	XMC_VADC_GROUP_QueueFlushEntries:
 413              	.LFB228:
3837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    bool  returns true if the arbitration is enabled else returns false.
3843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Returns the arbitration status of the queue request source.<BR>\n
3846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If the queue request source must have its conversion request considered by the arbiter, it must 
3847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the arbitration rounds. Even if a load event occurs the queue channel can only be converted when
3848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to the queue slot. A call to this API would return the status of the arbitration slot of queue.
3849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would read the register bit field GxARBPR.ASEN1.
3850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueEnableArbitrationSlot(),<BR>  XMC_VADC_GROUP_QueueDisableArbitrationSlot()<
3853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE bool XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled(XMC_VADC_GROUP_t *const group_ptr
3855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueIsArbitrationSlotEnabled:Wrong Group Pointer", XMC_VADC_CHECK_GRO
3857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   return ((group_ptr->ARBPR & (uint32_t)VADC_G_ARBPR_ASEN0_Msk) >> VADC_G_ARBPR_ASEN0_Pos);
3859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as a trigger line
3864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal for queue request source.<BR>\n
3869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 16 input lines as a trigger line. 
3871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTSEL.
3874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, 
3879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num);
3880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param trigger_edge  Choice of the trigger edge
3884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Select Trigger signal edge for queue request source.<BR>\n
3889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A queue request source will raise conversion request only if there were either a request from ap
3890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * occurrence of a hardware trigger. This API selects one of the 4 trigger edges. This is
3891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * needed when a hardware trigger is needed for the conversion of the queue request source.
3892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Refer to the reference manual to determine the signal that needs to be connected.
3893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQCTRL0.XTMODE.
3894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectGating()<BR> XMC_VADC_GROUP_QueueEnableExternalTrigger()<BR>
3897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
3899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param input_num  Choice of the input earmarked as the gating line
3903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Select Gating signal for queue request source.<BR>\n
3908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal. Any on
3909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * lines can be chosen as a gating signal. Trigger signal can be given to the queue request source 
3910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * when the gating signal's active level is detected. Additionally the GxQMR0.ENGT has to be config
3911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the gating signal's active level. A call to this API would configure the register bit field GxQC
3912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueSelectTrigger()<BR>
3915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
3917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param mode_sel  Select how the gating is applied to the queue request source
3921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <b>Details of function</b><br>
3925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Selects the gating mode of queue request source.<BR>\n
3926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Passage of the trigger input to the request source can be controlled via a gating signal.
3927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API determines how the gating signal behaves, either active low or active high.
3928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If gating signal needs to ignored XMC_VADC_GATEMODE_IGNORE should be used as the \a mode_sel.
3929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the register bit field GxQMR0.ENGT.
3930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><BR>
3932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * XMC_VADC_GROUP_QueueSelectGating();
3933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueSetGatingMode(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_
3935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
3937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetGatingMode:Wrong mode selected", (mode_sel <= XMC_VADC_GATEMOD
3938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   /* Clear the existing gate configuration */
3940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 &= (uint32_t)(~((uint32_t) VADC_G_QMR0_ENGT_Msk));
3941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   /* Set the new gating mode */
3942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)mode_sel << VADC_G_QMR0_ENGT_Pos);
3943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Generates conversion request (Software initiated conversion).<BR>
3953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A conversion request can be raised either upon detection of a hardware trigger, or by software. 
3954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the queue unit to generate a conversion request to the analog converter. It is assumed that the 
3955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * been filled up with entries. A call to this API would configure the register bit field GxQMR0.TR
3956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Note:</b><br>
3958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * The conversion of queue entry will start immediately after the entry has been loaded into GxQINR
3959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This happens only if the queue entry has been loaded into the register without the need for the 
3960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * If a H/W Trigger is selected while loading the entry, the conversion will occur in one of the 2 
3961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <ul>
3962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <li> The H/W generates a trigger needed for the queue request source.
3963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * <li> The Conversion is triggered manually by calling this API.
3964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * </ul>
3965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueTriggerConversion(XMC_VADC_GROUP_t *const group_ptr)
3970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
3971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   XMC_ASSERT("XMC_VADC_GROUP_QueueTriggerConversion:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
3972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_TREV_Pos);
3973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
3974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    uint32_t returns the total number of channels.
3979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *             <BR>Range: [0x0 to 0x8]
3980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
3982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Returns the number of channels present in the queue.<BR>\n
3983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will return the queue buffer size. This buffer will be consisting of valid queue entrie
3984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * will be converted when a trigger event occurs. All the entries that are loaded onto the GxQINR0 
3985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * be added to the queue buffer. Hence if an application needs to get the number of valid queue ent
3986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * this API would provide the interface. A call to this API would access the registers GxQBUR0, GxQ
3987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * to determine the queue length.
3988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
3990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueInsertChannel()<BR>
3991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
3992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr);
3993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
3994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
3995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
3996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
3997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
3998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
3999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Aborts an ongoing conversion by flushing the queue.<BR>\n
4001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will flush the queue buffer. Ongoing conversion of the Queue request source will
4002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
4003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers GxQCTRL0, GxQMR0, GxARBPR in order to abort
4004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * the queue sequence.
4005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
4006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueFlushEntries() <BR>
4008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
4009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr);
4010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
4011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** /**
4012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @param group_ptr     Constant pointer to the VADC group
4013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * @return
4014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *    None
4015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
4016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Description:</b><br>
4017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * Flushing the queue Entry.<BR>\n
4018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * This API will flush one entry in the queue buffer. Ongoing conversion of the Queue request sourc
4019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * not be effected by this API. This would clear all the contents that are present in the queue buf
4020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * A call to this API would configure the registers  GxQMR0. This is a Blocking API, i.e will only 
4021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * all the entries are removed from the queue.
4022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *
4023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  * \par<b>Related APIs:</b><br>
4024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  *  XMC_VADC_GROUP_QueueRemoveChannel()<BR> XMC_VADC_GROUP_QueueAbortSequence(0<BR>
4025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****  */
4026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** __STATIC_INLINE void XMC_VADC_GROUP_QueueFlushEntries(XMC_VADC_GROUP_t *const group_ptr)
4027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** {
 414              	 .loc 1 4027 0
 415              	 .cfi_startproc
 416              	 
 417              	 
 418              	 
 419 0000 80B4     	 push {r7}
 420              	.LCFI42:
 421              	 .cfi_def_cfa_offset 4
 422              	 .cfi_offset 7,-4
 423 0002 83B0     	 sub sp,sp,#12
 424              	.LCFI43:
 425              	 .cfi_def_cfa_offset 16
 426 0004 00AF     	 add r7,sp,#0
 427              	.LCFI44:
 428              	 .cfi_def_cfa_register 7
 429 0006 7860     	 str r0,[r7,#4]
4028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   /* Initiate flushing of the queue */
4029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_FLUSH_Msk;
 430              	 .loc 1 4029 0
 431 0008 7B68     	 ldr r3,[r7,#4]
 432 000a D3F80431 	 ldr r3,[r3,#260]
 433 000e 43F48062 	 orr r2,r3,#1024
 434 0012 7B68     	 ldr r3,[r7,#4]
 435 0014 D3F80411 	 ldr r1,[r3,#260]
 436 0018 0021     	 movs r1,#0
 437 001a 0A43     	 orrs r2,r2,r1
 438 001c C3F80421 	 str r2,[r3,#260]
4030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** 
4031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   while( !((group_ptr->QSR0)& (uint32_t)VADC_G_QSR0_EMPTY_Msk))
 439              	 .loc 1 4031 0
 440 0020 00BF     	 nop
 441              	.L9:
 442              	 .loc 1 4031 0 is_stmt 0 discriminator 1
 443 0022 7B68     	 ldr r3,[r7,#4]
 444 0024 D3F80831 	 ldr r3,[r3,#264]
 445 0028 03F02003 	 and r3,r3,#32
 446 002c 002B     	 cmp r3,#0
 447 002e F8D0     	 beq .L9
4032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   {
4033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****     /* Wait until the queue is indeed flushed */
4034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h ****   }
4035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_vadc.h **** }
 448              	 .loc 1 4035 0 is_stmt 1
 449 0030 0C37     	 adds r7,r7,#12
 450              	.LCFI45:
 451              	 .cfi_def_cfa_offset 4
 452 0032 BD46     	 mov sp,r7
 453              	.LCFI46:
 454              	 .cfi_def_cfa_register 13
 455              	 
 456 0034 5DF8047B 	 ldr r7,[sp],#4
 457              	.LCFI47:
 458              	 .cfi_restore 7
 459              	 .cfi_def_cfa_offset 0
 460 0038 7047     	 bx lr
 461              	 .cfi_endproc
 462              	.LFE228:
 464 003a 00BF     	 .section .rodata.g_xmc_vadc_group_array,"a",%progbits
 465              	 .align 2
 468              	g_xmc_vadc_group_array:
 469 0000 00440040 	 .word 1073759232
 470 0004 00480040 	 .word 1073760256
 471 0008 004C0040 	 .word 1073761280
 472 000c 00500040 	 .word 1073762304
 473              	 .section .text.XMC_VADC_GLOBAL_EnableModule,"ax",%progbits
 474              	 .align 2
 475              	 .global XMC_VADC_GLOBAL_EnableModule
 476              	 .thumb
 477              	 .thumb_func
 479              	XMC_VADC_GLOBAL_EnableModule:
 480              	.LFB248:
 481              	 .file 2 "../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c"
   1:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /**
   2:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * @file xmc_vadc.c
   3:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * @date 2018-06-26
   4:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
   5:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * @cond
   6:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
   7:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
   9:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * All rights reserved.                        
  11:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *                                             
  12:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * following conditions are met:   
  14:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *                                                                              
  15:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * disclaimer.                        
  17:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 
  18:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 
  21:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * products derived from this software without specific prior written permission.                  
  23:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *                                                                              
  24:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *                                                                              
  32:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
  35:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  36:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * Change History
  37:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * --------------
  38:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  39:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2015-02-15:
  40:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Initial <br>
  41:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *      
  42:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2015-02-20:
  43:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Revised for XMC1201 device.<br>
  44:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *   
  45:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2015-04-27:
  46:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for SHS.<br>
  47:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Added New APIs for trigger edge selection.<BR>
  48:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Added new APIs for Queue flush entries, boundary selection, Boundary node pointer.<BR>
  49:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Revised GatingMode APIs and EMUX Control Init API.<BR>
  50:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  51:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2015-06-20:
  52:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  53:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  54:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2015-06-25:
  55:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - BFL configuration in channel initialization fixed.
  56:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  57:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2015-07-28:
  58:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - CLOCK_GATING_SUPPORTED and PERIPHERAL_RESET_SUPPORTED macros used
  59:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Clubbed the macro definitions for XMC13 XMC12 and XMC14
  60:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Clubbed the macro definitions for XMC44 XMC47 and XMC48
  61:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - New APIs Created.
  62:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GLOBAL_SetIndividualBoundary
  63:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetIndividualBoundary
  64:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetAlias
  65:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetInputClass
  66:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelSetIclass
  67:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetResultAlignment
  68:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetInputClass
  69:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetResultSubtractionValue
  70:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  71:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2015-12-01:
  72:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Fixed the analog calibration voltage for XMC1100 to external reference upper supply range.
  73:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Fixed the XMC_VADC_GLOBAL_StartupCalibration() for XMC1100.
  74:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  75:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2016-06-17:
  76:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - New macros added XMC_VADC_SHS_FULL_SET_REG, XMC_VADC_RESULT_PRIORITY_AVAILABLE 
  77:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *       and XMC_VADC_SYNCTR_START_LOCATION
  78:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - New Enum added XMC_VADC_SHS_GAIN_LEVEL_t and XMC_VADC_SYNCTR_EVAL_t
  79:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Fixed the EVAL configuration in API XMC_VADC_GROUP_CheckSlaveReadiness and XMC_VADC_GROUP_
  80:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - New APIs added are:
  81:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetSyncSlaveReadySignal
  82:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_ChannelGetAssertedEvents
  83:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetAssertedResultEvents
  84:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetResultRegPriority
  85:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_SetSyncReadySignal
  86:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetSyncReadySignal
  87:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *           - XMC_VADC_GROUP_GetResultRegPriority
  88:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  89:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2017-01-11:
  90:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Fix assertion in XMC_VADC_GROUP_CheckSlaveReadiness() and XMC_VADC_GROUP_IgnoreSlaveReadin
  91:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  92:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * 2018-06-26:
  93:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *     - Fixed XMC_VADC_GLOBAL_StartupCalibration(), added wait until calibration is started
  94:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  95:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * @endcond 
  96:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  *
  97:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  */
  98:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
  99:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * HEADER FILES
 101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #include <xmc_vadc.h>
 103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * MACROS
 106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_MAX_ICLASS_SET          (2U)  /**< Defines the maximum number of conversion parame
 108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_NUM_EMUX_INTERFACES     (2U)  /**< Defines the maximum number of external multiple
 109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_RESULT_LEFT_ALIGN_10BIT (2U)  /**< Defines the 10 bit converted result register le
 111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                     is used in the XMC_VADC_GLOBAL_SetCompareValue(
 112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #define XMC_VADC_SYNCTR_START_LOCATION (3U)  /**< Defines the location in SYNCTR needed for calcula
 114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * ENUMS
 116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * DATA STRUCTURES
 120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * GLOBAL DATA
 124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_MAXIMUM_NUM_GROUPS == 4U) 
 129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
 130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #else
 134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** static VADC_G_TypeDef *const g_xmc_vadc_group_array[XMC_VADC_MAXIMUM_NUM_GROUPS] = {(VADC_G_TypeDef
 135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                                                     (VADC_G_TypeDef
 136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif 
 139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * LOCAL ROUTINES
 142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /**************************************************************************************************
 145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  * API IMPLEMENTATION
 146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****  **************************************************************************************************
 147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /*API to enable the VADC Module*/
 149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_EnableModule(void)
 150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 482              	 .loc 2 150 0
 483              	 .cfi_startproc
 484              	 
 485              	 
 486 0000 80B5     	 push {r7,lr}
 487              	.LCFI48:
 488              	 .cfi_def_cfa_offset 8
 489              	 .cfi_offset 7,-8
 490              	 .cfi_offset 14,-4
 491 0002 00AF     	 add r7,sp,#0
 492              	.LCFI49:
 493              	 .cfi_def_cfa_register 7
 151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /*
 152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    * Enable Out of Range Comparator for ADC channels pins P2.2to P2.9. This hack is applicable only
 153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    * and in particular the G11 step.
 154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    *
 155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    * Please refer to the XMC1000 Errata sheet V1.4 released 2014-06 Errata ID : ADC_AI.003 Additona
 156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    * function
 157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    */
 158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if defined (COMPARATOR)
 160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   COMPARATOR->ORCCTRL = (uint32_t)0xFF;
 161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
 494              	 .loc 2 164 0
 495 0004 0120     	 movs r0,#1
 496 0006 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_DeassertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC )
 497              	 .loc 2 169 0
 498 000a 0120     	 movs r0,#1
 499 000c FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 500              	 .loc 2 171 0
 501 0010 80BD     	 pop {r7,pc}
 502              	 .cfi_endproc
 503              	.LFE248:
 505 0012 00BF     	 .section .text.XMC_VADC_GLOBAL_DisableModule,"ax",%progbits
 506              	 .align 2
 507              	 .global XMC_VADC_GLOBAL_DisableModule
 508              	 .thumb
 509              	 .thumb_func
 511              	XMC_VADC_GLOBAL_DisableModule:
 512              	.LFB249:
 172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /*API to Disable the VADC Module*/
 174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_DisableModule(void)
 175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 513              	 .loc 2 175 0
 514              	 .cfi_startproc
 515              	 
 516              	 
 517 0000 80B5     	 push {r7,lr}
 518              	.LCFI50:
 519              	 .cfi_def_cfa_offset 8
 520              	 .cfi_offset 7,-8
 521              	 .cfi_offset 14,-4
 522 0002 00AF     	 add r7,sp,#0
 523              	.LCFI51:
 524              	 .cfi_def_cfa_register 7
 176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Reset the Hardware */
 178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_SCU_RESET_AssertPeripheralReset((XMC_SCU_PERIPHERAL_RESET_t)XMC_SCU_PERIPHERAL_RESET_VADC );
 525              	 .loc 2 178 0
 526 0004 0120     	 movs r0,#1
 527 0006 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if defined(CLOCK_GATING_SUPPORTED)
 182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_VADC);
 528              	 .loc 2 182 0
 529 000a 0120     	 movs r0,#1
 530 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 531              	 .loc 2 185 0
 532 0010 80BD     	 pop {r7,pc}
 533              	 .cfi_endproc
 534              	.LFE249:
 536 0012 00BF     	 .section .text.XMC_VADC_GLOBAL_Init,"ax",%progbits
 537              	 .align 2
 538              	 .global XMC_VADC_GLOBAL_Init
 539              	 .thumb
 540              	 .thumb_func
 542              	XMC_VADC_GLOBAL_Init:
 543              	.LFB250:
 186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to initialize global resources */
 189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_Init(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CONFIG_t *conf
 190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 544              	 .loc 2 190 0
 545              	 .cfi_startproc
 546              	 
 547              	 
 548 0000 80B5     	 push {r7,lr}
 549              	.LCFI52:
 550              	 .cfi_def_cfa_offset 8
 551              	 .cfi_offset 7,-8
 552              	 .cfi_offset 14,-4
 553 0002 82B0     	 sub sp,sp,#8
 554              	.LCFI53:
 555              	 .cfi_def_cfa_offset 16
 556 0004 00AF     	 add r7,sp,#0
 557              	.LCFI54:
 558              	 .cfi_def_cfa_register 7
 559 0006 7860     	 str r0,[r7,#4]
 560 0008 3960     	 str r1,[r7]
 191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
 193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_Init:Wrong Module Pointer", (global_ptr == VADC))
 195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable the VADC module*/
 197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GLOBAL_EnableModule();
 561              	 .loc 2 197 0
 562 000a FFF7FEFF 	 bl XMC_VADC_GLOBAL_EnableModule
 198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->CLC = (uint32_t)(config->clc);
 563              	 .loc 2 199 0
 564 000e 3B68     	 ldr r3,[r7]
 565 0010 5A69     	 ldr r2,[r3,#20]
 566 0012 7B68     	 ldr r3,[r7,#4]
 567 0014 1968     	 ldr r1,[r3]
 568 0016 0021     	 movs r1,#0
 569 0018 0A43     	 orrs r2,r2,r1
 570 001a 1A60     	 str r2,[r3]
 200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Clock configuration */
 202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG  = (uint32_t)(config->clock_config.globcfg | (uint32_t)(VADC_GLOBCFG_DIVWC_Ms
 571              	 .loc 2 204 0
 572 001c 3B68     	 ldr r3,[r7]
 573 001e 5B68     	 ldr r3,[r3,#4]
 574 0020 43F40042 	 orr r2,r3,#32768
 575 0024 7B68     	 ldr r3,[r7,#4]
 576 0026 D3F88010 	 ldr r1,[r3,#128]
 577 002a 0021     	 movs r1,#0
 578 002c 0A43     	 orrs r2,r2,r1
 579 002e C3F88020 	 str r2,[r3,#128]
 205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* ICLASS-0 configuration */
 208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[0] = (uint32_t)(config->class0.globiclass);
 580              	 .loc 2 208 0
 581 0032 3B68     	 ldr r3,[r7]
 582 0034 9A68     	 ldr r2,[r3,#8]
 583 0036 7B68     	 ldr r3,[r7,#4]
 584 0038 D3F8A010 	 ldr r1,[r3,#160]
 585 003c 0021     	 movs r1,#0
 586 003e 0A43     	 orrs r2,r2,r1
 587 0040 C3F8A020 	 str r2,[r3,#160]
 209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* ICLASS-1 configuration */
 211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBICLASS[1] = (uint32_t)(config->class1.globiclass);
 588              	 .loc 2 211 0
 589 0044 3B68     	 ldr r3,[r7]
 590 0046 DA68     	 ldr r2,[r3,#12]
 591 0048 7B68     	 ldr r3,[r7,#4]
 592 004a D3F8A410 	 ldr r1,[r3,#164]
 593 004e 0021     	 movs r1,#0
 594 0050 0A43     	 orrs r2,r2,r1
 595 0052 C3F8A420 	 str r2,[r3,#164]
 212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /*Result generation related configuration */
 215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRCR = (uint32_t)(config->globrcr);
 596              	 .loc 2 215 0
 597 0056 3B68     	 ldr r3,[r7]
 598 0058 1A69     	 ldr r2,[r3,#16]
 599 005a 7B68     	 ldr r3,[r7,#4]
 600 005c D3F88012 	 ldr r1,[r3,#640]
 601 0060 0021     	 movs r1,#0
 602 0062 0A43     	 orrs r2,r2,r1
 603 0064 C3F88022 	 str r2,[r3,#640]
 216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Boundaries */
 220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = (uint32_t)(config->globbound);
 604              	 .loc 2 220 0
 605 0068 3B68     	 ldr r3,[r7]
 606 006a 1A68     	 ldr r2,[r3]
 607 006c 7B68     	 ldr r3,[r7,#4]
 608 006e D3F8B810 	 ldr r1,[r3,#184]
 609 0072 0021     	 movs r1,#0
 610 0074 0A43     	 orrs r2,r2,r1
 611 0076 C3F8B820 	 str r2,[r3,#184]
 221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Configure the SHS register that are needed for XMC11xx devices*/
 225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 0U)
 226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enabling the Analog part of the converter*/
 228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   reg = SHS0->SHSCFG  | SHS_SHSCFG_SCWC_Msk;
 229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   reg &= ~(SHS_SHSCFG_ANOFF_Msk);
 230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   SHS0->SHSCFG = reg;
 231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* From the Errata sheet of XMC1100 V1.7*/
 233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONV_ENABLE_FOR_XMC11 = 1U;
 234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 612              	 .loc 2 236 0
 613 007a 0837     	 adds r7,r7,#8
 614              	.LCFI55:
 615              	 .cfi_def_cfa_offset 8
 616 007c BD46     	 mov sp,r7
 617              	.LCFI56:
 618              	 .cfi_def_cfa_register 13
 619              	 
 620 007e 80BD     	 pop {r7,pc}
 621              	 .cfi_endproc
 622              	.LFE250:
 624              	 .section .text.XMC_VADC_GLOBAL_InputClassInit,"ax",%progbits
 625              	 .align 2
 626              	 .global XMC_VADC_GLOBAL_InputClassInit
 627              	 .thumb
 628              	 .thumb_func
 630              	XMC_VADC_GLOBAL_InputClassInit:
 631              	.LFB251:
 237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to Set the Global IClass registers*/
 239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_InputClassInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_GLOBAL_CLAS
 240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
 241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 632              	 .loc 2 241 0
 633              	 .cfi_startproc
 634              	 
 635              	 
 636              	 
 637 0000 80B4     	 push {r7}
 638              	.LCFI57:
 639              	 .cfi_def_cfa_offset 4
 640              	 .cfi_offset 7,-4
 641 0002 85B0     	 sub sp,sp,#20
 642              	.LCFI58:
 643              	 .cfi_def_cfa_offset 24
 644 0004 00AF     	 add r7,sp,#0
 645              	.LCFI59:
 646              	 .cfi_def_cfa_register 7
 647 0006 F860     	 str r0,[r7,#12]
 648 0008 B960     	 str r1,[r7,#8]
 649 000a 3B60     	 str r3,[r7]
 650 000c 1346     	 mov r3,r2
 651 000e FB71     	 strb r3,[r7,#7]
 242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Module Pointer", (global_ptr == VADC))
 244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP
 245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLA
 246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (conv_type == XMC_VADC_GROUP_CONV_STD )
 652              	 .loc 2 248 0
 653 0010 FB79     	 ldrb r3,[r7,#7]
 654 0012 002B     	 cmp r3,#0
 655 0014 0DD1     	 bne .L14
 249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass &
 656              	 .loc 2 251 0
 657 0016 BA68     	 ldr r2,[r7,#8]
 658 0018 40F21F73 	 movw r3,#1823
 659 001c 1340     	 ands r3,r3,r2
 660 001e FA68     	 ldr r2,[r7,#12]
 661 0020 3968     	 ldr r1,[r7]
 662 0022 2831     	 adds r1,r1,#40
 663 0024 52F82100 	 ldr r0,[r2,r1,lsl#2]
 664 0028 0020     	 movs r0,#0
 665 002a 0343     	 orrs r3,r3,r0
 666 002c 42F82130 	 str r3,[r2,r1,lsl#2]
 667 0030 0BE0     	 b .L13
 668              	.L14:
 252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                       (uint32_t)(VADC_GLOBICLASS_CMS_Msk | VADC_GLOBICLASS_STCS_Msk
 253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_EMUX_AVAILABLE == 1U)
 254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     global_ptr->GLOBICLASS[set_num] = config.globiclass & (uint32_t)(VADC_GLOBICLASS_CME_Msk | VADC
 669              	 .loc 2 257 0
 670 0032 BA68     	 ldr r2,[r7,#8]
 671 0034 074B     	 ldr r3,.L16
 672 0036 1340     	 ands r3,r3,r2
 673 0038 FA68     	 ldr r2,[r7,#12]
 674 003a 3968     	 ldr r1,[r7]
 675 003c 2831     	 adds r1,r1,#40
 676 003e 52F82100 	 ldr r0,[r2,r1,lsl#2]
 677 0042 0020     	 movs r0,#0
 678 0044 0343     	 orrs r3,r3,r0
 679 0046 42F82130 	 str r3,[r2,r1,lsl#2]
 680              	.L13:
 258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 681              	 .loc 2 260 0
 682 004a 1437     	 adds r7,r7,#20
 683              	.LCFI60:
 684              	 .cfi_def_cfa_offset 4
 685 004c BD46     	 mov sp,r7
 686              	.LCFI61:
 687              	 .cfi_def_cfa_register 13
 688              	 
 689 004e 5DF8047B 	 ldr r7,[sp],#4
 690              	.LCFI62:
 691              	 .cfi_restore 7
 692              	 .cfi_def_cfa_offset 0
 693 0052 7047     	 bx lr
 694              	.L17:
 695              	 .align 2
 696              	.L16:
 697 0054 00001F07 	 .word 119472128
 698              	 .cfi_endproc
 699              	.LFE251:
 701              	 .section .text.XMC_VADC_GLOBAL_StartupCalibration,"ax",%progbits
 702              	 .align 2
 703              	 .global XMC_VADC_GLOBAL_StartupCalibration
 704              	 .thumb
 705              	 .thumb_func
 707              	XMC_VADC_GLOBAL_StartupCalibration:
 708              	.LFB252:
 261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to enable startup calibration feature */
 263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_StartupCalibration(XMC_VADC_GLOBAL_t *const global_ptr)
 264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 709              	 .loc 2 264 0
 710              	 .cfi_startproc
 711              	 
 712              	 
 713              	 
 714 0000 80B4     	 push {r7}
 715              	.LCFI63:
 716              	 .cfi_def_cfa_offset 4
 717              	 .cfi_offset 7,-4
 718 0002 85B0     	 sub sp,sp,#20
 719              	.LCFI64:
 720              	 .cfi_def_cfa_offset 24
 721 0004 00AF     	 add r7,sp,#0
 722              	.LCFI65:
 723              	 .cfi_def_cfa_register 7
 724 0006 7860     	 str r0,[r7,#4]
 265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint8_t i;
 267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   VADC_G_TypeDef *group_ptr;
 268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
 270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_StartupCalibration:Wrong Module Pointer", (global_ptr == VADC))
 271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBCFG |= (uint32_t)VADC_GLOBCFG_SUCAL_Msk;
 725              	 .loc 2 272 0
 726 0008 7B68     	 ldr r3,[r7,#4]
 727 000a D3F88030 	 ldr r3,[r3,#128]
 728 000e 43F00042 	 orr r2,r3,#-2147483648
 729 0012 7B68     	 ldr r3,[r7,#4]
 730 0014 D3F88010 	 ldr r1,[r3,#128]
 731 0018 0021     	 movs r1,#0
 732 001a 0A43     	 orrs r2,r2,r1
 733 001c C3F88020 	 str r2,[r3,#128]
 273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)
 275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Loop until all active groups finish calibration */
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   for(i=0U; i<XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 734              	 .loc 2 276 0
 735 0020 0023     	 movs r3,#0
 736 0022 FB73     	 strb r3,[r7,#15]
 737 0024 17E0     	 b .L19
 738              	.L23:
 277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     group_ptr = g_xmc_vadc_group_array[i];
 739              	 .loc 2 278 0
 740 0026 FB7B     	 ldrb r3,[r7,#15]
 741 0028 0F4A     	 ldr r2,.L24
 742 002a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 743 002e BB60     	 str r3,[r7,#8]
 279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     if ( (group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_ANONS_Msk)
 744              	 .loc 2 279 0
 745 0030 BB68     	 ldr r3,[r7,#8]
 746 0032 D3F88030 	 ldr r3,[r3,#128]
 747 0036 03F44033 	 and r3,r3,#196608
 748 003a 002B     	 cmp r3,#0
 749 003c 08D0     	 beq .L20
 280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
 281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       /* This group is active. Loop until it finishes calibration */
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       while((group_ptr->ARBCFG) & (uint32_t)VADC_G_ARBCFG_CAL_Msk)
 750              	 .loc 2 282 0
 751 003e 00E0     	 b .L21
 752              	.L22:
 283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       {
 284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****         __NOP();
 753              	 .loc 2 284 0
 754              	
 755 0040 00BF     	 nop
 756              	
 757              	 .thumb
 758              	.L21:
 282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       {
 759              	 .loc 2 282 0
 760 0042 BB68     	 ldr r3,[r7,#8]
 761 0044 D3F88030 	 ldr r3,[r3,#128]
 762 0048 03F08053 	 and r3,r3,#268435456
 763 004c 002B     	 cmp r3,#0
 764 004e F7D1     	 bne .L22
 765              	.L20:
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 766              	 .loc 2 276 0 discriminator 2
 767 0050 FB7B     	 ldrb r3,[r7,#15]
 768 0052 0133     	 adds r3,r3,#1
 769 0054 FB73     	 strb r3,[r7,#15]
 770              	.L19:
 276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 771              	 .loc 2 276 0 is_stmt 0 discriminator 1
 772 0056 FB7B     	 ldrb r3,[r7,#15]
 773 0058 032B     	 cmp r3,#3
 774 005a E4D9     	 bls .L23
 285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       }
 286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
 287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #else
 289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Loop until calibration is started */
 291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) !=
 292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 		  XMC_VADC_SHS_START_UP_CAL_ACTIVE  )
 293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    {
 294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****      __NOP();
 295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    }
 296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Loop until it finishes calibration */
 297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   while ((((SHS0->SHSCFG) & (uint32_t)SHS_SHSCFG_STATE_Msk) >> (uint32_t)SHS_SHSCFG_STATE_Pos) ==
 298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****          XMC_VADC_SHS_START_UP_CAL_ACTIVE )
 299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     __NOP();
 301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 775              	 .loc 2 303 0 is_stmt 1
 776 005c 1437     	 adds r7,r7,#20
 777              	.LCFI66:
 778              	 .cfi_def_cfa_offset 4
 779 005e BD46     	 mov sp,r7
 780              	.LCFI67:
 781              	 .cfi_def_cfa_register 13
 782              	 
 783 0060 5DF8047B 	 ldr r7,[sp],#4
 784              	.LCFI68:
 785              	 .cfi_restore 7
 786              	 .cfi_def_cfa_offset 0
 787 0064 7047     	 bx lr
 788              	.L25:
 789 0066 00BF     	 .align 2
 790              	.L24:
 791 0068 00000000 	 .word g_xmc_vadc_group_array
 792              	 .cfi_endproc
 793              	.LFE252:
 795              	 .section .text.XMC_VADC_GLOBAL_SetBoundaries,"ax",%progbits
 796              	 .align 2
 797              	 .global XMC_VADC_GLOBAL_SetBoundaries
 798              	 .thumb
 799              	 .thumb_func
 801              	XMC_VADC_GLOBAL_SetBoundaries:
 802              	.LFB253:
 304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set boudaries for result of conversion. Should the boundaries be violated, interrupts are
 306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_AVAILABLE == 1U)
 307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetBoundaries(XMC_VADC_GLOBAL_t *const global_ptr,
 308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary0,
 309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                    const uint32_t boundary1)
 310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 803              	 .loc 2 310 0
 804              	 .cfi_startproc
 805              	 
 806              	 
 807              	 
 808 0000 80B4     	 push {r7}
 809              	.LCFI69:
 810              	 .cfi_def_cfa_offset 4
 811              	 .cfi_offset 7,-4
 812 0002 87B0     	 sub sp,sp,#28
 813              	.LCFI70:
 814              	 .cfi_def_cfa_offset 32
 815 0004 00AF     	 add r7,sp,#0
 816              	.LCFI71:
 817              	 .cfi_def_cfa_register 7
 818 0006 F860     	 str r0,[r7,#12]
 819 0008 B960     	 str r1,[r7,#8]
 820 000a 7A60     	 str r2,[r7,#4]
 311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t globbound;
 312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Module Pointer", (global_ptr == VADC))
 314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   globbound = 0U;
 821              	 .loc 2 315 0
 822 000c 0023     	 movs r3,#0
 823 000e 7B61     	 str r3,[r7,#20]
 316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary0 << VADC_GLOBBOUND_BOUNDARY0_Pos);
 824              	 .loc 2 316 0
 825 0010 7A69     	 ldr r2,[r7,#20]
 826 0012 BB68     	 ldr r3,[r7,#8]
 827 0014 1343     	 orrs r3,r3,r2
 828 0016 7B61     	 str r3,[r7,#20]
 317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   globbound |= (uint32_t) (boundary1 << VADC_GLOBBOUND_BOUNDARY1_Pos);
 829              	 .loc 2 317 0
 830 0018 7B68     	 ldr r3,[r7,#4]
 831 001a 1B04     	 lsls r3,r3,#16
 832 001c 7A69     	 ldr r2,[r7,#20]
 833 001e 1343     	 orrs r3,r3,r2
 834 0020 7B61     	 str r3,[r7,#20]
 318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = globbound;
 835              	 .loc 2 319 0
 836 0022 FB68     	 ldr r3,[r7,#12]
 837 0024 D3F8B820 	 ldr r2,[r3,#184]
 838 0028 0021     	 movs r1,#0
 839 002a 7A69     	 ldr r2,[r7,#20]
 840 002c 0A43     	 orrs r2,r2,r1
 841 002e C3F8B820 	 str r2,[r3,#184]
 320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 842              	 .loc 2 320 0
 843 0032 1C37     	 adds r7,r7,#28
 844              	.LCFI72:
 845              	 .cfi_def_cfa_offset 4
 846 0034 BD46     	 mov sp,r7
 847              	.LCFI73:
 848              	 .cfi_def_cfa_register 13
 849              	 
 850 0036 5DF8047B 	 ldr r7,[sp],#4
 851              	.LCFI74:
 852              	 .cfi_restore 7
 853              	 .cfi_def_cfa_offset 0
 854 003a 7047     	 bx lr
 855              	 .cfi_endproc
 856              	.LFE253:
 858              	 .section .text.XMC_VADC_GLOBAL_SetIndividualBoundary,"ax",%progbits
 859              	 .align 2
 860              	 .global XMC_VADC_GLOBAL_SetIndividualBoundary
 861              	 .thumb
 862              	 .thumb_func
 864              	XMC_VADC_GLOBAL_SetIndividualBoundary:
 865              	.LFB254:
 321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set an individual boundary for conversion results */
 323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetIndividualBoundary(XMC_VADC_GLOBAL_t *const global_ptr,
 324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                            const XMC_VADC_CHANNEL_BOUNDARY_t selection,
 325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                            const uint16_t boundary_value)
 326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 866              	 .loc 2 326 0
 867              	 .cfi_startproc
 868              	 
 869              	 
 870              	 
 871 0000 80B4     	 push {r7}
 872              	.LCFI75:
 873              	 .cfi_def_cfa_offset 4
 874              	 .cfi_offset 7,-4
 875 0002 85B0     	 sub sp,sp,#20
 876              	.LCFI76:
 877              	 .cfi_def_cfa_offset 24
 878 0004 00AF     	 add r7,sp,#0
 879              	.LCFI77:
 880              	 .cfi_def_cfa_register 7
 881 0006 7860     	 str r0,[r7,#4]
 882 0008 0B46     	 mov r3,r1
 883 000a FB70     	 strb r3,[r7,#3]
 884 000c 1346     	 mov r3,r2
 885 000e 3B80     	 strh r3,[r7]
 327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t globbound;
 329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Module Pointer", (global_ptr == VADC))
 331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetBoundaries:Wrong Boundary Selection",
 332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0 == selection) ||
 333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****               (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1 == selection)))
 334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   globbound = global_ptr->GLOBBOUND;
 886              	 .loc 2 336 0
 887 0010 7B68     	 ldr r3,[r7,#4]
 888 0012 D3F8B830 	 ldr r3,[r3,#184]
 889 0016 FB60     	 str r3,[r7,#12]
 337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND0 == selection)
 890              	 .loc 2 338 0
 891 0018 FB78     	 ldrb r3,[r7,#3]
 892 001a 022B     	 cmp r3,#2
 893 001c 0AD1     	 bne .L28
 339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     globbound &= ~((uint32_t) VADC_GLOBBOUND_BOUNDARY0_Msk);
 894              	 .loc 2 340 0
 895 001e FB68     	 ldr r3,[r7,#12]
 896 0020 23F47F63 	 bic r3,r3,#4080
 897 0024 23F00F03 	 bic r3,r3,#15
 898 0028 FB60     	 str r3,[r7,#12]
 341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY0_Pos);
 899              	 .loc 2 341 0
 900 002a 3B88     	 ldrh r3,[r7]
 901 002c FA68     	 ldr r2,[r7,#12]
 902 002e 1343     	 orrs r3,r3,r2
 903 0030 FB60     	 str r3,[r7,#12]
 904 0032 0DE0     	 b .L29
 905              	.L28:
 342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if (XMC_VADC_CHANNEL_BOUNDARY_GLOBAL_BOUND1 == selection)
 906              	 .loc 2 343 0
 907 0034 FB78     	 ldrb r3,[r7,#3]
 908 0036 032B     	 cmp r3,#3
 909 0038 0AD1     	 bne .L29
 344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     globbound &= ~((uint32_t) VADC_GLOBBOUND_BOUNDARY1_Msk);
 910              	 .loc 2 345 0
 911 003a FB68     	 ldr r3,[r7,#12]
 912 003c 23F07F63 	 bic r3,r3,#267386880
 913 0040 23F47023 	 bic r3,r3,#983040
 914 0044 FB60     	 str r3,[r7,#12]
 346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     globbound |= (uint32_t) ((uint32_t) boundary_value << VADC_GLOBBOUND_BOUNDARY1_Pos);
 915              	 .loc 2 346 0
 916 0046 3B88     	 ldrh r3,[r7]
 917 0048 1B04     	 lsls r3,r3,#16
 918 004a FA68     	 ldr r2,[r7,#12]
 919 004c 1343     	 orrs r3,r3,r2
 920 004e FB60     	 str r3,[r7,#12]
 921              	.L29:
 347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* For MISRA*/
 351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBBOUND = globbound;
 922              	 .loc 2 352 0
 923 0050 7B68     	 ldr r3,[r7,#4]
 924 0052 D3F8B820 	 ldr r2,[r3,#184]
 925 0056 0021     	 movs r1,#0
 926 0058 FA68     	 ldr r2,[r7,#12]
 927 005a 0A43     	 orrs r2,r2,r1
 928 005c C3F8B820 	 str r2,[r3,#184]
 353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 929              	 .loc 2 354 0
 930 0060 1437     	 adds r7,r7,#20
 931              	.LCFI78:
 932              	 .cfi_def_cfa_offset 4
 933 0062 BD46     	 mov sp,r7
 934              	.LCFI79:
 935              	 .cfi_def_cfa_register 13
 936              	 
 937 0064 5DF8047B 	 ldr r7,[sp],#4
 938              	.LCFI80:
 939              	 .cfi_restore 7
 940              	 .cfi_def_cfa_offset 0
 941 0068 7047     	 bx lr
 942              	 .cfi_endproc
 943              	.LFE254:
 945 006a 00BF     	 .section .text.XMC_VADC_GLOBAL_SetCompareValue,"ax",%progbits
 946              	 .align 2
 947              	 .global XMC_VADC_GLOBAL_SetCompareValue
 948              	 .thumb
 949              	 .thumb_func
 951              	XMC_VADC_GLOBAL_SetCompareValue:
 952              	.LFB255:
 355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set compare value for the result register. Result of conversion is compared against this 
 359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetCompareValue(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_RESULT_SIZ
 360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 953              	 .loc 2 360 0
 954              	 .cfi_startproc
 955              	 
 956              	 
 957              	 
 958 0000 80B4     	 push {r7}
 959              	.LCFI81:
 960              	 .cfi_def_cfa_offset 4
 961              	 .cfi_offset 7,-4
 962 0002 83B0     	 sub sp,sp,#12
 963              	.LCFI82:
 964              	 .cfi_def_cfa_offset 16
 965 0004 00AF     	 add r7,sp,#0
 966              	.LCFI83:
 967              	 .cfi_def_cfa_register 7
 968 0006 7860     	 str r0,[r7,#4]
 969 0008 0B46     	 mov r3,r1
 970 000a 7B80     	 strh r3,[r7,#2]
 361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetCompareValue:Wrong Module Pointer", (global_ptr == VADC))
 362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES &= ~((uint32_t)VADC_GLOBRES_RESULT_Msk);
 971              	 .loc 2 363 0
 972 000c 7B68     	 ldr r3,[r7,#4]
 973 000e D3F80033 	 ldr r3,[r3,#768]
 974 0012 1B0C     	 lsrs r3,r3,#16
 975 0014 1B04     	 lsls r3,r3,#16
 976 0016 7A68     	 ldr r2,[r7,#4]
 977 0018 D2F80013 	 ldr r1,[r2,#768]
 978 001c 0021     	 movs r1,#0
 979 001e 0B43     	 orrs r3,r3,r1
 980 0020 C2F80033 	 str r3,[r2,#768]
 364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBRES |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 981              	 .loc 2 364 0
 982 0024 7B68     	 ldr r3,[r7,#4]
 983 0026 D3F80023 	 ldr r2,[r3,#768]
 984 002a 7B88     	 ldrh r3,[r7,#2]
 985 002c 9B00     	 lsls r3,r3,#2
 986 002e 1A43     	 orrs r2,r2,r3
 987 0030 7B68     	 ldr r3,[r7,#4]
 988 0032 D3F80013 	 ldr r1,[r3,#768]
 989 0036 0021     	 movs r1,#0
 990 0038 0A43     	 orrs r2,r2,r1
 991 003a C3F80023 	 str r2,[r3,#768]
 365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 992              	 .loc 2 365 0
 993 003e 0C37     	 adds r7,r7,#12
 994              	.LCFI84:
 995              	 .cfi_def_cfa_offset 4
 996 0040 BD46     	 mov sp,r7
 997              	.LCFI85:
 998              	 .cfi_def_cfa_register 13
 999              	 
 1000 0042 5DF8047B 	 ldr r7,[sp],#4
 1001              	.LCFI86:
 1002              	 .cfi_restore 7
 1003              	 .cfi_def_cfa_offset 0
 1004 0046 7047     	 bx lr
 1005              	 .cfi_endproc
 1006              	.LFE255:
 1008              	 .section .text.XMC_VADC_GLOBAL_GetCompareResult,"ax",%progbits
 1009              	 .align 2
 1010              	 .global XMC_VADC_GLOBAL_GetCompareResult
 1011              	 .thumb
 1012              	 .thumb_func
 1014              	XMC_VADC_GLOBAL_GetCompareResult:
 1015              	.LFB256:
 366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of comparison */
 368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GLOBAL_GetCompareResult(XMC_VADC_GLOBAL_t *const global_ptr)
 369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1016              	 .loc 2 369 0
 1017              	 .cfi_startproc
 1018              	 
 1019              	 
 1020              	 
 1021 0000 80B4     	 push {r7}
 1022              	.LCFI87:
 1023              	 .cfi_def_cfa_offset 4
 1024              	 .cfi_offset 7,-4
 1025 0002 85B0     	 sub sp,sp,#20
 1026              	.LCFI88:
 1027              	 .cfi_def_cfa_offset 24
 1028 0004 00AF     	 add r7,sp,#0
 1029              	.LCFI89:
 1030              	 .cfi_def_cfa_register 7
 1031 0006 7860     	 str r0,[r7,#4]
 370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
 371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t res;
 372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_GetCompareResult:Wrong Module Pointer", (global_ptr == VADC))
 374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   res = global_ptr->GLOBRES;
 1032              	 .loc 2 375 0
 1033 0008 7B68     	 ldr r3,[r7,#4]
 1034 000a D3F80033 	 ldr r3,[r3,#768]
 1035 000e BB60     	 str r3,[r7,#8]
 376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_GLOBRES_VF_Msk)
 1036              	 .loc 2 377 0
 1037 0010 BB68     	 ldr r3,[r7,#8]
 1038 0012 002B     	 cmp r3,#0
 1039 0014 06DA     	 bge .L32
 378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_GLOBRES_FCR_Pos) & (uint32_
 1040              	 .loc 2 379 0
 1041 0016 BB68     	 ldr r3,[r7,#8]
 1042 0018 9B0F     	 lsrs r3,r3,#30
 1043 001a DBB2     	 uxtb r3,r3
 1044 001c 03F00103 	 and r3,r3,#1
 1045 0020 FB73     	 strb r3,[r7,#15]
 1046 0022 01E0     	 b .L33
 1047              	.L32:
 380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 1048              	 .loc 2 383 0
 1049 0024 0223     	 movs r3,#2
 1050 0026 FB73     	 strb r3,[r7,#15]
 1051              	.L33:
 384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return result;
 1052              	 .loc 2 386 0
 1053 0028 FB7B     	 ldrb r3,[r7,#15]
 387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1054              	 .loc 2 387 0
 1055 002a 1846     	 mov r0,r3
 1056 002c 1437     	 adds r7,r7,#20
 1057              	.LCFI90:
 1058              	 .cfi_def_cfa_offset 4
 1059 002e BD46     	 mov sp,r7
 1060              	.LCFI91:
 1061              	 .cfi_def_cfa_register 13
 1062              	 
 1063 0030 5DF8047B 	 ldr r7,[sp],#4
 1064              	.LCFI92:
 1065              	 .cfi_restore 7
 1066              	 .cfi_def_cfa_offset 0
 1067 0034 7047     	 bx lr
 1068              	 .cfi_endproc
 1069              	.LFE256:
 1071 0036 00BF     	 .section .text.XMC_VADC_GLOBAL_BindGroupToEMux,"ax",%progbits
 1072              	 .align 2
 1073              	 .global XMC_VADC_GLOBAL_BindGroupToEMux
 1074              	 .thumb
 1075              	 .thumb_func
 1077              	XMC_VADC_GLOBAL_BindGroupToEMux:
 1078              	.LFB257:
 388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Bind one of the four groups to one of the two EMUX interfaces */
 390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_EMUX_AVAILABLE == 1U)
 391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BindGroupToEMux(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t emuxif, co
 392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1079              	 .loc 2 392 0
 1080              	 .cfi_startproc
 1081              	 
 1082              	 
 1083              	 
 1084 0000 80B4     	 push {r7}
 1085              	.LCFI93:
 1086              	 .cfi_def_cfa_offset 4
 1087              	 .cfi_offset 7,-4
 1088 0002 87B0     	 sub sp,sp,#28
 1089              	.LCFI94:
 1090              	 .cfi_def_cfa_offset 32
 1091 0004 00AF     	 add r7,sp,#0
 1092              	.LCFI95:
 1093              	 .cfi_def_cfa_register 7
 1094 0006 F860     	 str r0,[r7,#12]
 1095 0008 B960     	 str r1,[r7,#8]
 1096 000a 7A60     	 str r2,[r7,#4]
 393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
 394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t pos;
 395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong Module Pointer", (global_ptr == VADC))
 397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong EMUX Group", (emuxif < XMC_VADC_NUM_EMUX_INTERF
 398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BindGroupToEMux:Wrong VADC Group", (group < XMC_VADC_MAXIMUM_NUM_GROU
 399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (0U == emuxif)
 1097              	 .loc 2 400 0
 1098 000c BB68     	 ldr r3,[r7,#8]
 1099 000e 002B     	 cmp r3,#0
 1100 0010 04D1     	 bne .L36
 401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Pos;
 1101              	 .loc 2 402 0
 1102 0012 0023     	 movs r3,#0
 1103 0014 3B61     	 str r3,[r7,#16]
 403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP0_Msk;
 1104              	 .loc 2 403 0
 1105 0016 0F23     	 movs r3,#15
 1106 0018 7B61     	 str r3,[r7,#20]
 1107 001a 03E0     	 b .L37
 1108              	.L36:
 404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Pos;
 1109              	 .loc 2 407 0
 1110 001c 0423     	 movs r3,#4
 1111 001e 3B61     	 str r3,[r7,#16]
 408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)VADC_EMUXSEL_EMUXGRP1_Msk;
 1112              	 .loc 2 408 0
 1113 0020 F023     	 movs r3,#240
 1114 0022 7B61     	 str r3,[r7,#20]
 1115              	.L37:
 409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL &= ~(mask);
 1116              	 .loc 2 411 0
 1117 0024 FB68     	 ldr r3,[r7,#12]
 1118 0026 D3F8F023 	 ldr r2,[r3,#1008]
 1119 002a 7B69     	 ldr r3,[r7,#20]
 1120 002c DB43     	 mvns r3,r3
 1121 002e 1A40     	 ands r2,r2,r3
 1122 0030 FB68     	 ldr r3,[r7,#12]
 1123 0032 D3F8F013 	 ldr r1,[r3,#1008]
 1124 0036 0021     	 movs r1,#0
 1125 0038 0A43     	 orrs r2,r2,r1
 1126 003a C3F8F023 	 str r2,[r3,#1008]
 412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->EMUXSEL |= (uint32_t) (group << pos);
 1127              	 .loc 2 412 0
 1128 003e FB68     	 ldr r3,[r7,#12]
 1129 0040 D3F8F023 	 ldr r2,[r3,#1008]
 1130 0044 3B69     	 ldr r3,[r7,#16]
 1131 0046 7968     	 ldr r1,[r7,#4]
 1132 0048 01FA03F3 	 lsl r3,r1,r3
 1133 004c 1A43     	 orrs r2,r2,r3
 1134 004e FB68     	 ldr r3,[r7,#12]
 1135 0050 D3F8F013 	 ldr r1,[r3,#1008]
 1136 0054 0021     	 movs r1,#0
 1137 0056 0A43     	 orrs r2,r2,r1
 1138 0058 C3F8F023 	 str r2,[r3,#1008]
 413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1139              	 .loc 2 414 0
 1140 005c 1C37     	 adds r7,r7,#28
 1141              	.LCFI96:
 1142              	 .cfi_def_cfa_offset 4
 1143 005e BD46     	 mov sp,r7
 1144              	.LCFI97:
 1145              	 .cfi_def_cfa_register 13
 1146              	 
 1147 0060 5DF8047B 	 ldr r7,[sp],#4
 1148              	.LCFI98:
 1149              	 .cfi_restore 7
 1150              	 .cfi_def_cfa_offset 0
 1151 0064 7047     	 bx lr
 1152              	 .cfi_endproc
 1153              	.LFE257:
 1155 0066 00BF     	 .section .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode,"ax",%progbits
 1156              	 .align 2
 1157              	 .global XMC_VADC_GLOBAL_SetResultEventInterruptNode
 1158              	 .thumb
 1159              	 .thumb_func
 1161              	XMC_VADC_GLOBAL_SetResultEventInterruptNode:
 1162              	.LFB258:
 415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif 
 416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to bind result event with a service request line */
 418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SetResultEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC_VADC_SR_t
 419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1163              	 .loc 2 419 0
 1164              	 .cfi_startproc
 1165              	 
 1166              	 
 1167              	 
 1168 0000 80B4     	 push {r7}
 1169              	.LCFI99:
 1170              	 .cfi_def_cfa_offset 4
 1171              	 .cfi_offset 7,-4
 1172 0002 85B0     	 sub sp,sp,#20
 1173              	.LCFI100:
 1174              	 .cfi_def_cfa_offset 24
 1175 0004 00AF     	 add r7,sp,#0
 1176              	.LCFI101:
 1177              	 .cfi_def_cfa_register 7
 1178 0006 7860     	 str r0,[r7,#4]
 1179 0008 0B46     	 mov r3,r1
 1180 000a FB70     	 strb r3,[r7,#3]
 420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
 422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong Module Pointer", (global_ptr == VAD
 423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SetResultEventInterruptNode:Wrong SR Number", (sr <= XMC_VADC_SR_SHAR
 424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 1181              	 .loc 2 425 0
 1182 000c FB78     	 ldrb r3,[r7,#3]
 1183 000e 032B     	 cmp r3,#3
 1184 0010 03D9     	 bls .L39
 426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 1185              	 .loc 2 427 0
 1186 0012 FB78     	 ldrb r3,[r7,#3]
 1187 0014 043B     	 subs r3,r3,#4
 1188 0016 FB60     	 str r3,[r7,#12]
 1189 0018 01E0     	 b .L40
 1190              	.L39:
 428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 1191              	 .loc 2 431 0
 1192 001a FB78     	 ldrb r3,[r7,#3]
 1193 001c FB60     	 str r3,[r7,#12]
 1194              	.L40:
 432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_REV0NP_Msk);
 1195              	 .loc 2 434 0
 1196 001e 7B68     	 ldr r3,[r7,#4]
 1197 0020 D3F84031 	 ldr r3,[r3,#320]
 1198 0024 23F47022 	 bic r2,r3,#983040
 1199 0028 7B68     	 ldr r3,[r7,#4]
 1200 002a D3F84011 	 ldr r1,[r3,#320]
 1201 002e 0021     	 movs r1,#0
 1202 0030 0A43     	 orrs r2,r2,r1
 1203 0032 C3F84021 	 str r2,[r3,#320]
 435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t)(node << VADC_GLOBEVNP_REV0NP_Pos);
 1204              	 .loc 2 435 0
 1205 0036 7B68     	 ldr r3,[r7,#4]
 1206 0038 D3F84021 	 ldr r2,[r3,#320]
 1207 003c FB68     	 ldr r3,[r7,#12]
 1208 003e 1B04     	 lsls r3,r3,#16
 1209 0040 1A43     	 orrs r2,r2,r3
 1210 0042 7B68     	 ldr r3,[r7,#4]
 1211 0044 D3F84011 	 ldr r1,[r3,#320]
 1212 0048 0021     	 movs r1,#0
 1213 004a 0A43     	 orrs r2,r2,r1
 1214 004c C3F84021 	 str r2,[r3,#320]
 436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1215              	 .loc 2 436 0
 1216 0050 1437     	 adds r7,r7,#20
 1217              	.LCFI102:
 1218              	 .cfi_def_cfa_offset 4
 1219 0052 BD46     	 mov sp,r7
 1220              	.LCFI103:
 1221              	 .cfi_def_cfa_register 13
 1222              	 
 1223 0054 5DF8047B 	 ldr r7,[sp],#4
 1224              	.LCFI104:
 1225              	 .cfi_restore 7
 1226              	 .cfi_def_cfa_offset 0
 1227 0058 7047     	 bx lr
 1228              	 .cfi_endproc
 1229              	.LFE258:
 1231 005a 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode,"ax",%progbits
 1232              	 .align 2
 1233              	 .global XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
 1234              	 .thumb
 1235              	 .thumb_func
 1237              	XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:
 1238              	.LFB259:
 437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to bind request source event with a service request line */
 439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode(XMC_VADC_GLOBAL_t *const global_ptr, XMC
 440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1239              	 .loc 2 440 0
 1240              	 .cfi_startproc
 1241              	 
 1242              	 
 1243              	 
 1244 0000 80B4     	 push {r7}
 1245              	.LCFI105:
 1246              	 .cfi_def_cfa_offset 4
 1247              	 .cfi_offset 7,-4
 1248 0002 85B0     	 sub sp,sp,#20
 1249              	.LCFI106:
 1250              	 .cfi_def_cfa_offset 24
 1251 0004 00AF     	 add r7,sp,#0
 1252              	.LCFI107:
 1253              	 .cfi_def_cfa_register 7
 1254 0006 7860     	 str r0,[r7,#4]
 1255 0008 0B46     	 mov r3,r1
 1256 000a FB70     	 strb r3,[r7,#3]
 441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t node;
 442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
 443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:Wrong Module Pointer", (global_
 444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (sr >= XMC_VADC_SR_SHARED_SR0)
 1257              	 .loc 2 445 0
 1258 000c FB78     	 ldrb r3,[r7,#3]
 1259 000e 032B     	 cmp r3,#3
 1260 0010 03D9     	 bls .L42
 446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr - (uint32_t)XMC_VADC_SR_SHARED_SR0;
 1261              	 .loc 2 447 0
 1262 0012 FB78     	 ldrb r3,[r7,#3]
 1263 0014 043B     	 subs r3,r3,#4
 1264 0016 FB60     	 str r3,[r7,#12]
 1265 0018 01E0     	 b .L43
 1266              	.L42:
 448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     node = (uint32_t)sr;
 1267              	 .loc 2 451 0
 1268 001a FB78     	 ldrb r3,[r7,#3]
 1269 001c FB60     	 str r3,[r7,#12]
 1270              	.L43:
 452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP &= ~((uint32_t)VADC_GLOBEVNP_SEV0NP_Msk);
 1271              	 .loc 2 454 0
 1272 001e 7B68     	 ldr r3,[r7,#4]
 1273 0020 D3F84031 	 ldr r3,[r3,#320]
 1274 0024 23F00F02 	 bic r2,r3,#15
 1275 0028 7B68     	 ldr r3,[r7,#4]
 1276 002a D3F84011 	 ldr r1,[r3,#320]
 1277 002e 0021     	 movs r1,#0
 1278 0030 0A43     	 orrs r2,r2,r1
 1279 0032 C3F84021 	 str r2,[r3,#320]
 455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->GLOBEVNP |= (uint32_t) (node << VADC_GLOBEVNP_SEV0NP_Pos);
 1280              	 .loc 2 455 0
 1281 0036 7B68     	 ldr r3,[r7,#4]
 1282 0038 D3F84021 	 ldr r2,[r3,#320]
 1283 003c FB68     	 ldr r3,[r7,#12]
 1284 003e 1A43     	 orrs r2,r2,r3
 1285 0040 7B68     	 ldr r3,[r7,#4]
 1286 0042 D3F84011 	 ldr r1,[r3,#320]
 1287 0046 0021     	 movs r1,#0
 1288 0048 0A43     	 orrs r2,r2,r1
 1289 004a C3F84021 	 str r2,[r3,#320]
 456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1290              	 .loc 2 456 0
 1291 004e 1437     	 adds r7,r7,#20
 1292              	.LCFI108:
 1293              	 .cfi_def_cfa_offset 4
 1294 0050 BD46     	 mov sp,r7
 1295              	.LCFI109:
 1296              	 .cfi_def_cfa_register 13
 1297              	 
 1298 0052 5DF8047B 	 ldr r7,[sp],#4
 1299              	.LCFI110:
 1300              	 .cfi_restore 7
 1301              	 .cfi_def_cfa_offset 0
 1302 0056 7047     	 bx lr
 1303              	 .cfi_endproc
 1304              	.LFE259:
 1306              	 .section .text.XMC_VADC_GROUP_Init,"ax",%progbits
 1307              	 .align 2
 1308              	 .global XMC_VADC_GROUP_Init
 1309              	 .thumb
 1310              	 .thumb_func
 1312              	XMC_VADC_GROUP_Init:
 1313              	.LFB260:
 457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to initialize an instance of group of VADC hardware */
 459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE == 1U)  
 460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_Init( XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CONFIG_t *config)
 461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1314              	 .loc 2 461 0
 1315              	 .cfi_startproc
 1316              	 
 1317              	 
 1318 0000 80B5     	 push {r7,lr}
 1319              	.LCFI111:
 1320              	 .cfi_def_cfa_offset 8
 1321              	 .cfi_offset 7,-8
 1322              	 .cfi_offset 14,-4
 1323 0002 82B0     	 sub sp,sp,#8
 1324              	.LCFI112:
 1325              	 .cfi_def_cfa_offset 16
 1326 0004 00AF     	 add r7,sp,#0
 1327              	.LCFI113:
 1328              	 .cfi_def_cfa_register 7
 1329 0006 7860     	 str r0,[r7,#4]
 1330 0008 3960     	 str r1,[r7]
 462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_Init:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
 463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program the input classes */
 465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_STD, 0U);
 1331              	 .loc 2 465 0
 1332 000a 3B68     	 ldr r3,[r7]
 1333 000c 5B68     	 ldr r3,[r3,#4]
 1334 000e 0022     	 movs r2,#0
 1335 0010 1A46     	 mov r2,r3
 1336 0012 7868     	 ldr r0,[r7,#4]
 1337 0014 1146     	 mov r1,r2
 1338 0016 0022     	 movs r2,#0
 1339 0018 0023     	 movs r3,#0
 1340 001a FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class0, XMC_VADC_GROUP_CONV_EMUX, 0U);
 1341              	 .loc 2 466 0
 1342 001e 3B68     	 ldr r3,[r7]
 1343 0020 5B68     	 ldr r3,[r3,#4]
 1344 0022 0022     	 movs r2,#0
 1345 0024 1A46     	 mov r2,r3
 1346 0026 7868     	 ldr r0,[r7,#4]
 1347 0028 1146     	 mov r1,r2
 1348 002a 0122     	 movs r2,#1
 1349 002c 0023     	 movs r3,#0
 1350 002e FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_STD, 1U);
 1351              	 .loc 2 467 0
 1352 0032 3B68     	 ldr r3,[r7]
 1353 0034 9B68     	 ldr r3,[r3,#8]
 1354 0036 0022     	 movs r2,#0
 1355 0038 1A46     	 mov r2,r3
 1356 003a 7868     	 ldr r0,[r7,#4]
 1357 003c 1146     	 mov r1,r2
 1358 003e 0022     	 movs r2,#0
 1359 0040 0123     	 movs r3,#1
 1360 0042 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_InputClassInit(group_ptr, config->class1, XMC_VADC_GROUP_CONV_EMUX, 1U);
 1361              	 .loc 2 468 0
 1362 0046 3B68     	 ldr r3,[r7]
 1363 0048 9B68     	 ldr r3,[r3,#8]
 1364 004a 0022     	 movs r2,#0
 1365 004c 1A46     	 mov r2,r3
 1366 004e 7868     	 ldr r0,[r7,#4]
 1367 0050 1146     	 mov r1,r2
 1368 0052 0122     	 movs r2,#1
 1369 0054 0123     	 movs r3,#1
 1370 0056 FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = config->g_arbcfg;
 1371              	 .loc 2 470 0
 1372 005a 3B68     	 ldr r3,[r7]
 1373 005c 1A69     	 ldr r2,[r3,#16]
 1374 005e 7B68     	 ldr r3,[r7,#4]
 1375 0060 D3F88010 	 ldr r1,[r3,#128]
 1376 0064 0021     	 movs r1,#0
 1377 0066 0A43     	 orrs r2,r2,r1
 1378 0068 C3F88020 	 str r2,[r3,#128]
 471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = config->g_bound;
 1379              	 .loc 2 472 0
 1380 006c 3B68     	 ldr r3,[r7]
 1381 006e DA68     	 ldr r2,[r3,#12]
 1382 0070 7B68     	 ldr r3,[r7,#4]
 1383 0072 D3F8B810 	 ldr r1,[r3,#184]
 1384 0076 0021     	 movs r1,#0
 1385 0078 0A43     	 orrs r2,r2,r1
 1386 007a C3F8B820 	 str r2,[r3,#184]
 473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* External mux configuration */
 475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ExternalMuxControlInit(group_ptr,config->emux_config);
 1387              	 .loc 2 475 0
 1388 007e 3B68     	 ldr r3,[r7]
 1389 0080 1B68     	 ldr r3,[r3]
 1390 0082 0022     	 movs r2,#0
 1391 0084 1A46     	 mov r2,r3
 1392 0086 7868     	 ldr r0,[r7,#4]
 1393 0088 1146     	 mov r1,r2
 1394 008a FFF7FEFF 	 bl XMC_VADC_GROUP_ExternalMuxControlInit
 476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1395              	 .loc 2 477 0
 1396 008e 0837     	 adds r7,r7,#8
 1397              	.LCFI114:
 1398              	 .cfi_def_cfa_offset 8
 1399 0090 BD46     	 mov sp,r7
 1400              	.LCFI115:
 1401              	 .cfi_def_cfa_register 13
 1402              	 
 1403 0092 80BD     	 pop {r7,pc}
 1404              	 .cfi_endproc
 1405              	.LFE260:
 1407              	 .section .text.XMC_VADC_GROUP_InputClassInit,"ax",%progbits
 1408              	 .align 2
 1409              	 .global XMC_VADC_GROUP_InputClassInit
 1410              	 .thumb
 1411              	 .thumb_func
 1413              	XMC_VADC_GROUP_InputClassInit:
 1414              	.LFB261:
 478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to program conversion characteristics */
 480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_InputClassInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_CLASS_t 
 481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_CONV_t conv_type, const uint32_t set
 482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1415              	 .loc 2 482 0
 1416              	 .cfi_startproc
 1417              	 
 1418              	 
 1419              	 
 1420 0000 80B4     	 push {r7}
 1421              	.LCFI116:
 1422              	 .cfi_def_cfa_offset 4
 1423              	 .cfi_offset 7,-4
 1424 0002 8DB0     	 sub sp,sp,#52
 1425              	.LCFI117:
 1426              	 .cfi_def_cfa_offset 56
 1427 0004 00AF     	 add r7,sp,#0
 1428              	.LCFI118:
 1429              	 .cfi_def_cfa_register 7
 1430 0006 F860     	 str r0,[r7,#12]
 1431 0008 B960     	 str r1,[r7,#8]
 1432 000a 3B60     	 str r3,[r7]
 1433 000c 1346     	 mov r3,r2
 1434 000e FB71     	 strb r3,[r7,#7]
 483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_class;
 484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_pos;
 485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_pos;
 486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t        conv_mode_mask;
 487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time_mask;
 488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t        sample_time;
 489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_CONVMODE_t conv_mode;
 490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
 492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong Conversion Type", ((conv_type) <= XMC_VADC_GROUP_
 493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_InputClassInit:Wrong ICLASS set number", (set_num < XMC_VADC_MAX_ICLAS
 494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* 
 496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    * Obtain the mask and position macros of the parameters based on what is being requested - Stand
 497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    * external mux channels.
 498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    */
 499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_CONV_STD == conv_type)
 1435              	 .loc 2 499 0
 1436 0010 FB79     	 ldrb r3,[r7,#7]
 1437 0012 002B     	 cmp r3,#0
 1438 0014 13D1     	 bne .L46
 500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CMS_Pos;
 1439              	 .loc 2 501 0
 1440 0016 0823     	 movs r3,#8
 1441 0018 FB62     	 str r3,[r7,#44]
 502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CMS_Msk;
 1442              	 .loc 2 502 0
 1443 001a 4FF4E063 	 mov r3,#1792
 1444 001e 7B62     	 str r3,[r7,#36]
 503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCS_Pos;
 1445              	 .loc 2 503 0
 1446 0020 0023     	 movs r3,#0
 1447 0022 BB62     	 str r3,[r7,#40]
 504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCS_Msk;
 1448              	 .loc 2 504 0
 1449 0024 1F23     	 movs r3,#31
 1450 0026 3B62     	 str r3,[r7,#32]
 505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sample_time_std_conv;
 1451              	 .loc 2 505 0
 1452 0028 3B7A     	 ldrb r3,[r7,#8]
 1453 002a C3F30403 	 ubfx r3,r3,#0,#5
 1454 002e DBB2     	 uxtb r3,r3
 1455 0030 FB61     	 str r3,[r7,#28]
 506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_standard;
 1456              	 .loc 2 506 0
 1457 0032 7B7A     	 ldrb r3,[r7,#9]
 1458 0034 C3F30203 	 ubfx r3,r3,#0,#3
 1459 0038 DBB2     	 uxtb r3,r3
 1460 003a FB76     	 strb r3,[r7,#27]
 1461 003c 13E0     	 b .L47
 1462              	.L46:
 507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     conv_mode_pos    = (uint32_t) VADC_G_ICLASS_CME_Pos;
 1463              	 .loc 2 510 0
 1464 003e 1823     	 movs r3,#24
 1465 0040 FB62     	 str r3,[r7,#44]
 511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     conv_mode_mask   = (uint32_t) VADC_G_ICLASS_CME_Msk;
 1466              	 .loc 2 511 0
 1467 0042 4FF0E063 	 mov r3,#117440512
 1468 0046 7B62     	 str r3,[r7,#36]
 512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     sample_time_pos  = (uint32_t) VADC_G_ICLASS_STCE_Pos;
 1469              	 .loc 2 512 0
 1470 0048 1023     	 movs r3,#16
 1471 004a BB62     	 str r3,[r7,#40]
 513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     sample_time_mask = (uint32_t) VADC_G_ICLASS_STCE_Msk;
 1472              	 .loc 2 513 0
 1473 004c 4FF4F813 	 mov r3,#2031616
 1474 0050 3B62     	 str r3,[r7,#32]
 514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     sample_time      = (uint32_t) config.sampling_phase_emux_channel;
 1475              	 .loc 2 514 0
 1476 0052 BB7A     	 ldrb r3,[r7,#10]
 1477 0054 C3F30403 	 ubfx r3,r3,#0,#5
 1478 0058 DBB2     	 uxtb r3,r3
 1479 005a FB61     	 str r3,[r7,#28]
 515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     conv_mode        = (XMC_VADC_CONVMODE_t)config.conversion_mode_emux;
 1480              	 .loc 2 515 0
 1481 005c FB7A     	 ldrb r3,[r7,#11]
 1482 005e C3F30203 	 ubfx r3,r3,#0,#3
 1483 0062 DBB2     	 uxtb r3,r3
 1484 0064 FB76     	 strb r3,[r7,#27]
 1485              	.L47:
 516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Determine the class */
 519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   conv_class  = group_ptr->ICLASS[set_num];
 1486              	 .loc 2 519 0
 1487 0066 FB68     	 ldr r3,[r7,#12]
 1488 0068 3A68     	 ldr r2,[r7]
 1489 006a 2832     	 adds r2,r2,#40
 1490 006c 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1491 0070 7B61     	 str r3,[r7,#20]
 520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program the class register */
 522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(conv_mode_mask);
 1492              	 .loc 2 522 0
 1493 0072 7B6A     	 ldr r3,[r7,#36]
 1494 0074 DB43     	 mvns r3,r3
 1495 0076 7A69     	 ldr r2,[r7,#20]
 1496 0078 1340     	 ands r3,r3,r2
 1497 007a 7B61     	 str r3,[r7,#20]
 523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)((uint32_t) conv_mode << conv_mode_pos);
 1498              	 .loc 2 523 0
 1499 007c FA7E     	 ldrb r2,[r7,#27]
 1500 007e FB6A     	 ldr r3,[r7,#44]
 1501 0080 02FA03F3 	 lsl r3,r2,r3
 1502 0084 7A69     	 ldr r2,[r7,#20]
 1503 0086 1343     	 orrs r3,r3,r2
 1504 0088 7B61     	 str r3,[r7,#20]
 524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   conv_class &= ~(sample_time_mask);
 1505              	 .loc 2 524 0
 1506 008a 3B6A     	 ldr r3,[r7,#32]
 1507 008c DB43     	 mvns r3,r3
 1508 008e 7A69     	 ldr r2,[r7,#20]
 1509 0090 1340     	 ands r3,r3,r2
 1510 0092 7B61     	 str r3,[r7,#20]
 525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   conv_class |= (uint32_t)(sample_time <<  sample_time_pos);
 1511              	 .loc 2 525 0
 1512 0094 BB6A     	 ldr r3,[r7,#40]
 1513 0096 FA69     	 ldr r2,[r7,#28]
 1514 0098 02FA03F3 	 lsl r3,r2,r3
 1515 009c 7A69     	 ldr r2,[r7,#20]
 1516 009e 1343     	 orrs r3,r3,r2
 1517 00a0 7B61     	 str r3,[r7,#20]
 526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ICLASS[set_num] = conv_class;
 1518              	 .loc 2 526 0
 1519 00a2 FB68     	 ldr r3,[r7,#12]
 1520 00a4 3A68     	 ldr r2,[r7]
 1521 00a6 2832     	 adds r2,r2,#40
 1522 00a8 53F82210 	 ldr r1,[r3,r2,lsl#2]
 1523 00ac 0020     	 movs r0,#0
 1524 00ae 7969     	 ldr r1,[r7,#20]
 1525 00b0 0143     	 orrs r1,r1,r0
 1526 00b2 43F82210 	 str r1,[r3,r2,lsl#2]
 527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1527              	 .loc 2 527 0
 1528 00b6 3437     	 adds r7,r7,#52
 1529              	.LCFI119:
 1530              	 .cfi_def_cfa_offset 4
 1531 00b8 BD46     	 mov sp,r7
 1532              	.LCFI120:
 1533              	 .cfi_def_cfa_register 13
 1534              	 
 1535 00ba 5DF8047B 	 ldr r7,[sp],#4
 1536              	.LCFI121:
 1537              	 .cfi_restore 7
 1538              	 .cfi_def_cfa_offset 0
 1539 00be 7047     	 bx lr
 1540              	 .cfi_endproc
 1541              	.LFE261:
 1543              	 .section .text.XMC_VADC_GROUP_SetPowerMode,"ax",%progbits
 1544              	 .align 2
 1545              	 .global XMC_VADC_GROUP_SetPowerMode
 1546              	 .thumb
 1547              	 .thumb_func
 1549              	XMC_VADC_GROUP_SetPowerMode:
 1550              	.LFB262:
 528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API which sets the power mode of analog converter of a VADC group */
 530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetPowerMode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GROUP_POWERMODE_
 531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1551              	 .loc 2 531 0
 1552              	 .cfi_startproc
 1553              	 
 1554              	 
 1555              	 
 1556 0000 80B4     	 push {r7}
 1557              	.LCFI122:
 1558              	 .cfi_def_cfa_offset 4
 1559              	 .cfi_offset 7,-4
 1560 0002 85B0     	 sub sp,sp,#20
 1561              	.LCFI123:
 1562              	 .cfi_def_cfa_offset 24
 1563 0004 00AF     	 add r7,sp,#0
 1564              	.LCFI124:
 1565              	 .cfi_def_cfa_register 7
 1566 0006 7860     	 str r0,[r7,#4]
 1567 0008 0B46     	 mov r3,r1
 1568 000a FB70     	 strb r3,[r7,#3]
 532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t arbcfg;
 533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetPowerMode:Wrong Power Mode", (power_mode <= XMC_VADC_GROUP_POWERMOD
 536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   arbcfg = group_ptr->ARBCFG;
 1569              	 .loc 2 537 0
 1570 000c 7B68     	 ldr r3,[r7,#4]
 1571 000e D3F88030 	 ldr r3,[r3,#128]
 1572 0012 FB60     	 str r3,[r7,#12]
 538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   arbcfg &= ~((uint32_t)VADC_G_ARBCFG_ANONC_Msk);
 1573              	 .loc 2 539 0
 1574 0014 FB68     	 ldr r3,[r7,#12]
 1575 0016 23F00303 	 bic r3,r3,#3
 1576 001a FB60     	 str r3,[r7,#12]
 540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   arbcfg |= (uint32_t)power_mode;
 1577              	 .loc 2 540 0
 1578 001c FB78     	 ldrb r3,[r7,#3]
 1579 001e FA68     	 ldr r2,[r7,#12]
 1580 0020 1343     	 orrs r3,r3,r2
 1581 0022 FB60     	 str r3,[r7,#12]
 541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBCFG = arbcfg;
 1582              	 .loc 2 542 0
 1583 0024 7B68     	 ldr r3,[r7,#4]
 1584 0026 D3F88020 	 ldr r2,[r3,#128]
 1585 002a 0021     	 movs r1,#0
 1586 002c FA68     	 ldr r2,[r7,#12]
 1587 002e 0A43     	 orrs r2,r2,r1
 1588 0030 C3F88020 	 str r2,[r3,#128]
 543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1589              	 .loc 2 543 0
 1590 0034 1437     	 adds r7,r7,#20
 1591              	.LCFI125:
 1592              	 .cfi_def_cfa_offset 4
 1593 0036 BD46     	 mov sp,r7
 1594              	.LCFI126:
 1595              	 .cfi_def_cfa_register 13
 1596              	 
 1597 0038 5DF8047B 	 ldr r7,[sp],#4
 1598              	.LCFI127:
 1599              	 .cfi_restore 7
 1600              	 .cfi_def_cfa_offset 0
 1601 003c 7047     	 bx lr
 1602              	 .cfi_endproc
 1603              	.LFE262:
 1605 003e 00BF     	 .section .text.XMC_VADC_GROUP_SetSyncSlave,"ax",%progbits
 1606              	 .align 2
 1607              	 .global XMC_VADC_GROUP_SetSyncSlave
 1608              	 .thumb
 1609              	 .thumb_func
 1611              	XMC_VADC_GROUP_SetSyncSlave:
 1612              	.LFB263:
 544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a slave group during sync conversions */
 546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncSlave(XMC_VADC_GROUP_t *const group_ptr, uint32_t master_grp, uint32_t s
 547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1613              	 .loc 2 547 0
 1614              	 .cfi_startproc
 1615              	 
 1616              	 
 1617              	 
 1618 0000 80B4     	 push {r7}
 1619              	.LCFI128:
 1620              	 .cfi_def_cfa_offset 4
 1621              	 .cfi_offset 7,-4
 1622 0002 87B0     	 sub sp,sp,#28
 1623              	.LCFI129:
 1624              	 .cfi_def_cfa_offset 32
 1625 0004 00AF     	 add r7,sp,#0
 1626              	.LCFI130:
 1627              	 .cfi_def_cfa_register 7
 1628 0006 F860     	 str r0,[r7,#12]
 1629 0008 B960     	 str r1,[r7,#8]
 1630 000a 7A60     	 str r2,[r7,#4]
 548:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 549:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 550:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #endif
 551:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlave:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr)
 552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
 553:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_MULTIPLE_SLAVEGROUPS == 1U )
 554:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 555:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Determine the coding of SYNCTR */
 556:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (slave_grp > master_grp)
 1631              	 .loc 2 556 0
 1632 000c 7A68     	 ldr r2,[r7,#4]
 1633 000e BB68     	 ldr r3,[r7,#8]
 1634 0010 9A42     	 cmp r2,r3
 1635 0012 02D9     	 bls .L50
 557:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 558:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     master_grp = master_grp + 1U;
 1636              	 .loc 2 558 0
 1637 0014 BB68     	 ldr r3,[r7,#8]
 1638 0016 0133     	 adds r3,r3,#1
 1639 0018 BB60     	 str r3,[r7,#8]
 1640              	.L50:
 559:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 560:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #endif
 561:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
 562:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program SYNCTR */
 563:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1641              	 .loc 2 563 0
 1642 001a FB68     	 ldr r3,[r7,#12]
 1643 001c D3F8C030 	 ldr r3,[r3,#192]
 1644 0020 7B61     	 str r3,[r7,#20]
 564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1645              	 .loc 2 564 0
 1646 0022 7B69     	 ldr r3,[r7,#20]
 1647 0024 23F00303 	 bic r3,r3,#3
 1648 0028 7B61     	 str r3,[r7,#20]
 565:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   synctr   |= master_grp;
 1649              	 .loc 2 565 0
 1650 002a 7A69     	 ldr r2,[r7,#20]
 1651 002c BB68     	 ldr r3,[r7,#8]
 1652 002e 1343     	 orrs r3,r3,r2
 1653 0030 7B61     	 str r3,[r7,#20]
 566:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1654              	 .loc 2 566 0
 1655 0032 FB68     	 ldr r3,[r7,#12]
 1656 0034 D3F8C020 	 ldr r2,[r3,#192]
 1657 0038 0021     	 movs r1,#0
 1658 003a 7A69     	 ldr r2,[r7,#20]
 1659 003c 0A43     	 orrs r2,r2,r1
 1660 003e C3F8C020 	 str r2,[r3,#192]
 567:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1661              	 .loc 2 567 0
 1662 0042 1C37     	 adds r7,r7,#28
 1663              	.LCFI131:
 1664              	 .cfi_def_cfa_offset 4
 1665 0044 BD46     	 mov sp,r7
 1666              	.LCFI132:
 1667              	 .cfi_def_cfa_register 13
 1668              	 
 1669 0046 5DF8047B 	 ldr r7,[sp],#4
 1670              	.LCFI133:
 1671              	 .cfi_restore 7
 1672              	 .cfi_def_cfa_offset 0
 1673 004a 7047     	 bx lr
 1674              	 .cfi_endproc
 1675              	.LFE263:
 1677              	 .section .text.XMC_VADC_GROUP_SetSyncMaster,"ax",%progbits
 1678              	 .align 2
 1679              	 .global XMC_VADC_GROUP_SetSyncMaster
 1680              	 .thumb
 1681              	 .thumb_func
 1683              	XMC_VADC_GROUP_SetSyncMaster:
 1684              	.LFB264:
 568:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 569:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API which programs a group as a master group during sync conversions */
 570:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncMaster(XMC_VADC_GROUP_t *const group_ptr)
 571:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1685              	 .loc 2 571 0
 1686              	 .cfi_startproc
 1687              	 
 1688              	 
 1689              	 
 1690 0000 80B4     	 push {r7}
 1691              	.LCFI134:
 1692              	 .cfi_def_cfa_offset 4
 1693              	 .cfi_offset 7,-4
 1694 0002 85B0     	 sub sp,sp,#20
 1695              	.LCFI135:
 1696              	 .cfi_def_cfa_offset 24
 1697 0004 00AF     	 add r7,sp,#0
 1698              	.LCFI136:
 1699              	 .cfi_def_cfa_register 7
 1700 0006 7860     	 str r0,[r7,#4]
 572:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 573:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 574:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncMaster:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 575:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 576:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   synctr = group_ptr->SYNCTR;
 1701              	 .loc 2 576 0
 1702 0008 7B68     	 ldr r3,[r7,#4]
 1703 000a D3F8C030 	 ldr r3,[r3,#192]
 1704 000e FB60     	 str r3,[r7,#12]
 577:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   synctr   &= ~((uint32_t)VADC_G_SYNCTR_STSEL_Msk);
 1705              	 .loc 2 577 0
 1706 0010 FB68     	 ldr r3,[r7,#12]
 1707 0012 23F00303 	 bic r3,r3,#3
 1708 0016 FB60     	 str r3,[r7,#12]
 578:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR = synctr;
 1709              	 .loc 2 578 0
 1710 0018 7B68     	 ldr r3,[r7,#4]
 1711 001a D3F8C020 	 ldr r2,[r3,#192]
 1712 001e 0021     	 movs r1,#0
 1713 0020 FA68     	 ldr r2,[r7,#12]
 1714 0022 0A43     	 orrs r2,r2,r1
 1715 0024 C3F8C020 	 str r2,[r3,#192]
 579:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1716              	 .loc 2 579 0
 1717 0028 1437     	 adds r7,r7,#20
 1718              	.LCFI137:
 1719              	 .cfi_def_cfa_offset 4
 1720 002a BD46     	 mov sp,r7
 1721              	.LCFI138:
 1722              	 .cfi_def_cfa_register 13
 1723              	 
 1724 002c 5DF8047B 	 ldr r7,[sp],#4
 1725              	.LCFI139:
 1726              	 .cfi_restore 7
 1727              	 .cfi_def_cfa_offset 0
 1728 0030 7047     	 bx lr
 1729              	 .cfi_endproc
 1730              	.LFE264:
 1732 0032 00BF     	 .section .text.XMC_VADC_GROUP_CheckSlaveReadiness,"ax",%progbits
 1733              	 .align 2
 1734              	 .global XMC_VADC_GROUP_CheckSlaveReadiness
 1735              	 .thumb
 1736              	 .thumb_func
 1738              	XMC_VADC_GROUP_CheckSlaveReadiness:
 1739              	.LFB265:
 580:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to enable checking of readiness of slaves before a synchronous conversion request is issued 
 582:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_CheckSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 583:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1740              	 .loc 2 583 0
 1741              	 .cfi_startproc
 1742              	 
 1743              	 
 1744              	 
 1745 0000 80B4     	 push {r7}
 1746              	.LCFI140:
 1747              	 .cfi_def_cfa_offset 4
 1748              	 .cfi_offset 7,-4
 1749 0002 85B0     	 sub sp,sp,#20
 1750              	.LCFI141:
 1751              	 .cfi_def_cfa_offset 24
 1752 0004 00AF     	 add r7,sp,#0
 1753              	.LCFI142:
 1754              	 .cfi_def_cfa_register 7
 1755 0006 7860     	 str r0,[r7,#4]
 1756 0008 3960     	 str r1,[r7]
 584:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t i,master_grp_num;
 585:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_CheckSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
 586:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_CheckSlaveReadiness:Wrong Slave group", ((slave_group >= 0) && (slave_
 587:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 588:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   master_grp_num =0;
 1757              	 .loc 2 588 0
 1758 000a 0023     	 movs r3,#0
 1759 000c BB60     	 str r3,[r7,#8]
 589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   for(i=0; i<XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 1760              	 .loc 2 589 0
 1761 000e 0023     	 movs r3,#0
 1762 0010 FB60     	 str r3,[r7,#12]
 1763 0012 0BE0     	 b .L53
 1764              	.L55:
 590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 591:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     if(g_xmc_vadc_group_array[i] == group_ptr)
 1765              	 .loc 2 591 0
 1766 0014 154A     	 ldr r2,.L57
 1767 0016 FB68     	 ldr r3,[r7,#12]
 1768 0018 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1769 001c 7B68     	 ldr r3,[r7,#4]
 1770 001e 9A42     	 cmp r2,r3
 1771 0020 01D1     	 bne .L54
 592:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
 593:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       master_grp_num = i;
 1772              	 .loc 2 593 0
 1773 0022 FB68     	 ldr r3,[r7,#12]
 1774 0024 BB60     	 str r3,[r7,#8]
 1775              	.L54:
 589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 1776              	 .loc 2 589 0 discriminator 2
 1777 0026 FB68     	 ldr r3,[r7,#12]
 1778 0028 0133     	 adds r3,r3,#1
 1779 002a FB60     	 str r3,[r7,#12]
 1780              	.L53:
 589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 1781              	 .loc 2 589 0 is_stmt 0 discriminator 1
 1782 002c FB68     	 ldr r3,[r7,#12]
 1783 002e 032B     	 cmp r3,#3
 1784 0030 F0D9     	 bls .L55
 594:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
 595:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 596:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 597:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 598:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if(slave_group < master_grp_num)
 1785              	 .loc 2 598 0 is_stmt 1
 1786 0032 3A68     	 ldr r2,[r7]
 1787 0034 BB68     	 ldr r3,[r7,#8]
 1788 0036 9A42     	 cmp r2,r3
 1789 0038 02D2     	 bcs .L56
 599:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 600:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     slave_group++;
 1790              	 .loc 2 600 0
 1791 003a 3B68     	 ldr r3,[r7]
 1792 003c 0133     	 adds r3,r3,#1
 1793 003e 3B60     	 str r3,[r7]
 1794              	.L56:
 601:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 602:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= (1U << (slave_group + XMC_VADC_SYNCTR_START_LOCATION));
 1795              	 .loc 2 602 0
 1796 0040 7B68     	 ldr r3,[r7,#4]
 1797 0042 D3F8C020 	 ldr r2,[r3,#192]
 1798 0046 3B68     	 ldr r3,[r7]
 1799 0048 0333     	 adds r3,r3,#3
 1800 004a 1946     	 mov r1,r3
 1801 004c 0123     	 movs r3,#1
 1802 004e 8B40     	 lsls r3,r3,r1
 1803 0050 1A43     	 orrs r2,r2,r3
 1804 0052 7B68     	 ldr r3,[r7,#4]
 1805 0054 D3F8C010 	 ldr r1,[r3,#192]
 1806 0058 0021     	 movs r1,#0
 1807 005a 0A43     	 orrs r2,r2,r1
 1808 005c C3F8C020 	 str r2,[r3,#192]
 603:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1809              	 .loc 2 603 0
 1810 0060 1437     	 adds r7,r7,#20
 1811              	.LCFI143:
 1812              	 .cfi_def_cfa_offset 4
 1813 0062 BD46     	 mov sp,r7
 1814              	.LCFI144:
 1815              	 .cfi_def_cfa_register 13
 1816              	 
 1817 0064 5DF8047B 	 ldr r7,[sp],#4
 1818              	.LCFI145:
 1819              	 .cfi_restore 7
 1820              	 .cfi_def_cfa_offset 0
 1821 0068 7047     	 bx lr
 1822              	.L58:
 1823 006a 00BF     	 .align 2
 1824              	.L57:
 1825 006c 00000000 	 .word g_xmc_vadc_group_array
 1826              	 .cfi_endproc
 1827              	.LFE265:
 1829              	 .section .text.XMC_VADC_GROUP_IgnoreSlaveReadiness,"ax",%progbits
 1830              	 .align 2
 1831              	 .global XMC_VADC_GROUP_IgnoreSlaveReadiness
 1832              	 .thumb
 1833              	 .thumb_func
 1835              	XMC_VADC_GROUP_IgnoreSlaveReadiness:
 1836              	.LFB266:
 604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to disable checking of readiness of slaves during synchronous conversions */
 606:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_IgnoreSlaveReadiness(XMC_VADC_GROUP_t *const group_ptr, uint32_t slave_group)
 607:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1837              	 .loc 2 607 0
 1838              	 .cfi_startproc
 1839              	 
 1840              	 
 1841              	 
 1842 0000 80B4     	 push {r7}
 1843              	.LCFI146:
 1844              	 .cfi_def_cfa_offset 4
 1845              	 .cfi_offset 7,-4
 1846 0002 85B0     	 sub sp,sp,#20
 1847              	.LCFI147:
 1848              	 .cfi_def_cfa_offset 24
 1849 0004 00AF     	 add r7,sp,#0
 1850              	.LCFI148:
 1851              	 .cfi_def_cfa_register 7
 1852 0006 7860     	 str r0,[r7,#4]
 1853 0008 3960     	 str r1,[r7]
 608:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t i,master_grp_num;
 609:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IgnoreSlaveReadiness:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
 610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IgnoreSlaveReadiness:Wrong Slave group", ((slave_group >= 0) && (slave
 611:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 612:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   master_grp_num =0;
 1854              	 .loc 2 612 0
 1855 000a 0023     	 movs r3,#0
 1856 000c BB60     	 str r3,[r7,#8]
 613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   for(i=0; i<XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 1857              	 .loc 2 613 0
 1858 000e 0023     	 movs r3,#0
 1859 0010 FB60     	 str r3,[r7,#12]
 1860 0012 0BE0     	 b .L60
 1861              	.L62:
 614:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 615:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 	  if(g_xmc_vadc_group_array[i] == group_ptr)
 1862              	 .loc 2 615 0
 1863 0014 154A     	 ldr r2,.L64
 1864 0016 FB68     	 ldr r3,[r7,#12]
 1865 0018 52F82320 	 ldr r2,[r2,r3,lsl#2]
 1866 001c 7B68     	 ldr r3,[r7,#4]
 1867 001e 9A42     	 cmp r2,r3
 1868 0020 01D1     	 bne .L61
 616:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 	  {
 617:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 	    master_grp_num = i;
 1869              	 .loc 2 617 0
 1870 0022 FB68     	 ldr r3,[r7,#12]
 1871 0024 BB60     	 str r3,[r7,#8]
 1872              	.L61:
 613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 1873              	 .loc 2 613 0 discriminator 2
 1874 0026 FB68     	 ldr r3,[r7,#12]
 1875 0028 0133     	 adds r3,r3,#1
 1876 002a FB60     	 str r3,[r7,#12]
 1877              	.L60:
 613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 1878              	 .loc 2 613 0 is_stmt 0 discriminator 1
 1879 002c FB68     	 ldr r3,[r7,#12]
 1880 002e 032B     	 cmp r3,#3
 1881 0030 F0D9     	 bls .L62
 618:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 	  }
 619:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 620:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 621:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if(slave_group < master_grp_num)
 1882              	 .loc 2 621 0 is_stmt 1
 1883 0032 3A68     	 ldr r2,[r7]
 1884 0034 BB68     	 ldr r3,[r7,#8]
 1885 0036 9A42     	 cmp r2,r3
 1886 0038 02D2     	 bcs .L63
 622:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 623:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 	  slave_group++;
 1887              	 .loc 2 623 0
 1888 003a 3B68     	 ldr r3,[r7]
 1889 003c 0133     	 adds r3,r3,#1
 1890 003e 3B60     	 str r3,[r7]
 1891              	.L63:
 624:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 625:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR &= ~(1U << (slave_group + XMC_VADC_SYNCTR_START_LOCATION));
 1892              	 .loc 2 625 0
 1893 0040 7B68     	 ldr r3,[r7,#4]
 1894 0042 D3F8C020 	 ldr r2,[r3,#192]
 1895 0046 3B68     	 ldr r3,[r7]
 1896 0048 0333     	 adds r3,r3,#3
 1897 004a 1946     	 mov r1,r3
 1898 004c 0123     	 movs r3,#1
 1899 004e 8B40     	 lsls r3,r3,r1
 1900 0050 DB43     	 mvns r3,r3
 1901 0052 1A40     	 ands r2,r2,r3
 1902 0054 7B68     	 ldr r3,[r7,#4]
 1903 0056 D3F8C010 	 ldr r1,[r3,#192]
 1904 005a 0021     	 movs r1,#0
 1905 005c 0A43     	 orrs r2,r2,r1
 1906 005e C3F8C020 	 str r2,[r3,#192]
 626:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1907              	 .loc 2 626 0
 1908 0062 1437     	 adds r7,r7,#20
 1909              	.LCFI149:
 1910              	 .cfi_def_cfa_offset 4
 1911 0064 BD46     	 mov sp,r7
 1912              	.LCFI150:
 1913              	 .cfi_def_cfa_register 13
 1914              	 
 1915 0066 5DF8047B 	 ldr r7,[sp],#4
 1916              	.LCFI151:
 1917              	 .cfi_restore 7
 1918              	 .cfi_def_cfa_offset 0
 1919 006a 7047     	 bx lr
 1920              	.L65:
 1921              	 .align 2
 1922              	.L64:
 1923 006c 00000000 	 .word g_xmc_vadc_group_array
 1924              	 .cfi_endproc
 1925              	.LFE266:
 1927              	 .section .text.XMC_VADC_GROUP_SetSyncSlaveReadySignal,"ax",%progbits
 1928              	 .align 2
 1929              	 .global XMC_VADC_GROUP_SetSyncSlaveReadySignal
 1930              	 .thumb
 1931              	 .thumb_func
 1933              	XMC_VADC_GROUP_SetSyncSlaveReadySignal:
 1934              	.LFB267:
 627:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 628:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to configure EVAL bit in the slave groups*/
 629:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetSyncSlaveReadySignal(XMC_VADC_GROUP_t *const group_ptr,
 630:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                             uint32_t eval_waiting_group,
 631:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                             uint32_t eval_origin_group)
 632:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 1935              	 .loc 2 632 0
 1936              	 .cfi_startproc
 1937              	 
 1938              	 
 1939              	 
 1940 0000 80B4     	 push {r7}
 1941              	.LCFI152:
 1942              	 .cfi_def_cfa_offset 4
 1943              	 .cfi_offset 7,-4
 1944 0002 85B0     	 sub sp,sp,#20
 1945              	.LCFI153:
 1946              	 .cfi_def_cfa_offset 24
 1947 0004 00AF     	 add r7,sp,#0
 1948              	.LCFI154:
 1949              	 .cfi_def_cfa_register 7
 1950 0006 F860     	 str r0,[r7,#12]
 1951 0008 B960     	 str r1,[r7,#8]
 1952 000a 7A60     	 str r2,[r7,#4]
 633:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlaveReadySignal:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR
 634:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetSyncSlaveReadySignal:Wrong Group numbers", (eval_waiting_group != e
 635:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 636:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if(eval_origin_group < eval_waiting_group)
 1953              	 .loc 2 636 0
 1954 000c 7A68     	 ldr r2,[r7,#4]
 1955 000e BB68     	 ldr r3,[r7,#8]
 1956 0010 9A42     	 cmp r2,r3
 1957 0012 02D2     	 bcs .L67
 637:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 638:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 	  eval_origin_group++;
 1958              	 .loc 2 638 0
 1959 0014 7B68     	 ldr r3,[r7,#4]
 1960 0016 0133     	 adds r3,r3,#1
 1961 0018 7B60     	 str r3,[r7,#4]
 1962              	.L67:
 639:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 640:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->SYNCTR |= (1U << (eval_origin_group + XMC_VADC_SYNCTR_START_LOCATION));
 1963              	 .loc 2 640 0
 1964 001a FB68     	 ldr r3,[r7,#12]
 1965 001c D3F8C020 	 ldr r2,[r3,#192]
 1966 0020 7B68     	 ldr r3,[r7,#4]
 1967 0022 0333     	 adds r3,r3,#3
 1968 0024 1946     	 mov r1,r3
 1969 0026 0123     	 movs r3,#1
 1970 0028 8B40     	 lsls r3,r3,r1
 1971 002a 1A43     	 orrs r2,r2,r3
 1972 002c FB68     	 ldr r3,[r7,#12]
 1973 002e D3F8C010 	 ldr r1,[r3,#192]
 1974 0032 0021     	 movs r1,#0
 1975 0034 0A43     	 orrs r2,r2,r1
 1976 0036 C3F8C020 	 str r2,[r3,#192]
 641:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 1977              	 .loc 2 641 0
 1978 003a 1437     	 adds r7,r7,#20
 1979              	.LCFI155:
 1980              	 .cfi_def_cfa_offset 4
 1981 003c BD46     	 mov sp,r7
 1982              	.LCFI156:
 1983              	 .cfi_def_cfa_register 13
 1984              	 
 1985 003e 5DF8047B 	 ldr r7,[sp],#4
 1986              	.LCFI157:
 1987              	 .cfi_restore 7
 1988              	 .cfi_def_cfa_offset 0
 1989 0042 7047     	 bx lr
 1990              	 .cfi_endproc
 1991              	.LFE267:
 1993              	 .section .text.XMC_VADC_GROUP_EnableChannelSyncRequest,"ax",%progbits
 1994              	 .align 2
 1995              	 .global XMC_VADC_GROUP_EnableChannelSyncRequest
 1996              	 .thumb
 1997              	 .thumb_func
 1999              	XMC_VADC_GROUP_EnableChannelSyncRequest:
 2000              	.LFB268:
 642:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 643:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 644:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to enable the synchronous conversion feature - Applicable only to kernel configured as maste
 645:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_EnableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_n
 646:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2001              	 .loc 2 646 0
 2002              	 .cfi_startproc
 2003              	 
 2004              	 
 2005              	 
 2006 0000 80B4     	 push {r7}
 2007              	.LCFI158:
 2008              	 .cfi_def_cfa_offset 4
 2009              	 .cfi_offset 7,-4
 2010 0002 85B0     	 sub sp,sp,#20
 2011              	.LCFI159:
 2012              	 .cfi_def_cfa_offset 24
 2013 0004 00AF     	 add r7,sp,#0
 2014              	.LCFI160:
 2015              	 .cfi_def_cfa_register 7
 2016 0006 7860     	 str r0,[r7,#4]
 2017 0008 3960     	 str r1,[r7]
 647:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t synctr;
 648:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 649:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
 650:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_EnableChannelSyncRequest:Wrong Channel Number",
 651:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 652:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 653:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 2018              	 .loc 2 653 0
 2019 000a 7B68     	 ldr r3,[r7,#4]
 2020 000c D3F8C030 	 ldr r3,[r3,#192]
 2021 0010 FB60     	 str r3,[r7,#12]
 654:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 655:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (!(synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk))
 2022              	 .loc 2 655 0
 2023 0012 FB68     	 ldr r3,[r7,#12]
 2024 0014 03F00303 	 and r3,r3,#3
 2025 0018 002B     	 cmp r3,#0
 2026 001a 0FD1     	 bne .L68
 656:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 657:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] |= (uint32_t)((uint32_t)1 << VADC_G_CHCTR_SYNC_Pos);
 2027              	 .loc 2 657 0
 2028 001c 7B68     	 ldr r3,[r7,#4]
 2029 001e 3A68     	 ldr r2,[r7]
 2030 0020 8032     	 adds r2,r2,#128
 2031 0022 53F82230 	 ldr r3,[r3,r2,lsl#2]
 2032 0026 43F48061 	 orr r1,r3,#1024
 2033 002a 7B68     	 ldr r3,[r7,#4]
 2034 002c 3A68     	 ldr r2,[r7]
 2035 002e 8032     	 adds r2,r2,#128
 2036 0030 53F82200 	 ldr r0,[r3,r2,lsl#2]
 2037 0034 0020     	 movs r0,#0
 2038 0036 0143     	 orrs r1,r1,r0
 2039 0038 43F82210 	 str r1,[r3,r2,lsl#2]
 2040              	.L68:
 658:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 659:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2041              	 .loc 2 659 0
 2042 003c 1437     	 adds r7,r7,#20
 2043              	.LCFI161:
 2044              	 .cfi_def_cfa_offset 4
 2045 003e BD46     	 mov sp,r7
 2046              	.LCFI162:
 2047              	 .cfi_def_cfa_register 13
 2048              	 
 2049 0040 5DF8047B 	 ldr r7,[sp],#4
 2050              	.LCFI163:
 2051              	 .cfi_restore 7
 2052              	 .cfi_def_cfa_offset 0
 2053 0044 7047     	 bx lr
 2054              	 .cfi_endproc
 2055              	.LFE268:
 2057 0046 00BF     	 .section .text.XMC_VADC_GROUP_DisableChannelSyncRequest,"ax",%progbits
 2058              	 .align 2
 2059              	 .global XMC_VADC_GROUP_DisableChannelSyncRequest
 2060              	 .thumb
 2061              	 .thumb_func
 2063              	XMC_VADC_GROUP_DisableChannelSyncRequest:
 2064              	.LFB269:
 660:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 661:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to disable synchronous conversion feature */
 662:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_DisableChannelSyncRequest(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_
 663:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2065              	 .loc 2 663 0
 2066              	 .cfi_startproc
 2067              	 
 2068              	 
 2069              	 
 2070 0000 80B4     	 push {r7}
 2071              	.LCFI164:
 2072              	 .cfi_def_cfa_offset 4
 2073              	 .cfi_offset 7,-4
 2074 0002 85B0     	 sub sp,sp,#20
 2075              	.LCFI165:
 2076              	 .cfi_def_cfa_offset 24
 2077 0004 00AF     	 add r7,sp,#0
 2078              	.LCFI166:
 2079              	 .cfi_def_cfa_register 7
 2080 0006 7860     	 str r0,[r7,#4]
 2081 0008 3960     	 str r1,[r7]
 664:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t    synctr;
 665:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 666:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
 667:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_DisableChannelSyncRequest:Wrong Channel Number",
 668:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
 669:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 670:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   synctr  = group_ptr->SYNCTR;
 2082              	 .loc 2 670 0
 2083 000a 7B68     	 ldr r3,[r7,#4]
 2084 000c D3F8C030 	 ldr r3,[r3,#192]
 2085 0010 FB60     	 str r3,[r7,#12]
 671:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 672:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (synctr &  (uint32_t)VADC_G_SYNCTR_STSEL_Msk)
 2086              	 .loc 2 672 0
 2087 0012 FB68     	 ldr r3,[r7,#12]
 2088 0014 03F00303 	 and r3,r3,#3
 2089 0018 002B     	 cmp r3,#0
 2090 001a 0FD0     	 beq .L70
 673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 674:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_SYNC_Msk);
 2091              	 .loc 2 674 0
 2092 001c 7B68     	 ldr r3,[r7,#4]
 2093 001e 3A68     	 ldr r2,[r7]
 2094 0020 8032     	 adds r2,r2,#128
 2095 0022 53F82230 	 ldr r3,[r3,r2,lsl#2]
 2096 0026 23F48061 	 bic r1,r3,#1024
 2097 002a 7B68     	 ldr r3,[r7,#4]
 2098 002c 3A68     	 ldr r2,[r7]
 2099 002e 8032     	 adds r2,r2,#128
 2100 0030 53F82200 	 ldr r0,[r3,r2,lsl#2]
 2101 0034 0020     	 movs r0,#0
 2102 0036 0143     	 orrs r1,r1,r0
 2103 0038 43F82210 	 str r1,[r3,r2,lsl#2]
 2104              	.L70:
 675:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 676:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2105              	 .loc 2 676 0
 2106 003c 1437     	 adds r7,r7,#20
 2107              	.LCFI167:
 2108              	 .cfi_def_cfa_offset 4
 2109 003e BD46     	 mov sp,r7
 2110              	.LCFI168:
 2111              	 .cfi_def_cfa_register 13
 2112              	 
 2113 0040 5DF8047B 	 ldr r7,[sp],#4
 2114              	.LCFI169:
 2115              	 .cfi_restore 7
 2116              	 .cfi_def_cfa_offset 0
 2117 0044 7047     	 bx lr
 2118              	 .cfi_endproc
 2119              	.LFE269:
 2121 0046 00BF     	 .section .text.XMC_VADC_GROUP_IsConverterBusy,"ax",%progbits
 2122              	 .align 2
 2123              	 .global XMC_VADC_GROUP_IsConverterBusy
 2124              	 .thumb
 2125              	 .thumb_func
 2127              	XMC_VADC_GROUP_IsConverterBusy:
 2128              	.LFB270:
 677:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 678:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to retrieve the converter state - Idle vs Busy */ 
 679:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** XMC_VADC_GROUP_STATE_t XMC_VADC_GROUP_IsConverterBusy(XMC_VADC_GROUP_t *const group_ptr)
 680:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2129              	 .loc 2 680 0
 2130              	 .cfi_startproc
 2131              	 
 2132              	 
 2133              	 
 2134 0000 80B4     	 push {r7}
 2135              	.LCFI170:
 2136              	 .cfi_def_cfa_offset 4
 2137              	 .cfi_offset 7,-4
 2138 0002 85B0     	 sub sp,sp,#20
 2139              	.LCFI171:
 2140              	 .cfi_def_cfa_offset 24
 2141 0004 00AF     	 add r7,sp,#0
 2142              	.LCFI172:
 2143              	 .cfi_def_cfa_register 7
 2144 0006 7860     	 str r0,[r7,#4]
 681:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t      arbcfg;
 682:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 683:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsConverterBusy:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
 684:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 685:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   arbcfg  = group_ptr->ARBCFG;
 2145              	 .loc 2 685 0
 2146 0008 7B68     	 ldr r3,[r7,#4]
 2147 000a D3F88030 	 ldr r3,[r3,#128]
 2148 000e FB60     	 str r3,[r7,#12]
 686:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   arbcfg &= (uint32_t)VADC_G_ARBCFG_BUSY_Msk;
 2149              	 .loc 2 686 0
 2150 0010 FB68     	 ldr r3,[r7,#12]
 2151 0012 03F08043 	 and r3,r3,#1073741824
 2152 0016 FB60     	 str r3,[r7,#12]
 687:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   arbcfg = arbcfg >> VADC_G_ARBCFG_BUSY_Pos;
 2153              	 .loc 2 687 0
 2154 0018 FB68     	 ldr r3,[r7,#12]
 2155 001a 9B0F     	 lsrs r3,r3,#30
 2156 001c FB60     	 str r3,[r7,#12]
 688:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 689:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return( (XMC_VADC_GROUP_STATE_t)arbcfg);
 2157              	 .loc 2 689 0
 2158 001e FB68     	 ldr r3,[r7,#12]
 2159 0020 DBB2     	 uxtb r3,r3
 690:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2160              	 .loc 2 690 0
 2161 0022 1846     	 mov r0,r3
 2162 0024 1437     	 adds r7,r7,#20
 2163              	.LCFI173:
 2164              	 .cfi_def_cfa_offset 4
 2165 0026 BD46     	 mov sp,r7
 2166              	.LCFI174:
 2167              	 .cfi_def_cfa_register 13
 2168              	 
 2169 0028 5DF8047B 	 ldr r7,[sp],#4
 2170              	.LCFI175:
 2171              	 .cfi_restore 7
 2172              	 .cfi_def_cfa_offset 0
 2173 002c 7047     	 bx lr
 2174              	 .cfi_endproc
 2175              	.LFE270:
 2177 002e 00BF     	 .section .text.XMC_VADC_GROUP_SetBoundaries,"ax",%progbits
 2178              	 .align 2
 2179              	 .global XMC_VADC_GROUP_SetBoundaries
 2180              	 .thumb
 2181              	 .thumb_func
 2183              	XMC_VADC_GROUP_SetBoundaries:
 2184              	.LFB271:
 691:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 692:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set boundaries for conversion results */
 693:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaries(XMC_VADC_GROUP_t *const group_ptr, const uint32_t boundary0, cons
 694:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2185              	 .loc 2 694 0
 2186              	 .cfi_startproc
 2187              	 
 2188              	 
 2189              	 
 2190 0000 80B4     	 push {r7}
 2191              	.LCFI176:
 2192              	 .cfi_def_cfa_offset 4
 2193              	 .cfi_offset 7,-4
 2194 0002 87B0     	 sub sp,sp,#28
 2195              	.LCFI177:
 2196              	 .cfi_def_cfa_offset 32
 2197 0004 00AF     	 add r7,sp,#0
 2198              	.LCFI178:
 2199              	 .cfi_def_cfa_register 7
 2200 0006 F860     	 str r0,[r7,#12]
 2201 0008 B960     	 str r1,[r7,#8]
 2202 000a 7A60     	 str r2,[r7,#4]
 695:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t bound;
 696:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 697:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaries:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr
 698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 699:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 700:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bound  = group_ptr->BOUND;
 2203              	 .loc 2 700 0
 2204 000c FB68     	 ldr r3,[r7,#12]
 2205 000e D3F8B830 	 ldr r3,[r3,#184]
 2206 0012 7B61     	 str r3,[r7,#20]
 701:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 2207              	 .loc 2 701 0
 2208 0014 7B69     	 ldr r3,[r7,#20]
 2209 0016 23F47F63 	 bic r3,r3,#4080
 2210 001a 23F00F03 	 bic r3,r3,#15
 2211 001e 7B61     	 str r3,[r7,#20]
 702:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY1_Msk);
 2212              	 .loc 2 702 0
 2213 0020 7B69     	 ldr r3,[r7,#20]
 2214 0022 23F07F63 	 bic r3,r3,#267386880
 2215 0026 23F47023 	 bic r3,r3,#983040
 2216 002a 7B61     	 str r3,[r7,#20]
 703:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary0 << VADC_G_BOUND_BOUNDARY0_Pos);
 2217              	 .loc 2 703 0
 2218 002c 7A69     	 ldr r2,[r7,#20]
 2219 002e BB68     	 ldr r3,[r7,#8]
 2220 0030 1343     	 orrs r3,r3,r2
 2221 0032 7B61     	 str r3,[r7,#20]
 704:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bound |= (uint32_t) ((uint32_t) boundary1 << VADC_G_BOUND_BOUNDARY1_Pos);
 2222              	 .loc 2 704 0
 2223 0034 7B68     	 ldr r3,[r7,#4]
 2224 0036 1B04     	 lsls r3,r3,#16
 2225 0038 7A69     	 ldr r2,[r7,#20]
 2226 003a 1343     	 orrs r3,r3,r2
 2227 003c 7B61     	 str r3,[r7,#20]
 705:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = bound;
 2228              	 .loc 2 705 0
 2229 003e FB68     	 ldr r3,[r7,#12]
 2230 0040 D3F8B820 	 ldr r2,[r3,#184]
 2231 0044 0021     	 movs r1,#0
 2232 0046 7A69     	 ldr r2,[r7,#20]
 2233 0048 0A43     	 orrs r2,r2,r1
 2234 004a C3F8B820 	 str r2,[r3,#184]
 706:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2235              	 .loc 2 706 0
 2236 004e 1C37     	 adds r7,r7,#28
 2237              	.LCFI179:
 2238              	 .cfi_def_cfa_offset 4
 2239 0050 BD46     	 mov sp,r7
 2240              	.LCFI180:
 2241              	 .cfi_def_cfa_register 13
 2242              	 
 2243 0052 5DF8047B 	 ldr r7,[sp],#4
 2244              	.LCFI181:
 2245              	 .cfi_restore 7
 2246              	 .cfi_def_cfa_offset 0
 2247 0056 7047     	 bx lr
 2248              	 .cfi_endproc
 2249              	.LFE271:
 2251              	 .section .text.XMC_VADC_GROUP_SetIndividualBoundary,"ax",%progbits
 2252              	 .align 2
 2253              	 .global XMC_VADC_GROUP_SetIndividualBoundary
 2254              	 .thumb
 2255              	 .thumb_func
 2257              	XMC_VADC_GROUP_SetIndividualBoundary:
 2258              	.LFB272:
 707:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 708:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set an individual boundary for conversion results */
 709:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetIndividualBoundary(XMC_VADC_GROUP_t *const group_ptr,
 710:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_CHANNEL_BOUNDARY_t selection,
 711:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                           const uint16_t boundary_value)
 712:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2259              	 .loc 2 712 0
 2260              	 .cfi_startproc
 2261              	 
 2262              	 
 2263              	 
 2264 0000 80B4     	 push {r7}
 2265              	.LCFI182:
 2266              	 .cfi_def_cfa_offset 4
 2267              	 .cfi_offset 7,-4
 2268 0002 85B0     	 sub sp,sp,#20
 2269              	.LCFI183:
 2270              	 .cfi_def_cfa_offset 24
 2271 0004 00AF     	 add r7,sp,#0
 2272              	.LCFI184:
 2273              	 .cfi_def_cfa_register 7
 2274 0006 7860     	 str r0,[r7,#4]
 2275 0008 0B46     	 mov r3,r1
 2276 000a FB70     	 strb r3,[r7,#3]
 2277 000c 1346     	 mov r3,r2
 2278 000e 3B80     	 strh r3,[r7]
 713:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 714:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t bound;
 715:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 716:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetIndividualBoundary:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
 717:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetIndividualBoundary:Wrong Boundary Selection",
 718:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                ((XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 == selection) ||
 719:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                 (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1 == selection)))
 720:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 721:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program the Boundary registers */
 722:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bound  = group_ptr->BOUND;
 2279              	 .loc 2 722 0
 2280 0010 7B68     	 ldr r3,[r7,#4]
 2281 0012 D3F8B830 	 ldr r3,[r3,#184]
 2282 0016 FB60     	 str r3,[r7,#12]
 723:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND0 == selection)
 2283              	 .loc 2 723 0
 2284 0018 FB78     	 ldrb r3,[r7,#3]
 2285 001a 002B     	 cmp r3,#0
 2286 001c 0AD1     	 bne .L76
 724:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 725:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY0_Msk);
 2287              	 .loc 2 725 0
 2288 001e FB68     	 ldr r3,[r7,#12]
 2289 0020 23F47F63 	 bic r3,r3,#4080
 2290 0024 23F00F03 	 bic r3,r3,#15
 2291 0028 FB60     	 str r3,[r7,#12]
 726:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY0_Pos);
 2292              	 .loc 2 726 0
 2293 002a 3B88     	 ldrh r3,[r7]
 2294 002c FA68     	 ldr r2,[r7,#12]
 2295 002e 1343     	 orrs r3,r3,r2
 2296 0030 FB60     	 str r3,[r7,#12]
 2297 0032 0DE0     	 b .L77
 2298              	.L76:
 727:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 728:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if (XMC_VADC_CHANNEL_BOUNDARY_GROUP_BOUND1 == selection)
 2299              	 .loc 2 728 0
 2300 0034 FB78     	 ldrb r3,[r7,#3]
 2301 0036 012B     	 cmp r3,#1
 2302 0038 0AD1     	 bne .L77
 729:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 730:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     bound &= ~((uint32_t) VADC_G_BOUND_BOUNDARY1_Msk);
 2303              	 .loc 2 730 0
 2304 003a FB68     	 ldr r3,[r7,#12]
 2305 003c 23F07F63 	 bic r3,r3,#267386880
 2306 0040 23F47023 	 bic r3,r3,#983040
 2307 0044 FB60     	 str r3,[r7,#12]
 731:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     bound |= (uint32_t) ((uint32_t) boundary_value << VADC_G_BOUND_BOUNDARY1_Pos);
 2308              	 .loc 2 731 0
 2309 0046 3B88     	 ldrh r3,[r7]
 2310 0048 1B04     	 lsls r3,r3,#16
 2311 004a FA68     	 ldr r2,[r7,#12]
 2312 004c 1343     	 orrs r3,r3,r2
 2313 004e FB60     	 str r3,[r7,#12]
 2314              	.L77:
 732:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 733:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 734:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 735:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* For MISRA*/
 736:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 737:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->BOUND = bound;
 2315              	 .loc 2 737 0
 2316 0050 7B68     	 ldr r3,[r7,#4]
 2317 0052 D3F8B820 	 ldr r2,[r3,#184]
 2318 0056 0021     	 movs r1,#0
 2319 0058 FA68     	 ldr r2,[r7,#12]
 2320 005a 0A43     	 orrs r2,r2,r1
 2321 005c C3F8B820 	 str r2,[r3,#184]
 738:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 739:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2322              	 .loc 2 739 0
 2323 0060 1437     	 adds r7,r7,#20
 2324              	.LCFI185:
 2325              	 .cfi_def_cfa_offset 4
 2326 0062 BD46     	 mov sp,r7
 2327              	.LCFI186:
 2328              	 .cfi_def_cfa_register 13
 2329              	 
 2330 0064 5DF8047B 	 ldr r7,[sp],#4
 2331              	.LCFI187:
 2332              	 .cfi_restore 7
 2333              	 .cfi_def_cfa_offset 0
 2334 0068 7047     	 bx lr
 2335              	 .cfi_endproc
 2336              	.LFE272:
 2338 006a 00BF     	 .section .text.XMC_VADC_GROUP_TriggerServiceRequest,"ax",%progbits
 2339              	 .align 2
 2340              	 .global XMC_VADC_GROUP_TriggerServiceRequest
 2341              	 .thumb
 2342              	 .thumb_func
 2344              	XMC_VADC_GROUP_TriggerServiceRequest:
 2345              	.LFB273:
 740:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 741:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Manually assert service request (Interrupt) to NVIC */
 742:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_TriggerServiceRequest(XMC_VADC_GROUP_t *const group_ptr,
 743:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                           const uint32_t sr_num,
 744:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                           const XMC_VADC_GROUP_IRQ_t type)
 745:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2346              	 .loc 2 745 0
 2347              	 .cfi_startproc
 2348              	 
 2349              	 
 2350              	 
 2351 0000 80B4     	 push {r7}
 2352              	.LCFI188:
 2353              	 .cfi_def_cfa_offset 4
 2354              	 .cfi_offset 7,-4
 2355 0002 87B0     	 sub sp,sp,#28
 2356              	.LCFI189:
 2357              	 .cfi_def_cfa_offset 32
 2358 0004 00AF     	 add r7,sp,#0
 2359              	.LCFI190:
 2360              	 .cfi_def_cfa_register 7
 2361 0006 F860     	 str r0,[r7,#12]
 2362 0008 B960     	 str r1,[r7,#8]
 2363 000a 1346     	 mov r3,r2
 2364 000c FB71     	 strb r3,[r7,#7]
 746:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t sract;
 747:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 748:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
 749:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR number", (sr_num <= XMC_VADC_SR_SHARED_
 750:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_TriggerServiceRequest:Wrong SR type", ((type)<= XMC_VADC_GROUP_IRQ_SHA
 751:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 752:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   sract = group_ptr->SRACT;
 2365              	 .loc 2 752 0
 2366 000e FB68     	 ldr r3,[r7,#12]
 2367 0010 D3F8C831 	 ldr r3,[r3,#456]
 2368 0014 7B61     	 str r3,[r7,#20]
 753:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 754:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_GROUP_IRQ_KERNEL == type)
 2369              	 .loc 2 754 0
 2370 0016 FB79     	 ldrb r3,[r7,#7]
 2371 0018 002B     	 cmp r3,#0
 2372 001a 07D1     	 bne .L79
 755:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 756:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << sr_num);
 2373              	 .loc 2 756 0
 2374 001c BB68     	 ldr r3,[r7,#8]
 2375 001e 0122     	 movs r2,#1
 2376 0020 02FA03F3 	 lsl r3,r2,r3
 2377 0024 7A69     	 ldr r2,[r7,#20]
 2378 0026 1343     	 orrs r3,r3,r2
 2379 0028 7B61     	 str r3,[r7,#20]
 2380 002a 07E0     	 b .L80
 2381              	.L79:
 757:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 758:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 759:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 760:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     sract |= (uint32_t)((uint32_t)1 << (sr_num + (uint32_t)8));
 2382              	 .loc 2 760 0
 2383 002c BB68     	 ldr r3,[r7,#8]
 2384 002e 0833     	 adds r3,r3,#8
 2385 0030 1A46     	 mov r2,r3
 2386 0032 0123     	 movs r3,#1
 2387 0034 9340     	 lsls r3,r3,r2
 2388 0036 7A69     	 ldr r2,[r7,#20]
 2389 0038 1343     	 orrs r3,r3,r2
 2390 003a 7B61     	 str r3,[r7,#20]
 2391              	.L80:
 761:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 762:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 763:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->SRACT = sract;
 2392              	 .loc 2 763 0
 2393 003c FB68     	 ldr r3,[r7,#12]
 2394 003e D3F8C821 	 ldr r2,[r3,#456]
 2395 0042 0021     	 movs r1,#0
 2396 0044 7A69     	 ldr r2,[r7,#20]
 2397 0046 0A43     	 orrs r2,r2,r1
 2398 0048 C3F8C821 	 str r2,[r3,#456]
 764:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2399              	 .loc 2 764 0
 2400 004c 1C37     	 adds r7,r7,#28
 2401              	.LCFI191:
 2402              	 .cfi_def_cfa_offset 4
 2403 004e BD46     	 mov sp,r7
 2404              	.LCFI192:
 2405              	 .cfi_def_cfa_register 13
 2406              	 
 2407 0050 5DF8047B 	 ldr r7,[sp],#4
 2408              	.LCFI193:
 2409              	 .cfi_restore 7
 2410              	 .cfi_def_cfa_offset 0
 2411 0054 7047     	 bx lr
 2412              	 .cfi_endproc
 2413              	.LFE273:
 2415 0056 00BF     	 .section .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode,"ax",%progbits
 2416              	 .align 2
 2417              	 .global XMC_VADC_GROUP_SetBoundaryEventInterruptNode
 2418              	 .thumb
 2419              	 .thumb_func
 2421              	XMC_VADC_GROUP_SetBoundaryEventInterruptNode:
 2422              	.LFB274:
 765:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 766:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if XMC_VADC_BOUNDARY_FLAG_SELECT == 1U
 767:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 768:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set the SR line for the Boundary flag node pointer*/
 769:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetBoundaryEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
 770:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                                   const uint8_t boundary_flag_num,
 771:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                                   const XMC_VADC_BOUNDARY_NODE_t sr
 772:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2423              	 .loc 2 772 0
 2424              	 .cfi_startproc
 2425              	 
 2426              	 
 2427              	 
 2428 0000 80B4     	 push {r7}
 2429              	.LCFI194:
 2430              	 .cfi_def_cfa_offset 4
 2431              	 .cfi_offset 7,-4
 2432 0002 85B0     	 sub sp,sp,#20
 2433              	.LCFI195:
 2434              	 .cfi_def_cfa_offset 24
 2435 0004 00AF     	 add r7,sp,#0
 2436              	.LCFI196:
 2437              	 .cfi_def_cfa_register 7
 2438 0006 7860     	 str r0,[r7,#4]
 2439 0008 0B46     	 mov r3,r1
 2440 000a FB70     	 strb r3,[r7,#3]
 2441 000c 1346     	 mov r3,r2
 2442 000e BB70     	 strb r3,[r7,#2]
 773:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t flag_pos;
 774:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetBoundaryEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GRO
 775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 776:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program the GxBFLNP */
 777:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   flag_pos = (uint32_t)boundary_flag_num << (uint32_t)2;
 2443              	 .loc 2 777 0
 2444 0010 FB78     	 ldrb r3,[r7,#3]
 2445 0012 9B00     	 lsls r3,r3,#2
 2446 0014 FB60     	 str r3,[r7,#12]
 778:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP &= ~((uint32_t)VADC_G_BFLNP_BFL0NP_Msk << flag_pos);
 2447              	 .loc 2 778 0
 2448 0016 7B68     	 ldr r3,[r7,#4]
 2449 0018 D3F8D420 	 ldr r2,[r3,#212]
 2450 001c FB68     	 ldr r3,[r7,#12]
 2451 001e 0F21     	 movs r1,#15
 2452 0020 01FA03F3 	 lsl r3,r1,r3
 2453 0024 DB43     	 mvns r3,r3
 2454 0026 1A40     	 ands r2,r2,r3
 2455 0028 7B68     	 ldr r3,[r7,#4]
 2456 002a D3F8D410 	 ldr r1,[r3,#212]
 2457 002e 0021     	 movs r1,#0
 2458 0030 0A43     	 orrs r2,r2,r1
 2459 0032 C3F8D420 	 str r2,[r3,#212]
 779:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLNP |= (uint32_t)sr << flag_pos;
 2460              	 .loc 2 779 0
 2461 0036 7B68     	 ldr r3,[r7,#4]
 2462 0038 D3F8D420 	 ldr r2,[r3,#212]
 2463 003c B978     	 ldrb r1,[r7,#2]
 2464 003e FB68     	 ldr r3,[r7,#12]
 2465 0040 01FA03F3 	 lsl r3,r1,r3
 2466 0044 1A43     	 orrs r2,r2,r3
 2467 0046 7B68     	 ldr r3,[r7,#4]
 2468 0048 D3F8D410 	 ldr r1,[r3,#212]
 2469 004c 0021     	 movs r1,#0
 2470 004e 0A43     	 orrs r2,r2,r1
 2471 0050 C3F8D420 	 str r2,[r3,#212]
 780:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2472              	 .loc 2 780 0
 2473 0054 1437     	 adds r7,r7,#20
 2474              	.LCFI197:
 2475              	 .cfi_def_cfa_offset 4
 2476 0056 BD46     	 mov sp,r7
 2477              	.LCFI198:
 2478              	 .cfi_def_cfa_register 13
 2479              	 
 2480 0058 5DF8047B 	 ldr r7,[sp],#4
 2481              	.LCFI199:
 2482              	 .cfi_restore 7
 2483              	 .cfi_def_cfa_offset 0
 2484 005c 7047     	 bx lr
 2485              	 .cfi_endproc
 2486              	.LFE274:
 2488 005e 00BF     	 .section .text.XMC_VADC_GROUP_ScanInit,"ax",%progbits
 2489              	 .align 2
 2490              	 .global XMC_VADC_GROUP_ScanInit
 2491              	 .thumb
 2492              	 .thumb_func
 2494              	XMC_VADC_GROUP_ScanInit:
 2495              	.LFB275:
 781:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 782:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 783:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 784:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 785:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 786:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_AVAILABLE == 1U)
 787:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 788:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to Initialize the Sample and hold features*/
 789:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_Init(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, const XMC_VADC_GLOBAL_SHS_CONFI
 790:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 791:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(voi
 792:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_Init:Wrong Index number",(config == (XMC_VADC_GLOBAL_SHS_CONFIG_t
 793:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 794:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Initialize the SHS Configuration register*/
 795:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   shs_ptr->SHSCFG = (uint32_t)((uint32_t)config->shscfg | (uint32_t)SHS_SHSCFG_SCWC_Msk);
 796:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 797:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 798:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Select the Calibration order*/
 799:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR &= ~((uint32_t)SHS_CALCTR_CALORD_Msk);
 800:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   shs_ptr->CALCTR |=  (uint32_t) ((uint32_t)config->calibration_order << SHS_CALCTR_CALORD_Pos);
 801:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 802:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 803:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 804:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 805:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to enable the accelerated mode of conversion */
 806:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROUP
 807:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 808:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong SHS Pointer",
 809:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 810:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableAcceleratedMode:Wrong Index number",(group_num <= XMC_VADC_
 811:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 812:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 813:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 814:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 815:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)SHS_TIMCFG0_AT_Msk;
 816:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 817:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 818:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 819:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)SHS_TIMCFG1_AT_Msk;
 820:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 821:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 822:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 823:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 824:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 825:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 826:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 827:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to disable the accelerated mode of conversion */
 828:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode(XMC_VADC_GLOBAL_SHS_t *const shs_ptr, XMC_VADC_GROU
 829:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 830:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong SHS Pointer",
 831:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 832:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableAcceleratedMode:Wrong Index number",(group_num <= XMC_VADC
 833:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 834:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Set the converted to Accelerated mode from compatible mode*/
 835:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 836:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 837:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~(uint32_t)SHS_TIMCFG0_AT_Msk;
 838:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 839:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 840:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 841:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~(uint32_t)SHS_TIMCFG1_AT_Msk;
 842:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 843:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 844:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 845:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 846:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 847:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 848:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 849:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set the Short sample time of the Sample and hold module*/
 850:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetShortSampleTime(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 851:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                             XMC_VADC_GROUP_INDEX_t group_num,
 852:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                             uint8_t sst_value)
 853:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 854:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SHS Pointer",
 855:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 856:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong Index number",(group_num <= XMC_VADC_GRO
 857:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetShortSampleTime:Wrong SST value",(sst_value < 64U))
 858:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 859:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Set the short sample time for the Accelerated mode of operation*/
 860:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 861:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 862:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 &= ~((uint32_t)SHS_TIMCFG0_SST_Msk);
 863:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG0 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG0_SST_Pos );
 864:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 865:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 866:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 867:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 &= ~((uint32_t)SHS_TIMCFG1_SST_Msk);
 868:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->TIMCFG1 |= (uint32_t)((uint32_t)sst_value << SHS_TIMCFG1_SST_Pos );
 869:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 870:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 871:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 872:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* for MISRA*/
 873:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 874:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 875:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
 876:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 877:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set the gain factor of the Sample and hold module*/
 878:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetGainFactor(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 879:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                        uint8_t gain_value,
 880:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                        XMC_VADC_GROUP_INDEX_t group_num,
 881:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                        uint8_t ch_num)
 882:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 883:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t ch_mask;
 884:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 885:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong SHS Pointer", (shs_ptr == (XMC_VADC_GLOBAL_SH
 886:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetGainFactor:Wrong Index number",(group_num <= XMC_VADC_GROUP_IN
 887:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 888:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /*Calculate location of channel bit-field*/
 889:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   ch_mask = ((uint32_t)ch_num << (uint32_t)2);
 890:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (group_num == XMC_VADC_GROUP_INDEX_0 )
 891:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 892:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 &= ~((uint32_t)SHS_GNCTR00_GAIN0_Msk << ch_mask) ;
 893:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR00 |=  ((uint32_t)gain_value << ch_mask);
 894:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 895:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if (group_num == XMC_VADC_GROUP_INDEX_1 )
 896:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 897:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 &= ~((uint32_t)SHS_GNCTR10_GAIN0_Msk << ch_mask);
 898:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->GNCTR10 |=  ((uint32_t)gain_value << ch_mask);
 899:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 900:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 901:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 902:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* for MISRA*/
 903:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 904:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 905:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 906:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if(XMC_VADC_SHS_FULL_SET_REG == 1U)
 907:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 908:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 909:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                          XMC_VADC_GROUP_INDEX_t group_num)
 910:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 911:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong SHS Pointer",
 912:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 913:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_EnableGainAndOffsetCalibrations:Wrong group selected",
 914:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 915:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 916:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable gain and offset calibration*/
 917:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 918:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 919:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 &= ~((uint32_t)SHS_CALOC0_DISCAL_Msk);
 920:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 921:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 922:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 923:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 &= ~((uint32_t)SHS_CALOC1_DISCAL_Msk);
 924:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 925:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 926:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 927:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 928:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 929:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 930:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 931:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to enable the gain and offset calibration of the Sample and hold module*/
 932:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 933:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                           XMC_VADC_GROUP_INDEX_t group_num)
 934:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 935:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong SHS Pointer",
 936:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 937:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_DisableGainAndOffsetCalibrations:Wrong group selected",
 938:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****             (group_num <= (uint32_t)XMC_VADC_GROUP_INDEX_1))
 939:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 940:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 941:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 942:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |= (uint32_t)SHS_CALOC0_DISCAL_Msk;
 943:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 944:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 945:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 946:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |= (uint32_t)SHS_CALOC1_DISCAL_Msk;
 947:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 948:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 949:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 950:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 951:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 952:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 953:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 954:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to get the offset calibration value of the Sample and hold module*/
 955:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 956:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                       XMC_VADC_GROUP_INDEX_t group_num,
 957:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                       XMC_VADC_SHS_GAIN_LEVEL_t gain_level)
 958:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 959:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t calibration_value;
 960:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong SHS Pointer",
 961:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 962:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong Group number selected",
 963:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
 964:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_GetOffsetCalibrationValue:Wrong gain level selected",
 965:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)||
 966:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_3))
 967:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 968:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   calibration_value = 0U;
 969:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 970:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 971:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC0 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC0_CALOFFVAL0
 972:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 973:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
 974:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 975:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     calibration_value = (shs_ptr->CALOC1 >> (uint32_t)gain_level) & (uint32_t)SHS_CALOC1_CALOFFVAL0
 976:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 977:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
 978:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 979:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
 980:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
 981:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return ((uint8_t)calibration_value);
 982:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 983:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 984:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set the offset calibration value of the Sample and hold module*/
 985:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
 986:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                    XMC_VADC_GROUP_INDEX_t group_num,
 987:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                    XMC_VADC_SHS_GAIN_LEVEL_t gain_level,
 988:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                    uint8_t offset_calibration_value)
 989:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 990:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong SHS Pointer",
 991:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
 992:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong Group number selected",
 993:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
 994:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetOffsetCalibrationValue:Wrong gain level selected",
 995:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_0)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_1)||
 996:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (gain_level == XMC_VADC_SHS_GAIN_LEVEL_2)||(gain_level == XMC_VADC_SHS_GAIN_LEVEL_3))
 997:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
 998:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if ( XMC_VADC_GROUP_INDEX_0 == group_num)
 999:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1000:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 = (shs_ptr->CALOC0  & ~((uint32_t)SHS_CALOC0_CALOFFVAL0_Msk << (uint32_t)gain_l
1001:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC0_OFFWC_Msk;
1002:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC0 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
1003:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1004:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if ( XMC_VADC_GROUP_INDEX_1 == group_num)
1005:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1006:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 = (shs_ptr->CALOC1 & ~((uint32_t)SHS_CALOC1_CALOFFVAL0_Msk << (uint32_t)gain_le
1007:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                       (uint32_t)SHS_CALOC1_OFFWC_Msk;
1008:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     shs_ptr->CALOC1 |=  ((uint32_t)offset_calibration_value << (uint32_t)gain_level) | (uint32_t)SH
1009:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1010:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
1011:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1012:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* for MISRA */
1013:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1014:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
1015:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
1016:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1017:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set the values of sigma delta loop of the Sample and hold module*/
1018:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop(XMC_VADC_GLOBAL_SHS_t *const shs_ptr,
1019:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                            XMC_VADC_GROUP_INDEX_t group_num,
1020:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                            XMC_VADC_SHS_LOOP_CH_t loop_select,
1021:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                            uint8_t ch_num)
1022:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
1023:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong SHS Pointer",
1024:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                (shs_ptr == (XMC_VADC_GLOBAL_SHS_t*)(void*)SHS0))
1025:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Group number selected",
1026:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                (group_num == XMC_VADC_GROUP_INDEX_0)||(group_num == XMC_VADC_GROUP_INDEX_1))
1027:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Delta sigma loop selected",
1028:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (loop_select == XMC_VADC_SHS_LOOP_CH_0)||(loop_select == XMC_VADC_SHS_LOOP_CH_1))
1029:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_SHS_SetSigmaDeltaLoop:Wrong Channel Number",
1030:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1031:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1032:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP &= ~(((uint32_t)SHS_LOOP_LPCH0_Msk | (uint32_t)SHS_LOOP_LPSH0_Msk | (uint32_t)SHS_L
1033:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                      << (uint32_t)loop_select);
1034:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   shs_ptr->LOOP |= ((uint32_t)ch_num | ((uint32_t)group_num << (uint32_t)SHS_LOOP_LPSH0_Pos)) << (u
1035:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1036:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
1037:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1038:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
1039:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1040:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GSCAN_AVAILABLE == 1U)   
1041:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to initialize the group scan hardware of a kernel */
1042:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_SCAN_CONFIG_t *confi
1043:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2496              	 .loc 2 1043 0
 2497              	 .cfi_startproc
 2498              	 
 2499              	 
 2500 0000 80B5     	 push {r7,lr}
 2501              	.LCFI200:
 2502              	 .cfi_def_cfa_offset 8
 2503              	 .cfi_offset 7,-8
 2504              	 .cfi_offset 14,-4
 2505 0002 84B0     	 sub sp,sp,#16
 2506              	.LCFI201:
 2507              	 .cfi_def_cfa_offset 24
 2508 0004 00AF     	 add r7,sp,#0
 2509              	.LCFI202:
 2510              	 .cfi_def_cfa_register 7
 2511 0006 7860     	 str r0,[r7,#4]
 2512 0008 3960     	 str r1,[r7]
1044:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t      reg;
1045:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1046:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1047:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1048:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* All configurations have to be performed with the arbitration slot disabled */
1049:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2513              	 .loc 2 1049 0
 2514 000a 7868     	 ldr r0,[r7,#4]
 2515 000c FFF7FEFF 	 bl XMC_VADC_GROUP_ScanDisableArbitrationSlot
1050:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1051:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Read in the existing contents of arbitration priority register */
1052:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
 2516              	 .loc 2 1052 0
 2517 0010 7B68     	 ldr r3,[r7,#4]
 2518 0012 D3F88430 	 ldr r3,[r3,#132]
 2519 0016 FB60     	 str r3,[r7,#12]
1053:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1054:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program the priority of the request source */
1055:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   reg &= ~(uint32_t)VADC_G_ARBPR_PRIO1_Msk;
 2520              	 .loc 2 1055 0
 2521 0018 FB68     	 ldr r3,[r7,#12]
 2522 001a 23F03003 	 bic r3,r3,#48
 2523 001e FB60     	 str r3,[r7,#12]
1056:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO1_Pos);
 2524              	 .loc 2 1056 0
 2525 0020 3B68     	 ldr r3,[r7]
 2526 0022 1B78     	 ldrb r3,[r3]
 2527 0024 C3F38103 	 ubfx r3,r3,#2,#2
 2528 0028 DBB2     	 uxtb r3,r3
 2529 002a 1B01     	 lsls r3,r3,#4
 2530 002c FA68     	 ldr r2,[r7,#12]
 2531 002e 1343     	 orrs r3,r3,r2
 2532 0030 FB60     	 str r3,[r7,#12]
1057:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1058:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program the start mode */
1059:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 2533              	 .loc 2 1059 0
 2534 0032 3B68     	 ldr r3,[r7]
 2535 0034 1B78     	 ldrb r3,[r3]
 2536 0036 03F00303 	 and r3,r3,#3
 2537 003a DBB2     	 uxtb r3,r3
 2538 003c 002B     	 cmp r3,#0
 2539 003e 03D0     	 beq .L83
1060:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1061:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM1_Msk);
 2540              	 .loc 2 1061 0
 2541 0040 FB68     	 ldr r3,[r7,#12]
 2542 0042 43F08003 	 orr r3,r3,#128
 2543 0046 FB60     	 str r3,[r7,#12]
 2544              	.L83:
1062:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1063:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1064:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 2545              	 .loc 2 1064 0
 2546 0048 7B68     	 ldr r3,[r7,#4]
 2547 004a D3F88420 	 ldr r2,[r3,#132]
 2548 004e 0021     	 movs r1,#0
 2549 0050 FA68     	 ldr r2,[r7,#12]
 2550 0052 0A43     	 orrs r2,r2,r1
 2551 0054 C3F88420 	 str r2,[r3,#132]
1065:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1066:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL = (uint32_t)(config->asctrl |(VADC_G_ASCTRL_XTWC_Msk) |(VADC_G_ASCTRL_GTWC_Msk)
 2552              	 .loc 2 1066 0
 2553 0058 3B68     	 ldr r3,[r7]
 2554 005a D3F80130 	 ldr r3,[r3,#1]
 2555 005e 43F08023 	 orr r3,r3,#-2147450880
 2556 0062 43F40003 	 orr r3,r3,#8388608
 2557 0066 7A68     	 ldr r2,[r7,#4]
 2558 0068 D2F82011 	 ldr r1,[r2,#288]
 2559 006c 0021     	 movs r1,#0
 2560 006e 0B43     	 orrs r3,r3,r1
 2561 0070 C2F82031 	 str r3,[r2,#288]
1067:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                  (VADC_G_ASCTRL_TMWC_Msk));
1068:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1069:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR  = (uint32_t)((config->asmr)| (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VA
 2562              	 .loc 2 1069 0
 2563 0074 3B68     	 ldr r3,[r7]
 2564 0076 D3F80530 	 ldr r3,[r3,#5]
 2565 007a 43F00102 	 orr r2,r3,#1
 2566 007e 7B68     	 ldr r3,[r7,#4]
 2567 0080 D3F82411 	 ldr r1,[r3,#292]
 2568 0084 0021     	 movs r1,#0
 2569 0086 0A43     	 orrs r2,r2,r1
 2570 0088 C3F82421 	 str r2,[r3,#292]
1070:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1071:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 2571              	 .loc 2 1071 0
 2572 008c 3B68     	 ldr r3,[r7]
 2573 008e 1B78     	 ldrb r3,[r3]
 2574 0090 03F00303 	 and r3,r3,#3
 2575 0094 DBB2     	 uxtb r3,r3
 2576 0096 022B     	 cmp r3,#2
 2577 0098 0BD1     	 bne .L84
1072:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1073:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_RPTDIS_Msk;
 2578              	 .loc 2 1073 0
 2579 009a 7B68     	 ldr r3,[r7,#4]
 2580 009c D3F82431 	 ldr r3,[r3,#292]
 2581 00a0 43F48032 	 orr r2,r3,#65536
 2582 00a4 7B68     	 ldr r3,[r7,#4]
 2583 00a6 D3F82411 	 ldr r1,[r3,#292]
 2584 00aa 0021     	 movs r1,#0
 2585 00ac 0A43     	 orrs r2,r2,r1
 2586 00ae C3F82421 	 str r2,[r3,#292]
 2587              	.L84:
1074:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1075:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1076:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot now */
1077:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanEnableArbitrationSlot(group_ptr);
 2588              	 .loc 2 1077 0
 2589 00b2 7868     	 ldr r0,[r7,#4]
 2590 00b4 FFF7FEFF 	 bl XMC_VADC_GROUP_ScanEnableArbitrationSlot
1078:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1079:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2591              	 .loc 2 1079 0
 2592 00b8 1037     	 adds r7,r7,#16
 2593              	.LCFI203:
 2594              	 .cfi_def_cfa_offset 8
 2595 00ba BD46     	 mov sp,r7
 2596              	.LCFI204:
 2597              	 .cfi_def_cfa_register 13
 2598              	 
 2599 00bc 80BD     	 pop {r7,pc}
 2600              	 .cfi_endproc
 2601              	.LFE275:
 2603 00be 00BF     	 .section .text.XMC_VADC_GROUP_ScanSelectTrigger,"ax",%progbits
 2604              	 .align 2
 2605              	 .global XMC_VADC_GROUP_ScanSelectTrigger
 2606              	 .thumb
 2607              	 .thumb_func
 2609              	XMC_VADC_GROUP_ScanSelectTrigger:
 2610              	.LFB276:
1080:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1081:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger input for Group Scan request source */
1082:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTrigger(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_TRIGGER_INPUT_SEL
1083:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2611              	 .loc 2 1083 0
 2612              	 .cfi_startproc
 2613              	 
 2614              	 
 2615              	 
 2616 0000 80B4     	 push {r7}
 2617              	.LCFI205:
 2618              	 .cfi_def_cfa_offset 4
 2619              	 .cfi_offset 7,-4
 2620 0002 85B0     	 sub sp,sp,#20
 2621              	.LCFI206:
 2622              	 .cfi_def_cfa_offset 24
 2623 0004 00AF     	 add r7,sp,#0
 2624              	.LCFI207:
 2625              	 .cfi_def_cfa_register 7
 2626 0006 7860     	 str r0,[r7,#4]
 2627 0008 0B46     	 mov r3,r1
 2628 000a FB70     	 strb r3,[r7,#3]
1084:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1085:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1086:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1087:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTrigger:Wrong Trigger Port", ((trigger_input)< XMC_VADC_NUM_
1088:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1089:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2629              	 .loc 2 1089 0
 2630 000c 7B68     	 ldr r3,[r7,#4]
 2631 000e D3F82031 	 ldr r3,[r3,#288]
 2632 0012 FB60     	 str r3,[r7,#12]
1090:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2633              	 .loc 2 1090 0
 2634 0014 FB68     	 ldr r3,[r7,#12]
 2635 0016 43F40043 	 orr r3,r3,#32768
 2636 001a FB60     	 str r3,[r7,#12]
1091:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTSEL_Msk);
 2637              	 .loc 2 1091 0
 2638 001c FB68     	 ldr r3,[r7,#12]
 2639 001e 23F47063 	 bic r3,r3,#3840
 2640 0022 FB60     	 str r3,[r7,#12]
1092:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_input << VADC_G_ASCTRL_XTSEL_Pos);
 2641              	 .loc 2 1092 0
 2642 0024 FB78     	 ldrb r3,[r7,#3]
 2643 0026 1B02     	 lsls r3,r3,#8
 2644 0028 FA68     	 ldr r2,[r7,#12]
 2645 002a 1343     	 orrs r3,r3,r2
 2646 002c FB60     	 str r3,[r7,#12]
1093:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2647              	 .loc 2 1093 0
 2648 002e 7B68     	 ldr r3,[r7,#4]
 2649 0030 D3F82021 	 ldr r2,[r3,#288]
 2650 0034 0021     	 movs r1,#0
 2651 0036 FA68     	 ldr r2,[r7,#12]
 2652 0038 0A43     	 orrs r2,r2,r1
 2653 003a C3F82021 	 str r2,[r3,#288]
1094:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2654              	 .loc 2 1094 0
 2655 003e 1437     	 adds r7,r7,#20
 2656              	.LCFI208:
 2657              	 .cfi_def_cfa_offset 4
 2658 0040 BD46     	 mov sp,r7
 2659              	.LCFI209:
 2660              	 .cfi_def_cfa_register 13
 2661              	 
 2662 0042 5DF8047B 	 ldr r7,[sp],#4
 2663              	.LCFI210:
 2664              	 .cfi_restore 7
 2665              	 .cfi_def_cfa_offset 0
 2666 0046 7047     	 bx lr
 2667              	 .cfi_endproc
 2668              	.LFE276:
 2670              	 .section .text.XMC_VADC_GROUP_ScanSelectTriggerEdge,"ax",%progbits
 2671              	 .align 2
 2672              	 .global XMC_VADC_GROUP_ScanSelectTriggerEdge
 2673              	 .thumb
 2674              	 .thumb_func
 2676              	XMC_VADC_GROUP_ScanSelectTriggerEdge:
 2677              	.LFB277:
1095:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1096:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1097:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGER
1098:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2678              	 .loc 2 1098 0
 2679              	 .cfi_startproc
 2680              	 
 2681              	 
 2682              	 
 2683 0000 80B4     	 push {r7}
 2684              	.LCFI211:
 2685              	 .cfi_def_cfa_offset 4
 2686              	 .cfi_offset 7,-4
 2687 0002 85B0     	 sub sp,sp,#20
 2688              	.LCFI212:
 2689              	 .cfi_def_cfa_offset 24
 2690 0004 00AF     	 add r7,sp,#0
 2691              	.LCFI213:
 2692              	 .cfi_def_cfa_register 7
 2693 0006 7860     	 str r0,[r7,#4]
 2694 0008 0B46     	 mov r3,r1
 2695 000a FB70     	 strb r3,[r7,#3]
1099:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(g
1102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectTriggerEdge:Wrong Trigger Port", ((trigger_edge)<= XMC_VADC_
1103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2696              	 .loc 2 1104 0
 2697 000c 7B68     	 ldr r3,[r7,#4]
 2698 000e D3F82031 	 ldr r3,[r3,#288]
 2699 0012 FB60     	 str r3,[r7,#12]
1105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_G_ASCTRL_XTWC_Msk;
 2700              	 .loc 2 1105 0
 2701 0014 FB68     	 ldr r3,[r7,#12]
 2702 0016 43F40043 	 orr r3,r3,#32768
 2703 001a FB60     	 str r3,[r7,#12]
1106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_XTMODE_Msk);
 2704              	 .loc 2 1106 0
 2705 001c FB68     	 ldr r3,[r7,#12]
 2706 001e 23F4C043 	 bic r3,r3,#24576
 2707 0022 FB60     	 str r3,[r7,#12]
1107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_G_ASCTRL_XTMODE_Pos);
 2708              	 .loc 2 1107 0
 2709 0024 FB78     	 ldrb r3,[r7,#3]
 2710 0026 5B03     	 lsls r3,r3,#13
 2711 0028 FA68     	 ldr r2,[r7,#12]
 2712 002a 1343     	 orrs r3,r3,r2
 2713 002c FB60     	 str r3,[r7,#12]
1108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2714              	 .loc 2 1108 0
 2715 002e 7B68     	 ldr r3,[r7,#4]
 2716 0030 D3F82021 	 ldr r2,[r3,#288]
 2717 0034 0021     	 movs r1,#0
 2718 0036 FA68     	 ldr r2,[r7,#12]
 2719 0038 0A43     	 orrs r2,r2,r1
 2720 003a C3F82021 	 str r2,[r3,#288]
1109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2721              	 .loc 2 1109 0
 2722 003e 1437     	 adds r7,r7,#20
 2723              	.LCFI214:
 2724              	 .cfi_def_cfa_offset 4
 2725 0040 BD46     	 mov sp,r7
 2726              	.LCFI215:
 2727              	 .cfi_def_cfa_register 13
 2728              	 
 2729 0042 5DF8047B 	 ldr r7,[sp],#4
 2730              	.LCFI216:
 2731              	 .cfi_restore 7
 2732              	 .cfi_def_cfa_offset 0
 2733 0046 7047     	 bx lr
 2734              	 .cfi_endproc
 2735              	.LFE277:
 2737              	 .section .text.XMC_VADC_GROUP_ScanSelectGating,"ax",%progbits
 2738              	 .align 2
 2739              	 .global XMC_VADC_GROUP_ScanSelectGating
 2740              	 .thumb
 2741              	 .thumb_func
 2743              	XMC_VADC_GROUP_ScanSelectGating:
 2744              	.LFB278:
1110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gating input for Group Scan request source */
1112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSelectGating(XMC_VADC_GROUP_t *const group_ptr, XMC_VADC_GATE_INPUT_SELECT_
1113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2745              	 .loc 2 1113 0
 2746              	 .cfi_startproc
 2747              	 
 2748              	 
 2749              	 
 2750 0000 80B4     	 push {r7}
 2751              	.LCFI217:
 2752              	 .cfi_def_cfa_offset 4
 2753              	 .cfi_offset 7,-4
 2754 0002 85B0     	 sub sp,sp,#20
 2755              	.LCFI218:
 2756              	 .cfi_def_cfa_offset 24
 2757 0004 00AF     	 add r7,sp,#0
 2758              	.LCFI219:
 2759              	 .cfi_def_cfa_register 7
 2760 0006 7860     	 str r0,[r7,#4]
 2761 0008 0B46     	 mov r3,r1
 2762 000a FB70     	 strb r3,[r7,#3]
1114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
1117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSelectGating:Wrong Gating Port", ((gating_input)< XMC_VADC_NUM_POR
1118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      = group_ptr->ASCTRL;
 2763              	 .loc 2 1119 0
 2764 000c 7B68     	 ldr r3,[r7,#4]
 2765 000e D3F82031 	 ldr r3,[r3,#288]
 2766 0012 FB60     	 str r3,[r7,#12]
1120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)VADC_G_ASCTRL_GTWC_Msk;
 2767              	 .loc 2 1120 0
 2768 0014 FB68     	 ldr r3,[r7,#12]
 2769 0016 43F40003 	 orr r3,r3,#8388608
 2770 001a FB60     	 str r3,[r7,#12]
1121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_G_ASCTRL_GTSEL_Msk);
 2771              	 .loc 2 1121 0
 2772 001c FB68     	 ldr r3,[r7,#12]
 2773 001e 23F47023 	 bic r3,r3,#983040
 2774 0022 FB60     	 str r3,[r7,#12]
1122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)gating_input << VADC_G_ASCTRL_GTSEL_Pos);
 2775              	 .loc 2 1122 0
 2776 0024 FB78     	 ldrb r3,[r7,#3]
 2777 0026 1B04     	 lsls r3,r3,#16
 2778 0028 FA68     	 ldr r2,[r7,#12]
 2779 002a 1343     	 orrs r3,r3,r2
 2780 002c FB60     	 str r3,[r7,#12]
1123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL  = scanctrl;
 2781              	 .loc 2 1123 0
 2782 002e 7B68     	 ldr r3,[r7,#4]
 2783 0030 D3F82021 	 ldr r2,[r3,#288]
 2784 0034 0021     	 movs r1,#0
 2785 0036 FA68     	 ldr r2,[r7,#12]
 2786 0038 0A43     	 orrs r2,r2,r1
 2787 003a C3F82021 	 str r2,[r3,#288]
1124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2788              	 .loc 2 1124 0
 2789 003e 1437     	 adds r7,r7,#20
 2790              	.LCFI220:
 2791              	 .cfi_def_cfa_offset 4
 2792 0040 BD46     	 mov sp,r7
 2793              	.LCFI221:
 2794              	 .cfi_def_cfa_register 13
 2795              	 
 2796 0042 5DF8047B 	 ldr r7,[sp],#4
 2797              	.LCFI222:
 2798              	 .cfi_restore 7
 2799              	 .cfi_def_cfa_offset 0
 2800 0046 7047     	 bx lr
 2801              	 .cfi_endproc
 2802              	.LFE278:
 2804              	 .section .text.XMC_VADC_GROUP_ScanSequenceAbort,"ax",%progbits
 2805              	 .align 2
 2806              	 .global XMC_VADC_GROUP_ScanSequenceAbort
 2807              	 .thumb
 2808              	 .thumb_func
 2810              	XMC_VADC_GROUP_ScanSequenceAbort:
 2811              	.LFB279:
1125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to stop an ongoing conversion of a sequence */
1127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSequenceAbort(XMC_VADC_GROUP_t *const group_ptr)
1128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2812              	 .loc 2 1128 0
 2813              	 .cfi_startproc
 2814              	 
 2815              	 
 2816 0000 80B5     	 push {r7,lr}
 2817              	.LCFI223:
 2818              	 .cfi_def_cfa_offset 8
 2819              	 .cfi_offset 7,-8
 2820              	 .cfi_offset 14,-4
 2821 0002 84B0     	 sub sp,sp,#16
 2822              	.LCFI224:
 2823              	 .cfi_def_cfa_offset 24
 2824 0004 00AF     	 add r7,sp,#0
 2825              	.LCFI225:
 2826              	 .cfi_def_cfa_register 7
 2827 0006 7860     	 str r0,[r7,#4]
1129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t asctrl;
1130:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1131:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1132:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSequenceAbort:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1133:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1134:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1135:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   asctrl = group_ptr->ASCTRL;
 2828              	 .loc 2 1135 0
 2829 0008 7B68     	 ldr r3,[r7,#4]
 2830 000a D3F82031 	 ldr r3,[r3,#288]
 2831 000e FB60     	 str r3,[r7,#12]
1136:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1137:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL =(0U | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
 2832              	 .loc 2 1137 0
 2833 0010 7A68     	 ldr r2,[r7,#4]
 2834 0012 D2F82031 	 ldr r3,[r2,#288]
 2835 0016 0023     	 movs r3,#0
 2836 0018 43F08023 	 orr r3,r3,#-2147450880
 2837 001c 43F40003 	 orr r3,r3,#8388608
 2838 0020 C2F82031 	 str r3,[r2,#288]
1138:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
1139:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1140:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* To disable Arbitration before abort*/
1141:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN1_Pos) & 1U);
 2839              	 .loc 2 1141 0
 2840 0024 7B68     	 ldr r3,[r7,#4]
 2841 0026 D3F88430 	 ldr r3,[r3,#132]
 2842 002a 5B0E     	 lsrs r3,r3,#25
 2843 002c 03F00103 	 and r3,r3,#1
 2844 0030 002B     	 cmp r3,#0
 2845 0032 14BF     	 ite ne
 2846 0034 0123     	 movne r3,#1
 2847 0036 0023     	 moveq r3,#0
 2848 0038 FB72     	 strb r3,[r7,#11]
1142:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_ScanDisableArbitrationSlot(group_ptr);
 2849              	 .loc 2 1142 0
 2850 003a 7868     	 ldr r0,[r7,#4]
 2851 003c FFF7FEFF 	 bl XMC_VADC_GROUP_ScanDisableArbitrationSlot
1143:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1144:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR &= ~((uint32_t)VADC_G_ASMR_ENGT_Msk);
 2852              	 .loc 2 1144 0
 2853 0040 7B68     	 ldr r3,[r7,#4]
 2854 0042 D3F82431 	 ldr r3,[r3,#292]
 2855 0046 23F00302 	 bic r2,r3,#3
 2856 004a 7B68     	 ldr r3,[r7,#4]
 2857 004c D3F82411 	 ldr r1,[r3,#292]
 2858 0050 0021     	 movs r1,#0
 2859 0052 0A43     	 orrs r2,r2,r1
 2860 0054 C3F82421 	 str r2,[r3,#292]
1145:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASMR |= (uint32_t)VADC_G_ASMR_CLRPND_Msk;
 2861              	 .loc 2 1145 0
 2862 0058 7B68     	 ldr r3,[r7,#4]
 2863 005a D3F82431 	 ldr r3,[r3,#292]
 2864 005e 43F48072 	 orr r2,r3,#256
 2865 0062 7B68     	 ldr r3,[r7,#4]
 2866 0064 D3F82411 	 ldr r1,[r3,#292]
 2867 0068 0021     	 movs r1,#0
 2868 006a 0A43     	 orrs r2,r2,r1
 2869 006c C3F82421 	 str r2,[r3,#292]
1146:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1147:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* Enable the arbitration slot 1*/
1148:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN1_Pos);
 2870              	 .loc 2 1148 0
 2871 0070 7B68     	 ldr r3,[r7,#4]
 2872 0072 D3F88420 	 ldr r2,[r3,#132]
 2873 0076 FB7A     	 ldrb r3,[r7,#11]
 2874 0078 5B06     	 lsls r3,r3,#25
 2875 007a 1A43     	 orrs r2,r2,r3
 2876 007c 7B68     	 ldr r3,[r7,#4]
 2877 007e D3F88410 	 ldr r1,[r3,#132]
 2878 0082 0021     	 movs r1,#0
 2879 0084 0A43     	 orrs r2,r2,r1
 2880 0086 C3F88420 	 str r2,[r3,#132]
1149:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1150:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASCTRL =(asctrl | (uint32_t)VADC_G_ASCTRL_XTWC_Msk |
1152:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
 2881              	 .loc 2 1152 0
 2882 008a FB68     	 ldr r3,[r7,#12]
 2883 008c 43F08023 	 orr r3,r3,#-2147450880
 2884 0090 43F40003 	 orr r3,r3,#8388608
1151:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_ASCTRL_GTWC_Msk | (uint32_t)VADC_G_ASCTRL_TMWC_M
 2885              	 .loc 2 1151 0
 2886 0094 7A68     	 ldr r2,[r7,#4]
 2887 0096 D2F82011 	 ldr r1,[r2,#288]
 2888 009a 0021     	 movs r1,#0
 2889 009c 0B43     	 orrs r3,r3,r1
 2890 009e C2F82031 	 str r3,[r2,#288]
1153:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2891              	 .loc 2 1153 0
 2892 00a2 1037     	 adds r7,r7,#16
 2893              	.LCFI226:
 2894              	 .cfi_def_cfa_offset 8
 2895 00a4 BD46     	 mov sp,r7
 2896              	.LCFI227:
 2897              	 .cfi_def_cfa_register 13
 2898              	 
 2899 00a6 80BD     	 pop {r7,pc}
 2900              	 .cfi_endproc
 2901              	.LFE279:
 2903              	 .section .text.XMC_VADC_GROUP_ScanGetNumChannelsPending,"ax",%progbits
 2904              	 .align 2
 2905              	 .global XMC_VADC_GROUP_ScanGetNumChannelsPending
 2906              	 .thumb
 2907              	 .thumb_func
 2909              	XMC_VADC_GROUP_ScanGetNumChannelsPending:
 2910              	.LFB280:
1154:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1155:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to find out number of channels awaiting conversion */
1156:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_ScanGetNumChannelsPending(XMC_VADC_GROUP_t *const group_ptr)
1157:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2911              	 .loc 2 1157 0
 2912              	 .cfi_startproc
 2913              	 
 2914              	 
 2915              	 
 2916 0000 80B4     	 push {r7}
 2917              	.LCFI228:
 2918              	 .cfi_def_cfa_offset 4
 2919              	 .cfi_offset 7,-4
 2920 0002 87B0     	 sub sp,sp,#28
 2921              	.LCFI229:
 2922              	 .cfi_def_cfa_offset 32
 2923 0004 00AF     	 add r7,sp,#0
 2924              	.LCFI230:
 2925              	 .cfi_def_cfa_register 7
 2926 0006 7860     	 str r0,[r7,#4]
1158:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1159:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1160:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1161:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1162:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanGetNumChannelsPending:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1163:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1164:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1165:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   count = 0U;
 2927              	 .loc 2 1165 0
 2928 0008 0023     	 movs r3,#0
 2929 000a FB60     	 str r3,[r7,#12]
1166:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1167:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (group_ptr->ASPND)
 2930              	 .loc 2 1167 0
 2931 000c 7B68     	 ldr r3,[r7,#4]
 2932 000e D3F82C31 	 ldr r3,[r3,#300]
 2933 0012 002B     	 cmp r3,#0
 2934 0014 17D0     	 beq .L90
1168:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1169:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     reg = group_ptr->ASPND;
 2935              	 .loc 2 1169 0
 2936 0016 7B68     	 ldr r3,[r7,#4]
 2937 0018 D3F82C31 	 ldr r3,[r3,#300]
 2938 001c 7B61     	 str r3,[r7,#20]
1170:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     for(i=0U;i<XMC_VADC_NUM_CHANNELS_PER_GROUP;i++)
 2939              	 .loc 2 1171 0
 2940 001e 0023     	 movs r3,#0
 2941 0020 3B61     	 str r3,[r7,#16]
 2942 0022 0DE0     	 b .L91
 2943              	.L93:
1172:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
1173:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       if (reg & 1U)
 2944              	 .loc 2 1173 0
 2945 0024 7B69     	 ldr r3,[r7,#20]
 2946 0026 03F00103 	 and r3,r3,#1
 2947 002a 002B     	 cmp r3,#0
 2948 002c 02D0     	 beq .L92
1174:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       {
1175:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****         count++;
 2949              	 .loc 2 1175 0
 2950 002e FB68     	 ldr r3,[r7,#12]
 2951 0030 0133     	 adds r3,r3,#1
 2952 0032 FB60     	 str r3,[r7,#12]
 2953              	.L92:
1176:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       }
1177:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       reg = (uint32_t)(reg >> (uint32_t)1);
 2954              	 .loc 2 1177 0 discriminator 2
 2955 0034 7B69     	 ldr r3,[r7,#20]
 2956 0036 5B08     	 lsrs r3,r3,#1
 2957 0038 7B61     	 str r3,[r7,#20]
1171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
 2958              	 .loc 2 1171 0 discriminator 2
 2959 003a 3B69     	 ldr r3,[r7,#16]
 2960 003c 0133     	 adds r3,r3,#1
 2961 003e 3B61     	 str r3,[r7,#16]
 2962              	.L91:
1171:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
 2963              	 .loc 2 1171 0 is_stmt 0 discriminator 1
 2964 0040 3B69     	 ldr r3,[r7,#16]
 2965 0042 072B     	 cmp r3,#7
 2966 0044 EED9     	 bls .L93
 2967              	.L90:
1178:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
1179:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1180:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1181:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return count;
 2968              	 .loc 2 1181 0 is_stmt 1
 2969 0046 FB68     	 ldr r3,[r7,#12]
1182:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 2970              	 .loc 2 1182 0
 2971 0048 1846     	 mov r0,r3
 2972 004a 1C37     	 adds r7,r7,#28
 2973              	.LCFI231:
 2974              	 .cfi_def_cfa_offset 4
 2975 004c BD46     	 mov sp,r7
 2976              	.LCFI232:
 2977              	 .cfi_def_cfa_register 13
 2978              	 
 2979 004e 5DF8047B 	 ldr r7,[sp],#4
 2980              	.LCFI233:
 2981              	 .cfi_restore 7
 2982              	 .cfi_def_cfa_offset 0
 2983 0052 7047     	 bx lr
 2984              	 .cfi_endproc
 2985              	.LFE280:
 2987              	 .section .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode,"ax",%progbits
 2988              	 .align 2
 2989              	 .global XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
 2990              	 .thumb
 2991              	 .thumb_func
 2993              	XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:
 2994              	.LFB281:
1183:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1184:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for request source event */
1185:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_VA
1186:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 2995              	 .loc 2 1186 0
 2996              	 .cfi_startproc
 2997              	 
 2998              	 
 2999              	 
 3000 0000 80B4     	 push {r7}
 3001              	.LCFI234:
 3002              	 .cfi_def_cfa_offset 4
 3003              	 .cfi_offset 7,-4
 3004 0002 85B0     	 sub sp,sp,#20
 3005              	.LCFI235:
 3006              	 .cfi_def_cfa_offset 24
 3007 0004 00AF     	 add r7,sp,#0
 3008              	.LCFI236:
 3009              	 .cfi_def_cfa_register 7
 3010 0006 7860     	 str r0,[r7,#4]
 3011 0008 0B46     	 mov r3,r1
 3012 000a FB70     	 strb r3,[r7,#3]
1187:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1188:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 3013              	 .loc 2 1188 0
 3014 000c 7B68     	 ldr r3,[r7,#4]
 3015 000e D3F8C031 	 ldr r3,[r3,#448]
 3016 0012 FB60     	 str r3,[r7,#12]
1189:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1190:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_G
1191:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_
1192:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1193:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV1NP_Msk);
 3017              	 .loc 2 1193 0
 3018 0014 FB68     	 ldr r3,[r7,#12]
 3019 0016 23F0F003 	 bic r3,r3,#240
 3020 001a FB60     	 str r3,[r7,#12]
1194:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV1NP_Pos);
 3021              	 .loc 2 1194 0
 3022 001c FB78     	 ldrb r3,[r7,#3]
 3023 001e 1B01     	 lsls r3,r3,#4
 3024 0020 FA68     	 ldr r2,[r7,#12]
 3025 0022 1343     	 orrs r3,r3,r2
 3026 0024 FB60     	 str r3,[r7,#12]
1195:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1196:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
 3027              	 .loc 2 1196 0
 3028 0026 7B68     	 ldr r3,[r7,#4]
 3029 0028 D3F8C021 	 ldr r2,[r3,#448]
 3030 002c 0021     	 movs r1,#0
 3031 002e FA68     	 ldr r2,[r7,#12]
 3032 0030 0A43     	 orrs r2,r2,r1
 3033 0032 C3F8C021 	 str r2,[r3,#448]
1197:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3034              	 .loc 2 1197 0
 3035 0036 1437     	 adds r7,r7,#20
 3036              	.LCFI237:
 3037              	 .cfi_def_cfa_offset 4
 3038 0038 BD46     	 mov sp,r7
 3039              	.LCFI238:
 3040              	 .cfi_def_cfa_register 13
 3041              	 
 3042 003a 5DF8047B 	 ldr r7,[sp],#4
 3043              	.LCFI239:
 3044              	 .cfi_restore 7
 3045              	 .cfi_def_cfa_offset 0
 3046 003e 7047     	 bx lr
 3047              	 .cfi_endproc
 3048              	.LFE281:
 3050              	 .section .text.XMC_VADC_GROUP_ScanRemoveChannel,"ax",%progbits
 3051              	 .align 2
 3052              	 .global XMC_VADC_GROUP_ScanRemoveChannel
 3053              	 .thumb
 3054              	 .thumb_func
 3056              	XMC_VADC_GROUP_ScanRemoveChannel:
 3057              	.LFB282:
1198:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1199:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Removes the selected channel from conversion*/
1200:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ScanRemoveChannel(XMC_VADC_GROUP_t *const group_ptr, const uint32_t channel_num
1201:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3058              	 .loc 2 1201 0
 3059              	 .cfi_startproc
 3060              	 
 3061              	 
 3062              	 
 3063 0000 80B4     	 push {r7}
 3064              	.LCFI240:
 3065              	 .cfi_def_cfa_offset 4
 3066              	 .cfi_offset 7,-4
 3067 0002 85B0     	 sub sp,sp,#20
 3068              	.LCFI241:
 3069              	 .cfi_def_cfa_offset 24
 3070 0004 00AF     	 add r7,sp,#0
 3071              	.LCFI242:
 3072              	 .cfi_def_cfa_register 7
 3073 0006 7860     	 str r0,[r7,#4]
 3074 0008 3960     	 str r1,[r7]
1202:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t assel;
1203:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1204:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanRemoveChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1205:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ScanRemoveChannel:Wrong channel number", ((channel_num)< XMC_VADC_NUM_
1206:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1207:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   assel = group_ptr->ASSEL; 
 3075              	 .loc 2 1207 0
 3076 000a 7B68     	 ldr r3,[r7,#4]
 3077 000c D3F82831 	 ldr r3,[r3,#296]
 3078 0010 FB60     	 str r3,[r7,#12]
1208:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   assel &= (~( 1 << channel_num));
 3079              	 .loc 2 1208 0
 3080 0012 3B68     	 ldr r3,[r7]
 3081 0014 0122     	 movs r2,#1
 3082 0016 02FA03F3 	 lsl r3,r2,r3
 3083 001a DB43     	 mvns r3,r3
 3084 001c 1A46     	 mov r2,r3
 3085 001e FB68     	 ldr r3,[r7,#12]
 3086 0020 1340     	 ands r3,r3,r2
 3087 0022 FB60     	 str r3,[r7,#12]
1209:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ASSEL  = assel;
 3088              	 .loc 2 1209 0
 3089 0024 7B68     	 ldr r3,[r7,#4]
 3090 0026 D3F82821 	 ldr r2,[r3,#296]
 3091 002a 0021     	 movs r1,#0
 3092 002c FA68     	 ldr r2,[r7,#12]
 3093 002e 0A43     	 orrs r2,r2,r1
 3094 0030 C3F82821 	 str r2,[r3,#296]
1210:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3095              	 .loc 2 1210 0
 3096 0034 1437     	 adds r7,r7,#20
 3097              	.LCFI243:
 3098              	 .cfi_def_cfa_offset 4
 3099 0036 BD46     	 mov sp,r7
 3100              	.LCFI244:
 3101              	 .cfi_def_cfa_register 13
 3102              	 
 3103 0038 5DF8047B 	 ldr r7,[sp],#4
 3104              	.LCFI245:
 3105              	 .cfi_restore 7
 3106              	 .cfi_def_cfa_offset 0
 3107 003c 7047     	 bx lr
 3108              	 .cfi_endproc
 3109              	.LFE282:
 3111 003e 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundInit,"ax",%progbits
 3112              	 .align 2
 3113              	 .global XMC_VADC_GLOBAL_BackgroundInit
 3114              	 .thumb
 3115              	 .thumb_func
 3117              	XMC_VADC_GLOBAL_BackgroundInit:
 3118              	.LFB283:
1211:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
1212:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1213:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to initialize background scan request source hardware */
1214:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundInit(XMC_VADC_GLOBAL_t *const global_ptr, const XMC_VADC_BACKGROUND_
1215:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3119              	 .loc 2 1215 0
 3120              	 .cfi_startproc
 3121              	 
 3122              	 
 3123 0000 80B5     	 push {r7,lr}
 3124              	.LCFI246:
 3125              	 .cfi_def_cfa_offset 8
 3126              	 .cfi_offset 7,-8
 3127              	 .cfi_offset 14,-4
 3128 0002 86B0     	 sub sp,sp,#24
 3129              	.LCFI247:
 3130              	 .cfi_def_cfa_offset 32
 3131 0004 00AF     	 add r7,sp,#0
 3132              	.LCFI248:
 3133              	 .cfi_def_cfa_register 7
 3134 0006 7860     	 str r0,[r7,#4]
 3135 0008 3960     	 str r1,[r7]
1216:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1217:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint8_t i;
1218:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1219:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t conv_start_mask;
1220:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #endif
1221:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1222:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundInit:Wrong Module Pointer", (global_ptr == VADC))
1223:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1224:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3136              	 .loc 2 1225 0
 3137 000a 0023     	 movs r3,#0
 3138 000c FB75     	 strb r3,[r7,#23]
 3139 000e 09E0     	 b .L98
 3140              	.L99:
1226:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1227:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 3141              	 .loc 2 1227 0 discriminator 3
 3142 0010 FB7D     	 ldrb r3,[r7,#23]
 3143 0012 424A     	 ldr r2,.L106
 3144 0014 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3145 0018 1846     	 mov r0,r3
 3146 001a FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
1225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3147              	 .loc 2 1225 0 discriminator 3
 3148 001e FB7D     	 ldrb r3,[r7,#23]
 3149 0020 0133     	 adds r3,r3,#1
 3150 0022 FB75     	 strb r3,[r7,#23]
 3151              	.L98:
1225:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3152              	 .loc 2 1225 0 is_stmt 0 discriminator 1
 3153 0024 FB7D     	 ldrb r3,[r7,#23]
 3154 0026 032B     	 cmp r3,#3
 3155 0028 F2D9     	 bls .L99
1228:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1229:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1230:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   conv_start_mask = (uint32_t) 0;
 3156              	 .loc 2 1230 0 is_stmt 1
 3157 002a 0023     	 movs r3,#0
 3158 002c 3B61     	 str r3,[r7,#16]
1231:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)config->conv_start_mode)
 3159              	 .loc 2 1231 0
 3160 002e 3B68     	 ldr r3,[r7]
 3161 0030 1B78     	 ldrb r3,[r3]
 3162 0032 03F00303 	 and r3,r3,#3
 3163 0036 DBB2     	 uxtb r3,r3
 3164 0038 002B     	 cmp r3,#0
 3165 003a 02D0     	 beq .L100
1232:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1233:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     conv_start_mask = (uint32_t)VADC_G_ARBPR_CSM2_Msk;
 3166              	 .loc 2 1233 0
 3167 003c 4FF40063 	 mov r3,#2048
 3168 0040 3B61     	 str r3,[r7,#16]
 3169              	.L100:
1234:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1235:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   for(i=0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3170              	 .loc 2 1236 0
 3171 0042 0023     	 movs r3,#0
 3172 0044 FB75     	 strb r3,[r7,#23]
 3173 0046 25E0     	 b .L101
 3174              	.L102:
1237:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1238:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     reg = g_xmc_vadc_group_array[i]->ARBPR;
 3175              	 .loc 2 1238 0 discriminator 3
 3176 0048 FB7D     	 ldrb r3,[r7,#23]
 3177 004a 344A     	 ldr r2,.L106
 3178 004c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3179 0050 D3F88430 	 ldr r3,[r3,#132]
 3180 0054 FB60     	 str r3,[r7,#12]
1239:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1240:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     reg &= ~(uint32_t)(VADC_G_ARBPR_PRIO2_Msk);
 3181              	 .loc 2 1240 0 discriminator 3
 3182 0056 FB68     	 ldr r3,[r7,#12]
 3183 0058 23F44073 	 bic r3,r3,#768
 3184 005c FB60     	 str r3,[r7,#12]
1241:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1242:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* Program the priority of the request source */
1243:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO2_Pos);
 3185              	 .loc 2 1243 0 discriminator 3
 3186 005e 3B68     	 ldr r3,[r7]
 3187 0060 1B78     	 ldrb r3,[r3]
 3188 0062 C3F38103 	 ubfx r3,r3,#2,#2
 3189 0066 DBB2     	 uxtb r3,r3
 3190 0068 1B02     	 lsls r3,r3,#8
 3191 006a FA68     	 ldr r2,[r7,#12]
 3192 006c 1343     	 orrs r3,r3,r2
 3193 006e FB60     	 str r3,[r7,#12]
1244:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1245:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* Program the start mode */
1246:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     reg |= conv_start_mask;
 3194              	 .loc 2 1246 0 discriminator 3
 3195 0070 FA68     	 ldr r2,[r7,#12]
 3196 0072 3B69     	 ldr r3,[r7,#16]
 3197 0074 1343     	 orrs r3,r3,r2
 3198 0076 FB60     	 str r3,[r7,#12]
1247:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1248:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     g_xmc_vadc_group_array[i]->ARBPR = reg;
 3199              	 .loc 2 1248 0 discriminator 3
 3200 0078 FB7D     	 ldrb r3,[r7,#23]
 3201 007a 284A     	 ldr r2,.L106
 3202 007c 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3203 0080 D3F88420 	 ldr r2,[r3,#132]
 3204 0084 0021     	 movs r1,#0
 3205 0086 FA68     	 ldr r2,[r7,#12]
 3206 0088 0A43     	 orrs r2,r2,r1
 3207 008a C3F88420 	 str r2,[r3,#132]
1236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3208              	 .loc 2 1236 0 discriminator 3
 3209 008e FB7D     	 ldrb r3,[r7,#23]
 3210 0090 0133     	 adds r3,r3,#1
 3211 0092 FB75     	 strb r3,[r7,#23]
 3212              	.L101:
1236:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3213              	 .loc 2 1236 0 is_stmt 0 discriminator 1
 3214 0094 FB7D     	 ldrb r3,[r7,#23]
 3215 0096 032B     	 cmp r3,#3
 3216 0098 D6D9     	 bls .L102
1249:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1250:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1251:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #endif
1252:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1253:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* program BRSCTRL register */
1254:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL = (uint32_t)(config->asctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VAD
 3217              	 .loc 2 1254 0 is_stmt 1
 3218 009a 3B68     	 ldr r3,[r7]
 3219 009c D3F80130 	 ldr r3,[r3,#1]
 3220 00a0 43F40003 	 orr r3,r3,#8388608
 3221 00a4 43F40043 	 orr r3,r3,#32768
 3222 00a8 7A68     	 ldr r2,[r7,#4]
 3223 00aa D2F80012 	 ldr r1,[r2,#512]
 3224 00ae 0021     	 movs r1,#0
 3225 00b0 0B43     	 orrs r3,r3,r1
 3226 00b2 C2F80032 	 str r3,[r2,#512]
1255:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1256:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* program BRSMR register */
1257:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR = (uint32_t)((config->asmr)| (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << V
 3227              	 .loc 2 1257 0
 3228 00b6 3B68     	 ldr r3,[r7]
 3229 00b8 D3F80530 	 ldr r3,[r3,#5]
 3230 00bc 43F00102 	 orr r2,r3,#1
 3231 00c0 7B68     	 ldr r3,[r7,#4]
 3232 00c2 D3F80412 	 ldr r1,[r3,#516]
 3233 00c6 0021     	 movs r1,#0
 3234 00c8 0A43     	 orrs r2,r2,r1
 3235 00ca C3F80422 	 str r2,[r3,#516]
1258:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1259:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1260:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode))
 3236              	 .loc 2 1260 0
 3237 00ce 3B68     	 ldr r3,[r7]
 3238 00d0 1B78     	 ldrb r3,[r3]
 3239 00d2 03F00303 	 and r3,r3,#3
 3240 00d6 DBB2     	 uxtb r3,r3
 3241 00d8 022B     	 cmp r3,#2
 3242 00da 0BD1     	 bne .L103
1261:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1262:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_RPTDIS_Msk;
 3243              	 .loc 2 1262 0
 3244 00dc 7B68     	 ldr r3,[r7,#4]
 3245 00de D3F80432 	 ldr r3,[r3,#516]
 3246 00e2 43F48032 	 orr r2,r3,#65536
 3247 00e6 7B68     	 ldr r3,[r7,#4]
 3248 00e8 D3F80412 	 ldr r1,[r3,#516]
 3249 00ec 0021     	 movs r1,#0
 3250 00ee 0A43     	 orrs r2,r2,r1
 3251 00f0 C3F80422 	 str r2,[r3,#516]
 3252              	.L103:
1263:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1264:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
1265:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1266:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3253              	 .loc 2 1267 0
 3254 00f4 0023     	 movs r3,#0
 3255 00f6 FB75     	 strb r3,[r7,#23]
 3256 00f8 09E0     	 b .L104
 3257              	.L105:
1268:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1269:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 3258              	 .loc 2 1269 0 discriminator 3
 3259 00fa FB7D     	 ldrb r3,[r7,#23]
 3260 00fc 074A     	 ldr r2,.L106
 3261 00fe 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3262 0102 1846     	 mov r0,r3
 3263 0104 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
1267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3264              	 .loc 2 1267 0 discriminator 3
 3265 0108 FB7D     	 ldrb r3,[r7,#23]
 3266 010a 0133     	 adds r3,r3,#1
 3267 010c FB75     	 strb r3,[r7,#23]
 3268              	.L104:
1267:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3269              	 .loc 2 1267 0 is_stmt 0 discriminator 1
 3270 010e FB7D     	 ldrb r3,[r7,#23]
 3271 0110 032B     	 cmp r3,#3
 3272 0112 F2D9     	 bls .L105
1270:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1271:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   #endif
1272:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1273:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3273              	 .loc 2 1273 0 is_stmt 1
 3274 0114 1837     	 adds r7,r7,#24
 3275              	.LCFI249:
 3276              	 .cfi_def_cfa_offset 8
 3277 0116 BD46     	 mov sp,r7
 3278              	.LCFI250:
 3279              	 .cfi_def_cfa_register 13
 3280              	 
 3281 0118 80BD     	 pop {r7,pc}
 3282              	.L107:
 3283 011a 00BF     	 .align 2
 3284              	.L106:
 3285 011c 00000000 	 .word g_xmc_vadc_group_array
 3286              	 .cfi_endproc
 3287              	.LFE283:
 3289              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger,"ax",%progbits
 3290              	 .align 2
 3291              	 .global XMC_VADC_GLOBAL_BackgroundSelectTrigger
 3292              	 .thumb
 3293              	 .thumb_func
 3295              	XMC_VADC_GLOBAL_BackgroundSelectTrigger:
 3296              	.LFB284:
1274:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1275:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger for background scan request source */
1276:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTrigger(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t in
1277:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3297              	 .loc 2 1277 0
 3298              	 .cfi_startproc
 3299              	 
 3300              	 
 3301              	 
 3302 0000 80B4     	 push {r7}
 3303              	.LCFI251:
 3304              	 .cfi_def_cfa_offset 4
 3305              	 .cfi_offset 7,-4
 3306 0002 85B0     	 sub sp,sp,#20
 3307              	.LCFI252:
 3308              	 .cfi_def_cfa_offset 24
 3309 0004 00AF     	 add r7,sp,#0
 3310              	.LCFI253:
 3311              	 .cfi_def_cfa_register 7
 3312 0006 7860     	 str r0,[r7,#4]
 3313 0008 3960     	 str r1,[r7]
1278:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1279:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1280:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("VADC_BCKGND_SelectTriggerInput:Wrong Module Pointer", (global_ptr == VADC))
1281:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTrigger:Wrong Trigger Port", ((input_num)< XMC_VADC_N
1282:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1283:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1284:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 3314              	 .loc 2 1284 0
 3315 000a 7B68     	 ldr r3,[r7,#4]
 3316 000c D3F80032 	 ldr r3,[r3,#512]
 3317 0010 FB60     	 str r3,[r7,#12]
1285:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_XTWC_Msk;
 3318              	 .loc 2 1285 0
 3319 0012 FB68     	 ldr r3,[r7,#12]
 3320 0014 43F40043 	 orr r3,r3,#32768
 3321 0018 FB60     	 str r3,[r7,#12]
1286:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_XTSEL_Msk);
 3322              	 .loc 2 1286 0
 3323 001a FB68     	 ldr r3,[r7,#12]
 3324 001c 23F47063 	 bic r3,r3,#3840
 3325 0020 FB60     	 str r3,[r7,#12]
1287:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_XTSEL_Pos);
 3326              	 .loc 2 1287 0
 3327 0022 3B68     	 ldr r3,[r7]
 3328 0024 1B02     	 lsls r3,r3,#8
 3329 0026 FA68     	 ldr r2,[r7,#12]
 3330 0028 1343     	 orrs r3,r3,r2
 3331 002a FB60     	 str r3,[r7,#12]
1288:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 3332              	 .loc 2 1288 0
 3333 002c 7B68     	 ldr r3,[r7,#4]
 3334 002e D3F80022 	 ldr r2,[r3,#512]
 3335 0032 0021     	 movs r1,#0
 3336 0034 FA68     	 ldr r2,[r7,#12]
 3337 0036 0A43     	 orrs r2,r2,r1
 3338 0038 C3F80022 	 str r2,[r3,#512]
1289:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3339              	 .loc 2 1289 0
 3340 003c 1437     	 adds r7,r7,#20
 3341              	.LCFI254:
 3342              	 .cfi_def_cfa_offset 4
 3343 003e BD46     	 mov sp,r7
 3344              	.LCFI255:
 3345              	 .cfi_def_cfa_register 13
 3346              	 
 3347 0040 5DF8047B 	 ldr r7,[sp],#4
 3348              	.LCFI256:
 3349              	 .cfi_restore 7
 3350              	 .cfi_def_cfa_offset 0
 3351 0044 7047     	 bx lr
 3352              	 .cfi_endproc
 3353              	.LFE284:
 3355 0046 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge,"ax",%progbits
 3356              	 .align 2
 3357              	 .global XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
 3358              	 .thumb
 3359              	 .thumb_func
 3361              	XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:
 3362              	.LFB285:
1290:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1291:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1292:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge(XMC_VADC_GLOBAL_t *const global_ptr,
1293:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                  const XMC_VADC_TRIGGER_EDGE_t trigger_edge)
1294:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3363              	 .loc 2 1294 0
 3364              	 .cfi_startproc
 3365              	 
 3366              	 
 3367              	 
 3368 0000 80B4     	 push {r7}
 3369              	.LCFI257:
 3370              	 .cfi_def_cfa_offset 4
 3371              	 .cfi_offset 7,-4
 3372 0002 85B0     	 sub sp,sp,#20
 3373              	.LCFI258:
 3374              	 .cfi_def_cfa_offset 24
 3375 0004 00AF     	 add r7,sp,#0
 3376              	.LCFI259:
 3377              	 .cfi_def_cfa_register 7
 3378 0006 7860     	 str r0,[r7,#4]
 3379 0008 0B46     	 mov r3,r1
 3380 000a FB70     	 strb r3,[r7,#3]
1295:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1296:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1297:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Global Pointer", (global_ptr == VAD
1298:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:Wrong Trigger Port",
1299:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****             ((trigger_edge)<= XMC_VADC_TRIGGER_EDGE_ANY))
1300:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1301:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      = global_ptr->BRSCTRL;
 3381              	 .loc 2 1301 0
 3382 000c 7B68     	 ldr r3,[r7,#4]
 3383 000e D3F80032 	 ldr r3,[r3,#512]
 3384 0012 FB60     	 str r3,[r7,#12]
1302:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t) VADC_BRSCTRL_XTWC_Msk;
 3385              	 .loc 2 1302 0
 3386 0014 FB68     	 ldr r3,[r7,#12]
 3387 0016 43F40043 	 orr r3,r3,#32768
 3388 001a FB60     	 str r3,[r7,#12]
1303:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     &= ~((uint32_t)VADC_BRSCTRL_XTMODE_Msk);
 3389              	 .loc 2 1303 0
 3390 001c FB68     	 ldr r3,[r7,#12]
 3391 001e 23F4C043 	 bic r3,r3,#24576
 3392 0022 FB60     	 str r3,[r7,#12]
1304:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl     |= (uint32_t)((uint32_t)trigger_edge << VADC_BRSCTRL_XTMODE_Pos);
 3393              	 .loc 2 1304 0
 3394 0024 FB78     	 ldrb r3,[r7,#3]
 3395 0026 5B03     	 lsls r3,r3,#13
 3396 0028 FA68     	 ldr r2,[r7,#12]
 3397 002a 1343     	 orrs r3,r3,r2
 3398 002c FB60     	 str r3,[r7,#12]
1305:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 3399              	 .loc 2 1305 0
 3400 002e 7B68     	 ldr r3,[r7,#4]
 3401 0030 D3F80022 	 ldr r2,[r3,#512]
 3402 0034 0021     	 movs r1,#0
 3403 0036 FA68     	 ldr r2,[r7,#12]
 3404 0038 0A43     	 orrs r2,r2,r1
 3405 003a C3F80022 	 str r2,[r3,#512]
1306:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3406              	 .loc 2 1306 0
 3407 003e 1437     	 adds r7,r7,#20
 3408              	.LCFI260:
 3409              	 .cfi_def_cfa_offset 4
 3410 0040 BD46     	 mov sp,r7
 3411              	.LCFI261:
 3412              	 .cfi_def_cfa_register 13
 3413              	 
 3414 0042 5DF8047B 	 ldr r7,[sp],#4
 3415              	.LCFI262:
 3416              	 .cfi_restore 7
 3417              	 .cfi_def_cfa_offset 0
 3418 0046 7047     	 bx lr
 3419              	 .cfi_endproc
 3420              	.LFE285:
 3422              	 .section .text.XMC_VADC_GLOBAL_BackgroundSelectGating,"ax",%progbits
 3423              	 .align 2
 3424              	 .global XMC_VADC_GLOBAL_BackgroundSelectGating
 3425              	 .thumb
 3426              	 .thumb_func
 3428              	XMC_VADC_GLOBAL_BackgroundSelectGating:
 3429              	.LFB286:
1307:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1308:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1309:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 inputs as a trigger gate for background scan request source */
1310:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundSelectGating(XMC_VADC_GLOBAL_t *const global_ptr, const uint32_t inp
1311:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3430              	 .loc 2 1311 0
 3431              	 .cfi_startproc
 3432              	 
 3433              	 
 3434              	 
 3435 0000 80B4     	 push {r7}
 3436              	.LCFI263:
 3437              	 .cfi_def_cfa_offset 4
 3438              	 .cfi_offset 7,-4
 3439 0002 85B0     	 sub sp,sp,#20
 3440              	.LCFI264:
 3441              	 .cfi_def_cfa_offset 24
 3442 0004 00AF     	 add r7,sp,#0
 3443              	.LCFI265:
 3444              	 .cfi_def_cfa_register 7
 3445 0006 7860     	 str r0,[r7,#4]
 3446 0008 3960     	 str r1,[r7]
1312:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t scanctrl;
1313:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1314:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Module Pointer", (global_ptr == VADC))
1315:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundSelectGating:Wrong Gating Port", ((input_num)< XMC_VADC_NUM
1316:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1317:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl       = global_ptr->BRSCTRL;
 3447              	 .loc 2 1317 0
 3448 000a 7B68     	 ldr r3,[r7,#4]
 3449 000c D3F80032 	 ldr r3,[r3,#512]
 3450 0010 FB60     	 str r3,[r7,#12]
1318:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)VADC_BRSCTRL_GTWC_Msk;
 3451              	 .loc 2 1318 0
 3452 0012 FB68     	 ldr r3,[r7,#12]
 3453 0014 43F40003 	 orr r3,r3,#8388608
 3454 0018 FB60     	 str r3,[r7,#12]
1319:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      &= ~((uint32_t)VADC_BRSCTRL_GTSEL_Msk);
 3455              	 .loc 2 1319 0
 3456 001a FB68     	 ldr r3,[r7,#12]
 3457 001c 23F47023 	 bic r3,r3,#983040
 3458 0020 FB60     	 str r3,[r7,#12]
1320:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   scanctrl      |= (uint32_t)(input_num << VADC_BRSCTRL_GTSEL_Pos);
 3459              	 .loc 2 1320 0
 3460 0022 3B68     	 ldr r3,[r7]
 3461 0024 1B04     	 lsls r3,r3,#16
 3462 0026 FA68     	 ldr r2,[r7,#12]
 3463 0028 1343     	 orrs r3,r3,r2
 3464 002a FB60     	 str r3,[r7,#12]
1321:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL  = scanctrl;
 3465              	 .loc 2 1321 0
 3466 002c 7B68     	 ldr r3,[r7,#4]
 3467 002e D3F80022 	 ldr r2,[r3,#512]
 3468 0032 0021     	 movs r1,#0
 3469 0034 FA68     	 ldr r2,[r7,#12]
 3470 0036 0A43     	 orrs r2,r2,r1
 3471 0038 C3F80022 	 str r2,[r3,#512]
1322:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3472              	 .loc 2 1322 0
 3473 003c 1437     	 adds r7,r7,#20
 3474              	.LCFI266:
 3475              	 .cfi_def_cfa_offset 4
 3476 003e BD46     	 mov sp,r7
 3477              	.LCFI267:
 3478              	 .cfi_def_cfa_register 13
 3479              	 
 3480 0040 5DF8047B 	 ldr r7,[sp],#4
 3481              	.LCFI268:
 3482              	 .cfi_restore 7
 3483              	 .cfi_def_cfa_offset 0
 3484 0044 7047     	 bx lr
 3485              	 .cfi_endproc
 3486              	.LFE286:
 3488 0046 00BF     	 .section .text.XMC_VADC_GLOBAL_BackgroundAbortSequence,"ax",%progbits
 3489              	 .align 2
 3490              	 .global XMC_VADC_GLOBAL_BackgroundAbortSequence
 3491              	 .thumb
 3492              	 .thumb_func
 3494              	XMC_VADC_GLOBAL_BackgroundAbortSequence:
 3495              	.LFB287:
1323:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1324:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a sequence */
1325:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GLOBAL_BackgroundAbortSequence(XMC_VADC_GLOBAL_t *const global_ptr)
1326:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3496              	 .loc 2 1326 0
 3497              	 .cfi_startproc
 3498              	 
 3499              	 
 3500 0000 80B5     	 push {r7,lr}
 3501              	.LCFI269:
 3502              	 .cfi_def_cfa_offset 8
 3503              	 .cfi_offset 7,-8
 3504              	 .cfi_offset 14,-4
 3505 0002 86B0     	 sub sp,sp,#24
 3506              	.LCFI270:
 3507              	 .cfi_def_cfa_offset 32
 3508 0004 00AF     	 add r7,sp,#0
 3509              	.LCFI271:
 3510              	 .cfi_def_cfa_register 7
 3511 0006 7860     	 str r0,[r7,#4]
1327:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t brsctrl;
1328:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1329:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1330:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint8_t grp_asen2_flag[XMC_VADC_MAXIMUM_NUM_GROUPS];
1331:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
1332:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundAbortSequence:Wrong Module Pointer", (global_ptr == VADC))
1333:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1334:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* To disable trigger and gating before abort*/
1335:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   brsctrl = global_ptr->BRSCTRL;
 3512              	 .loc 2 1335 0
 3513 0008 7B68     	 ldr r3,[r7,#4]
 3514 000a D3F80032 	 ldr r3,[r3,#512]
 3515 000e 3B61     	 str r3,[r7,#16]
1336:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1337:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL =(0U | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk);
 3516              	 .loc 2 1337 0
 3517 0010 7A68     	 ldr r2,[r7,#4]
 3518 0012 D2F80032 	 ldr r3,[r2,#512]
 3519 0016 0023     	 movs r3,#0
 3520 0018 43F40003 	 orr r3,r3,#8388608
 3521 001c 43F40043 	 orr r3,r3,#32768
 3522 0020 C2F80032 	 str r3,[r2,#512]
1338:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1339:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Disable Background Request source */
1340:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1341:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3523              	 .loc 2 1342 0
 3524 0024 0023     	 movs r3,#0
 3525 0026 7B61     	 str r3,[r7,#20]
 3526 0028 17E0     	 b .L112
 3527              	.L113:
1343:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1344:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     grp_asen2_flag[i] = (uint8_t)(g_xmc_vadc_group_array[i]->ARBPR >> VADC_G_ARBPR_ASEN2_Pos);
 3528              	 .loc 2 1344 0 discriminator 3
 3529 002a 264A     	 ldr r2,.L117
 3530 002c 7B69     	 ldr r3,[r7,#20]
 3531 002e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3532 0032 D3F88430 	 ldr r3,[r3,#132]
 3533 0036 9B0E     	 lsrs r3,r3,#26
 3534 0038 D9B2     	 uxtb r1,r3
 3535 003a 07F10C02 	 add r2,r7,#12
 3536 003e 7B69     	 ldr r3,[r7,#20]
 3537 0040 1344     	 add r3,r3,r2
 3538 0042 0A46     	 mov r2,r1
 3539 0044 1A70     	 strb r2,[r3]
1345:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     XMC_VADC_GROUP_BackgroundDisableArbitrationSlot((XMC_VADC_GROUP_t *)g_xmc_vadc_group_array[i]);
 3540              	 .loc 2 1345 0 discriminator 3
 3541 0046 1F4A     	 ldr r2,.L117
 3542 0048 7B69     	 ldr r3,[r7,#20]
 3543 004a 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3544 004e 1846     	 mov r0,r3
 3545 0050 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
1342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3546              	 .loc 2 1342 0 discriminator 3
 3547 0054 7B69     	 ldr r3,[r7,#20]
 3548 0056 0133     	 adds r3,r3,#1
 3549 0058 7B61     	 str r3,[r7,#20]
 3550              	.L112:
1342:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3551              	 .loc 2 1342 0 is_stmt 0 discriminator 1
 3552 005a 7B69     	 ldr r3,[r7,#20]
 3553 005c 032B     	 cmp r3,#3
 3554 005e E4D9     	 bls .L113
1346:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1347:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
1348:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1349:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Abort the ongoing sequence */
1350:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSMR |= (uint32_t)VADC_BRSMR_CLRPND_Msk;
 3555              	 .loc 2 1350 0 is_stmt 1
 3556 0060 7B68     	 ldr r3,[r7,#4]
 3557 0062 D3F80432 	 ldr r3,[r3,#516]
 3558 0066 43F48072 	 orr r2,r3,#256
 3559 006a 7B68     	 ldr r3,[r7,#4]
 3560 006c D3F80412 	 ldr r1,[r3,#516]
 3561 0070 0021     	 movs r1,#0
 3562 0072 0A43     	 orrs r2,r2,r1
 3563 0074 C3F80422 	 str r2,[r3,#516]
1351:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1352:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1353:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable Background Request source */
1354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   for(i=(uint8_t)0; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3564              	 .loc 2 1354 0
 3565 0078 0023     	 movs r3,#0
 3566 007a 7B61     	 str r3,[r7,#20]
 3567 007c 10E0     	 b .L114
 3568              	.L116:
1355:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1356:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     if ((uint8_t)1 == grp_asen2_flag[i])
 3569              	 .loc 2 1356 0
 3570 007e 07F10C02 	 add r2,r7,#12
 3571 0082 7B69     	 ldr r3,[r7,#20]
 3572 0084 1344     	 add r3,r3,r2
 3573 0086 1B78     	 ldrb r3,[r3]
 3574 0088 012B     	 cmp r3,#1
 3575 008a 06D1     	 bne .L115
1357:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
1358:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       XMC_VADC_GROUP_BackgroundEnableArbitrationSlot((XMC_VADC_GROUP_t*)g_xmc_vadc_group_array[i]);
 3576              	 .loc 2 1358 0
 3577 008c 0D4A     	 ldr r2,.L117
 3578 008e 7B69     	 ldr r3,[r7,#20]
 3579 0090 52F82330 	 ldr r3,[r2,r3,lsl#2]
 3580 0094 1846     	 mov r0,r3
 3581 0096 FFF7FEFF 	 bl XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
 3582              	.L115:
1354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3583              	 .loc 2 1354 0 discriminator 2
 3584 009a 7B69     	 ldr r3,[r7,#20]
 3585 009c 0133     	 adds r3,r3,#1
 3586 009e 7B61     	 str r3,[r7,#20]
 3587              	.L114:
1354:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3588              	 .loc 2 1354 0 is_stmt 0 discriminator 1
 3589 00a0 7B69     	 ldr r3,[r7,#20]
 3590 00a2 032B     	 cmp r3,#3
 3591 00a4 EBD9     	 bls .L116
1359:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
1360:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1361:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
1362:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1363:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Re-enable any disabled trigger and gating*/
1364:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   global_ptr->BRSCTRL =(brsctrl | (uint32_t)VADC_BRSCTRL_XTWC_Msk | (uint32_t)VADC_BRSCTRL_GTWC_Msk
 3592              	 .loc 2 1364 0 is_stmt 1
 3593 00a6 3B69     	 ldr r3,[r7,#16]
 3594 00a8 43F40003 	 orr r3,r3,#8388608
 3595 00ac 43F40043 	 orr r3,r3,#32768
 3596 00b0 7A68     	 ldr r2,[r7,#4]
 3597 00b2 D2F80012 	 ldr r1,[r2,#512]
 3598 00b6 0021     	 movs r1,#0
 3599 00b8 0B43     	 orrs r3,r3,r1
 3600 00ba C2F80032 	 str r3,[r2,#512]
1365:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3601              	 .loc 2 1365 0
 3602 00be 1837     	 adds r7,r7,#24
 3603              	.LCFI272:
 3604              	 .cfi_def_cfa_offset 8
 3605 00c0 BD46     	 mov sp,r7
 3606              	.LCFI273:
 3607              	 .cfi_def_cfa_register 13
 3608              	 
 3609 00c2 80BD     	 pop {r7,pc}
 3610              	.L118:
 3611              	 .align 2
 3612              	.L117:
 3613 00c4 00000000 	 .word g_xmc_vadc_group_array
 3614              	 .cfi_endproc
 3615              	.LFE287:
 3617              	 .section .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending,"ax",%progbits
 3618              	 .align 2
 3619              	 .global XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
 3620              	 .thumb
 3621              	 .thumb_func
 3623              	XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:
 3624              	.LFB288:
1366:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1367:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to determine how many channels are awaiting conversion */
1368:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending(XMC_VADC_GLOBAL_t *const global_ptr)
1369:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3625              	 .loc 2 1369 0
 3626              	 .cfi_startproc
 3627              	 
 3628              	 
 3629              	 
 3630 0000 80B4     	 push {r7}
 3631              	.LCFI274:
 3632              	 .cfi_def_cfa_offset 4
 3633              	 .cfi_offset 7,-4
 3634 0002 87B0     	 sub sp,sp,#28
 3635              	.LCFI275:
 3636              	 .cfi_def_cfa_offset 32
 3637 0004 00AF     	 add r7,sp,#0
 3638              	.LCFI276:
 3639              	 .cfi_def_cfa_register 7
 3640 0006 7860     	 str r0,[r7,#4]
1370:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t reg;
1371:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t i;
1372:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t j;
1373:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t count;
1374:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1375:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:Wrong Module Pointer", (global_ptr ==
1376:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1377:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   count = 0U;
 3641              	 .loc 2 1377 0
 3642 0008 0023     	 movs r3,#0
 3643 000a BB60     	 str r3,[r7,#8]
1378:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1379:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Loop through all groups and find out who is awaiting conversion */
1380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   for(i = 0U; i < XMC_VADC_MAXIMUM_NUM_GROUPS; i++)
 3644              	 .loc 2 1380 0
 3645 000c 0023     	 movs r3,#0
 3646 000e 3B61     	 str r3,[r7,#16]
 3647 0010 23E0     	 b .L120
 3648              	.L125:
1381:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1382:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     if (global_ptr->BRSSEL[i])
 3649              	 .loc 2 1382 0
 3650 0012 7B68     	 ldr r3,[r7,#4]
 3651 0014 3A69     	 ldr r2,[r7,#16]
 3652 0016 6032     	 adds r2,r2,#96
 3653 0018 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3654 001c 002B     	 cmp r3,#0
 3655 001e 19D0     	 beq .L121
1383:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
1384:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       reg = global_ptr->BRSPND[i];
 3656              	 .loc 2 1384 0
 3657 0020 7B68     	 ldr r3,[r7,#4]
 3658 0022 3A69     	 ldr r2,[r7,#16]
 3659 0024 7032     	 adds r2,r2,#112
 3660 0026 53F82230 	 ldr r3,[r3,r2,lsl#2]
 3661 002a 7B61     	 str r3,[r7,#20]
1385:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       for(j=0U;j<XMC_VADC_NUM_CHANNELS_PER_GROUP;j++)
 3662              	 .loc 2 1386 0
 3663 002c 0023     	 movs r3,#0
 3664 002e FB60     	 str r3,[r7,#12]
 3665 0030 0DE0     	 b .L122
 3666              	.L124:
1387:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       {
1388:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****         if (reg & 1U)
 3667              	 .loc 2 1388 0
 3668 0032 7B69     	 ldr r3,[r7,#20]
 3669 0034 03F00103 	 and r3,r3,#1
 3670 0038 002B     	 cmp r3,#0
 3671 003a 02D0     	 beq .L123
1389:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****         {
1390:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****           count++;
 3672              	 .loc 2 1390 0
 3673 003c BB68     	 ldr r3,[r7,#8]
 3674 003e 0133     	 adds r3,r3,#1
 3675 0040 BB60     	 str r3,[r7,#8]
 3676              	.L123:
1391:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****         }
1392:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1393:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****         reg = reg >> 1U;
 3677              	 .loc 2 1393 0 discriminator 2
 3678 0042 7B69     	 ldr r3,[r7,#20]
 3679 0044 5B08     	 lsrs r3,r3,#1
 3680 0046 7B61     	 str r3,[r7,#20]
1386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       {
 3681              	 .loc 2 1386 0 discriminator 2
 3682 0048 FB68     	 ldr r3,[r7,#12]
 3683 004a 0133     	 adds r3,r3,#1
 3684 004c FB60     	 str r3,[r7,#12]
 3685              	.L122:
1386:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       {
 3686              	 .loc 2 1386 0 is_stmt 0 discriminator 1
 3687 004e FB68     	 ldr r3,[r7,#12]
 3688 0050 072B     	 cmp r3,#7
 3689 0052 EED9     	 bls .L124
 3690              	.L121:
1380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3691              	 .loc 2 1380 0 is_stmt 1 discriminator 2
 3692 0054 3B69     	 ldr r3,[r7,#16]
 3693 0056 0133     	 adds r3,r3,#1
 3694 0058 3B61     	 str r3,[r7,#16]
 3695              	.L120:
1380:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
 3696              	 .loc 2 1380 0 is_stmt 0 discriminator 1
 3697 005a 3B69     	 ldr r3,[r7,#16]
 3698 005c 032B     	 cmp r3,#3
 3699 005e D8D9     	 bls .L125
1394:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       }
1395:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
1396:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1397:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1398:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return count;
 3700              	 .loc 2 1398 0 is_stmt 1
 3701 0060 BB68     	 ldr r3,[r7,#8]
1399:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3702              	 .loc 2 1399 0
 3703 0062 1846     	 mov r0,r3
 3704 0064 1C37     	 adds r7,r7,#28
 3705              	.LCFI277:
 3706              	 .cfi_def_cfa_offset 4
 3707 0066 BD46     	 mov sp,r7
 3708              	.LCFI278:
 3709              	 .cfi_def_cfa_register 13
 3710              	 
 3711 0068 5DF8047B 	 ldr r7,[sp],#4
 3712              	.LCFI279:
 3713              	 .cfi_restore 7
 3714              	 .cfi_def_cfa_offset 0
 3715 006c 7047     	 bx lr
 3716              	 .cfi_endproc
 3717              	.LFE288:
 3719 006e 00BF     	 .section .text.XMC_VADC_GROUP_QueueInit,"ax",%progbits
 3720              	 .align 2
 3721              	 .global XMC_VADC_GROUP_QueueInit
 3722              	 .thumb
 3723              	 .thumb_func
 3725              	XMC_VADC_GROUP_QueueInit:
 3726              	.LFB289:
1400:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1401:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_QUEUE_AVAILABLE == 1U)  
1402:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to initialize queue request source */
1403:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueInit(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_QUEUE_CONFIG_t *con
1404:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3727              	 .loc 2 1404 0
 3728              	 .cfi_startproc
 3729              	 
 3730              	 
 3731 0000 80B5     	 push {r7,lr}
 3732              	.LCFI280:
 3733              	 .cfi_def_cfa_offset 8
 3734              	 .cfi_offset 7,-8
 3735              	 .cfi_offset 14,-4
 3736 0002 84B0     	 sub sp,sp,#16
 3737              	.LCFI281:
 3738              	 .cfi_def_cfa_offset 24
 3739 0004 00AF     	 add r7,sp,#0
 3740              	.LCFI282:
 3741              	 .cfi_def_cfa_register 7
 3742 0006 7860     	 str r0,[r7,#4]
 3743 0008 3960     	 str r1,[r7]
1405:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t          reg;
1406:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1407:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1408:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1409:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Disable arbitration slot of the queue request source */
1410:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 3744              	 .loc 2 1410 0
 3745 000a 7868     	 ldr r0,[r7,#4]
 3746 000c FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1411:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1412:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   reg = group_ptr->ARBPR;
 3747              	 .loc 2 1412 0
 3748 0010 7B68     	 ldr r3,[r7,#4]
 3749 0012 D3F88430 	 ldr r3,[r3,#132]
 3750 0016 FB60     	 str r3,[r7,#12]
1413:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1414:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Request Source priority */
1415:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   reg &= ~((uint32_t)VADC_G_ARBPR_PRIO0_Msk);
 3751              	 .loc 2 1415 0
 3752 0018 FB68     	 ldr r3,[r7,#12]
 3753 001a 23F00303 	 bic r3,r3,#3
 3754 001e FB60     	 str r3,[r7,#12]
1416:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   reg |= (uint32_t) ((uint32_t)config->req_src_priority << VADC_G_ARBPR_PRIO0_Pos);
 3755              	 .loc 2 1416 0
 3756 0020 3B68     	 ldr r3,[r7]
 3757 0022 1B78     	 ldrb r3,[r3]
 3758 0024 C3F38103 	 ubfx r3,r3,#2,#2
 3759 0028 DBB2     	 uxtb r3,r3
 3760 002a 1A46     	 mov r2,r3
 3761 002c FB68     	 ldr r3,[r7,#12]
 3762 002e 1343     	 orrs r3,r3,r2
 3763 0030 FB60     	 str r3,[r7,#12]
1417:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1418:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Conversion Start mode */
1419:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_WFS != (XMC_VADC_STARTMODE_t)config->conv_start_mode)
 3764              	 .loc 2 1419 0
 3765 0032 3B68     	 ldr r3,[r7]
 3766 0034 1B78     	 ldrb r3,[r3]
 3767 0036 03F00303 	 and r3,r3,#3
 3768 003a DBB2     	 uxtb r3,r3
 3769 003c 002B     	 cmp r3,#0
 3770 003e 03D0     	 beq .L128
1420:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1421:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     reg |= (uint32_t)(VADC_G_ARBPR_CSM0_Msk);
 3771              	 .loc 2 1421 0
 3772 0040 FB68     	 ldr r3,[r7,#12]
 3773 0042 43F00803 	 orr r3,r3,#8
 3774 0046 FB60     	 str r3,[r7,#12]
 3775              	.L128:
1422:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1423:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1424:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR = reg;
 3776              	 .loc 2 1424 0
 3777 0048 7B68     	 ldr r3,[r7,#4]
 3778 004a D3F88420 	 ldr r2,[r3,#132]
 3779 004e 0021     	 movs r1,#0
 3780 0050 FA68     	 ldr r2,[r7,#12]
 3781 0052 0A43     	 orrs r2,r2,r1
 3782 0054 C3F88420 	 str r2,[r3,#132]
1425:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1426:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1427:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (uint32_t)((config->qctrl0)|(uint32_t)(VADC_G_QCTRL0_XTWC_Msk)|
 3783              	 .loc 2 1427 0
 3784 0058 3B68     	 ldr r3,[r7]
 3785 005a D3F80130 	 ldr r3,[r3,#1]
 3786 005e 43F08023 	 orr r3,r3,#-2147450880
 3787 0062 43F40003 	 orr r3,r3,#8388608
 3788 0066 7A68     	 ldr r2,[r7,#4]
 3789 0068 D2F80011 	 ldr r1,[r2,#256]
 3790 006c 0021     	 movs r1,#0
 3791 006e 0B43     	 orrs r3,r3,r1
 3792 0070 C2F80031 	 str r3,[r2,#256]
1428:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                     (uint32_t)(VADC_G_QCTRL0_TMWC_Msk)|
1429:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                     (uint32_t)(VADC_G_QCTRL0_GTWC_Msk));
1430:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1431:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Gating mode */
1432:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->QMR0 = ((uint32_t)(config->qmr0) | (uint32_t)((uint32_t)XMC_VADC_GATEMODE_IGNORE << VA
 3793              	 .loc 2 1432 0
 3794 0074 3B68     	 ldr r3,[r7]
 3795 0076 D3F80530 	 ldr r3,[r3,#5]
 3796 007a 43F00102 	 orr r2,r3,#1
 3797 007e 7B68     	 ldr r3,[r7,#4]
 3798 0080 D3F80411 	 ldr r1,[r3,#260]
 3799 0084 0021     	 movs r1,#0
 3800 0086 0A43     	 orrs r2,r2,r1
 3801 0088 C3F80421 	 str r2,[r3,#260]
1433:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1434:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (XMC_VADC_STARTMODE_CNR == (XMC_VADC_STARTMODE_t)(config->conv_start_mode) )
 3802              	 .loc 2 1434 0
 3803 008c 3B68     	 ldr r3,[r7]
 3804 008e 1B78     	 ldrb r3,[r3]
 3805 0090 03F00303 	 and r3,r3,#3
 3806 0094 DBB2     	 uxtb r3,r3
 3807 0096 022B     	 cmp r3,#2
 3808 0098 0BD1     	 bne .L129
1435:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1436:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)((uint32_t)1 << VADC_G_QMR0_RPTDIS_Pos);
 3809              	 .loc 2 1436 0
 3810 009a 7B68     	 ldr r3,[r7,#4]
 3811 009c D3F80431 	 ldr r3,[r3,#260]
 3812 00a0 43F48032 	 orr r2,r3,#65536
 3813 00a4 7B68     	 ldr r3,[r7,#4]
 3814 00a6 D3F80411 	 ldr r1,[r3,#260]
 3815 00aa 0021     	 movs r1,#0
 3816 00ac 0A43     	 orrs r2,r2,r1
 3817 00ae C3F80421 	 str r2,[r3,#260]
 3818              	.L129:
1437:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1438:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable arbitration slot for the queue request source */
1439:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueEnableArbitrationSlot(group_ptr);
 3819              	 .loc 2 1439 0
 3820 00b2 7868     	 ldr r0,[r7,#4]
 3821 00b4 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueEnableArbitrationSlot
1440:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1441:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3822              	 .loc 2 1441 0
 3823 00b8 1037     	 adds r7,r7,#16
 3824              	.LCFI283:
 3825              	 .cfi_def_cfa_offset 8
 3826 00ba BD46     	 mov sp,r7
 3827              	.LCFI284:
 3828              	 .cfi_def_cfa_register 13
 3829              	 
 3830 00bc 80BD     	 pop {r7,pc}
 3831              	 .cfi_endproc
 3832              	.LFE289:
 3834 00be 00BF     	 .section .text.XMC_VADC_GROUP_QueueSelectTrigger,"ax",%progbits
 3835              	 .align 2
 3836              	 .global XMC_VADC_GROUP_QueueSelectTrigger
 3837              	 .thumb
 3838              	 .thumb_func
 3840              	XMC_VADC_GROUP_QueueSelectTrigger:
 3841              	.LFB290:
1442:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1443:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible triggers as a conversion trigger for queue request source *
1444:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTrigger(XMC_VADC_GROUP_t *const group_ptr,
1445:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                        const XMC_VADC_TRIGGER_INPUT_SELECT_t input_num)
1446:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3842              	 .loc 2 1446 0
 3843              	 .cfi_startproc
 3844              	 
 3845              	 
 3846              	 
 3847 0000 80B4     	 push {r7}
 3848              	.LCFI285:
 3849              	 .cfi_def_cfa_offset 4
 3850              	 .cfi_offset 7,-4
 3851 0002 85B0     	 sub sp,sp,#20
 3852              	.LCFI286:
 3853              	 .cfi_def_cfa_offset 24
 3854 0004 00AF     	 add r7,sp,#0
 3855              	.LCFI287:
 3856              	 .cfi_def_cfa_register 7
 3857 0006 7860     	 str r0,[r7,#4]
 3858 0008 0B46     	 mov r3,r1
 3859 000a FB70     	 strb r3,[r7,#3]
1447:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t    qctrl;
1448:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1449:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1450:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTrigger:Wrong Trigger Port", ((input_num)< XMC_VADC_NUM_POR
1451:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1452:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1453:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Now select the conversion trigger */
1454:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3860              	 .loc 2 1454 0
 3861 000c 7B68     	 ldr r3,[r7,#4]
 3862 000e D3F80031 	 ldr r3,[r3,#256]
 3863 0012 FB60     	 str r3,[r7,#12]
1455:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl  |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3864              	 .loc 2 1455 0
 3865 0014 FB68     	 ldr r3,[r7,#12]
 3866 0016 43F40043 	 orr r3,r3,#32768
 3867 001a FB60     	 str r3,[r7,#12]
1456:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTSEL_Msk);
 3868              	 .loc 2 1456 0
 3869 001c FB68     	 ldr r3,[r7,#12]
 3870 001e 23F47063 	 bic r3,r3,#3840
 3871 0022 FB60     	 str r3,[r7,#12]
1457:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_XTSEL_Pos);
 3872              	 .loc 2 1457 0
 3873 0024 FB78     	 ldrb r3,[r7,#3]
 3874 0026 1B02     	 lsls r3,r3,#8
 3875 0028 FA68     	 ldr r2,[r7,#12]
 3876 002a 1343     	 orrs r3,r3,r2
 3877 002c FB60     	 str r3,[r7,#12]
1458:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3878              	 .loc 2 1458 0
 3879 002e 7B68     	 ldr r3,[r7,#4]
 3880 0030 D3F80021 	 ldr r2,[r3,#256]
 3881 0034 0021     	 movs r1,#0
 3882 0036 FA68     	 ldr r2,[r7,#12]
 3883 0038 0A43     	 orrs r2,r2,r1
 3884 003a C3F80021 	 str r2,[r3,#256]
1459:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3885              	 .loc 2 1459 0
 3886 003e 1437     	 adds r7,r7,#20
 3887              	.LCFI288:
 3888              	 .cfi_def_cfa_offset 4
 3889 0040 BD46     	 mov sp,r7
 3890              	.LCFI289:
 3891              	 .cfi_def_cfa_register 13
 3892              	 
 3893 0042 5DF8047B 	 ldr r7,[sp],#4
 3894              	.LCFI290:
 3895              	 .cfi_restore 7
 3896              	 .cfi_def_cfa_offset 0
 3897 0046 7047     	 bx lr
 3898              	 .cfi_endproc
 3899              	.LFE290:
 3901              	 .section .text.XMC_VADC_GROUP_QueueSelectTriggerEdge,"ax",%progbits
 3902              	 .align 2
 3903              	 .global XMC_VADC_GROUP_QueueSelectTriggerEdge
 3904              	 .thumb
 3905              	 .thumb_func
 3907              	XMC_VADC_GROUP_QueueSelectTriggerEdge:
 3908              	.LFB291:
1460:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1461:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Select a trigger edge*/
1462:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectTriggerEdge(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_TRIGGE
1463:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3909              	 .loc 2 1463 0
 3910              	 .cfi_startproc
 3911              	 
 3912              	 
 3913              	 
 3914 0000 80B4     	 push {r7}
 3915              	.LCFI291:
 3916              	 .cfi_def_cfa_offset 4
 3917              	 .cfi_offset 7,-4
 3918 0002 85B0     	 sub sp,sp,#20
 3919              	.LCFI292:
 3920              	 .cfi_def_cfa_offset 24
 3921 0004 00AF     	 add r7,sp,#0
 3922              	.LCFI293:
 3923              	 .cfi_def_cfa_register 7
 3924 0006 7860     	 str r0,[r7,#4]
 3925 0008 0B46     	 mov r3,r1
 3926 000a FB70     	 strb r3,[r7,#3]
1464:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1465:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1466:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1467:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectTriggerEdge:Wrong Gating Port", ((trigger_edge)<= XMC_VADC_
1468:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1469:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1470:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3927              	 .loc 2 1470 0
 3928 000c 7B68     	 ldr r3,[r7,#4]
 3929 000e D3F80031 	 ldr r3,[r3,#256]
 3930 0012 FB60     	 str r3,[r7,#12]
1471:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_XTWC_Msk;
 3931              	 .loc 2 1471 0
 3932 0014 FB68     	 ldr r3,[r7,#12]
 3933 0016 43F40043 	 orr r3,r3,#32768
 3934 001a FB60     	 str r3,[r7,#12]
1472:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_XTMODE_Msk);
 3935              	 .loc 2 1472 0
 3936 001c FB68     	 ldr r3,[r7,#12]
 3937 001e 23F4C043 	 bic r3,r3,#24576
 3938 0022 FB60     	 str r3,[r7,#12]
1473:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)trigger_edge << VADC_G_QCTRL0_XTMODE_Pos);
 3939              	 .loc 2 1473 0
 3940 0024 FB78     	 ldrb r3,[r7,#3]
 3941 0026 5B03     	 lsls r3,r3,#13
 3942 0028 FA68     	 ldr r2,[r7,#12]
 3943 002a 1343     	 orrs r3,r3,r2
 3944 002c FB60     	 str r3,[r7,#12]
1474:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 3945              	 .loc 2 1474 0
 3946 002e 7B68     	 ldr r3,[r7,#4]
 3947 0030 D3F80021 	 ldr r2,[r3,#256]
 3948 0034 0021     	 movs r1,#0
 3949 0036 FA68     	 ldr r2,[r7,#12]
 3950 0038 0A43     	 orrs r2,r2,r1
 3951 003a C3F80021 	 str r2,[r3,#256]
1475:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 3952              	 .loc 2 1475 0
 3953 003e 1437     	 adds r7,r7,#20
 3954              	.LCFI294:
 3955              	 .cfi_def_cfa_offset 4
 3956 0040 BD46     	 mov sp,r7
 3957              	.LCFI295:
 3958              	 .cfi_def_cfa_register 13
 3959              	 
 3960 0042 5DF8047B 	 ldr r7,[sp],#4
 3961              	.LCFI296:
 3962              	 .cfi_restore 7
 3963              	 .cfi_def_cfa_offset 0
 3964 0046 7047     	 bx lr
 3965              	 .cfi_endproc
 3966              	.LFE291:
 3968              	 .section .text.XMC_VADC_GROUP_QueueSelectGating,"ax",%progbits
 3969              	 .align 2
 3970              	 .global XMC_VADC_GROUP_QueueSelectGating
 3971              	 .thumb
 3972              	 .thumb_func
 3974              	XMC_VADC_GROUP_QueueSelectGating:
 3975              	.LFB292:
1476:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1477:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select one of the 16 possible trigger gates as a trigger gating signal for queue request 
1478:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSelectGating(XMC_VADC_GROUP_t *const group_ptr, const XMC_VADC_GATE_INPUT_
1479:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 3976              	 .loc 2 1479 0
 3977              	 .cfi_startproc
 3978              	 
 3979              	 
 3980              	 
 3981 0000 80B4     	 push {r7}
 3982              	.LCFI297:
 3983              	 .cfi_def_cfa_offset 4
 3984              	 .cfi_offset 7,-4
 3985 0002 85B0     	 sub sp,sp,#20
 3986              	.LCFI298:
 3987              	 .cfi_def_cfa_offset 24
 3988 0004 00AF     	 add r7,sp,#0
 3989              	.LCFI299:
 3990              	 .cfi_def_cfa_register 7
 3991 0006 7860     	 str r0,[r7,#4]
 3992 0008 0B46     	 mov r3,r1
 3993 000a FB70     	 strb r3,[r7,#3]
1480:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl;
1481:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1482:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
1483:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSelectGating:Wrong Gating Port", ((input_num)< XMC_VADC_NUM_PORTS
1484:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1485:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Now select the gating input */
1486:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl  = group_ptr->QCTRL0;
 3994              	 .loc 2 1486 0
 3995 000c 7B68     	 ldr r3,[r7,#4]
 3996 000e D3F80031 	 ldr r3,[r3,#256]
 3997 0012 FB60     	 str r3,[r7,#12]
1487:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)VADC_G_QCTRL0_GTWC_Msk;
 3998              	 .loc 2 1487 0
 3999 0014 FB68     	 ldr r3,[r7,#12]
 4000 0016 43F40003 	 orr r3,r3,#8388608
 4001 001a FB60     	 str r3,[r7,#12]
1488:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl &= ~((uint32_t)VADC_G_QCTRL0_GTSEL_Msk);
 4002              	 .loc 2 1488 0
 4003 001c FB68     	 ldr r3,[r7,#12]
 4004 001e 23F47023 	 bic r3,r3,#983040
 4005 0022 FB60     	 str r3,[r7,#12]
1489:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl |= (uint32_t)((uint32_t)input_num << VADC_G_QCTRL0_GTSEL_Pos);
 4006              	 .loc 2 1489 0
 4007 0024 FB78     	 ldrb r3,[r7,#3]
 4008 0026 1B04     	 lsls r3,r3,#16
 4009 0028 FA68     	 ldr r2,[r7,#12]
 4010 002a 1343     	 orrs r3,r3,r2
 4011 002c FB60     	 str r3,[r7,#12]
1490:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = qctrl;
 4012              	 .loc 2 1490 0
 4013 002e 7B68     	 ldr r3,[r7,#4]
 4014 0030 D3F80021 	 ldr r2,[r3,#256]
 4015 0034 0021     	 movs r1,#0
 4016 0036 FA68     	 ldr r2,[r7,#12]
 4017 0038 0A43     	 orrs r2,r2,r1
 4018 003a C3F80021 	 str r2,[r3,#256]
1491:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4019              	 .loc 2 1491 0
 4020 003e 1437     	 adds r7,r7,#20
 4021              	.LCFI300:
 4022              	 .cfi_def_cfa_offset 4
 4023 0040 BD46     	 mov sp,r7
 4024              	.LCFI301:
 4025              	 .cfi_def_cfa_register 13
 4026              	 
 4027 0042 5DF8047B 	 ldr r7,[sp],#4
 4028              	.LCFI302:
 4029              	 .cfi_restore 7
 4030              	 .cfi_def_cfa_offset 0
 4031 0046 7047     	 bx lr
 4032              	 .cfi_endproc
 4033              	.LFE292:
 4035              	 .section .text.XMC_VADC_GROUP_QueueGetLength,"ax",%progbits
 4036              	 .align 2
 4037              	 .global XMC_VADC_GROUP_QueueGetLength
 4038              	 .thumb
 4039              	 .thumb_func
 4041              	XMC_VADC_GROUP_QueueGetLength:
 4042              	.LFB293:
1492:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1493:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to determine the number of channels in the queue (length includes the valid channel in the B
1494:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_QueueGetLength(XMC_VADC_GROUP_t *const group_ptr)
1495:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4043              	 .loc 2 1495 0
 4044              	 .cfi_startproc
 4045              	 
 4046              	 
 4047              	 
 4048 0000 80B4     	 push {r7}
 4049              	.LCFI303:
 4050              	 .cfi_def_cfa_offset 4
 4051              	 .cfi_offset 7,-4
 4052 0002 87B0     	 sub sp,sp,#28
 4053              	.LCFI304:
 4054              	 .cfi_def_cfa_offset 32
 4055 0004 00AF     	 add r7,sp,#0
 4056              	.LCFI305:
 4057              	 .cfi_def_cfa_register 7
 4058 0006 7860     	 str r0,[r7,#4]
1496:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t        qsr;
1497:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t        qbur0;
1498:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t        length;
1499:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1500:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetLength:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_pt
1501:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1502:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qsr = group_ptr->QSR0;
 4059              	 .loc 2 1502 0
 4060 0008 7B68     	 ldr r3,[r7,#4]
 4061 000a D3F80831 	 ldr r3,[r3,#264]
 4062 000e 3B61     	 str r3,[r7,#16]
1503:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qbur0 = group_ptr->QBUR0;
 4063              	 .loc 2 1503 0
 4064 0010 7B68     	 ldr r3,[r7,#4]
 4065 0012 D3F81031 	 ldr r3,[r3,#272]
 4066 0016 FB60     	 str r3,[r7,#12]
1504:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1505:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (qsr & (uint32_t)VADC_G_QSR0_EMPTY_Msk)
 4067              	 .loc 2 1505 0
 4068 0018 3B69     	 ldr r3,[r7,#16]
 4069 001a 03F02003 	 and r3,r3,#32
 4070 001e 002B     	 cmp r3,#0
 4071 0020 02D0     	 beq .L134
1506:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1507:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     length = 0U;
 4072              	 .loc 2 1507 0
 4073 0022 0023     	 movs r3,#0
 4074 0024 7B61     	 str r3,[r7,#20]
 4075 0026 04E0     	 b .L135
 4076              	.L134:
1508:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1509:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
1510:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1511:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     length = (qsr & (uint32_t)VADC_G_QSR0_FILL_Msk) + 1U;
 4077              	 .loc 2 1511 0
 4078 0028 3B69     	 ldr r3,[r7,#16]
 4079 002a 03F00F03 	 and r3,r3,#15
 4080 002e 0133     	 adds r3,r3,#1
 4081 0030 7B61     	 str r3,[r7,#20]
 4082              	.L135:
1512:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1513:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1514:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (qbur0 & (uint32_t)VADC_G_QBUR0_V_Msk )
 4083              	 .loc 2 1514 0
 4084 0032 FB68     	 ldr r3,[r7,#12]
 4085 0034 03F48073 	 and r3,r3,#256
 4086 0038 002B     	 cmp r3,#0
 4087 003a 02D0     	 beq .L136
1515:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1516:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     length++;
 4088              	 .loc 2 1516 0
 4089 003c 7B69     	 ldr r3,[r7,#20]
 4090 003e 0133     	 adds r3,r3,#1
 4091 0040 7B61     	 str r3,[r7,#20]
 4092              	.L136:
1517:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1518:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1519:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return length;
 4093              	 .loc 2 1519 0
 4094 0042 7B69     	 ldr r3,[r7,#20]
1520:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4095              	 .loc 2 1520 0
 4096 0044 1846     	 mov r0,r3
 4097 0046 1C37     	 adds r7,r7,#28
 4098              	.LCFI306:
 4099              	 .cfi_def_cfa_offset 4
 4100 0048 BD46     	 mov sp,r7
 4101              	.LCFI307:
 4102              	 .cfi_def_cfa_register 13
 4103              	 
 4104 004a 5DF8047B 	 ldr r7,[sp],#4
 4105              	.LCFI308:
 4106              	 .cfi_restore 7
 4107              	 .cfi_def_cfa_offset 0
 4108 004e 7047     	 bx lr
 4109              	 .cfi_endproc
 4110              	.LFE293:
 4112              	 .section .text.XMC_VADC_GROUP_QueueAbortSequence,"ax",%progbits
 4113              	 .align 2
 4114              	 .global XMC_VADC_GROUP_QueueAbortSequence
 4115              	 .thumb
 4116              	 .thumb_func
 4118              	XMC_VADC_GROUP_QueueAbortSequence:
 4119              	.LFB294:
1521:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1522:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to abort ongoing conversion of a channel sequence */
1523:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueAbortSequence(XMC_VADC_GROUP_t *const group_ptr)
1524:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4120              	 .loc 2 1524 0
 4121              	 .cfi_startproc
 4122              	 
 4123              	 
 4124 0000 80B5     	 push {r7,lr}
 4125              	.LCFI309:
 4126              	 .cfi_def_cfa_offset 8
 4127              	 .cfi_offset 7,-8
 4128              	 .cfi_offset 14,-4
 4129 0002 84B0     	 sub sp,sp,#16
 4130              	.LCFI310:
 4131              	 .cfi_def_cfa_offset 24
 4132 0004 00AF     	 add r7,sp,#0
 4133              	.LCFI311:
 4134              	 .cfi_def_cfa_register 7
 4135 0006 7860     	 str r0,[r7,#4]
1525:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1526:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1527:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1528:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueAbortSequence:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1529:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1530:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1531:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl0 = group_ptr->QCTRL0;
 4136              	 .loc 2 1531 0
 4137 0008 7B68     	 ldr r3,[r7,#4]
 4138 000a D3F80031 	 ldr r3,[r3,#256]
 4139 000e FB60     	 str r3,[r7,#12]
1532:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1533:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 =(0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 4140              	 .loc 2 1533 0
 4141 0010 7A68     	 ldr r2,[r7,#4]
 4142 0012 D2F80031 	 ldr r3,[r2,#256]
 4143 0016 0023     	 movs r3,#0
 4144 0018 43F08023 	 orr r3,r3,#-2147450880
 4145 001c 43F40003 	 orr r3,r3,#8388608
 4146 0020 C2F80031 	 str r3,[r2,#256]
1534:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_M
1535:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1536:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1537:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 4147              	 .loc 2 1537 0
 4148 0024 7B68     	 ldr r3,[r7,#4]
 4149 0026 D3F88430 	 ldr r3,[r3,#132]
 4150 002a 1B0E     	 lsrs r3,r3,#24
 4151 002c 03F00103 	 and r3,r3,#1
 4152 0030 002B     	 cmp r3,#0
 4153 0032 14BF     	 ite ne
 4154 0034 0123     	 movne r3,#1
 4155 0036 0023     	 moveq r3,#0
 4156 0038 FB72     	 strb r3,[r7,#11]
1538:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 4157              	 .loc 2 1538 0
 4158 003a 7868     	 ldr r0,[r7,#4]
 4159 003c FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1539:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    
1540:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Flush the Entries from queue*/
1541:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueFlushEntries(group_ptr);
 4160              	 .loc 2 1541 0
 4161 0040 7868     	 ldr r0,[r7,#4]
 4162 0042 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueFlushEntries
1542:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1543:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1544:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 4163              	 .loc 2 1544 0
 4164 0046 7B68     	 ldr r3,[r7,#4]
 4165 0048 D3F88420 	 ldr r2,[r3,#132]
 4166 004c FB7A     	 ldrb r3,[r7,#11]
 4167 004e 1B06     	 lsls r3,r3,#24
 4168 0050 1A43     	 orrs r2,r2,r3
 4169 0052 7B68     	 ldr r3,[r7,#4]
 4170 0054 D3F88410 	 ldr r1,[r3,#132]
 4171 0058 0021     	 movs r1,#0
 4172 005a 0A43     	 orrs r2,r2,r1
 4173 005c C3F88420 	 str r2,[r3,#132]
1545:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1546:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
1548:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 4174              	 .loc 2 1548 0
 4175 0060 FB68     	 ldr r3,[r7,#12]
 4176 0062 43F08023 	 orr r3,r3,#-2147450880
 4177 0066 43F40003 	 orr r3,r3,#8388608
1547:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 4178              	 .loc 2 1547 0
 4179 006a 7A68     	 ldr r2,[r7,#4]
 4180 006c D2F80011 	 ldr r1,[r2,#256]
 4181 0070 0021     	 movs r1,#0
 4182 0072 0B43     	 orrs r3,r3,r1
 4183 0074 C2F80031 	 str r3,[r2,#256]
1549:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4184              	 .loc 2 1549 0
 4185 0078 1037     	 adds r7,r7,#16
 4186              	.LCFI312:
 4187              	 .cfi_def_cfa_offset 8
 4188 007a BD46     	 mov sp,r7
 4189              	.LCFI313:
 4190              	 .cfi_def_cfa_register 13
 4191              	 
 4192 007c 80BD     	 pop {r7,pc}
 4193              	 .cfi_endproc
 4194              	.LFE294:
 4196 007e 00BF     	 .section .text.XMC_VADC_GROUP_QueueRemoveChannel,"ax",%progbits
 4197              	 .align 2
 4198              	 .global XMC_VADC_GROUP_QueueRemoveChannel
 4199              	 .thumb
 4200              	 .thumb_func
 4202              	XMC_VADC_GROUP_QueueRemoveChannel:
 4203              	.LFB295:
1550:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1551:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to abort conversion of the channel queued up next */
1552:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueRemoveChannel(XMC_VADC_GROUP_t *const group_ptr)
1553:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4204              	 .loc 2 1553 0
 4205              	 .cfi_startproc
 4206              	 
 4207              	 
 4208 0000 80B5     	 push {r7,lr}
 4209              	.LCFI314:
 4210              	 .cfi_def_cfa_offset 8
 4211              	 .cfi_offset 7,-8
 4212              	 .cfi_offset 14,-4
 4213 0002 86B0     	 sub sp,sp,#24
 4214              	.LCFI315:
 4215              	 .cfi_def_cfa_offset 32
 4216 0004 00AF     	 add r7,sp,#0
 4217              	.LCFI316:
 4218              	 .cfi_def_cfa_register 7
 4219 0006 7860     	 str r0,[r7,#4]
1554:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t length_before_abort;
1555:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t length_after_abort;
1556:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t qctrl0;
1557:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bool arbitration_status;
1558:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1559:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueRemoveChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(grou
1560:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1561:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Disable any gating if present*/
1562:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   qctrl0= group_ptr->QCTRL0;
 4220              	 .loc 2 1562 0
 4221 0008 7B68     	 ldr r3,[r7,#4]
 4222 000a D3F80031 	 ldr r3,[r3,#256]
 4223 000e 3B61     	 str r3,[r7,#16]
1563:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1564:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 =(0U | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
 4224              	 .loc 2 1564 0
 4225 0010 7A68     	 ldr r2,[r7,#4]
 4226 0012 D2F80031 	 ldr r3,[r2,#256]
 4227 0016 0023     	 movs r3,#0
 4228 0018 43F08023 	 orr r3,r3,#-2147450880
 4229 001c 43F40003 	 orr r3,r3,#8388608
 4230 0020 C2F80031 	 str r3,[r2,#256]
1565:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                   (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_M
1566:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1567:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Disable the Arbitration 0 in the group before abort*/
1568:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   arbitration_status = (bool)((uint32_t)(group_ptr->ARBPR >> VADC_G_ARBPR_ASEN0_Pos) & 1U);
 4231              	 .loc 2 1568 0
 4232 0024 7B68     	 ldr r3,[r7,#4]
 4233 0026 D3F88430 	 ldr r3,[r3,#132]
 4234 002a 1B0E     	 lsrs r3,r3,#24
 4235 002c 03F00103 	 and r3,r3,#1
 4236 0030 002B     	 cmp r3,#0
 4237 0032 14BF     	 ite ne
 4238 0034 0123     	 movne r3,#1
 4239 0036 0023     	 moveq r3,#0
 4240 0038 FB73     	 strb r3,[r7,#15]
1569:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_GROUP_QueueDisableArbitrationSlot(group_ptr);
 4241              	 .loc 2 1569 0
 4242 003a 7868     	 ldr r0,[r7,#4]
 4243 003c FFF7FEFF 	 bl XMC_VADC_GROUP_QueueDisableArbitrationSlot
1570:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1571:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   length_before_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 4244              	 .loc 2 1571 0
 4245 0040 7868     	 ldr r0,[r7,#4]
 4246 0042 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 4247 0046 B860     	 str r0,[r7,#8]
1572:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1573:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (length_before_abort)
 4248              	 .loc 2 1573 0
 4249 0048 BB68     	 ldr r3,[r7,#8]
 4250 004a 002B     	 cmp r3,#0
 4251 004c 18D0     	 beq .L140
1574:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1575:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* Remove the first entry of the queue */
1576:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     group_ptr->QMR0 |= (uint32_t)VADC_G_QMR0_CLRV_Msk;
 4252              	 .loc 2 1576 0
 4253 004e 7B68     	 ldr r3,[r7,#4]
 4254 0050 D3F80431 	 ldr r3,[r3,#260]
 4255 0054 43F48072 	 orr r2,r3,#256
 4256 0058 7B68     	 ldr r3,[r7,#4]
 4257 005a D3F80411 	 ldr r1,[r3,#260]
 4258 005e 0021     	 movs r1,#0
 4259 0060 0A43     	 orrs r2,r2,r1
 4260 0062 C3F80421 	 str r2,[r3,#260]
1577:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1578:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 4261              	 .loc 2 1578 0
 4262 0066 7868     	 ldr r0,[r7,#4]
 4263 0068 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 4264 006c 7861     	 str r0,[r7,#20]
1579:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1580:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* Loop until a reduction in queue length is assessed */
1581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     while(length_after_abort == length_before_abort)
 4265              	 .loc 2 1581 0
 4266 006e 03E0     	 b .L141
 4267              	.L142:
1582:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
1583:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       length_after_abort = XMC_VADC_GROUP_QueueGetLength(group_ptr);
 4268              	 .loc 2 1583 0
 4269 0070 7868     	 ldr r0,[r7,#4]
 4270 0072 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueGetLength
 4271 0076 7861     	 str r0,[r7,#20]
 4272              	.L141:
1581:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
 4273              	 .loc 2 1581 0
 4274 0078 7A69     	 ldr r2,[r7,#20]
 4275 007a BB68     	 ldr r3,[r7,#8]
 4276 007c 9A42     	 cmp r2,r3
 4277 007e F7D0     	 beq .L142
 4278              	.L140:
1584:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
1585:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1586:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable the arbitration slot 0*/
1587:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ARBPR |= (uint32_t)((uint32_t)arbitration_status << VADC_G_ARBPR_ASEN0_Pos);
 4279              	 .loc 2 1587 0
 4280 0080 7B68     	 ldr r3,[r7,#4]
 4281 0082 D3F88420 	 ldr r2,[r3,#132]
 4282 0086 FB7B     	 ldrb r3,[r7,#15]
 4283 0088 1B06     	 lsls r3,r3,#24
 4284 008a 1A43     	 orrs r2,r2,r3
 4285 008c 7B68     	 ldr r3,[r7,#4]
 4286 008e D3F88410 	 ldr r1,[r3,#132]
 4287 0092 0021     	 movs r1,#0
 4288 0094 0A43     	 orrs r2,r2,r1
 4289 0096 C3F88420 	 str r2,[r3,#132]
1588:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1589:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Enable any disabled gating*/
1590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->QCTRL0 = (qctrl0 | (uint32_t)VADC_G_QCTRL0_XTWC_Msk |
1591:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 4290              	 .loc 2 1591 0
 4291 009a 3B69     	 ldr r3,[r7,#16]
 4292 009c 43F08023 	 orr r3,r3,#-2147450880
 4293 00a0 43F40003 	 orr r3,r3,#8388608
1590:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                    (uint32_t)VADC_G_QCTRL0_GTWC_Msk | (uint32_t)VADC_G_QCTRL0_TMWC_
 4294              	 .loc 2 1590 0
 4295 00a4 7A68     	 ldr r2,[r7,#4]
 4296 00a6 D2F80011 	 ldr r1,[r2,#256]
 4297 00aa 0021     	 movs r1,#0
 4298 00ac 0B43     	 orrs r3,r3,r1
 4299 00ae C2F80031 	 str r3,[r2,#256]
1592:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4300              	 .loc 2 1592 0
 4301 00b2 1837     	 adds r7,r7,#24
 4302              	.LCFI317:
 4303              	 .cfi_def_cfa_offset 8
 4304 00b4 BD46     	 mov sp,r7
 4305              	.LCFI318:
 4306              	 .cfi_def_cfa_register 13
 4307              	 
 4308 00b6 80BD     	 pop {r7,pc}
 4309              	 .cfi_endproc
 4310              	.LFE295:
 4312              	 .section .text.XMC_VADC_GROUP_QueueGetNextChannel,"ax",%progbits
 4313              	 .align 2
 4314              	 .global XMC_VADC_GROUP_QueueGetNextChannel
 4315              	 .thumb
 4316              	 .thumb_func
 4318              	XMC_VADC_GROUP_QueueGetNextChannel:
 4319              	.LFB296:
1593:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1594:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Get details of channel meant to be converted right after the ongoing conversion */
1595:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetNextChannel(XMC_VADC_GROUP_t *const group_ptr)
1596:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4320              	 .loc 2 1596 0
 4321              	 .cfi_startproc
 4322              	 
 4323              	 
 4324              	 
 4325 0000 80B4     	 push {r7}
 4326              	.LCFI319:
 4327              	 .cfi_def_cfa_offset 4
 4328              	 .cfi_offset 7,-4
 4329 0002 85B0     	 sub sp,sp,#20
 4330              	.LCFI320:
 4331              	 .cfi_def_cfa_offset 24
 4332 0004 00AF     	 add r7,sp,#0
 4333              	.LCFI321:
 4334              	 .cfi_def_cfa_register 7
 4335 0006 7860     	 str r0,[r7,#4]
1597:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1598:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1599:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetNextChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1600:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1601:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /*
1602:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    * Check if there is something in the backup stage. If not, read queue-0
1603:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    * entry.
1604:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****    */
1605:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if ( (group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 4336              	 .loc 2 1605 0
 4337 0008 7B68     	 ldr r3,[r7,#4]
 4338 000a D3F81031 	 ldr r3,[r3,#272]
 4339 000e 03F48073 	 and r3,r3,#256
 4340 0012 002B     	 cmp r3,#0
 4341 0014 06D0     	 beq .L144
1606:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1607:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
 4342              	 .loc 2 1607 0
 4343 0016 7B68     	 ldr r3,[r7,#4]
 4344 0018 D3F81031 	 ldr r3,[r3,#272]
 4345 001c 03F01F03 	 and r3,r3,#31
 4346 0020 FB60     	 str r3,[r7,#12]
 4347 0022 10E0     	 b .L145
 4348              	.L144:
1608:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1609:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if ( (group_ptr->Q0R0) & (uint32_t)VADC_G_Q0R0_V_Msk)
 4349              	 .loc 2 1609 0
 4350 0024 7B68     	 ldr r3,[r7,#4]
 4351 0026 D3F80C31 	 ldr r3,[r3,#268]
 4352 002a 03F48073 	 and r3,r3,#256
 4353 002e 002B     	 cmp r3,#0
 4354 0030 06D0     	 beq .L146
1610:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1611:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->Q0R0 & (uint32_t)VADC_G_Q0R0_REQCHNR_Msk);
 4355              	 .loc 2 1611 0
 4356 0032 7B68     	 ldr r3,[r7,#4]
 4357 0034 D3F80C31 	 ldr r3,[r3,#268]
 4358 0038 03F01F03 	 and r3,r3,#31
 4359 003c FB60     	 str r3,[r7,#12]
 4360 003e 02E0     	 b .L145
 4361              	.L146:
1612:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1613:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
1614:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1615:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* Nothing is pending */
1616:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
 4362              	 .loc 2 1616 0
 4363 0040 4FF0FF33 	 mov r3,#-1
 4364 0044 FB60     	 str r3,[r7,#12]
 4365              	.L145:
1617:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1618:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1619:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return ch_num;
 4366              	 .loc 2 1619 0
 4367 0046 FB68     	 ldr r3,[r7,#12]
1620:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4368              	 .loc 2 1620 0
 4369 0048 1846     	 mov r0,r3
 4370 004a 1437     	 adds r7,r7,#20
 4371              	.LCFI322:
 4372              	 .cfi_def_cfa_offset 4
 4373 004c BD46     	 mov sp,r7
 4374              	.LCFI323:
 4375              	 .cfi_def_cfa_register 13
 4376              	 
 4377 004e 5DF8047B 	 ldr r7,[sp],#4
 4378              	.LCFI324:
 4379              	 .cfi_restore 7
 4380              	 .cfi_def_cfa_offset 0
 4381 0052 7047     	 bx lr
 4382              	 .cfi_endproc
 4383              	.LFE296:
 4385              	 .section .text.XMC_VADC_GROUP_QueueGetInterruptedChannel,"ax",%progbits
 4386              	 .align 2
 4387              	 .global XMC_VADC_GROUP_QueueGetInterruptedChannel
 4388              	 .thumb
 4389              	 .thumb_func
 4391              	XMC_VADC_GROUP_QueueGetInterruptedChannel:
 4392              	.LFB297:
1621:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1622:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Get the channel number of the channel whose conversion had been interrupted */
1623:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** int32_t XMC_VADC_GROUP_QueueGetInterruptedChannel(XMC_VADC_GROUP_t *const group_ptr)
1624:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4393              	 .loc 2 1624 0
 4394              	 .cfi_startproc
 4395              	 
 4396              	 
 4397              	 
 4398 0000 80B4     	 push {r7}
 4399              	.LCFI325:
 4400              	 .cfi_def_cfa_offset 4
 4401              	 .cfi_offset 7,-4
 4402 0002 85B0     	 sub sp,sp,#20
 4403              	.LCFI326:
 4404              	 .cfi_def_cfa_offset 24
 4405 0004 00AF     	 add r7,sp,#0
 4406              	.LCFI327:
 4407              	 .cfi_def_cfa_register 7
 4408 0006 7860     	 str r0,[r7,#4]
1625:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   int32_t ch_num;
1626:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1627:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueGetInterruptedChannel:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1628:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1629:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if ((group_ptr->QBUR0) & (uint32_t)VADC_G_QBUR0_V_Msk)
 4409              	 .loc 2 1629 0
 4410 0008 7B68     	 ldr r3,[r7,#4]
 4411 000a D3F81031 	 ldr r3,[r3,#272]
 4412 000e 03F48073 	 and r3,r3,#256
 4413 0012 002B     	 cmp r3,#0
 4414 0014 06D0     	 beq .L149
1630:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1631:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     ch_num = (int32_t)(group_ptr->QBUR0 & (uint32_t)VADC_G_QBUR0_REQCHNR_Msk);
 4415              	 .loc 2 1631 0
 4416 0016 7B68     	 ldr r3,[r7,#4]
 4417 0018 D3F81031 	 ldr r3,[r3,#272]
 4418 001c 03F01F03 	 and r3,r3,#31
 4419 0020 FB60     	 str r3,[r7,#12]
 4420 0022 02E0     	 b .L150
 4421              	.L149:
1632:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1633:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
1634:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1635:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* No such channel */
1636:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     ch_num = -1;
 4422              	 .loc 2 1636 0
 4423 0024 4FF0FF33 	 mov r3,#-1
 4424 0028 FB60     	 str r3,[r7,#12]
 4425              	.L150:
1637:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1638:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1639:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return ch_num;
 4426              	 .loc 2 1639 0
 4427 002a FB68     	 ldr r3,[r7,#12]
1640:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4428              	 .loc 2 1640 0
 4429 002c 1846     	 mov r0,r3
 4430 002e 1437     	 adds r7,r7,#20
 4431              	.LCFI328:
 4432              	 .cfi_def_cfa_offset 4
 4433 0030 BD46     	 mov sp,r7
 4434              	.LCFI329:
 4435              	 .cfi_def_cfa_register 13
 4436              	 
 4437 0032 5DF8047B 	 ldr r7,[sp],#4
 4438              	.LCFI330:
 4439              	 .cfi_restore 7
 4440              	 .cfi_def_cfa_offset 0
 4441 0036 7047     	 bx lr
 4442              	 .cfi_endproc
 4443              	.LFE297:
 4445              	 .section .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode,"ax",%progbits
 4446              	 .align 2
 4447              	 .global XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
 4448              	 .thumb
 4449              	 .thumb_func
 4451              	XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:
 4452              	.LFB298:
1641:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1642:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Select a Service Request line for the request source event */
1643:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr, const XMC_V
1644:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4453              	 .loc 2 1644 0
 4454              	 .cfi_startproc
 4455              	 
 4456              	 
 4457              	 
 4458 0000 80B4     	 push {r7}
 4459              	.LCFI331:
 4460              	 .cfi_def_cfa_offset 4
 4461              	 .cfi_offset 7,-4
 4462 0002 85B0     	 sub sp,sp,#20
 4463              	.LCFI332:
 4464              	 .cfi_def_cfa_offset 24
 4465 0004 00AF     	 add r7,sp,#0
 4466              	.LCFI333:
 4467              	 .cfi_def_cfa_register 7
 4468 0006 7860     	 str r0,[r7,#4]
 4469 0008 0B46     	 mov r3,r1
 4470 000a FB70     	 strb r3,[r7,#3]
1645:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t sevnp;
1646:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1647:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_
1648:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:Wrong Service Request", ((sr)  <= XMC
1649:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1650:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   sevnp = group_ptr->SEVNP;
 4471              	 .loc 2 1650 0
 4472 000c 7B68     	 ldr r3,[r7,#4]
 4473 000e D3F8C031 	 ldr r3,[r3,#448]
 4474 0012 FB60     	 str r3,[r7,#12]
1651:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1652:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   sevnp &= ~((uint32_t)VADC_G_SEVNP_SEV0NP_Msk);
 4475              	 .loc 2 1652 0
 4476 0014 FB68     	 ldr r3,[r7,#12]
 4477 0016 23F00F03 	 bic r3,r3,#15
 4478 001a FB60     	 str r3,[r7,#12]
1653:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   sevnp |= (uint32_t)((uint32_t)sr << VADC_G_SEVNP_SEV0NP_Pos);
 4479              	 .loc 2 1653 0
 4480 001c FB78     	 ldrb r3,[r7,#3]
 4481 001e FA68     	 ldr r2,[r7,#12]
 4482 0020 1343     	 orrs r3,r3,r2
 4483 0022 FB60     	 str r3,[r7,#12]
1654:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1655:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->SEVNP = sevnp;
 4484              	 .loc 2 1655 0
 4485 0024 7B68     	 ldr r3,[r7,#4]
 4486 0026 D3F8C021 	 ldr r2,[r3,#448]
 4487 002a 0021     	 movs r1,#0
 4488 002c FA68     	 ldr r2,[r7,#12]
 4489 002e 0A43     	 orrs r2,r2,r1
 4490 0030 C3F8C021 	 str r2,[r3,#448]
1656:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1657:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4491              	 .loc 2 1657 0
 4492 0034 1437     	 adds r7,r7,#20
 4493              	.LCFI334:
 4494              	 .cfi_def_cfa_offset 4
 4495 0036 BD46     	 mov sp,r7
 4496              	.LCFI335:
 4497              	 .cfi_def_cfa_register 13
 4498              	 
 4499 0038 5DF8047B 	 ldr r7,[sp],#4
 4500              	.LCFI336:
 4501              	 .cfi_restore 7
 4502              	 .cfi_def_cfa_offset 0
 4503 003c 7047     	 bx lr
 4504              	 .cfi_endproc
 4505              	.LFE298:
 4507 003e 00BF     	 .section .text.XMC_VADC_GROUP_ChannelInit,"ax",%progbits
 4508              	 .align 2
 4509              	 .global XMC_VADC_GROUP_ChannelInit
 4510              	 .thumb
 4511              	 .thumb_func
 4513              	XMC_VADC_GROUP_ChannelInit:
 4514              	.LFB299:
1658:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
1659:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1660:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_GROUP_AVAILABLE ==1U)
1661:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to initialize a channel unit */
1662:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelInit(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num,
1663:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                         const XMC_VADC_CHANNEL_CONFIG_t *config)
1664:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4515              	 .loc 2 1664 0
 4516              	 .cfi_startproc
 4517              	 
 4518              	 
 4519              	 
 4520 0000 80B4     	 push {r7}
 4521              	.LCFI337:
 4522              	 .cfi_def_cfa_offset 4
 4523              	 .cfi_offset 7,-4
 4524 0002 89B0     	 sub sp,sp,#36
 4525              	.LCFI338:
 4526              	 .cfi_def_cfa_offset 40
 4527 0004 00AF     	 add r7,sp,#0
 4528              	.LCFI339:
 4529              	 .cfi_def_cfa_register 7
 4530 0006 F860     	 str r0,[r7,#12]
 4531 0008 B960     	 str r1,[r7,#8]
 4532 000a 7A60     	 str r2,[r7,#4]
1665:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t prio;
1666:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t ch_assign;
1667:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
1668:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1669:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1670:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_ptr))
1671:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelInit:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CHANNELS_P
1672:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   
1673:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   prio  = (uint32_t)config->channel_priority;
 4533              	 .loc 2 1673 0
 4534 000c 7B68     	 ldr r3,[r7,#4]
 4535 000e 1B7B     	 ldrb r3,[r3,#12]
 4536 0010 BB61     	 str r3,[r7,#24]
1674:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1675:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Priority channel */
1676:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   ch_assign  = group_ptr->CHASS;
 4537              	 .loc 2 1676 0
 4538 0012 FB68     	 ldr r3,[r7,#12]
 4539 0014 D3F88830 	 ldr r3,[r3,#136]
 4540 0018 7B61     	 str r3,[r7,#20]
1677:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   ch_assign &= ~((uint32_t)((uint32_t)1 << ch_num));
 4541              	 .loc 2 1677 0
 4542 001a BB68     	 ldr r3,[r7,#8]
 4543 001c 0122     	 movs r2,#1
 4544 001e 02FA03F3 	 lsl r3,r2,r3
 4545 0022 DB43     	 mvns r3,r3
 4546 0024 7A69     	 ldr r2,[r7,#20]
 4547 0026 1340     	 ands r3,r3,r2
 4548 0028 7B61     	 str r3,[r7,#20]
1678:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   ch_assign |= (uint32_t)(prio << ch_num);
 4549              	 .loc 2 1678 0
 4550 002a BB68     	 ldr r3,[r7,#8]
 4551 002c BA69     	 ldr r2,[r7,#24]
 4552 002e 02FA03F3 	 lsl r3,r2,r3
 4553 0032 7A69     	 ldr r2,[r7,#20]
 4554 0034 1343     	 orrs r3,r3,r2
 4555 0036 7B61     	 str r3,[r7,#20]
1679:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CHASS = ch_assign;
 4556              	 .loc 2 1679 0
 4557 0038 FB68     	 ldr r3,[r7,#12]
 4558 003a D3F88820 	 ldr r2,[r3,#136]
 4559 003e 0021     	 movs r1,#0
 4560 0040 7A69     	 ldr r2,[r7,#20]
 4561 0042 0A43     	 orrs r2,r2,r1
 4562 0044 C3F88820 	 str r2,[r3,#136]
1680:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1681:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Alias channel */
1682:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (config->alias_channel >= (int32_t)0)
 4563              	 .loc 2 1682 0
 4564 0048 7B68     	 ldr r3,[r7,#4]
 4565 004a 5B7B     	 ldrb r3,[r3,#13]
 4566 004c 5BB2     	 sxtb r3,r3
 4567 004e 002B     	 cmp r3,#0
 4568 0050 35DB     	 blt .L154
1683:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1684:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t)0;
 4569              	 .loc 2 1684 0
 4570 0052 0023     	 movs r3,#0
 4571 0054 FB61     	 str r3,[r7,#28]
1685:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     if ((uint32_t)1 == ch_num)
 4572              	 .loc 2 1685 0
 4573 0056 BB68     	 ldr r3,[r7,#8]
 4574 0058 012B     	 cmp r3,#1
 4575 005a 0ED1     	 bne .L155
1686:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
1687:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS1_Pos;
 4576              	 .loc 2 1687 0
 4577 005c 0823     	 movs r3,#8
 4578 005e FB61     	 str r3,[r7,#28]
1688:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS1_Msk);
 4579              	 .loc 2 1688 0
 4580 0060 FB68     	 ldr r3,[r7,#12]
 4581 0062 D3F8B030 	 ldr r3,[r3,#176]
 4582 0066 23F4F852 	 bic r2,r3,#7936
 4583 006a FB68     	 ldr r3,[r7,#12]
 4584 006c D3F8B010 	 ldr r1,[r3,#176]
 4585 0070 0021     	 movs r1,#0
 4586 0072 0A43     	 orrs r2,r2,r1
 4587 0074 C3F8B020 	 str r2,[r3,#176]
 4588 0078 10E0     	 b .L156
 4589              	.L155:
1689:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
1690:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     else if ((uint32_t)0 == ch_num)
 4590              	 .loc 2 1690 0
 4591 007a BB68     	 ldr r3,[r7,#8]
 4592 007c 002B     	 cmp r3,#0
 4593 007e 0DD1     	 bne .L156
1691:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
1692:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       mask = VADC_G_ALIAS_ALIAS0_Pos;
 4594              	 .loc 2 1692 0
 4595 0080 0023     	 movs r3,#0
 4596 0082 FB61     	 str r3,[r7,#28]
1693:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       group_ptr->ALIAS &= ~(uint32_t)(VADC_G_ALIAS_ALIAS0_Msk);
 4597              	 .loc 2 1693 0
 4598 0084 FB68     	 ldr r3,[r7,#12]
 4599 0086 D3F8B030 	 ldr r3,[r3,#176]
 4600 008a 23F01F02 	 bic r2,r3,#31
 4601 008e FB68     	 ldr r3,[r7,#12]
 4602 0090 D3F8B010 	 ldr r1,[r3,#176]
 4603 0094 0021     	 movs r1,#0
 4604 0096 0A43     	 orrs r2,r2,r1
 4605 0098 C3F8B020 	 str r2,[r3,#176]
 4606              	.L156:
1694:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
1695:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1696:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     group_ptr->ALIAS |= (uint32_t)(config->alias_channel << mask);
 4607              	 .loc 2 1696 0
 4608 009c FB68     	 ldr r3,[r7,#12]
 4609 009e D3F8B030 	 ldr r3,[r3,#176]
 4610 00a2 7A68     	 ldr r2,[r7,#4]
 4611 00a4 527B     	 ldrb r2,[r2,#13]
 4612 00a6 51B2     	 sxtb r1,r2
 4613 00a8 FA69     	 ldr r2,[r7,#28]
 4614 00aa 01FA02F2 	 lsl r2,r1,r2
 4615 00ae 1A43     	 orrs r2,r2,r3
 4616 00b0 FB68     	 ldr r3,[r7,#12]
 4617 00b2 D3F8B010 	 ldr r1,[r3,#176]
 4618 00b6 0021     	 movs r1,#0
 4619 00b8 0A43     	 orrs r2,r2,r1
 4620 00ba C3F8B020 	 str r2,[r3,#176]
 4621              	.L154:
1697:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1698:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1699:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->BFL |= config->bfl;
 4622              	 .loc 2 1699 0
 4623 00be FB68     	 ldr r3,[r7,#12]
 4624 00c0 D3F8C820 	 ldr r2,[r3,#200]
 4625 00c4 7B68     	 ldr r3,[r7,#4]
 4626 00c6 5B68     	 ldr r3,[r3,#4]
 4627 00c8 1A43     	 orrs r2,r2,r3
 4628 00ca FB68     	 ldr r3,[r7,#12]
 4629 00cc D3F8C810 	 ldr r1,[r3,#200]
 4630 00d0 0021     	 movs r1,#0
 4631 00d2 0A43     	 orrs r2,r2,r1
 4632 00d4 C3F8C820 	 str r2,[r3,#200]
1700:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1701:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #if (XMC_VADC_BOUNDARY_FLAG_SELECT == 1U)
1702:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->BFLC |= config->bflc;
 4633              	 .loc 2 1702 0
 4634 00d8 FB68     	 ldr r3,[r7,#12]
 4635 00da D3F8D020 	 ldr r2,[r3,#208]
 4636 00de 7B68     	 ldr r3,[r7,#4]
 4637 00e0 9B68     	 ldr r3,[r3,#8]
 4638 00e2 1A43     	 orrs r2,r2,r3
 4639 00e4 FB68     	 ldr r3,[r7,#12]
 4640 00e6 D3F8D010 	 ldr r1,[r3,#208]
 4641 00ea 0021     	 movs r1,#0
 4642 00ec 0A43     	 orrs r2,r2,r1
 4643 00ee C3F8D020 	 str r2,[r3,#208]
1703:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** #endif
1704:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Program the CHCTR register */
1705:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = config->chctr;
 4644              	 .loc 2 1705 0
 4645 00f2 7B68     	 ldr r3,[r7,#4]
 4646 00f4 1968     	 ldr r1,[r3]
 4647 00f6 FB68     	 ldr r3,[r7,#12]
 4648 00f8 BA68     	 ldr r2,[r7,#8]
 4649 00fa 8032     	 adds r2,r2,#128
 4650 00fc 53F82200 	 ldr r0,[r3,r2,lsl#2]
 4651 0100 0020     	 movs r0,#0
 4652 0102 0143     	 orrs r1,r1,r0
 4653 0104 43F82210 	 str r1,[r3,r2,lsl#2]
1706:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1707:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4654              	 .loc 2 1707 0
 4655 0108 2437     	 adds r7,r7,#36
 4656              	.LCFI340:
 4657              	 .cfi_def_cfa_offset 4
 4658 010a BD46     	 mov sp,r7
 4659              	.LCFI341:
 4660              	 .cfi_def_cfa_register 13
 4661              	 
 4662 010c 5DF8047B 	 ldr r7,[sp],#4
 4663              	.LCFI342:
 4664              	 .cfi_restore 7
 4665              	 .cfi_def_cfa_offset 0
 4666 0110 7047     	 bx lr
 4667              	 .cfi_endproc
 4668              	.LFE299:
 4670 0112 00BF     	 .section .text.XMC_VADC_GROUP_SetChannelAlias,"ax",%progbits
 4671              	 .align 2
 4672              	 .global XMC_VADC_GROUP_SetChannelAlias
 4673              	 .thumb
 4674              	 .thumb_func
 4676              	XMC_VADC_GROUP_SetChannelAlias:
 4677              	.LFB300:
1708:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1709:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to set an alias channel for channels numbered 2 through 7 */
1710:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetChannelAlias(XMC_VADC_GROUP_t *const group_ptr,
1711:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                     const uint32_t src_ch_num,
1712:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                     const uint32_t alias_ch_num)
1713:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4678              	 .loc 2 1713 0
 4679              	 .cfi_startproc
 4680              	 
 4681              	 
 4682              	 
 4683 0000 80B4     	 push {r7}
 4684              	.LCFI343:
 4685              	 .cfi_def_cfa_offset 4
 4686              	 .cfi_offset 7,-4
 4687 0002 89B0     	 sub sp,sp,#36
 4688              	.LCFI344:
 4689              	 .cfi_def_cfa_offset 40
 4690 0004 00AF     	 add r7,sp,#0
 4691              	.LCFI345:
 4692              	 .cfi_def_cfa_register 7
 4693 0006 F860     	 str r0,[r7,#12]
 4694 0008 B960     	 str r1,[r7,#8]
 4695 000a 7A60     	 str r2,[r7,#4]
1714:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t alias;
1715:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t mask;
1716:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t pos;
1717:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1718:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetChannelAlias:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
1719:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetChannelAlias:Wrong Alias Channel", ((alias_ch_num == 0)|| (alias_ch
1720:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetChannelAlias:Wrong Aliased Channel", ((src_ch_num < 8U)))
1721:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1722:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   alias = group_ptr->ALIAS;
 4696              	 .loc 2 1722 0
 4697 000c FB68     	 ldr r3,[r7,#12]
 4698 000e D3F8B030 	 ldr r3,[r3,#176]
 4699 0012 7B61     	 str r3,[r7,#20]
1723:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1724:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (0U == alias_ch_num)
 4700              	 .loc 2 1724 0
 4701 0014 7B68     	 ldr r3,[r7,#4]
 4702 0016 002B     	 cmp r3,#0
 4703 0018 04D1     	 bne .L158
1725:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1726:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t) VADC_G_ALIAS_ALIAS0_Msk;
 4704              	 .loc 2 1726 0
 4705 001a 1F23     	 movs r3,#31
 4706 001c FB61     	 str r3,[r7,#28]
1727:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t) VADC_G_ALIAS_ALIAS0_Pos;
 4707              	 .loc 2 1727 0
 4708 001e 0023     	 movs r3,#0
 4709 0020 BB61     	 str r3,[r7,#24]
 4710 0022 04E0     	 b .L159
 4711              	.L158:
1728:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1729:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
1730:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1731:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     mask = (uint32_t) VADC_G_ALIAS_ALIAS1_Msk;
 4712              	 .loc 2 1731 0
 4713 0024 4FF4F853 	 mov r3,#7936
 4714 0028 FB61     	 str r3,[r7,#28]
1732:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     pos  = (uint32_t) VADC_G_ALIAS_ALIAS1_Pos;
 4715              	 .loc 2 1732 0
 4716 002a 0823     	 movs r3,#8
 4717 002c BB61     	 str r3,[r7,#24]
 4718              	.L159:
1733:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1734:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   alias &= ~mask;
 4719              	 .loc 2 1734 0
 4720 002e FB69     	 ldr r3,[r7,#28]
 4721 0030 DB43     	 mvns r3,r3
 4722 0032 7A69     	 ldr r2,[r7,#20]
 4723 0034 1340     	 ands r3,r3,r2
 4724 0036 7B61     	 str r3,[r7,#20]
1735:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   alias |= (uint32_t)(src_ch_num << pos);
 4725              	 .loc 2 1735 0
 4726 0038 BB69     	 ldr r3,[r7,#24]
 4727 003a BA68     	 ldr r2,[r7,#8]
 4728 003c 02FA03F3 	 lsl r3,r2,r3
 4729 0040 7A69     	 ldr r2,[r7,#20]
 4730 0042 1343     	 orrs r3,r3,r2
 4731 0044 7B61     	 str r3,[r7,#20]
1736:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1737:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->ALIAS = alias;
 4732              	 .loc 2 1737 0
 4733 0046 FB68     	 ldr r3,[r7,#12]
 4734 0048 D3F8B020 	 ldr r2,[r3,#176]
 4735 004c 0021     	 movs r1,#0
 4736 004e 7A69     	 ldr r2,[r7,#20]
 4737 0050 0A43     	 orrs r2,r2,r1
 4738 0052 C3F8B020 	 str r2,[r3,#176]
1738:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4739              	 .loc 2 1738 0
 4740 0056 2437     	 adds r7,r7,#36
 4741              	.LCFI346:
 4742              	 .cfi_def_cfa_offset 4
 4743 0058 BD46     	 mov sp,r7
 4744              	.LCFI347:
 4745              	 .cfi_def_cfa_register 13
 4746              	 
 4747 005a 5DF8047B 	 ldr r7,[sp],#4
 4748              	.LCFI348:
 4749              	 .cfi_restore 7
 4750              	 .cfi_def_cfa_offset 0
 4751 005e 7047     	 bx lr
 4752              	 .cfi_endproc
 4753              	.LFE300:
 4755              	 .section .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds,"ax",%progbits
 4756              	 .align 2
 4757              	 .global XMC_VADC_GROUP_ChannelIsResultOutOfBounds
 4758              	 .thumb
 4759              	 .thumb_func
 4761              	XMC_VADC_GROUP_ChannelIsResultOutOfBounds:
 4762              	.LFB301:
1739:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1740:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to determine whether input to a channel has violated boundary conditions */
1741:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_ChannelIsResultOutOfBounds(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch
1742:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4763              	 .loc 2 1742 0
 4764              	 .cfi_startproc
 4765              	 
 4766              	 
 4767              	 
 4768 0000 80B4     	 push {r7}
 4769              	.LCFI349:
 4770              	 .cfi_def_cfa_offset 4
 4771              	 .cfi_offset 7,-4
 4772 0002 87B0     	 sub sp,sp,#28
 4773              	.LCFI350:
 4774              	 .cfi_def_cfa_offset 32
 4775 0004 00AF     	 add r7,sp,#0
 4776              	.LCFI351:
 4777              	 .cfi_def_cfa_register 7
 4778 0006 7860     	 str r0,[r7,#4]
 4779 0008 3960     	 str r1,[r7]
1743:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bool retval;
1744:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t    chctr;
1745:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t    ceflag;
1746:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1747:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_
1748:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelIsResultOutOfBounds:Wrong Channel Number",
1749:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1750:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1751:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   retval = (bool)false;
 4780              	 .loc 2 1751 0
 4781 000a 0023     	 movs r3,#0
 4782 000c FB75     	 strb r3,[r7,#23]
1752:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /*
1753:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     Check if the Channel event is configured to be generated in the event of
1754:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     boundary violation and if affirmative, check if the channel event is set.
1755:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   */
1756:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Extract CHEVMODE for requested channel */
1757:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 4783              	 .loc 2 1757 0
 4784 000e 7B68     	 ldr r3,[r7,#4]
 4785 0010 3A68     	 ldr r2,[r7]
 4786 0012 8032     	 adds r2,r2,#128
 4787 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4788 0018 3B61     	 str r3,[r7,#16]
1758:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr  = (uint32_t)(chctr >> (uint32_t)VADC_G_CHCTR_CHEVMODE_Pos)& (uint32_t)0x3;
 4789              	 .loc 2 1758 0
 4790 001a 3B69     	 ldr r3,[r7,#16]
 4791 001c 1B0A     	 lsrs r3,r3,#8
 4792 001e 03F00303 	 and r3,r3,#3
 4793 0022 3B61     	 str r3,[r7,#16]
1759:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1760:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Extract CEFLAG for the requested channel */
1761:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   ceflag = group_ptr->CEFLAG;
 4794              	 .loc 2 1761 0
 4795 0024 7B68     	 ldr r3,[r7,#4]
 4796 0026 D3F88031 	 ldr r3,[r3,#384]
 4797 002a FB60     	 str r3,[r7,#12]
1762:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   ceflag = ceflag & ((uint32_t)((uint32_t)1 << ch_num) );
 4798              	 .loc 2 1762 0
 4799 002c 3B68     	 ldr r3,[r7]
 4800 002e 0122     	 movs r2,#1
 4801 0030 02FA03F3 	 lsl r3,r2,r3
 4802 0034 FA68     	 ldr r2,[r7,#12]
 4803 0036 1340     	 ands r3,r3,r2
 4804 0038 FB60     	 str r3,[r7,#12]
1763:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1764:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Check what was the channel event generation criteria */
1765:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if ( (( (uint32_t)XMC_VADC_CHANNEL_EVGEN_INBOUND == chctr) \
 4805              	 .loc 2 1765 0
 4806 003a 3B69     	 ldr r3,[r7,#16]
 4807 003c 012B     	 cmp r3,#1
 4808 003e 02D0     	 beq .L161
1766:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       || ((uint32_t) XMC_VADC_CHANNEL_EVGEN_OUTBOUND == chctr)) && (ceflag) )
 4809              	 .loc 2 1766 0
 4810 0040 3B69     	 ldr r3,[r7,#16]
 4811 0042 022B     	 cmp r3,#2
 4812 0044 04D1     	 bne .L162
 4813              	.L161:
 4814              	 .loc 2 1766 0 is_stmt 0 discriminator 1
 4815 0046 FB68     	 ldr r3,[r7,#12]
 4816 0048 002B     	 cmp r3,#0
 4817 004a 01D0     	 beq .L162
1767:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1768:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     retval = (bool)true;
 4818              	 .loc 2 1768 0 is_stmt 1
 4819 004c 0123     	 movs r3,#1
 4820 004e FB75     	 strb r3,[r7,#23]
 4821              	.L162:
1769:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1770:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1771:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return retval;
 4822              	 .loc 2 1771 0
 4823 0050 FB7D     	 ldrb r3,[r7,#23]
1772:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4824              	 .loc 2 1772 0
 4825 0052 1846     	 mov r0,r3
 4826 0054 1C37     	 adds r7,r7,#28
 4827              	.LCFI352:
 4828              	 .cfi_def_cfa_offset 4
 4829 0056 BD46     	 mov sp,r7
 4830              	.LCFI353:
 4831              	 .cfi_def_cfa_register 13
 4832              	 
 4833 0058 5DF8047B 	 ldr r7,[sp],#4
 4834              	.LCFI354:
 4835              	 .cfi_restore 7
 4836              	 .cfi_def_cfa_offset 0
 4837 005c 7047     	 bx lr
 4838              	 .cfi_endproc
 4839              	.LFE301:
 4841 005e 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetInputReference,"ax",%progbits
 4842              	 .align 2
 4843              	 .global XMC_VADC_GROUP_ChannelSetInputReference
 4844              	 .thumb
 4845              	 .thumb_func
 4847              	XMC_VADC_GROUP_ChannelSetInputReference:
 4848              	.LFB302:
1773:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1774:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Set a reference voltage for conversion */
1775:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetInputReference(XMC_VADC_GROUP_t *const group_ptr,
1776:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                              const uint32_t ch_num,
1777:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                              const XMC_VADC_CHANNEL_REF_t ref)
1778:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4849              	 .loc 2 1778 0
 4850              	 .cfi_startproc
 4851              	 
 4852              	 
 4853              	 
 4854 0000 80B4     	 push {r7}
 4855              	.LCFI355:
 4856              	 .cfi_def_cfa_offset 4
 4857              	 .cfi_offset 7,-4
 4858 0002 87B0     	 sub sp,sp,#28
 4859              	.LCFI356:
 4860              	 .cfi_def_cfa_offset 32
 4861 0004 00AF     	 add r7,sp,#0
 4862              	.LCFI357:
 4863              	 .cfi_def_cfa_register 7
 4864 0006 F860     	 str r0,[r7,#12]
 4865 0008 B960     	 str r1,[r7,#8]
 4866 000a 1346     	 mov r3,r2
 4867 000c FB71     	 strb r3,[r7,#7]
1779:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1780:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1781:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Channel Number", ((ch_num) < XMC_VADC_N
1782:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetInputReference:Wrong Voltage Reference", ((ref)<= XMC_VADC_C
1783:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1784:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4868              	 .loc 2 1784 0
 4869 000e FB68     	 ldr r3,[r7,#12]
 4870 0010 BA68     	 ldr r2,[r7,#8]
 4871 0012 8032     	 adds r2,r2,#128
 4872 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4873 0018 7B61     	 str r3,[r7,#20]
1785:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_REFSEL_Msk);
 4874              	 .loc 2 1785 0
 4875 001a 7B69     	 ldr r3,[r7,#20]
 4876 001c 23F40063 	 bic r3,r3,#2048
 4877 0020 7B61     	 str r3,[r7,#20]
1786:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)ref <<  VADC_G_CHCTR_REFSEL_Pos);
 4878              	 .loc 2 1786 0
 4879 0022 FB79     	 ldrb r3,[r7,#7]
 4880 0024 DB02     	 lsls r3,r3,#11
 4881 0026 7A69     	 ldr r2,[r7,#20]
 4882 0028 1343     	 orrs r3,r3,r2
 4883 002a 7B61     	 str r3,[r7,#20]
1787:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1788:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4884              	 .loc 2 1788 0
 4885 002c FB68     	 ldr r3,[r7,#12]
 4886 002e BA68     	 ldr r2,[r7,#8]
 4887 0030 8032     	 adds r2,r2,#128
 4888 0032 53F82210 	 ldr r1,[r3,r2,lsl#2]
 4889 0036 0020     	 movs r0,#0
 4890 0038 7969     	 ldr r1,[r7,#20]
 4891 003a 0143     	 orrs r1,r1,r0
 4892 003c 43F82210 	 str r1,[r3,r2,lsl#2]
1789:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4893              	 .loc 2 1789 0
 4894 0040 1C37     	 adds r7,r7,#28
 4895              	.LCFI358:
 4896              	 .cfi_def_cfa_offset 4
 4897 0042 BD46     	 mov sp,r7
 4898              	.LCFI359:
 4899              	 .cfi_def_cfa_register 13
 4900              	 
 4901 0044 5DF8047B 	 ldr r7,[sp],#4
 4902              	.LCFI360:
 4903              	 .cfi_restore 7
 4904              	 .cfi_def_cfa_offset 0
 4905 0048 7047     	 bx lr
 4906              	 .cfi_endproc
 4907              	.LFE302:
 4909 004a 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetResultRegister,"ax",%progbits
 4910              	 .align 2
 4911              	 .global XMC_VADC_GROUP_ChannelSetResultRegister
 4912              	 .thumb
 4913              	 .thumb_func
 4915              	XMC_VADC_GROUP_ChannelSetResultRegister:
 4916              	.LFB303:
1790:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1791:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select one of the available 16 registers for storing the channel result */
1792:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetResultRegister(XMC_VADC_GROUP_t *const group_ptr,
1793:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                              const uint32_t ch_num,
1794:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                              const uint32_t result_reg_num)
1795:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4917              	 .loc 2 1795 0
 4918              	 .cfi_startproc
 4919              	 
 4920              	 
 4921              	 
 4922 0000 80B4     	 push {r7}
 4923              	.LCFI361:
 4924              	 .cfi_def_cfa_offset 4
 4925              	 .cfi_offset 7,-4
 4926 0002 87B0     	 sub sp,sp,#28
 4927              	.LCFI362:
 4928              	 .cfi_def_cfa_offset 32
 4929 0004 00AF     	 add r7,sp,#0
 4930              	.LCFI363:
 4931              	 .cfi_def_cfa_register 7
 4932 0006 F860     	 str r0,[r7,#12]
 4933 0008 B960     	 str r1,[r7,#8]
 4934 000a 7A60     	 str r2,[r7,#4]
1796:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1797:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1798:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1799:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Channel Number",
1800:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1801:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetResultRegister:Wrong Result Register",
1802:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((result_reg_num) < XMC_VADC_NUM_RESULT_REGISTERS))
1803:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1804:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 4935              	 .loc 2 1804 0
 4936 000c FB68     	 ldr r3,[r7,#12]
 4937 000e BA68     	 ldr r2,[r7,#8]
 4938 0010 8032     	 adds r2,r2,#128
 4939 0012 53F82230 	 ldr r3,[r3,r2,lsl#2]
 4940 0016 7B61     	 str r3,[r7,#20]
1805:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_RESREG_Msk);
 4941              	 .loc 2 1805 0
 4942 0018 7B69     	 ldr r3,[r7,#20]
 4943 001a 23F47023 	 bic r3,r3,#983040
 4944 001e 7B61     	 str r3,[r7,#20]
1806:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)(result_reg_num <<  VADC_G_CHCTR_RESREG_Pos);
 4945              	 .loc 2 1806 0
 4946 0020 7B68     	 ldr r3,[r7,#4]
 4947 0022 1B04     	 lsls r3,r3,#16
 4948 0024 7A69     	 ldr r2,[r7,#20]
 4949 0026 1343     	 orrs r3,r3,r2
 4950 0028 7B61     	 str r3,[r7,#20]
1807:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1808:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 4951              	 .loc 2 1808 0
 4952 002a FB68     	 ldr r3,[r7,#12]
 4953 002c BA68     	 ldr r2,[r7,#8]
 4954 002e 8032     	 adds r2,r2,#128
 4955 0030 53F82210 	 ldr r1,[r3,r2,lsl#2]
 4956 0034 0020     	 movs r0,#0
 4957 0036 7969     	 ldr r1,[r7,#20]
 4958 0038 0143     	 orrs r1,r1,r0
 4959 003a 43F82210 	 str r1,[r3,r2,lsl#2]
1809:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 4960              	 .loc 2 1809 0
 4961 003e 1C37     	 adds r7,r7,#28
 4962              	.LCFI364:
 4963              	 .cfi_def_cfa_offset 4
 4964 0040 BD46     	 mov sp,r7
 4965              	.LCFI365:
 4966              	 .cfi_def_cfa_register 13
 4967              	 
 4968 0042 5DF8047B 	 ldr r7,[sp],#4
 4969              	.LCFI366:
 4970              	 .cfi_restore 7
 4971              	 .cfi_def_cfa_offset 0
 4972 0046 7047     	 bx lr
 4973              	 .cfi_endproc
 4974              	.LFE303:
 4976              	 .section .text.XMC_VADC_GROUP_ChannelSetIclass,"ax",%progbits
 4977              	 .align 2
 4978              	 .global XMC_VADC_GROUP_ChannelSetIclass
 4979              	 .thumb
 4980              	 .thumb_func
 4982              	XMC_VADC_GROUP_ChannelSetIclass:
 4983              	.LFB304:
1810:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1811:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select one of the available 4 class conversion */
1812:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetIclass(XMC_VADC_GROUP_t *const group_ptr,
1813:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                      const uint32_t ch_num,
1814:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                      const XMC_VADC_CHANNEL_CONV_t conversion_class)
1815:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 4984              	 .loc 2 1815 0
 4985              	 .cfi_startproc
 4986              	 
 4987              	 
 4988              	 
 4989 0000 80B4     	 push {r7}
 4990              	.LCFI367:
 4991              	 .cfi_def_cfa_offset 4
 4992              	 .cfi_offset 7,-4
 4993 0002 87B0     	 sub sp,sp,#28
 4994              	.LCFI368:
 4995              	 .cfi_def_cfa_offset 32
 4996 0004 00AF     	 add r7,sp,#0
 4997              	.LCFI369:
 4998              	 .cfi_def_cfa_register 7
 4999 0006 F860     	 str r0,[r7,#12]
 5000 0008 B960     	 str r1,[r7,#8]
 5001 000a 1346     	 mov r3,r2
 5002 000c FB71     	 strb r3,[r7,#7]
1816:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1817:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1818:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1819:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_
1820:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong Channel Number",
1821:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1822:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetIclass:Wrong input class ",
1823:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              (XMC_VADC_CHANNEL_CONV_GLOBAL_CLASS1 >= conversion_class))
1824:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1825:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr = group_ptr->CHCTR[ch_num];
 5003              	 .loc 2 1825 0
 5004 000e FB68     	 ldr r3,[r7,#12]
 5005 0010 BA68     	 ldr r2,[r7,#8]
 5006 0012 8032     	 adds r2,r2,#128
 5007 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5008 0018 7B61     	 str r3,[r7,#20]
1826:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_ICLSEL_Msk);
 5009              	 .loc 2 1826 0
 5010 001a 7B69     	 ldr r3,[r7,#20]
 5011 001c 23F00303 	 bic r3,r3,#3
 5012 0020 7B61     	 str r3,[r7,#20]
1827:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)conversion_class <<  (uint32_t)VADC_G_CHCTR_ICLSEL_Pos);
 5013              	 .loc 2 1827 0
 5014 0022 FB79     	 ldrb r3,[r7,#7]
 5015 0024 7A69     	 ldr r2,[r7,#20]
 5016 0026 1343     	 orrs r3,r3,r2
 5017 0028 7B61     	 str r3,[r7,#20]
1828:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1829:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 5018              	 .loc 2 1829 0
 5019 002a FB68     	 ldr r3,[r7,#12]
 5020 002c BA68     	 ldr r2,[r7,#8]
 5021 002e 8032     	 adds r2,r2,#128
 5022 0030 53F82210 	 ldr r1,[r3,r2,lsl#2]
 5023 0034 0020     	 movs r0,#0
 5024 0036 7969     	 ldr r1,[r7,#20]
 5025 0038 0143     	 orrs r1,r1,r0
 5026 003a 43F82210 	 str r1,[r3,r2,lsl#2]
1830:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1831:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5027              	 .loc 2 1831 0
 5028 003e 1C37     	 adds r7,r7,#28
 5029              	.LCFI370:
 5030              	 .cfi_def_cfa_offset 4
 5031 0040 BD46     	 mov sp,r7
 5032              	.LCFI371:
 5033              	 .cfi_def_cfa_register 13
 5034              	 
 5035 0042 5DF8047B 	 ldr r7,[sp],#4
 5036              	.LCFI372:
 5037              	 .cfi_restore 7
 5038              	 .cfi_def_cfa_offset 0
 5039 0046 7047     	 bx lr
 5040              	 .cfi_endproc
 5041              	.LFE304:
 5043              	 .section .text.XMC_VADC_GROUP_ChannelGetResultRegister,"ax",%progbits
 5044              	 .align 2
 5045              	 .global XMC_VADC_GROUP_ChannelGetResultRegister
 5046              	 .thumb
 5047              	 .thumb_func
 5049              	XMC_VADC_GROUP_ChannelGetResultRegister:
 5050              	.LFB305:
1832:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1833:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result register bound with specified channel */
1834:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** uint8_t XMC_VADC_GROUP_ChannelGetResultRegister(XMC_VADC_GROUP_t *const group_ptr, const uint32_t c
1835:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5051              	 .loc 2 1835 0
 5052              	 .cfi_startproc
 5053              	 
 5054              	 
 5055              	 
 5056 0000 80B4     	 push {r7}
 5057              	.LCFI373:
 5058              	 .cfi_def_cfa_offset 4
 5059              	 .cfi_offset 7,-4
 5060 0002 85B0     	 sub sp,sp,#20
 5061              	.LCFI374:
 5062              	 .cfi_def_cfa_offset 24
 5063 0004 00AF     	 add r7,sp,#0
 5064              	.LCFI375:
 5065              	 .cfi_def_cfa_register 7
 5066 0006 7860     	 str r0,[r7,#4]
 5067 0008 3960     	 str r1,[r7]
1836:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint8_t resreg;
1837:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1838:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
1839:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelGetResultRegister:Wrong Channel Number",
1840:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1841:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1842:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   resreg = (uint8_t)((group_ptr->CHCTR[ch_num] & (uint32_t)VADC_G_CHCTR_RESREG_Msk) >> VADC_G_CHCTR
 5068              	 .loc 2 1842 0
 5069 000a 7B68     	 ldr r3,[r7,#4]
 5070 000c 3A68     	 ldr r2,[r7]
 5071 000e 8032     	 adds r2,r2,#128
 5072 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5073 0014 03F47023 	 and r3,r3,#983040
 5074 0018 1B0C     	 lsrs r3,r3,#16
 5075 001a FB73     	 strb r3,[r7,#15]
1843:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1844:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return resreg;
 5076              	 .loc 2 1844 0
 5077 001c FB7B     	 ldrb r3,[r7,#15]
1845:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5078              	 .loc 2 1845 0
 5079 001e 1846     	 mov r0,r3
 5080 0020 1437     	 adds r7,r7,#20
 5081              	.LCFI376:
 5082              	 .cfi_def_cfa_offset 4
 5083 0022 BD46     	 mov sp,r7
 5084              	.LCFI377:
 5085              	 .cfi_def_cfa_register 13
 5086              	 
 5087 0024 5DF8047B 	 ldr r7,[sp],#4
 5088              	.LCFI378:
 5089              	 .cfi_restore 7
 5090              	 .cfi_def_cfa_offset 0
 5091 0028 7047     	 bx lr
 5092              	 .cfi_endproc
 5093              	.LFE305:
 5095 002a 00BF     	 .section .text.XMC_VADC_GROUP_ChannelTriggerEvent,"ax",%progbits
 5096              	 .align 2
 5097              	 .global XMC_VADC_GROUP_ChannelTriggerEvent
 5098              	 .thumb
 5099              	 .thumb_func
 5101              	XMC_VADC_GROUP_ChannelTriggerEvent:
 5102              	.LFB306:
1846:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1847:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to manually assert channel event */
1848:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEvent(XMC_VADC_GROUP_t *const group_ptr, const uint32_t ch_num)
1849:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5103              	 .loc 2 1849 0
 5104              	 .cfi_startproc
 5105              	 
 5106              	 
 5107              	 
 5108 0000 80B4     	 push {r7}
 5109              	.LCFI379:
 5110              	 .cfi_def_cfa_offset 4
 5111              	 .cfi_offset 7,-4
 5112 0002 85B0     	 sub sp,sp,#20
 5113              	.LCFI380:
 5114              	 .cfi_def_cfa_offset 24
 5115 0004 00AF     	 add r7,sp,#0
 5116              	.LCFI381:
 5117              	 .cfi_def_cfa_register 7
 5118 0006 7860     	 str r0,[r7,#4]
 5119 0008 3960     	 str r1,[r7]
1850:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t ceflag;
1851:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1852:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gro
1853:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEvent:Wrong Channel Number", ((ch_num) < XMC_VADC_NUM_CH
1854:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1855:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   ceflag  = group_ptr->CEFLAG;
 5120              	 .loc 2 1855 0
 5121 000a 7B68     	 ldr r3,[r7,#4]
 5122 000c D3F88031 	 ldr r3,[r3,#384]
 5123 0010 FB60     	 str r3,[r7,#12]
1856:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   ceflag |= (uint32_t)((uint32_t)1 << ch_num);
 5124              	 .loc 2 1856 0
 5125 0012 3B68     	 ldr r3,[r7]
 5126 0014 0122     	 movs r2,#1
 5127 0016 02FA03F3 	 lsl r3,r2,r3
 5128 001a FA68     	 ldr r2,[r7,#12]
 5129 001c 1343     	 orrs r3,r3,r2
 5130 001e FB60     	 str r3,[r7,#12]
1857:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CEFLAG = ceflag;
 5131              	 .loc 2 1857 0
 5132 0020 7B68     	 ldr r3,[r7,#4]
 5133 0022 D3F88021 	 ldr r2,[r3,#384]
 5134 0026 0021     	 movs r1,#0
 5135 0028 FA68     	 ldr r2,[r7,#12]
 5136 002a 0A43     	 orrs r2,r2,r1
 5137 002c C3F88021 	 str r2,[r3,#384]
1858:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5138              	 .loc 2 1858 0
 5139 0030 1437     	 adds r7,r7,#20
 5140              	.LCFI382:
 5141              	 .cfi_def_cfa_offset 4
 5142 0032 BD46     	 mov sp,r7
 5143              	.LCFI383:
 5144              	 .cfi_def_cfa_register 13
 5145              	 
 5146 0034 5DF8047B 	 ldr r7,[sp],#4
 5147              	.LCFI384:
 5148              	 .cfi_restore 7
 5149              	 .cfi_def_cfa_offset 0
 5150 0038 7047     	 bx lr
 5151              	 .cfi_endproc
 5152              	.LFE306:
 5154 003a 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode,"ax",%progbits
 5155              	 .align 2
 5156              	 .global XMC_VADC_GROUP_ChannelSetEventInterruptNode
 5157              	 .thumb
 5158              	 .thumb_func
 5160              	XMC_VADC_GROUP_ChannelSetEventInterruptNode:
 5161              	.LFB307:
1859:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1860:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to bind channel event with a service request (NVIC Node) */
1861:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelSetEventInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1862:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                  const uint32_t ch_num,
1863:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                  const XMC_VADC_SR_t sr)
1864:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5162              	 .loc 2 1864 0
 5163              	 .cfi_startproc
 5164              	 
 5165              	 
 5166              	 
 5167 0000 80B4     	 push {r7}
 5168              	.LCFI385:
 5169              	 .cfi_def_cfa_offset 4
 5170              	 .cfi_offset 7,-4
 5171 0002 87B0     	 sub sp,sp,#28
 5172              	.LCFI386:
 5173              	 .cfi_def_cfa_offset 32
 5174 0004 00AF     	 add r7,sp,#0
 5175              	.LCFI387:
 5176              	 .cfi_def_cfa_register 7
 5177 0006 F860     	 str r0,[r7,#12]
 5178 0008 B960     	 str r1,[r7,#8]
 5179 000a 1346     	 mov r3,r2
 5180 000c FB71     	 strb r3,[r7,#7]
1865:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1866:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1867:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROU
1868:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Channel Number",
1869:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1870:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetEventInterruptNode:Wrong Service Request", ((sr)  <= XMC_VAD
1871:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1872:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   route_mask  = group_ptr->CEVNP0;
 5181              	 .loc 2 1872 0
 5182 000e FB68     	 ldr r3,[r7,#12]
 5183 0010 D3F8A031 	 ldr r3,[r3,#416]
 5184 0014 7B61     	 str r3,[r7,#20]
1873:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   route_mask &= ~((uint32_t)15 << (ch_num * (uint32_t)4));
 5185              	 .loc 2 1873 0
 5186 0016 BB68     	 ldr r3,[r7,#8]
 5187 0018 9B00     	 lsls r3,r3,#2
 5188 001a 1A46     	 mov r2,r3
 5189 001c 0F23     	 movs r3,#15
 5190 001e 9340     	 lsls r3,r3,r2
 5191 0020 DB43     	 mvns r3,r3
 5192 0022 7A69     	 ldr r2,[r7,#20]
 5193 0024 1340     	 ands r3,r3,r2
 5194 0026 7B61     	 str r3,[r7,#20]
1874:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   route_mask |= (uint32_t)( (uint32_t)sr << (ch_num * (uint32_t)4));
 5195              	 .loc 2 1874 0
 5196 0028 FB79     	 ldrb r3,[r7,#7]
 5197 002a BA68     	 ldr r2,[r7,#8]
 5198 002c 9200     	 lsls r2,r2,#2
 5199 002e 9340     	 lsls r3,r3,r2
 5200 0030 7A69     	 ldr r2,[r7,#20]
 5201 0032 1343     	 orrs r3,r3,r2
 5202 0034 7B61     	 str r3,[r7,#20]
1875:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CEVNP0 = route_mask;
 5203              	 .loc 2 1875 0
 5204 0036 FB68     	 ldr r3,[r7,#12]
 5205 0038 D3F8A021 	 ldr r2,[r3,#416]
 5206 003c 0021     	 movs r1,#0
 5207 003e 7A69     	 ldr r2,[r7,#20]
 5208 0040 0A43     	 orrs r2,r2,r1
 5209 0042 C3F8A021 	 str r2,[r3,#416]
1876:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5210              	 .loc 2 1876 0
 5211 0046 1C37     	 adds r7,r7,#28
 5212              	.LCFI388:
 5213              	 .cfi_def_cfa_offset 4
 5214 0048 BD46     	 mov sp,r7
 5215              	.LCFI389:
 5216              	 .cfi_def_cfa_register 13
 5217              	 
 5218 004a 5DF8047B 	 ldr r7,[sp],#4
 5219              	.LCFI390:
 5220              	 .cfi_restore 7
 5221              	 .cfi_def_cfa_offset 0
 5222 004e 7047     	 bx lr
 5223              	 .cfi_endproc
 5224              	.LFE307:
 5226              	 .section .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria,"ax",%progbits
 5227              	 .align 2
 5228              	 .global XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
 5229              	 .thumb
 5230              	 .thumb_func
 5232              	XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:
 5233              	.LFB308:
1877:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1878:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to configure conditions for generation of channel event */
1879:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_ChannelTriggerEventGenCriteria( XMC_VADC_GROUP_t *const group_ptr,
1880:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                    const uint32_t ch_num,
1881:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                    const XMC_VADC_CHANNEL_EVGEN_t criteria)
1882:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5234              	 .loc 2 1882 0
 5235              	 .cfi_startproc
 5236              	 
 5237              	 
 5238              	 
 5239 0000 80B4     	 push {r7}
 5240              	.LCFI391:
 5241              	 .cfi_def_cfa_offset 4
 5242              	 .cfi_offset 7,-4
 5243 0002 87B0     	 sub sp,sp,#28
 5244              	.LCFI392:
 5245              	 .cfi_def_cfa_offset 32
 5246 0004 00AF     	 add r7,sp,#0
 5247              	.LCFI393:
 5248              	 .cfi_def_cfa_register 7
 5249 0006 F860     	 str r0,[r7,#12]
 5250 0008 B960     	 str r1,[r7,#8]
 5251 000a 1346     	 mov r3,r2
 5252 000c FB71     	 strb r3,[r7,#7]
1883:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t chctr;
1884:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1885:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Group Pointer", XMC_VADC_CHECK_GR
1886:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Channel Number",
1887:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1888:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:Wrong Event Generation Criteria",
1889:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((criteria) <= XMC_VADC_CHANNEL_EVGEN_ALWAYS))
1890:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1891:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr  = group_ptr->CHCTR[ch_num];
 5253              	 .loc 2 1891 0
 5254 000e FB68     	 ldr r3,[r7,#12]
 5255 0010 BA68     	 ldr r2,[r7,#8]
 5256 0012 8032     	 adds r2,r2,#128
 5257 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5258 0018 7B61     	 str r3,[r7,#20]
1892:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr &= ~((uint32_t)VADC_G_CHCTR_CHEVMODE_Msk);
 5259              	 .loc 2 1892 0
 5260 001a 7B69     	 ldr r3,[r7,#20]
 5261 001c 23F44073 	 bic r3,r3,#768
 5262 0020 7B61     	 str r3,[r7,#20]
1893:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   chctr |= (uint32_t)((uint32_t)criteria << VADC_G_CHCTR_CHEVMODE_Pos);
 5263              	 .loc 2 1893 0
 5264 0022 FB79     	 ldrb r3,[r7,#7]
 5265 0024 1B02     	 lsls r3,r3,#8
 5266 0026 7A69     	 ldr r2,[r7,#20]
 5267 0028 1343     	 orrs r3,r3,r2
 5268 002a 7B61     	 str r3,[r7,#20]
1894:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] = chctr;
 5269              	 .loc 2 1894 0
 5270 002c FB68     	 ldr r3,[r7,#12]
 5271 002e BA68     	 ldr r2,[r7,#8]
 5272 0030 8032     	 adds r2,r2,#128
 5273 0032 53F82210 	 ldr r1,[r3,r2,lsl#2]
 5274 0036 0020     	 movs r0,#0
 5275 0038 7969     	 ldr r1,[r7,#20]
 5276 003a 0143     	 orrs r1,r1,r0
 5277 003c 43F82210 	 str r1,[r3,r2,lsl#2]
1895:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5278              	 .loc 2 1895 0
 5279 0040 1C37     	 adds r7,r7,#28
 5280              	.LCFI394:
 5281              	 .cfi_def_cfa_offset 4
 5282 0042 BD46     	 mov sp,r7
 5283              	.LCFI395:
 5284              	 .cfi_def_cfa_register 13
 5285              	 
 5286 0044 5DF8047B 	 ldr r7,[sp],#4
 5287              	.LCFI396:
 5288              	 .cfi_restore 7
 5289              	 .cfi_def_cfa_offset 0
 5290 0048 7047     	 bx lr
 5291              	 .cfi_endproc
 5292              	.LFE308:
 5294 004a 00BF     	 .section .text.XMC_VADC_GROUP_ChannelSetBoundarySelection,"ax",%progbits
 5295              	 .align 2
 5296              	 .global XMC_VADC_GROUP_ChannelSetBoundarySelection
 5297              	 .thumb
 5298              	 .thumb_func
 5300              	XMC_VADC_GROUP_ChannelSetBoundarySelection:
 5301              	.LFB309:
1896:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1897:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to configure the boundary selection */
1898:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void  XMC_VADC_GROUP_ChannelSetBoundarySelection(XMC_VADC_GROUP_t *const group_ptr,
1899:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                  const uint32_t ch_num,
1900:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                  XMC_VADC_BOUNDARY_SELECT_t boundary_sel,
1901:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                                  XMC_VADC_CHANNEL_BOUNDARY_t selection)
1902:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5302              	 .loc 2 1902 0
 5303              	 .cfi_startproc
 5304              	 
 5305              	 
 5306              	 
 5307 0000 80B4     	 push {r7}
 5308              	.LCFI397:
 5309              	 .cfi_def_cfa_offset 4
 5310              	 .cfi_offset 7,-4
 5311 0002 85B0     	 sub sp,sp,#20
 5312              	.LCFI398:
 5313              	 .cfi_def_cfa_offset 24
 5314 0004 00AF     	 add r7,sp,#0
 5315              	.LCFI399:
 5316              	 .cfi_def_cfa_register 7
 5317 0006 F860     	 str r0,[r7,#12]
 5318 0008 B960     	 str r1,[r7,#8]
 5319 000a 1146     	 mov r1,r2
 5320 000c 1A46     	 mov r2,r3
 5321 000e 0B46     	 mov r3,r1
 5322 0010 FB71     	 strb r3,[r7,#7]
 5323 0012 1346     	 mov r3,r2
 5324 0014 BB71     	 strb r3,[r7,#6]
1903:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Group Pointer", XMC_VADC_CHECK_GROUP
1904:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_ChannelSetBoundarySelection:Wrong Channel Number",
1905:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****               ((ch_num) < XMC_VADC_NUM_CHANNELS_PER_GROUP))
1906:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1907:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] &= ~((uint32_t)VADC_G_CHCTR_BNDSELL_Msk << boundary_sel);
 5325              	 .loc 2 1907 0
 5326 0016 FB68     	 ldr r3,[r7,#12]
 5327 0018 BA68     	 ldr r2,[r7,#8]
 5328 001a 8032     	 adds r2,r2,#128
 5329 001c 53F82220 	 ldr r2,[r3,r2,lsl#2]
 5330 0020 FB79     	 ldrb r3,[r7,#7]
 5331 0022 3021     	 movs r1,#48
 5332 0024 01FA03F3 	 lsl r3,r1,r3
 5333 0028 DB43     	 mvns r3,r3
 5334 002a 02EA0301 	 and r1,r2,r3
 5335 002e FB68     	 ldr r3,[r7,#12]
 5336 0030 BA68     	 ldr r2,[r7,#8]
 5337 0032 8032     	 adds r2,r2,#128
 5338 0034 53F82200 	 ldr r0,[r3,r2,lsl#2]
 5339 0038 0020     	 movs r0,#0
 5340 003a 0143     	 orrs r1,r1,r0
 5341 003c 43F82210 	 str r1,[r3,r2,lsl#2]
1908:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->CHCTR[ch_num] |= (selection<< ((uint32_t)VADC_G_CHCTR_BNDSELL_Pos + (uint32_t)boundary
 5342              	 .loc 2 1908 0
 5343 0040 FB68     	 ldr r3,[r7,#12]
 5344 0042 BA68     	 ldr r2,[r7,#8]
 5345 0044 8032     	 adds r2,r2,#128
 5346 0046 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5347 004a BA79     	 ldrb r2,[r7,#6]
 5348 004c F979     	 ldrb r1,[r7,#7]
 5349 004e 0431     	 adds r1,r1,#4
 5350 0050 8A40     	 lsls r2,r2,r1
 5351 0052 43EA0201 	 orr r1,r3,r2
 5352 0056 FB68     	 ldr r3,[r7,#12]
 5353 0058 BA68     	 ldr r2,[r7,#8]
 5354 005a 8032     	 adds r2,r2,#128
 5355 005c 53F82200 	 ldr r0,[r3,r2,lsl#2]
 5356 0060 0020     	 movs r0,#0
 5357 0062 0143     	 orrs r1,r1,r0
 5358 0064 43F82210 	 str r1,[r3,r2,lsl#2]
1909:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5359              	 .loc 2 1909 0
 5360 0068 1437     	 adds r7,r7,#20
 5361              	.LCFI400:
 5362              	 .cfi_def_cfa_offset 4
 5363 006a BD46     	 mov sp,r7
 5364              	.LCFI401:
 5365              	 .cfi_def_cfa_register 13
 5366              	 
 5367 006c 5DF8047B 	 ldr r7,[sp],#4
 5368              	.LCFI402:
 5369              	 .cfi_restore 7
 5370              	 .cfi_def_cfa_offset 0
 5371 0070 7047     	 bx lr
 5372              	 .cfi_endproc
 5373              	.LFE309:
 5375 0072 00BF     	 .section .text.XMC_VADC_GROUP_AddResultToFifo,"ax",%progbits
 5376              	 .align 2
 5377              	 .global XMC_VADC_GROUP_AddResultToFifo
 5378              	 .thumb
 5379              	 .thumb_func
 5381              	XMC_VADC_GROUP_AddResultToFifo:
 5382              	.LFB310:
1910:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1911:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Make the specified result register part of Result FIFO */ 
1912:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_AddResultToFifo(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg)
1913:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5383              	 .loc 2 1913 0
 5384              	 .cfi_startproc
 5385              	 
 5386              	 
 5387              	 
 5388 0000 80B4     	 push {r7}
 5389              	.LCFI403:
 5390              	 .cfi_def_cfa_offset 4
 5391              	 .cfi_offset 7,-4
 5392 0002 85B0     	 sub sp,sp,#20
 5393              	.LCFI404:
 5394              	 .cfi_def_cfa_offset 24
 5395 0004 00AF     	 add r7,sp,#0
 5396              	.LCFI405:
 5397              	 .cfi_def_cfa_register 7
 5398 0006 7860     	 str r0,[r7,#4]
 5399 0008 3960     	 str r1,[r7]
1914:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t fen;
1915:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1916:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group_p
1917:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_AddResultToFifo:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RESU
1918:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1919:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Extract and clear the FIFO enable field */
1920:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   fen = group_ptr->RCR[res_reg];
 5400              	 .loc 2 1920 0
 5401 000a 7B68     	 ldr r3,[r7,#4]
 5402 000c 3A68     	 ldr r2,[r7]
 5403 000e A032     	 adds r2,r2,#160
 5404 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5405 0014 FB60     	 str r3,[r7,#12]
1921:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   fen &= ~((uint32_t)VADC_G_RCR_FEN_Msk);
 5406              	 .loc 2 1921 0
 5407 0016 FB68     	 ldr r3,[r7,#12]
 5408 0018 23F0C063 	 bic r3,r3,#100663296
 5409 001c FB60     	 str r3,[r7,#12]
1922:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Set this register up as a FIFO member */
1923:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   fen |= (uint32_t)((uint32_t)1 << VADC_G_RCR_FEN_Pos);
 5410              	 .loc 2 1923 0
 5411 001e FB68     	 ldr r3,[r7,#12]
 5412 0020 43F00073 	 orr r3,r3,#33554432
 5413 0024 FB60     	 str r3,[r7,#12]
1924:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->RCR[res_reg] = fen;
 5414              	 .loc 2 1924 0
 5415 0026 7B68     	 ldr r3,[r7,#4]
 5416 0028 3A68     	 ldr r2,[r7]
 5417 002a A032     	 adds r2,r2,#160
 5418 002c 53F82210 	 ldr r1,[r3,r2,lsl#2]
 5419 0030 0020     	 movs r0,#0
 5420 0032 F968     	 ldr r1,[r7,#12]
 5421 0034 0143     	 orrs r1,r1,r0
 5422 0036 43F82210 	 str r1,[r3,r2,lsl#2]
1925:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5423              	 .loc 2 1925 0
 5424 003a 1437     	 adds r7,r7,#20
 5425              	.LCFI406:
 5426              	 .cfi_def_cfa_offset 4
 5427 003c BD46     	 mov sp,r7
 5428              	.LCFI407:
 5429              	 .cfi_def_cfa_register 13
 5430              	 
 5431 003e 5DF8047B 	 ldr r7,[sp],#4
 5432              	.LCFI408:
 5433              	 .cfi_restore 7
 5434              	 .cfi_def_cfa_offset 0
 5435 0042 7047     	 bx lr
 5436              	 .cfi_endproc
 5437              	.LFE310:
 5439              	 .section .text.XMC_VADC_GROUP_SetResultFastCompareValue,"ax",%progbits
 5440              	 .align 2
 5441              	 .global XMC_VADC_GROUP_SetResultFastCompareValue
 5442              	 .thumb
 5443              	 .thumb_func
 5445              	XMC_VADC_GROUP_SetResultFastCompareValue:
 5446              	.LFB311:
1926:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1927:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1928:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Applicable to fast compare mode, this API sets up the value which is to be compared against conv
1929:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultFastCompareValue(XMC_VADC_GROUP_t *const group_ptr,
1930:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                               const uint32_t res_reg,
1931:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                               const XMC_VADC_RESULT_SIZE_t compare_val)
1932:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5447              	 .loc 2 1932 0
 5448              	 .cfi_startproc
 5449              	 
 5450              	 
 5451              	 
 5452 0000 80B4     	 push {r7}
 5453              	.LCFI409:
 5454              	 .cfi_def_cfa_offset 4
 5455              	 .cfi_offset 7,-4
 5456 0002 87B0     	 sub sp,sp,#28
 5457              	.LCFI410:
 5458              	 .cfi_def_cfa_offset 32
 5459 0004 00AF     	 add r7,sp,#0
 5460              	.LCFI411:
 5461              	 .cfi_def_cfa_register 7
 5462 0006 F860     	 str r0,[r7,#12]
 5463 0008 B960     	 str r1,[r7,#8]
 5464 000a 1346     	 mov r3,r2
 5465 000c FB80     	 strh r3,[r7,#6]
1933:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t res = group_ptr->RES[res_reg];
 5466              	 .loc 2 1933 0
 5467 000e FB68     	 ldr r3,[r7,#12]
 5468 0010 BA68     	 ldr r2,[r7,#8]
 5469 0012 C032     	 adds r2,r2,#192
 5470 0014 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5471 0018 7B61     	 str r3,[r7,#20]
1934:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1935:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1936:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultFastCompareValue:Wrong Result Register",
1937:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****             ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
1938:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1939:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
 5472              	 .loc 2 1939 0
 5473 001a 7B69     	 ldr r3,[r7,#20]
 5474 001c 1B0C     	 lsrs r3,r3,#16
 5475 001e 1B04     	 lsls r3,r3,#16
 5476 0020 7B61     	 str r3,[r7,#20]
1940:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)((uint32_t)compare_val << XMC_VADC_RESULT_LEFT_ALIGN_10BIT);
 5477              	 .loc 2 1940 0
 5478 0022 FB88     	 ldrh r3,[r7,#6]
 5479 0024 9B00     	 lsls r3,r3,#2
 5480 0026 7A69     	 ldr r2,[r7,#20]
 5481 0028 1343     	 orrs r3,r3,r2
 5482 002a 7B61     	 str r3,[r7,#20]
1941:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[res_reg] = res;
 5483              	 .loc 2 1941 0
 5484 002c FB68     	 ldr r3,[r7,#12]
 5485 002e BA68     	 ldr r2,[r7,#8]
 5486 0030 C032     	 adds r2,r2,#192
 5487 0032 53F82210 	 ldr r1,[r3,r2,lsl#2]
 5488 0036 0020     	 movs r0,#0
 5489 0038 7969     	 ldr r1,[r7,#20]
 5490 003a 0143     	 orrs r1,r1,r0
 5491 003c 43F82210 	 str r1,[r3,r2,lsl#2]
1942:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5492              	 .loc 2 1942 0
 5493 0040 1C37     	 adds r7,r7,#28
 5494              	.LCFI412:
 5495              	 .cfi_def_cfa_offset 4
 5496 0042 BD46     	 mov sp,r7
 5497              	.LCFI413:
 5498              	 .cfi_def_cfa_register 13
 5499              	 
 5500 0044 5DF8047B 	 ldr r7,[sp],#4
 5501              	.LCFI414:
 5502              	 .cfi_restore 7
 5503              	 .cfi_def_cfa_offset 0
 5504 0048 7047     	 bx lr
 5505              	 .cfi_endproc
 5506              	.LFE311:
 5508 004a 00BF     	 .section .text.XMC_VADC_GROUP_GetFastCompareResult,"ax",%progbits
 5509              	 .align 2
 5510              	 .global XMC_VADC_GROUP_GetFastCompareResult
 5511              	 .thumb
 5512              	 .thumb_func
 5514              	XMC_VADC_GROUP_GetFastCompareResult:
 5515              	.LFB312:
1943:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1944:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to retrieve the result of fast mode comparison */
1945:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** XMC_VADC_FAST_COMPARE_t XMC_VADC_GROUP_GetFastCompareResult(XMC_VADC_GROUP_t *const group_ptr, cons
1946:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5516              	 .loc 2 1946 0
 5517              	 .cfi_startproc
 5518              	 
 5519              	 
 5520              	 
 5521 0000 80B4     	 push {r7}
 5522              	.LCFI415:
 5523              	 .cfi_def_cfa_offset 4
 5524              	 .cfi_offset 7,-4
 5525 0002 85B0     	 sub sp,sp,#20
 5526              	.LCFI416:
 5527              	 .cfi_def_cfa_offset 24
 5528 0004 00AF     	 add r7,sp,#0
 5529              	.LCFI417:
 5530              	 .cfi_def_cfa_register 7
 5531 0006 7860     	 str r0,[r7,#4]
 5532 0008 3960     	 str r1,[r7]
1947:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_VADC_FAST_COMPARE_t result;
1948:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t res;
1949:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1950:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(gr
1951:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetFastCompareResult:Wrong Result Register", ((res_reg) < XMC_VADC_NUM
1952:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1953:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   res = group_ptr->RES[res_reg];
 5533              	 .loc 2 1953 0
 5534 000a 7B68     	 ldr r3,[r7,#4]
 5535 000c 3A68     	 ldr r2,[r7]
 5536 000e C032     	 adds r2,r2,#192
 5537 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5538 0014 BB60     	 str r3,[r7,#8]
1954:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1955:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (res & (uint32_t)VADC_G_RES_VF_Msk)
 5539              	 .loc 2 1955 0
 5540 0016 BB68     	 ldr r3,[r7,#8]
 5541 0018 002B     	 cmp r3,#0
 5542 001a 06DA     	 bge .L176
1956:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1957:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     result = (XMC_VADC_FAST_COMPARE_t)((uint32_t)(res >> (uint32_t)VADC_G_RES_FCR_Pos) & (uint32_t)
 5543              	 .loc 2 1957 0
 5544 001c BB68     	 ldr r3,[r7,#8]
 5545 001e 9B0F     	 lsrs r3,r3,#30
 5546 0020 DBB2     	 uxtb r3,r3
 5547 0022 03F00103 	 and r3,r3,#1
 5548 0026 FB73     	 strb r3,[r7,#15]
 5549 0028 01E0     	 b .L177
 5550              	.L176:
1958:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1959:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
1960:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1961:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     result = XMC_VADC_FAST_COMPARE_UNKNOWN;
 5551              	 .loc 2 1961 0
 5552 002a 0223     	 movs r3,#2
 5553 002c FB73     	 strb r3,[r7,#15]
 5554              	.L177:
1962:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
1963:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1964:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return result;
 5555              	 .loc 2 1964 0
 5556 002e FB7B     	 ldrb r3,[r7,#15]
1965:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5557              	 .loc 2 1965 0
 5558 0030 1846     	 mov r0,r3
 5559 0032 1437     	 adds r7,r7,#20
 5560              	.LCFI418:
 5561              	 .cfi_def_cfa_offset 4
 5562 0034 BD46     	 mov sp,r7
 5563              	.LCFI419:
 5564              	 .cfi_def_cfa_register 13
 5565              	 
 5566 0036 5DF8047B 	 ldr r7,[sp],#4
 5567              	.LCFI420:
 5568              	 .cfi_restore 7
 5569              	 .cfi_def_cfa_offset 0
 5570 003a 7047     	 bx lr
 5571              	 .cfi_endproc
 5572              	.LFE312:
 5574              	 .section .text.XMC_VADC_GROUP_SetResultSubtractionValue,"ax",%progbits
 5575              	 .align 2
 5576              	 .global XMC_VADC_GROUP_SetResultSubtractionValue
 5577              	 .thumb
 5578              	 .thumb_func
 5580              	XMC_VADC_GROUP_SetResultSubtractionValue:
 5581              	.LFB313:
1966:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1967:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* Applicable to fast compare mode, this API sets up the value which is to be compared against conv
1968:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultSubtractionValue(XMC_VADC_GROUP_t *const group_ptr,
1969:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                               const uint16_t subtraction_val)
1970:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5582              	 .loc 2 1970 0
 5583              	 .cfi_startproc
 5584              	 
 5585              	 
 5586              	 
 5587 0000 80B4     	 push {r7}
 5588              	.LCFI421:
 5589              	 .cfi_def_cfa_offset 4
 5590              	 .cfi_offset 7,-4
 5591 0002 85B0     	 sub sp,sp,#20
 5592              	.LCFI422:
 5593              	 .cfi_def_cfa_offset 24
 5594 0004 00AF     	 add r7,sp,#0
 5595              	.LCFI423:
 5596              	 .cfi_def_cfa_register 7
 5597 0006 7860     	 str r0,[r7,#4]
 5598 0008 0B46     	 mov r3,r1
 5599 000a 7B80     	 strh r3,[r7,#2]
1971:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t res;
1972:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1973:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultSubtractionValue:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_P
1974:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1975:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   res = group_ptr->RES[0];
 5600              	 .loc 2 1975 0
 5601 000c 7B68     	 ldr r3,[r7,#4]
 5602 000e D3F80033 	 ldr r3,[r3,#768]
 5603 0012 FB60     	 str r3,[r7,#12]
1976:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   res &= ~((uint32_t)VADC_G_RES_RESULT_Msk);
 5604              	 .loc 2 1976 0
 5605 0014 FB68     	 ldr r3,[r7,#12]
 5606 0016 1B0C     	 lsrs r3,r3,#16
 5607 0018 1B04     	 lsls r3,r3,#16
 5608 001a FB60     	 str r3,[r7,#12]
1977:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   res |= (uint32_t)subtraction_val;
 5609              	 .loc 2 1977 0
 5610 001c 7B88     	 ldrh r3,[r7,#2]
 5611 001e FA68     	 ldr r2,[r7,#12]
 5612 0020 1343     	 orrs r3,r3,r2
 5613 0022 FB60     	 str r3,[r7,#12]
1978:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   group_ptr->RES[0] = res;
 5614              	 .loc 2 1978 0
 5615 0024 7B68     	 ldr r3,[r7,#4]
 5616 0026 D3F80023 	 ldr r2,[r3,#768]
 5617 002a 0021     	 movs r1,#0
 5618 002c FA68     	 ldr r2,[r7,#12]
 5619 002e 0A43     	 orrs r2,r2,r1
 5620 0030 C3F80023 	 str r2,[r3,#768]
1979:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5621              	 .loc 2 1979 0
 5622 0034 1437     	 adds r7,r7,#20
 5623              	.LCFI424:
 5624              	 .cfi_def_cfa_offset 4
 5625 0036 BD46     	 mov sp,r7
 5626              	.LCFI425:
 5627              	 .cfi_def_cfa_register 13
 5628              	 
 5629 0038 5DF8047B 	 ldr r7,[sp],#4
 5630              	.LCFI426:
 5631              	 .cfi_restore 7
 5632              	 .cfi_def_cfa_offset 0
 5633 003c 7047     	 bx lr
 5634              	 .cfi_endproc
 5635              	.LFE313:
 5637 003e 00BF     	 .section .text.XMC_VADC_GROUP_SetResultInterruptNode,"ax",%progbits
 5638              	 .align 2
 5639              	 .global XMC_VADC_GROUP_SetResultInterruptNode
 5640              	 .thumb
 5641              	 .thumb_func
 5643              	XMC_VADC_GROUP_SetResultInterruptNode:
 5644              	.LFB314:
1980:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1981:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1982:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to select a service request line (NVIC Node) for result event of specified unit of result ha
1983:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** void XMC_VADC_GROUP_SetResultInterruptNode(XMC_VADC_GROUP_t *const group_ptr,
1984:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                            const uint32_t res_reg,
1985:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****                                            const XMC_VADC_SR_t sr)
1986:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5645              	 .loc 2 1986 0
 5646              	 .cfi_startproc
 5647              	 
 5648              	 
 5649              	 
 5650 0000 80B4     	 push {r7}
 5651              	.LCFI427:
 5652              	 .cfi_def_cfa_offset 4
 5653              	 .cfi_offset 7,-4
 5654 0002 87B0     	 sub sp,sp,#28
 5655              	.LCFI428:
 5656              	 .cfi_def_cfa_offset 32
 5657 0004 00AF     	 add r7,sp,#0
 5658              	.LCFI429:
 5659              	 .cfi_def_cfa_register 7
 5660 0006 F860     	 str r0,[r7,#12]
 5661 0008 B960     	 str r1,[r7,#8]
 5662 000a 1346     	 mov r3,r2
 5663 000c FB71     	 strb r3,[r7,#7]
1987:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t route_mask;
1988:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1989:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(
1990:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Result Register", ((res_reg) < XMC_VADC_N
1991:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_SetResultInterruptNode:Wrong Service Request", ((sr)  <= XMC_VADC_SR_S
1992:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
1993:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (res_reg <= 7U)
 5664              	 .loc 2 1993 0
 5665 000e BB68     	 ldr r3,[r7,#8]
 5666 0010 072B     	 cmp r3,#7
 5667 0012 1CD8     	 bhi .L181
1994:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
1995:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     route_mask  = group_ptr->REVNP0;
 5668              	 .loc 2 1995 0
 5669 0014 FB68     	 ldr r3,[r7,#12]
 5670 0016 D3F8B031 	 ldr r3,[r3,#432]
 5671 001a 7B61     	 str r3,[r7,#20]
1996:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (res_reg * (uint32_t)4) ));
 5672              	 .loc 2 1996 0
 5673 001c BB68     	 ldr r3,[r7,#8]
 5674 001e 9B00     	 lsls r3,r3,#2
 5675 0020 1A46     	 mov r2,r3
 5676 0022 0F23     	 movs r3,#15
 5677 0024 9340     	 lsls r3,r3,r2
 5678 0026 DB43     	 mvns r3,r3
 5679 0028 7A69     	 ldr r2,[r7,#20]
 5680 002a 1340     	 ands r3,r3,r2
 5681 002c 7B61     	 str r3,[r7,#20]
1997:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << (res_reg * (uint32_t)4));
 5682              	 .loc 2 1997 0
 5683 002e FB79     	 ldrb r3,[r7,#7]
 5684 0030 BA68     	 ldr r2,[r7,#8]
 5685 0032 9200     	 lsls r2,r2,#2
 5686 0034 9340     	 lsls r3,r3,r2
 5687 0036 7A69     	 ldr r2,[r7,#20]
 5688 0038 1343     	 orrs r3,r3,r2
 5689 003a 7B61     	 str r3,[r7,#20]
1998:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP0 = route_mask;
 5690              	 .loc 2 1998 0
 5691 003c FB68     	 ldr r3,[r7,#12]
 5692 003e D3F8B021 	 ldr r2,[r3,#432]
 5693 0042 0021     	 movs r1,#0
 5694 0044 7A69     	 ldr r2,[r7,#20]
 5695 0046 0A43     	 orrs r2,r2,r1
 5696 0048 C3F8B021 	 str r2,[r3,#432]
 5697 004c 22E0     	 b .L180
 5698              	.L181:
1999:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2000:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
2001:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
2002:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     route_mask = group_ptr->REVNP1;
 5699              	 .loc 2 2002 0
 5700 004e FB68     	 ldr r3,[r7,#12]
 5701 0050 D3F8B431 	 ldr r3,[r3,#436]
 5702 0054 7B61     	 str r3,[r7,#20]
2003:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     route_mask &= ~((uint32_t)((uint32_t)15 << (( res_reg - (uint32_t)8) * (uint32_t)4) ));
 5703              	 .loc 2 2003 0
 5704 0056 BB68     	 ldr r3,[r7,#8]
 5705 0058 03F18043 	 add r3,r3,#1073741824
 5706 005c 083B     	 subs r3,r3,#8
 5707 005e 9B00     	 lsls r3,r3,#2
 5708 0060 1A46     	 mov r2,r3
 5709 0062 0F23     	 movs r3,#15
 5710 0064 9340     	 lsls r3,r3,r2
 5711 0066 DB43     	 mvns r3,r3
 5712 0068 7A69     	 ldr r2,[r7,#20]
 5713 006a 1340     	 ands r3,r3,r2
 5714 006c 7B61     	 str r3,[r7,#20]
2004:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     route_mask |= (uint32_t)((uint32_t)sr << ((res_reg - (uint32_t)8) * (uint32_t)4));
 5715              	 .loc 2 2004 0
 5716 006e FA79     	 ldrb r2,[r7,#7]
 5717 0070 BB68     	 ldr r3,[r7,#8]
 5718 0072 03F18043 	 add r3,r3,#1073741824
 5719 0076 083B     	 subs r3,r3,#8
 5720 0078 9B00     	 lsls r3,r3,#2
 5721 007a 02FA03F3 	 lsl r3,r2,r3
 5722 007e 7A69     	 ldr r2,[r7,#20]
 5723 0080 1343     	 orrs r3,r3,r2
 5724 0082 7B61     	 str r3,[r7,#20]
2005:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     group_ptr->REVNP1 = route_mask;
 5725              	 .loc 2 2005 0
 5726 0084 FB68     	 ldr r3,[r7,#12]
 5727 0086 D3F8B421 	 ldr r2,[r3,#436]
 5728 008a 0021     	 movs r1,#0
 5729 008c 7A69     	 ldr r2,[r7,#20]
 5730 008e 0A43     	 orrs r2,r2,r1
 5731 0090 C3F8B421 	 str r2,[r3,#436]
 5732              	.L180:
2006:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2007:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5733              	 .loc 2 2007 0
 5734 0094 1C37     	 adds r7,r7,#28
 5735              	.LCFI430:
 5736              	 .cfi_def_cfa_offset 4
 5737 0096 BD46     	 mov sp,r7
 5738              	.LCFI431:
 5739              	 .cfi_def_cfa_register 13
 5740              	 
 5741 0098 5DF8047B 	 ldr r7,[sp],#4
 5742              	.LCFI432:
 5743              	 .cfi_restore 7
 5744              	 .cfi_def_cfa_offset 0
 5745 009c 7047     	 bx lr
 5746              	 .cfi_endproc
 5747              	.LFE314:
 5749 009e 00BF     	 .section .text.XMC_VADC_GROUP_GetResultFifoTail,"ax",%progbits
 5750              	 .align 2
 5751              	 .global XMC_VADC_GROUP_GetResultFifoTail
 5752              	 .thumb
 5753              	 .thumb_func
 5755              	XMC_VADC_GROUP_GetResultFifoTail:
 5756              	.LFB315:
2008:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2009:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to retrieve the tail of the fifo which the specified result register is a part of */
2010:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoTail(XMC_VADC_GROUP_t *const group_ptr, uint32_t res_reg)
2011:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5757              	 .loc 2 2011 0
 5758              	 .cfi_startproc
 5759              	 
 5760              	 
 5761 0000 80B5     	 push {r7,lr}
 5762              	.LCFI433:
 5763              	 .cfi_def_cfa_offset 8
 5764              	 .cfi_offset 7,-8
 5765              	 .cfi_offset 14,-4
 5766 0002 86B0     	 sub sp,sp,#24
 5767              	.LCFI434:
 5768              	 .cfi_def_cfa_offset 32
 5769 0004 00AF     	 add r7,sp,#0
 5770              	.LCFI435:
 5771              	 .cfi_def_cfa_register 7
 5772 0006 7860     	 str r0,[r7,#4]
 5773 0008 3960     	 str r1,[r7]
2012:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t tail;
2013:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
2014:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   int32_t i;
2015:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bool exit_flag;
2016:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2017:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2018:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoTail:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
2019:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2020:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   tail = 0U;
 5774              	 .loc 2 2020 0
 5775 000a 0023     	 movs r3,#0
 5776 000c 7B61     	 str r3,[r7,#20]
2021:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   exit_flag= (bool)false;
 5777              	 .loc 2 2021 0
 5778 000e 0023     	 movs r3,#0
 5779 0010 FB73     	 strb r3,[r7,#15]
2022:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2023:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
 5780              	 .loc 2 2023 0
 5781 0012 7868     	 ldr r0,[r7,#4]
 5782 0014 3968     	 ldr r1,[r7]
 5783 0016 FFF7FEFF 	 bl XMC_VADC_GROUP_IsResultRegisterFifoHead
 5784 001a 0346     	 mov r3,r0
 5785 001c 002B     	 cmp r3,#0
 5786 001e 02D0     	 beq .L184
2024:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
2025:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     res_reg = res_reg - 1U;
 5787              	 .loc 2 2025 0
 5788 0020 3B68     	 ldr r3,[r7]
 5789 0022 013B     	 subs r3,r3,#1
 5790 0024 3B60     	 str r3,[r7]
 5791              	.L184:
2026:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2027:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2028:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   /* Border condition */
2029:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (0U == res_reg)
 5792              	 .loc 2 2029 0
 5793 0026 3B68     	 ldr r3,[r7]
 5794 0028 002B     	 cmp r3,#0
 5795 002a 02D1     	 bne .L185
2030:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
2031:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     tail = 0U;
 5796              	 .loc 2 2031 0
 5797 002c 0023     	 movs r3,#0
 5798 002e 7B61     	 str r3,[r7,#20]
 5799 0030 26E0     	 b .L186
 5800              	.L185:
2032:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2033:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
2034:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
2035:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     /* Stop either at a node that does not have FEN set or at Node-0 */
2036:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     for(i = (int32_t)res_reg; i >= (int32_t)0; i--)
 5801              	 .loc 2 2036 0
 5802 0032 3B68     	 ldr r3,[r7]
 5803 0034 3B61     	 str r3,[r7,#16]
 5804 0036 20E0     	 b .L187
 5805              	.L192:
2037:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
2038:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        rcr = group_ptr->RCR[i];
 5806              	 .loc 2 2038 0
 5807 0038 7B68     	 ldr r3,[r7,#4]
 5808 003a 3A69     	 ldr r2,[r7,#16]
 5809 003c A032     	 adds r2,r2,#160
 5810 003e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5811 0042 BB60     	 str r3,[r7,#8]
2039:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5812              	 .loc 2 2039 0
 5813 0044 BB68     	 ldr r3,[r7,#8]
 5814 0046 03F0C063 	 and r3,r3,#100663296
 5815 004a BB60     	 str r3,[r7,#8]
2040:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2041:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        if (rcr)
 5816              	 .loc 2 2041 0
 5817 004c BB68     	 ldr r3,[r7,#8]
 5818 004e 002B     	 cmp r3,#0
 5819 0050 07D0     	 beq .L188
2042:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        {
2043:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****          if ((int32_t)0 == i)
 5820              	 .loc 2 2043 0
 5821 0052 3B69     	 ldr r3,[r7,#16]
 5822 0054 002B     	 cmp r3,#0
 5823 0056 09D1     	 bne .L190
2044:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****          {
2045:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****           /* No more nodes. Stop here */
2046:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****           tail = (uint32_t)0;
 5824              	 .loc 2 2046 0
 5825 0058 0023     	 movs r3,#0
 5826 005a 7B61     	 str r3,[r7,#20]
2047:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****           exit_flag = (bool)true;
 5827              	 .loc 2 2047 0
 5828 005c 0123     	 movs r3,#1
 5829 005e FB73     	 strb r3,[r7,#15]
 5830 0060 04E0     	 b .L190
 5831              	.L188:
2048:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****          }
2049:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        }
2050:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        else
2051:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        {
2052:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****          /* The preceding register forms the tail of the FIFO */
2053:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****          tail = (uint32_t)i + (uint32_t)1;
 5832              	 .loc 2 2053 0
 5833 0062 3B69     	 ldr r3,[r7,#16]
 5834 0064 0133     	 adds r3,r3,#1
 5835 0066 7B61     	 str r3,[r7,#20]
2054:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****          exit_flag = (bool)true;
 5836              	 .loc 2 2054 0
 5837 0068 0123     	 movs r3,#1
 5838 006a FB73     	 strb r3,[r7,#15]
 5839              	.L190:
2055:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        }
2056:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        if (exit_flag)
 5840              	 .loc 2 2056 0
 5841 006c FB7B     	 ldrb r3,[r7,#15]
 5842 006e 002B     	 cmp r3,#0
 5843 0070 00D0     	 beq .L191
2057:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        {
2058:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****          break;
 5844              	 .loc 2 2058 0
 5845 0072 05E0     	 b .L186
 5846              	.L191:
2036:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
 5847              	 .loc 2 2036 0 discriminator 2
 5848 0074 3B69     	 ldr r3,[r7,#16]
 5849 0076 013B     	 subs r3,r3,#1
 5850 0078 3B61     	 str r3,[r7,#16]
 5851              	.L187:
2036:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
 5852              	 .loc 2 2036 0 is_stmt 0 discriminator 1
 5853 007a 3B69     	 ldr r3,[r7,#16]
 5854 007c 002B     	 cmp r3,#0
 5855 007e DBDA     	 bge .L192
 5856              	.L186:
2059:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****        }
2060:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
2061:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2062:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return tail;
 5857              	 .loc 2 2062 0 is_stmt 1
 5858 0080 7B69     	 ldr r3,[r7,#20]
2063:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5859              	 .loc 2 2063 0
 5860 0082 1846     	 mov r0,r3
 5861 0084 1837     	 adds r7,r7,#24
 5862              	.LCFI436:
 5863              	 .cfi_def_cfa_offset 8
 5864 0086 BD46     	 mov sp,r7
 5865              	.LCFI437:
 5866              	 .cfi_def_cfa_register 13
 5867              	 
 5868 0088 80BD     	 pop {r7,pc}
 5869              	 .cfi_endproc
 5870              	.LFE315:
 5872              	 .section .text.XMC_VADC_GROUP_GetResultFifoHead,"ax",%progbits
 5873              	 .align 2
 5874              	 .global XMC_VADC_GROUP_GetResultFifoHead
 5875              	 .thumb
 5876              	 .thumb_func
 5878              	XMC_VADC_GROUP_GetResultFifoHead:
 5879              	.LFB316:
2064:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2065:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to retrieve the head of the fifo which the specified result register is a part of */
2066:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** uint32_t XMC_VADC_GROUP_GetResultFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_reg
2067:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5880              	 .loc 2 2067 0
 5881              	 .cfi_startproc
 5882              	 
 5883              	 
 5884 0000 80B5     	 push {r7,lr}
 5885              	.LCFI438:
 5886              	 .cfi_def_cfa_offset 8
 5887              	 .cfi_offset 7,-8
 5888              	 .cfi_offset 14,-4
 5889 0002 86B0     	 sub sp,sp,#24
 5890              	.LCFI439:
 5891              	 .cfi_def_cfa_offset 32
 5892 0004 00AF     	 add r7,sp,#0
 5893              	.LCFI440:
 5894              	 .cfi_def_cfa_register 7
 5895 0006 7860     	 str r0,[r7,#4]
 5896 0008 3960     	 str r1,[r7]
2068:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t head;
2069:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t rcr;
2070:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t i;
2071:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2072:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PTR(group
2073:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_GetResultFifoHead:Wrong Result Register", ((res_reg) < XMC_VADC_NUM_RE
2074:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2075:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if ((bool)true == XMC_VADC_GROUP_IsResultRegisterFifoHead(group_ptr, res_reg))
 5897              	 .loc 2 2075 0
 5898 000a 7868     	 ldr r0,[r7,#4]
 5899 000c 3968     	 ldr r1,[r7]
 5900 000e FFF7FEFF 	 bl XMC_VADC_GROUP_IsResultRegisterFifoHead
 5901 0012 0346     	 mov r3,r0
 5902 0014 002B     	 cmp r3,#0
 5903 0016 02D0     	 beq .L195
2076:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
2077:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       head = res_reg;
 5904              	 .loc 2 2077 0
 5905 0018 3B68     	 ldr r3,[r7]
 5906 001a 7B61     	 str r3,[r7,#20]
 5907 001c 1AE0     	 b .L196
 5908              	.L195:
2078:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2079:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
2080:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
2081:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     head = XMC_VADC_NUM_RESULT_REGISTERS - (uint32_t)1;
 5909              	 .loc 2 2081 0
 5910 001e 0F23     	 movs r3,#15
 5911 0020 7B61     	 str r3,[r7,#20]
2082:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2083:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     for(i = res_reg; i < XMC_VADC_NUM_RESULT_REGISTERS ; i++)
 5912              	 .loc 2 2083 0
 5913 0022 3B68     	 ldr r3,[r7]
 5914 0024 3B61     	 str r3,[r7,#16]
 5915 0026 12E0     	 b .L197
 5916              	.L199:
2084:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
2085:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       rcr = group_ptr->RCR[i];
 5917              	 .loc 2 2085 0
 5918 0028 7B68     	 ldr r3,[r7,#4]
 5919 002a 3A69     	 ldr r2,[r7,#16]
 5920 002c A032     	 adds r2,r2,#160
 5921 002e 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5922 0032 FB60     	 str r3,[r7,#12]
2086:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       rcr &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5923              	 .loc 2 2086 0
 5924 0034 FB68     	 ldr r3,[r7,#12]
 5925 0036 03F0C063 	 and r3,r3,#100663296
 5926 003a FB60     	 str r3,[r7,#12]
2087:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2088:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       if (!rcr)
 5927              	 .loc 2 2088 0
 5928 003c FB68     	 ldr r3,[r7,#12]
 5929 003e 002B     	 cmp r3,#0
 5930 0040 02D1     	 bne .L198
2089:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       {
2090:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****         /* This node forms the head of the FIFO */
2091:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****         head = i ;
 5931              	 .loc 2 2091 0
 5932 0042 3B69     	 ldr r3,[r7,#16]
 5933 0044 7B61     	 str r3,[r7,#20]
2092:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****         break;
 5934              	 .loc 2 2092 0
 5935 0046 05E0     	 b .L196
 5936              	.L198:
2083:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
 5937              	 .loc 2 2083 0 discriminator 2
 5938 0048 3B69     	 ldr r3,[r7,#16]
 5939 004a 0133     	 adds r3,r3,#1
 5940 004c 3B61     	 str r3,[r7,#16]
 5941              	.L197:
2083:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     {
 5942              	 .loc 2 2083 0 is_stmt 0 discriminator 1
 5943 004e 3B69     	 ldr r3,[r7,#16]
 5944 0050 0F2B     	 cmp r3,#15
 5945 0052 E9D9     	 bls .L199
 5946              	.L196:
2093:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****       }
2094:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     }
2095:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2096:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return head;
 5947              	 .loc 2 2096 0 is_stmt 1
 5948 0054 7B69     	 ldr r3,[r7,#20]
2097:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 5949              	 .loc 2 2097 0
 5950 0056 1846     	 mov r0,r3
 5951 0058 1837     	 adds r7,r7,#24
 5952              	.LCFI441:
 5953              	 .cfi_def_cfa_offset 8
 5954 005a BD46     	 mov sp,r7
 5955              	.LCFI442:
 5956              	 .cfi_def_cfa_register 13
 5957              	 
 5958 005c 80BD     	 pop {r7,pc}
 5959              	 .cfi_endproc
 5960              	.LFE316:
 5962 005e 00BF     	 .section .text.XMC_VADC_GROUP_IsResultRegisterFifoHead,"ax",%progbits
 5963              	 .align 2
 5964              	 .global XMC_VADC_GROUP_IsResultRegisterFifoHead
 5965              	 .thumb
 5966              	 .thumb_func
 5968              	XMC_VADC_GROUP_IsResultRegisterFifoHead:
 5969              	.LFB317:
2098:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2099:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** /* API to determine if the specified result register is the head of a result fifo */
2100:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** bool XMC_VADC_GROUP_IsResultRegisterFifoHead(XMC_VADC_GROUP_t *const group_ptr, const uint32_t res_
2101:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** {
 5970              	 .loc 2 2101 0
 5971              	 .cfi_startproc
 5972              	 
 5973              	 
 5974              	 
 5975 0000 80B4     	 push {r7}
 5976              	.LCFI443:
 5977              	 .cfi_def_cfa_offset 4
 5978              	 .cfi_offset 7,-4
 5979 0002 87B0     	 sub sp,sp,#28
 5980              	.LCFI444:
 5981              	 .cfi_def_cfa_offset 32
 5982 0004 00AF     	 add r7,sp,#0
 5983              	.LCFI445:
 5984              	 .cfi_def_cfa_register 7
 5985 0006 7860     	 str r0,[r7,#4]
 5986 0008 3960     	 str r1,[r7]
2102:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   bool ret_val;
2103:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_head;
2104:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   uint32_t rcr_next;
2105:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2106:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Group Pointer", XMC_VADC_CHECK_GROUP_PT
2107:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   XMC_ASSERT("XMC_VADC_GROUP_IsResultRegisterFifoHead:Wrong Result Register",
2108:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****              ((res_reg) < XMC_VADC_NUM_RESULT_REGISTERS))
2109:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2110:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   rcr_head = group_ptr->RCR[res_reg];
 5987              	 .loc 2 2110 0
 5988 000a 7B68     	 ldr r3,[r7,#4]
 5989 000c 3A68     	 ldr r2,[r7]
 5990 000e A032     	 adds r2,r2,#160
 5991 0010 53F82230 	 ldr r3,[r3,r2,lsl#2]
 5992 0014 3B61     	 str r3,[r7,#16]
2111:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   rcr_head &= (uint32_t)VADC_G_RCR_FEN_Msk;
 5993              	 .loc 2 2111 0
 5994 0016 3B69     	 ldr r3,[r7,#16]
 5995 0018 03F0C063 	 and r3,r3,#100663296
 5996 001c 3B61     	 str r3,[r7,#16]
2112:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   rcr_next = group_ptr->RCR[res_reg - (uint32_t)1];
 5997              	 .loc 2 2112 0
 5998 001e 3B68     	 ldr r3,[r7]
 5999 0020 5A1E     	 subs r2,r3,#1
 6000 0022 7B68     	 ldr r3,[r7,#4]
 6001 0024 A032     	 adds r2,r2,#160
 6002 0026 53F82230 	 ldr r3,[r3,r2,lsl#2]
 6003 002a FB60     	 str r3,[r7,#12]
2113:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   rcr_next &= (uint32_t)VADC_G_RCR_FEN_Msk;
 6004              	 .loc 2 2113 0
 6005 002c FB68     	 ldr r3,[r7,#12]
 6006 002e 03F0C063 	 and r3,r3,#100663296
 6007 0032 FB60     	 str r3,[r7,#12]
2114:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2115:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   if (rcr_head)
 6008              	 .loc 2 2115 0
 6009 0034 3B69     	 ldr r3,[r7,#16]
 6010 0036 002B     	 cmp r3,#0
 6011 0038 02D0     	 beq .L202
2116:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
2117:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
 6012              	 .loc 2 2117 0
 6013 003a 0023     	 movs r3,#0
 6014 003c FB75     	 strb r3,[r7,#23]
 6015 003e 07E0     	 b .L203
 6016              	.L202:
2118:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2119:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else if (rcr_next)
 6017              	 .loc 2 2119 0
 6018 0040 FB68     	 ldr r3,[r7,#12]
 6019 0042 002B     	 cmp r3,#0
 6020 0044 02D0     	 beq .L204
2120:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
2121:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)true;
 6021              	 .loc 2 2121 0
 6022 0046 0123     	 movs r3,#1
 6023 0048 FB75     	 strb r3,[r7,#23]
 6024 004a 01E0     	 b .L203
 6025              	.L204:
2122:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2123:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   else
2124:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   {
2125:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****     ret_val = (bool)false;
 6026              	 .loc 2 2125 0
 6027 004c 0023     	 movs r3,#0
 6028 004e FB75     	 strb r3,[r7,#23]
 6029              	.L203:
2126:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   }
2127:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** 
2128:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c ****   return ret_val;
 6030              	 .loc 2 2128 0
 6031 0050 FB7D     	 ldrb r3,[r7,#23]
2129:../cleanflight/lib/main/XMC4000/XMCLib/src/xmc_vadc.c **** }
 6032              	 .loc 2 2129 0
 6033 0052 1846     	 mov r0,r3
 6034 0054 1C37     	 adds r7,r7,#28
 6035              	.LCFI446:
 6036              	 .cfi_def_cfa_offset 4
 6037 0056 BD46     	 mov sp,r7
 6038              	.LCFI447:
 6039              	 .cfi_def_cfa_register 13
 6040              	 
 6041 0058 5DF8047B 	 ldr r7,[sp],#4
 6042              	.LCFI448:
 6043              	 .cfi_restore 7
 6044              	 .cfi_def_cfa_offset 0
 6045 005c 7047     	 bx lr
 6046              	 .cfi_endproc
 6047              	.LFE317:
 6049 005e 00BF     	 .text
 6050              	.Letext0:
 6051              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 6052              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 6053              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
 6054              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_scu.h"
 6055              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 6056              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_vadc.c
    {standard input}:20     .text.XMC_VADC_GROUP_ExternalMuxControlInit:00000000 $t
    {standard input}:24     .text.XMC_VADC_GROUP_ExternalMuxControlInit:00000000 XMC_VADC_GROUP_ExternalMuxControlInit
    {standard input}:120    .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot:00000000 $t
    {standard input}:124    .text.XMC_VADC_GROUP_ScanEnableArbitrationSlot:00000000 XMC_VADC_GROUP_ScanEnableArbitrationSlot
    {standard input}:168    .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot:00000000 $t
    {standard input}:172    .text.XMC_VADC_GROUP_ScanDisableArbitrationSlot:00000000 XMC_VADC_GROUP_ScanDisableArbitrationSlot
    {standard input}:216    .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:00000000 $t
    {standard input}:220    .text.XMC_VADC_GROUP_BackgroundEnableArbitrationSlot:00000000 XMC_VADC_GROUP_BackgroundEnableArbitrationSlot
    {standard input}:264    .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:00000000 $t
    {standard input}:268    .text.XMC_VADC_GROUP_BackgroundDisableArbitrationSlot:00000000 XMC_VADC_GROUP_BackgroundDisableArbitrationSlot
    {standard input}:312    .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot:00000000 $t
    {standard input}:316    .text.XMC_VADC_GROUP_QueueEnableArbitrationSlot:00000000 XMC_VADC_GROUP_QueueEnableArbitrationSlot
    {standard input}:360    .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot:00000000 $t
    {standard input}:364    .text.XMC_VADC_GROUP_QueueDisableArbitrationSlot:00000000 XMC_VADC_GROUP_QueueDisableArbitrationSlot
    {standard input}:408    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 $t
    {standard input}:412    .text.XMC_VADC_GROUP_QueueFlushEntries:00000000 XMC_VADC_GROUP_QueueFlushEntries
    {standard input}:465    .rodata.g_xmc_vadc_group_array:00000000 $d
    {standard input}:468    .rodata.g_xmc_vadc_group_array:00000000 g_xmc_vadc_group_array
    {standard input}:474    .text.XMC_VADC_GLOBAL_EnableModule:00000000 $t
    {standard input}:479    .text.XMC_VADC_GLOBAL_EnableModule:00000000 XMC_VADC_GLOBAL_EnableModule
    {standard input}:506    .text.XMC_VADC_GLOBAL_DisableModule:00000000 $t
    {standard input}:511    .text.XMC_VADC_GLOBAL_DisableModule:00000000 XMC_VADC_GLOBAL_DisableModule
    {standard input}:537    .text.XMC_VADC_GLOBAL_Init:00000000 $t
    {standard input}:542    .text.XMC_VADC_GLOBAL_Init:00000000 XMC_VADC_GLOBAL_Init
    {standard input}:625    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 $t
    {standard input}:630    .text.XMC_VADC_GLOBAL_InputClassInit:00000000 XMC_VADC_GLOBAL_InputClassInit
    {standard input}:697    .text.XMC_VADC_GLOBAL_InputClassInit:00000054 $d
    {standard input}:702    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 $t
    {standard input}:707    .text.XMC_VADC_GLOBAL_StartupCalibration:00000000 XMC_VADC_GLOBAL_StartupCalibration
    {standard input}:791    .text.XMC_VADC_GLOBAL_StartupCalibration:00000068 $d
    {standard input}:796    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 $t
    {standard input}:801    .text.XMC_VADC_GLOBAL_SetBoundaries:00000000 XMC_VADC_GLOBAL_SetBoundaries
    {standard input}:859    .text.XMC_VADC_GLOBAL_SetIndividualBoundary:00000000 $t
    {standard input}:864    .text.XMC_VADC_GLOBAL_SetIndividualBoundary:00000000 XMC_VADC_GLOBAL_SetIndividualBoundary
    {standard input}:946    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 $t
    {standard input}:951    .text.XMC_VADC_GLOBAL_SetCompareValue:00000000 XMC_VADC_GLOBAL_SetCompareValue
    {standard input}:1009   .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 $t
    {standard input}:1014   .text.XMC_VADC_GLOBAL_GetCompareResult:00000000 XMC_VADC_GLOBAL_GetCompareResult
    {standard input}:1072   .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 $t
    {standard input}:1077   .text.XMC_VADC_GLOBAL_BindGroupToEMux:00000000 XMC_VADC_GLOBAL_BindGroupToEMux
    {standard input}:1156   .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 $t
    {standard input}:1161   .text.XMC_VADC_GLOBAL_SetResultEventInterruptNode:00000000 XMC_VADC_GLOBAL_SetResultEventInterruptNode
    {standard input}:1232   .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:1237   .text.XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode:00000000 XMC_VADC_GLOBAL_BackgroundSetReqSrcEventInterruptNode
    {standard input}:1307   .text.XMC_VADC_GROUP_Init:00000000 $t
    {standard input}:1312   .text.XMC_VADC_GROUP_Init:00000000 XMC_VADC_GROUP_Init
    {standard input}:1413   .text.XMC_VADC_GROUP_InputClassInit:00000000 XMC_VADC_GROUP_InputClassInit
    {standard input}:1408   .text.XMC_VADC_GROUP_InputClassInit:00000000 $t
    {standard input}:1544   .text.XMC_VADC_GROUP_SetPowerMode:00000000 $t
    {standard input}:1549   .text.XMC_VADC_GROUP_SetPowerMode:00000000 XMC_VADC_GROUP_SetPowerMode
    {standard input}:1606   .text.XMC_VADC_GROUP_SetSyncSlave:00000000 $t
    {standard input}:1611   .text.XMC_VADC_GROUP_SetSyncSlave:00000000 XMC_VADC_GROUP_SetSyncSlave
    {standard input}:1678   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 $t
    {standard input}:1683   .text.XMC_VADC_GROUP_SetSyncMaster:00000000 XMC_VADC_GROUP_SetSyncMaster
    {standard input}:1733   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 $t
    {standard input}:1738   .text.XMC_VADC_GROUP_CheckSlaveReadiness:00000000 XMC_VADC_GROUP_CheckSlaveReadiness
    {standard input}:1825   .text.XMC_VADC_GROUP_CheckSlaveReadiness:0000006c $d
    {standard input}:1830   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 $t
    {standard input}:1835   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:00000000 XMC_VADC_GROUP_IgnoreSlaveReadiness
    {standard input}:1923   .text.XMC_VADC_GROUP_IgnoreSlaveReadiness:0000006c $d
    {standard input}:1928   .text.XMC_VADC_GROUP_SetSyncSlaveReadySignal:00000000 $t
    {standard input}:1933   .text.XMC_VADC_GROUP_SetSyncSlaveReadySignal:00000000 XMC_VADC_GROUP_SetSyncSlaveReadySignal
    {standard input}:1994   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 $t
    {standard input}:1999   .text.XMC_VADC_GROUP_EnableChannelSyncRequest:00000000 XMC_VADC_GROUP_EnableChannelSyncRequest
    {standard input}:2058   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 $t
    {standard input}:2063   .text.XMC_VADC_GROUP_DisableChannelSyncRequest:00000000 XMC_VADC_GROUP_DisableChannelSyncRequest
    {standard input}:2122   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 $t
    {standard input}:2127   .text.XMC_VADC_GROUP_IsConverterBusy:00000000 XMC_VADC_GROUP_IsConverterBusy
    {standard input}:2178   .text.XMC_VADC_GROUP_SetBoundaries:00000000 $t
    {standard input}:2183   .text.XMC_VADC_GROUP_SetBoundaries:00000000 XMC_VADC_GROUP_SetBoundaries
    {standard input}:2252   .text.XMC_VADC_GROUP_SetIndividualBoundary:00000000 $t
    {standard input}:2257   .text.XMC_VADC_GROUP_SetIndividualBoundary:00000000 XMC_VADC_GROUP_SetIndividualBoundary
    {standard input}:2339   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 $t
    {standard input}:2344   .text.XMC_VADC_GROUP_TriggerServiceRequest:00000000 XMC_VADC_GROUP_TriggerServiceRequest
    {standard input}:2416   .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode:00000000 $t
    {standard input}:2421   .text.XMC_VADC_GROUP_SetBoundaryEventInterruptNode:00000000 XMC_VADC_GROUP_SetBoundaryEventInterruptNode
    {standard input}:2489   .text.XMC_VADC_GROUP_ScanInit:00000000 $t
    {standard input}:2494   .text.XMC_VADC_GROUP_ScanInit:00000000 XMC_VADC_GROUP_ScanInit
    {standard input}:2604   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 $t
    {standard input}:2609   .text.XMC_VADC_GROUP_ScanSelectTrigger:00000000 XMC_VADC_GROUP_ScanSelectTrigger
    {standard input}:2671   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 $t
    {standard input}:2676   .text.XMC_VADC_GROUP_ScanSelectTriggerEdge:00000000 XMC_VADC_GROUP_ScanSelectTriggerEdge
    {standard input}:2738   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 $t
    {standard input}:2743   .text.XMC_VADC_GROUP_ScanSelectGating:00000000 XMC_VADC_GROUP_ScanSelectGating
    {standard input}:2805   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 $t
    {standard input}:2810   .text.XMC_VADC_GROUP_ScanSequenceAbort:00000000 XMC_VADC_GROUP_ScanSequenceAbort
    {standard input}:2904   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 $t
    {standard input}:2909   .text.XMC_VADC_GROUP_ScanGetNumChannelsPending:00000000 XMC_VADC_GROUP_ScanGetNumChannelsPending
    {standard input}:2988   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:2993   .text.XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_ScanSetReqSrcEventInterruptNode
    {standard input}:3051   .text.XMC_VADC_GROUP_ScanRemoveChannel:00000000 $t
    {standard input}:3056   .text.XMC_VADC_GROUP_ScanRemoveChannel:00000000 XMC_VADC_GROUP_ScanRemoveChannel
    {standard input}:3112   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 $t
    {standard input}:3117   .text.XMC_VADC_GLOBAL_BackgroundInit:00000000 XMC_VADC_GLOBAL_BackgroundInit
    {standard input}:3285   .text.XMC_VADC_GLOBAL_BackgroundInit:0000011c $d
    {standard input}:3290   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 $t
    {standard input}:3295   .text.XMC_VADC_GLOBAL_BackgroundSelectTrigger:00000000 XMC_VADC_GLOBAL_BackgroundSelectTrigger
    {standard input}:3356   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 $t
    {standard input}:3361   .text.XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge:00000000 XMC_VADC_GLOBAL_BackgroundSelectTriggerEdge
    {standard input}:3423   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 $t
    {standard input}:3428   .text.XMC_VADC_GLOBAL_BackgroundSelectGating:00000000 XMC_VADC_GLOBAL_BackgroundSelectGating
    {standard input}:3489   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 $t
    {standard input}:3494   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:00000000 XMC_VADC_GLOBAL_BackgroundAbortSequence
    {standard input}:3613   .text.XMC_VADC_GLOBAL_BackgroundAbortSequence:000000c4 $d
    {standard input}:3618   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 $t
    {standard input}:3623   .text.XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending:00000000 XMC_VADC_GLOBAL_BackgroundGetNumChannelsPending
    {standard input}:3720   .text.XMC_VADC_GROUP_QueueInit:00000000 $t
    {standard input}:3725   .text.XMC_VADC_GROUP_QueueInit:00000000 XMC_VADC_GROUP_QueueInit
    {standard input}:3835   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 $t
    {standard input}:3840   .text.XMC_VADC_GROUP_QueueSelectTrigger:00000000 XMC_VADC_GROUP_QueueSelectTrigger
    {standard input}:3902   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 $t
    {standard input}:3907   .text.XMC_VADC_GROUP_QueueSelectTriggerEdge:00000000 XMC_VADC_GROUP_QueueSelectTriggerEdge
    {standard input}:3969   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 $t
    {standard input}:3974   .text.XMC_VADC_GROUP_QueueSelectGating:00000000 XMC_VADC_GROUP_QueueSelectGating
    {standard input}:4036   .text.XMC_VADC_GROUP_QueueGetLength:00000000 $t
    {standard input}:4041   .text.XMC_VADC_GROUP_QueueGetLength:00000000 XMC_VADC_GROUP_QueueGetLength
    {standard input}:4113   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 $t
    {standard input}:4118   .text.XMC_VADC_GROUP_QueueAbortSequence:00000000 XMC_VADC_GROUP_QueueAbortSequence
    {standard input}:4197   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 $t
    {standard input}:4202   .text.XMC_VADC_GROUP_QueueRemoveChannel:00000000 XMC_VADC_GROUP_QueueRemoveChannel
    {standard input}:4313   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 $t
    {standard input}:4318   .text.XMC_VADC_GROUP_QueueGetNextChannel:00000000 XMC_VADC_GROUP_QueueGetNextChannel
    {standard input}:4386   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 $t
    {standard input}:4391   .text.XMC_VADC_GROUP_QueueGetInterruptedChannel:00000000 XMC_VADC_GROUP_QueueGetInterruptedChannel
    {standard input}:4446   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 $t
    {standard input}:4451   .text.XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode:00000000 XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
    {standard input}:4508   .text.XMC_VADC_GROUP_ChannelInit:00000000 $t
    {standard input}:4513   .text.XMC_VADC_GROUP_ChannelInit:00000000 XMC_VADC_GROUP_ChannelInit
    {standard input}:4671   .text.XMC_VADC_GROUP_SetChannelAlias:00000000 $t
    {standard input}:4676   .text.XMC_VADC_GROUP_SetChannelAlias:00000000 XMC_VADC_GROUP_SetChannelAlias
    {standard input}:4756   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 $t
    {standard input}:4761   .text.XMC_VADC_GROUP_ChannelIsResultOutOfBounds:00000000 XMC_VADC_GROUP_ChannelIsResultOutOfBounds
    {standard input}:4842   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 $t
    {standard input}:4847   .text.XMC_VADC_GROUP_ChannelSetInputReference:00000000 XMC_VADC_GROUP_ChannelSetInputReference
    {standard input}:4910   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 $t
    {standard input}:4915   .text.XMC_VADC_GROUP_ChannelSetResultRegister:00000000 XMC_VADC_GROUP_ChannelSetResultRegister
    {standard input}:4977   .text.XMC_VADC_GROUP_ChannelSetIclass:00000000 $t
    {standard input}:4982   .text.XMC_VADC_GROUP_ChannelSetIclass:00000000 XMC_VADC_GROUP_ChannelSetIclass
    {standard input}:5044   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 $t
    {standard input}:5049   .text.XMC_VADC_GROUP_ChannelGetResultRegister:00000000 XMC_VADC_GROUP_ChannelGetResultRegister
    {standard input}:5096   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 $t
    {standard input}:5101   .text.XMC_VADC_GROUP_ChannelTriggerEvent:00000000 XMC_VADC_GROUP_ChannelTriggerEvent
    {standard input}:5155   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 $t
    {standard input}:5160   .text.XMC_VADC_GROUP_ChannelSetEventInterruptNode:00000000 XMC_VADC_GROUP_ChannelSetEventInterruptNode
    {standard input}:5227   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 $t
    {standard input}:5232   .text.XMC_VADC_GROUP_ChannelTriggerEventGenCriteria:00000000 XMC_VADC_GROUP_ChannelTriggerEventGenCriteria
    {standard input}:5295   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 $t
    {standard input}:5300   .text.XMC_VADC_GROUP_ChannelSetBoundarySelection:00000000 XMC_VADC_GROUP_ChannelSetBoundarySelection
    {standard input}:5376   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 $t
    {standard input}:5381   .text.XMC_VADC_GROUP_AddResultToFifo:00000000 XMC_VADC_GROUP_AddResultToFifo
    {standard input}:5440   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 $t
    {standard input}:5445   .text.XMC_VADC_GROUP_SetResultFastCompareValue:00000000 XMC_VADC_GROUP_SetResultFastCompareValue
    {standard input}:5509   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 $t
    {standard input}:5514   .text.XMC_VADC_GROUP_GetFastCompareResult:00000000 XMC_VADC_GROUP_GetFastCompareResult
    {standard input}:5575   .text.XMC_VADC_GROUP_SetResultSubtractionValue:00000000 $t
    {standard input}:5580   .text.XMC_VADC_GROUP_SetResultSubtractionValue:00000000 XMC_VADC_GROUP_SetResultSubtractionValue
    {standard input}:5638   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 $t
    {standard input}:5643   .text.XMC_VADC_GROUP_SetResultInterruptNode:00000000 XMC_VADC_GROUP_SetResultInterruptNode
    {standard input}:5750   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 $t
    {standard input}:5755   .text.XMC_VADC_GROUP_GetResultFifoTail:00000000 XMC_VADC_GROUP_GetResultFifoTail
    {standard input}:5968   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 XMC_VADC_GROUP_IsResultRegisterFifoHead
    {standard input}:5873   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 $t
    {standard input}:5878   .text.XMC_VADC_GROUP_GetResultFifoHead:00000000 XMC_VADC_GROUP_GetResultFifoHead
    {standard input}:5963   .text.XMC_VADC_GROUP_IsResultRegisterFifoHead:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
