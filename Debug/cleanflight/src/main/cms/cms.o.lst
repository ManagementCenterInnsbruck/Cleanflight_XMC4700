   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "cms.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm pCurrentDisplay,4,4
  20              	 .comm switchStates,3,4
  21              	 .section .bss.cmsDisplayPorts,"aw",%nobits
  22              	 .align 2
  25              	cmsDisplayPorts:
  26 0000 00000000 	 .space 16
  26      00000000 
  26      00000000 
  26      00000000 
  27              	 .section .bss.cmsDeviceCount,"aw",%nobits
  28              	 .align 2
  31              	cmsDeviceCount:
  32 0000 00000000 	 .space 4
  33              	 .section .data.cmsCurrentDevice,"aw",%progbits
  34              	 .align 2
  37              	cmsCurrentDevice:
  38 0000 FFFFFFFF 	 .word -1
  39              	 .section .text.cmsDisplayPortRegister,"ax",%progbits
  40              	 .align 2
  41              	 .global cmsDisplayPortRegister
  42              	 .thumb
  43              	 .thumb_func
  45              	cmsDisplayPortRegister:
  46              	.LFB563:
  47              	 .file 1 "../cleanflight/src/main/cms/cms.c"
   1:../cleanflight/src/main/cms/cms.c **** /*
   2:../cleanflight/src/main/cms/cms.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/cms/cms.c ****  *
   4:../cleanflight/src/main/cms/cms.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/cms/cms.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/cms/cms.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/cms/cms.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/cms/cms.c ****  * any later version.
   9:../cleanflight/src/main/cms/cms.c ****  *
  10:../cleanflight/src/main/cms/cms.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/cms/cms.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/cms/cms.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/cms/cms.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/cms/cms.c ****  *
  15:../cleanflight/src/main/cms/cms.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/cms/cms.c ****  * along with this software.
  17:../cleanflight/src/main/cms/cms.c ****  *
  18:../cleanflight/src/main/cms/cms.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/cms/cms.c ****  */
  20:../cleanflight/src/main/cms/cms.c **** 
  21:../cleanflight/src/main/cms/cms.c **** /*
  22:../cleanflight/src/main/cms/cms.c ****  Original OSD code created by Marcin Baliniak
  23:../cleanflight/src/main/cms/cms.c ****  OSD-CMS separation by jflyper
  24:../cleanflight/src/main/cms/cms.c ****  CMS-displayPort separation by jflyper and martinbudden
  25:../cleanflight/src/main/cms/cms.c ****  */
  26:../cleanflight/src/main/cms/cms.c **** 
  27:../cleanflight/src/main/cms/cms.c **** //#define CMS_PAGE_DEBUG // For multi-page/menu debugging
  28:../cleanflight/src/main/cms/cms.c **** //#define CMS_MENU_DEBUG // For external menu content creators
  29:../cleanflight/src/main/cms/cms.c **** 
  30:../cleanflight/src/main/cms/cms.c **** #include <stdbool.h>
  31:../cleanflight/src/main/cms/cms.c **** #include <stdint.h>
  32:../cleanflight/src/main/cms/cms.c **** #include <string.h>
  33:../cleanflight/src/main/cms/cms.c **** #include <ctype.h>
  34:../cleanflight/src/main/cms/cms.c **** 
  35:../cleanflight/src/main/cms/cms.c **** #include "platform.h"
  36:../cleanflight/src/main/cms/cms.c **** 
  37:../cleanflight/src/main/cms/cms.c **** #ifdef USE_CMS
  38:../cleanflight/src/main/cms/cms.c **** 
  39:../cleanflight/src/main/cms/cms.c **** #include "build/build_config.h"
  40:../cleanflight/src/main/cms/cms.c **** #include "build/debug.h"
  41:../cleanflight/src/main/cms/cms.c **** #include "build/version.h"
  42:../cleanflight/src/main/cms/cms.c **** 
  43:../cleanflight/src/main/cms/cms.c **** #include "cms/cms.h"
  44:../cleanflight/src/main/cms/cms.c **** #include "cms/cms_menu_builtin.h"
  45:../cleanflight/src/main/cms/cms.c **** #include "cms/cms_types.h"
  46:../cleanflight/src/main/cms/cms.c **** 
  47:../cleanflight/src/main/cms/cms.c **** #include "common/maths.h"
  48:../cleanflight/src/main/cms/cms.c **** #include "common/typeconversion.h"
  49:../cleanflight/src/main/cms/cms.c **** 
  50:../cleanflight/src/main/cms/cms.c **** #include "drivers/system.h"
  51:../cleanflight/src/main/cms/cms.c **** #include "drivers/time.h"
  52:../cleanflight/src/main/cms/cms.c **** 
  53:../cleanflight/src/main/cms/cms.c **** // For rcData, stopAllMotors, stopPwmAllMotors
  54:../cleanflight/src/main/cms/cms.c **** #include "config/feature.h"
  55:../cleanflight/src/main/cms/cms.c **** #include "pg/pg.h"
  56:../cleanflight/src/main/cms/cms.c **** #include "pg/pg_ids.h"
  57:../cleanflight/src/main/cms/cms.c **** #include "pg/rx.h"
  58:../cleanflight/src/main/cms/cms.c **** 
  59:../cleanflight/src/main/cms/cms.c **** // For 'ARM' related
  60:../cleanflight/src/main/cms/cms.c **** #include "fc/config.h"
  61:../cleanflight/src/main/cms/cms.c **** #include "fc/rc_controls.h"
  62:../cleanflight/src/main/cms/cms.c **** #include "fc/runtime_config.h"
  63:../cleanflight/src/main/cms/cms.c **** 
  64:../cleanflight/src/main/cms/cms.c **** #include "flight/mixer.h"
  65:../cleanflight/src/main/cms/cms.c **** 
  66:../cleanflight/src/main/cms/cms.c **** // For VISIBLE*
  67:../cleanflight/src/main/cms/cms.c **** #include "io/osd.h"
  68:../cleanflight/src/main/cms/cms.c **** #include "io/rcdevice_cam.h"
  69:../cleanflight/src/main/cms/cms.c **** 
  70:../cleanflight/src/main/cms/cms.c **** #include "rx/rx.h"
  71:../cleanflight/src/main/cms/cms.c **** 
  72:../cleanflight/src/main/cms/cms.c **** #ifdef USE_USB_CDC_HID
  73:../cleanflight/src/main/cms/cms.c **** #include "sensors/battery.h"
  74:../cleanflight/src/main/cms/cms.c **** #include "pg/usb.h"
  75:../cleanflight/src/main/cms/cms.c **** #endif
  76:../cleanflight/src/main/cms/cms.c **** 
  77:../cleanflight/src/main/cms/cms.c **** // DisplayPort management
  78:../cleanflight/src/main/cms/cms.c **** 
  79:../cleanflight/src/main/cms/cms.c **** #ifndef CMS_MAX_DEVICE
  80:../cleanflight/src/main/cms/cms.c **** #define CMS_MAX_DEVICE 4
  81:../cleanflight/src/main/cms/cms.c **** #endif
  82:../cleanflight/src/main/cms/cms.c **** 
  83:../cleanflight/src/main/cms/cms.c **** displayPort_t *pCurrentDisplay;
  84:../cleanflight/src/main/cms/cms.c **** 
  85:../cleanflight/src/main/cms/cms.c **** static displayPort_t *cmsDisplayPorts[CMS_MAX_DEVICE];
  86:../cleanflight/src/main/cms/cms.c **** static int cmsDeviceCount;
  87:../cleanflight/src/main/cms/cms.c **** static int cmsCurrentDevice = -1;
  88:../cleanflight/src/main/cms/cms.c **** 
  89:../cleanflight/src/main/cms/cms.c **** bool cmsDisplayPortRegister(displayPort_t *pDisplay)
  90:../cleanflight/src/main/cms/cms.c **** {
  48              	 .loc 1 90 0
  49              	 .cfi_startproc
  50              	 
  51              	 
  52              	 
  53 0000 80B4     	 push {r7}
  54              	.LCFI0:
  55              	 .cfi_def_cfa_offset 4
  56              	 .cfi_offset 7,-4
  57 0002 83B0     	 sub sp,sp,#12
  58              	.LCFI1:
  59              	 .cfi_def_cfa_offset 16
  60 0004 00AF     	 add r7,sp,#0
  61              	.LCFI2:
  62              	 .cfi_def_cfa_register 7
  63 0006 7860     	 str r0,[r7,#4]
  91:../cleanflight/src/main/cms/cms.c ****     if (cmsDeviceCount == CMS_MAX_DEVICE)
  64              	 .loc 1 91 0
  65 0008 0A4B     	 ldr r3,.L4
  66 000a 1B68     	 ldr r3,[r3]
  67 000c 042B     	 cmp r3,#4
  68 000e 01D1     	 bne .L2
  92:../cleanflight/src/main/cms/cms.c ****         return false;
  69              	 .loc 1 92 0
  70 0010 0023     	 movs r3,#0
  71 0012 09E0     	 b .L3
  72              	.L2:
  93:../cleanflight/src/main/cms/cms.c **** 
  94:../cleanflight/src/main/cms/cms.c ****     cmsDisplayPorts[cmsDeviceCount++] = pDisplay;
  73              	 .loc 1 94 0
  74 0014 074B     	 ldr r3,.L4
  75 0016 1B68     	 ldr r3,[r3]
  76 0018 5A1C     	 adds r2,r3,#1
  77 001a 0649     	 ldr r1,.L4
  78 001c 0A60     	 str r2,[r1]
  79 001e 0649     	 ldr r1,.L4+4
  80 0020 7A68     	 ldr r2,[r7,#4]
  81 0022 41F82320 	 str r2,[r1,r3,lsl#2]
  95:../cleanflight/src/main/cms/cms.c **** 
  96:../cleanflight/src/main/cms/cms.c ****     return true;
  82              	 .loc 1 96 0
  83 0026 0123     	 movs r3,#1
  84              	.L3:
  97:../cleanflight/src/main/cms/cms.c **** }
  85              	 .loc 1 97 0
  86 0028 1846     	 mov r0,r3
  87 002a 0C37     	 adds r7,r7,#12
  88              	.LCFI3:
  89              	 .cfi_def_cfa_offset 4
  90 002c BD46     	 mov sp,r7
  91              	.LCFI4:
  92              	 .cfi_def_cfa_register 13
  93              	 
  94 002e 5DF8047B 	 ldr r7,[sp],#4
  95              	.LCFI5:
  96              	 .cfi_restore 7
  97              	 .cfi_def_cfa_offset 0
  98 0032 7047     	 bx lr
  99              	.L5:
 100              	 .align 2
 101              	.L4:
 102 0034 00000000 	 .word cmsDeviceCount
 103 0038 00000000 	 .word cmsDisplayPorts
 104              	 .cfi_endproc
 105              	.LFE563:
 107              	 .section .text.cmsDisplayPortSelectCurrent,"ax",%progbits
 108              	 .align 2
 109              	 .thumb
 110              	 .thumb_func
 112              	cmsDisplayPortSelectCurrent:
 113              	.LFB564:
  98:../cleanflight/src/main/cms/cms.c **** 
  99:../cleanflight/src/main/cms/cms.c **** static displayPort_t *cmsDisplayPortSelectCurrent(void)
 100:../cleanflight/src/main/cms/cms.c **** {
 114              	 .loc 1 100 0
 115              	 .cfi_startproc
 116              	 
 117              	 
 118              	 
 119 0000 80B4     	 push {r7}
 120              	.LCFI6:
 121              	 .cfi_def_cfa_offset 4
 122              	 .cfi_offset 7,-4
 123 0002 00AF     	 add r7,sp,#0
 124              	.LCFI7:
 125              	 .cfi_def_cfa_register 7
 101:../cleanflight/src/main/cms/cms.c ****     if (cmsDeviceCount == 0)
 126              	 .loc 1 101 0
 127 0004 0B4B     	 ldr r3,.L10
 128 0006 1B68     	 ldr r3,[r3]
 129 0008 002B     	 cmp r3,#0
 130 000a 01D1     	 bne .L7
 102:../cleanflight/src/main/cms/cms.c ****         return NULL;
 131              	 .loc 1 102 0
 132 000c 0023     	 movs r3,#0
 133 000e 0BE0     	 b .L8
 134              	.L7:
 103:../cleanflight/src/main/cms/cms.c **** 
 104:../cleanflight/src/main/cms/cms.c ****     if (cmsCurrentDevice < 0)
 135              	 .loc 1 104 0
 136 0010 094B     	 ldr r3,.L10+4
 137 0012 1B68     	 ldr r3,[r3]
 138 0014 002B     	 cmp r3,#0
 139 0016 02DA     	 bge .L9
 105:../cleanflight/src/main/cms/cms.c ****         cmsCurrentDevice = 0;
 140              	 .loc 1 105 0
 141 0018 074B     	 ldr r3,.L10+4
 142 001a 0022     	 movs r2,#0
 143 001c 1A60     	 str r2,[r3]
 144              	.L9:
 106:../cleanflight/src/main/cms/cms.c **** 
 107:../cleanflight/src/main/cms/cms.c ****     return cmsDisplayPorts[cmsCurrentDevice];
 145              	 .loc 1 107 0
 146 001e 064B     	 ldr r3,.L10+4
 147 0020 1B68     	 ldr r3,[r3]
 148 0022 064A     	 ldr r2,.L10+8
 149 0024 52F82330 	 ldr r3,[r2,r3,lsl#2]
 150              	.L8:
 108:../cleanflight/src/main/cms/cms.c **** }
 151              	 .loc 1 108 0
 152 0028 1846     	 mov r0,r3
 153 002a BD46     	 mov sp,r7
 154              	.LCFI8:
 155              	 .cfi_def_cfa_register 13
 156              	 
 157 002c 5DF8047B 	 ldr r7,[sp],#4
 158              	.LCFI9:
 159              	 .cfi_restore 7
 160              	 .cfi_def_cfa_offset 0
 161 0030 7047     	 bx lr
 162              	.L11:
 163 0032 00BF     	 .align 2
 164              	.L10:
 165 0034 00000000 	 .word cmsDeviceCount
 166 0038 00000000 	 .word cmsCurrentDevice
 167 003c 00000000 	 .word cmsDisplayPorts
 168              	 .cfi_endproc
 169              	.LFE564:
 171              	 .section .text.cmsDisplayPortSelectNext,"ax",%progbits
 172              	 .align 2
 173              	 .thumb
 174              	 .thumb_func
 176              	cmsDisplayPortSelectNext:
 177              	.LFB565:
 109:../cleanflight/src/main/cms/cms.c **** 
 110:../cleanflight/src/main/cms/cms.c **** static displayPort_t *cmsDisplayPortSelectNext(void)
 111:../cleanflight/src/main/cms/cms.c **** {
 178              	 .loc 1 111 0
 179              	 .cfi_startproc
 180              	 
 181              	 
 182              	 
 183 0000 80B4     	 push {r7}
 184              	.LCFI10:
 185              	 .cfi_def_cfa_offset 4
 186              	 .cfi_offset 7,-4
 187 0002 00AF     	 add r7,sp,#0
 188              	.LCFI11:
 189              	 .cfi_def_cfa_register 7
 112:../cleanflight/src/main/cms/cms.c ****     if (cmsDeviceCount == 0)
 190              	 .loc 1 112 0
 191 0004 0D4B     	 ldr r3,.L15
 192 0006 1B68     	 ldr r3,[r3]
 193 0008 002B     	 cmp r3,#0
 194 000a 01D1     	 bne .L13
 113:../cleanflight/src/main/cms/cms.c ****         return NULL;
 195              	 .loc 1 113 0
 196 000c 0023     	 movs r3,#0
 197 000e 10E0     	 b .L14
 198              	.L13:
 114:../cleanflight/src/main/cms/cms.c **** 
 115:../cleanflight/src/main/cms/cms.c ****     cmsCurrentDevice = (cmsCurrentDevice + 1) % cmsDeviceCount; // -1 Okay
 199              	 .loc 1 115 0
 200 0010 0B4B     	 ldr r3,.L15+4
 201 0012 1B68     	 ldr r3,[r3]
 202 0014 0133     	 adds r3,r3,#1
 203 0016 094A     	 ldr r2,.L15
 204 0018 1268     	 ldr r2,[r2]
 205 001a 93FBF2F1 	 sdiv r1,r3,r2
 206 001e 02FB01F2 	 mul r2,r2,r1
 207 0022 9B1A     	 subs r3,r3,r2
 208 0024 064A     	 ldr r2,.L15+4
 209 0026 1360     	 str r3,[r2]
 116:../cleanflight/src/main/cms/cms.c **** 
 117:../cleanflight/src/main/cms/cms.c ****     return cmsDisplayPorts[cmsCurrentDevice];
 210              	 .loc 1 117 0
 211 0028 054B     	 ldr r3,.L15+4
 212 002a 1B68     	 ldr r3,[r3]
 213 002c 054A     	 ldr r2,.L15+8
 214 002e 52F82330 	 ldr r3,[r2,r3,lsl#2]
 215              	.L14:
 118:../cleanflight/src/main/cms/cms.c **** }
 216              	 .loc 1 118 0
 217 0032 1846     	 mov r0,r3
 218 0034 BD46     	 mov sp,r7
 219              	.LCFI12:
 220              	 .cfi_def_cfa_register 13
 221              	 
 222 0036 5DF8047B 	 ldr r7,[sp],#4
 223              	.LCFI13:
 224              	 .cfi_restore 7
 225              	 .cfi_def_cfa_offset 0
 226 003a 7047     	 bx lr
 227              	.L16:
 228              	 .align 2
 229              	.L15:
 230 003c 00000000 	 .word cmsDeviceCount
 231 0040 00000000 	 .word cmsCurrentDevice
 232 0044 00000000 	 .word cmsDisplayPorts
 233              	 .cfi_endproc
 234              	.LFE565:
 236              	 .section .text.cmsDisplayPortSelect,"ax",%progbits
 237              	 .align 2
 238              	 .global cmsDisplayPortSelect
 239              	 .thumb
 240              	 .thumb_func
 242              	cmsDisplayPortSelect:
 243              	.LFB566:
 119:../cleanflight/src/main/cms/cms.c **** 
 120:../cleanflight/src/main/cms/cms.c **** bool cmsDisplayPortSelect(displayPort_t *instance)
 121:../cleanflight/src/main/cms/cms.c **** {
 244              	 .loc 1 121 0
 245              	 .cfi_startproc
 246              	 
 247              	 
 248 0000 80B5     	 push {r7,lr}
 249              	.LCFI14:
 250              	 .cfi_def_cfa_offset 8
 251              	 .cfi_offset 7,-8
 252              	 .cfi_offset 14,-4
 253 0002 84B0     	 sub sp,sp,#16
 254              	.LCFI15:
 255              	 .cfi_def_cfa_offset 24
 256 0004 00AF     	 add r7,sp,#0
 257              	.LCFI16:
 258              	 .cfi_def_cfa_register 7
 259 0006 7860     	 str r0,[r7,#4]
 122:../cleanflight/src/main/cms/cms.c ****     if (cmsDeviceCount == 0) {
 260              	 .loc 1 122 0
 261 0008 0E4B     	 ldr r3,.L23
 262 000a 1B68     	 ldr r3,[r3]
 263 000c 002B     	 cmp r3,#0
 264 000e 01D1     	 bne .L18
 123:../cleanflight/src/main/cms/cms.c ****         return false;
 265              	 .loc 1 123 0
 266 0010 0023     	 movs r3,#0
 267 0012 13E0     	 b .L19
 268              	.L18:
 269              	.LBB2:
 124:../cleanflight/src/main/cms/cms.c ****     }
 125:../cleanflight/src/main/cms/cms.c ****     for (int i = 0; i < cmsDeviceCount; i++) {
 270              	 .loc 1 125 0
 271 0014 0023     	 movs r3,#0
 272 0016 FB60     	 str r3,[r7,#12]
 273 0018 0AE0     	 b .L20
 274              	.L22:
 126:../cleanflight/src/main/cms/cms.c ****         if (cmsDisplayPortSelectNext() == instance) {
 275              	 .loc 1 126 0
 276 001a FFF7FEFF 	 bl cmsDisplayPortSelectNext
 277 001e 0246     	 mov r2,r0
 278 0020 7B68     	 ldr r3,[r7,#4]
 279 0022 9A42     	 cmp r2,r3
 280 0024 01D1     	 bne .L21
 127:../cleanflight/src/main/cms/cms.c ****             return true;
 281              	 .loc 1 127 0
 282 0026 0123     	 movs r3,#1
 283 0028 08E0     	 b .L19
 284              	.L21:
 125:../cleanflight/src/main/cms/cms.c ****         if (cmsDisplayPortSelectNext() == instance) {
 285              	 .loc 1 125 0 discriminator 2
 286 002a FB68     	 ldr r3,[r7,#12]
 287 002c 0133     	 adds r3,r3,#1
 288 002e FB60     	 str r3,[r7,#12]
 289              	.L20:
 125:../cleanflight/src/main/cms/cms.c ****         if (cmsDisplayPortSelectNext() == instance) {
 290              	 .loc 1 125 0 is_stmt 0 discriminator 1
 291 0030 044B     	 ldr r3,.L23
 292 0032 1B68     	 ldr r3,[r3]
 293 0034 FA68     	 ldr r2,[r7,#12]
 294 0036 9A42     	 cmp r2,r3
 295 0038 EFDB     	 blt .L22
 296              	.LBE2:
 128:../cleanflight/src/main/cms/cms.c ****         }
 129:../cleanflight/src/main/cms/cms.c ****     }
 130:../cleanflight/src/main/cms/cms.c ****     return false;
 297              	 .loc 1 130 0 is_stmt 1
 298 003a 0023     	 movs r3,#0
 299              	.L19:
 131:../cleanflight/src/main/cms/cms.c **** }
 300              	 .loc 1 131 0
 301 003c 1846     	 mov r0,r3
 302 003e 1037     	 adds r7,r7,#16
 303              	.LCFI17:
 304              	 .cfi_def_cfa_offset 8
 305 0040 BD46     	 mov sp,r7
 306              	.LCFI18:
 307              	 .cfi_def_cfa_register 13
 308              	 
 309 0042 80BD     	 pop {r7,pc}
 310              	.L24:
 311              	 .align 2
 312              	.L23:
 313 0044 00000000 	 .word cmsDeviceCount
 314              	 .cfi_endproc
 315              	.LFE566:
 317              	 .section .bss.smallScreen,"aw",%nobits
 320              	smallScreen:
 321 0000 00       	 .space 1
 322              	 .section .bss.leftMenuColumn,"aw",%nobits
 325              	leftMenuColumn:
 326 0000 00       	 .space 1
 327              	 .section .bss.rightMenuColumn,"aw",%nobits
 330              	rightMenuColumn:
 331 0000 00       	 .space 1
 332              	 .section .bss.maxMenuItems,"aw",%nobits
 335              	maxMenuItems:
 336 0000 00       	 .space 1
 337              	 .section .bss.linesPerMenuItem,"aw",%nobits
 340              	linesPerMenuItem:
 341 0000 00       	 .space 1
 342              	 .global cmsInMenu
 343              	 .section .bss.cmsInMenu,"aw",%nobits
 346              	cmsInMenu:
 347 0000 00       	 .space 1
 348              	 .section .bss.menuStack,"aw",%nobits
 349              	 .align 2
 352              	menuStack:
 353 0000 00000000 	 .space 60
 353      00000000 
 353      00000000 
 353      00000000 
 353      00000000 
 354              	 .section .bss.menuStackIdx,"aw",%nobits
 357              	menuStackIdx:
 358 0000 00       	 .space 1
 359              	 .section .bss.pageCount,"aw",%nobits
 362              	pageCount:
 363 0000 00       	 .space 1
 364              	 .section .bss.pageTop,"aw",%nobits
 365              	 .align 2
 368              	pageTop:
 369 0000 00000000 	 .space 4
 370              	 .section .bss.pageMaxRow,"aw",%nobits
 373              	pageMaxRow:
 374 0000 00       	 .space 1
 375              	 .section .bss.currentCtx,"aw",%nobits
 376              	 .align 2
 379              	currentCtx:
 380 0000 00000000 	 .space 6
 380      0000
 381 0006 0000     	 .section .text.cmsUpdateMaxRow,"ax",%progbits
 382              	 .align 2
 383              	 .thumb
 384              	 .thumb_func
 386              	cmsUpdateMaxRow:
 387              	.LFB567:
 132:../cleanflight/src/main/cms/cms.c **** 
 133:../cleanflight/src/main/cms/cms.c **** #define CMS_UPDATE_INTERVAL_US  50000   // Interval of key scans (microsec)
 134:../cleanflight/src/main/cms/cms.c **** #define CMS_POLL_INTERVAL_US   100000   // Interval of polling dynamic values (microsec)
 135:../cleanflight/src/main/cms/cms.c **** 
 136:../cleanflight/src/main/cms/cms.c **** // XXX LEFT_MENU_COLUMN and RIGHT_MENU_COLUMN must be adjusted
 137:../cleanflight/src/main/cms/cms.c **** // dynamically depending on size of the active output device,
 138:../cleanflight/src/main/cms/cms.c **** // or statically to accomodate sizes of all supported devices.
 139:../cleanflight/src/main/cms/cms.c **** //
 140:../cleanflight/src/main/cms/cms.c **** // Device characteristics
 141:../cleanflight/src/main/cms/cms.c **** // OLED
 142:../cleanflight/src/main/cms/cms.c **** //   21 cols x 8 rows
 143:../cleanflight/src/main/cms/cms.c **** //     128x64 with 5x7 (6x8) : 21 cols x 8 rows
 144:../cleanflight/src/main/cms/cms.c **** // MAX7456 (PAL)
 145:../cleanflight/src/main/cms/cms.c **** //   30 cols x 16 rows
 146:../cleanflight/src/main/cms/cms.c **** // MAX7456 (NTSC)
 147:../cleanflight/src/main/cms/cms.c **** //   30 cols x 13 rows
 148:../cleanflight/src/main/cms/cms.c **** // HoTT Telemetry Screen
 149:../cleanflight/src/main/cms/cms.c **** //   21 cols x 8 rows
 150:../cleanflight/src/main/cms/cms.c **** //
 151:../cleanflight/src/main/cms/cms.c **** // Spektrum SRXL Telemtry Textgenerator
 152:../cleanflight/src/main/cms/cms.c **** //   13 cols x 9 rows, top row printed as a Bold Heading
 153:../cleanflight/src/main/cms/cms.c **** //   Needs the "smallScreen" adaptions
 154:../cleanflight/src/main/cms/cms.c **** 
 155:../cleanflight/src/main/cms/cms.c **** 
 156:../cleanflight/src/main/cms/cms.c **** 
 157:../cleanflight/src/main/cms/cms.c **** #define NORMAL_SCREEN_MIN_COLS 18      // Less is a small screen
 158:../cleanflight/src/main/cms/cms.c **** static bool    smallScreen;
 159:../cleanflight/src/main/cms/cms.c **** static uint8_t leftMenuColumn;
 160:../cleanflight/src/main/cms/cms.c **** static uint8_t rightMenuColumn;
 161:../cleanflight/src/main/cms/cms.c **** static uint8_t maxMenuItems;
 162:../cleanflight/src/main/cms/cms.c **** static uint8_t linesPerMenuItem;
 163:../cleanflight/src/main/cms/cms.c **** 
 164:../cleanflight/src/main/cms/cms.c **** bool cmsInMenu = false;
 165:../cleanflight/src/main/cms/cms.c **** 
 166:../cleanflight/src/main/cms/cms.c **** typedef struct cmsCtx_s {
 167:../cleanflight/src/main/cms/cms.c ****     const CMS_Menu *menu;         // menu for this context
 168:../cleanflight/src/main/cms/cms.c ****     uint8_t page;                 // page in the menu
 169:../cleanflight/src/main/cms/cms.c ****     int8_t cursorRow;             // cursorRow in the page
 170:../cleanflight/src/main/cms/cms.c **** } cmsCtx_t;
 171:../cleanflight/src/main/cms/cms.c **** 
 172:../cleanflight/src/main/cms/cms.c **** static cmsCtx_t menuStack[10];
 173:../cleanflight/src/main/cms/cms.c **** static uint8_t menuStackIdx = 0;
 174:../cleanflight/src/main/cms/cms.c **** 
 175:../cleanflight/src/main/cms/cms.c **** static int8_t pageCount;         // Number of pages in the current menu
 176:../cleanflight/src/main/cms/cms.c **** static OSD_Entry *pageTop;       // First entry for the current page
 177:../cleanflight/src/main/cms/cms.c **** static uint8_t pageMaxRow;       // Max row in the current page
 178:../cleanflight/src/main/cms/cms.c **** 
 179:../cleanflight/src/main/cms/cms.c **** static cmsCtx_t currentCtx;
 180:../cleanflight/src/main/cms/cms.c **** 
 181:../cleanflight/src/main/cms/cms.c **** #ifdef CMS_MENU_DEBUG // For external menu content creators
 182:../cleanflight/src/main/cms/cms.c **** 
 183:../cleanflight/src/main/cms/cms.c **** static char menuErrLabel[21 + 1] = "RANDOM DATA";
 184:../cleanflight/src/main/cms/cms.c **** 
 185:../cleanflight/src/main/cms/cms.c **** static OSD_Entry menuErrEntries[] = {
 186:../cleanflight/src/main/cms/cms.c ****     { "BROKEN MENU", OME_Label, NULL, NULL, 0 },
 187:../cleanflight/src/main/cms/cms.c ****     { menuErrLabel, OME_Label, NULL, NULL, 0 },
 188:../cleanflight/src/main/cms/cms.c ****     { "BACK", OME_Back, NULL, NULL, 0 },
 189:../cleanflight/src/main/cms/cms.c ****     { NULL, OME_END, NULL, NULL, 0 }
 190:../cleanflight/src/main/cms/cms.c **** };
 191:../cleanflight/src/main/cms/cms.c **** 
 192:../cleanflight/src/main/cms/cms.c **** static CMS_Menu menuErr = {
 193:../cleanflight/src/main/cms/cms.c ****     "MENUERR",
 194:../cleanflight/src/main/cms/cms.c ****     OME_MENU,
 195:../cleanflight/src/main/cms/cms.c ****     NULL,
 196:../cleanflight/src/main/cms/cms.c ****     NULL,
 197:../cleanflight/src/main/cms/cms.c ****     NULL,
 198:../cleanflight/src/main/cms/cms.c ****     menuErrEntries,
 199:../cleanflight/src/main/cms/cms.c **** };
 200:../cleanflight/src/main/cms/cms.c **** #endif
 201:../cleanflight/src/main/cms/cms.c **** 
 202:../cleanflight/src/main/cms/cms.c **** #ifdef CMS_PAGE_DEBUG
 203:../cleanflight/src/main/cms/cms.c **** #define cmsPageDebug() { \
 204:../cleanflight/src/main/cms/cms.c ****     debug[0] = pageCount; \
 205:../cleanflight/src/main/cms/cms.c ****     debug[1] = currentCtx.page; \
 206:../cleanflight/src/main/cms/cms.c ****     debug[2] = pageMaxRow; \
 207:../cleanflight/src/main/cms/cms.c ****     debug[3] = currentCtx.cursorRow; } struct _dummy
 208:../cleanflight/src/main/cms/cms.c **** #else
 209:../cleanflight/src/main/cms/cms.c **** #define cmsPageDebug()
 210:../cleanflight/src/main/cms/cms.c **** #endif
 211:../cleanflight/src/main/cms/cms.c **** 
 212:../cleanflight/src/main/cms/cms.c **** static void cmsUpdateMaxRow(displayPort_t *instance)
 213:../cleanflight/src/main/cms/cms.c **** {
 388              	 .loc 1 213 0
 389              	 .cfi_startproc
 390              	 
 391              	 
 392              	 
 393 0000 80B4     	 push {r7}
 394              	.LCFI19:
 395              	 .cfi_def_cfa_offset 4
 396              	 .cfi_offset 7,-4
 397 0002 85B0     	 sub sp,sp,#20
 398              	.LCFI20:
 399              	 .cfi_def_cfa_offset 24
 400 0004 00AF     	 add r7,sp,#0
 401              	.LCFI21:
 402              	 .cfi_def_cfa_register 7
 403 0006 7860     	 str r0,[r7,#4]
 214:../cleanflight/src/main/cms/cms.c ****     UNUSED(instance);
 215:../cleanflight/src/main/cms/cms.c ****     pageMaxRow = 0;
 404              	 .loc 1 215 0
 405 0008 144B     	 ldr r3,.L29
 406 000a 0022     	 movs r2,#0
 407 000c 1A70     	 strb r2,[r3]
 408              	.LBB3:
 216:../cleanflight/src/main/cms/cms.c **** 
 217:../cleanflight/src/main/cms/cms.c ****     for (const OSD_Entry *ptr = pageTop; ptr->type != OME_END; ptr++) {
 409              	 .loc 1 217 0
 410 000e 144B     	 ldr r3,.L29+4
 411 0010 1B68     	 ldr r3,[r3]
 412 0012 FB60     	 str r3,[r7,#12]
 413 0014 08E0     	 b .L26
 414              	.L27:
 218:../cleanflight/src/main/cms/cms.c ****         pageMaxRow++;
 415              	 .loc 1 218 0 discriminator 3
 416 0016 114B     	 ldr r3,.L29
 417 0018 1B78     	 ldrb r3,[r3]
 418 001a 0133     	 adds r3,r3,#1
 419 001c DAB2     	 uxtb r2,r3
 420 001e 0F4B     	 ldr r3,.L29
 421 0020 1A70     	 strb r2,[r3]
 217:../cleanflight/src/main/cms/cms.c ****         pageMaxRow++;
 422              	 .loc 1 217 0 discriminator 3
 423 0022 FB68     	 ldr r3,[r7,#12]
 424 0024 0E33     	 adds r3,r3,#14
 425 0026 FB60     	 str r3,[r7,#12]
 426              	.L26:
 217:../cleanflight/src/main/cms/cms.c ****         pageMaxRow++;
 427              	 .loc 1 217 0 is_stmt 0 discriminator 1
 428 0028 FB68     	 ldr r3,[r7,#12]
 429 002a 1B79     	 ldrb r3,[r3,#4]
 430 002c 0E2B     	 cmp r3,#14
 431 002e F2D1     	 bne .L27
 432              	.LBE3:
 219:../cleanflight/src/main/cms/cms.c ****     }
 220:../cleanflight/src/main/cms/cms.c **** 
 221:../cleanflight/src/main/cms/cms.c ****     if (pageMaxRow > maxMenuItems) {
 433              	 .loc 1 221 0 is_stmt 1
 434 0030 0A4B     	 ldr r3,.L29
 435 0032 1A78     	 ldrb r2,[r3]
 436 0034 0B4B     	 ldr r3,.L29+8
 437 0036 1B78     	 ldrb r3,[r3]
 438 0038 9A42     	 cmp r2,r3
 439 003a 03D9     	 bls .L28
 222:../cleanflight/src/main/cms/cms.c ****         pageMaxRow = maxMenuItems;
 440              	 .loc 1 222 0
 441 003c 094B     	 ldr r3,.L29+8
 442 003e 1A78     	 ldrb r2,[r3]
 443 0040 064B     	 ldr r3,.L29
 444 0042 1A70     	 strb r2,[r3]
 445              	.L28:
 223:../cleanflight/src/main/cms/cms.c ****     }
 224:../cleanflight/src/main/cms/cms.c **** 
 225:../cleanflight/src/main/cms/cms.c ****     pageMaxRow--;
 446              	 .loc 1 225 0
 447 0044 054B     	 ldr r3,.L29
 448 0046 1B78     	 ldrb r3,[r3]
 449 0048 013B     	 subs r3,r3,#1
 450 004a DAB2     	 uxtb r2,r3
 451 004c 034B     	 ldr r3,.L29
 452 004e 1A70     	 strb r2,[r3]
 226:../cleanflight/src/main/cms/cms.c **** }
 453              	 .loc 1 226 0
 454 0050 1437     	 adds r7,r7,#20
 455              	.LCFI22:
 456              	 .cfi_def_cfa_offset 4
 457 0052 BD46     	 mov sp,r7
 458              	.LCFI23:
 459              	 .cfi_def_cfa_register 13
 460              	 
 461 0054 5DF8047B 	 ldr r7,[sp],#4
 462              	.LCFI24:
 463              	 .cfi_restore 7
 464              	 .cfi_def_cfa_offset 0
 465 0058 7047     	 bx lr
 466              	.L30:
 467 005a 00BF     	 .align 2
 468              	.L29:
 469 005c 00000000 	 .word pageMaxRow
 470 0060 00000000 	 .word pageTop
 471 0064 00000000 	 .word maxMenuItems
 472              	 .cfi_endproc
 473              	.LFE567:
 475              	 .section .text.cmsCursorAbsolute,"ax",%progbits
 476              	 .align 2
 477              	 .thumb
 478              	 .thumb_func
 480              	cmsCursorAbsolute:
 481              	.LFB568:
 227:../cleanflight/src/main/cms/cms.c **** 
 228:../cleanflight/src/main/cms/cms.c **** static uint8_t cmsCursorAbsolute(displayPort_t *instance)
 229:../cleanflight/src/main/cms/cms.c **** {
 482              	 .loc 1 229 0
 483              	 .cfi_startproc
 484              	 
 485              	 
 486              	 
 487 0000 80B4     	 push {r7}
 488              	.LCFI25:
 489              	 .cfi_def_cfa_offset 4
 490              	 .cfi_offset 7,-4
 491 0002 83B0     	 sub sp,sp,#12
 492              	.LCFI26:
 493              	 .cfi_def_cfa_offset 16
 494 0004 00AF     	 add r7,sp,#0
 495              	.LCFI27:
 496              	 .cfi_def_cfa_register 7
 497 0006 7860     	 str r0,[r7,#4]
 230:../cleanflight/src/main/cms/cms.c ****     UNUSED(instance);
 231:../cleanflight/src/main/cms/cms.c ****     return currentCtx.cursorRow + currentCtx.page * maxMenuItems;
 498              	 .loc 1 231 0
 499 0008 084B     	 ldr r3,.L33
 500 000a 5B79     	 ldrb r3,[r3,#5]
 501 000c DAB2     	 uxtb r2,r3
 502 000e 074B     	 ldr r3,.L33
 503 0010 1979     	 ldrb r1,[r3,#4]
 504 0012 074B     	 ldr r3,.L33+4
 505 0014 1B78     	 ldrb r3,[r3]
 506 0016 11FB03F3 	 smulbb r3,r1,r3
 507 001a DBB2     	 uxtb r3,r3
 508 001c 1344     	 add r3,r3,r2
 509 001e DBB2     	 uxtb r3,r3
 232:../cleanflight/src/main/cms/cms.c **** }
 510              	 .loc 1 232 0
 511 0020 1846     	 mov r0,r3
 512 0022 0C37     	 adds r7,r7,#12
 513              	.LCFI28:
 514              	 .cfi_def_cfa_offset 4
 515 0024 BD46     	 mov sp,r7
 516              	.LCFI29:
 517              	 .cfi_def_cfa_register 13
 518              	 
 519 0026 5DF8047B 	 ldr r7,[sp],#4
 520              	.LCFI30:
 521              	 .cfi_restore 7
 522              	 .cfi_def_cfa_offset 0
 523 002a 7047     	 bx lr
 524              	.L34:
 525              	 .align 2
 526              	.L33:
 527 002c 00000000 	 .word currentCtx
 528 0030 00000000 	 .word maxMenuItems
 529              	 .cfi_endproc
 530              	.LFE568:
 532              	 .section .text.cmsPageSelect,"ax",%progbits
 533              	 .align 2
 534              	 .thumb
 535              	 .thumb_func
 537              	cmsPageSelect:
 538              	.LFB569:
 233:../cleanflight/src/main/cms/cms.c **** 
 234:../cleanflight/src/main/cms/cms.c **** static void cmsPageSelect(displayPort_t *instance, int8_t newpage)
 235:../cleanflight/src/main/cms/cms.c **** {
 539              	 .loc 1 235 0
 540              	 .cfi_startproc
 541              	 
 542              	 
 543 0000 80B5     	 push {r7,lr}
 544              	.LCFI31:
 545              	 .cfi_def_cfa_offset 8
 546              	 .cfi_offset 7,-8
 547              	 .cfi_offset 14,-4
 548 0002 82B0     	 sub sp,sp,#8
 549              	.LCFI32:
 550              	 .cfi_def_cfa_offset 16
 551 0004 00AF     	 add r7,sp,#0
 552              	.LCFI33:
 553              	 .cfi_def_cfa_register 7
 554 0006 7860     	 str r0,[r7,#4]
 555 0008 0B46     	 mov r3,r1
 556 000a FB70     	 strb r3,[r7,#3]
 236:../cleanflight/src/main/cms/cms.c ****     currentCtx.page = (newpage + pageCount) % pageCount;
 557              	 .loc 1 236 0
 558 000c 97F90320 	 ldrsb r2,[r7,#3]
 559 0010 144B     	 ldr r3,.L36
 560 0012 1B78     	 ldrb r3,[r3]
 561 0014 5BB2     	 sxtb r3,r3
 562 0016 1344     	 add r3,r3,r2
 563 0018 124A     	 ldr r2,.L36
 564 001a 1278     	 ldrb r2,[r2]
 565 001c 52B2     	 sxtb r2,r2
 566 001e 93FBF2F1 	 sdiv r1,r3,r2
 567 0022 02FB01F2 	 mul r2,r2,r1
 568 0026 9B1A     	 subs r3,r3,r2
 569 0028 DAB2     	 uxtb r2,r3
 570 002a 0F4B     	 ldr r3,.L36+4
 571 002c 1A71     	 strb r2,[r3,#4]
 237:../cleanflight/src/main/cms/cms.c ****     pageTop = &currentCtx.menu->entries[currentCtx.page * maxMenuItems];
 572              	 .loc 1 237 0
 573 002e 0E4B     	 ldr r3,.L36+4
 574 0030 1B68     	 ldr r3,[r3]
 575 0032 9A68     	 ldr r2,[r3,#8]
 576 0034 0C4B     	 ldr r3,.L36+4
 577 0036 1B79     	 ldrb r3,[r3,#4]
 578 0038 1946     	 mov r1,r3
 579 003a 0C4B     	 ldr r3,.L36+8
 580 003c 1B78     	 ldrb r3,[r3]
 581 003e 03FB01F3 	 mul r3,r3,r1
 582 0042 1946     	 mov r1,r3
 583 0044 0B46     	 mov r3,r1
 584 0046 DB00     	 lsls r3,r3,#3
 585 0048 5B1A     	 subs r3,r3,r1
 586 004a 5B00     	 lsls r3,r3,#1
 587 004c 1344     	 add r3,r3,r2
 588 004e 084A     	 ldr r2,.L36+12
 589 0050 1360     	 str r3,[r2]
 238:../cleanflight/src/main/cms/cms.c ****     cmsUpdateMaxRow(instance);
 590              	 .loc 1 238 0
 591 0052 7868     	 ldr r0,[r7,#4]
 592 0054 FFF7FEFF 	 bl cmsUpdateMaxRow
 239:../cleanflight/src/main/cms/cms.c ****     displayClearScreen(instance);
 593              	 .loc 1 239 0
 594 0058 7868     	 ldr r0,[r7,#4]
 595 005a FFF7FEFF 	 bl displayClearScreen
 240:../cleanflight/src/main/cms/cms.c **** }
 596              	 .loc 1 240 0
 597 005e 0837     	 adds r7,r7,#8
 598              	.LCFI34:
 599              	 .cfi_def_cfa_offset 8
 600 0060 BD46     	 mov sp,r7
 601              	.LCFI35:
 602              	 .cfi_def_cfa_register 13
 603              	 
 604 0062 80BD     	 pop {r7,pc}
 605              	.L37:
 606              	 .align 2
 607              	.L36:
 608 0064 00000000 	 .word pageCount
 609 0068 00000000 	 .word currentCtx
 610 006c 00000000 	 .word maxMenuItems
 611 0070 00000000 	 .word pageTop
 612              	 .cfi_endproc
 613              	.LFE569:
 615              	 .section .text.cmsPageNext,"ax",%progbits
 616              	 .align 2
 617              	 .thumb
 618              	 .thumb_func
 620              	cmsPageNext:
 621              	.LFB570:
 241:../cleanflight/src/main/cms/cms.c **** 
 242:../cleanflight/src/main/cms/cms.c **** static void cmsPageNext(displayPort_t *instance)
 243:../cleanflight/src/main/cms/cms.c **** {
 622              	 .loc 1 243 0
 623              	 .cfi_startproc
 624              	 
 625              	 
 626 0000 80B5     	 push {r7,lr}
 627              	.LCFI36:
 628              	 .cfi_def_cfa_offset 8
 629              	 .cfi_offset 7,-8
 630              	 .cfi_offset 14,-4
 631 0002 82B0     	 sub sp,sp,#8
 632              	.LCFI37:
 633              	 .cfi_def_cfa_offset 16
 634 0004 00AF     	 add r7,sp,#0
 635              	.LCFI38:
 636              	 .cfi_def_cfa_register 7
 637 0006 7860     	 str r0,[r7,#4]
 244:../cleanflight/src/main/cms/cms.c ****     cmsPageSelect(instance, currentCtx.page + 1);
 638              	 .loc 1 244 0
 639 0008 064B     	 ldr r3,.L39
 640 000a 1B79     	 ldrb r3,[r3,#4]
 641 000c 0133     	 adds r3,r3,#1
 642 000e DBB2     	 uxtb r3,r3
 643 0010 DBB2     	 uxtb r3,r3
 644 0012 5BB2     	 sxtb r3,r3
 645 0014 7868     	 ldr r0,[r7,#4]
 646 0016 1946     	 mov r1,r3
 647 0018 FFF7FEFF 	 bl cmsPageSelect
 245:../cleanflight/src/main/cms/cms.c **** }
 648              	 .loc 1 245 0
 649 001c 0837     	 adds r7,r7,#8
 650              	.LCFI39:
 651              	 .cfi_def_cfa_offset 8
 652 001e BD46     	 mov sp,r7
 653              	.LCFI40:
 654              	 .cfi_def_cfa_register 13
 655              	 
 656 0020 80BD     	 pop {r7,pc}
 657              	.L40:
 658 0022 00BF     	 .align 2
 659              	.L39:
 660 0024 00000000 	 .word currentCtx
 661              	 .cfi_endproc
 662              	.LFE570:
 664              	 .section .text.cmsPagePrev,"ax",%progbits
 665              	 .align 2
 666              	 .thumb
 667              	 .thumb_func
 669              	cmsPagePrev:
 670              	.LFB571:
 246:../cleanflight/src/main/cms/cms.c **** 
 247:../cleanflight/src/main/cms/cms.c **** static void cmsPagePrev(displayPort_t *instance)
 248:../cleanflight/src/main/cms/cms.c **** {
 671              	 .loc 1 248 0
 672              	 .cfi_startproc
 673              	 
 674              	 
 675 0000 80B5     	 push {r7,lr}
 676              	.LCFI41:
 677              	 .cfi_def_cfa_offset 8
 678              	 .cfi_offset 7,-8
 679              	 .cfi_offset 14,-4
 680 0002 82B0     	 sub sp,sp,#8
 681              	.LCFI42:
 682              	 .cfi_def_cfa_offset 16
 683 0004 00AF     	 add r7,sp,#0
 684              	.LCFI43:
 685              	 .cfi_def_cfa_register 7
 686 0006 7860     	 str r0,[r7,#4]
 249:../cleanflight/src/main/cms/cms.c ****     cmsPageSelect(instance, currentCtx.page - 1);
 687              	 .loc 1 249 0
 688 0008 064B     	 ldr r3,.L42
 689 000a 1B79     	 ldrb r3,[r3,#4]
 690 000c 013B     	 subs r3,r3,#1
 691 000e DBB2     	 uxtb r3,r3
 692 0010 DBB2     	 uxtb r3,r3
 693 0012 5BB2     	 sxtb r3,r3
 694 0014 7868     	 ldr r0,[r7,#4]
 695 0016 1946     	 mov r1,r3
 696 0018 FFF7FEFF 	 bl cmsPageSelect
 250:../cleanflight/src/main/cms/cms.c **** }
 697              	 .loc 1 250 0
 698 001c 0837     	 adds r7,r7,#8
 699              	.LCFI44:
 700              	 .cfi_def_cfa_offset 8
 701 001e BD46     	 mov sp,r7
 702              	.LCFI45:
 703              	 .cfi_def_cfa_register 13
 704              	 
 705 0020 80BD     	 pop {r7,pc}
 706              	.L43:
 707 0022 00BF     	 .align 2
 708              	.L42:
 709 0024 00000000 	 .word currentCtx
 710              	 .cfi_endproc
 711              	.LFE571:
 713              	 .section .text.cmsFormatFloat,"ax",%progbits
 714              	 .align 2
 715              	 .thumb
 716              	 .thumb_func
 718              	cmsFormatFloat:
 719              	.LFB572:
 251:../cleanflight/src/main/cms/cms.c **** 
 252:../cleanflight/src/main/cms/cms.c **** static void cmsFormatFloat(int32_t value, char *floatString)
 253:../cleanflight/src/main/cms/cms.c **** {
 720              	 .loc 1 253 0
 721              	 .cfi_startproc
 722              	 
 723              	 
 724 0000 80B5     	 push {r7,lr}
 725              	.LCFI46:
 726              	 .cfi_def_cfa_offset 8
 727              	 .cfi_offset 7,-8
 728              	 .cfi_offset 14,-4
 729 0002 84B0     	 sub sp,sp,#16
 730              	.LCFI47:
 731              	 .cfi_def_cfa_offset 24
 732 0004 00AF     	 add r7,sp,#0
 733              	.LCFI48:
 734              	 .cfi_def_cfa_register 7
 735 0006 7860     	 str r0,[r7,#4]
 736 0008 3960     	 str r1,[r7]
 254:../cleanflight/src/main/cms/cms.c ****     uint8_t k;
 255:../cleanflight/src/main/cms/cms.c ****     // np. 3450
 256:../cleanflight/src/main/cms/cms.c **** 
 257:../cleanflight/src/main/cms/cms.c ****     itoa(100000 + value, floatString, 10); // Create string from abs of integer value
 737              	 .loc 1 257 0
 738 000a 7B68     	 ldr r3,[r7,#4]
 739 000c 03F5C333 	 add r3,r3,#99840
 740 0010 A033     	 adds r3,r3,#160
 741 0012 1846     	 mov r0,r3
 742 0014 3968     	 ldr r1,[r7]
 743 0016 0A22     	 movs r2,#10
 744 0018 FFF7FEFF 	 bl itoa
 258:../cleanflight/src/main/cms/cms.c **** 
 259:../cleanflight/src/main/cms/cms.c ****     // 103450
 260:../cleanflight/src/main/cms/cms.c **** 
 261:../cleanflight/src/main/cms/cms.c ****     floatString[0] = floatString[1];
 745              	 .loc 1 261 0
 746 001c 3B68     	 ldr r3,[r7]
 747 001e 5A78     	 ldrb r2,[r3,#1]
 748 0020 3B68     	 ldr r3,[r7]
 749 0022 1A70     	 strb r2,[r3]
 262:../cleanflight/src/main/cms/cms.c ****     floatString[1] = floatString[2];
 750              	 .loc 1 262 0
 751 0024 3B68     	 ldr r3,[r7]
 752 0026 0133     	 adds r3,r3,#1
 753 0028 3A68     	 ldr r2,[r7]
 754 002a 9278     	 ldrb r2,[r2,#2]
 755 002c 1A70     	 strb r2,[r3]
 263:../cleanflight/src/main/cms/cms.c ****     floatString[2] = '.';
 756              	 .loc 1 263 0
 757 002e 3B68     	 ldr r3,[r7]
 758 0030 0233     	 adds r3,r3,#2
 759 0032 2E22     	 movs r2,#46
 760 0034 1A70     	 strb r2,[r3]
 264:../cleanflight/src/main/cms/cms.c **** 
 265:../cleanflight/src/main/cms/cms.c ****     // 03.450
 266:../cleanflight/src/main/cms/cms.c ****     // usuwam koncowe zera i kropke
 267:../cleanflight/src/main/cms/cms.c ****     // Keep the first decimal place
 268:../cleanflight/src/main/cms/cms.c ****     for (k = 5; k > 3; k--)
 761              	 .loc 1 268 0
 762 0036 0523     	 movs r3,#5
 763 0038 FB73     	 strb r3,[r7,#15]
 764 003a 13E0     	 b .L45
 765              	.L48:
 269:../cleanflight/src/main/cms/cms.c ****         if (floatString[k] == '0' || floatString[k] == '.')
 766              	 .loc 1 269 0
 767 003c FB7B     	 ldrb r3,[r7,#15]
 768 003e 3A68     	 ldr r2,[r7]
 769 0040 1344     	 add r3,r3,r2
 770 0042 1B78     	 ldrb r3,[r3]
 771 0044 302B     	 cmp r3,#48
 772 0046 05D0     	 beq .L46
 773              	 .loc 1 269 0 is_stmt 0 discriminator 1
 774 0048 FB7B     	 ldrb r3,[r7,#15]
 775 004a 3A68     	 ldr r2,[r7]
 776 004c 1344     	 add r3,r3,r2
 777 004e 1B78     	 ldrb r3,[r3]
 778 0050 2E2B     	 cmp r3,#46
 779 0052 0AD1     	 bne .L47
 780              	.L46:
 270:../cleanflight/src/main/cms/cms.c ****             floatString[k] = 0;
 781              	 .loc 1 270 0 is_stmt 1 discriminator 2
 782 0054 FB7B     	 ldrb r3,[r7,#15]
 783 0056 3A68     	 ldr r2,[r7]
 784 0058 1344     	 add r3,r3,r2
 785 005a 0022     	 movs r2,#0
 786 005c 1A70     	 strb r2,[r3]
 268:../cleanflight/src/main/cms/cms.c ****         if (floatString[k] == '0' || floatString[k] == '.')
 787              	 .loc 1 268 0 discriminator 2
 788 005e FB7B     	 ldrb r3,[r7,#15]
 789 0060 013B     	 subs r3,r3,#1
 790 0062 FB73     	 strb r3,[r7,#15]
 791              	.L45:
 268:../cleanflight/src/main/cms/cms.c ****         if (floatString[k] == '0' || floatString[k] == '.')
 792              	 .loc 1 268 0 is_stmt 0 discriminator 1
 793 0064 FB7B     	 ldrb r3,[r7,#15]
 794 0066 032B     	 cmp r3,#3
 795 0068 E8D8     	 bhi .L48
 796              	.L47:
 271:../cleanflight/src/main/cms/cms.c ****         else
 272:../cleanflight/src/main/cms/cms.c ****             break;
 273:../cleanflight/src/main/cms/cms.c **** 
 274:../cleanflight/src/main/cms/cms.c ****     // oraz zero wiodonce
 275:../cleanflight/src/main/cms/cms.c ****     if (floatString[0] == '0')
 797              	 .loc 1 275 0 is_stmt 1
 798 006a 3B68     	 ldr r3,[r7]
 799 006c 1B78     	 ldrb r3,[r3]
 800 006e 302B     	 cmp r3,#48
 801 0070 02D1     	 bne .L44
 276:../cleanflight/src/main/cms/cms.c ****         floatString[0] = ' ';
 802              	 .loc 1 276 0
 803 0072 3B68     	 ldr r3,[r7]
 804 0074 2022     	 movs r2,#32
 805 0076 1A70     	 strb r2,[r3]
 806              	.L44:
 277:../cleanflight/src/main/cms/cms.c **** }
 807              	 .loc 1 277 0
 808 0078 1037     	 adds r7,r7,#16
 809              	.LCFI49:
 810              	 .cfi_def_cfa_offset 8
 811 007a BD46     	 mov sp,r7
 812              	.LCFI50:
 813              	 .cfi_def_cfa_register 13
 814              	 
 815 007c 80BD     	 pop {r7,pc}
 816              	 .cfi_endproc
 817              	.LFE572:
 819 007e 00BF     	 .section .text.cmsPadLeftToSize,"ax",%progbits
 820              	 .align 2
 821              	 .thumb
 822              	 .thumb_func
 824              	cmsPadLeftToSize:
 825              	.LFB573:
 278:../cleanflight/src/main/cms/cms.c **** 
 279:../cleanflight/src/main/cms/cms.c **** // CMS on OSD legacy was to use LEFT aligned values, not the RIGHT way ;-)
 280:../cleanflight/src/main/cms/cms.c **** #define CMS_OSD_RIGHT_ALIGNED_VALUES
 281:../cleanflight/src/main/cms/cms.c **** 
 282:../cleanflight/src/main/cms/cms.c **** #ifndef CMS_OSD_RIGHT_ALIGNED_VALUES
 283:../cleanflight/src/main/cms/cms.c **** 
 284:../cleanflight/src/main/cms/cms.c **** // Pad buffer to the left, i.e. align left
 285:../cleanflight/src/main/cms/cms.c **** static void cmsPadRightToSize(char *buf, int size)
 286:../cleanflight/src/main/cms/cms.c **** {
 287:../cleanflight/src/main/cms/cms.c ****     int i;
 288:../cleanflight/src/main/cms/cms.c **** 
 289:../cleanflight/src/main/cms/cms.c ****     for (i = 0 ; i < size ; i++) {
 290:../cleanflight/src/main/cms/cms.c ****         if (buf[i] == 0)
 291:../cleanflight/src/main/cms/cms.c ****             break;
 292:../cleanflight/src/main/cms/cms.c ****     }
 293:../cleanflight/src/main/cms/cms.c **** 
 294:../cleanflight/src/main/cms/cms.c ****     for ( ; i < size ; i++) {
 295:../cleanflight/src/main/cms/cms.c ****         buf[i] = ' ';
 296:../cleanflight/src/main/cms/cms.c ****     }
 297:../cleanflight/src/main/cms/cms.c **** 
 298:../cleanflight/src/main/cms/cms.c ****     buf[size] = 0;
 299:../cleanflight/src/main/cms/cms.c **** }
 300:../cleanflight/src/main/cms/cms.c **** #endif
 301:../cleanflight/src/main/cms/cms.c **** 
 302:../cleanflight/src/main/cms/cms.c **** // Pad buffer to the left, i.e. align right
 303:../cleanflight/src/main/cms/cms.c **** static void cmsPadLeftToSize(char *buf, int size)
 304:../cleanflight/src/main/cms/cms.c **** {
 826              	 .loc 1 304 0
 827              	 .cfi_startproc
 828              	 
 829              	 
 830 0000 80B5     	 push {r7,lr}
 831              	.LCFI51:
 832              	 .cfi_def_cfa_offset 8
 833              	 .cfi_offset 7,-8
 834              	 .cfi_offset 14,-4
 835 0002 86B0     	 sub sp,sp,#24
 836              	.LCFI52:
 837              	 .cfi_def_cfa_offset 32
 838 0004 00AF     	 add r7,sp,#0
 839              	.LCFI53:
 840              	 .cfi_def_cfa_register 7
 841 0006 7860     	 str r0,[r7,#4]
 842 0008 3960     	 str r1,[r7]
 305:../cleanflight/src/main/cms/cms.c ****     int i,j;
 306:../cleanflight/src/main/cms/cms.c ****     int len = strlen(buf);
 843              	 .loc 1 306 0
 844 000a 7868     	 ldr r0,[r7,#4]
 845 000c FFF7FEFF 	 bl strlen
 846 0010 0346     	 mov r3,r0
 847 0012 3B61     	 str r3,[r7,#16]
 307:../cleanflight/src/main/cms/cms.c **** 
 308:../cleanflight/src/main/cms/cms.c ****     for (i = size - 1, j = size - len ; i - j >= 0 ; i--) {
 848              	 .loc 1 308 0
 849 0014 3B68     	 ldr r3,[r7]
 850 0016 013B     	 subs r3,r3,#1
 851 0018 7B61     	 str r3,[r7,#20]
 852 001a 3A68     	 ldr r2,[r7]
 853 001c 3B69     	 ldr r3,[r7,#16]
 854 001e D31A     	 subs r3,r2,r3
 855 0020 FB60     	 str r3,[r7,#12]
 856 0022 0DE0     	 b .L51
 857              	.L52:
 309:../cleanflight/src/main/cms/cms.c ****       buf[i] = buf[i - j];
 858              	 .loc 1 309 0 discriminator 3
 859 0024 7B69     	 ldr r3,[r7,#20]
 860 0026 7A68     	 ldr r2,[r7,#4]
 861 0028 1344     	 add r3,r3,r2
 862 002a 7969     	 ldr r1,[r7,#20]
 863 002c FA68     	 ldr r2,[r7,#12]
 864 002e 8A1A     	 subs r2,r1,r2
 865 0030 1146     	 mov r1,r2
 866 0032 7A68     	 ldr r2,[r7,#4]
 867 0034 0A44     	 add r2,r2,r1
 868 0036 1278     	 ldrb r2,[r2]
 869 0038 1A70     	 strb r2,[r3]
 308:../cleanflight/src/main/cms/cms.c ****       buf[i] = buf[i - j];
 870              	 .loc 1 308 0 discriminator 3
 871 003a 7B69     	 ldr r3,[r7,#20]
 872 003c 013B     	 subs r3,r3,#1
 873 003e 7B61     	 str r3,[r7,#20]
 874              	.L51:
 308:../cleanflight/src/main/cms/cms.c ****       buf[i] = buf[i - j];
 875              	 .loc 1 308 0 is_stmt 0 discriminator 1
 876 0040 7A69     	 ldr r2,[r7,#20]
 877 0042 FB68     	 ldr r3,[r7,#12]
 878 0044 D31A     	 subs r3,r2,r3
 879 0046 002B     	 cmp r3,#0
 880 0048 ECDA     	 bge .L52
 310:../cleanflight/src/main/cms/cms.c ****     }
 311:../cleanflight/src/main/cms/cms.c **** 
 312:../cleanflight/src/main/cms/cms.c ****     for ( ; i >= 0 ; i--) {
 881              	 .loc 1 312 0 is_stmt 1
 882 004a 07E0     	 b .L53
 883              	.L54:
 313:../cleanflight/src/main/cms/cms.c ****       buf[i] = ' ';
 884              	 .loc 1 313 0 discriminator 2
 885 004c 7B69     	 ldr r3,[r7,#20]
 886 004e 7A68     	 ldr r2,[r7,#4]
 887 0050 1344     	 add r3,r3,r2
 888 0052 2022     	 movs r2,#32
 889 0054 1A70     	 strb r2,[r3]
 312:../cleanflight/src/main/cms/cms.c ****       buf[i] = ' ';
 890              	 .loc 1 312 0 discriminator 2
 891 0056 7B69     	 ldr r3,[r7,#20]
 892 0058 013B     	 subs r3,r3,#1
 893 005a 7B61     	 str r3,[r7,#20]
 894              	.L53:
 312:../cleanflight/src/main/cms/cms.c ****       buf[i] = ' ';
 895              	 .loc 1 312 0 is_stmt 0 discriminator 1
 896 005c 7B69     	 ldr r3,[r7,#20]
 897 005e 002B     	 cmp r3,#0
 898 0060 F4DA     	 bge .L54
 314:../cleanflight/src/main/cms/cms.c ****     }
 315:../cleanflight/src/main/cms/cms.c **** 
 316:../cleanflight/src/main/cms/cms.c ****     buf[size] = 0;
 899              	 .loc 1 316 0 is_stmt 1
 900 0062 3B68     	 ldr r3,[r7]
 901 0064 7A68     	 ldr r2,[r7,#4]
 902 0066 1344     	 add r3,r3,r2
 903 0068 0022     	 movs r2,#0
 904 006a 1A70     	 strb r2,[r3]
 317:../cleanflight/src/main/cms/cms.c **** }
 905              	 .loc 1 317 0
 906 006c 1837     	 adds r7,r7,#24
 907              	.LCFI54:
 908              	 .cfi_def_cfa_offset 8
 909 006e BD46     	 mov sp,r7
 910              	.LCFI55:
 911              	 .cfi_def_cfa_register 13
 912              	 
 913 0070 80BD     	 pop {r7,pc}
 914              	 .cfi_endproc
 915              	.LFE573:
 917 0072 00BF     	 .section .text.cmsPadToSize,"ax",%progbits
 918              	 .align 2
 919              	 .thumb
 920              	 .thumb_func
 922              	cmsPadToSize:
 923              	.LFB574:
 318:../cleanflight/src/main/cms/cms.c **** 
 319:../cleanflight/src/main/cms/cms.c **** static void cmsPadToSize(char *buf, int size)
 320:../cleanflight/src/main/cms/cms.c **** {
 924              	 .loc 1 320 0
 925              	 .cfi_startproc
 926              	 
 927              	 
 928 0000 80B5     	 push {r7,lr}
 929              	.LCFI56:
 930              	 .cfi_def_cfa_offset 8
 931              	 .cfi_offset 7,-8
 932              	 .cfi_offset 14,-4
 933 0002 82B0     	 sub sp,sp,#8
 934              	.LCFI57:
 935              	 .cfi_def_cfa_offset 16
 936 0004 00AF     	 add r7,sp,#0
 937              	.LCFI58:
 938              	 .cfi_def_cfa_register 7
 939 0006 7860     	 str r0,[r7,#4]
 940 0008 3960     	 str r1,[r7]
 321:../cleanflight/src/main/cms/cms.c ****     // Make absolutely sure the string terminated.
 322:../cleanflight/src/main/cms/cms.c ****     buf[size] = 0x00,
 941              	 .loc 1 322 0
 942 000a 3B68     	 ldr r3,[r7]
 943 000c 7A68     	 ldr r2,[r7,#4]
 944 000e 1344     	 add r3,r3,r2
 945 0010 0022     	 movs r2,#0
 946 0012 1A70     	 strb r2,[r3]
 323:../cleanflight/src/main/cms/cms.c **** 
 324:../cleanflight/src/main/cms/cms.c **** #ifdef CMS_OSD_RIGHT_ALIGNED_VALUES
 325:../cleanflight/src/main/cms/cms.c ****     cmsPadLeftToSize(buf, size);
 947              	 .loc 1 325 0
 948 0014 7868     	 ldr r0,[r7,#4]
 949 0016 3968     	 ldr r1,[r7]
 950 0018 FFF7FEFF 	 bl cmsPadLeftToSize
 326:../cleanflight/src/main/cms/cms.c **** #else
 327:../cleanflight/src/main/cms/cms.c ****     smallScreen ? cmsPadLeftToSize(buf, size) : cmsPadRightToSize(buf, size);
 328:../cleanflight/src/main/cms/cms.c **** #endif
 329:../cleanflight/src/main/cms/cms.c **** }
 951              	 .loc 1 329 0
 952 001c 0837     	 adds r7,r7,#8
 953              	.LCFI59:
 954              	 .cfi_def_cfa_offset 8
 955 001e BD46     	 mov sp,r7
 956              	.LCFI60:
 957              	 .cfi_def_cfa_register 13
 958              	 
 959 0020 80BD     	 pop {r7,pc}
 960              	 .cfi_endproc
 961              	.LFE574:
 963 0022 00BF     	 .section .text.cmsDrawMenuItemValue,"ax",%progbits
 964              	 .align 2
 965              	 .thumb
 966              	 .thumb_func
 968              	cmsDrawMenuItemValue:
 969              	.LFB575:
 330:../cleanflight/src/main/cms/cms.c **** 
 331:../cleanflight/src/main/cms/cms.c **** static int cmsDrawMenuItemValue(displayPort_t *pDisplay, char *buff, uint8_t row, uint8_t maxSize)
 332:../cleanflight/src/main/cms/cms.c **** {
 970              	 .loc 1 332 0
 971              	 .cfi_startproc
 972              	 
 973              	 
 974 0000 80B5     	 push {r7,lr}
 975              	.LCFI61:
 976              	 .cfi_def_cfa_offset 8
 977              	 .cfi_offset 7,-8
 978              	 .cfi_offset 14,-4
 979 0002 86B0     	 sub sp,sp,#24
 980              	.LCFI62:
 981              	 .cfi_def_cfa_offset 32
 982 0004 00AF     	 add r7,sp,#0
 983              	.LCFI63:
 984              	 .cfi_def_cfa_register 7
 985 0006 F860     	 str r0,[r7,#12]
 986 0008 B960     	 str r1,[r7,#8]
 987 000a 1146     	 mov r1,r2
 988 000c 1A46     	 mov r2,r3
 989 000e 0B46     	 mov r3,r1
 990 0010 FB71     	 strb r3,[r7,#7]
 991 0012 1346     	 mov r3,r2
 992 0014 BB71     	 strb r3,[r7,#6]
 333:../cleanflight/src/main/cms/cms.c ****     int colpos;
 334:../cleanflight/src/main/cms/cms.c ****     int cnt;
 335:../cleanflight/src/main/cms/cms.c **** 
 336:../cleanflight/src/main/cms/cms.c ****     cmsPadToSize(buff, maxSize);
 993              	 .loc 1 336 0
 994 0016 BB79     	 ldrb r3,[r7,#6]
 995 0018 B868     	 ldr r0,[r7,#8]
 996 001a 1946     	 mov r1,r3
 997 001c FFF7FEFF 	 bl cmsPadToSize
 337:../cleanflight/src/main/cms/cms.c **** #ifdef CMS_OSD_RIGHT_ALIGNED_VALUES
 338:../cleanflight/src/main/cms/cms.c ****     colpos = rightMenuColumn - maxSize;
 998              	 .loc 1 338 0
 999 0020 0A4B     	 ldr r3,.L58
 1000 0022 1B78     	 ldrb r3,[r3]
 1001 0024 1A46     	 mov r2,r3
 1002 0026 BB79     	 ldrb r3,[r7,#6]
 1003 0028 D31A     	 subs r3,r2,r3
 1004 002a 7B61     	 str r3,[r7,#20]
 339:../cleanflight/src/main/cms/cms.c **** #else
 340:../cleanflight/src/main/cms/cms.c ****     colpos = smallScreen ? rightMenuColumn - maxSize : rightMenuColumn;
 341:../cleanflight/src/main/cms/cms.c **** #endif
 342:../cleanflight/src/main/cms/cms.c ****     cnt = displayWrite(pDisplay, colpos, row, buff);
 1005              	 .loc 1 342 0
 1006 002c 7B69     	 ldr r3,[r7,#20]
 1007 002e DAB2     	 uxtb r2,r3
 1008 0030 FB79     	 ldrb r3,[r7,#7]
 1009 0032 F868     	 ldr r0,[r7,#12]
 1010 0034 1146     	 mov r1,r2
 1011 0036 1A46     	 mov r2,r3
 1012 0038 BB68     	 ldr r3,[r7,#8]
 1013 003a FFF7FEFF 	 bl displayWrite
 1014 003e 3861     	 str r0,[r7,#16]
 343:../cleanflight/src/main/cms/cms.c ****     return cnt;
 1015              	 .loc 1 343 0
 1016 0040 3B69     	 ldr r3,[r7,#16]
 344:../cleanflight/src/main/cms/cms.c **** }
 1017              	 .loc 1 344 0
 1018 0042 1846     	 mov r0,r3
 1019 0044 1837     	 adds r7,r7,#24
 1020              	.LCFI64:
 1021              	 .cfi_def_cfa_offset 8
 1022 0046 BD46     	 mov sp,r7
 1023              	.LCFI65:
 1024              	 .cfi_def_cfa_register 13
 1025              	 
 1026 0048 80BD     	 pop {r7,pc}
 1027              	.L59:
 1028 004a 00BF     	 .align 2
 1029              	.L58:
 1030 004c 00000000 	 .word rightMenuColumn
 1031              	 .cfi_endproc
 1032              	.LFE575:
 1034              	 .section .rodata
 1035              	 .align 2
 1036              	.LC0:
 1037 0000 3E00     	 .ascii ">\000"
 1038              	 .section .text.cmsDrawMenuEntry,"ax",%progbits
 1039              	 .align 2
 1040              	 .thumb
 1041              	 .thumb_func
 1043              	cmsDrawMenuEntry:
 1044              	.LFB576:
 345:../cleanflight/src/main/cms/cms.c **** 
 346:../cleanflight/src/main/cms/cms.c **** static int cmsDrawMenuEntry(displayPort_t *pDisplay, OSD_Entry *p, uint8_t row)
 347:../cleanflight/src/main/cms/cms.c **** {
 1045              	 .loc 1 347 0
 1046              	 .cfi_startproc
 1047              	 
 1048              	 
 1049 0000 80B5     	 push {r7,lr}
 1050              	.LCFI66:
 1051              	 .cfi_def_cfa_offset 8
 1052              	 .cfi_offset 7,-8
 1053              	 .cfi_offset 14,-4
 1054 0002 92B0     	 sub sp,sp,#72
 1055              	.LCFI67:
 1056              	 .cfi_def_cfa_offset 80
 1057 0004 00AF     	 add r7,sp,#0
 1058              	.LCFI68:
 1059              	 .cfi_def_cfa_register 7
 1060 0006 F860     	 str r0,[r7,#12]
 1061 0008 B960     	 str r1,[r7,#8]
 1062 000a 1346     	 mov r3,r2
 1063 000c FB71     	 strb r3,[r7,#7]
 348:../cleanflight/src/main/cms/cms.c ****     #define CMS_DRAW_BUFFER_LEN 12
 349:../cleanflight/src/main/cms/cms.c ****     #define CMS_NUM_FIELD_LEN 5
 350:../cleanflight/src/main/cms/cms.c **** 
 351:../cleanflight/src/main/cms/cms.c ****     char buff[CMS_DRAW_BUFFER_LEN +1]; // Make room for null terminator.
 352:../cleanflight/src/main/cms/cms.c ****     int cnt = 0;
 1064              	 .loc 1 352 0
 1065 000e 0023     	 movs r3,#0
 1066 0010 7B64     	 str r3,[r7,#68]
 353:../cleanflight/src/main/cms/cms.c **** 
 354:../cleanflight/src/main/cms/cms.c ****     if (smallScreen) {
 1067              	 .loc 1 354 0
 1068 0012 B04B     	 ldr r3,.L97
 1069 0014 1B78     	 ldrb r3,[r3]
 1070 0016 002B     	 cmp r3,#0
 1071 0018 02D0     	 beq .L61
 355:../cleanflight/src/main/cms/cms.c ****         row++;
 1072              	 .loc 1 355 0
 1073 001a FB79     	 ldrb r3,[r7,#7]
 1074 001c 0133     	 adds r3,r3,#1
 1075 001e FB71     	 strb r3,[r7,#7]
 1076              	.L61:
 356:../cleanflight/src/main/cms/cms.c ****     }
 357:../cleanflight/src/main/cms/cms.c **** 
 358:../cleanflight/src/main/cms/cms.c ****     switch (p->type) {
 1077              	 .loc 1 358 0
 1078 0020 BB68     	 ldr r3,[r7,#8]
 1079 0022 1B79     	 ldrb r3,[r3,#4]
 1080 0024 0E2B     	 cmp r3,#14
 1081 0026 00F23F82 	 bhi .L96
 1082 002a 01A2     	 adr r2,.L64
 1083 002c 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1084              	 .p2align 2
 1085              	.L64:
 1086 0030 57040000 	 .word .L63+1
 1087 0034 A9040000 	 .word .L96+1
 1088 0038 A9040000 	 .word .L96+1
 1089 003c BD000000 	 .word .L66+1
 1090 0040 BD000000 	 .word .L66+1
 1091 0044 63010000 	 .word .L67+1
 1092 0048 E5020000 	 .word .L68+1
 1093 004c 7B020000 	 .word .L69+1
 1094 0050 3F030000 	 .word .L70+1
 1095 0054 99030000 	 .word .L71+1
 1096 0058 6D000000 	 .word .L72+1
 1097 005c F3030000 	 .word .L73+1
 1098 0060 19020000 	 .word .L74+1
 1099 0064 BD010000 	 .word .L75+1
 1100 0068 A9040000 	 .word .L96+1
 1101              	 .p2align 1
 1102              	.L72:
 359:../cleanflight/src/main/cms/cms.c ****     case OME_String:
 360:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p) && p->data) {
 1103              	 .loc 1 360 0
 1104 006c BB68     	 ldr r3,[r7,#8]
 1105 006e 5B7B     	 ldrb r3,[r3,#13]
 1106 0070 03F00103 	 and r3,r3,#1
 1107 0074 002B     	 cmp r3,#0
 1108 0076 20D0     	 beq .L76
 1109              	 .loc 1 360 0 is_stmt 0 discriminator 1
 1110 0078 BB68     	 ldr r3,[r7,#8]
 1111 007a D3F80930 	 ldr r3,[r3,#9]
 1112 007e 002B     	 cmp r3,#0
 1113 0080 1BD0     	 beq .L76
 361:../cleanflight/src/main/cms/cms.c ****             strncpy(buff, p->data, CMS_DRAW_BUFFER_LEN);
 1114              	 .loc 1 361 0 is_stmt 1
 1115 0082 BB68     	 ldr r3,[r7,#8]
 1116 0084 D3F80930 	 ldr r3,[r3,#9]
 1117 0088 07F11002 	 add r2,r7,#16
 1118 008c 1046     	 mov r0,r2
 1119 008e 1946     	 mov r1,r3
 1120 0090 0C22     	 movs r2,#12
 1121 0092 FFF7FEFF 	 bl strncpy
 362:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, CMS_DRAW_BUFFER_LEN);
 1122              	 .loc 1 362 0
 1123 0096 07F11002 	 add r2,r7,#16
 1124 009a FB79     	 ldrb r3,[r7,#7]
 1125 009c F868     	 ldr r0,[r7,#12]
 1126 009e 1146     	 mov r1,r2
 1127 00a0 1A46     	 mov r2,r3
 1128 00a2 0C23     	 movs r3,#12
 1129 00a4 FFF7FEFF 	 bl cmsDrawMenuItemValue
 1130 00a8 7864     	 str r0,[r7,#68]
 363:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1131              	 .loc 1 363 0
 1132 00aa BB68     	 ldr r3,[r7,#8]
 1133 00ac 5B7B     	 ldrb r3,[r3,#13]
 1134 00ae 23F00103 	 bic r3,r3,#1
 1135 00b2 DAB2     	 uxtb r2,r3
 1136 00b4 BB68     	 ldr r3,[r7,#8]
 1137 00b6 5A73     	 strb r2,[r3,#13]
 364:../cleanflight/src/main/cms/cms.c ****         }
 365:../cleanflight/src/main/cms/cms.c ****         break;
 1138              	 .loc 1 365 0
 1139 00b8 F7E1     	 b .L77
 1140              	.L76:
 1141 00ba F6E1     	 b .L77
 1142              	.L66:
 366:../cleanflight/src/main/cms/cms.c **** 
 367:../cleanflight/src/main/cms/cms.c ****     case OME_Submenu:
 368:../cleanflight/src/main/cms/cms.c ****     case OME_Funcall:
 369:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p))  {
 1143              	 .loc 1 369 0
 1144 00bc BB68     	 ldr r3,[r7,#8]
 1145 00be 5B7B     	 ldrb r3,[r3,#13]
 1146 00c0 03F00103 	 and r3,r3,#1
 1147 00c4 002B     	 cmp r3,#0
 1148 00c6 4BD0     	 beq .L78
 370:../cleanflight/src/main/cms/cms.c **** 
 371:../cleanflight/src/main/cms/cms.c ****             buff[0]= 0x0;
 1149              	 .loc 1 371 0
 1150 00c8 0023     	 movs r3,#0
 1151 00ca 3B74     	 strb r3,[r7,#16]
 372:../cleanflight/src/main/cms/cms.c **** 
 373:../cleanflight/src/main/cms/cms.c ****             if ((p->type == OME_Submenu) && p->func && (p->flags & OPTSTRING)) {
 1152              	 .loc 1 373 0
 1153 00cc BB68     	 ldr r3,[r7,#8]
 1154 00ce 1B79     	 ldrb r3,[r3,#4]
 1155 00d0 032B     	 cmp r3,#3
 1156 00d2 16D1     	 bne .L79
 1157              	 .loc 1 373 0 is_stmt 0 discriminator 1
 1158 00d4 BB68     	 ldr r3,[r7,#8]
 1159 00d6 D3F80530 	 ldr r3,[r3,#5]
 1160 00da 002B     	 cmp r3,#0
 1161 00dc 11D0     	 beq .L79
 1162              	 .loc 1 373 0 discriminator 2
 1163 00de BB68     	 ldr r3,[r7,#8]
 1164 00e0 5B7B     	 ldrb r3,[r3,#13]
 1165 00e2 03F00803 	 and r3,r3,#8
 1166 00e6 002B     	 cmp r3,#0
 1167 00e8 0BD0     	 beq .L79
 1168              	.LBB4:
 374:../cleanflight/src/main/cms/cms.c **** 
 375:../cleanflight/src/main/cms/cms.c ****                 // Special case of sub menu entry with optional value display.
 376:../cleanflight/src/main/cms/cms.c **** 
 377:../cleanflight/src/main/cms/cms.c ****                 char *str = ((CMSMenuOptFuncPtr)p->func)();
 1169              	 .loc 1 377 0 is_stmt 1
 1170 00ea BB68     	 ldr r3,[r7,#8]
 1171 00ec D3F80530 	 ldr r3,[r3,#5]
 1172 00f0 9847     	 blx r3
 1173 00f2 3864     	 str r0,[r7,#64]
 378:../cleanflight/src/main/cms/cms.c ****                 strncpy( buff, str, CMS_DRAW_BUFFER_LEN);
 1174              	 .loc 1 378 0
 1175 00f4 07F11003 	 add r3,r7,#16
 1176 00f8 1846     	 mov r0,r3
 1177 00fa 396C     	 ldr r1,[r7,#64]
 1178 00fc 0C22     	 movs r2,#12
 1179 00fe FFF7FEFF 	 bl strncpy
 1180              	.L79:
 1181              	.LBE4:
 379:../cleanflight/src/main/cms/cms.c ****             }
 380:../cleanflight/src/main/cms/cms.c ****             strncat(buff, ">", CMS_DRAW_BUFFER_LEN);
 1182              	 .loc 1 380 0
 1183 0102 07F11003 	 add r3,r7,#16
 1184 0106 1846     	 mov r0,r3
 1185 0108 FFF7FEFF 	 bl strlen
 1186 010c 0346     	 mov r3,r0
 1187 010e 1A46     	 mov r2,r3
 1188 0110 07F11003 	 add r3,r7,#16
 1189 0114 1344     	 add r3,r3,r2
 1190 0116 7049     	 ldr r1,.L97+4
 1191 0118 1A46     	 mov r2,r3
 1192 011a 0B46     	 mov r3,r1
 1193 011c 1B88     	 ldrh r3,[r3]
 1194 011e 1380     	 strh r3,[r2]
 381:../cleanflight/src/main/cms/cms.c **** 
 382:../cleanflight/src/main/cms/cms.c ****             row = smallScreen  ? row - 1  : row;
 1195              	 .loc 1 382 0
 1196 0120 6C4B     	 ldr r3,.L97
 1197 0122 1B78     	 ldrb r3,[r3]
 1198 0124 002B     	 cmp r3,#0
 1199 0126 03D0     	 beq .L80
 1200              	 .loc 1 382 0 is_stmt 0 discriminator 1
 1201 0128 FB79     	 ldrb r3,[r7,#7]
 1202 012a 013B     	 subs r3,r3,#1
 1203 012c DBB2     	 uxtb r3,r3
 1204 012e 00E0     	 b .L81
 1205              	.L80:
 1206              	 .loc 1 382 0 discriminator 2
 1207 0130 FB79     	 ldrb r3,[r7,#7]
 1208              	.L81:
 1209              	 .loc 1 382 0 discriminator 4
 1210 0132 FB71     	 strb r3,[r7,#7]
 383:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, strlen(buff));
 1211              	 .loc 1 383 0 is_stmt 1 discriminator 4
 1212 0134 07F11003 	 add r3,r7,#16
 1213 0138 1846     	 mov r0,r3
 1214 013a FFF7FEFF 	 bl strlen
 1215 013e 0346     	 mov r3,r0
 1216 0140 DBB2     	 uxtb r3,r3
 1217 0142 07F11001 	 add r1,r7,#16
 1218 0146 FA79     	 ldrb r2,[r7,#7]
 1219 0148 F868     	 ldr r0,[r7,#12]
 1220 014a FFF7FEFF 	 bl cmsDrawMenuItemValue
 1221 014e 7864     	 str r0,[r7,#68]
 384:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1222              	 .loc 1 384 0 discriminator 4
 1223 0150 BB68     	 ldr r3,[r7,#8]
 1224 0152 5B7B     	 ldrb r3,[r3,#13]
 1225 0154 23F00103 	 bic r3,r3,#1
 1226 0158 DAB2     	 uxtb r2,r3
 1227 015a BB68     	 ldr r3,[r7,#8]
 1228 015c 5A73     	 strb r2,[r3,#13]
 385:../cleanflight/src/main/cms/cms.c ****         }
 386:../cleanflight/src/main/cms/cms.c ****         break;
 1229              	 .loc 1 386 0 discriminator 4
 1230 015e A4E1     	 b .L77
 1231              	.L78:
 1232              	 .loc 1 386 0 is_stmt 0
 1233 0160 A3E1     	 b .L77
 1234              	.L67:
 387:../cleanflight/src/main/cms/cms.c **** 
 388:../cleanflight/src/main/cms/cms.c ****     case OME_Bool:
 389:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p) && p->data) {
 1235              	 .loc 1 389 0 is_stmt 1
 1236 0162 BB68     	 ldr r3,[r7,#8]
 1237 0164 5B7B     	 ldrb r3,[r3,#13]
 1238 0166 03F00103 	 and r3,r3,#1
 1239 016a 002B     	 cmp r3,#0
 1240 016c 25D0     	 beq .L82
 1241              	 .loc 1 389 0 is_stmt 0 discriminator 1
 1242 016e BB68     	 ldr r3,[r7,#8]
 1243 0170 D3F80930 	 ldr r3,[r3,#9]
 1244 0174 002B     	 cmp r3,#0
 1245 0176 20D0     	 beq .L82
 390:../cleanflight/src/main/cms/cms.c ****             if (*((uint8_t *)(p->data))) {
 1246              	 .loc 1 390 0 is_stmt 1
 1247 0178 BB68     	 ldr r3,[r7,#8]
 1248 017a D3F80930 	 ldr r3,[r3,#9]
 1249 017e 1B78     	 ldrb r3,[r3]
 1250 0180 002B     	 cmp r3,#0
 1251 0182 04D0     	 beq .L83
 391:../cleanflight/src/main/cms/cms.c ****               strcpy(buff, "YES");
 1252              	 .loc 1 391 0
 1253 0184 07F11003 	 add r3,r7,#16
 1254 0188 544A     	 ldr r2,.L97+8
 1255 018a 1A60     	 str r2,[r3]
 1256 018c 03E0     	 b .L84
 1257              	.L83:
 392:../cleanflight/src/main/cms/cms.c ****             } else {
 393:../cleanflight/src/main/cms/cms.c ****               strcpy(buff, "NO ");
 1258              	 .loc 1 393 0
 1259 018e 07F11003 	 add r3,r7,#16
 1260 0192 534A     	 ldr r2,.L97+12
 1261 0194 1A60     	 str r2,[r3]
 1262              	.L84:
 394:../cleanflight/src/main/cms/cms.c ****             }
 395:../cleanflight/src/main/cms/cms.c **** 
 396:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, 3);
 1263              	 .loc 1 396 0
 1264 0196 07F11002 	 add r2,r7,#16
 1265 019a FB79     	 ldrb r3,[r7,#7]
 1266 019c F868     	 ldr r0,[r7,#12]
 1267 019e 1146     	 mov r1,r2
 1268 01a0 1A46     	 mov r2,r3
 1269 01a2 0323     	 movs r3,#3
 1270 01a4 FFF7FEFF 	 bl cmsDrawMenuItemValue
 1271 01a8 7864     	 str r0,[r7,#68]
 397:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1272              	 .loc 1 397 0
 1273 01aa BB68     	 ldr r3,[r7,#8]
 1274 01ac 5B7B     	 ldrb r3,[r3,#13]
 1275 01ae 23F00103 	 bic r3,r3,#1
 1276 01b2 DAB2     	 uxtb r2,r3
 1277 01b4 BB68     	 ldr r3,[r7,#8]
 1278 01b6 5A73     	 strb r2,[r3,#13]
 398:../cleanflight/src/main/cms/cms.c ****         }
 399:../cleanflight/src/main/cms/cms.c ****         break;
 1279              	 .loc 1 399 0
 1280 01b8 77E1     	 b .L77
 1281              	.L82:
 1282 01ba 76E1     	 b .L77
 1283              	.L75:
 400:../cleanflight/src/main/cms/cms.c **** 
 401:../cleanflight/src/main/cms/cms.c ****     case OME_TAB:
 402:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p)) {
 1284              	 .loc 1 402 0
 1285 01bc BB68     	 ldr r3,[r7,#8]
 1286 01be 5B7B     	 ldrb r3,[r3,#13]
 1287 01c0 03F00103 	 and r3,r3,#1
 1288 01c4 002B     	 cmp r3,#0
 1289 01c6 26D0     	 beq .L85
 1290              	.LBB5:
 403:../cleanflight/src/main/cms/cms.c ****             OSD_TAB_t *ptr = p->data;
 1291              	 .loc 1 403 0
 1292 01c8 BB68     	 ldr r3,[r7,#8]
 1293 01ca D3F80930 	 ldr r3,[r3,#9]
 1294 01ce FB63     	 str r3,[r7,#60]
 404:../cleanflight/src/main/cms/cms.c ****             char * str = (char *)ptr->names[*ptr->val];
 1295              	 .loc 1 404 0
 1296 01d0 FB6B     	 ldr r3,[r7,#60]
 1297 01d2 D3F80520 	 ldr r2,[r3,#5]
 1298 01d6 FB6B     	 ldr r3,[r7,#60]
 1299 01d8 1B68     	 ldr r3,[r3]
 1300 01da 1B78     	 ldrb r3,[r3]
 1301 01dc 9B00     	 lsls r3,r3,#2
 1302 01de 1344     	 add r3,r3,r2
 1303 01e0 1B68     	 ldr r3,[r3]
 1304 01e2 BB63     	 str r3,[r7,#56]
 405:../cleanflight/src/main/cms/cms.c ****             strncpy(buff, str, CMS_DRAW_BUFFER_LEN);
 1305              	 .loc 1 405 0
 1306 01e4 07F11003 	 add r3,r7,#16
 1307 01e8 1846     	 mov r0,r3
 1308 01ea B96B     	 ldr r1,[r7,#56]
 1309 01ec 0C22     	 movs r2,#12
 1310 01ee FFF7FEFF 	 bl strncpy
 406:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, CMS_DRAW_BUFFER_LEN);
 1311              	 .loc 1 406 0
 1312 01f2 07F11002 	 add r2,r7,#16
 1313 01f6 FB79     	 ldrb r3,[r7,#7]
 1314 01f8 F868     	 ldr r0,[r7,#12]
 1315 01fa 1146     	 mov r1,r2
 1316 01fc 1A46     	 mov r2,r3
 1317 01fe 0C23     	 movs r3,#12
 1318 0200 FFF7FEFF 	 bl cmsDrawMenuItemValue
 1319 0204 7864     	 str r0,[r7,#68]
 407:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1320              	 .loc 1 407 0
 1321 0206 BB68     	 ldr r3,[r7,#8]
 1322 0208 5B7B     	 ldrb r3,[r3,#13]
 1323 020a 23F00103 	 bic r3,r3,#1
 1324 020e DAB2     	 uxtb r2,r3
 1325 0210 BB68     	 ldr r3,[r7,#8]
 1326 0212 5A73     	 strb r2,[r3,#13]
 1327              	.LBE5:
 408:../cleanflight/src/main/cms/cms.c ****         }
 409:../cleanflight/src/main/cms/cms.c ****         break;
 1328              	 .loc 1 409 0
 1329 0214 49E1     	 b .L77
 1330              	.L85:
 1331 0216 48E1     	 b .L77
 1332              	.L74:
 410:../cleanflight/src/main/cms/cms.c **** 
 411:../cleanflight/src/main/cms/cms.c **** #ifdef USE_OSD
 412:../cleanflight/src/main/cms/cms.c ****     case OME_VISIBLE:
 413:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p) && p->data) {
 1333              	 .loc 1 413 0
 1334 0218 BB68     	 ldr r3,[r7,#8]
 1335 021a 5B7B     	 ldrb r3,[r3,#13]
 1336 021c 03F00103 	 and r3,r3,#1
 1337 0220 002B     	 cmp r3,#0
 1338 0222 29D0     	 beq .L86
 1339              	 .loc 1 413 0 is_stmt 0 discriminator 1
 1340 0224 BB68     	 ldr r3,[r7,#8]
 1341 0226 D3F80930 	 ldr r3,[r3,#9]
 1342 022a 002B     	 cmp r3,#0
 1343 022c 24D0     	 beq .L86
 1344              	.LBB6:
 414:../cleanflight/src/main/cms/cms.c ****             uint16_t *val = (uint16_t *)p->data;
 1345              	 .loc 1 414 0 is_stmt 1
 1346 022e BB68     	 ldr r3,[r7,#8]
 1347 0230 D3F80930 	 ldr r3,[r3,#9]
 1348 0234 7B63     	 str r3,[r7,#52]
 415:../cleanflight/src/main/cms/cms.c **** 
 416:../cleanflight/src/main/cms/cms.c ****             if (VISIBLE(*val)) {
 1349              	 .loc 1 416 0
 1350 0236 7B6B     	 ldr r3,[r7,#52]
 1351 0238 1B88     	 ldrh r3,[r3]
 1352 023a 03F40063 	 and r3,r3,#2048
 1353 023e 002B     	 cmp r3,#0
 1354 0240 04D0     	 beq .L87
 417:../cleanflight/src/main/cms/cms.c ****                 strcpy(buff, "YES");
 1355              	 .loc 1 417 0
 1356 0242 07F11003 	 add r3,r7,#16
 1357 0246 254A     	 ldr r2,.L97+8
 1358 0248 1A60     	 str r2,[r3]
 1359 024a 03E0     	 b .L88
 1360              	.L87:
 418:../cleanflight/src/main/cms/cms.c ****             } else {
 419:../cleanflight/src/main/cms/cms.c ****               strcpy(buff, "NO ");
 1361              	 .loc 1 419 0
 1362 024c 07F11003 	 add r3,r7,#16
 1363 0250 234A     	 ldr r2,.L97+12
 1364 0252 1A60     	 str r2,[r3]
 1365              	.L88:
 420:../cleanflight/src/main/cms/cms.c ****             }
 421:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, 3);
 1366              	 .loc 1 421 0
 1367 0254 07F11002 	 add r2,r7,#16
 1368 0258 FB79     	 ldrb r3,[r7,#7]
 1369 025a F868     	 ldr r0,[r7,#12]
 1370 025c 1146     	 mov r1,r2
 1371 025e 1A46     	 mov r2,r3
 1372 0260 0323     	 movs r3,#3
 1373 0262 FFF7FEFF 	 bl cmsDrawMenuItemValue
 1374 0266 7864     	 str r0,[r7,#68]
 422:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1375              	 .loc 1 422 0
 1376 0268 BB68     	 ldr r3,[r7,#8]
 1377 026a 5B7B     	 ldrb r3,[r3,#13]
 1378 026c 23F00103 	 bic r3,r3,#1
 1379 0270 DAB2     	 uxtb r2,r3
 1380 0272 BB68     	 ldr r3,[r7,#8]
 1381 0274 5A73     	 strb r2,[r3,#13]
 1382              	.LBE6:
 423:../cleanflight/src/main/cms/cms.c ****         }
 424:../cleanflight/src/main/cms/cms.c ****         break;
 1383              	 .loc 1 424 0
 1384 0276 18E1     	 b .L77
 1385              	.L86:
 1386 0278 17E1     	 b .L77
 1387              	.L69:
 425:../cleanflight/src/main/cms/cms.c **** #endif
 426:../cleanflight/src/main/cms/cms.c **** 
 427:../cleanflight/src/main/cms/cms.c ****     case OME_UINT8:
 428:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p) && p->data) {
 1388              	 .loc 1 428 0
 1389 027a BB68     	 ldr r3,[r7,#8]
 1390 027c 5B7B     	 ldrb r3,[r3,#13]
 1391 027e 03F00103 	 and r3,r3,#1
 1392 0282 002B     	 cmp r3,#0
 1393 0284 25D0     	 beq .L89
 1394              	 .loc 1 428 0 is_stmt 0 discriminator 1
 1395 0286 BB68     	 ldr r3,[r7,#8]
 1396 0288 D3F80930 	 ldr r3,[r3,#9]
 1397 028c 002B     	 cmp r3,#0
 1398 028e 20D0     	 beq .L89
 1399              	.LBB7:
 429:../cleanflight/src/main/cms/cms.c ****             OSD_UINT8_t *ptr = p->data;
 1400              	 .loc 1 429 0 is_stmt 1
 1401 0290 BB68     	 ldr r3,[r7,#8]
 1402 0292 D3F80930 	 ldr r3,[r3,#9]
 1403 0296 3B63     	 str r3,[r7,#48]
 430:../cleanflight/src/main/cms/cms.c ****             itoa(*ptr->val, buff, 10);
 1404              	 .loc 1 430 0
 1405 0298 3B6B     	 ldr r3,[r7,#48]
 1406 029a 1B68     	 ldr r3,[r3]
 1407 029c 1B78     	 ldrb r3,[r3]
 1408 029e 1A46     	 mov r2,r3
 1409 02a0 07F11003 	 add r3,r7,#16
 1410 02a4 1046     	 mov r0,r2
 1411 02a6 1946     	 mov r1,r3
 1412 02a8 0A22     	 movs r2,#10
 1413 02aa FFF7FEFF 	 bl itoa
 431:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, CMS_NUM_FIELD_LEN);
 1414              	 .loc 1 431 0
 1415 02ae 07F11002 	 add r2,r7,#16
 1416 02b2 FB79     	 ldrb r3,[r7,#7]
 1417 02b4 F868     	 ldr r0,[r7,#12]
 1418 02b6 1146     	 mov r1,r2
 1419 02b8 1A46     	 mov r2,r3
 1420 02ba 0523     	 movs r3,#5
 1421 02bc FFF7FEFF 	 bl cmsDrawMenuItemValue
 1422 02c0 7864     	 str r0,[r7,#68]
 432:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1423              	 .loc 1 432 0
 1424 02c2 BB68     	 ldr r3,[r7,#8]
 1425 02c4 5B7B     	 ldrb r3,[r3,#13]
 1426 02c6 23F00103 	 bic r3,r3,#1
 1427 02ca DAB2     	 uxtb r2,r3
 1428 02cc BB68     	 ldr r3,[r7,#8]
 1429 02ce 5A73     	 strb r2,[r3,#13]
 1430              	.LBE7:
 433:../cleanflight/src/main/cms/cms.c ****         }
 434:../cleanflight/src/main/cms/cms.c ****         break;
 1431              	 .loc 1 434 0
 1432 02d0 EBE0     	 b .L77
 1433              	.L89:
 1434 02d2 EAE0     	 b .L77
 1435              	.L98:
 1436              	 .align 2
 1437              	.L97:
 1438 02d4 00000000 	 .word smallScreen
 1439 02d8 00000000 	 .word .LC0
 1440 02dc 59455300 	 .word 5457241
 1441 02e0 4E4F2000 	 .word 2117454
 1442              	.L68:
 435:../cleanflight/src/main/cms/cms.c **** 
 436:../cleanflight/src/main/cms/cms.c ****     case OME_INT8:
 437:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p) && p->data) {
 1443              	 .loc 1 437 0
 1444 02e4 BB68     	 ldr r3,[r7,#8]
 1445 02e6 5B7B     	 ldrb r3,[r3,#13]
 1446 02e8 03F00103 	 and r3,r3,#1
 1447 02ec 002B     	 cmp r3,#0
 1448 02ee 25D0     	 beq .L90
 1449              	 .loc 1 437 0 is_stmt 0 discriminator 1
 1450 02f0 BB68     	 ldr r3,[r7,#8]
 1451 02f2 D3F80930 	 ldr r3,[r3,#9]
 1452 02f6 002B     	 cmp r3,#0
 1453 02f8 20D0     	 beq .L90
 1454              	.LBB8:
 438:../cleanflight/src/main/cms/cms.c ****             OSD_INT8_t *ptr = p->data;
 1455              	 .loc 1 438 0 is_stmt 1
 1456 02fa BB68     	 ldr r3,[r7,#8]
 1457 02fc D3F80930 	 ldr r3,[r3,#9]
 1458 0300 FB62     	 str r3,[r7,#44]
 439:../cleanflight/src/main/cms/cms.c ****             itoa(*ptr->val, buff, 10);
 1459              	 .loc 1 439 0
 1460 0302 FB6A     	 ldr r3,[r7,#44]
 1461 0304 1B68     	 ldr r3,[r3]
 1462 0306 1B78     	 ldrb r3,[r3]
 1463 0308 5AB2     	 sxtb r2,r3
 1464 030a 07F11003 	 add r3,r7,#16
 1465 030e 1046     	 mov r0,r2
 1466 0310 1946     	 mov r1,r3
 1467 0312 0A22     	 movs r2,#10
 1468 0314 FFF7FEFF 	 bl itoa
 440:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, CMS_NUM_FIELD_LEN);
 1469              	 .loc 1 440 0
 1470 0318 07F11002 	 add r2,r7,#16
 1471 031c FB79     	 ldrb r3,[r7,#7]
 1472 031e F868     	 ldr r0,[r7,#12]
 1473 0320 1146     	 mov r1,r2
 1474 0322 1A46     	 mov r2,r3
 1475 0324 0523     	 movs r3,#5
 1476 0326 FFF7FEFF 	 bl cmsDrawMenuItemValue
 1477 032a 7864     	 str r0,[r7,#68]
 441:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1478              	 .loc 1 441 0
 1479 032c BB68     	 ldr r3,[r7,#8]
 1480 032e 5B7B     	 ldrb r3,[r3,#13]
 1481 0330 23F00103 	 bic r3,r3,#1
 1482 0334 DAB2     	 uxtb r2,r3
 1483 0336 BB68     	 ldr r3,[r7,#8]
 1484 0338 5A73     	 strb r2,[r3,#13]
 1485              	.LBE8:
 442:../cleanflight/src/main/cms/cms.c ****         }
 443:../cleanflight/src/main/cms/cms.c ****         break;
 1486              	 .loc 1 443 0
 1487 033a B6E0     	 b .L77
 1488              	.L90:
 1489 033c B5E0     	 b .L77
 1490              	.L70:
 444:../cleanflight/src/main/cms/cms.c **** 
 445:../cleanflight/src/main/cms/cms.c ****     case OME_UINT16:
 446:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p) && p->data) {
 1491              	 .loc 1 446 0
 1492 033e BB68     	 ldr r3,[r7,#8]
 1493 0340 5B7B     	 ldrb r3,[r3,#13]
 1494 0342 03F00103 	 and r3,r3,#1
 1495 0346 002B     	 cmp r3,#0
 1496 0348 25D0     	 beq .L91
 1497              	 .loc 1 446 0 is_stmt 0 discriminator 1
 1498 034a BB68     	 ldr r3,[r7,#8]
 1499 034c D3F80930 	 ldr r3,[r3,#9]
 1500 0350 002B     	 cmp r3,#0
 1501 0352 20D0     	 beq .L91
 1502              	.LBB9:
 447:../cleanflight/src/main/cms/cms.c ****             OSD_UINT16_t *ptr = p->data;
 1503              	 .loc 1 447 0 is_stmt 1
 1504 0354 BB68     	 ldr r3,[r7,#8]
 1505 0356 D3F80930 	 ldr r3,[r3,#9]
 1506 035a BB62     	 str r3,[r7,#40]
 448:../cleanflight/src/main/cms/cms.c ****             itoa(*ptr->val, buff, 10);
 1507              	 .loc 1 448 0
 1508 035c BB6A     	 ldr r3,[r7,#40]
 1509 035e 1B68     	 ldr r3,[r3]
 1510 0360 1B88     	 ldrh r3,[r3]
 1511 0362 1A46     	 mov r2,r3
 1512 0364 07F11003 	 add r3,r7,#16
 1513 0368 1046     	 mov r0,r2
 1514 036a 1946     	 mov r1,r3
 1515 036c 0A22     	 movs r2,#10
 1516 036e FFF7FEFF 	 bl itoa
 449:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, CMS_NUM_FIELD_LEN);
 1517              	 .loc 1 449 0
 1518 0372 07F11002 	 add r2,r7,#16
 1519 0376 FB79     	 ldrb r3,[r7,#7]
 1520 0378 F868     	 ldr r0,[r7,#12]
 1521 037a 1146     	 mov r1,r2
 1522 037c 1A46     	 mov r2,r3
 1523 037e 0523     	 movs r3,#5
 1524 0380 FFF7FEFF 	 bl cmsDrawMenuItemValue
 1525 0384 7864     	 str r0,[r7,#68]
 450:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1526              	 .loc 1 450 0
 1527 0386 BB68     	 ldr r3,[r7,#8]
 1528 0388 5B7B     	 ldrb r3,[r3,#13]
 1529 038a 23F00103 	 bic r3,r3,#1
 1530 038e DAB2     	 uxtb r2,r3
 1531 0390 BB68     	 ldr r3,[r7,#8]
 1532 0392 5A73     	 strb r2,[r3,#13]
 1533              	.LBE9:
 451:../cleanflight/src/main/cms/cms.c ****         }
 452:../cleanflight/src/main/cms/cms.c ****         break;
 1534              	 .loc 1 452 0
 1535 0394 89E0     	 b .L77
 1536              	.L91:
 1537 0396 88E0     	 b .L77
 1538              	.L71:
 453:../cleanflight/src/main/cms/cms.c **** 
 454:../cleanflight/src/main/cms/cms.c ****     case OME_INT16:
 455:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p) && p->data) {
 1539              	 .loc 1 455 0
 1540 0398 BB68     	 ldr r3,[r7,#8]
 1541 039a 5B7B     	 ldrb r3,[r3,#13]
 1542 039c 03F00103 	 and r3,r3,#1
 1543 03a0 002B     	 cmp r3,#0
 1544 03a2 25D0     	 beq .L92
 1545              	 .loc 1 455 0 is_stmt 0 discriminator 1
 1546 03a4 BB68     	 ldr r3,[r7,#8]
 1547 03a6 D3F80930 	 ldr r3,[r3,#9]
 1548 03aa 002B     	 cmp r3,#0
 1549 03ac 20D0     	 beq .L92
 1550              	.LBB10:
 456:../cleanflight/src/main/cms/cms.c ****             OSD_UINT16_t *ptr = p->data;
 1551              	 .loc 1 456 0 is_stmt 1
 1552 03ae BB68     	 ldr r3,[r7,#8]
 1553 03b0 D3F80930 	 ldr r3,[r3,#9]
 1554 03b4 7B62     	 str r3,[r7,#36]
 457:../cleanflight/src/main/cms/cms.c ****             itoa(*ptr->val, buff, 10);
 1555              	 .loc 1 457 0
 1556 03b6 7B6A     	 ldr r3,[r7,#36]
 1557 03b8 1B68     	 ldr r3,[r3]
 1558 03ba 1B88     	 ldrh r3,[r3]
 1559 03bc 1A46     	 mov r2,r3
 1560 03be 07F11003 	 add r3,r7,#16
 1561 03c2 1046     	 mov r0,r2
 1562 03c4 1946     	 mov r1,r3
 1563 03c6 0A22     	 movs r2,#10
 1564 03c8 FFF7FEFF 	 bl itoa
 458:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, CMS_NUM_FIELD_LEN);
 1565              	 .loc 1 458 0
 1566 03cc 07F11002 	 add r2,r7,#16
 1567 03d0 FB79     	 ldrb r3,[r7,#7]
 1568 03d2 F868     	 ldr r0,[r7,#12]
 1569 03d4 1146     	 mov r1,r2
 1570 03d6 1A46     	 mov r2,r3
 1571 03d8 0523     	 movs r3,#5
 1572 03da FFF7FEFF 	 bl cmsDrawMenuItemValue
 1573 03de 7864     	 str r0,[r7,#68]
 459:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1574              	 .loc 1 459 0
 1575 03e0 BB68     	 ldr r3,[r7,#8]
 1576 03e2 5B7B     	 ldrb r3,[r3,#13]
 1577 03e4 23F00103 	 bic r3,r3,#1
 1578 03e8 DAB2     	 uxtb r2,r3
 1579 03ea BB68     	 ldr r3,[r7,#8]
 1580 03ec 5A73     	 strb r2,[r3,#13]
 1581              	.LBE10:
 460:../cleanflight/src/main/cms/cms.c ****         }
 461:../cleanflight/src/main/cms/cms.c ****         break;
 1582              	 .loc 1 461 0
 1583 03ee 5CE0     	 b .L77
 1584              	.L92:
 1585 03f0 5BE0     	 b .L77
 1586              	.L73:
 462:../cleanflight/src/main/cms/cms.c **** 
 463:../cleanflight/src/main/cms/cms.c ****     case OME_FLOAT:
 464:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p) && p->data) {
 1587              	 .loc 1 464 0
 1588 03f2 BB68     	 ldr r3,[r7,#8]
 1589 03f4 5B7B     	 ldrb r3,[r3,#13]
 1590 03f6 03F00103 	 and r3,r3,#1
 1591 03fa 002B     	 cmp r3,#0
 1592 03fc 2AD0     	 beq .L93
 1593              	 .loc 1 464 0 is_stmt 0 discriminator 1
 1594 03fe BB68     	 ldr r3,[r7,#8]
 1595 0400 D3F80930 	 ldr r3,[r3,#9]
 1596 0404 002B     	 cmp r3,#0
 1597 0406 25D0     	 beq .L93
 1598              	.LBB11:
 465:../cleanflight/src/main/cms/cms.c ****             OSD_FLOAT_t *ptr = p->data;
 1599              	 .loc 1 465 0 is_stmt 1
 1600 0408 BB68     	 ldr r3,[r7,#8]
 1601 040a D3F80930 	 ldr r3,[r3,#9]
 1602 040e 3B62     	 str r3,[r7,#32]
 466:../cleanflight/src/main/cms/cms.c ****             cmsFormatFloat(*ptr->val * ptr->multipler, buff);
 1603              	 .loc 1 466 0
 1604 0410 3B6A     	 ldr r3,[r7,#32]
 1605 0412 1B68     	 ldr r3,[r3]
 1606 0414 1B78     	 ldrb r3,[r3]
 1607 0416 1A46     	 mov r2,r3
 1608 0418 3B6A     	 ldr r3,[r7,#32]
 1609 041a B3F80730 	 ldrh r3,[r3,#7]
 1610 041e 9BB2     	 uxth r3,r3
 1611 0420 03FB02F2 	 mul r2,r3,r2
 1612 0424 07F11003 	 add r3,r7,#16
 1613 0428 1046     	 mov r0,r2
 1614 042a 1946     	 mov r1,r3
 1615 042c FFF7FEFF 	 bl cmsFormatFloat
 467:../cleanflight/src/main/cms/cms.c ****             cnt = cmsDrawMenuItemValue(pDisplay, buff, row, CMS_NUM_FIELD_LEN);
 1616              	 .loc 1 467 0
 1617 0430 07F11002 	 add r2,r7,#16
 1618 0434 FB79     	 ldrb r3,[r7,#7]
 1619 0436 F868     	 ldr r0,[r7,#12]
 1620 0438 1146     	 mov r1,r2
 1621 043a 1A46     	 mov r2,r3
 1622 043c 0523     	 movs r3,#5
 1623 043e FFF7FEFF 	 bl cmsDrawMenuItemValue
 1624 0442 7864     	 str r0,[r7,#68]
 468:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1625              	 .loc 1 468 0
 1626 0444 BB68     	 ldr r3,[r7,#8]
 1627 0446 5B7B     	 ldrb r3,[r3,#13]
 1628 0448 23F00103 	 bic r3,r3,#1
 1629 044c DAB2     	 uxtb r2,r3
 1630 044e BB68     	 ldr r3,[r7,#8]
 1631 0450 5A73     	 strb r2,[r3,#13]
 1632              	.LBE11:
 469:../cleanflight/src/main/cms/cms.c ****         }
 470:../cleanflight/src/main/cms/cms.c ****         break;
 1633              	 .loc 1 470 0
 1634 0452 2AE0     	 b .L77
 1635              	.L93:
 1636 0454 29E0     	 b .L77
 1637              	.L63:
 471:../cleanflight/src/main/cms/cms.c **** 
 472:../cleanflight/src/main/cms/cms.c ****     case OME_Label:
 473:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p) && p->data) {
 1638              	 .loc 1 473 0
 1639 0456 BB68     	 ldr r3,[r7,#8]
 1640 0458 5B7B     	 ldrb r3,[r3,#13]
 1641 045a 03F00103 	 and r3,r3,#1
 1642 045e 002B     	 cmp r3,#0
 1643 0460 21D0     	 beq .L94
 1644              	 .loc 1 473 0 is_stmt 0 discriminator 1
 1645 0462 BB68     	 ldr r3,[r7,#8]
 1646 0464 D3F80930 	 ldr r3,[r3,#9]
 1647 0468 002B     	 cmp r3,#0
 1648 046a 1CD0     	 beq .L94
 474:../cleanflight/src/main/cms/cms.c ****             // A label with optional string, immediately following text
 475:../cleanflight/src/main/cms/cms.c ****             cnt = displayWrite(pDisplay, leftMenuColumn + 1 + (uint8_t)strlen(p->text), row, p->dat
 1649              	 .loc 1 475 0 is_stmt 1
 1650 046c BB68     	 ldr r3,[r7,#8]
 1651 046e 1B68     	 ldr r3,[r3]
 1652 0470 1846     	 mov r0,r3
 1653 0472 FFF7FEFF 	 bl strlen
 1654 0476 0346     	 mov r3,r0
 1655 0478 DAB2     	 uxtb r2,r3
 1656 047a 0E4B     	 ldr r3,.L99
 1657 047c 1B78     	 ldrb r3,[r3]
 1658 047e 1344     	 add r3,r3,r2
 1659 0480 DBB2     	 uxtb r3,r3
 1660 0482 0133     	 adds r3,r3,#1
 1661 0484 D9B2     	 uxtb r1,r3
 1662 0486 BB68     	 ldr r3,[r7,#8]
 1663 0488 D3F80930 	 ldr r3,[r3,#9]
 1664 048c FA79     	 ldrb r2,[r7,#7]
 1665 048e F868     	 ldr r0,[r7,#12]
 1666 0490 FFF7FEFF 	 bl displayWrite
 1667 0494 7864     	 str r0,[r7,#68]
 476:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTVALUE(p);
 1668              	 .loc 1 476 0
 1669 0496 BB68     	 ldr r3,[r7,#8]
 1670 0498 5B7B     	 ldrb r3,[r3,#13]
 1671 049a 23F00103 	 bic r3,r3,#1
 1672 049e DAB2     	 uxtb r2,r3
 1673 04a0 BB68     	 ldr r3,[r7,#8]
 1674 04a2 5A73     	 strb r2,[r3,#13]
 477:../cleanflight/src/main/cms/cms.c ****         }
 478:../cleanflight/src/main/cms/cms.c ****         break;
 1675              	 .loc 1 478 0
 1676 04a4 01E0     	 b .L77
 1677              	.L94:
 1678 04a6 00E0     	 b .L77
 1679              	.L96:
 479:../cleanflight/src/main/cms/cms.c **** 
 480:../cleanflight/src/main/cms/cms.c ****     case OME_OSD_Exit:
 481:../cleanflight/src/main/cms/cms.c ****     case OME_END:
 482:../cleanflight/src/main/cms/cms.c ****     case OME_Back:
 483:../cleanflight/src/main/cms/cms.c ****         break;
 484:../cleanflight/src/main/cms/cms.c **** 
 485:../cleanflight/src/main/cms/cms.c ****     case OME_MENU:
 486:../cleanflight/src/main/cms/cms.c ****         // Fall through
 487:../cleanflight/src/main/cms/cms.c ****     default:
 488:../cleanflight/src/main/cms/cms.c **** #ifdef CMS_MENU_DEBUG
 489:../cleanflight/src/main/cms/cms.c ****         // Shouldn't happen. Notify creator of this menu content
 490:../cleanflight/src/main/cms/cms.c **** #ifdef CMS_OSD_RIGHT_ALIGNED_VALUES
 491:../cleanflight/src/main/cms/cms.c ****         cnt = displayWrite(pDisplay, rightMenuColumn - 6, row, "BADENT");
 492:../cleanflight/src/main/cms/cms.c **** #else.
 493:../cleanflight/src/main/cms/cms.c ****         cnt = displayWrite(pDisplay, rightMenuColumn, row, "BADENT");
 494:../cleanflight/src/main/cms/cms.c **** #endif
 495:../cleanflight/src/main/cms/cms.c **** #endif
 496:../cleanflight/src/main/cms/cms.c ****         break;
 1680              	 .loc 1 496 0
 1681 04a8 00BF     	 nop
 1682              	.L77:
 497:../cleanflight/src/main/cms/cms.c ****     }
 498:../cleanflight/src/main/cms/cms.c **** 
 499:../cleanflight/src/main/cms/cms.c ****     return cnt;
 1683              	 .loc 1 499 0
 1684 04aa 7B6C     	 ldr r3,[r7,#68]
 500:../cleanflight/src/main/cms/cms.c **** }
 1685              	 .loc 1 500 0
 1686 04ac 1846     	 mov r0,r3
 1687 04ae 4837     	 adds r7,r7,#72
 1688              	.LCFI69:
 1689              	 .cfi_def_cfa_offset 8
 1690 04b0 BD46     	 mov sp,r7
 1691              	.LCFI70:
 1692              	 .cfi_def_cfa_register 13
 1693              	 
 1694 04b2 80BD     	 pop {r7,pc}
 1695              	.L100:
 1696              	 .align 2
 1697              	.L99:
 1698 04b4 00000000 	 .word leftMenuColumn
 1699              	 .cfi_endproc
 1700              	.LFE576:
 1702              	 .section .rodata
 1703 0002 0000     	 .align 2
 1704              	.LC1:
 1705 0004 2000     	 .ascii " \000"
 1706              	 .section .text.cmsDrawMenu,"ax",%progbits
 1707              	 .align 2
 1708              	 .thumb
 1709              	 .thumb_func
 1711              	cmsDrawMenu:
 1712              	.LFB577:
 501:../cleanflight/src/main/cms/cms.c **** 
 502:../cleanflight/src/main/cms/cms.c **** static void cmsDrawMenu(displayPort_t *pDisplay, uint32_t currentTimeUs)
 503:../cleanflight/src/main/cms/cms.c **** {
 1713              	 .loc 1 503 0
 1714              	 .cfi_startproc
 1715              	 
 1716              	 
 1717 0000 80B5     	 push {r7,lr}
 1718              	.LCFI71:
 1719              	 .cfi_def_cfa_offset 8
 1720              	 .cfi_offset 7,-8
 1721              	 .cfi_offset 14,-4
 1722 0002 88B0     	 sub sp,sp,#32
 1723              	.LCFI72:
 1724              	 .cfi_def_cfa_offset 40
 1725 0004 00AF     	 add r7,sp,#0
 1726              	.LCFI73:
 1727              	 .cfi_def_cfa_register 7
 1728 0006 7860     	 str r0,[r7,#4]
 1729 0008 3960     	 str r1,[r7]
 504:../cleanflight/src/main/cms/cms.c ****     if (!pageTop)
 1730              	 .loc 1 504 0
 1731 000a 984B     	 ldr r3,.L124
 1732 000c 1B68     	 ldr r3,[r3]
 1733 000e 002B     	 cmp r3,#0
 1734 0010 00D1     	 bne .L102
 505:../cleanflight/src/main/cms/cms.c ****         return;
 1735              	 .loc 1 505 0
 1736 0012 4CE1     	 b .L101
 1737              	.L102:
 506:../cleanflight/src/main/cms/cms.c **** 
 507:../cleanflight/src/main/cms/cms.c ****     uint8_t i;
 508:../cleanflight/src/main/cms/cms.c ****     OSD_Entry *p;
 509:../cleanflight/src/main/cms/cms.c ****     uint8_t top = smallScreen ? 1 : (pDisplay->rows - pageMaxRow)/2;
 1738              	 .loc 1 509 0
 1739 0014 964B     	 ldr r3,.L124+4
 1740 0016 1B78     	 ldrb r3,[r3]
 1741 0018 002B     	 cmp r3,#0
 1742 001a 01D0     	 beq .L104
 1743              	 .loc 1 509 0 is_stmt 0 discriminator 1
 1744 001c 0123     	 movs r3,#1
 1745 001e 09E0     	 b .L105
 1746              	.L104:
 1747              	 .loc 1 509 0 discriminator 2
 1748 0020 7B68     	 ldr r3,[r7,#4]
 1749 0022 1B7A     	 ldrb r3,[r3,#8]
 1750 0024 1A46     	 mov r2,r3
 1751 0026 934B     	 ldr r3,.L124+8
 1752 0028 1B78     	 ldrb r3,[r3]
 1753 002a D31A     	 subs r3,r2,r3
 1754 002c DA0F     	 lsrs r2,r3,#31
 1755 002e 1344     	 add r3,r3,r2
 1756 0030 5B10     	 asrs r3,r3,#1
 1757 0032 DBB2     	 uxtb r3,r3
 1758              	.L105:
 1759              	 .loc 1 509 0 discriminator 4
 1760 0034 FB73     	 strb r3,[r7,#15]
 510:../cleanflight/src/main/cms/cms.c **** 
 511:../cleanflight/src/main/cms/cms.c ****     // Polled (dynamic) value display denominator.
 512:../cleanflight/src/main/cms/cms.c **** 
 513:../cleanflight/src/main/cms/cms.c ****     bool drawPolled = false;
 1761              	 .loc 1 513 0 is_stmt 1 discriminator 4
 1762 0036 0023     	 movs r3,#0
 1763 0038 FB75     	 strb r3,[r7,#23]
 514:../cleanflight/src/main/cms/cms.c ****     static uint32_t lastPolledUs = 0;
 515:../cleanflight/src/main/cms/cms.c **** 
 516:../cleanflight/src/main/cms/cms.c ****     if (currentTimeUs > lastPolledUs + CMS_POLL_INTERVAL_US) {
 1764              	 .loc 1 516 0 discriminator 4
 1765 003a 8F4B     	 ldr r3,.L124+12
 1766 003c 1B68     	 ldr r3,[r3]
 1767 003e 03F5C333 	 add r3,r3,#99840
 1768 0042 A033     	 adds r3,r3,#160
 1769 0044 3A68     	 ldr r2,[r7]
 1770 0046 9342     	 cmp r3,r2
 1771 0048 04D2     	 bcs .L106
 517:../cleanflight/src/main/cms/cms.c ****         drawPolled = true;
 1772              	 .loc 1 517 0
 1773 004a 0123     	 movs r3,#1
 1774 004c FB75     	 strb r3,[r7,#23]
 518:../cleanflight/src/main/cms/cms.c ****         lastPolledUs = currentTimeUs;
 1775              	 .loc 1 518 0
 1776 004e 8A4A     	 ldr r2,.L124+12
 1777 0050 3B68     	 ldr r3,[r7]
 1778 0052 1360     	 str r3,[r2]
 1779              	.L106:
 519:../cleanflight/src/main/cms/cms.c ****     }
 520:../cleanflight/src/main/cms/cms.c **** 
 521:../cleanflight/src/main/cms/cms.c ****     uint32_t room = displayTxBytesFree(pDisplay);
 1780              	 .loc 1 521 0
 1781 0054 7868     	 ldr r0,[r7,#4]
 1782 0056 FFF7FEFF 	 bl displayTxBytesFree
 1783 005a 0346     	 mov r3,r0
 1784 005c 3B61     	 str r3,[r7,#16]
 522:../cleanflight/src/main/cms/cms.c **** 
 523:../cleanflight/src/main/cms/cms.c ****     if (pDisplay->cleared) {
 1785              	 .loc 1 523 0
 1786 005e 7B68     	 ldr r3,[r7,#4]
 1787 0060 1B7B     	 ldrb r3,[r3,#12]
 1788 0062 002B     	 cmp r3,#0
 1789 0064 21D0     	 beq .L107
 524:../cleanflight/src/main/cms/cms.c ****         for (p = pageTop, i= 0; p->type != OME_END; p++, i++) {
 1790              	 .loc 1 524 0
 1791 0066 814B     	 ldr r3,.L124
 1792 0068 1B68     	 ldr r3,[r3]
 1793 006a BB61     	 str r3,[r7,#24]
 1794 006c 0023     	 movs r3,#0
 1795 006e FB77     	 strb r3,[r7,#31]
 1796 0070 13E0     	 b .L108
 1797              	.L109:
 525:../cleanflight/src/main/cms/cms.c ****             SET_PRINTLABEL(p);
 1798              	 .loc 1 525 0 discriminator 3
 1799 0072 BB69     	 ldr r3,[r7,#24]
 1800 0074 5B7B     	 ldrb r3,[r3,#13]
 1801 0076 43F00203 	 orr r3,r3,#2
 1802 007a DAB2     	 uxtb r2,r3
 1803 007c BB69     	 ldr r3,[r7,#24]
 1804 007e 5A73     	 strb r2,[r3,#13]
 526:../cleanflight/src/main/cms/cms.c ****             SET_PRINTVALUE(p);
 1805              	 .loc 1 526 0 discriminator 3
 1806 0080 BB69     	 ldr r3,[r7,#24]
 1807 0082 5B7B     	 ldrb r3,[r3,#13]
 1808 0084 43F00103 	 orr r3,r3,#1
 1809 0088 DAB2     	 uxtb r2,r3
 1810 008a BB69     	 ldr r3,[r7,#24]
 1811 008c 5A73     	 strb r2,[r3,#13]
 524:../cleanflight/src/main/cms/cms.c ****         for (p = pageTop, i= 0; p->type != OME_END; p++, i++) {
 1812              	 .loc 1 524 0 discriminator 3
 1813 008e BB69     	 ldr r3,[r7,#24]
 1814 0090 0E33     	 adds r3,r3,#14
 1815 0092 BB61     	 str r3,[r7,#24]
 1816 0094 FB7F     	 ldrb r3,[r7,#31]
 1817 0096 0133     	 adds r3,r3,#1
 1818 0098 FB77     	 strb r3,[r7,#31]
 1819              	.L108:
 524:../cleanflight/src/main/cms/cms.c ****         for (p = pageTop, i= 0; p->type != OME_END; p++, i++) {
 1820              	 .loc 1 524 0 is_stmt 0 discriminator 1
 1821 009a BB69     	 ldr r3,[r7,#24]
 1822 009c 1B79     	 ldrb r3,[r3,#4]
 1823 009e 0E2B     	 cmp r3,#14
 1824 00a0 E7D1     	 bne .L109
 527:../cleanflight/src/main/cms/cms.c ****         }
 528:../cleanflight/src/main/cms/cms.c ****         pDisplay->cleared = false;
 1825              	 .loc 1 528 0 is_stmt 1
 1826 00a2 7B68     	 ldr r3,[r7,#4]
 1827 00a4 0022     	 movs r2,#0
 1828 00a6 1A73     	 strb r2,[r3,#12]
 1829 00a8 23E0     	 b .L110
 1830              	.L107:
 529:../cleanflight/src/main/cms/cms.c ****     } else if (drawPolled) {
 1831              	 .loc 1 529 0
 1832 00aa FB7D     	 ldrb r3,[r7,#23]
 1833 00ac 002B     	 cmp r3,#0
 1834 00ae 20D0     	 beq .L110
 530:../cleanflight/src/main/cms/cms.c ****         for (p = pageTop ; p <= pageTop + pageMaxRow ; p++) {
 1835              	 .loc 1 530 0
 1836 00b0 6E4B     	 ldr r3,.L124
 1837 00b2 1B68     	 ldr r3,[r3]
 1838 00b4 BB61     	 str r3,[r7,#24]
 1839 00b6 0FE0     	 b .L111
 1840              	.L113:
 531:../cleanflight/src/main/cms/cms.c ****             if (IS_DYNAMIC(p))
 1841              	 .loc 1 531 0
 1842 00b8 BB69     	 ldr r3,[r7,#24]
 1843 00ba 5B7B     	 ldrb r3,[r3,#13]
 1844 00bc 03F00403 	 and r3,r3,#4
 1845 00c0 002B     	 cmp r3,#0
 1846 00c2 06D0     	 beq .L112
 532:../cleanflight/src/main/cms/cms.c ****                 SET_PRINTVALUE(p);
 1847              	 .loc 1 532 0
 1848 00c4 BB69     	 ldr r3,[r7,#24]
 1849 00c6 5B7B     	 ldrb r3,[r3,#13]
 1850 00c8 43F00103 	 orr r3,r3,#1
 1851 00cc DAB2     	 uxtb r2,r3
 1852 00ce BB69     	 ldr r3,[r7,#24]
 1853 00d0 5A73     	 strb r2,[r3,#13]
 1854              	.L112:
 530:../cleanflight/src/main/cms/cms.c ****         for (p = pageTop ; p <= pageTop + pageMaxRow ; p++) {
 1855              	 .loc 1 530 0 discriminator 2
 1856 00d2 BB69     	 ldr r3,[r7,#24]
 1857 00d4 0E33     	 adds r3,r3,#14
 1858 00d6 BB61     	 str r3,[r7,#24]
 1859              	.L111:
 530:../cleanflight/src/main/cms/cms.c ****         for (p = pageTop ; p <= pageTop + pageMaxRow ; p++) {
 1860              	 .loc 1 530 0 is_stmt 0 discriminator 1
 1861 00d8 644B     	 ldr r3,.L124
 1862 00da 1A68     	 ldr r2,[r3]
 1863 00dc 654B     	 ldr r3,.L124+8
 1864 00de 1B78     	 ldrb r3,[r3]
 1865 00e0 1946     	 mov r1,r3
 1866 00e2 0B46     	 mov r3,r1
 1867 00e4 DB00     	 lsls r3,r3,#3
 1868 00e6 5B1A     	 subs r3,r3,r1
 1869 00e8 5B00     	 lsls r3,r3,#1
 1870 00ea 1A44     	 add r2,r2,r3
 1871 00ec BB69     	 ldr r3,[r7,#24]
 1872 00ee 9A42     	 cmp r2,r3
 1873 00f0 E2D2     	 bcs .L113
 1874              	.L110:
 533:../cleanflight/src/main/cms/cms.c ****         }
 534:../cleanflight/src/main/cms/cms.c ****     }
 535:../cleanflight/src/main/cms/cms.c **** 
 536:../cleanflight/src/main/cms/cms.c ****     // Cursor manipulation
 537:../cleanflight/src/main/cms/cms.c **** 
 538:../cleanflight/src/main/cms/cms.c ****     while ((pageTop + currentCtx.cursorRow)->type == OME_Label) // skip label
 1875              	 .loc 1 538 0 is_stmt 1
 1876 00f2 08E0     	 b .L114
 1877              	.L115:
 539:../cleanflight/src/main/cms/cms.c ****         currentCtx.cursorRow++;
 1878              	 .loc 1 539 0
 1879 00f4 614B     	 ldr r3,.L124+16
 1880 00f6 5B79     	 ldrb r3,[r3,#5]
 1881 00f8 DBB2     	 uxtb r3,r3
 1882 00fa DBB2     	 uxtb r3,r3
 1883 00fc 0133     	 adds r3,r3,#1
 1884 00fe DBB2     	 uxtb r3,r3
 1885 0100 DAB2     	 uxtb r2,r3
 1886 0102 5E4B     	 ldr r3,.L124+16
 1887 0104 5A71     	 strb r2,[r3,#5]
 1888              	.L114:
 538:../cleanflight/src/main/cms/cms.c ****         currentCtx.cursorRow++;
 1889              	 .loc 1 538 0
 1890 0106 594B     	 ldr r3,.L124
 1891 0108 1968     	 ldr r1,[r3]
 1892 010a 5C4B     	 ldr r3,.L124+16
 1893 010c 5B79     	 ldrb r3,[r3,#5]
 1894 010e 5AB2     	 sxtb r2,r3
 1895 0110 1346     	 mov r3,r2
 1896 0112 DB00     	 lsls r3,r3,#3
 1897 0114 9B1A     	 subs r3,r3,r2
 1898 0116 5B00     	 lsls r3,r3,#1
 1899 0118 0B44     	 add r3,r3,r1
 1900 011a 1B79     	 ldrb r3,[r3,#4]
 1901 011c 002B     	 cmp r3,#0
 1902 011e E9D0     	 beq .L115
 540:../cleanflight/src/main/cms/cms.c **** 
 541:../cleanflight/src/main/cms/cms.c ****     cmsPageDebug();
 542:../cleanflight/src/main/cms/cms.c **** 
 543:../cleanflight/src/main/cms/cms.c ****     if (pDisplay->cursorRow >= 0 && currentCtx.cursorRow != pDisplay->cursorRow) {
 1903              	 .loc 1 543 0
 1904 0120 7B68     	 ldr r3,[r7,#4]
 1905 0122 5B7B     	 ldrb r3,[r3,#13]
 1906 0124 5BB2     	 sxtb r3,r3
 1907 0126 002B     	 cmp r3,#0
 1908 0128 1EDB     	 blt .L116
 1909              	 .loc 1 543 0 is_stmt 0 discriminator 1
 1910 012a 544B     	 ldr r3,.L124+16
 1911 012c 5A79     	 ldrb r2,[r3,#5]
 1912 012e 7B68     	 ldr r3,[r7,#4]
 1913 0130 5B7B     	 ldrb r3,[r3,#13]
 1914 0132 52B2     	 sxtb r2,r2
 1915 0134 5BB2     	 sxtb r3,r3
 1916 0136 9A42     	 cmp r2,r3
 1917 0138 16D0     	 beq .L116
 544:../cleanflight/src/main/cms/cms.c ****         room -= displayWrite(pDisplay, leftMenuColumn, top + pDisplay->cursorRow * linesPerMenuItem
 1918              	 .loc 1 544 0 is_stmt 1
 1919 013a 514B     	 ldr r3,.L124+20
 1920 013c 1978     	 ldrb r1,[r3]
 1921 013e 7B68     	 ldr r3,[r7,#4]
 1922 0140 5B7B     	 ldrb r3,[r3,#13]
 1923 0142 DAB2     	 uxtb r2,r3
 1924 0144 4F4B     	 ldr r3,.L124+24
 1925 0146 1B78     	 ldrb r3,[r3]
 1926 0148 12FB03F3 	 smulbb r3,r2,r3
 1927 014c DAB2     	 uxtb r2,r3
 1928 014e FB7B     	 ldrb r3,[r7,#15]
 1929 0150 1344     	 add r3,r3,r2
 1930 0152 DBB2     	 uxtb r3,r3
 1931 0154 7868     	 ldr r0,[r7,#4]
 1932 0156 1A46     	 mov r2,r3
 1933 0158 4B4B     	 ldr r3,.L124+28
 1934 015a FFF7FEFF 	 bl displayWrite
 1935 015e 0346     	 mov r3,r0
 1936 0160 1A46     	 mov r2,r3
 1937 0162 3B69     	 ldr r3,[r7,#16]
 1938 0164 9B1A     	 subs r3,r3,r2
 1939 0166 3B61     	 str r3,[r7,#16]
 1940              	.L116:
 545:../cleanflight/src/main/cms/cms.c ****     }
 546:../cleanflight/src/main/cms/cms.c **** 
 547:../cleanflight/src/main/cms/cms.c ****     if (room < 30)
 1941              	 .loc 1 547 0
 1942 0168 3B69     	 ldr r3,[r7,#16]
 1943 016a 1D2B     	 cmp r3,#29
 1944 016c 00D8     	 bhi .L117
 548:../cleanflight/src/main/cms/cms.c ****         return;
 1945              	 .loc 1 548 0 discriminator 2
 1946 016e 9EE0     	 b .L101
 1947              	.L117:
 549:../cleanflight/src/main/cms/cms.c **** 
 550:../cleanflight/src/main/cms/cms.c ****     if (pDisplay->cursorRow != currentCtx.cursorRow) {
 1948              	 .loc 1 550 0
 1949 0170 7B68     	 ldr r3,[r7,#4]
 1950 0172 5A7B     	 ldrb r2,[r3,#13]
 1951 0174 414B     	 ldr r3,.L124+16
 1952 0176 5B79     	 ldrb r3,[r3,#5]
 1953 0178 52B2     	 sxtb r2,r2
 1954 017a 5BB2     	 sxtb r3,r3
 1955 017c 9A42     	 cmp r2,r3
 1956 017e 1AD0     	 beq .L118
 551:../cleanflight/src/main/cms/cms.c ****         room -= displayWrite(pDisplay, leftMenuColumn, top + currentCtx.cursorRow * linesPerMenuIte
 1957              	 .loc 1 551 0
 1958 0180 3F4B     	 ldr r3,.L124+20
 1959 0182 1978     	 ldrb r1,[r3]
 1960 0184 3D4B     	 ldr r3,.L124+16
 1961 0186 5B79     	 ldrb r3,[r3,#5]
 1962 0188 DAB2     	 uxtb r2,r3
 1963 018a 3E4B     	 ldr r3,.L124+24
 1964 018c 1B78     	 ldrb r3,[r3]
 1965 018e 12FB03F3 	 smulbb r3,r2,r3
 1966 0192 DAB2     	 uxtb r2,r3
 1967 0194 FB7B     	 ldrb r3,[r7,#15]
 1968 0196 1344     	 add r3,r3,r2
 1969 0198 DBB2     	 uxtb r3,r3
 1970 019a 7868     	 ldr r0,[r7,#4]
 1971 019c 1A46     	 mov r2,r3
 1972 019e 3B4B     	 ldr r3,.L124+32
 1973 01a0 FFF7FEFF 	 bl displayWrite
 1974 01a4 0346     	 mov r3,r0
 1975 01a6 1A46     	 mov r2,r3
 1976 01a8 3B69     	 ldr r3,[r7,#16]
 1977 01aa 9B1A     	 subs r3,r3,r2
 1978 01ac 3B61     	 str r3,[r7,#16]
 552:../cleanflight/src/main/cms/cms.c ****         pDisplay->cursorRow = currentCtx.cursorRow;
 1979              	 .loc 1 552 0
 1980 01ae 334B     	 ldr r3,.L124+16
 1981 01b0 5A79     	 ldrb r2,[r3,#5]
 1982 01b2 7B68     	 ldr r3,[r7,#4]
 1983 01b4 5A73     	 strb r2,[r3,#13]
 1984              	.L118:
 553:../cleanflight/src/main/cms/cms.c ****     }
 554:../cleanflight/src/main/cms/cms.c **** 
 555:../cleanflight/src/main/cms/cms.c ****     if (room < 30)
 1985              	 .loc 1 555 0
 1986 01b6 3B69     	 ldr r3,[r7,#16]
 1987 01b8 1D2B     	 cmp r3,#29
 1988 01ba 00D8     	 bhi .L119
 556:../cleanflight/src/main/cms/cms.c ****         return;
 1989              	 .loc 1 556 0 discriminator 3
 1990 01bc 77E0     	 b .L101
 1991              	.L119:
 557:../cleanflight/src/main/cms/cms.c **** 
 558:../cleanflight/src/main/cms/cms.c ****     // Print text labels
 559:../cleanflight/src/main/cms/cms.c ****     for (i = 0, p = pageTop; i < maxMenuItems && p->type != OME_END; i++, p++) {
 1992              	 .loc 1 559 0
 1993 01be 0023     	 movs r3,#0
 1994 01c0 FB77     	 strb r3,[r7,#31]
 1995 01c2 2A4B     	 ldr r3,.L124
 1996 01c4 1B68     	 ldr r3,[r3]
 1997 01c6 BB61     	 str r3,[r7,#24]
 1998 01c8 68E0     	 b .L120
 1999              	.L123:
 560:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTLABEL(p)) {
 2000              	 .loc 1 560 0
 2001 01ca BB69     	 ldr r3,[r7,#24]
 2002 01cc 5B7B     	 ldrb r3,[r3,#13]
 2003 01ce 03F00203 	 and r3,r3,#2
 2004 01d2 002B     	 cmp r3,#0
 2005 01d4 2CD0     	 beq .L121
 2006              	.LBB12:
 561:../cleanflight/src/main/cms/cms.c ****             uint8_t coloff = leftMenuColumn;
 2007              	 .loc 1 561 0
 2008 01d6 2A4B     	 ldr r3,.L124+20
 2009 01d8 1B78     	 ldrb r3,[r3]
 2010 01da BB73     	 strb r3,[r7,#14]
 562:../cleanflight/src/main/cms/cms.c ****             coloff += (p->type == OME_Label) ? 0 : 1;
 2011              	 .loc 1 562 0
 2012 01dc BB69     	 ldr r3,[r7,#24]
 2013 01de 1B79     	 ldrb r3,[r3,#4]
 2014 01e0 002B     	 cmp r3,#0
 2015 01e2 14BF     	 ite ne
 2016 01e4 0123     	 movne r3,#1
 2017 01e6 0023     	 moveq r3,#0
 2018 01e8 DBB2     	 uxtb r3,r3
 2019 01ea 1A46     	 mov r2,r3
 2020 01ec BB7B     	 ldrb r3,[r7,#14]
 2021 01ee 1344     	 add r3,r3,r2
 2022 01f0 BB73     	 strb r3,[r7,#14]
 563:../cleanflight/src/main/cms/cms.c ****             room -= displayWrite(pDisplay, coloff, top + i * linesPerMenuItem, p->text);
 2023              	 .loc 1 563 0
 2024 01f2 244B     	 ldr r3,.L124+24
 2025 01f4 1B78     	 ldrb r3,[r3]
 2026 01f6 FA7F     	 ldrb r2,[r7,#31]
 2027 01f8 12FB03F3 	 smulbb r3,r2,r3
 2028 01fc DAB2     	 uxtb r2,r3
 2029 01fe FB7B     	 ldrb r3,[r7,#15]
 2030 0200 1344     	 add r3,r3,r2
 2031 0202 DAB2     	 uxtb r2,r3
 2032 0204 BB69     	 ldr r3,[r7,#24]
 2033 0206 1B68     	 ldr r3,[r3]
 2034 0208 B97B     	 ldrb r1,[r7,#14]
 2035 020a 7868     	 ldr r0,[r7,#4]
 2036 020c FFF7FEFF 	 bl displayWrite
 2037 0210 0346     	 mov r3,r0
 2038 0212 1A46     	 mov r2,r3
 2039 0214 3B69     	 ldr r3,[r7,#16]
 2040 0216 9B1A     	 subs r3,r3,r2
 2041 0218 3B61     	 str r3,[r7,#16]
 564:../cleanflight/src/main/cms/cms.c ****             CLR_PRINTLABEL(p);
 2042              	 .loc 1 564 0
 2043 021a BB69     	 ldr r3,[r7,#24]
 2044 021c 5B7B     	 ldrb r3,[r3,#13]
 2045 021e 23F00203 	 bic r3,r3,#2
 2046 0222 DAB2     	 uxtb r2,r3
 2047 0224 BB69     	 ldr r3,[r7,#24]
 2048 0226 5A73     	 strb r2,[r3,#13]
 565:../cleanflight/src/main/cms/cms.c ****             if (room < 30)
 2049              	 .loc 1 565 0
 2050 0228 3B69     	 ldr r3,[r7,#16]
 2051 022a 1D2B     	 cmp r3,#29
 2052 022c 00D8     	 bhi .L121
 566:../cleanflight/src/main/cms/cms.c ****                 return;
 2053              	 .loc 1 566 0 discriminator 4
 2054 022e 3EE0     	 b .L101
 2055              	.L121:
 2056              	.LBE12:
 567:../cleanflight/src/main/cms/cms.c ****         }
 568:../cleanflight/src/main/cms/cms.c **** 
 569:../cleanflight/src/main/cms/cms.c ****     // Print values
 570:../cleanflight/src/main/cms/cms.c **** 
 571:../cleanflight/src/main/cms/cms.c ****     // XXX Polled values at latter positions in the list may not be
 572:../cleanflight/src/main/cms/cms.c ****     // XXX printed if not enough room in the middle of the list.
 573:../cleanflight/src/main/cms/cms.c **** 
 574:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTVALUE(p)) {
 2057              	 .loc 1 574 0
 2058 0230 BB69     	 ldr r3,[r7,#24]
 2059 0232 5B7B     	 ldrb r3,[r3,#13]
 2060 0234 03F00103 	 and r3,r3,#1
 2061 0238 002B     	 cmp r3,#0
 2062 023a 29D0     	 beq .L122
 575:../cleanflight/src/main/cms/cms.c ****             room -= cmsDrawMenuEntry(pDisplay, p, top + i * linesPerMenuItem);
 2063              	 .loc 1 575 0
 2064 023c 114B     	 ldr r3,.L124+24
 2065 023e 1B78     	 ldrb r3,[r3]
 2066 0240 FA7F     	 ldrb r2,[r7,#31]
 2067 0242 12FB03F3 	 smulbb r3,r2,r3
 2068 0246 DAB2     	 uxtb r2,r3
 2069 0248 FB7B     	 ldrb r3,[r7,#15]
 2070 024a 1344     	 add r3,r3,r2
 2071 024c DBB2     	 uxtb r3,r3
 2072 024e 7868     	 ldr r0,[r7,#4]
 2073 0250 B969     	 ldr r1,[r7,#24]
 2074 0252 1A46     	 mov r2,r3
 2075 0254 FFF7FEFF 	 bl cmsDrawMenuEntry
 2076 0258 0346     	 mov r3,r0
 2077 025a 1A46     	 mov r2,r3
 2078 025c 3B69     	 ldr r3,[r7,#16]
 2079 025e 9B1A     	 subs r3,r3,r2
 2080 0260 3B61     	 str r3,[r7,#16]
 576:../cleanflight/src/main/cms/cms.c ****             if (room < 30)
 2081              	 .loc 1 576 0
 2082 0262 3B69     	 ldr r3,[r7,#16]
 2083 0264 1D2B     	 cmp r3,#29
 2084 0266 13D8     	 bhi .L122
 577:../cleanflight/src/main/cms/cms.c ****                 return;
 2085              	 .loc 1 577 0 discriminator 5
 2086 0268 21E0     	 b .L101
 2087              	.L125:
 2088 026a 00BF     	 .align 2
 2089              	.L124:
 2090 026c 00000000 	 .word pageTop
 2091 0270 00000000 	 .word smallScreen
 2092 0274 00000000 	 .word pageMaxRow
 2093 0278 00000000 	 .word lastPolledUs.13726
 2094 027c 00000000 	 .word currentCtx
 2095 0280 00000000 	 .word leftMenuColumn
 2096 0284 00000000 	 .word linesPerMenuItem
 2097 0288 04000000 	 .word .LC1
 2098 028c 00000000 	 .word .LC0
 2099              	.L122:
 559:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTLABEL(p)) {
 2100              	 .loc 1 559 0 discriminator 2
 2101 0290 FB7F     	 ldrb r3,[r7,#31]
 2102 0292 0133     	 adds r3,r3,#1
 2103 0294 FB77     	 strb r3,[r7,#31]
 2104 0296 BB69     	 ldr r3,[r7,#24]
 2105 0298 0E33     	 adds r3,r3,#14
 2106 029a BB61     	 str r3,[r7,#24]
 2107              	.L120:
 559:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTLABEL(p)) {
 2108              	 .loc 1 559 0 is_stmt 0 discriminator 1
 2109 029c 054B     	 ldr r3,.L126
 2110 029e 1B78     	 ldrb r3,[r3]
 2111 02a0 FA7F     	 ldrb r2,[r7,#31]
 2112 02a2 9A42     	 cmp r2,r3
 2113 02a4 03D2     	 bcs .L101
 559:../cleanflight/src/main/cms/cms.c ****         if (IS_PRINTLABEL(p)) {
 2114              	 .loc 1 559 0 discriminator 3
 2115 02a6 BB69     	 ldr r3,[r7,#24]
 2116 02a8 1B79     	 ldrb r3,[r3,#4]
 2117 02aa 0E2B     	 cmp r3,#14
 2118 02ac 8DD1     	 bne .L123
 2119              	.L101:
 578:../cleanflight/src/main/cms/cms.c ****         }
 579:../cleanflight/src/main/cms/cms.c ****     }
 580:../cleanflight/src/main/cms/cms.c **** }
 2120              	 .loc 1 580 0 is_stmt 1
 2121 02ae 2037     	 adds r7,r7,#32
 2122              	.LCFI74:
 2123              	 .cfi_def_cfa_offset 8
 2124 02b0 BD46     	 mov sp,r7
 2125              	.LCFI75:
 2126              	 .cfi_def_cfa_register 13
 2127              	 
 2128 02b2 80BD     	 pop {r7,pc}
 2129              	.L127:
 2130              	 .align 2
 2131              	.L126:
 2132 02b4 00000000 	 .word maxMenuItems
 2133              	 .cfi_endproc
 2134              	.LFE577:
 2136              	 .section .text.cmsMenuCountPage,"ax",%progbits
 2137              	 .align 2
 2138              	 .thumb
 2139              	 .thumb_func
 2141              	cmsMenuCountPage:
 2142              	.LFB578:
 581:../cleanflight/src/main/cms/cms.c **** 
 582:../cleanflight/src/main/cms/cms.c **** static void cmsMenuCountPage(displayPort_t *pDisplay)
 583:../cleanflight/src/main/cms/cms.c **** {
 2143              	 .loc 1 583 0
 2144              	 .cfi_startproc
 2145              	 
 2146              	 
 2147              	 
 2148 0000 80B4     	 push {r7}
 2149              	.LCFI76:
 2150              	 .cfi_def_cfa_offset 4
 2151              	 .cfi_offset 7,-4
 2152 0002 85B0     	 sub sp,sp,#20
 2153              	.LCFI77:
 2154              	 .cfi_def_cfa_offset 24
 2155 0004 00AF     	 add r7,sp,#0
 2156              	.LCFI78:
 2157              	 .cfi_def_cfa_register 7
 2158 0006 7860     	 str r0,[r7,#4]
 584:../cleanflight/src/main/cms/cms.c ****     UNUSED(pDisplay);
 585:../cleanflight/src/main/cms/cms.c ****     const OSD_Entry *p;
 586:../cleanflight/src/main/cms/cms.c ****     for (p = currentCtx.menu->entries; p->type != OME_END; p++);
 2159              	 .loc 1 586 0
 2160 0008 124B     	 ldr r3,.L131
 2161 000a 1B68     	 ldr r3,[r3]
 2162 000c 9B68     	 ldr r3,[r3,#8]
 2163 000e FB60     	 str r3,[r7,#12]
 2164 0010 02E0     	 b .L129
 2165              	.L130:
 2166              	 .loc 1 586 0 is_stmt 0 discriminator 3
 2167 0012 FB68     	 ldr r3,[r7,#12]
 2168 0014 0E33     	 adds r3,r3,#14
 2169 0016 FB60     	 str r3,[r7,#12]
 2170              	.L129:
 2171              	 .loc 1 586 0 discriminator 1
 2172 0018 FB68     	 ldr r3,[r7,#12]
 2173 001a 1B79     	 ldrb r3,[r3,#4]
 2174 001c 0E2B     	 cmp r3,#14
 2175 001e F8D1     	 bne .L130
 587:../cleanflight/src/main/cms/cms.c ****     pageCount = (p - currentCtx.menu->entries - 1) / maxMenuItems + 1;
 2176              	 .loc 1 587 0 is_stmt 1
 2177 0020 FB68     	 ldr r3,[r7,#12]
 2178 0022 0C4A     	 ldr r2,.L131
 2179 0024 1268     	 ldr r2,[r2]
 2180 0026 9268     	 ldr r2,[r2,#8]
 2181 0028 9B1A     	 subs r3,r3,r2
 2182 002a 5B10     	 asrs r3,r3,#1
 2183 002c 0A4A     	 ldr r2,.L131+4
 2184 002e 02FB03F3 	 mul r3,r2,r3
 2185 0032 013B     	 subs r3,r3,#1
 2186 0034 094A     	 ldr r2,.L131+8
 2187 0036 1278     	 ldrb r2,[r2]
 2188 0038 93FBF2F3 	 sdiv r3,r3,r2
 2189 003c DBB2     	 uxtb r3,r3
 2190 003e 0133     	 adds r3,r3,#1
 2191 0040 DBB2     	 uxtb r3,r3
 2192 0042 DAB2     	 uxtb r2,r3
 2193 0044 064B     	 ldr r3,.L131+12
 2194 0046 1A70     	 strb r2,[r3]
 588:../cleanflight/src/main/cms/cms.c **** }
 2195              	 .loc 1 588 0
 2196 0048 1437     	 adds r7,r7,#20
 2197              	.LCFI79:
 2198              	 .cfi_def_cfa_offset 4
 2199 004a BD46     	 mov sp,r7
 2200              	.LCFI80:
 2201              	 .cfi_def_cfa_register 13
 2202              	 
 2203 004c 5DF8047B 	 ldr r7,[sp],#4
 2204              	.LCFI81:
 2205              	 .cfi_restore 7
 2206              	 .cfi_def_cfa_offset 0
 2207 0050 7047     	 bx lr
 2208              	.L132:
 2209 0052 00BF     	 .align 2
 2210              	.L131:
 2211 0054 00000000 	 .word currentCtx
 2212 0058 B76DDBB6 	 .word -1227133513
 2213 005c 00000000 	 .word maxMenuItems
 2214 0060 00000000 	 .word pageCount
 2215              	 .cfi_endproc
 2216              	.LFE578:
 2218              	 .section .text.cmsMenuChange,"ax",%progbits
 2219              	 .align 2
 2220              	 .global cmsMenuChange
 2221              	 .thumb
 2222              	 .thumb_func
 2224              	cmsMenuChange:
 2225              	.LFB579:
 589:../cleanflight/src/main/cms/cms.c **** 
 590:../cleanflight/src/main/cms/cms.c **** STATIC_UNIT_TESTED long cmsMenuBack(displayPort_t *pDisplay); // Forward; will be resolved after me
 591:../cleanflight/src/main/cms/cms.c **** 
 592:../cleanflight/src/main/cms/cms.c **** long cmsMenuChange(displayPort_t *pDisplay, const void *ptr)
 593:../cleanflight/src/main/cms/cms.c **** {
 2226              	 .loc 1 593 0
 2227              	 .cfi_startproc
 2228              	 
 2229              	 
 2230 0000 80B5     	 push {r7,lr}
 2231              	.LCFI82:
 2232              	 .cfi_def_cfa_offset 8
 2233              	 .cfi_offset 7,-8
 2234              	 .cfi_offset 14,-4
 2235 0002 84B0     	 sub sp,sp,#16
 2236              	.LCFI83:
 2237              	 .cfi_def_cfa_offset 24
 2238 0004 00AF     	 add r7,sp,#0
 2239              	.LCFI84:
 2240              	 .cfi_def_cfa_register 7
 2241 0006 7860     	 str r0,[r7,#4]
 2242 0008 3960     	 str r1,[r7]
 594:../cleanflight/src/main/cms/cms.c ****     const CMS_Menu *pMenu = (const CMS_Menu *)ptr;
 2243              	 .loc 1 594 0
 2244 000a 3B68     	 ldr r3,[r7]
 2245 000c FB60     	 str r3,[r7,#12]
 595:../cleanflight/src/main/cms/cms.c **** 
 596:../cleanflight/src/main/cms/cms.c ****     if (!pMenu) {
 2246              	 .loc 1 596 0
 2247 000e FB68     	 ldr r3,[r7,#12]
 2248 0010 002B     	 cmp r3,#0
 2249 0012 01D1     	 bne .L134
 597:../cleanflight/src/main/cms/cms.c ****         return 0;
 2250              	 .loc 1 597 0
 2251 0014 0023     	 movs r3,#0
 2252 0016 53E0     	 b .L135
 2253              	.L134:
 598:../cleanflight/src/main/cms/cms.c ****     }
 599:../cleanflight/src/main/cms/cms.c **** 
 600:../cleanflight/src/main/cms/cms.c **** #ifdef CMS_MENU_DEBUG
 601:../cleanflight/src/main/cms/cms.c ****     if (pMenu->GUARD_type != OME_MENU) {
 602:../cleanflight/src/main/cms/cms.c ****         // ptr isn't pointing to a CMS_Menu.
 603:../cleanflight/src/main/cms/cms.c ****         if (pMenu->GUARD_type <= OME_MAX) {
 604:../cleanflight/src/main/cms/cms.c ****             strncpy(menuErrLabel, pMenu->GUARD_text, sizeof(menuErrLabel) - 1);
 605:../cleanflight/src/main/cms/cms.c ****         } else {
 606:../cleanflight/src/main/cms/cms.c ****             strncpy(menuErrLabel, "LABEL UNKNOWN", sizeof(menuErrLabel) - 1);
 607:../cleanflight/src/main/cms/cms.c ****         }
 608:../cleanflight/src/main/cms/cms.c ****         pMenu = &menuErr;
 609:../cleanflight/src/main/cms/cms.c ****     }
 610:../cleanflight/src/main/cms/cms.c **** #endif
 611:../cleanflight/src/main/cms/cms.c **** 
 612:../cleanflight/src/main/cms/cms.c ****     if (pMenu != currentCtx.menu) {
 2254              	 .loc 1 612 0
 2255 0018 2B4B     	 ldr r3,.L139
 2256 001a 1A68     	 ldr r2,[r3]
 2257 001c FB68     	 ldr r3,[r7,#12]
 2258 001e 9A42     	 cmp r2,r3
 2259 0020 2FD0     	 beq .L136
 613:../cleanflight/src/main/cms/cms.c ****         // Stack the current menu and move to a new menu.
 614:../cleanflight/src/main/cms/cms.c **** 
 615:../cleanflight/src/main/cms/cms.c ****         menuStack[menuStackIdx++] = currentCtx;
 2260              	 .loc 1 615 0
 2261 0022 2A4B     	 ldr r3,.L139+4
 2262 0024 1B78     	 ldrb r3,[r3]
 2263 0026 5A1C     	 adds r2,r3,#1
 2264 0028 D1B2     	 uxtb r1,r2
 2265 002a 284A     	 ldr r2,.L139+4
 2266 002c 1170     	 strb r1,[r2]
 2267 002e 1946     	 mov r1,r3
 2268 0030 274A     	 ldr r2,.L139+8
 2269 0032 0B46     	 mov r3,r1
 2270 0034 5B00     	 lsls r3,r3,#1
 2271 0036 0B44     	 add r3,r3,r1
 2272 0038 5B00     	 lsls r3,r3,#1
 2273 003a 1344     	 add r3,r3,r2
 2274 003c 224A     	 ldr r2,.L139
 2275 003e 1068     	 ldr r0,[r2]
 2276 0040 1860     	 str r0,[r3]
 2277 0042 9288     	 ldrh r2,[r2,#4]
 2278 0044 9A80     	 strh r2,[r3,#4]
 616:../cleanflight/src/main/cms/cms.c **** 
 617:../cleanflight/src/main/cms/cms.c ****         currentCtx.menu = pMenu;
 2279              	 .loc 1 617 0
 2280 0046 204A     	 ldr r2,.L139
 2281 0048 FB68     	 ldr r3,[r7,#12]
 2282 004a 1360     	 str r3,[r2]
 618:../cleanflight/src/main/cms/cms.c ****         currentCtx.cursorRow = 0;
 2283              	 .loc 1 618 0
 2284 004c 1E4B     	 ldr r3,.L139
 2285 004e 0022     	 movs r2,#0
 2286 0050 5A71     	 strb r2,[r3,#5]
 619:../cleanflight/src/main/cms/cms.c **** 
 620:../cleanflight/src/main/cms/cms.c ****         if (pMenu->onEnter && (pMenu->onEnter() == MENU_CHAIN_BACK)) {
 2287              	 .loc 1 620 0
 2288 0052 FB68     	 ldr r3,[r7,#12]
 2289 0054 1B68     	 ldr r3,[r3]
 2290 0056 002B     	 cmp r3,#0
 2291 0058 0BD0     	 beq .L137
 2292              	 .loc 1 620 0 is_stmt 0 discriminator 1
 2293 005a FB68     	 ldr r3,[r7,#12]
 2294 005c 1B68     	 ldr r3,[r3]
 2295 005e 9847     	 blx r3
 2296 0060 0346     	 mov r3,r0
 2297 0062 B3F1FF3F 	 cmp r3,#-1
 2298 0066 04D1     	 bne .L137
 621:../cleanflight/src/main/cms/cms.c ****             return cmsMenuBack(pDisplay);
 2299              	 .loc 1 621 0 is_stmt 1
 2300 0068 7868     	 ldr r0,[r7,#4]
 2301 006a FFF7FEFF 	 bl cmsMenuBack
 2302 006e 0346     	 mov r3,r0
 2303 0070 26E0     	 b .L135
 2304              	.L137:
 622:../cleanflight/src/main/cms/cms.c ****         }
 623:../cleanflight/src/main/cms/cms.c **** 
 624:../cleanflight/src/main/cms/cms.c ****         cmsMenuCountPage(pDisplay);
 2305              	 .loc 1 624 0
 2306 0072 7868     	 ldr r0,[r7,#4]
 2307 0074 FFF7FEFF 	 bl cmsMenuCountPage
 625:../cleanflight/src/main/cms/cms.c ****         cmsPageSelect(pDisplay, 0);
 2308              	 .loc 1 625 0
 2309 0078 7868     	 ldr r0,[r7,#4]
 2310 007a 0021     	 movs r1,#0
 2311 007c FFF7FEFF 	 bl cmsPageSelect
 2312 0080 1DE0     	 b .L138
 2313              	.L136:
 2314              	.LBB13:
 626:../cleanflight/src/main/cms/cms.c ****     } else {
 627:../cleanflight/src/main/cms/cms.c ****         // The (pMenu == curretMenu) case occurs when reopening for display cycling
 628:../cleanflight/src/main/cms/cms.c ****         // currentCtx.cursorRow has been saved as absolute; convert it back to page + relative
 629:../cleanflight/src/main/cms/cms.c **** 
 630:../cleanflight/src/main/cms/cms.c ****         int8_t cursorAbs = currentCtx.cursorRow;
 2315              	 .loc 1 630 0
 2316 0082 114B     	 ldr r3,.L139
 2317 0084 5B79     	 ldrb r3,[r3,#5]
 2318 0086 FB72     	 strb r3,[r7,#11]
 631:../cleanflight/src/main/cms/cms.c ****         currentCtx.cursorRow = cursorAbs % maxMenuItems;
 2319              	 .loc 1 631 0
 2320 0088 97F90B30 	 ldrsb r3,[r7,#11]
 2321 008c 114A     	 ldr r2,.L139+12
 2322 008e 1278     	 ldrb r2,[r2]
 2323 0090 93FBF2F1 	 sdiv r1,r3,r2
 2324 0094 02FB01F2 	 mul r2,r2,r1
 2325 0098 9B1A     	 subs r3,r3,r2
 2326 009a DAB2     	 uxtb r2,r3
 2327 009c 0A4B     	 ldr r3,.L139
 2328 009e 5A71     	 strb r2,[r3,#5]
 632:../cleanflight/src/main/cms/cms.c ****         cmsMenuCountPage(pDisplay);
 2329              	 .loc 1 632 0
 2330 00a0 7868     	 ldr r0,[r7,#4]
 2331 00a2 FFF7FEFF 	 bl cmsMenuCountPage
 633:../cleanflight/src/main/cms/cms.c ****         cmsPageSelect(pDisplay, cursorAbs / maxMenuItems);
 2332              	 .loc 1 633 0
 2333 00a6 97F90B30 	 ldrsb r3,[r7,#11]
 2334 00aa 0A4A     	 ldr r2,.L139+12
 2335 00ac 1278     	 ldrb r2,[r2]
 2336 00ae 93FBF2F3 	 sdiv r3,r3,r2
 2337 00b2 DBB2     	 uxtb r3,r3
 2338 00b4 5BB2     	 sxtb r3,r3
 2339 00b6 7868     	 ldr r0,[r7,#4]
 2340 00b8 1946     	 mov r1,r3
 2341 00ba FFF7FEFF 	 bl cmsPageSelect
 2342              	.L138:
 2343              	.LBE13:
 634:../cleanflight/src/main/cms/cms.c ****     }
 635:../cleanflight/src/main/cms/cms.c **** 
 636:../cleanflight/src/main/cms/cms.c ****     cmsPageDebug();
 637:../cleanflight/src/main/cms/cms.c **** 
 638:../cleanflight/src/main/cms/cms.c ****     return 0;
 2344              	 .loc 1 638 0
 2345 00be 0023     	 movs r3,#0
 2346              	.L135:
 639:../cleanflight/src/main/cms/cms.c **** }
 2347              	 .loc 1 639 0
 2348 00c0 1846     	 mov r0,r3
 2349 00c2 1037     	 adds r7,r7,#16
 2350              	.LCFI85:
 2351              	 .cfi_def_cfa_offset 8
 2352 00c4 BD46     	 mov sp,r7
 2353              	.LCFI86:
 2354              	 .cfi_def_cfa_register 13
 2355              	 
 2356 00c6 80BD     	 pop {r7,pc}
 2357              	.L140:
 2358              	 .align 2
 2359              	.L139:
 2360 00c8 00000000 	 .word currentCtx
 2361 00cc 00000000 	 .word menuStackIdx
 2362 00d0 00000000 	 .word menuStack
 2363 00d4 00000000 	 .word maxMenuItems
 2364              	 .cfi_endproc
 2365              	.LFE579:
 2367              	 .section .text.cmsMenuBack,"ax",%progbits
 2368              	 .align 2
 2369              	 .thumb
 2370              	 .thumb_func
 2372              	cmsMenuBack:
 2373              	.LFB580:
 640:../cleanflight/src/main/cms/cms.c **** 
 641:../cleanflight/src/main/cms/cms.c **** STATIC_UNIT_TESTED long cmsMenuBack(displayPort_t *pDisplay)
 642:../cleanflight/src/main/cms/cms.c **** {
 2374              	 .loc 1 642 0
 2375              	 .cfi_startproc
 2376              	 
 2377              	 
 2378 0000 80B5     	 push {r7,lr}
 2379              	.LCFI87:
 2380              	 .cfi_def_cfa_offset 8
 2381              	 .cfi_offset 7,-8
 2382              	 .cfi_offset 14,-4
 2383 0002 82B0     	 sub sp,sp,#8
 2384              	.LCFI88:
 2385              	 .cfi_def_cfa_offset 16
 2386 0004 00AF     	 add r7,sp,#0
 2387              	.LCFI89:
 2388              	 .cfi_def_cfa_register 7
 2389 0006 7860     	 str r0,[r7,#4]
 643:../cleanflight/src/main/cms/cms.c ****     // Let onExit function decide whether to allow exit or not.
 644:../cleanflight/src/main/cms/cms.c **** 
 645:../cleanflight/src/main/cms/cms.c ****     if (currentCtx.menu->onExit && currentCtx.menu->onExit(pageTop + currentCtx.cursorRow) < 0) {
 2390              	 .loc 1 645 0
 2391 0008 224B     	 ldr r3,.L145
 2392 000a 1B68     	 ldr r3,[r3]
 2393 000c 5B68     	 ldr r3,[r3,#4]
 2394 000e 002B     	 cmp r3,#0
 2395 0010 14D0     	 beq .L142
 2396              	 .loc 1 645 0 is_stmt 0 discriminator 1
 2397 0012 204B     	 ldr r3,.L145
 2398 0014 1B68     	 ldr r3,[r3]
 2399 0016 5968     	 ldr r1,[r3,#4]
 2400 0018 1F4B     	 ldr r3,.L145+4
 2401 001a 1868     	 ldr r0,[r3]
 2402 001c 1D4B     	 ldr r3,.L145
 2403 001e 5B79     	 ldrb r3,[r3,#5]
 2404 0020 5AB2     	 sxtb r2,r3
 2405 0022 1346     	 mov r3,r2
 2406 0024 DB00     	 lsls r3,r3,#3
 2407 0026 9B1A     	 subs r3,r3,r2
 2408 0028 5B00     	 lsls r3,r3,#1
 2409 002a 0344     	 add r3,r3,r0
 2410 002c 1846     	 mov r0,r3
 2411 002e 8847     	 blx r1
 2412 0030 0346     	 mov r3,r0
 2413 0032 002B     	 cmp r3,#0
 2414 0034 02DA     	 bge .L142
 646:../cleanflight/src/main/cms/cms.c ****         return -1;
 2415              	 .loc 1 646 0 is_stmt 1
 2416 0036 4FF0FF33 	 mov r3,#-1
 2417 003a 26E0     	 b .L143
 2418              	.L142:
 647:../cleanflight/src/main/cms/cms.c ****     }
 648:../cleanflight/src/main/cms/cms.c **** 
 649:../cleanflight/src/main/cms/cms.c ****     if (!menuStackIdx) {
 2419              	 .loc 1 649 0
 2420 003c 174B     	 ldr r3,.L145+8
 2421 003e 1B78     	 ldrb r3,[r3]
 2422 0040 002B     	 cmp r3,#0
 2423 0042 01D1     	 bne .L144
 650:../cleanflight/src/main/cms/cms.c ****         return 0;
 2424              	 .loc 1 650 0
 2425 0044 0023     	 movs r3,#0
 2426 0046 20E0     	 b .L143
 2427              	.L144:
 651:../cleanflight/src/main/cms/cms.c ****     }
 652:../cleanflight/src/main/cms/cms.c **** 
 653:../cleanflight/src/main/cms/cms.c ****     currentCtx = menuStack[--menuStackIdx];
 2428              	 .loc 1 653 0
 2429 0048 144B     	 ldr r3,.L145+8
 2430 004a 1B78     	 ldrb r3,[r3]
 2431 004c 013B     	 subs r3,r3,#1
 2432 004e DAB2     	 uxtb r2,r3
 2433 0050 124B     	 ldr r3,.L145+8
 2434 0052 1A70     	 strb r2,[r3]
 2435 0054 114B     	 ldr r3,.L145+8
 2436 0056 1B78     	 ldrb r3,[r3]
 2437 0058 1946     	 mov r1,r3
 2438 005a 0E48     	 ldr r0,.L145
 2439 005c 104A     	 ldr r2,.L145+12
 2440 005e 0B46     	 mov r3,r1
 2441 0060 5B00     	 lsls r3,r3,#1
 2442 0062 0B44     	 add r3,r3,r1
 2443 0064 5B00     	 lsls r3,r3,#1
 2444 0066 1A44     	 add r2,r2,r3
 2445 0068 0346     	 mov r3,r0
 2446 006a 1068     	 ldr r0,[r2]
 2447 006c 1860     	 str r0,[r3]
 2448 006e 9288     	 ldrh r2,[r2,#4]
 2449 0070 9A80     	 strh r2,[r3,#4]
 654:../cleanflight/src/main/cms/cms.c **** 
 655:../cleanflight/src/main/cms/cms.c ****     cmsMenuCountPage(pDisplay);
 2450              	 .loc 1 655 0
 2451 0072 7868     	 ldr r0,[r7,#4]
 2452 0074 FFF7FEFF 	 bl cmsMenuCountPage
 656:../cleanflight/src/main/cms/cms.c ****     cmsPageSelect(pDisplay, currentCtx.page);
 2453              	 .loc 1 656 0
 2454 0078 064B     	 ldr r3,.L145
 2455 007a 1B79     	 ldrb r3,[r3,#4]
 2456 007c DBB2     	 uxtb r3,r3
 2457 007e 5BB2     	 sxtb r3,r3
 2458 0080 7868     	 ldr r0,[r7,#4]
 2459 0082 1946     	 mov r1,r3
 2460 0084 FFF7FEFF 	 bl cmsPageSelect
 657:../cleanflight/src/main/cms/cms.c **** 
 658:../cleanflight/src/main/cms/cms.c ****     cmsPageDebug();
 659:../cleanflight/src/main/cms/cms.c **** 
 660:../cleanflight/src/main/cms/cms.c ****     return 0;
 2461              	 .loc 1 660 0
 2462 0088 0023     	 movs r3,#0
 2463              	.L143:
 661:../cleanflight/src/main/cms/cms.c **** }
 2464              	 .loc 1 661 0
 2465 008a 1846     	 mov r0,r3
 2466 008c 0837     	 adds r7,r7,#8
 2467              	.LCFI90:
 2468              	 .cfi_def_cfa_offset 8
 2469 008e BD46     	 mov sp,r7
 2470              	.LCFI91:
 2471              	 .cfi_def_cfa_register 13
 2472              	 
 2473 0090 80BD     	 pop {r7,pc}
 2474              	.L146:
 2475 0092 00BF     	 .align 2
 2476              	.L145:
 2477 0094 00000000 	 .word currentCtx
 2478 0098 00000000 	 .word pageTop
 2479 009c 00000000 	 .word menuStackIdx
 2480 00a0 00000000 	 .word menuStack
 2481              	 .cfi_endproc
 2482              	.LFE580:
 2484              	 .section .text.cmsMenuOpen,"ax",%progbits
 2485              	 .align 2
 2486              	 .global cmsMenuOpen
 2487              	 .thumb
 2488              	 .thumb_func
 2490              	cmsMenuOpen:
 2491              	.LFB581:
 662:../cleanflight/src/main/cms/cms.c **** 
 663:../cleanflight/src/main/cms/cms.c **** void cmsMenuOpen(void)
 664:../cleanflight/src/main/cms/cms.c **** {
 2492              	 .loc 1 664 0
 2493              	 .cfi_startproc
 2494              	 
 2495              	 
 2496 0000 80B5     	 push {r7,lr}
 2497              	.LCFI92:
 2498              	 .cfi_def_cfa_offset 8
 2499              	 .cfi_offset 7,-8
 2500              	 .cfi_offset 14,-4
 2501 0002 82B0     	 sub sp,sp,#8
 2502              	.LCFI93:
 2503              	 .cfi_def_cfa_offset 16
 2504 0004 00AF     	 add r7,sp,#0
 2505              	.LCFI94:
 2506              	 .cfi_def_cfa_register 7
 665:../cleanflight/src/main/cms/cms.c ****     if (!cmsInMenu) {
 2507              	 .loc 1 665 0
 2508 0006 414B     	 ldr r3,.L155
 2509 0008 1B78     	 ldrb r3,[r3]
 2510 000a 83F00103 	 eor r3,r3,#1
 2511 000e DBB2     	 uxtb r3,r3
 2512 0010 002B     	 cmp r3,#0
 2513 0012 1AD0     	 beq .L148
 666:../cleanflight/src/main/cms/cms.c ****         // New open
 667:../cleanflight/src/main/cms/cms.c ****         pCurrentDisplay = cmsDisplayPortSelectCurrent();
 2514              	 .loc 1 667 0
 2515 0014 FFF7FEFF 	 bl cmsDisplayPortSelectCurrent
 2516 0018 0246     	 mov r2,r0
 2517 001a 3D4B     	 ldr r3,.L155+4
 2518 001c 1A60     	 str r2,[r3]
 668:../cleanflight/src/main/cms/cms.c ****         if (!pCurrentDisplay)
 2519              	 .loc 1 668 0
 2520 001e 3C4B     	 ldr r3,.L155+4
 2521 0020 1B68     	 ldr r3,[r3]
 2522 0022 002B     	 cmp r3,#0
 2523 0024 00D1     	 bne .L149
 669:../cleanflight/src/main/cms/cms.c ****             return;
 2524              	 .loc 1 669 0
 2525 0026 6DE0     	 b .L147
 2526              	.L149:
 670:../cleanflight/src/main/cms/cms.c ****         cmsInMenu = true;
 2527              	 .loc 1 670 0
 2528 0028 384B     	 ldr r3,.L155
 2529 002a 0122     	 movs r2,#1
 2530 002c 1A70     	 strb r2,[r3]
 671:../cleanflight/src/main/cms/cms.c ****         currentCtx = (cmsCtx_t){ &menuMain, 0, 0 };
 2531              	 .loc 1 671 0
 2532 002e 394B     	 ldr r3,.L155+8
 2533 0030 394A     	 ldr r2,.L155+12
 2534 0032 1A60     	 str r2,[r3]
 2535 0034 374B     	 ldr r3,.L155+8
 2536 0036 0022     	 movs r2,#0
 2537 0038 1A71     	 strb r2,[r3,#4]
 2538 003a 364B     	 ldr r3,.L155+8
 2539 003c 0022     	 movs r2,#0
 2540 003e 5A71     	 strb r2,[r3,#5]
 672:../cleanflight/src/main/cms/cms.c ****         setArmingDisabled(ARMING_DISABLED_CMS_MENU);
 2541              	 .loc 1 672 0
 2542 0040 4FF40050 	 mov r0,#8192
 2543 0044 FFF7FEFF 	 bl setArmingDisabled
 2544 0048 1AE0     	 b .L151
 2545              	.L148:
 2546              	.LBB14:
 673:../cleanflight/src/main/cms/cms.c ****     } else {
 674:../cleanflight/src/main/cms/cms.c ****         // Switch display
 675:../cleanflight/src/main/cms/cms.c ****         displayPort_t *pNextDisplay = cmsDisplayPortSelectNext();
 2547              	 .loc 1 675 0
 2548 004a FFF7FEFF 	 bl cmsDisplayPortSelectNext
 2549 004e 7860     	 str r0,[r7,#4]
 676:../cleanflight/src/main/cms/cms.c ****         if (pNextDisplay != pCurrentDisplay) {
 2550              	 .loc 1 676 0
 2551 0050 2F4B     	 ldr r3,.L155+4
 2552 0052 1B68     	 ldr r3,[r3]
 2553 0054 7A68     	 ldr r2,[r7,#4]
 2554 0056 9A42     	 cmp r2,r3
 2555 0058 11D0     	 beq .L152
 677:../cleanflight/src/main/cms/cms.c ****             // DisplayPort has been changed.
 678:../cleanflight/src/main/cms/cms.c ****             // Convert cursorRow to absolute value
 679:../cleanflight/src/main/cms/cms.c ****             currentCtx.cursorRow = cmsCursorAbsolute(pCurrentDisplay);
 2556              	 .loc 1 679 0
 2557 005a 2D4B     	 ldr r3,.L155+4
 2558 005c 1B68     	 ldr r3,[r3]
 2559 005e 1846     	 mov r0,r3
 2560 0060 FFF7FEFF 	 bl cmsCursorAbsolute
 2561 0064 0346     	 mov r3,r0
 2562 0066 DAB2     	 uxtb r2,r3
 2563 0068 2A4B     	 ldr r3,.L155+8
 2564 006a 5A71     	 strb r2,[r3,#5]
 680:../cleanflight/src/main/cms/cms.c ****             displayRelease(pCurrentDisplay);
 2565              	 .loc 1 680 0
 2566 006c 284B     	 ldr r3,.L155+4
 2567 006e 1B68     	 ldr r3,[r3]
 2568 0070 1846     	 mov r0,r3
 2569 0072 FFF7FEFF 	 bl displayRelease
 681:../cleanflight/src/main/cms/cms.c ****             pCurrentDisplay = pNextDisplay;
 2570              	 .loc 1 681 0
 2571 0076 264A     	 ldr r2,.L155+4
 2572 0078 7B68     	 ldr r3,[r7,#4]
 2573 007a 1360     	 str r3,[r2]
 2574 007c 00E0     	 b .L151
 2575              	.L152:
 682:../cleanflight/src/main/cms/cms.c ****         } else {
 683:../cleanflight/src/main/cms/cms.c ****             return;
 2576              	 .loc 1 683 0 discriminator 2
 2577 007e 41E0     	 b .L147
 2578              	.L151:
 2579              	.LBE14:
 684:../cleanflight/src/main/cms/cms.c ****         }
 685:../cleanflight/src/main/cms/cms.c ****     }
 686:../cleanflight/src/main/cms/cms.c ****     displayGrab(pCurrentDisplay); // grab the display for use by the CMS
 2580              	 .loc 1 686 0
 2581 0080 234B     	 ldr r3,.L155+4
 2582 0082 1B68     	 ldr r3,[r3]
 2583 0084 1846     	 mov r0,r3
 2584 0086 FFF7FEFF 	 bl displayGrab
 687:../cleanflight/src/main/cms/cms.c **** 
 688:../cleanflight/src/main/cms/cms.c ****     if ( pCurrentDisplay->cols < NORMAL_SCREEN_MIN_COLS) {
 2585              	 .loc 1 688 0
 2586 008a 214B     	 ldr r3,.L155+4
 2587 008c 1B68     	 ldr r3,[r3]
 2588 008e 5B7A     	 ldrb r3,[r3,#9]
 2589 0090 112B     	 cmp r3,#17
 2590 0092 18D8     	 bhi .L153
 689:../cleanflight/src/main/cms/cms.c ****       smallScreen       = true;
 2591              	 .loc 1 689 0
 2592 0094 214B     	 ldr r3,.L155+16
 2593 0096 0122     	 movs r2,#1
 2594 0098 1A70     	 strb r2,[r3]
 690:../cleanflight/src/main/cms/cms.c ****       linesPerMenuItem  = 2;
 2595              	 .loc 1 690 0
 2596 009a 214B     	 ldr r3,.L155+20
 2597 009c 0222     	 movs r2,#2
 2598 009e 1A70     	 strb r2,[r3]
 691:../cleanflight/src/main/cms/cms.c ****       leftMenuColumn    = 0;
 2599              	 .loc 1 691 0
 2600 00a0 204B     	 ldr r3,.L155+24
 2601 00a2 0022     	 movs r2,#0
 2602 00a4 1A70     	 strb r2,[r3]
 692:../cleanflight/src/main/cms/cms.c ****       rightMenuColumn   = pCurrentDisplay->cols;
 2603              	 .loc 1 692 0
 2604 00a6 1A4B     	 ldr r3,.L155+4
 2605 00a8 1B68     	 ldr r3,[r3]
 2606 00aa 5A7A     	 ldrb r2,[r3,#9]
 2607 00ac 1E4B     	 ldr r3,.L155+28
 2608 00ae 1A70     	 strb r2,[r3]
 693:../cleanflight/src/main/cms/cms.c ****       maxMenuItems      = (pCurrentDisplay->rows) / linesPerMenuItem;
 2609              	 .loc 1 693 0
 2610 00b0 174B     	 ldr r3,.L155+4
 2611 00b2 1B68     	 ldr r3,[r3]
 2612 00b4 1A7A     	 ldrb r2,[r3,#8]
 2613 00b6 1A4B     	 ldr r3,.L155+20
 2614 00b8 1B78     	 ldrb r3,[r3]
 2615 00ba B2FBF3F3 	 udiv r3,r2,r3
 2616 00be DAB2     	 uxtb r2,r3
 2617 00c0 1A4B     	 ldr r3,.L155+32
 2618 00c2 1A70     	 strb r2,[r3]
 2619 00c4 16E0     	 b .L154
 2620              	.L153:
 694:../cleanflight/src/main/cms/cms.c ****     } else {
 695:../cleanflight/src/main/cms/cms.c ****       smallScreen       = false;
 2621              	 .loc 1 695 0
 2622 00c6 154B     	 ldr r3,.L155+16
 2623 00c8 0022     	 movs r2,#0
 2624 00ca 1A70     	 strb r2,[r3]
 696:../cleanflight/src/main/cms/cms.c ****       linesPerMenuItem  = 1;
 2625              	 .loc 1 696 0
 2626 00cc 144B     	 ldr r3,.L155+20
 2627 00ce 0122     	 movs r2,#1
 2628 00d0 1A70     	 strb r2,[r3]
 697:../cleanflight/src/main/cms/cms.c ****       leftMenuColumn    = 2;
 2629              	 .loc 1 697 0
 2630 00d2 144B     	 ldr r3,.L155+24
 2631 00d4 0222     	 movs r2,#2
 2632 00d6 1A70     	 strb r2,[r3]
 698:../cleanflight/src/main/cms/cms.c **** #ifdef CMS_OSD_RIGHT_ALIGNED_VALUES
 699:../cleanflight/src/main/cms/cms.c ****       rightMenuColumn   = pCurrentDisplay->cols - 2;
 2633              	 .loc 1 699 0
 2634 00d8 0D4B     	 ldr r3,.L155+4
 2635 00da 1B68     	 ldr r3,[r3]
 2636 00dc 5B7A     	 ldrb r3,[r3,#9]
 2637 00de 023B     	 subs r3,r3,#2
 2638 00e0 DAB2     	 uxtb r2,r3
 2639 00e2 114B     	 ldr r3,.L155+28
 2640 00e4 1A70     	 strb r2,[r3]
 700:../cleanflight/src/main/cms/cms.c **** #else
 701:../cleanflight/src/main/cms/cms.c ****       rightMenuColumn   = pCurrentDisplay->cols - CMS_DRAW_BUFFER_LEN;
 702:../cleanflight/src/main/cms/cms.c **** #endif
 703:../cleanflight/src/main/cms/cms.c ****       maxMenuItems      = pCurrentDisplay->rows - 2;
 2641              	 .loc 1 703 0
 2642 00e6 0A4B     	 ldr r3,.L155+4
 2643 00e8 1B68     	 ldr r3,[r3]
 2644 00ea 1B7A     	 ldrb r3,[r3,#8]
 2645 00ec 023B     	 subs r3,r3,#2
 2646 00ee DAB2     	 uxtb r2,r3
 2647 00f0 0E4B     	 ldr r3,.L155+32
 2648 00f2 1A70     	 strb r2,[r3]
 2649              	.L154:
 704:../cleanflight/src/main/cms/cms.c ****     }
 705:../cleanflight/src/main/cms/cms.c **** 
 706:../cleanflight/src/main/cms/cms.c ****     cmsMenuChange(pCurrentDisplay, currentCtx.menu);
 2650              	 .loc 1 706 0
 2651 00f4 064B     	 ldr r3,.L155+4
 2652 00f6 1A68     	 ldr r2,[r3]
 2653 00f8 064B     	 ldr r3,.L155+8
 2654 00fa 1B68     	 ldr r3,[r3]
 2655 00fc 1046     	 mov r0,r2
 2656 00fe 1946     	 mov r1,r3
 2657 0100 FFF7FEFF 	 bl cmsMenuChange
 2658              	.L147:
 707:../cleanflight/src/main/cms/cms.c **** }
 2659              	 .loc 1 707 0
 2660 0104 0837     	 adds r7,r7,#8
 2661              	.LCFI95:
 2662              	 .cfi_def_cfa_offset 8
 2663 0106 BD46     	 mov sp,r7
 2664              	.LCFI96:
 2665              	 .cfi_def_cfa_register 13
 2666              	 
 2667 0108 80BD     	 pop {r7,pc}
 2668              	.L156:
 2669 010a 00BF     	 .align 2
 2670              	.L155:
 2671 010c 00000000 	 .word cmsInMenu
 2672 0110 00000000 	 .word pCurrentDisplay
 2673 0114 00000000 	 .word currentCtx
 2674 0118 00000000 	 .word menuMain
 2675 011c 00000000 	 .word smallScreen
 2676 0120 00000000 	 .word linesPerMenuItem
 2677 0124 00000000 	 .word leftMenuColumn
 2678 0128 00000000 	 .word rightMenuColumn
 2679 012c 00000000 	 .word maxMenuItems
 2680              	 .cfi_endproc
 2681              	.LFE581:
 2683              	 .section .text.cmsTraverseGlobalExit,"ax",%progbits
 2684              	 .align 2
 2685              	 .thumb
 2686              	 .thumb_func
 2688              	cmsTraverseGlobalExit:
 2689              	.LFB582:
 708:../cleanflight/src/main/cms/cms.c **** 
 709:../cleanflight/src/main/cms/cms.c **** static void cmsTraverseGlobalExit(const CMS_Menu *pMenu)
 710:../cleanflight/src/main/cms/cms.c **** {
 2690              	 .loc 1 710 0
 2691              	 .cfi_startproc
 2692              	 
 2693              	 
 2694 0000 80B5     	 push {r7,lr}
 2695              	.LCFI97:
 2696              	 .cfi_def_cfa_offset 8
 2697              	 .cfi_offset 7,-8
 2698              	 .cfi_offset 14,-4
 2699 0002 84B0     	 sub sp,sp,#16
 2700              	.LCFI98:
 2701              	 .cfi_def_cfa_offset 24
 2702 0004 00AF     	 add r7,sp,#0
 2703              	.LCFI99:
 2704              	 .cfi_def_cfa_register 7
 2705 0006 7860     	 str r0,[r7,#4]
 2706              	.LBB15:
 711:../cleanflight/src/main/cms/cms.c ****     for (const OSD_Entry *p = pMenu->entries; p->type != OME_END ; p++) {
 2707              	 .loc 1 711 0
 2708 0008 7B68     	 ldr r3,[r7,#4]
 2709 000a 9B68     	 ldr r3,[r3,#8]
 2710 000c FB60     	 str r3,[r7,#12]
 2711 000e 0CE0     	 b .L158
 2712              	.L160:
 712:../cleanflight/src/main/cms/cms.c ****         if (p->type == OME_Submenu) {
 2713              	 .loc 1 712 0
 2714 0010 FB68     	 ldr r3,[r7,#12]
 2715 0012 1B79     	 ldrb r3,[r3,#4]
 2716 0014 032B     	 cmp r3,#3
 2717 0016 05D1     	 bne .L159
 713:../cleanflight/src/main/cms/cms.c ****             cmsTraverseGlobalExit(p->data);
 2718              	 .loc 1 713 0
 2719 0018 FB68     	 ldr r3,[r7,#12]
 2720 001a D3F80930 	 ldr r3,[r3,#9]
 2721 001e 1846     	 mov r0,r3
 2722 0020 FFF7EEFF 	 bl cmsTraverseGlobalExit
 2723              	.L159:
 711:../cleanflight/src/main/cms/cms.c ****     for (const OSD_Entry *p = pMenu->entries; p->type != OME_END ; p++) {
 2724              	 .loc 1 711 0 discriminator 2
 2725 0024 FB68     	 ldr r3,[r7,#12]
 2726 0026 0E33     	 adds r3,r3,#14
 2727 0028 FB60     	 str r3,[r7,#12]
 2728              	.L158:
 711:../cleanflight/src/main/cms/cms.c ****     for (const OSD_Entry *p = pMenu->entries; p->type != OME_END ; p++) {
 2729              	 .loc 1 711 0 is_stmt 0 discriminator 1
 2730 002a FB68     	 ldr r3,[r7,#12]
 2731 002c 1B79     	 ldrb r3,[r3,#4]
 2732 002e 0E2B     	 cmp r3,#14
 2733 0030 EED1     	 bne .L160
 2734              	.LBE15:
 714:../cleanflight/src/main/cms/cms.c ****         }
 715:../cleanflight/src/main/cms/cms.c ****     }
 716:../cleanflight/src/main/cms/cms.c **** 
 717:../cleanflight/src/main/cms/cms.c **** }
 2735              	 .loc 1 717 0 is_stmt 1
 2736 0032 1037     	 adds r7,r7,#16
 2737              	.LCFI100:
 2738              	 .cfi_def_cfa_offset 8
 2739 0034 BD46     	 mov sp,r7
 2740              	.LCFI101:
 2741              	 .cfi_def_cfa_register 13
 2742              	 
 2743 0036 80BD     	 pop {r7,pc}
 2744              	 .cfi_endproc
 2745              	.LFE582:
 2747              	 .section .rodata
 2748 0006 0000     	 .align 2
 2749              	.LC2:
 2750 0008 5245424F 	 .ascii "REBOOTING...\000"
 2750      4F54494E 
 2750      472E2E2E 
 2750      00
 2751 0015 000000   	 .section .text.cmsMenuExit,"ax",%progbits
 2752              	 .align 2
 2753              	 .global cmsMenuExit
 2754              	 .thumb
 2755              	 .thumb_func
 2757              	cmsMenuExit:
 2758              	.LFB583:
 718:../cleanflight/src/main/cms/cms.c **** 
 719:../cleanflight/src/main/cms/cms.c **** long cmsMenuExit(displayPort_t *pDisplay, const void *ptr)
 720:../cleanflight/src/main/cms/cms.c **** {
 2759              	 .loc 1 720 0
 2760              	 .cfi_startproc
 2761              	 
 2762              	 
 2763 0000 80B5     	 push {r7,lr}
 2764              	.LCFI102:
 2765              	 .cfi_def_cfa_offset 8
 2766              	 .cfi_offset 7,-8
 2767              	 .cfi_offset 14,-4
 2768 0002 84B0     	 sub sp,sp,#16
 2769              	.LCFI103:
 2770              	 .cfi_def_cfa_offset 24
 2771 0004 00AF     	 add r7,sp,#0
 2772              	.LCFI104:
 2773              	 .cfi_def_cfa_register 7
 2774 0006 7860     	 str r0,[r7,#4]
 2775 0008 3960     	 str r1,[r7]
 721:../cleanflight/src/main/cms/cms.c ****     int exitType = (int)ptr;
 2776              	 .loc 1 721 0
 2777 000a 3B68     	 ldr r3,[r7]
 2778 000c FB60     	 str r3,[r7,#12]
 722:../cleanflight/src/main/cms/cms.c ****     switch (exitType) {
 2779              	 .loc 1 722 0
 2780 000e FB68     	 ldr r3,[r7,#12]
 2781 0010 002B     	 cmp r3,#0
 2782 0012 13D0     	 beq .L168
 2783 0014 002B     	 cmp r3,#0
 2784 0016 12DB     	 blt .L162
 2785 0018 022B     	 cmp r3,#2
 2786 001a 10DC     	 bgt .L162
 723:../cleanflight/src/main/cms/cms.c ****     case CMS_EXIT_SAVE:
 724:../cleanflight/src/main/cms/cms.c ****     case CMS_EXIT_SAVEREBOOT:
 725:../cleanflight/src/main/cms/cms.c **** 
 726:../cleanflight/src/main/cms/cms.c ****         cmsTraverseGlobalExit(&menuMain);
 2787              	 .loc 1 726 0
 2788 001c 1D48     	 ldr r0,.L169
 2789 001e FFF7FEFF 	 bl cmsTraverseGlobalExit
 727:../cleanflight/src/main/cms/cms.c **** 
 728:../cleanflight/src/main/cms/cms.c ****         if (currentCtx.menu->onExit)
 2790              	 .loc 1 728 0
 2791 0022 1D4B     	 ldr r3,.L169+4
 2792 0024 1B68     	 ldr r3,[r3]
 2793 0026 5B68     	 ldr r3,[r3,#4]
 2794 0028 002B     	 cmp r3,#0
 2795 002a 04D0     	 beq .L165
 729:../cleanflight/src/main/cms/cms.c ****             currentCtx.menu->onExit((OSD_Entry *)NULL); // Forced exit
 2796              	 .loc 1 729 0
 2797 002c 1A4B     	 ldr r3,.L169+4
 2798 002e 1B68     	 ldr r3,[r3]
 2799 0030 5B68     	 ldr r3,[r3,#4]
 2800 0032 0020     	 movs r0,#0
 2801 0034 9847     	 blx r3
 2802              	.L165:
 730:../cleanflight/src/main/cms/cms.c **** 
 731:../cleanflight/src/main/cms/cms.c ****         saveConfigAndNotify();
 2803              	 .loc 1 731 0
 2804 0036 FFF7FEFF 	 bl saveConfigAndNotify
 732:../cleanflight/src/main/cms/cms.c ****         break;
 2805              	 .loc 1 732 0
 2806 003a 00E0     	 b .L162
 2807              	.L168:
 733:../cleanflight/src/main/cms/cms.c **** 
 734:../cleanflight/src/main/cms/cms.c ****     case CMS_EXIT:
 735:../cleanflight/src/main/cms/cms.c ****         break;
 2808              	 .loc 1 735 0
 2809 003c 00BF     	 nop
 2810              	.L162:
 736:../cleanflight/src/main/cms/cms.c ****     }
 737:../cleanflight/src/main/cms/cms.c **** 
 738:../cleanflight/src/main/cms/cms.c ****     cmsInMenu = false;
 2811              	 .loc 1 738 0
 2812 003e 174B     	 ldr r3,.L169+8
 2813 0040 0022     	 movs r2,#0
 2814 0042 1A70     	 strb r2,[r3]
 739:../cleanflight/src/main/cms/cms.c **** 
 740:../cleanflight/src/main/cms/cms.c ****     displayRelease(pDisplay);
 2815              	 .loc 1 740 0
 2816 0044 7868     	 ldr r0,[r7,#4]
 2817 0046 FFF7FEFF 	 bl displayRelease
 741:../cleanflight/src/main/cms/cms.c ****     currentCtx.menu = NULL;
 2818              	 .loc 1 741 0
 2819 004a 134B     	 ldr r3,.L169+4
 2820 004c 0022     	 movs r2,#0
 2821 004e 1A60     	 str r2,[r3]
 742:../cleanflight/src/main/cms/cms.c **** 
 743:../cleanflight/src/main/cms/cms.c ****     if (exitType == CMS_EXIT_SAVEREBOOT) {
 2822              	 .loc 1 743 0
 2823 0050 FB68     	 ldr r3,[r7,#12]
 2824 0052 022B     	 cmp r3,#2
 2825 0054 14D1     	 bne .L166
 744:../cleanflight/src/main/cms/cms.c ****         displayClearScreen(pDisplay);
 2826              	 .loc 1 744 0
 2827 0056 7868     	 ldr r0,[r7,#4]
 2828 0058 FFF7FEFF 	 bl displayClearScreen
 745:../cleanflight/src/main/cms/cms.c ****         displayWrite(pDisplay, 5, 3, "REBOOTING...");
 2829              	 .loc 1 745 0
 2830 005c 7868     	 ldr r0,[r7,#4]
 2831 005e 0521     	 movs r1,#5
 2832 0060 0322     	 movs r2,#3
 2833 0062 0F4B     	 ldr r3,.L169+12
 2834 0064 FFF7FEFF 	 bl displayWrite
 746:../cleanflight/src/main/cms/cms.c **** 
 747:../cleanflight/src/main/cms/cms.c ****         displayResync(pDisplay); // Was max7456RefreshAll(); why at this timing?
 2835              	 .loc 1 747 0
 2836 0068 7868     	 ldr r0,[r7,#4]
 2837 006a FFF7FEFF 	 bl displayResync
 748:../cleanflight/src/main/cms/cms.c **** 
 749:../cleanflight/src/main/cms/cms.c ****         stopMotors();
 2838              	 .loc 1 749 0
 2839 006e FFF7FEFF 	 bl stopMotors
 750:../cleanflight/src/main/cms/cms.c ****         stopPwmAllMotors();
 2840              	 .loc 1 750 0
 2841 0072 FFF7FEFF 	 bl stopPwmAllMotors
 751:../cleanflight/src/main/cms/cms.c ****         delay(200);
 2842              	 .loc 1 751 0
 2843 0076 C820     	 movs r0,#200
 2844 0078 FFF7FEFF 	 bl delay
 752:../cleanflight/src/main/cms/cms.c **** 
 753:../cleanflight/src/main/cms/cms.c ****         systemReset();
 2845              	 .loc 1 753 0
 2846 007c FFF7FEFF 	 bl systemReset
 2847              	.L166:
 754:../cleanflight/src/main/cms/cms.c ****     }
 755:../cleanflight/src/main/cms/cms.c **** 
 756:../cleanflight/src/main/cms/cms.c ****     unsetArmingDisabled(ARMING_DISABLED_CMS_MENU);
 2848              	 .loc 1 756 0
 2849 0080 4FF40050 	 mov r0,#8192
 2850 0084 FFF7FEFF 	 bl unsetArmingDisabled
 757:../cleanflight/src/main/cms/cms.c **** 
 758:../cleanflight/src/main/cms/cms.c ****     return 0;
 2851              	 .loc 1 758 0
 2852 0088 0023     	 movs r3,#0
 759:../cleanflight/src/main/cms/cms.c **** }
 2853              	 .loc 1 759 0
 2854 008a 1846     	 mov r0,r3
 2855 008c 1037     	 adds r7,r7,#16
 2856              	.LCFI105:
 2857              	 .cfi_def_cfa_offset 8
 2858 008e BD46     	 mov sp,r7
 2859              	.LCFI106:
 2860              	 .cfi_def_cfa_register 13
 2861              	 
 2862 0090 80BD     	 pop {r7,pc}
 2863              	.L170:
 2864 0092 00BF     	 .align 2
 2865              	.L169:
 2866 0094 00000000 	 .word menuMain
 2867 0098 00000000 	 .word currentCtx
 2868 009c 00000000 	 .word cmsInMenu
 2869 00a0 08000000 	 .word .LC2
 2870              	 .cfi_endproc
 2871              	.LFE583:
 2873              	 .section .text.cmsHandleKey,"ax",%progbits
 2874              	 .align 2
 2875              	 .thumb
 2876              	 .thumb_func
 2878              	cmsHandleKey:
 2879              	.LFB584:
 760:../cleanflight/src/main/cms/cms.c **** 
 761:../cleanflight/src/main/cms/cms.c **** // Stick/key detection and key codes
 762:../cleanflight/src/main/cms/cms.c **** 
 763:../cleanflight/src/main/cms/cms.c **** #define IS_HI(X)  (rcData[X] > 1750)
 764:../cleanflight/src/main/cms/cms.c **** #define IS_LO(X)  (rcData[X] < 1250)
 765:../cleanflight/src/main/cms/cms.c **** #define IS_MID(X) (rcData[X] > 1250 && rcData[X] < 1750)
 766:../cleanflight/src/main/cms/cms.c **** 
 767:../cleanflight/src/main/cms/cms.c **** #define KEY_NONE    0
 768:../cleanflight/src/main/cms/cms.c **** #define KEY_UP      1
 769:../cleanflight/src/main/cms/cms.c **** #define KEY_DOWN    2
 770:../cleanflight/src/main/cms/cms.c **** #define KEY_LEFT    3
 771:../cleanflight/src/main/cms/cms.c **** #define KEY_RIGHT   4
 772:../cleanflight/src/main/cms/cms.c **** #define KEY_ESC     5
 773:../cleanflight/src/main/cms/cms.c **** #define KEY_MENU    6
 774:../cleanflight/src/main/cms/cms.c **** 
 775:../cleanflight/src/main/cms/cms.c **** #define BUTTON_TIME   250 // msec
 776:../cleanflight/src/main/cms/cms.c **** #define BUTTON_PAUSE  500 // msec
 777:../cleanflight/src/main/cms/cms.c **** 
 778:../cleanflight/src/main/cms/cms.c **** STATIC_UNIT_TESTED uint16_t cmsHandleKey(displayPort_t *pDisplay, uint8_t key)
 779:../cleanflight/src/main/cms/cms.c **** {
 2880              	 .loc 1 779 0
 2881              	 .cfi_startproc
 2882              	 
 2883              	 
 2884 0000 80B5     	 push {r7,lr}
 2885              	.LCFI107:
 2886              	 .cfi_def_cfa_offset 8
 2887              	 .cfi_offset 7,-8
 2888              	 .cfi_offset 14,-4
 2889 0002 8CB0     	 sub sp,sp,#48
 2890              	.LCFI108:
 2891              	 .cfi_def_cfa_offset 56
 2892 0004 00AF     	 add r7,sp,#0
 2893              	.LCFI109:
 2894              	 .cfi_def_cfa_register 7
 2895 0006 7860     	 str r0,[r7,#4]
 2896 0008 0B46     	 mov r3,r1
 2897 000a FB70     	 strb r3,[r7,#3]
 780:../cleanflight/src/main/cms/cms.c ****     uint16_t res = BUTTON_TIME;
 2898              	 .loc 1 780 0
 2899 000c FA23     	 movs r3,#250
 2900 000e FB85     	 strh r3,[r7,#46]
 781:../cleanflight/src/main/cms/cms.c ****     OSD_Entry *p;
 782:../cleanflight/src/main/cms/cms.c **** 
 783:../cleanflight/src/main/cms/cms.c ****     if (!currentCtx.menu)
 2901              	 .loc 1 783 0
 2902 0010 A04B     	 ldr r3,.L231
 2903 0012 1B68     	 ldr r3,[r3]
 2904 0014 002B     	 cmp r3,#0
 2905 0016 01D1     	 bne .L172
 784:../cleanflight/src/main/cms/cms.c ****         return res;
 2906              	 .loc 1 784 0
 2907 0018 FB8D     	 ldrh r3,[r7,#46]
 2908 001a AFE2     	 b .L173
 2909              	.L172:
 785:../cleanflight/src/main/cms/cms.c **** 
 786:../cleanflight/src/main/cms/cms.c ****     if (key == KEY_MENU) {
 2910              	 .loc 1 786 0
 2911 001c FB78     	 ldrb r3,[r7,#3]
 2912 001e 062B     	 cmp r3,#6
 2913 0020 04D1     	 bne .L174
 787:../cleanflight/src/main/cms/cms.c ****         cmsMenuOpen();
 2914              	 .loc 1 787 0
 2915 0022 FFF7FEFF 	 bl cmsMenuOpen
 788:../cleanflight/src/main/cms/cms.c ****         return BUTTON_PAUSE;
 2916              	 .loc 1 788 0
 2917 0026 4FF4FA73 	 mov r3,#500
 2918 002a A7E2     	 b .L173
 2919              	.L174:
 789:../cleanflight/src/main/cms/cms.c ****     }
 790:../cleanflight/src/main/cms/cms.c **** 
 791:../cleanflight/src/main/cms/cms.c ****     if (key == KEY_ESC) {
 2920              	 .loc 1 791 0
 2921 002c FB78     	 ldrb r3,[r7,#3]
 2922 002e 052B     	 cmp r3,#5
 2923 0030 05D1     	 bne .L175
 792:../cleanflight/src/main/cms/cms.c ****         cmsMenuBack(pDisplay);
 2924              	 .loc 1 792 0
 2925 0032 7868     	 ldr r0,[r7,#4]
 2926 0034 FFF7FEFF 	 bl cmsMenuBack
 793:../cleanflight/src/main/cms/cms.c ****         return BUTTON_PAUSE;
 2927              	 .loc 1 793 0
 2928 0038 4FF4FA73 	 mov r3,#500
 2929 003c 9EE2     	 b .L173
 2930              	.L175:
 794:../cleanflight/src/main/cms/cms.c ****     }
 795:../cleanflight/src/main/cms/cms.c **** 
 796:../cleanflight/src/main/cms/cms.c ****     if (key == KEY_DOWN) {
 2931              	 .loc 1 796 0
 2932 003e FB78     	 ldrb r3,[r7,#3]
 2933 0040 022B     	 cmp r3,#2
 2934 0042 16D1     	 bne .L176
 797:../cleanflight/src/main/cms/cms.c ****         if (currentCtx.cursorRow < pageMaxRow) {
 2935              	 .loc 1 797 0
 2936 0044 934B     	 ldr r3,.L231
 2937 0046 5B79     	 ldrb r3,[r3,#5]
 2938 0048 5BB2     	 sxtb r3,r3
 2939 004a 934A     	 ldr r2,.L231+4
 2940 004c 1278     	 ldrb r2,[r2]
 2941 004e 9342     	 cmp r3,r2
 2942 0050 09DA     	 bge .L177
 798:../cleanflight/src/main/cms/cms.c ****             currentCtx.cursorRow++;
 2943              	 .loc 1 798 0
 2944 0052 904B     	 ldr r3,.L231
 2945 0054 5B79     	 ldrb r3,[r3,#5]
 2946 0056 DBB2     	 uxtb r3,r3
 2947 0058 DBB2     	 uxtb r3,r3
 2948 005a 0133     	 adds r3,r3,#1
 2949 005c DBB2     	 uxtb r3,r3
 2950 005e DAB2     	 uxtb r2,r3
 2951 0060 8C4B     	 ldr r3,.L231
 2952 0062 5A71     	 strb r2,[r3,#5]
 2953 0064 05E0     	 b .L176
 2954              	.L177:
 799:../cleanflight/src/main/cms/cms.c ****         } else {
 800:../cleanflight/src/main/cms/cms.c ****             cmsPageNext(pDisplay);
 2955              	 .loc 1 800 0
 2956 0066 7868     	 ldr r0,[r7,#4]
 2957 0068 FFF7FEFF 	 bl cmsPageNext
 801:../cleanflight/src/main/cms/cms.c ****             currentCtx.cursorRow = 0;    // Goto top in any case
 2958              	 .loc 1 801 0
 2959 006c 894B     	 ldr r3,.L231
 2960 006e 0022     	 movs r2,#0
 2961 0070 5A71     	 strb r2,[r3,#5]
 2962              	.L176:
 802:../cleanflight/src/main/cms/cms.c ****         }
 803:../cleanflight/src/main/cms/cms.c ****     }
 804:../cleanflight/src/main/cms/cms.c **** 
 805:../cleanflight/src/main/cms/cms.c ****     if (key == KEY_UP) {
 2963              	 .loc 1 805 0
 2964 0072 FB78     	 ldrb r3,[r7,#3]
 2965 0074 012B     	 cmp r3,#1
 2966 0076 3ED1     	 bne .L178
 806:../cleanflight/src/main/cms/cms.c ****         currentCtx.cursorRow--;
 2967              	 .loc 1 806 0
 2968 0078 864B     	 ldr r3,.L231
 2969 007a 5B79     	 ldrb r3,[r3,#5]
 2970 007c DBB2     	 uxtb r3,r3
 2971 007e DBB2     	 uxtb r3,r3
 2972 0080 013B     	 subs r3,r3,#1
 2973 0082 DBB2     	 uxtb r3,r3
 2974 0084 DAB2     	 uxtb r2,r3
 2975 0086 834B     	 ldr r3,.L231
 2976 0088 5A71     	 strb r2,[r3,#5]
 807:../cleanflight/src/main/cms/cms.c **** 
 808:../cleanflight/src/main/cms/cms.c ****         // Skip non-title labels
 809:../cleanflight/src/main/cms/cms.c ****         if ((pageTop + currentCtx.cursorRow)->type == OME_Label && currentCtx.cursorRow > 0)
 2977              	 .loc 1 809 0
 2978 008a 844B     	 ldr r3,.L231+8
 2979 008c 1968     	 ldr r1,[r3]
 2980 008e 814B     	 ldr r3,.L231
 2981 0090 5B79     	 ldrb r3,[r3,#5]
 2982 0092 5AB2     	 sxtb r2,r3
 2983 0094 1346     	 mov r3,r2
 2984 0096 DB00     	 lsls r3,r3,#3
 2985 0098 9B1A     	 subs r3,r3,r2
 2986 009a 5B00     	 lsls r3,r3,#1
 2987 009c 0B44     	 add r3,r3,r1
 2988 009e 1B79     	 ldrb r3,[r3,#4]
 2989 00a0 002B     	 cmp r3,#0
 2990 00a2 0DD1     	 bne .L179
 2991              	 .loc 1 809 0 is_stmt 0 discriminator 1
 2992 00a4 7B4B     	 ldr r3,.L231
 2993 00a6 5B79     	 ldrb r3,[r3,#5]
 2994 00a8 5BB2     	 sxtb r3,r3
 2995 00aa 002B     	 cmp r3,#0
 2996 00ac 08DD     	 ble .L179
 810:../cleanflight/src/main/cms/cms.c ****             currentCtx.cursorRow--;
 2997              	 .loc 1 810 0 is_stmt 1
 2998 00ae 794B     	 ldr r3,.L231
 2999 00b0 5B79     	 ldrb r3,[r3,#5]
 3000 00b2 DBB2     	 uxtb r3,r3
 3001 00b4 DBB2     	 uxtb r3,r3
 3002 00b6 013B     	 subs r3,r3,#1
 3003 00b8 DBB2     	 uxtb r3,r3
 3004 00ba DAB2     	 uxtb r2,r3
 3005 00bc 754B     	 ldr r3,.L231
 3006 00be 5A71     	 strb r2,[r3,#5]
 3007              	.L179:
 811:../cleanflight/src/main/cms/cms.c **** 
 812:../cleanflight/src/main/cms/cms.c ****         if (currentCtx.cursorRow == -1 || (pageTop + currentCtx.cursorRow)->type == OME_Label) {
 3008              	 .loc 1 812 0
 3009 00c0 744B     	 ldr r3,.L231
 3010 00c2 5B79     	 ldrb r3,[r3,#5]
 3011 00c4 5BB2     	 sxtb r3,r3
 3012 00c6 B3F1FF3F 	 cmp r3,#-1
 3013 00ca 0CD0     	 beq .L180
 3014              	 .loc 1 812 0 is_stmt 0 discriminator 1
 3015 00cc 734B     	 ldr r3,.L231+8
 3016 00ce 1968     	 ldr r1,[r3]
 3017 00d0 704B     	 ldr r3,.L231
 3018 00d2 5B79     	 ldrb r3,[r3,#5]
 3019 00d4 5AB2     	 sxtb r2,r3
 3020 00d6 1346     	 mov r3,r2
 3021 00d8 DB00     	 lsls r3,r3,#3
 3022 00da 9B1A     	 subs r3,r3,r2
 3023 00dc 5B00     	 lsls r3,r3,#1
 3024 00de 0B44     	 add r3,r3,r1
 3025 00e0 1B79     	 ldrb r3,[r3,#4]
 3026 00e2 002B     	 cmp r3,#0
 3027 00e4 07D1     	 bne .L178
 3028              	.L180:
 813:../cleanflight/src/main/cms/cms.c ****             // Goto previous page
 814:../cleanflight/src/main/cms/cms.c ****             cmsPagePrev(pDisplay);
 3029              	 .loc 1 814 0 is_stmt 1
 3030 00e6 7868     	 ldr r0,[r7,#4]
 3031 00e8 FFF7FEFF 	 bl cmsPagePrev
 815:../cleanflight/src/main/cms/cms.c ****             currentCtx.cursorRow = pageMaxRow;
 3032              	 .loc 1 815 0
 3033 00ec 6A4B     	 ldr r3,.L231+4
 3034 00ee 1B78     	 ldrb r3,[r3]
 3035 00f0 DAB2     	 uxtb r2,r3
 3036 00f2 684B     	 ldr r3,.L231
 3037 00f4 5A71     	 strb r2,[r3,#5]
 3038              	.L178:
 816:../cleanflight/src/main/cms/cms.c ****         }
 817:../cleanflight/src/main/cms/cms.c ****     }
 818:../cleanflight/src/main/cms/cms.c **** 
 819:../cleanflight/src/main/cms/cms.c ****     if (key == KEY_DOWN || key == KEY_UP)
 3039              	 .loc 1 819 0
 3040 00f6 FB78     	 ldrb r3,[r7,#3]
 3041 00f8 022B     	 cmp r3,#2
 3042 00fa 02D0     	 beq .L181
 3043              	 .loc 1 819 0 is_stmt 0 discriminator 1
 3044 00fc FB78     	 ldrb r3,[r7,#3]
 3045 00fe 012B     	 cmp r3,#1
 3046 0100 01D1     	 bne .L182
 3047              	.L181:
 820:../cleanflight/src/main/cms/cms.c ****         return res;
 3048              	 .loc 1 820 0 is_stmt 1
 3049 0102 FB8D     	 ldrh r3,[r7,#46]
 3050 0104 3AE2     	 b .L173
 3051              	.L182:
 821:../cleanflight/src/main/cms/cms.c **** 
 822:../cleanflight/src/main/cms/cms.c ****     p = pageTop + currentCtx.cursorRow;
 3052              	 .loc 1 822 0
 3053 0106 654B     	 ldr r3,.L231+8
 3054 0108 1968     	 ldr r1,[r3]
 3055 010a 624B     	 ldr r3,.L231
 3056 010c 5B79     	 ldrb r3,[r3,#5]
 3057 010e 5AB2     	 sxtb r2,r3
 3058 0110 1346     	 mov r3,r2
 3059 0112 DB00     	 lsls r3,r3,#3
 3060 0114 9B1A     	 subs r3,r3,r2
 3061 0116 5B00     	 lsls r3,r3,#1
 3062 0118 0B44     	 add r3,r3,r1
 3063 011a BB62     	 str r3,[r7,#40]
 823:../cleanflight/src/main/cms/cms.c **** 
 824:../cleanflight/src/main/cms/cms.c ****     switch (p->type) {
 3064              	 .loc 1 824 0
 3065 011c BB6A     	 ldr r3,[r7,#40]
 3066 011e 1B79     	 ldrb r3,[r3,#4]
 3067 0120 0F2B     	 cmp r3,#15
 3068 0122 00F22A82 	 bhi .L183
 3069 0126 01A2     	 adr r2,.L185
 3070 0128 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 3071              	 .p2align 2
 3072              	.L185:
 3073 012c 7B050000 	 .word .L183+1
 3074 0130 F3010000 	 .word .L186+1
 3075 0134 C7010000 	 .word .L187+1
 3076 0138 6D010000 	 .word .L188+1
 3077 013c 8B010000 	 .word .L189+1
 3078 0140 01020000 	 .word .L190+1
 3079 0144 A9030000 	 .word .L191+1
 3080 0148 A5020000 	 .word .L192+1
 3081 014c 43040000 	 .word .L193+1
 3082 0150 D1040000 	 .word .L194+1
 3083 0154 7B050000 	 .word .L183+1
 3084 0158 A5020000 	 .word .L192+1
 3085 015c 39020000 	 .word .L196+1
 3086 0160 2B030000 	 .word .L197+1
 3087 0164 7B050000 	 .word .L183+1
 3088 0168 7B050000 	 .word .L183+1
 3089              	 .p2align 1
 3090              	.L188:
 3091              	.LBB16:
 825:../cleanflight/src/main/cms/cms.c ****         case OME_Submenu:
 826:../cleanflight/src/main/cms/cms.c ****             if (key == KEY_RIGHT) {
 3092              	 .loc 1 826 0
 3093 016c FB78     	 ldrb r3,[r7,#3]
 3094 016e 042B     	 cmp r3,#4
 3095 0170 0AD1     	 bne .L199
 827:../cleanflight/src/main/cms/cms.c ****                 cmsMenuChange(pDisplay, p->data);
 3096              	 .loc 1 827 0
 3097 0172 BB6A     	 ldr r3,[r7,#40]
 3098 0174 D3F80930 	 ldr r3,[r3,#9]
 3099 0178 7868     	 ldr r0,[r7,#4]
 3100 017a 1946     	 mov r1,r3
 3101 017c FFF7FEFF 	 bl cmsMenuChange
 828:../cleanflight/src/main/cms/cms.c ****                 res = BUTTON_PAUSE;
 3102              	 .loc 1 828 0
 3103 0180 4FF4FA73 	 mov r3,#500
 3104 0184 FB85     	 strh r3,[r7,#46]
 829:../cleanflight/src/main/cms/cms.c ****             }
 830:../cleanflight/src/main/cms/cms.c ****             break;
 3105              	 .loc 1 830 0
 3106 0186 F8E1     	 b .L183
 3107              	.L199:
 3108 0188 F7E1     	 b .L183
 3109              	.L189:
 831:../cleanflight/src/main/cms/cms.c **** 
 832:../cleanflight/src/main/cms/cms.c ****         case OME_Funcall:;
 833:../cleanflight/src/main/cms/cms.c ****             long retval;
 834:../cleanflight/src/main/cms/cms.c ****             if (p->func && key == KEY_RIGHT) {
 3110              	 .loc 1 834 0
 3111 018a BB6A     	 ldr r3,[r7,#40]
 3112 018c D3F80530 	 ldr r3,[r3,#5]
 3113 0190 002B     	 cmp r3,#0
 3114 0192 17D0     	 beq .L200
 3115              	 .loc 1 834 0 is_stmt 0 discriminator 1
 3116 0194 FB78     	 ldrb r3,[r7,#3]
 3117 0196 042B     	 cmp r3,#4
 3118 0198 14D1     	 bne .L200
 835:../cleanflight/src/main/cms/cms.c ****                 retval = p->func(pDisplay, p->data);
 3119              	 .loc 1 835 0 is_stmt 1
 3120 019a BB6A     	 ldr r3,[r7,#40]
 3121 019c D3F80530 	 ldr r3,[r3,#5]
 3122 01a0 BA6A     	 ldr r2,[r7,#40]
 3123 01a2 D2F80920 	 ldr r2,[r2,#9]
 3124 01a6 7868     	 ldr r0,[r7,#4]
 3125 01a8 1146     	 mov r1,r2
 3126 01aa 9847     	 blx r3
 3127 01ac 7862     	 str r0,[r7,#36]
 836:../cleanflight/src/main/cms/cms.c ****                 if (retval == MENU_CHAIN_BACK)
 3128              	 .loc 1 836 0
 3129 01ae 7B6A     	 ldr r3,[r7,#36]
 3130 01b0 B3F1FF3F 	 cmp r3,#-1
 3131 01b4 02D1     	 bne .L201
 837:../cleanflight/src/main/cms/cms.c ****                     cmsMenuBack(pDisplay);
 3132              	 .loc 1 837 0
 3133 01b6 7868     	 ldr r0,[r7,#4]
 3134 01b8 FFF7FEFF 	 bl cmsMenuBack
 3135              	.L201:
 838:../cleanflight/src/main/cms/cms.c ****                 res = BUTTON_PAUSE;
 3136              	 .loc 1 838 0
 3137 01bc 4FF4FA73 	 mov r3,#500
 3138 01c0 FB85     	 strh r3,[r7,#46]
 839:../cleanflight/src/main/cms/cms.c ****             }
 840:../cleanflight/src/main/cms/cms.c ****             break;
 3139              	 .loc 1 840 0
 3140 01c2 DAE1     	 b .L183
 3141              	.L200:
 3142 01c4 D9E1     	 b .L183
 3143              	.L187:
 841:../cleanflight/src/main/cms/cms.c **** 
 842:../cleanflight/src/main/cms/cms.c ****         case OME_OSD_Exit:
 843:../cleanflight/src/main/cms/cms.c ****             if (p->func && key == KEY_RIGHT) {
 3144              	 .loc 1 843 0
 3145 01c6 BB6A     	 ldr r3,[r7,#40]
 3146 01c8 D3F80530 	 ldr r3,[r3,#5]
 3147 01cc 002B     	 cmp r3,#0
 3148 01ce 0FD0     	 beq .L202
 3149              	 .loc 1 843 0 is_stmt 0 discriminator 1
 3150 01d0 FB78     	 ldrb r3,[r7,#3]
 3151 01d2 042B     	 cmp r3,#4
 3152 01d4 0CD1     	 bne .L202
 844:../cleanflight/src/main/cms/cms.c ****                 p->func(pDisplay, p->data);
 3153              	 .loc 1 844 0 is_stmt 1
 3154 01d6 BB6A     	 ldr r3,[r7,#40]
 3155 01d8 D3F80530 	 ldr r3,[r3,#5]
 3156 01dc BA6A     	 ldr r2,[r7,#40]
 3157 01de D2F80920 	 ldr r2,[r2,#9]
 3158 01e2 7868     	 ldr r0,[r7,#4]
 3159 01e4 1146     	 mov r1,r2
 3160 01e6 9847     	 blx r3
 845:../cleanflight/src/main/cms/cms.c ****                 res = BUTTON_PAUSE;
 3161              	 .loc 1 845 0
 3162 01e8 4FF4FA73 	 mov r3,#500
 3163 01ec FB85     	 strh r3,[r7,#46]
 846:../cleanflight/src/main/cms/cms.c ****             }
 847:../cleanflight/src/main/cms/cms.c ****             break;
 3164              	 .loc 1 847 0
 3165 01ee C4E1     	 b .L183
 3166              	.L202:
 3167 01f0 C3E1     	 b .L183
 3168              	.L186:
 848:../cleanflight/src/main/cms/cms.c **** 
 849:../cleanflight/src/main/cms/cms.c ****         case OME_Back:
 850:../cleanflight/src/main/cms/cms.c ****             cmsMenuBack(pDisplay);
 3169              	 .loc 1 850 0
 3170 01f2 7868     	 ldr r0,[r7,#4]
 3171 01f4 FFF7FEFF 	 bl cmsMenuBack
 851:../cleanflight/src/main/cms/cms.c ****             res = BUTTON_PAUSE;
 3172              	 .loc 1 851 0
 3173 01f8 4FF4FA73 	 mov r3,#500
 3174 01fc FB85     	 strh r3,[r7,#46]
 852:../cleanflight/src/main/cms/cms.c ****             break;
 3175              	 .loc 1 852 0
 3176 01fe BCE1     	 b .L183
 3177              	.L190:
 853:../cleanflight/src/main/cms/cms.c **** 
 854:../cleanflight/src/main/cms/cms.c ****         case OME_Bool:
 855:../cleanflight/src/main/cms/cms.c ****             if (p->data) {
 3178              	 .loc 1 855 0
 3179 0200 BB6A     	 ldr r3,[r7,#40]
 3180 0202 D3F80930 	 ldr r3,[r3,#9]
 3181 0206 002B     	 cmp r3,#0
 3182 0208 15D0     	 beq .L203
 3183              	.LBB17:
 856:../cleanflight/src/main/cms/cms.c ****                 uint8_t *val = p->data;
 3184              	 .loc 1 856 0
 3185 020a BB6A     	 ldr r3,[r7,#40]
 3186 020c D3F80930 	 ldr r3,[r3,#9]
 3187 0210 3B62     	 str r3,[r7,#32]
 857:../cleanflight/src/main/cms/cms.c ****                 if (key == KEY_RIGHT)
 3188              	 .loc 1 857 0
 3189 0212 FB78     	 ldrb r3,[r7,#3]
 3190 0214 042B     	 cmp r3,#4
 3191 0216 03D1     	 bne .L204
 858:../cleanflight/src/main/cms/cms.c ****                     *val = 1;
 3192              	 .loc 1 858 0
 3193 0218 3B6A     	 ldr r3,[r7,#32]
 3194 021a 0122     	 movs r2,#1
 3195 021c 1A70     	 strb r2,[r3]
 3196 021e 02E0     	 b .L205
 3197              	.L204:
 859:../cleanflight/src/main/cms/cms.c ****                 else
 860:../cleanflight/src/main/cms/cms.c ****                     *val = 0;
 3198              	 .loc 1 860 0
 3199 0220 3B6A     	 ldr r3,[r7,#32]
 3200 0222 0022     	 movs r2,#0
 3201 0224 1A70     	 strb r2,[r3]
 3202              	.L205:
 861:../cleanflight/src/main/cms/cms.c ****                 SET_PRINTVALUE(p);
 3203              	 .loc 1 861 0
 3204 0226 BB6A     	 ldr r3,[r7,#40]
 3205 0228 5B7B     	 ldrb r3,[r3,#13]
 3206 022a 43F00103 	 orr r3,r3,#1
 3207 022e DAB2     	 uxtb r2,r3
 3208 0230 BB6A     	 ldr r3,[r7,#40]
 3209 0232 5A73     	 strb r2,[r3,#13]
 3210              	.LBE17:
 862:../cleanflight/src/main/cms/cms.c ****             }
 863:../cleanflight/src/main/cms/cms.c ****             break;
 3211              	 .loc 1 863 0
 3212 0234 A1E1     	 b .L183
 3213              	.L203:
 3214 0236 A0E1     	 b .L183
 3215              	.L196:
 864:../cleanflight/src/main/cms/cms.c **** 
 865:../cleanflight/src/main/cms/cms.c **** #ifdef USE_OSD
 866:../cleanflight/src/main/cms/cms.c ****         case OME_VISIBLE:
 867:../cleanflight/src/main/cms/cms.c ****             if (p->data) {
 3216              	 .loc 1 867 0
 3217 0238 BB6A     	 ldr r3,[r7,#40]
 3218 023a D3F80930 	 ldr r3,[r3,#9]
 3219 023e 002B     	 cmp r3,#0
 3220 0240 26D0     	 beq .L206
 3221              	.LBB18:
 868:../cleanflight/src/main/cms/cms.c ****                 uint16_t *val = (uint16_t *)p->data;
 3222              	 .loc 1 868 0
 3223 0242 BB6A     	 ldr r3,[r7,#40]
 3224 0244 D3F80930 	 ldr r3,[r3,#9]
 3225 0248 FB61     	 str r3,[r7,#28]
 869:../cleanflight/src/main/cms/cms.c **** 
 870:../cleanflight/src/main/cms/cms.c ****                 if (key == KEY_RIGHT)
 3226              	 .loc 1 870 0
 3227 024a FB78     	 ldrb r3,[r7,#3]
 3228 024c 042B     	 cmp r3,#4
 3229 024e 07D1     	 bne .L207
 871:../cleanflight/src/main/cms/cms.c ****                     *val |= VISIBLE_FLAG;
 3230              	 .loc 1 871 0
 3231 0250 FB69     	 ldr r3,[r7,#28]
 3232 0252 1B88     	 ldrh r3,[r3]
 3233 0254 43F40063 	 orr r3,r3,#2048
 3234 0258 9AB2     	 uxth r2,r3
 3235 025a FB69     	 ldr r3,[r7,#28]
 3236 025c 1A80     	 strh r2,[r3]
 3237 025e 0FE0     	 b .L208
 3238              	.L207:
 872:../cleanflight/src/main/cms/cms.c ****                 else
 873:../cleanflight/src/main/cms/cms.c ****                     *val %= ~VISIBLE_FLAG;
 3239              	 .loc 1 873 0
 3240 0260 FB69     	 ldr r3,[r7,#28]
 3241 0262 1B88     	 ldrh r3,[r3]
 3242 0264 1946     	 mov r1,r3
 3243 0266 0E4B     	 ldr r3,.L231+12
 3244 0268 83FB0123 	 smull r2,r3,r3,r1
 3245 026c 5A10     	 asrs r2,r3,#1
 3246 026e CB17     	 asrs r3,r1,#31
 3247 0270 D21A     	 subs r2,r2,r3
 3248 0272 1346     	 mov r3,r2
 3249 0274 DB02     	 lsls r3,r3,#11
 3250 0276 1344     	 add r3,r3,r2
 3251 0278 CA1A     	 subs r2,r1,r3
 3252 027a 92B2     	 uxth r2,r2
 3253 027c FB69     	 ldr r3,[r7,#28]
 3254 027e 1A80     	 strh r2,[r3]
 3255              	.L208:
 874:../cleanflight/src/main/cms/cms.c ****                 SET_PRINTVALUE(p);
 3256              	 .loc 1 874 0
 3257 0280 BB6A     	 ldr r3,[r7,#40]
 3258 0282 5B7B     	 ldrb r3,[r3,#13]
 3259 0284 43F00103 	 orr r3,r3,#1
 3260 0288 DAB2     	 uxtb r2,r3
 3261 028a BB6A     	 ldr r3,[r7,#40]
 3262 028c 5A73     	 strb r2,[r3,#13]
 3263              	.LBE18:
 875:../cleanflight/src/main/cms/cms.c ****             }
 876:../cleanflight/src/main/cms/cms.c ****             break;
 3264              	 .loc 1 876 0
 3265 028e 74E1     	 b .L183
 3266              	.L206:
 3267 0290 73E1     	 b .L183
 3268              	.L232:
 3269 0292 00BF     	 .align 2
 3270              	.L231:
 3271 0294 00000000 	 .word currentCtx
 3272 0298 00000000 	 .word pageMaxRow
 3273 029c 00000000 	 .word pageTop
 3274 02a0 01F83F00 	 .word 4192257
 3275              	.L192:
 877:../cleanflight/src/main/cms/cms.c **** #endif
 878:../cleanflight/src/main/cms/cms.c **** 
 879:../cleanflight/src/main/cms/cms.c ****         case OME_UINT8:
 880:../cleanflight/src/main/cms/cms.c ****         case OME_FLOAT:
 881:../cleanflight/src/main/cms/cms.c ****             if (p->data) {
 3276              	 .loc 1 881 0
 3277 02a4 BB6A     	 ldr r3,[r7,#40]
 3278 02a6 D3F80930 	 ldr r3,[r3,#9]
 3279 02aa 002B     	 cmp r3,#0
 3280 02ac 3CD0     	 beq .L209
 3281              	.LBB19:
 882:../cleanflight/src/main/cms/cms.c ****                 OSD_UINT8_t *ptr = p->data;
 3282              	 .loc 1 882 0
 3283 02ae BB6A     	 ldr r3,[r7,#40]
 3284 02b0 D3F80930 	 ldr r3,[r3,#9]
 3285 02b4 BB61     	 str r3,[r7,#24]
 883:../cleanflight/src/main/cms/cms.c ****                 if (key == KEY_RIGHT) {
 3286              	 .loc 1 883 0
 3287 02b6 FB78     	 ldrb r3,[r7,#3]
 3288 02b8 042B     	 cmp r3,#4
 3289 02ba 11D1     	 bne .L210
 884:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val < ptr->max)
 3290              	 .loc 1 884 0
 3291 02bc BB69     	 ldr r3,[r7,#24]
 3292 02be 1B68     	 ldr r3,[r3]
 3293 02c0 1A78     	 ldrb r2,[r3]
 3294 02c2 BB69     	 ldr r3,[r7,#24]
 3295 02c4 5B79     	 ldrb r3,[r3,#5]
 3296 02c6 9A42     	 cmp r2,r3
 3297 02c8 1BD2     	 bcs .L212
 885:../cleanflight/src/main/cms/cms.c ****                         *ptr->val += ptr->step;
 3298              	 .loc 1 885 0
 3299 02ca BB69     	 ldr r3,[r7,#24]
 3300 02cc 1B68     	 ldr r3,[r3]
 3301 02ce BA69     	 ldr r2,[r7,#24]
 3302 02d0 1268     	 ldr r2,[r2]
 3303 02d2 1178     	 ldrb r1,[r2]
 3304 02d4 BA69     	 ldr r2,[r7,#24]
 3305 02d6 9279     	 ldrb r2,[r2,#6]
 3306 02d8 0A44     	 add r2,r2,r1
 3307 02da D2B2     	 uxtb r2,r2
 3308 02dc 1A70     	 strb r2,[r3]
 3309 02de 10E0     	 b .L212
 3310              	.L210:
 886:../cleanflight/src/main/cms/cms.c ****                 }
 887:../cleanflight/src/main/cms/cms.c ****                 else {
 888:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val > ptr->min)
 3311              	 .loc 1 888 0
 3312 02e0 BB69     	 ldr r3,[r7,#24]
 3313 02e2 1B68     	 ldr r3,[r3]
 3314 02e4 1A78     	 ldrb r2,[r3]
 3315 02e6 BB69     	 ldr r3,[r7,#24]
 3316 02e8 1B79     	 ldrb r3,[r3,#4]
 3317 02ea 9A42     	 cmp r2,r3
 3318 02ec 09D9     	 bls .L212
 889:../cleanflight/src/main/cms/cms.c ****                         *ptr->val -= ptr->step;
 3319              	 .loc 1 889 0
 3320 02ee BB69     	 ldr r3,[r7,#24]
 3321 02f0 1B68     	 ldr r3,[r3]
 3322 02f2 BA69     	 ldr r2,[r7,#24]
 3323 02f4 1268     	 ldr r2,[r2]
 3324 02f6 1178     	 ldrb r1,[r2]
 3325 02f8 BA69     	 ldr r2,[r7,#24]
 3326 02fa 9279     	 ldrb r2,[r2,#6]
 3327 02fc 8A1A     	 subs r2,r1,r2
 3328 02fe D2B2     	 uxtb r2,r2
 3329 0300 1A70     	 strb r2,[r3]
 3330              	.L212:
 890:../cleanflight/src/main/cms/cms.c ****                 }
 891:../cleanflight/src/main/cms/cms.c ****                 SET_PRINTVALUE(p);
 3331              	 .loc 1 891 0
 3332 0302 BB6A     	 ldr r3,[r7,#40]
 3333 0304 5B7B     	 ldrb r3,[r3,#13]
 3334 0306 43F00103 	 orr r3,r3,#1
 3335 030a DAB2     	 uxtb r2,r3
 3336 030c BB6A     	 ldr r3,[r7,#40]
 3337 030e 5A73     	 strb r2,[r3,#13]
 892:../cleanflight/src/main/cms/cms.c ****                 if (p->func) {
 3338              	 .loc 1 892 0
 3339 0310 BB6A     	 ldr r3,[r7,#40]
 3340 0312 D3F80530 	 ldr r3,[r3,#5]
 3341 0316 002B     	 cmp r3,#0
 3342 0318 06D0     	 beq .L209
 893:../cleanflight/src/main/cms/cms.c ****                     p->func(pDisplay, p);
 3343              	 .loc 1 893 0
 3344 031a BB6A     	 ldr r3,[r7,#40]
 3345 031c D3F80530 	 ldr r3,[r3,#5]
 3346 0320 7868     	 ldr r0,[r7,#4]
 3347 0322 B96A     	 ldr r1,[r7,#40]
 3348 0324 9847     	 blx r3
 3349              	.LBE19:
 894:../cleanflight/src/main/cms/cms.c ****                 }
 895:../cleanflight/src/main/cms/cms.c ****             }
 896:../cleanflight/src/main/cms/cms.c ****             break;
 3350              	 .loc 1 896 0
 3351 0326 28E1     	 b .L183
 3352              	.L209:
 3353 0328 27E1     	 b .L183
 3354              	.L197:
 897:../cleanflight/src/main/cms/cms.c **** 
 898:../cleanflight/src/main/cms/cms.c ****         case OME_TAB:
 899:../cleanflight/src/main/cms/cms.c ****             if (p->type == OME_TAB) {
 3355              	 .loc 1 899 0
 3356 032a BB6A     	 ldr r3,[r7,#40]
 3357 032c 1B79     	 ldrb r3,[r3,#4]
 3358 032e 0D2B     	 cmp r3,#13
 3359 0330 39D1     	 bne .L213
 3360              	.LBB20:
 900:../cleanflight/src/main/cms/cms.c ****                 OSD_TAB_t *ptr = p->data;
 3361              	 .loc 1 900 0
 3362 0332 BB6A     	 ldr r3,[r7,#40]
 3363 0334 D3F80930 	 ldr r3,[r3,#9]
 3364 0338 7B61     	 str r3,[r7,#20]
 901:../cleanflight/src/main/cms/cms.c **** 
 902:../cleanflight/src/main/cms/cms.c ****                 if (key == KEY_RIGHT) {
 3365              	 .loc 1 902 0
 3366 033a FB78     	 ldrb r3,[r7,#3]
 3367 033c 042B     	 cmp r3,#4
 3368 033e 0FD1     	 bne .L214
 903:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val < ptr->max)
 3369              	 .loc 1 903 0
 3370 0340 7B69     	 ldr r3,[r7,#20]
 3371 0342 1B68     	 ldr r3,[r3]
 3372 0344 1A78     	 ldrb r2,[r3]
 3373 0346 7B69     	 ldr r3,[r7,#20]
 3374 0348 1B79     	 ldrb r3,[r3,#4]
 3375 034a 9A42     	 cmp r2,r3
 3376 034c 15D2     	 bcs .L216
 904:../cleanflight/src/main/cms/cms.c ****                         *ptr->val += 1;
 3377              	 .loc 1 904 0
 3378 034e 7B69     	 ldr r3,[r7,#20]
 3379 0350 1B68     	 ldr r3,[r3]
 3380 0352 7A69     	 ldr r2,[r7,#20]
 3381 0354 1268     	 ldr r2,[r2]
 3382 0356 1278     	 ldrb r2,[r2]
 3383 0358 0132     	 adds r2,r2,#1
 3384 035a D2B2     	 uxtb r2,r2
 3385 035c 1A70     	 strb r2,[r3]
 3386 035e 0CE0     	 b .L216
 3387              	.L214:
 905:../cleanflight/src/main/cms/cms.c ****                 }
 906:../cleanflight/src/main/cms/cms.c ****                 else {
 907:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val > 0)
 3388              	 .loc 1 907 0
 3389 0360 7B69     	 ldr r3,[r7,#20]
 3390 0362 1B68     	 ldr r3,[r3]
 3391 0364 1B78     	 ldrb r3,[r3]
 3392 0366 002B     	 cmp r3,#0
 3393 0368 07D0     	 beq .L216
 908:../cleanflight/src/main/cms/cms.c ****                         *ptr->val -= 1;
 3394              	 .loc 1 908 0
 3395 036a 7B69     	 ldr r3,[r7,#20]
 3396 036c 1B68     	 ldr r3,[r3]
 3397 036e 7A69     	 ldr r2,[r7,#20]
 3398 0370 1268     	 ldr r2,[r2]
 3399 0372 1278     	 ldrb r2,[r2]
 3400 0374 013A     	 subs r2,r2,#1
 3401 0376 D2B2     	 uxtb r2,r2
 3402 0378 1A70     	 strb r2,[r3]
 3403              	.L216:
 909:../cleanflight/src/main/cms/cms.c ****                 }
 910:../cleanflight/src/main/cms/cms.c ****                 if (p->func)
 3404              	 .loc 1 910 0
 3405 037a BB6A     	 ldr r3,[r7,#40]
 3406 037c D3F80530 	 ldr r3,[r3,#5]
 3407 0380 002B     	 cmp r3,#0
 3408 0382 08D0     	 beq .L217
 911:../cleanflight/src/main/cms/cms.c ****                     p->func(pDisplay, p->data);
 3409              	 .loc 1 911 0
 3410 0384 BB6A     	 ldr r3,[r7,#40]
 3411 0386 D3F80530 	 ldr r3,[r3,#5]
 3412 038a BA6A     	 ldr r2,[r7,#40]
 3413 038c D2F80920 	 ldr r2,[r2,#9]
 3414 0390 7868     	 ldr r0,[r7,#4]
 3415 0392 1146     	 mov r1,r2
 3416 0394 9847     	 blx r3
 3417              	.L217:
 912:../cleanflight/src/main/cms/cms.c ****                 SET_PRINTVALUE(p);
 3418              	 .loc 1 912 0
 3419 0396 BB6A     	 ldr r3,[r7,#40]
 3420 0398 5B7B     	 ldrb r3,[r3,#13]
 3421 039a 43F00103 	 orr r3,r3,#1
 3422 039e DAB2     	 uxtb r2,r3
 3423 03a0 BB6A     	 ldr r3,[r7,#40]
 3424 03a2 5A73     	 strb r2,[r3,#13]
 3425              	.LBE20:
 913:../cleanflight/src/main/cms/cms.c ****             }
 914:../cleanflight/src/main/cms/cms.c ****             break;
 3426              	 .loc 1 914 0
 3427 03a4 E9E0     	 b .L183
 3428              	.L213:
 3429 03a6 E8E0     	 b .L183
 3430              	.L191:
 915:../cleanflight/src/main/cms/cms.c **** 
 916:../cleanflight/src/main/cms/cms.c ****         case OME_INT8:
 917:../cleanflight/src/main/cms/cms.c ****             if (p->data) {
 3431              	 .loc 1 917 0
 3432 03a8 BB6A     	 ldr r3,[r7,#40]
 3433 03aa D3F80930 	 ldr r3,[r3,#9]
 3434 03ae 002B     	 cmp r3,#0
 3435 03b0 46D0     	 beq .L218
 3436              	.LBB21:
 918:../cleanflight/src/main/cms/cms.c ****                 OSD_INT8_t *ptr = p->data;
 3437              	 .loc 1 918 0
 3438 03b2 BB6A     	 ldr r3,[r7,#40]
 3439 03b4 D3F80930 	 ldr r3,[r3,#9]
 3440 03b8 3B61     	 str r3,[r7,#16]
 919:../cleanflight/src/main/cms/cms.c ****                 if (key == KEY_RIGHT) {
 3441              	 .loc 1 919 0
 3442 03ba FB78     	 ldrb r3,[r7,#3]
 3443 03bc 042B     	 cmp r3,#4
 3444 03be 16D1     	 bne .L219
 920:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val < ptr->max)
 3445              	 .loc 1 920 0
 3446 03c0 3B69     	 ldr r3,[r7,#16]
 3447 03c2 1B68     	 ldr r3,[r3]
 3448 03c4 1A78     	 ldrb r2,[r3]
 3449 03c6 3B69     	 ldr r3,[r7,#16]
 3450 03c8 5B79     	 ldrb r3,[r3,#5]
 3451 03ca 52B2     	 sxtb r2,r2
 3452 03cc 5BB2     	 sxtb r3,r3
 3453 03ce 9A42     	 cmp r2,r3
 3454 03d0 23DA     	 bge .L221
 921:../cleanflight/src/main/cms/cms.c ****                         *ptr->val += ptr->step;
 3455              	 .loc 1 921 0
 3456 03d2 3B69     	 ldr r3,[r7,#16]
 3457 03d4 1B68     	 ldr r3,[r3]
 3458 03d6 3A69     	 ldr r2,[r7,#16]
 3459 03d8 1268     	 ldr r2,[r2]
 3460 03da 1278     	 ldrb r2,[r2]
 3461 03dc D1B2     	 uxtb r1,r2
 3462 03de 3A69     	 ldr r2,[r7,#16]
 3463 03e0 9279     	 ldrb r2,[r2,#6]
 3464 03e2 D2B2     	 uxtb r2,r2
 3465 03e4 0A44     	 add r2,r2,r1
 3466 03e6 D2B2     	 uxtb r2,r2
 3467 03e8 D2B2     	 uxtb r2,r2
 3468 03ea 1A70     	 strb r2,[r3]
 3469 03ec 15E0     	 b .L221
 3470              	.L219:
 922:../cleanflight/src/main/cms/cms.c ****                 }
 923:../cleanflight/src/main/cms/cms.c ****                 else {
 924:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val > ptr->min)
 3471              	 .loc 1 924 0
 3472 03ee 3B69     	 ldr r3,[r7,#16]
 3473 03f0 1B68     	 ldr r3,[r3]
 3474 03f2 1A78     	 ldrb r2,[r3]
 3475 03f4 3B69     	 ldr r3,[r7,#16]
 3476 03f6 1B79     	 ldrb r3,[r3,#4]
 3477 03f8 52B2     	 sxtb r2,r2
 3478 03fa 5BB2     	 sxtb r3,r3
 3479 03fc 9A42     	 cmp r2,r3
 3480 03fe 0CDD     	 ble .L221
 925:../cleanflight/src/main/cms/cms.c ****                         *ptr->val -= ptr->step;
 3481              	 .loc 1 925 0
 3482 0400 3B69     	 ldr r3,[r7,#16]
 3483 0402 1B68     	 ldr r3,[r3]
 3484 0404 3A69     	 ldr r2,[r7,#16]
 3485 0406 1268     	 ldr r2,[r2]
 3486 0408 1278     	 ldrb r2,[r2]
 3487 040a D1B2     	 uxtb r1,r2
 3488 040c 3A69     	 ldr r2,[r7,#16]
 3489 040e 9279     	 ldrb r2,[r2,#6]
 3490 0410 D2B2     	 uxtb r2,r2
 3491 0412 8A1A     	 subs r2,r1,r2
 3492 0414 D2B2     	 uxtb r2,r2
 3493 0416 D2B2     	 uxtb r2,r2
 3494 0418 1A70     	 strb r2,[r3]
 3495              	.L221:
 926:../cleanflight/src/main/cms/cms.c ****                 }
 927:../cleanflight/src/main/cms/cms.c ****                 SET_PRINTVALUE(p);
 3496              	 .loc 1 927 0
 3497 041a BB6A     	 ldr r3,[r7,#40]
 3498 041c 5B7B     	 ldrb r3,[r3,#13]
 3499 041e 43F00103 	 orr r3,r3,#1
 3500 0422 DAB2     	 uxtb r2,r3
 3501 0424 BB6A     	 ldr r3,[r7,#40]
 3502 0426 5A73     	 strb r2,[r3,#13]
 928:../cleanflight/src/main/cms/cms.c ****                 if (p->func) {
 3503              	 .loc 1 928 0
 3504 0428 BB6A     	 ldr r3,[r7,#40]
 3505 042a D3F80530 	 ldr r3,[r3,#5]
 3506 042e 002B     	 cmp r3,#0
 3507 0430 06D0     	 beq .L218
 929:../cleanflight/src/main/cms/cms.c ****                     p->func(pDisplay, p);
 3508              	 .loc 1 929 0
 3509 0432 BB6A     	 ldr r3,[r7,#40]
 3510 0434 D3F80530 	 ldr r3,[r3,#5]
 3511 0438 7868     	 ldr r0,[r7,#4]
 3512 043a B96A     	 ldr r1,[r7,#40]
 3513 043c 9847     	 blx r3
 3514              	.LBE21:
 930:../cleanflight/src/main/cms/cms.c ****                 }
 931:../cleanflight/src/main/cms/cms.c ****             }
 932:../cleanflight/src/main/cms/cms.c ****             break;
 3515              	 .loc 1 932 0
 3516 043e 9CE0     	 b .L183
 3517              	.L218:
 3518 0440 9BE0     	 b .L183
 3519              	.L193:
 933:../cleanflight/src/main/cms/cms.c **** 
 934:../cleanflight/src/main/cms/cms.c ****         case OME_UINT16:
 935:../cleanflight/src/main/cms/cms.c ****             if (p->data) {
 3520              	 .loc 1 935 0
 3521 0442 BB6A     	 ldr r3,[r7,#40]
 3522 0444 D3F80930 	 ldr r3,[r3,#9]
 3523 0448 002B     	 cmp r3,#0
 3524 044a 40D0     	 beq .L222
 3525              	.LBB22:
 936:../cleanflight/src/main/cms/cms.c ****                 OSD_UINT16_t *ptr = p->data;
 3526              	 .loc 1 936 0
 3527 044c BB6A     	 ldr r3,[r7,#40]
 3528 044e D3F80930 	 ldr r3,[r3,#9]
 3529 0452 FB60     	 str r3,[r7,#12]
 937:../cleanflight/src/main/cms/cms.c ****                 if (key == KEY_RIGHT) {
 3530              	 .loc 1 937 0
 3531 0454 FB78     	 ldrb r3,[r7,#3]
 3532 0456 042B     	 cmp r3,#4
 3533 0458 13D1     	 bne .L223
 938:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val < ptr->max)
 3534              	 .loc 1 938 0
 3535 045a FB68     	 ldr r3,[r7,#12]
 3536 045c 1B68     	 ldr r3,[r3]
 3537 045e 1A88     	 ldrh r2,[r3]
 3538 0460 FB68     	 ldr r3,[r7,#12]
 3539 0462 DB88     	 ldrh r3,[r3,#6]
 3540 0464 9BB2     	 uxth r3,r3
 3541 0466 9A42     	 cmp r2,r3
 3542 0468 1ED2     	 bcs .L225
 939:../cleanflight/src/main/cms/cms.c ****                         *ptr->val += ptr->step;
 3543              	 .loc 1 939 0
 3544 046a FB68     	 ldr r3,[r7,#12]
 3545 046c 1B68     	 ldr r3,[r3]
 3546 046e FA68     	 ldr r2,[r7,#12]
 3547 0470 1268     	 ldr r2,[r2]
 3548 0472 1188     	 ldrh r1,[r2]
 3549 0474 FA68     	 ldr r2,[r7,#12]
 3550 0476 1289     	 ldrh r2,[r2,#8]
 3551 0478 92B2     	 uxth r2,r2
 3552 047a 0A44     	 add r2,r2,r1
 3553 047c 92B2     	 uxth r2,r2
 3554 047e 1A80     	 strh r2,[r3]
 3555 0480 12E0     	 b .L225
 3556              	.L223:
 940:../cleanflight/src/main/cms/cms.c ****                 }
 941:../cleanflight/src/main/cms/cms.c ****                 else {
 942:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val > ptr->min)
 3557              	 .loc 1 942 0
 3558 0482 FB68     	 ldr r3,[r7,#12]
 3559 0484 1B68     	 ldr r3,[r3]
 3560 0486 1A88     	 ldrh r2,[r3]
 3561 0488 FB68     	 ldr r3,[r7,#12]
 3562 048a 9B88     	 ldrh r3,[r3,#4]
 3563 048c 9BB2     	 uxth r3,r3
 3564 048e 9A42     	 cmp r2,r3
 3565 0490 0AD9     	 bls .L225
 943:../cleanflight/src/main/cms/cms.c ****                         *ptr->val -= ptr->step;
 3566              	 .loc 1 943 0
 3567 0492 FB68     	 ldr r3,[r7,#12]
 3568 0494 1B68     	 ldr r3,[r3]
 3569 0496 FA68     	 ldr r2,[r7,#12]
 3570 0498 1268     	 ldr r2,[r2]
 3571 049a 1188     	 ldrh r1,[r2]
 3572 049c FA68     	 ldr r2,[r7,#12]
 3573 049e 1289     	 ldrh r2,[r2,#8]
 3574 04a0 92B2     	 uxth r2,r2
 3575 04a2 8A1A     	 subs r2,r1,r2
 3576 04a4 92B2     	 uxth r2,r2
 3577 04a6 1A80     	 strh r2,[r3]
 3578              	.L225:
 944:../cleanflight/src/main/cms/cms.c ****                 }
 945:../cleanflight/src/main/cms/cms.c ****                 SET_PRINTVALUE(p);
 3579              	 .loc 1 945 0
 3580 04a8 BB6A     	 ldr r3,[r7,#40]
 3581 04aa 5B7B     	 ldrb r3,[r3,#13]
 3582 04ac 43F00103 	 orr r3,r3,#1
 3583 04b0 DAB2     	 uxtb r2,r3
 3584 04b2 BB6A     	 ldr r3,[r7,#40]
 3585 04b4 5A73     	 strb r2,[r3,#13]
 946:../cleanflight/src/main/cms/cms.c ****                 if (p->func) {
 3586              	 .loc 1 946 0
 3587 04b6 BB6A     	 ldr r3,[r7,#40]
 3588 04b8 D3F80530 	 ldr r3,[r3,#5]
 3589 04bc 002B     	 cmp r3,#0
 3590 04be 06D0     	 beq .L222
 947:../cleanflight/src/main/cms/cms.c ****                     p->func(pDisplay, p);
 3591              	 .loc 1 947 0
 3592 04c0 BB6A     	 ldr r3,[r7,#40]
 3593 04c2 D3F80530 	 ldr r3,[r3,#5]
 3594 04c6 7868     	 ldr r0,[r7,#4]
 3595 04c8 B96A     	 ldr r1,[r7,#40]
 3596 04ca 9847     	 blx r3
 3597              	.LBE22:
 948:../cleanflight/src/main/cms/cms.c ****                 }
 949:../cleanflight/src/main/cms/cms.c ****             }
 950:../cleanflight/src/main/cms/cms.c ****             break;
 3598              	 .loc 1 950 0
 3599 04cc 55E0     	 b .L183
 3600              	.L222:
 3601 04ce 54E0     	 b .L183
 3602              	.L194:
 951:../cleanflight/src/main/cms/cms.c **** 
 952:../cleanflight/src/main/cms/cms.c ****         case OME_INT16:
 953:../cleanflight/src/main/cms/cms.c ****             if (p->data) {
 3603              	 .loc 1 953 0
 3604 04d0 BB6A     	 ldr r3,[r7,#40]
 3605 04d2 D3F80930 	 ldr r3,[r3,#9]
 3606 04d6 002B     	 cmp r3,#0
 3607 04d8 4ED0     	 beq .L226
 3608              	.LBB23:
 954:../cleanflight/src/main/cms/cms.c ****                 OSD_INT16_t *ptr = p->data;
 3609              	 .loc 1 954 0
 3610 04da BB6A     	 ldr r3,[r7,#40]
 3611 04dc D3F80930 	 ldr r3,[r3,#9]
 3612 04e0 BB60     	 str r3,[r7,#8]
 955:../cleanflight/src/main/cms/cms.c ****                 if (key == KEY_RIGHT) {
 3613              	 .loc 1 955 0
 3614 04e2 FB78     	 ldrb r3,[r7,#3]
 3615 04e4 042B     	 cmp r3,#4
 3616 04e6 1AD1     	 bne .L227
 956:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val < ptr->max)
 3617              	 .loc 1 956 0
 3618 04e8 BB68     	 ldr r3,[r7,#8]
 3619 04ea 1B68     	 ldr r3,[r3]
 3620 04ec 1A88     	 ldrh r2,[r3]
 3621 04ee BB68     	 ldr r3,[r7,#8]
 3622 04f0 B3F90630 	 ldrsh r3,[r3,#6]
 3623 04f4 9BB2     	 uxth r3,r3
 3624 04f6 12B2     	 sxth r2,r2
 3625 04f8 1BB2     	 sxth r3,r3
 3626 04fa 9A42     	 cmp r2,r3
 3627 04fc 29DA     	 bge .L229
 957:../cleanflight/src/main/cms/cms.c ****                         *ptr->val += ptr->step;
 3628              	 .loc 1 957 0
 3629 04fe BB68     	 ldr r3,[r7,#8]
 3630 0500 1B68     	 ldr r3,[r3]
 3631 0502 BA68     	 ldr r2,[r7,#8]
 3632 0504 1268     	 ldr r2,[r2]
 3633 0506 1288     	 ldrh r2,[r2]
 3634 0508 91B2     	 uxth r1,r2
 3635 050a BA68     	 ldr r2,[r7,#8]
 3636 050c B2F90820 	 ldrsh r2,[r2,#8]
 3637 0510 92B2     	 uxth r2,r2
 3638 0512 92B2     	 uxth r2,r2
 3639 0514 0A44     	 add r2,r2,r1
 3640 0516 92B2     	 uxth r2,r2
 3641 0518 92B2     	 uxth r2,r2
 3642 051a 1A80     	 strh r2,[r3]
 3643 051c 19E0     	 b .L229
 3644              	.L227:
 958:../cleanflight/src/main/cms/cms.c ****                 }
 959:../cleanflight/src/main/cms/cms.c ****                 else {
 960:../cleanflight/src/main/cms/cms.c ****                     if (*ptr->val > ptr->min)
 3645              	 .loc 1 960 0
 3646 051e BB68     	 ldr r3,[r7,#8]
 3647 0520 1B68     	 ldr r3,[r3]
 3648 0522 1A88     	 ldrh r2,[r3]
 3649 0524 BB68     	 ldr r3,[r7,#8]
 3650 0526 B3F90430 	 ldrsh r3,[r3,#4]
 3651 052a 9BB2     	 uxth r3,r3
 3652 052c 12B2     	 sxth r2,r2
 3653 052e 1BB2     	 sxth r3,r3
 3654 0530 9A42     	 cmp r2,r3
 3655 0532 0EDD     	 ble .L229
 961:../cleanflight/src/main/cms/cms.c ****                         *ptr->val -= ptr->step;
 3656              	 .loc 1 961 0
 3657 0534 BB68     	 ldr r3,[r7,#8]
 3658 0536 1B68     	 ldr r3,[r3]
 3659 0538 BA68     	 ldr r2,[r7,#8]
 3660 053a 1268     	 ldr r2,[r2]
 3661 053c 1288     	 ldrh r2,[r2]
 3662 053e 91B2     	 uxth r1,r2
 3663 0540 BA68     	 ldr r2,[r7,#8]
 3664 0542 B2F90820 	 ldrsh r2,[r2,#8]
 3665 0546 92B2     	 uxth r2,r2
 3666 0548 92B2     	 uxth r2,r2
 3667 054a 8A1A     	 subs r2,r1,r2
 3668 054c 92B2     	 uxth r2,r2
 3669 054e 92B2     	 uxth r2,r2
 3670 0550 1A80     	 strh r2,[r3]
 3671              	.L229:
 962:../cleanflight/src/main/cms/cms.c ****                 }
 963:../cleanflight/src/main/cms/cms.c ****                 SET_PRINTVALUE(p);
 3672              	 .loc 1 963 0
 3673 0552 BB6A     	 ldr r3,[r7,#40]
 3674 0554 5B7B     	 ldrb r3,[r3,#13]
 3675 0556 43F00103 	 orr r3,r3,#1
 3676 055a DAB2     	 uxtb r2,r3
 3677 055c BB6A     	 ldr r3,[r7,#40]
 3678 055e 5A73     	 strb r2,[r3,#13]
 964:../cleanflight/src/main/cms/cms.c ****                 if (p->func) {
 3679              	 .loc 1 964 0
 3680 0560 BB6A     	 ldr r3,[r7,#40]
 3681 0562 D3F80530 	 ldr r3,[r3,#5]
 3682 0566 002B     	 cmp r3,#0
 3683 0568 06D0     	 beq .L226
 965:../cleanflight/src/main/cms/cms.c ****                     p->func(pDisplay, p);
 3684              	 .loc 1 965 0
 3685 056a BB6A     	 ldr r3,[r7,#40]
 3686 056c D3F80530 	 ldr r3,[r3,#5]
 3687 0570 7868     	 ldr r0,[r7,#4]
 3688 0572 B96A     	 ldr r1,[r7,#40]
 3689 0574 9847     	 blx r3
 3690              	.LBE23:
 966:../cleanflight/src/main/cms/cms.c ****                 }
 967:../cleanflight/src/main/cms/cms.c ****             }
 968:../cleanflight/src/main/cms/cms.c ****             break;
 3691              	 .loc 1 968 0
 3692 0576 FFE7     	 b .L230
 3693              	.L226:
 3694              	.L230:
 3695 0578 00BF     	 nop
 3696              	.L183:
 3697              	.LBE16:
 969:../cleanflight/src/main/cms/cms.c **** 
 970:../cleanflight/src/main/cms/cms.c ****         case OME_String:
 971:../cleanflight/src/main/cms/cms.c ****             break;
 972:../cleanflight/src/main/cms/cms.c **** 
 973:../cleanflight/src/main/cms/cms.c ****         case OME_Label:
 974:../cleanflight/src/main/cms/cms.c ****         case OME_END:
 975:../cleanflight/src/main/cms/cms.c ****             break;
 976:../cleanflight/src/main/cms/cms.c **** 
 977:../cleanflight/src/main/cms/cms.c ****         case OME_MENU:
 978:../cleanflight/src/main/cms/cms.c ****             // Shouldn't happen
 979:../cleanflight/src/main/cms/cms.c ****             break;
 980:../cleanflight/src/main/cms/cms.c ****     }
 981:../cleanflight/src/main/cms/cms.c ****     return res;
 3698              	 .loc 1 981 0
 3699 057a FB8D     	 ldrh r3,[r7,#46]
 3700              	.L173:
 982:../cleanflight/src/main/cms/cms.c **** }
 3701              	 .loc 1 982 0
 3702 057c 1846     	 mov r0,r3
 3703 057e 3037     	 adds r7,r7,#48
 3704              	.LCFI110:
 3705              	 .cfi_def_cfa_offset 8
 3706 0580 BD46     	 mov sp,r7
 3707              	.LCFI111:
 3708              	 .cfi_def_cfa_register 13
 3709              	 
 3710 0582 80BD     	 pop {r7,pc}
 3711              	 .cfi_endproc
 3712              	.LFE584:
 3714              	 .section .text.cmsHandleKeyWithRepeat,"ax",%progbits
 3715              	 .align 2
 3716              	 .global cmsHandleKeyWithRepeat
 3717              	 .thumb
 3718              	 .thumb_func
 3720              	cmsHandleKeyWithRepeat:
 3721              	.LFB585:
 983:../cleanflight/src/main/cms/cms.c **** 
 984:../cleanflight/src/main/cms/cms.c **** uint16_t cmsHandleKeyWithRepeat(displayPort_t *pDisplay, uint8_t key, int repeatCount)
 985:../cleanflight/src/main/cms/cms.c **** {
 3722              	 .loc 1 985 0
 3723              	 .cfi_startproc
 3724              	 
 3725              	 
 3726 0000 80B5     	 push {r7,lr}
 3727              	.LCFI112:
 3728              	 .cfi_def_cfa_offset 8
 3729              	 .cfi_offset 7,-8
 3730              	 .cfi_offset 14,-4
 3731 0002 86B0     	 sub sp,sp,#24
 3732              	.LCFI113:
 3733              	 .cfi_def_cfa_offset 32
 3734 0004 00AF     	 add r7,sp,#0
 3735              	.LCFI114:
 3736              	 .cfi_def_cfa_register 7
 3737 0006 F860     	 str r0,[r7,#12]
 3738 0008 0B46     	 mov r3,r1
 3739 000a 7A60     	 str r2,[r7,#4]
 3740 000c FB72     	 strb r3,[r7,#11]
 986:../cleanflight/src/main/cms/cms.c ****     uint16_t ret = 0;
 3741              	 .loc 1 986 0
 3742 000e 0023     	 movs r3,#0
 3743 0010 FB82     	 strh r3,[r7,#22]
 3744              	.LBB24:
 987:../cleanflight/src/main/cms/cms.c **** 
 988:../cleanflight/src/main/cms/cms.c ****     for (int i = 0 ; i < repeatCount ; i++) {
 3745              	 .loc 1 988 0
 3746 0012 0023     	 movs r3,#0
 3747 0014 3B61     	 str r3,[r7,#16]
 3748 0016 09E0     	 b .L234
 3749              	.L235:
 989:../cleanflight/src/main/cms/cms.c ****         ret = cmsHandleKey(pDisplay, key);
 3750              	 .loc 1 989 0 discriminator 3
 3751 0018 FB7A     	 ldrb r3,[r7,#11]
 3752 001a F868     	 ldr r0,[r7,#12]
 3753 001c 1946     	 mov r1,r3
 3754 001e FFF7FEFF 	 bl cmsHandleKey
 3755 0022 0346     	 mov r3,r0
 3756 0024 FB82     	 strh r3,[r7,#22]
 988:../cleanflight/src/main/cms/cms.c ****         ret = cmsHandleKey(pDisplay, key);
 3757              	 .loc 1 988 0 discriminator 3
 3758 0026 3B69     	 ldr r3,[r7,#16]
 3759 0028 0133     	 adds r3,r3,#1
 3760 002a 3B61     	 str r3,[r7,#16]
 3761              	.L234:
 988:../cleanflight/src/main/cms/cms.c ****         ret = cmsHandleKey(pDisplay, key);
 3762              	 .loc 1 988 0 is_stmt 0 discriminator 1
 3763 002c 3A69     	 ldr r2,[r7,#16]
 3764 002e 7B68     	 ldr r3,[r7,#4]
 3765 0030 9A42     	 cmp r2,r3
 3766 0032 F1DB     	 blt .L235
 3767              	.LBE24:
 990:../cleanflight/src/main/cms/cms.c ****     }
 991:../cleanflight/src/main/cms/cms.c **** 
 992:../cleanflight/src/main/cms/cms.c ****     return ret;
 3768              	 .loc 1 992 0 is_stmt 1
 3769 0034 FB8A     	 ldrh r3,[r7,#22]
 993:../cleanflight/src/main/cms/cms.c **** }
 3770              	 .loc 1 993 0
 3771 0036 1846     	 mov r0,r3
 3772 0038 1837     	 adds r7,r7,#24
 3773              	.LCFI115:
 3774              	 .cfi_def_cfa_offset 8
 3775 003a BD46     	 mov sp,r7
 3776              	.LCFI116:
 3777              	 .cfi_def_cfa_register 13
 3778              	 
 3779 003c 80BD     	 pop {r7,pc}
 3780              	 .cfi_endproc
 3781              	.LFE585:
 3783 003e 00BF     	 .section .text.cmsUpdate,"ax",%progbits
 3784              	 .align 2
 3785              	 .global cmsUpdate
 3786              	 .thumb
 3787              	 .thumb_func
 3789              	cmsUpdate:
 3790              	.LFB586:
 994:../cleanflight/src/main/cms/cms.c **** 
 995:../cleanflight/src/main/cms/cms.c **** void cmsUpdate(uint32_t currentTimeUs)
 996:../cleanflight/src/main/cms/cms.c **** {
 3791              	 .loc 1 996 0
 3792              	 .cfi_startproc
 3793              	 
 3794              	 
 3795 0000 80B5     	 push {r7,lr}
 3796              	.LCFI117:
 3797              	 .cfi_def_cfa_offset 8
 3798              	 .cfi_offset 7,-8
 3799              	 .cfi_offset 14,-4
 3800 0002 84B0     	 sub sp,sp,#16
 3801              	.LCFI118:
 3802              	 .cfi_def_cfa_offset 24
 3803 0004 00AF     	 add r7,sp,#0
 3804              	.LCFI119:
 3805              	 .cfi_def_cfa_register 7
 3806 0006 7860     	 str r0,[r7,#4]
 997:../cleanflight/src/main/cms/cms.c **** #ifdef USE_RCDEVICE
 998:../cleanflight/src/main/cms/cms.c ****     if(rcdeviceInMenu) {
 3807              	 .loc 1 998 0
 3808 0008 964B     	 ldr r3,.L256
 3809 000a 1B78     	 ldrb r3,[r3]
 3810 000c 002B     	 cmp r3,#0
 3811 000e 00D0     	 beq .L238
 999:../cleanflight/src/main/cms/cms.c ****         return ;
 3812              	 .loc 1 999 0
 3813 0010 24E1     	 b .L237
 3814              	.L238:
1000:../cleanflight/src/main/cms/cms.c ****     }
1001:../cleanflight/src/main/cms/cms.c **** #endif
1002:../cleanflight/src/main/cms/cms.c **** #ifdef USE_USB_CDC_HID
1003:../cleanflight/src/main/cms/cms.c ****     if (getBatteryCellCount() == 0 && usbDevConfig()->type == COMPOSITE) {
1004:../cleanflight/src/main/cms/cms.c ****         return;
1005:../cleanflight/src/main/cms/cms.c ****     }
1006:../cleanflight/src/main/cms/cms.c **** #endif
1007:../cleanflight/src/main/cms/cms.c **** 
1008:../cleanflight/src/main/cms/cms.c ****     static int16_t rcDelayMs = BUTTON_TIME;
1009:../cleanflight/src/main/cms/cms.c ****     static int holdCount = 1;
1010:../cleanflight/src/main/cms/cms.c ****     static int repeatCount = 1;
1011:../cleanflight/src/main/cms/cms.c ****     static int repeatBase = 0;
1012:../cleanflight/src/main/cms/cms.c **** 
1013:../cleanflight/src/main/cms/cms.c ****     static uint32_t lastCalledMs = 0;
1014:../cleanflight/src/main/cms/cms.c ****     static uint32_t lastCmsHeartBeatMs = 0;
1015:../cleanflight/src/main/cms/cms.c **** 
1016:../cleanflight/src/main/cms/cms.c ****     const uint32_t currentTimeMs = currentTimeUs / 1000;
 3815              	 .loc 1 1016 0
 3816 0012 7B68     	 ldr r3,[r7,#4]
 3817 0014 944A     	 ldr r2,.L256+4
 3818 0016 A2FB0323 	 umull r2,r3,r2,r3
 3819 001a 9B09     	 lsrs r3,r3,#6
 3820 001c BB60     	 str r3,[r7,#8]
1017:../cleanflight/src/main/cms/cms.c **** 
1018:../cleanflight/src/main/cms/cms.c ****     if (!cmsInMenu) {
 3821              	 .loc 1 1018 0
 3822 001e 934B     	 ldr r3,.L256+8
 3823 0020 1B78     	 ldrb r3,[r3]
 3824 0022 83F00103 	 eor r3,r3,#1
 3825 0026 DBB2     	 uxtb r3,r3
 3826 0028 002B     	 cmp r3,#0
 3827 002a 2DD0     	 beq .L240
1019:../cleanflight/src/main/cms/cms.c ****         // Detect menu invocation
1020:../cleanflight/src/main/cms/cms.c ****         if (IS_MID(THROTTLE) && IS_LO(YAW) && IS_HI(PITCH) && !ARMING_FLAG(ARMED)) {
 3828              	 .loc 1 1020 0
 3829 002c 904B     	 ldr r3,.L256+12
 3830 002e DB88     	 ldrh r3,[r3,#6]
 3831 0030 1BB2     	 sxth r3,r3
 3832 0032 40F2E242 	 movw r2,#1250
 3833 0036 9342     	 cmp r3,r2
 3834 0038 40F30B81 	 ble .L242
 3835              	 .loc 1 1020 0 is_stmt 0 discriminator 1
 3836 003c 8C4B     	 ldr r3,.L256+12
 3837 003e DB88     	 ldrh r3,[r3,#6]
 3838 0040 1BB2     	 sxth r3,r3
 3839 0042 40F2D562 	 movw r2,#1749
 3840 0046 9342     	 cmp r3,r2
 3841 0048 00F30381 	 bgt .L242
 3842              	 .loc 1 1020 0 discriminator 2
 3843 004c 884B     	 ldr r3,.L256+12
 3844 004e 9B88     	 ldrh r3,[r3,#4]
 3845 0050 1BB2     	 sxth r3,r3
 3846 0052 40F2E142 	 movw r2,#1249
 3847 0056 9342     	 cmp r3,r2
 3848 0058 00F3FB80 	 bgt .L242
 3849              	 .loc 1 1020 0 discriminator 3
 3850 005c 844B     	 ldr r3,.L256+12
 3851 005e 5B88     	 ldrh r3,[r3,#2]
 3852 0060 1BB2     	 sxth r3,r3
 3853 0062 40F2D662 	 movw r2,#1750
 3854 0066 9342     	 cmp r3,r2
 3855 0068 40F3F380 	 ble .L242
 3856              	 .loc 1 1020 0 discriminator 4
 3857 006c 814B     	 ldr r3,.L256+16
 3858 006e 1B78     	 ldrb r3,[r3]
 3859 0070 03F00103 	 and r3,r3,#1
 3860 0074 002B     	 cmp r3,#0
 3861 0076 40F0EC80 	 bne .L242
1021:../cleanflight/src/main/cms/cms.c ****             cmsMenuOpen();
 3862              	 .loc 1 1021 0 is_stmt 1
 3863 007a FFF7FEFF 	 bl cmsMenuOpen
1022:../cleanflight/src/main/cms/cms.c ****             rcDelayMs = BUTTON_PAUSE;    // Tends to overshoot if BUTTON_TIME
 3864              	 .loc 1 1022 0
 3865 007e 7E4B     	 ldr r3,.L256+20
 3866 0080 4FF4FA72 	 mov r2,#500
 3867 0084 1A80     	 strh r2,[r3]
 3868 0086 E4E0     	 b .L242
 3869              	.L240:
 3870              	.LBB25:
1023:../cleanflight/src/main/cms/cms.c ****         }
1024:../cleanflight/src/main/cms/cms.c ****     } else {
1025:../cleanflight/src/main/cms/cms.c ****         //
1026:../cleanflight/src/main/cms/cms.c ****         // Scan 'key' first
1027:../cleanflight/src/main/cms/cms.c ****         //
1028:../cleanflight/src/main/cms/cms.c **** 
1029:../cleanflight/src/main/cms/cms.c ****         uint8_t key = KEY_NONE;
 3871              	 .loc 1 1029 0
 3872 0088 0023     	 movs r3,#0
 3873 008a FB73     	 strb r3,[r7,#15]
1030:../cleanflight/src/main/cms/cms.c **** 
1031:../cleanflight/src/main/cms/cms.c ****         if (IS_MID(THROTTLE) && IS_LO(YAW) && IS_HI(PITCH) && !ARMING_FLAG(ARMED)) {
 3874              	 .loc 1 1031 0
 3875 008c 784B     	 ldr r3,.L256+12
 3876 008e DB88     	 ldrh r3,[r3,#6]
 3877 0090 1BB2     	 sxth r3,r3
 3878 0092 40F2E242 	 movw r2,#1250
 3879 0096 9342     	 cmp r3,r2
 3880 0098 1DDD     	 ble .L243
 3881              	 .loc 1 1031 0 is_stmt 0 discriminator 1
 3882 009a 754B     	 ldr r3,.L256+12
 3883 009c DB88     	 ldrh r3,[r3,#6]
 3884 009e 1BB2     	 sxth r3,r3
 3885 00a0 40F2D562 	 movw r2,#1749
 3886 00a4 9342     	 cmp r3,r2
 3887 00a6 16DC     	 bgt .L243
 3888              	 .loc 1 1031 0 discriminator 2
 3889 00a8 714B     	 ldr r3,.L256+12
 3890 00aa 9B88     	 ldrh r3,[r3,#4]
 3891 00ac 1BB2     	 sxth r3,r3
 3892 00ae 40F2E142 	 movw r2,#1249
 3893 00b2 9342     	 cmp r3,r2
 3894 00b4 0FDC     	 bgt .L243
 3895              	 .loc 1 1031 0 discriminator 3
 3896 00b6 6E4B     	 ldr r3,.L256+12
 3897 00b8 5B88     	 ldrh r3,[r3,#2]
 3898 00ba 1BB2     	 sxth r3,r3
 3899 00bc 40F2D662 	 movw r2,#1750
 3900 00c0 9342     	 cmp r3,r2
 3901 00c2 08DD     	 ble .L243
 3902              	 .loc 1 1031 0 discriminator 4
 3903 00c4 6B4B     	 ldr r3,.L256+16
 3904 00c6 1B78     	 ldrb r3,[r3]
 3905 00c8 03F00103 	 and r3,r3,#1
 3906 00cc 002B     	 cmp r3,#0
 3907 00ce 02D1     	 bne .L243
1032:../cleanflight/src/main/cms/cms.c ****             key = KEY_MENU;
 3908              	 .loc 1 1032 0 is_stmt 1
 3909 00d0 0623     	 movs r3,#6
 3910 00d2 FB73     	 strb r3,[r7,#15]
 3911 00d4 37E0     	 b .L244
 3912              	.L243:
1033:../cleanflight/src/main/cms/cms.c ****         }
1034:../cleanflight/src/main/cms/cms.c ****         else if (IS_HI(PITCH)) {
 3913              	 .loc 1 1034 0
 3914 00d6 664B     	 ldr r3,.L256+12
 3915 00d8 5B88     	 ldrh r3,[r3,#2]
 3916 00da 1BB2     	 sxth r3,r3
 3917 00dc 40F2D662 	 movw r2,#1750
 3918 00e0 9342     	 cmp r3,r2
 3919 00e2 02DD     	 ble .L245
1035:../cleanflight/src/main/cms/cms.c ****             key = KEY_UP;
 3920              	 .loc 1 1035 0
 3921 00e4 0123     	 movs r3,#1
 3922 00e6 FB73     	 strb r3,[r7,#15]
 3923 00e8 2DE0     	 b .L244
 3924              	.L245:
1036:../cleanflight/src/main/cms/cms.c ****         }
1037:../cleanflight/src/main/cms/cms.c ****         else if (IS_LO(PITCH)) {
 3925              	 .loc 1 1037 0
 3926 00ea 614B     	 ldr r3,.L256+12
 3927 00ec 5B88     	 ldrh r3,[r3,#2]
 3928 00ee 1BB2     	 sxth r3,r3
 3929 00f0 40F2E142 	 movw r2,#1249
 3930 00f4 9342     	 cmp r3,r2
 3931 00f6 02DC     	 bgt .L246
1038:../cleanflight/src/main/cms/cms.c ****             key = KEY_DOWN;
 3932              	 .loc 1 1038 0
 3933 00f8 0223     	 movs r3,#2
 3934 00fa FB73     	 strb r3,[r7,#15]
 3935 00fc 23E0     	 b .L244
 3936              	.L246:
1039:../cleanflight/src/main/cms/cms.c ****         }
1040:../cleanflight/src/main/cms/cms.c ****         else if (IS_LO(ROLL)) {
 3937              	 .loc 1 1040 0
 3938 00fe 5C4B     	 ldr r3,.L256+12
 3939 0100 1B88     	 ldrh r3,[r3]
 3940 0102 1BB2     	 sxth r3,r3
 3941 0104 40F2E142 	 movw r2,#1249
 3942 0108 9342     	 cmp r3,r2
 3943 010a 02DC     	 bgt .L247
1041:../cleanflight/src/main/cms/cms.c ****             key = KEY_LEFT;
 3944              	 .loc 1 1041 0
 3945 010c 0323     	 movs r3,#3
 3946 010e FB73     	 strb r3,[r7,#15]
 3947 0110 19E0     	 b .L244
 3948              	.L247:
1042:../cleanflight/src/main/cms/cms.c ****         }
1043:../cleanflight/src/main/cms/cms.c ****         else if (IS_HI(ROLL)) {
 3949              	 .loc 1 1043 0
 3950 0112 574B     	 ldr r3,.L256+12
 3951 0114 1B88     	 ldrh r3,[r3]
 3952 0116 1BB2     	 sxth r3,r3
 3953 0118 40F2D662 	 movw r2,#1750
 3954 011c 9342     	 cmp r3,r2
 3955 011e 02DD     	 ble .L248
1044:../cleanflight/src/main/cms/cms.c ****             key = KEY_RIGHT;
 3956              	 .loc 1 1044 0
 3957 0120 0423     	 movs r3,#4
 3958 0122 FB73     	 strb r3,[r7,#15]
 3959 0124 0FE0     	 b .L244
 3960              	.L248:
1045:../cleanflight/src/main/cms/cms.c ****         }
1046:../cleanflight/src/main/cms/cms.c ****         else if (IS_HI(YAW) || IS_LO(YAW))
 3961              	 .loc 1 1046 0
 3962 0126 524B     	 ldr r3,.L256+12
 3963 0128 9B88     	 ldrh r3,[r3,#4]
 3964 012a 1BB2     	 sxth r3,r3
 3965 012c 40F2D662 	 movw r2,#1750
 3966 0130 9342     	 cmp r3,r2
 3967 0132 06DC     	 bgt .L249
 3968              	 .loc 1 1046 0 is_stmt 0 discriminator 1
 3969 0134 4E4B     	 ldr r3,.L256+12
 3970 0136 9B88     	 ldrh r3,[r3,#4]
 3971 0138 1BB2     	 sxth r3,r3
 3972 013a 40F2E142 	 movw r2,#1249
 3973 013e 9342     	 cmp r3,r2
 3974 0140 01DC     	 bgt .L244
 3975              	.L249:
1047:../cleanflight/src/main/cms/cms.c ****         {
1048:../cleanflight/src/main/cms/cms.c ****             key = KEY_ESC;
 3976              	 .loc 1 1048 0 is_stmt 1
 3977 0142 0523     	 movs r3,#5
 3978 0144 FB73     	 strb r3,[r7,#15]
 3979              	.L244:
1049:../cleanflight/src/main/cms/cms.c ****         }
1050:../cleanflight/src/main/cms/cms.c **** 
1051:../cleanflight/src/main/cms/cms.c ****         if (key == KEY_NONE) {
 3980              	 .loc 1 1051 0
 3981 0146 FB7B     	 ldrb r3,[r7,#15]
 3982 0148 002B     	 cmp r3,#0
 3983 014a 09D1     	 bne .L250
1052:../cleanflight/src/main/cms/cms.c ****             // No 'key' pressed, reset repeat control
1053:../cleanflight/src/main/cms/cms.c ****             holdCount = 1;
 3984              	 .loc 1 1053 0
 3985 014c 4B4B     	 ldr r3,.L256+24
 3986 014e 0122     	 movs r2,#1
 3987 0150 1A60     	 str r2,[r3]
1054:../cleanflight/src/main/cms/cms.c ****             repeatCount = 1;
 3988              	 .loc 1 1054 0
 3989 0152 4B4B     	 ldr r3,.L256+28
 3990 0154 0122     	 movs r2,#1
 3991 0156 1A60     	 str r2,[r3]
1055:../cleanflight/src/main/cms/cms.c ****             repeatBase = 0;
 3992              	 .loc 1 1055 0
 3993 0158 4A4B     	 ldr r3,.L256+32
 3994 015a 0022     	 movs r2,#0
 3995 015c 1A60     	 str r2,[r3]
 3996 015e 04E0     	 b .L251
 3997              	.L250:
1056:../cleanflight/src/main/cms/cms.c ****         } else {
1057:../cleanflight/src/main/cms/cms.c ****             // The 'key' is being pressed; keep counting
1058:../cleanflight/src/main/cms/cms.c ****             ++holdCount;
 3998              	 .loc 1 1058 0
 3999 0160 464B     	 ldr r3,.L256+24
 4000 0162 1B68     	 ldr r3,[r3]
 4001 0164 0133     	 adds r3,r3,#1
 4002 0166 454A     	 ldr r2,.L256+24
 4003 0168 1360     	 str r3,[r2]
 4004              	.L251:
1059:../cleanflight/src/main/cms/cms.c ****         }
1060:../cleanflight/src/main/cms/cms.c **** 
1061:../cleanflight/src/main/cms/cms.c ****         if (rcDelayMs > 0) {
 4005              	 .loc 1 1061 0
 4006 016a 434B     	 ldr r3,.L256+20
 4007 016c 1B88     	 ldrh r3,[r3]
 4008 016e 1BB2     	 sxth r3,r3
 4009 0170 002B     	 cmp r3,#0
 4010 0172 0FDD     	 ble .L252
1062:../cleanflight/src/main/cms/cms.c ****             rcDelayMs -= (currentTimeMs - lastCalledMs);
 4011              	 .loc 1 1062 0
 4012 0174 444B     	 ldr r3,.L256+36
 4013 0176 1B68     	 ldr r3,[r3]
 4014 0178 9AB2     	 uxth r2,r3
 4015 017a BB68     	 ldr r3,[r7,#8]
 4016 017c 9BB2     	 uxth r3,r3
 4017 017e D31A     	 subs r3,r2,r3
 4018 0180 9AB2     	 uxth r2,r3
 4019 0182 3D4B     	 ldr r3,.L256+20
 4020 0184 1B88     	 ldrh r3,[r3]
 4021 0186 9BB2     	 uxth r3,r3
 4022 0188 1344     	 add r3,r3,r2
 4023 018a 9BB2     	 uxth r3,r3
 4024 018c 9AB2     	 uxth r2,r3
 4025 018e 3A4B     	 ldr r3,.L256+20
 4026 0190 1A80     	 strh r2,[r3]
 4027 0192 49E0     	 b .L253
 4028              	.L252:
1063:../cleanflight/src/main/cms/cms.c ****         } else if (key) {
 4029              	 .loc 1 1063 0
 4030 0194 FB7B     	 ldrb r3,[r7,#15]
 4031 0196 002B     	 cmp r3,#0
 4032 0198 46D0     	 beq .L253
1064:../cleanflight/src/main/cms/cms.c ****             rcDelayMs = cmsHandleKeyWithRepeat(pCurrentDisplay, key, repeatCount);
 4033              	 .loc 1 1064 0
 4034 019a 3C4B     	 ldr r3,.L256+40
 4035 019c 1968     	 ldr r1,[r3]
 4036 019e 384B     	 ldr r3,.L256+28
 4037 01a0 1B68     	 ldr r3,[r3]
 4038 01a2 FA7B     	 ldrb r2,[r7,#15]
 4039 01a4 0846     	 mov r0,r1
 4040 01a6 1146     	 mov r1,r2
 4041 01a8 1A46     	 mov r2,r3
 4042 01aa FFF7FEFF 	 bl cmsHandleKeyWithRepeat
 4043 01ae 0346     	 mov r3,r0
 4044 01b0 9AB2     	 uxth r2,r3
 4045 01b2 314B     	 ldr r3,.L256+20
 4046 01b4 1A80     	 strh r2,[r3]
1065:../cleanflight/src/main/cms/cms.c **** 
1066:../cleanflight/src/main/cms/cms.c ****             // Key repeat effect is implemented in two phases.
1067:../cleanflight/src/main/cms/cms.c ****             // First phldase is to decrease rcDelayMs reciprocal to hold time.
1068:../cleanflight/src/main/cms/cms.c ****             // When rcDelayMs reached a certain limit (scheduling interval),
1069:../cleanflight/src/main/cms/cms.c ****             // repeat rate will not raise anymore, so we call key handler
1070:../cleanflight/src/main/cms/cms.c ****             // multiple times (repeatCount).
1071:../cleanflight/src/main/cms/cms.c ****             //
1072:../cleanflight/src/main/cms/cms.c ****             // XXX Caveat: Most constants are adjusted pragmatically.
1073:../cleanflight/src/main/cms/cms.c ****             // XXX Rewrite this someday, so it uses actual hold time instead
1074:../cleanflight/src/main/cms/cms.c ****             // of holdCount, which depends on the scheduling interval.
1075:../cleanflight/src/main/cms/cms.c **** 
1076:../cleanflight/src/main/cms/cms.c ****             if (((key == KEY_LEFT) || (key == KEY_RIGHT)) && (holdCount > 20)) {
 4047              	 .loc 1 1076 0
 4048 01b6 FB7B     	 ldrb r3,[r7,#15]
 4049 01b8 032B     	 cmp r3,#3
 4050 01ba 02D0     	 beq .L254
 4051              	 .loc 1 1076 0 is_stmt 0 discriminator 2
 4052 01bc FB7B     	 ldrb r3,[r7,#15]
 4053 01be 042B     	 cmp r3,#4
 4054 01c0 32D1     	 bne .L253
 4055              	.L254:
 4056              	 .loc 1 1076 0 discriminator 3
 4057 01c2 2E4B     	 ldr r3,.L256+24
 4058 01c4 1B68     	 ldr r3,[r3]
 4059 01c6 142B     	 cmp r3,#20
 4060 01c8 2EDD     	 ble .L253
1077:../cleanflight/src/main/cms/cms.c **** 
1078:../cleanflight/src/main/cms/cms.c ****                 // Decrease rcDelayMs reciprocally
1079:../cleanflight/src/main/cms/cms.c **** 
1080:../cleanflight/src/main/cms/cms.c ****                 rcDelayMs /= (holdCount - 20);
 4061              	 .loc 1 1080 0 is_stmt 1
 4062 01ca 2B4B     	 ldr r3,.L256+20
 4063 01cc 1B88     	 ldrh r3,[r3]
 4064 01ce 1AB2     	 sxth r2,r3
 4065 01d0 2A4B     	 ldr r3,.L256+24
 4066 01d2 1B68     	 ldr r3,[r3]
 4067 01d4 143B     	 subs r3,r3,#20
 4068 01d6 92FBF3F3 	 sdiv r3,r2,r3
 4069 01da 9AB2     	 uxth r2,r3
 4070 01dc 264B     	 ldr r3,.L256+20
 4071 01de 1A80     	 strh r2,[r3]
1081:../cleanflight/src/main/cms/cms.c **** 
1082:../cleanflight/src/main/cms/cms.c ****                 // When we reach the scheduling limit,
1083:../cleanflight/src/main/cms/cms.c **** 
1084:../cleanflight/src/main/cms/cms.c ****                 if (rcDelayMs <= 50) {
 4072              	 .loc 1 1084 0
 4073 01e0 254B     	 ldr r3,.L256+20
 4074 01e2 1B88     	 ldrh r3,[r3]
 4075 01e4 1BB2     	 sxth r3,r3
 4076 01e6 322B     	 cmp r3,#50
 4077 01e8 1EDC     	 bgt .L253
1085:../cleanflight/src/main/cms/cms.c **** 
1086:../cleanflight/src/main/cms/cms.c ****                     // start calling handler multiple times.
1087:../cleanflight/src/main/cms/cms.c **** 
1088:../cleanflight/src/main/cms/cms.c ****                     if (repeatBase == 0)
 4078              	 .loc 1 1088 0
 4079 01ea 264B     	 ldr r3,.L256+32
 4080 01ec 1B68     	 ldr r3,[r3]
 4081 01ee 002B     	 cmp r3,#0
 4082 01f0 03D1     	 bne .L255
1089:../cleanflight/src/main/cms/cms.c ****                         repeatBase = holdCount;
 4083              	 .loc 1 1089 0
 4084 01f2 224B     	 ldr r3,.L256+24
 4085 01f4 1B68     	 ldr r3,[r3]
 4086 01f6 234A     	 ldr r2,.L256+32
 4087 01f8 1360     	 str r3,[r2]
 4088              	.L255:
1090:../cleanflight/src/main/cms/cms.c **** 
1091:../cleanflight/src/main/cms/cms.c ****                     repeatCount = repeatCount + (holdCount - repeatBase) / 5;
 4089              	 .loc 1 1091 0
 4090 01fa 204B     	 ldr r3,.L256+24
 4091 01fc 1A68     	 ldr r2,[r3]
 4092 01fe 214B     	 ldr r3,.L256+32
 4093 0200 1B68     	 ldr r3,[r3]
 4094 0202 D31A     	 subs r3,r2,r3
 4095 0204 224A     	 ldr r2,.L256+44
 4096 0206 82FB0312 	 smull r1,r2,r2,r3
 4097 020a 5210     	 asrs r2,r2,#1
 4098 020c DB17     	 asrs r3,r3,#31
 4099 020e D21A     	 subs r2,r2,r3
 4100 0210 1B4B     	 ldr r3,.L256+28
 4101 0212 1B68     	 ldr r3,[r3]
 4102 0214 1344     	 add r3,r3,r2
 4103 0216 1A4A     	 ldr r2,.L256+28
 4104 0218 1360     	 str r3,[r2]
1092:../cleanflight/src/main/cms/cms.c **** 
1093:../cleanflight/src/main/cms/cms.c ****                     if (repeatCount > 5) {
 4105              	 .loc 1 1093 0
 4106 021a 194B     	 ldr r3,.L256+28
 4107 021c 1B68     	 ldr r3,[r3]
 4108 021e 052B     	 cmp r3,#5
 4109 0220 02DD     	 ble .L253
1094:../cleanflight/src/main/cms/cms.c ****                         repeatCount= 5;
 4110              	 .loc 1 1094 0
 4111 0222 174B     	 ldr r3,.L256+28
 4112 0224 0522     	 movs r2,#5
 4113 0226 1A60     	 str r2,[r3]
 4114              	.L253:
1095:../cleanflight/src/main/cms/cms.c ****                     }
1096:../cleanflight/src/main/cms/cms.c ****                 }
1097:../cleanflight/src/main/cms/cms.c ****             }
1098:../cleanflight/src/main/cms/cms.c ****         }
1099:../cleanflight/src/main/cms/cms.c **** 
1100:../cleanflight/src/main/cms/cms.c ****         cmsDrawMenu(pCurrentDisplay, currentTimeUs);
 4115              	 .loc 1 1100 0
 4116 0228 184B     	 ldr r3,.L256+40
 4117 022a 1B68     	 ldr r3,[r3]
 4118 022c 1846     	 mov r0,r3
 4119 022e 7968     	 ldr r1,[r7,#4]
 4120 0230 FFF7FEFF 	 bl cmsDrawMenu
1101:../cleanflight/src/main/cms/cms.c **** 
1102:../cleanflight/src/main/cms/cms.c ****         if (currentTimeMs > lastCmsHeartBeatMs + 500) {
 4121              	 .loc 1 1102 0
 4122 0234 174B     	 ldr r3,.L256+48
 4123 0236 1B68     	 ldr r3,[r3]
 4124 0238 03F5FA72 	 add r2,r3,#500
 4125 023c BB68     	 ldr r3,[r7,#8]
 4126 023e 9A42     	 cmp r2,r3
 4127 0240 07D2     	 bcs .L242
1103:../cleanflight/src/main/cms/cms.c ****             // Heart beat for external CMS display device @ 500msec
1104:../cleanflight/src/main/cms/cms.c ****             // (Timeout @ 1000msec)
1105:../cleanflight/src/main/cms/cms.c ****             displayHeartbeat(pCurrentDisplay);
 4128              	 .loc 1 1105 0
 4129 0242 124B     	 ldr r3,.L256+40
 4130 0244 1B68     	 ldr r3,[r3]
 4131 0246 1846     	 mov r0,r3
 4132 0248 FFF7FEFF 	 bl displayHeartbeat
1106:../cleanflight/src/main/cms/cms.c ****             lastCmsHeartBeatMs = currentTimeMs;
 4133              	 .loc 1 1106 0
 4134 024c 114A     	 ldr r2,.L256+48
 4135 024e BB68     	 ldr r3,[r7,#8]
 4136 0250 1360     	 str r3,[r2]
 4137              	.L242:
 4138              	.LBE25:
1107:../cleanflight/src/main/cms/cms.c ****         }
1108:../cleanflight/src/main/cms/cms.c ****     }
1109:../cleanflight/src/main/cms/cms.c **** 
1110:../cleanflight/src/main/cms/cms.c ****     // Some key (command), notably flash erase, takes too long to use the
1111:../cleanflight/src/main/cms/cms.c ****     // currentTimeMs to be used as lastCalledMs (freezes CMS for a minute or so
1112:../cleanflight/src/main/cms/cms.c ****     // if used).
1113:../cleanflight/src/main/cms/cms.c ****     lastCalledMs = millis();
 4139              	 .loc 1 1113 0
 4140 0252 FFF7FEFF 	 bl millis
 4141 0256 0246     	 mov r2,r0
 4142 0258 0B4B     	 ldr r3,.L256+36
 4143 025a 1A60     	 str r2,[r3]
 4144              	.L237:
1114:../cleanflight/src/main/cms/cms.c **** }
 4145              	 .loc 1 1114 0
 4146 025c 1037     	 adds r7,r7,#16
 4147              	.LCFI120:
 4148              	 .cfi_def_cfa_offset 8
 4149 025e BD46     	 mov sp,r7
 4150              	.LCFI121:
 4151              	 .cfi_def_cfa_register 13
 4152              	 
 4153 0260 80BD     	 pop {r7,pc}
 4154              	.L257:
 4155 0262 00BF     	 .align 2
 4156              	.L256:
 4157 0264 00000000 	 .word rcdeviceInMenu
 4158 0268 D34D6210 	 .word 274877907
 4159 026c 00000000 	 .word cmsInMenu
 4160 0270 00000000 	 .word rcData
 4161 0274 00000000 	 .word armingFlags
 4162 0278 00000000 	 .word rcDelayMs.13824
 4163 027c 00000000 	 .word holdCount.13825
 4164 0280 00000000 	 .word repeatCount.13826
 4165 0284 00000000 	 .word repeatBase.13827
 4166 0288 00000000 	 .word lastCalledMs.13828
 4167 028c 00000000 	 .word pCurrentDisplay
 4168 0290 67666666 	 .word 1717986919
 4169 0294 00000000 	 .word lastCmsHeartBeatMs.13829
 4170              	 .cfi_endproc
 4171              	.LFE586:
 4173              	 .section .text.cmsHandler,"ax",%progbits
 4174              	 .align 2
 4175              	 .global cmsHandler
 4176              	 .thumb
 4177              	 .thumb_func
 4179              	cmsHandler:
 4180              	.LFB587:
1115:../cleanflight/src/main/cms/cms.c **** 
1116:../cleanflight/src/main/cms/cms.c **** void cmsHandler(timeUs_t currentTimeUs)
1117:../cleanflight/src/main/cms/cms.c **** {
 4181              	 .loc 1 1117 0
 4182              	 .cfi_startproc
 4183              	 
 4184              	 
 4185 0000 80B5     	 push {r7,lr}
 4186              	.LCFI122:
 4187              	 .cfi_def_cfa_offset 8
 4188              	 .cfi_offset 7,-8
 4189              	 .cfi_offset 14,-4
 4190 0002 82B0     	 sub sp,sp,#8
 4191              	.LCFI123:
 4192              	 .cfi_def_cfa_offset 16
 4193 0004 00AF     	 add r7,sp,#0
 4194              	.LCFI124:
 4195              	 .cfi_def_cfa_register 7
 4196 0006 7860     	 str r0,[r7,#4]
1118:../cleanflight/src/main/cms/cms.c ****     if (cmsDeviceCount < 0)
 4197              	 .loc 1 1118 0
 4198 0008 0A4B     	 ldr r3,.L261
 4199 000a 1B68     	 ldr r3,[r3]
 4200 000c 002B     	 cmp r3,#0
 4201 000e 00DA     	 bge .L259
1119:../cleanflight/src/main/cms/cms.c ****         return;
 4202              	 .loc 1 1119 0
 4203 0010 0DE0     	 b .L258
 4204              	.L259:
1120:../cleanflight/src/main/cms/cms.c **** 
1121:../cleanflight/src/main/cms/cms.c **** 
1122:../cleanflight/src/main/cms/cms.c **** 
1123:../cleanflight/src/main/cms/cms.c ****     static timeUs_t lastCalledUs = 0;
1124:../cleanflight/src/main/cms/cms.c **** 
1125:../cleanflight/src/main/cms/cms.c ****     if (currentTimeUs >= lastCalledUs + CMS_UPDATE_INTERVAL_US) {
 4205              	 .loc 1 1125 0
 4206 0012 094B     	 ldr r3,.L261+4
 4207 0014 1B68     	 ldr r3,[r3]
 4208 0016 03F54343 	 add r3,r3,#49920
 4209 001a 5033     	 adds r3,r3,#80
 4210 001c 7A68     	 ldr r2,[r7,#4]
 4211 001e 9342     	 cmp r3,r2
 4212 0020 05D8     	 bhi .L258
1126:../cleanflight/src/main/cms/cms.c ****         lastCalledUs = currentTimeUs;
 4213              	 .loc 1 1126 0
 4214 0022 054A     	 ldr r2,.L261+4
 4215 0024 7B68     	 ldr r3,[r7,#4]
 4216 0026 1360     	 str r3,[r2]
1127:../cleanflight/src/main/cms/cms.c ****         cmsUpdate(currentTimeUs);
 4217              	 .loc 1 1127 0
 4218 0028 7868     	 ldr r0,[r7,#4]
 4219 002a FFF7FEFF 	 bl cmsUpdate
 4220              	.L258:
1128:../cleanflight/src/main/cms/cms.c ****     }
1129:../cleanflight/src/main/cms/cms.c **** }
 4221              	 .loc 1 1129 0
 4222 002e 0837     	 adds r7,r7,#8
 4223              	.LCFI125:
 4224              	 .cfi_def_cfa_offset 8
 4225 0030 BD46     	 mov sp,r7
 4226              	.LCFI126:
 4227              	 .cfi_def_cfa_register 13
 4228              	 
 4229 0032 80BD     	 pop {r7,pc}
 4230              	.L262:
 4231              	 .align 2
 4232              	.L261:
 4233 0034 00000000 	 .word cmsDeviceCount
 4234 0038 00000000 	 .word lastCalledUs.13835
 4235              	 .cfi_endproc
 4236              	.LFE587:
 4238              	 .section .text.cmsInit,"ax",%progbits
 4239              	 .align 2
 4240              	 .global cmsInit
 4241              	 .thumb
 4242              	 .thumb_func
 4244              	cmsInit:
 4245              	.LFB588:
1130:../cleanflight/src/main/cms/cms.c **** 
1131:../cleanflight/src/main/cms/cms.c **** void cmsInit(void)
1132:../cleanflight/src/main/cms/cms.c **** {
 4246              	 .loc 1 1132 0
 4247              	 .cfi_startproc
 4248              	 
 4249              	 
 4250              	 
 4251 0000 80B4     	 push {r7}
 4252              	.LCFI127:
 4253              	 .cfi_def_cfa_offset 4
 4254              	 .cfi_offset 7,-4
 4255 0002 00AF     	 add r7,sp,#0
 4256              	.LCFI128:
 4257              	 .cfi_def_cfa_register 7
1133:../cleanflight/src/main/cms/cms.c ****     cmsDeviceCount = 0;
 4258              	 .loc 1 1133 0
 4259 0004 054B     	 ldr r3,.L264
 4260 0006 0022     	 movs r2,#0
 4261 0008 1A60     	 str r2,[r3]
1134:../cleanflight/src/main/cms/cms.c ****     cmsCurrentDevice = -1;
 4262              	 .loc 1 1134 0
 4263 000a 054B     	 ldr r3,.L264+4
 4264 000c 4FF0FF32 	 mov r2,#-1
 4265 0010 1A60     	 str r2,[r3]
1135:../cleanflight/src/main/cms/cms.c **** }
 4266              	 .loc 1 1135 0
 4267 0012 BD46     	 mov sp,r7
 4268              	.LCFI129:
 4269              	 .cfi_def_cfa_register 13
 4270              	 
 4271 0014 5DF8047B 	 ldr r7,[sp],#4
 4272              	.LCFI130:
 4273              	 .cfi_restore 7
 4274              	 .cfi_def_cfa_offset 0
 4275 0018 7047     	 bx lr
 4276              	.L265:
 4277 001a 00BF     	 .align 2
 4278              	.L264:
 4279 001c 00000000 	 .word cmsDeviceCount
 4280 0020 00000000 	 .word cmsCurrentDevice
 4281              	 .cfi_endproc
 4282              	.LFE588:
 4284              	 .section .bss.lastPolledUs.13726,"aw",%nobits
 4285              	 .align 2
 4288              	lastPolledUs.13726:
 4289 0000 00000000 	 .space 4
 4290              	 .section .data.rcDelayMs.13824,"aw",%progbits
 4291              	 .align 1
 4294              	rcDelayMs.13824:
 4295 0000 FA00     	 .short 250
 4296              	 .section .data.holdCount.13825,"aw",%progbits
 4297              	 .align 2
 4300              	holdCount.13825:
 4301 0000 01000000 	 .word 1
 4302              	 .section .data.repeatCount.13826,"aw",%progbits
 4303              	 .align 2
 4306              	repeatCount.13826:
 4307 0000 01000000 	 .word 1
 4308              	 .section .bss.repeatBase.13827,"aw",%nobits
 4309              	 .align 2
 4312              	repeatBase.13827:
 4313 0000 00000000 	 .space 4
 4314              	 .section .bss.lastCalledMs.13828,"aw",%nobits
 4315              	 .align 2
 4318              	lastCalledMs.13828:
 4319 0000 00000000 	 .space 4
 4320              	 .section .bss.lastCmsHeartBeatMs.13829,"aw",%nobits
 4321              	 .align 2
 4324              	lastCmsHeartBeatMs.13829:
 4325 0000 00000000 	 .space 4
 4326              	 .section .bss.lastCalledUs.13835,"aw",%nobits
 4327              	 .align 2
 4330              	lastCalledUs.13835:
 4331 0000 00000000 	 .space 4
 4332              	 .text
 4333              	.Letext0:
 4334              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 4335              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 4336              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 4337              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/display.h"
 4338              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 4339              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build/debug.h"
 4340              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms_types.h"
 4341              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 4342              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 4343              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx.h"
 4344              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 4345              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_controls.h"
 4346              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/runtime_config.h"
 4347              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/pwm_output.h"
 4348              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/mixer.h"
 4349              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/osd.h"
 4350              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 4351              	 .file 19 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
 4352              	 .file 20 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_modes.h"
 4353              	 .file 21 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/rcdevice_cam.h"
 4354              	 .file 22 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/rx/rx.h"
 4355              	 .file 23 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 4356              	 .file 24 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
 4357              	 .file 25 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms_menu_builtin.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cms.c
                            *COM*:00000004 pCurrentDisplay
                            *COM*:00000003 switchStates
    {standard input}:22     .bss.cmsDisplayPorts:00000000 $d
    {standard input}:25     .bss.cmsDisplayPorts:00000000 cmsDisplayPorts
    {standard input}:28     .bss.cmsDeviceCount:00000000 $d
    {standard input}:31     .bss.cmsDeviceCount:00000000 cmsDeviceCount
    {standard input}:34     .data.cmsCurrentDevice:00000000 $d
    {standard input}:37     .data.cmsCurrentDevice:00000000 cmsCurrentDevice
    {standard input}:40     .text.cmsDisplayPortRegister:00000000 $t
    {standard input}:45     .text.cmsDisplayPortRegister:00000000 cmsDisplayPortRegister
    {standard input}:102    .text.cmsDisplayPortRegister:00000034 $d
    {standard input}:108    .text.cmsDisplayPortSelectCurrent:00000000 $t
    {standard input}:112    .text.cmsDisplayPortSelectCurrent:00000000 cmsDisplayPortSelectCurrent
    {standard input}:165    .text.cmsDisplayPortSelectCurrent:00000034 $d
    {standard input}:172    .text.cmsDisplayPortSelectNext:00000000 $t
    {standard input}:176    .text.cmsDisplayPortSelectNext:00000000 cmsDisplayPortSelectNext
    {standard input}:230    .text.cmsDisplayPortSelectNext:0000003c $d
    {standard input}:237    .text.cmsDisplayPortSelect:00000000 $t
    {standard input}:242    .text.cmsDisplayPortSelect:00000000 cmsDisplayPortSelect
    {standard input}:313    .text.cmsDisplayPortSelect:00000044 $d
    {standard input}:320    .bss.smallScreen:00000000 smallScreen
    {standard input}:321    .bss.smallScreen:00000000 $d
    {standard input}:325    .bss.leftMenuColumn:00000000 leftMenuColumn
    {standard input}:326    .bss.leftMenuColumn:00000000 $d
    {standard input}:330    .bss.rightMenuColumn:00000000 rightMenuColumn
    {standard input}:331    .bss.rightMenuColumn:00000000 $d
    {standard input}:335    .bss.maxMenuItems:00000000 maxMenuItems
    {standard input}:336    .bss.maxMenuItems:00000000 $d
    {standard input}:340    .bss.linesPerMenuItem:00000000 linesPerMenuItem
    {standard input}:341    .bss.linesPerMenuItem:00000000 $d
    {standard input}:346    .bss.cmsInMenu:00000000 cmsInMenu
    {standard input}:347    .bss.cmsInMenu:00000000 $d
    {standard input}:349    .bss.menuStack:00000000 $d
    {standard input}:352    .bss.menuStack:00000000 menuStack
    {standard input}:357    .bss.menuStackIdx:00000000 menuStackIdx
    {standard input}:358    .bss.menuStackIdx:00000000 $d
    {standard input}:362    .bss.pageCount:00000000 pageCount
    {standard input}:363    .bss.pageCount:00000000 $d
    {standard input}:365    .bss.pageTop:00000000 $d
    {standard input}:368    .bss.pageTop:00000000 pageTop
    {standard input}:373    .bss.pageMaxRow:00000000 pageMaxRow
    {standard input}:374    .bss.pageMaxRow:00000000 $d
    {standard input}:376    .bss.currentCtx:00000000 $d
    {standard input}:379    .bss.currentCtx:00000000 currentCtx
    {standard input}:382    .text.cmsUpdateMaxRow:00000000 $t
    {standard input}:386    .text.cmsUpdateMaxRow:00000000 cmsUpdateMaxRow
    {standard input}:469    .text.cmsUpdateMaxRow:0000005c $d
    {standard input}:476    .text.cmsCursorAbsolute:00000000 $t
    {standard input}:480    .text.cmsCursorAbsolute:00000000 cmsCursorAbsolute
    {standard input}:527    .text.cmsCursorAbsolute:0000002c $d
    {standard input}:533    .text.cmsPageSelect:00000000 $t
    {standard input}:537    .text.cmsPageSelect:00000000 cmsPageSelect
    {standard input}:608    .text.cmsPageSelect:00000064 $d
    {standard input}:616    .text.cmsPageNext:00000000 $t
    {standard input}:620    .text.cmsPageNext:00000000 cmsPageNext
    {standard input}:660    .text.cmsPageNext:00000024 $d
    {standard input}:665    .text.cmsPagePrev:00000000 $t
    {standard input}:669    .text.cmsPagePrev:00000000 cmsPagePrev
    {standard input}:709    .text.cmsPagePrev:00000024 $d
    {standard input}:714    .text.cmsFormatFloat:00000000 $t
    {standard input}:718    .text.cmsFormatFloat:00000000 cmsFormatFloat
    {standard input}:820    .text.cmsPadLeftToSize:00000000 $t
    {standard input}:824    .text.cmsPadLeftToSize:00000000 cmsPadLeftToSize
    {standard input}:918    .text.cmsPadToSize:00000000 $t
    {standard input}:922    .text.cmsPadToSize:00000000 cmsPadToSize
    {standard input}:964    .text.cmsDrawMenuItemValue:00000000 $t
    {standard input}:968    .text.cmsDrawMenuItemValue:00000000 cmsDrawMenuItemValue
    {standard input}:1030   .text.cmsDrawMenuItemValue:0000004c $d
    {standard input}:1035   .rodata:00000000 $d
    {standard input}:1039   .text.cmsDrawMenuEntry:00000000 $t
    {standard input}:1043   .text.cmsDrawMenuEntry:00000000 cmsDrawMenuEntry
    {standard input}:1086   .text.cmsDrawMenuEntry:00000030 $d
    {standard input}:1101   .text.cmsDrawMenuEntry:0000006c $t
    {standard input}:1438   .text.cmsDrawMenuEntry:000002d4 $d
    {standard input}:1444   .text.cmsDrawMenuEntry:000002e4 $t
    {standard input}:1698   .text.cmsDrawMenuEntry:000004b4 $d
    {standard input}:1707   .text.cmsDrawMenu:00000000 $t
    {standard input}:1711   .text.cmsDrawMenu:00000000 cmsDrawMenu
    {standard input}:2090   .text.cmsDrawMenu:0000026c $d
    {standard input}:4288   .bss.lastPolledUs.13726:00000000 lastPolledUs.13726
    {standard input}:2101   .text.cmsDrawMenu:00000290 $t
    {standard input}:2132   .text.cmsDrawMenu:000002b4 $d
    {standard input}:2137   .text.cmsMenuCountPage:00000000 $t
    {standard input}:2141   .text.cmsMenuCountPage:00000000 cmsMenuCountPage
    {standard input}:2211   .text.cmsMenuCountPage:00000054 $d
    {standard input}:2219   .text.cmsMenuChange:00000000 $t
    {standard input}:2224   .text.cmsMenuChange:00000000 cmsMenuChange
    {standard input}:2372   .text.cmsMenuBack:00000000 cmsMenuBack
    {standard input}:2360   .text.cmsMenuChange:000000c8 $d
    {standard input}:2368   .text.cmsMenuBack:00000000 $t
    {standard input}:2477   .text.cmsMenuBack:00000094 $d
    {standard input}:2485   .text.cmsMenuOpen:00000000 $t
    {standard input}:2490   .text.cmsMenuOpen:00000000 cmsMenuOpen
    {standard input}:2671   .text.cmsMenuOpen:0000010c $d
    {standard input}:2684   .text.cmsTraverseGlobalExit:00000000 $t
    {standard input}:2688   .text.cmsTraverseGlobalExit:00000000 cmsTraverseGlobalExit
    {standard input}:2752   .text.cmsMenuExit:00000000 $t
    {standard input}:2757   .text.cmsMenuExit:00000000 cmsMenuExit
    {standard input}:2866   .text.cmsMenuExit:00000094 $d
    {standard input}:2874   .text.cmsHandleKey:00000000 $t
    {standard input}:2878   .text.cmsHandleKey:00000000 cmsHandleKey
    {standard input}:3073   .text.cmsHandleKey:0000012c $d
    {standard input}:3089   .text.cmsHandleKey:0000016c $t
    {standard input}:3271   .text.cmsHandleKey:00000294 $d
    {standard input}:3277   .text.cmsHandleKey:000002a4 $t
    {standard input}:3715   .text.cmsHandleKeyWithRepeat:00000000 $t
    {standard input}:3720   .text.cmsHandleKeyWithRepeat:00000000 cmsHandleKeyWithRepeat
    {standard input}:3784   .text.cmsUpdate:00000000 $t
    {standard input}:3789   .text.cmsUpdate:00000000 cmsUpdate
    {standard input}:4157   .text.cmsUpdate:00000264 $d
    {standard input}:4294   .data.rcDelayMs.13824:00000000 rcDelayMs.13824
    {standard input}:4300   .data.holdCount.13825:00000000 holdCount.13825
    {standard input}:4306   .data.repeatCount.13826:00000000 repeatCount.13826
    {standard input}:4312   .bss.repeatBase.13827:00000000 repeatBase.13827
    {standard input}:4318   .bss.lastCalledMs.13828:00000000 lastCalledMs.13828
    {standard input}:4324   .bss.lastCmsHeartBeatMs.13829:00000000 lastCmsHeartBeatMs.13829
    {standard input}:4174   .text.cmsHandler:00000000 $t
    {standard input}:4179   .text.cmsHandler:00000000 cmsHandler
    {standard input}:4233   .text.cmsHandler:00000034 $d
    {standard input}:4330   .bss.lastCalledUs.13835:00000000 lastCalledUs.13835
    {standard input}:4239   .text.cmsInit:00000000 $t
    {standard input}:4244   .text.cmsInit:00000000 cmsInit
    {standard input}:4279   .text.cmsInit:0000001c $d
    {standard input}:4285   .bss.lastPolledUs.13726:00000000 $d
    {standard input}:4291   .data.rcDelayMs.13824:00000000 $d
    {standard input}:4297   .data.holdCount.13825:00000000 $d
    {standard input}:4303   .data.repeatCount.13826:00000000 $d
    {standard input}:4309   .bss.repeatBase.13827:00000000 $d
    {standard input}:4315   .bss.lastCalledMs.13828:00000000 $d
    {standard input}:4321   .bss.lastCmsHeartBeatMs.13829:00000000 $d
    {standard input}:4327   .bss.lastCalledUs.13835:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
displayClearScreen
itoa
strlen
displayWrite
strncpy
displayTxBytesFree
setArmingDisabled
displayRelease
displayGrab
menuMain
saveConfigAndNotify
displayResync
stopMotors
stopPwmAllMotors
delay
systemReset
unsetArmingDisabled
displayHeartbeat
millis
rcdeviceInMenu
rcData
armingFlags
