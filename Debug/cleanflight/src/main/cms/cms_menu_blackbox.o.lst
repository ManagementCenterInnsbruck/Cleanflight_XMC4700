   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "cms_menu_blackbox.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.blackboxConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	blackboxConfig:
  25              	.LFB527:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox/blackbox.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "platform.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "build/build_config.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "common/time.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef enum BlackboxDevice {
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_NONE = 0,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #ifdef USE_FLASHFS
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_FLASH = 1,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #endif
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #ifdef USE_SDCARD
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_SDCARD = 2,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #endif
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_SERIAL = 3
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } BlackboxDevice_e;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef enum BlackboxMode {
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_MODE_NORMAL = 0,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_MODE_MOTOR_TEST,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_MODE_ALWAYS_ON
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } BlackboxMode;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef enum FlightLogEvent {
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_SYNC_BEEP = 0,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_INFLIGHT_ADJUSTMENT = 13,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_LOGGING_RESUME = 14,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_FLIGHTMODE = 30, // Add new event type for flight mode status.
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_LOG_END = 255
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } FlightLogEvent;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef struct blackboxConfig_s {
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint16_t p_ratio; // I-frame interval / P-frame interval
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint8_t device;
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint8_t record_acc;
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint8_t mode;
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } blackboxConfig_t;
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** PG_DECLARE(blackboxConfig_t, blackboxConfig);
  27              	 .loc 1 60 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 60 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word blackboxConfig_System
  55              	 .cfi_endproc
  56              	.LFE527:
  58              	 .section .text.blackboxConfigMutable,"ax",%progbits
  59              	 .align 2
  60              	 .thumb
  61              	 .thumb_func
  63              	blackboxConfigMutable:
  64              	.LFB528:
  65              	 .loc 1 60 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69              	 
  70 0000 80B4     	 push {r7}
  71              	.LCFI4:
  72              	 .cfi_def_cfa_offset 4
  73              	 .cfi_offset 7,-4
  74 0002 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77              	 .loc 1 60 0
  78 0004 024B     	 ldr r3,.L7
  79 0006 1846     	 mov r0,r3
  80 0008 BD46     	 mov sp,r7
  81              	.LCFI6:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 000a 5DF8047B 	 ldr r7,[sp],#4
  85              	.LCFI7:
  86              	 .cfi_restore 7
  87              	 .cfi_def_cfa_offset 0
  88 000e 7047     	 bx lr
  89              	.L8:
  90              	 .align 2
  91              	.L7:
  92 0010 00000000 	 .word blackboxConfig_System
  93              	 .cfi_endproc
  94              	.LFE528:
  96              	 .comm pCurrentDisplay,4,4
  97              	 .section .rodata
  98              	 .align 2
  99              	.LC0:
 100 0000 4E4F4E45 	 .ascii "NONE\000"
 100      00
 101 0005 000000   	 .align 2
 102              	.LC1:
 103 0008 464C4153 	 .ascii "FLASH \000"
 103      482000
 104 000f 00       	 .align 2
 105              	.LC2:
 106 0010 53444341 	 .ascii "SDCARD\000"
 106      524400
 107 0017 00       	 .align 2
 108              	.LC3:
 109 0018 53455249 	 .ascii "SERIAL\000"
 109      414C00
 110              	 .section .rodata.cmsx_BlackboxDeviceNames,"a",%progbits
 111              	 .align 2
 114              	cmsx_BlackboxDeviceNames:
 115 0000 00000000 	 .word .LC0
 116 0004 08000000 	 .word .LC1
 117 0008 10000000 	 .word .LC2
 118 000c 18000000 	 .word .LC3
 119              	 .section .bss.blackboxConfig_p_ratio,"aw",%nobits
 120              	 .align 1
 123              	blackboxConfig_p_ratio:
 124 0000 0000     	 .space 2
 125              	 .section .bss.cmsx_BlackboxDevice,"aw",%nobits
 128              	cmsx_BlackboxDevice:
 129 0000 00       	 .space 1
 130              	 .section .data.cmsx_BlackboxDeviceTable,"aw",%progbits
 131              	 .align 2
 134              	cmsx_BlackboxDeviceTable:
 135 0000 00000000 	 .word cmsx_BlackboxDevice
 136 0004 02       	 .byte 2
 137 0005 00000000 	 .4byte cmsx_BlackboxDeviceNames
 138 0009 000000   	 .section .bss.cmsx_BlackboxStatus,"aw",%nobits
 139              	 .align 2
 142              	cmsx_BlackboxStatus:
 143 0000 00000000 	 .space 8
 143      00000000 
 144              	 .section .bss.cmsx_BlackboxDeviceStorageUsed,"aw",%nobits
 145              	 .align 2
 148              	cmsx_BlackboxDeviceStorageUsed:
 149 0000 00000000 	 .space 8
 149      00000000 
 150              	 .section .bss.cmsx_BlackboxDeviceStorageFree,"aw",%nobits
 151              	 .align 2
 154              	cmsx_BlackboxDeviceStorageFree:
 155 0000 00000000 	 .space 8
 155      00000000 
 156              	 .section .rodata
 157 001f 00       	 .align 2
 158              	.LC4:
 159 0020 4200     	 .ascii "B\000"
 160 0022 0000     	 .align 2
 161              	.LC5:
 162 0024 4D4200   	 .ascii "MB\000"
 163 0027 00       	 .align 2
 164              	.LC6:
 165 0028 4E4F2043 	 .ascii "NO CARD\000"
 165      41524400 
 166              	 .align 2
 167              	.LC7:
 168 0030 4641554C 	 .ascii "FAULT\000"
 168      5400
 169 0036 0000     	 .align 2
 170              	.LC8:
 171 0038 52454144 	 .ascii "READY\000"
 171      5900
 172 003e 0000     	 .align 2
 173              	.LC9:
 174 0040 494E4954 	 .ascii "INIT\000"
 174      00
 175 0045 000000   	 .align 2
 176              	.LC10:
 177 0048 2D2D2D00 	 .ascii "---\000"
 178              	 .align 2
 179              	.LC11:
 180 004c 256C6425 	 .ascii "%ld%s\000"
 180      7300
 181              	 .section .text.cmsx_Blackbox_GetDeviceStatus,"ax",%progbits
 182              	 .align 2
 183              	 .thumb
 184              	 .thumb_func
 186              	cmsx_Blackbox_GetDeviceStatus:
 187              	.LFB539:
 188              	 .file 2 "../cleanflight/src/main/cms/cms_menu_blackbox.c"
   1:../cleanflight/src/main/cms/cms_menu_blackbox.c **** /*
   2:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  *
   4:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * any later version.
   9:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  *
  10:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  *
  15:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * along with this software.
  17:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  *
  18:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/cms/cms_menu_blackbox.c ****  */
  20:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  21:../cleanflight/src/main/cms/cms_menu_blackbox.c **** //
  22:../cleanflight/src/main/cms/cms_menu_blackbox.c **** // CMS things for blackbox and flashfs.
  23:../cleanflight/src/main/cms/cms_menu_blackbox.c **** //
  24:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  25:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include <stdbool.h>
  26:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include <stdint.h>
  27:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include <string.h>
  28:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include <ctype.h>
  29:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  30:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "platform.h"
  31:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  32:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #if defined(USE_CMS) && defined(USE_BLACKBOX)
  33:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  34:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "build/version.h"
  35:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  36:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "blackbox/blackbox.h"
  37:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "blackbox/blackbox_io.h"
  38:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  39:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "cms/cms.h"
  40:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "cms/cms_types.h"
  41:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "cms/cms_menu_blackbox.h"
  42:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  43:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "common/printf.h"
  44:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "common/utils.h"
  45:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  46:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "config/feature.h"
  47:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  48:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "drivers/flash.h"
  49:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "drivers/time.h"
  50:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "drivers/sdcard.h"
  51:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  52:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "fc/config.h"
  53:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  54:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "io/asyncfatfs/asyncfatfs.h"
  55:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "io/flashfs.h"
  56:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "io/beeper.h"
  57:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  58:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #include "pg/pg.h"
  59:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  60:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static const char * const cmsx_BlackboxDeviceNames[] = {
  61:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     "NONE",
  62:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     "FLASH ",
  63:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     "SDCARD",
  64:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     "SERIAL"
  65:../cleanflight/src/main/cms/cms_menu_blackbox.c **** };
  66:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  67:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static uint16_t blackboxConfig_p_ratio;
  68:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  69:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static uint8_t cmsx_BlackboxDevice;
  70:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static OSD_TAB_t cmsx_BlackboxDeviceTable = { &cmsx_BlackboxDevice, 2, cmsx_BlackboxDeviceNames };
  71:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  72:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #define CMS_BLACKBOX_STRING_LENGTH 8
  73:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static char cmsx_BlackboxStatus[CMS_BLACKBOX_STRING_LENGTH];
  74:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static char cmsx_BlackboxDeviceStorageUsed[CMS_BLACKBOX_STRING_LENGTH];
  75:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static char cmsx_BlackboxDeviceStorageFree[CMS_BLACKBOX_STRING_LENGTH];
  76:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  77:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static void cmsx_Blackbox_GetDeviceStatus(void)
  78:../cleanflight/src/main/cms/cms_menu_blackbox.c **** {
 189              	 .loc 2 78 0
 190              	 .cfi_startproc
 191              	 
 192              	 
 193 0000 80B5     	 push {r7,lr}
 194              	.LCFI8:
 195              	 .cfi_def_cfa_offset 8
 196              	 .cfi_offset 7,-8
 197              	 .cfi_offset 14,-4
 198 0002 84B0     	 sub sp,sp,#16
 199              	.LCFI9:
 200              	 .cfi_def_cfa_offset 24
 201 0004 00AF     	 add r7,sp,#0
 202              	.LCFI10:
 203              	 .cfi_def_cfa_register 7
  79:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     char * unit = "B";
 204              	 .loc 2 79 0
 205 0006 364B     	 ldr r3,.L22
 206 0008 FB60     	 str r3,[r7,#12]
  80:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #if defined(USE_SDCARD) || defined(USE_FLASHFS)
  81:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     bool storageDeviceIsWorking = false;
 207              	 .loc 2 81 0
 208 000a 0023     	 movs r3,#0
 209 000c FB72     	 strb r3,[r7,#11]
  82:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #endif
  83:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     uint32_t storageUsed = 0;
 210              	 .loc 2 83 0
 211 000e 0023     	 movs r3,#0
 212 0010 7B60     	 str r3,[r7,#4]
  84:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     uint32_t storageFree = 0;
 213              	 .loc 2 84 0
 214 0012 0023     	 movs r3,#0
 215 0014 3B60     	 str r3,[r7]
  85:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  86:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     switch (blackboxConfig()->device)
 216              	 .loc 2 86 0
 217 0016 FFF7FEFF 	 bl blackboxConfig
 218 001a 0346     	 mov r3,r0
 219 001c 9B78     	 ldrb r3,[r3,#2]
 220 001e 022B     	 cmp r3,#2
 221 0020 4BD1     	 bne .L20
  87:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     {
  88:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #ifdef USE_SDCARD
  89:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     case BLACKBOX_DEVICE_SDCARD:
  90:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         unit = "MB";
 222              	 .loc 2 90 0
 223 0022 304B     	 ldr r3,.L22+4
 224 0024 FB60     	 str r3,[r7,#12]
  91:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
  92:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         if (!sdcard_isInserted()) {
 225              	 .loc 2 92 0
 226 0026 FFF7FEFF 	 bl sdcard_isInserted
 227 002a 0346     	 mov r3,r0
 228 002c 83F00103 	 eor r3,r3,#1
 229 0030 DBB2     	 uxtb r3,r3
 230 0032 002B     	 cmp r3,#0
 231 0034 04D0     	 beq .L12
  93:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             tfp_sprintf(cmsx_BlackboxStatus, "NO CARD");
 232              	 .loc 2 93 0
 233 0036 2C48     	 ldr r0,.L22+8
 234 0038 2C49     	 ldr r1,.L22+12
 235 003a FFF7FEFF 	 bl tfp_sprintf
 236 003e 24E0     	 b .L13
 237              	.L12:
  94:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         } else if (!sdcard_isFunctional()) {
 238              	 .loc 2 94 0
 239 0040 FFF7FEFF 	 bl sdcard_isFunctional
 240 0044 0346     	 mov r3,r0
 241 0046 83F00103 	 eor r3,r3,#1
 242 004a DBB2     	 uxtb r3,r3
 243 004c 002B     	 cmp r3,#0
 244 004e 04D0     	 beq .L14
  95:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             tfp_sprintf(cmsx_BlackboxStatus, "FAULT");
 245              	 .loc 2 95 0
 246 0050 2548     	 ldr r0,.L22+8
 247 0052 2749     	 ldr r1,.L22+16
 248 0054 FFF7FEFF 	 bl tfp_sprintf
 249 0058 17E0     	 b .L13
 250              	.L14:
  96:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         } else {
  97:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             switch (afatfs_getFilesystemState()) {
 251              	 .loc 2 97 0
 252 005a FFF7FEFF 	 bl afatfs_getFilesystemState
 253 005e 0346     	 mov r3,r0
 254 0060 022B     	 cmp r3,#2
 255 0062 08D0     	 beq .L16
 256 0064 032B     	 cmp r3,#3
 257 0066 0BD1     	 bne .L21
  98:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             case AFATFS_FILESYSTEM_STATE_READY:
  99:../cleanflight/src/main/cms/cms_menu_blackbox.c ****                 tfp_sprintf(cmsx_BlackboxStatus, "READY");
 258              	 .loc 2 99 0
 259 0068 1F48     	 ldr r0,.L22+8
 260 006a 2249     	 ldr r1,.L22+20
 261 006c FFF7FEFF 	 bl tfp_sprintf
 100:../cleanflight/src/main/cms/cms_menu_blackbox.c ****                 storageDeviceIsWorking = true;
 262              	 .loc 2 100 0
 263 0070 0123     	 movs r3,#1
 264 0072 FB72     	 strb r3,[r7,#11]
 101:../cleanflight/src/main/cms/cms_menu_blackbox.c ****                 break;
 265              	 .loc 2 101 0
 266 0074 09E0     	 b .L13
 267              	.L16:
 102:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             case AFATFS_FILESYSTEM_STATE_INITIALIZATION:
 103:../cleanflight/src/main/cms/cms_menu_blackbox.c ****                 tfp_sprintf(cmsx_BlackboxStatus, "INIT");
 268              	 .loc 2 103 0
 269 0076 1C48     	 ldr r0,.L22+8
 270 0078 1F49     	 ldr r1,.L22+24
 271 007a FFF7FEFF 	 bl tfp_sprintf
 104:../cleanflight/src/main/cms/cms_menu_blackbox.c ****                 break;
 272              	 .loc 2 104 0
 273 007e 04E0     	 b .L13
 274              	.L21:
 105:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             case AFATFS_FILESYSTEM_STATE_FATAL:
 106:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             case AFATFS_FILESYSTEM_STATE_UNKNOWN:
 107:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             default:
 108:../cleanflight/src/main/cms/cms_menu_blackbox.c ****                 tfp_sprintf(cmsx_BlackboxStatus, "FAULT");
 275              	 .loc 2 108 0
 276 0080 1948     	 ldr r0,.L22+8
 277 0082 1B49     	 ldr r1,.L22+16
 278 0084 FFF7FEFF 	 bl tfp_sprintf
 109:../cleanflight/src/main/cms/cms_menu_blackbox.c ****                 break;
 279              	 .loc 2 109 0
 280 0088 00BF     	 nop
 281              	.L13:
 110:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             }
 111:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         }
 112:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 113:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         if (storageDeviceIsWorking) {
 282              	 .loc 2 113 0
 283 008a FB7A     	 ldrb r3,[r7,#11]
 284 008c 002B     	 cmp r3,#0
 285 008e 13D0     	 beq .L18
 114:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             storageFree = afatfs_getContiguousFreeSpace() / 1024000;
 286              	 .loc 2 114 0
 287 0090 FFF7FEFF 	 bl afatfs_getContiguousFreeSpace
 288 0094 0246     	 mov r2,r0
 289 0096 194B     	 ldr r3,.L22+28
 290 0098 A3FB0223 	 umull r2,r3,r3,r2
 291 009c 1B0C     	 lsrs r3,r3,#16
 292 009e 3B60     	 str r3,[r7]
 115:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             storageUsed = (sdcard_getMetadata()->numBlocks / 2000) - storageFree;
 293              	 .loc 2 115 0
 294 00a0 FFF7FEFF 	 bl sdcard_getMetadata
 295 00a4 0346     	 mov r3,r0
 296 00a6 1B68     	 ldr r3,[r3]
 297 00a8 144A     	 ldr r2,.L22+28
 298 00aa A2FB0323 	 umull r2,r3,r2,r3
 299 00ae DA09     	 lsrs r2,r3,#7
 300 00b0 3B68     	 ldr r3,[r7]
 301 00b2 D31A     	 subs r3,r2,r3
 302 00b4 7B60     	 str r3,[r7,#4]
 116:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         }
 117:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 118:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         break;
 303              	 .loc 2 118 0
 304 00b6 04E0     	 b .L19
 305              	.L18:
 306 00b8 03E0     	 b .L19
 307              	.L20:
 119:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #endif
 120:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 121:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #ifdef USE_FLASHFS
 122:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     case BLACKBOX_DEVICE_FLASH:
 123:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         unit = "KB";
 124:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 125:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         storageDeviceIsWorking = flashfsIsSupported();
 126:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         if (storageDeviceIsWorking) {
 127:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             tfp_sprintf(cmsx_BlackboxStatus, "READY");
 128:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 129:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             const flashGeometry_t *geometry = flashfsGetGeometry();
 130:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             storageUsed = flashfsGetOffset() / 1024;
 131:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             storageFree = (geometry->totalSize / 1024) - storageUsed;
 132:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         } else {
 133:../cleanflight/src/main/cms/cms_menu_blackbox.c ****             tfp_sprintf(cmsx_BlackboxStatus, "FAULT");
 134:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         }
 135:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 136:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         break;
 137:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #endif
 138:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 139:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     default:
 140:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         tfp_sprintf(cmsx_BlackboxStatus, "---");
 308              	 .loc 2 140 0
 309 00ba 0B48     	 ldr r0,.L22+8
 310 00bc 1049     	 ldr r1,.L22+32
 311 00be FFF7FEFF 	 bl tfp_sprintf
 312              	.L19:
 141:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     }
 142:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 143:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     /* Storage counters */
 144:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     tfp_sprintf(cmsx_BlackboxDeviceStorageUsed, "%ld%s", storageUsed, unit);
 313              	 .loc 2 144 0
 314 00c2 1048     	 ldr r0,.L22+36
 315 00c4 1049     	 ldr r1,.L22+40
 316 00c6 7A68     	 ldr r2,[r7,#4]
 317 00c8 FB68     	 ldr r3,[r7,#12]
 318 00ca FFF7FEFF 	 bl tfp_sprintf
 145:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     tfp_sprintf(cmsx_BlackboxDeviceStorageFree, "%ld%s", storageFree, unit);
 319              	 .loc 2 145 0
 320 00ce 0F48     	 ldr r0,.L22+44
 321 00d0 0D49     	 ldr r1,.L22+40
 322 00d2 3A68     	 ldr r2,[r7]
 323 00d4 FB68     	 ldr r3,[r7,#12]
 324 00d6 FFF7FEFF 	 bl tfp_sprintf
 146:../cleanflight/src/main/cms/cms_menu_blackbox.c **** }
 325              	 .loc 2 146 0
 326 00da 1037     	 adds r7,r7,#16
 327              	.LCFI11:
 328              	 .cfi_def_cfa_offset 8
 329 00dc BD46     	 mov sp,r7
 330              	.LCFI12:
 331              	 .cfi_def_cfa_register 13
 332              	 
 333 00de 80BD     	 pop {r7,pc}
 334              	.L23:
 335              	 .align 2
 336              	.L22:
 337 00e0 20000000 	 .word .LC4
 338 00e4 24000000 	 .word .LC5
 339 00e8 00000000 	 .word cmsx_BlackboxStatus
 340 00ec 28000000 	 .word .LC6
 341 00f0 30000000 	 .word .LC7
 342 00f4 38000000 	 .word .LC8
 343 00f8 40000000 	 .word .LC9
 344 00fc D34D6210 	 .word 274877907
 345 0100 48000000 	 .word .LC10
 346 0104 00000000 	 .word cmsx_BlackboxDeviceStorageUsed
 347 0108 4C000000 	 .word .LC11
 348 010c 00000000 	 .word cmsx_BlackboxDeviceStorageFree
 349              	 .cfi_endproc
 350              	.LFE539:
 352              	 .section .text.cmsx_Blackbox_onEnter,"ax",%progbits
 353              	 .align 2
 354              	 .thumb
 355              	 .thumb_func
 357              	cmsx_Blackbox_onEnter:
 358              	.LFB540:
 147:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 148:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #ifdef USE_FLASHFS
 149:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static long cmsx_EraseFlash(displayPort_t *pDisplay, const void *ptr)
 150:../cleanflight/src/main/cms/cms_menu_blackbox.c **** {
 151:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     UNUSED(ptr);
 152:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 153:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     if (!flashfsIsSupported()) {
 154:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         return 0;
 155:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     }
 156:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 157:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     displayClearScreen(pDisplay);
 158:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     displayWrite(pDisplay, 5, 3, "ERASING FLASH...");
 159:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     displayResync(pDisplay); // Was max7456RefreshAll(); Why at this timing?
 160:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 161:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     flashfsEraseCompletely();
 162:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     while (!flashfsIsReady()) {
 163:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         delay(100);
 164:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     }
 165:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 166:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     beeper(BEEPER_BLACKBOX_ERASE);
 167:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     displayClearScreen(pDisplay);
 168:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     displayResync(pDisplay); // Was max7456RefreshAll(); wedges during heavy SPI?
 169:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 170:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     // Update storage device status to show new used space amount
 171:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     cmsx_Blackbox_GetDeviceStatus();
 172:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 173:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     return 0;
 174:../cleanflight/src/main/cms/cms_menu_blackbox.c **** }
 175:../cleanflight/src/main/cms/cms_menu_blackbox.c **** #endif // USE_FLASHFS
 176:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 177:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static long cmsx_Blackbox_onEnter(void)
 178:../cleanflight/src/main/cms/cms_menu_blackbox.c **** {
 359              	 .loc 2 178 0
 360              	 .cfi_startproc
 361              	 
 362              	 
 363 0000 80B5     	 push {r7,lr}
 364              	.LCFI13:
 365              	 .cfi_def_cfa_offset 8
 366              	 .cfi_offset 7,-8
 367              	 .cfi_offset 14,-4
 368 0002 00AF     	 add r7,sp,#0
 369              	.LCFI14:
 370              	 .cfi_def_cfa_register 7
 179:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     cmsx_Blackbox_GetDeviceStatus();
 371              	 .loc 2 179 0
 372 0004 FFF7FEFF 	 bl cmsx_Blackbox_GetDeviceStatus
 180:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     cmsx_BlackboxDevice = blackboxConfig()->device;
 373              	 .loc 2 180 0
 374 0008 FFF7FEFF 	 bl blackboxConfig
 375 000c 0346     	 mov r3,r0
 376 000e 9A78     	 ldrb r2,[r3,#2]
 377 0010 054B     	 ldr r3,.L26
 378 0012 1A70     	 strb r2,[r3]
 181:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 182:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     blackboxConfig_p_ratio = blackboxConfig()->p_ratio;
 379              	 .loc 2 182 0
 380 0014 FFF7FEFF 	 bl blackboxConfig
 381 0018 0346     	 mov r3,r0
 382 001a 1B88     	 ldrh r3,[r3]
 383 001c 9AB2     	 uxth r2,r3
 384 001e 034B     	 ldr r3,.L26+4
 385 0020 1A80     	 strh r2,[r3]
 183:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     return 0;
 386              	 .loc 2 183 0
 387 0022 0023     	 movs r3,#0
 184:../cleanflight/src/main/cms/cms_menu_blackbox.c **** }
 388              	 .loc 2 184 0
 389 0024 1846     	 mov r0,r3
 390 0026 80BD     	 pop {r7,pc}
 391              	.L27:
 392              	 .align 2
 393              	.L26:
 394 0028 00000000 	 .word cmsx_BlackboxDevice
 395 002c 00000000 	 .word blackboxConfig_p_ratio
 396              	 .cfi_endproc
 397              	.LFE540:
 399              	 .section .text.cmsx_Blackbox_onExit,"ax",%progbits
 400              	 .align 2
 401              	 .thumb
 402              	 .thumb_func
 404              	cmsx_Blackbox_onExit:
 405              	.LFB541:
 185:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 186:../cleanflight/src/main/cms/cms_menu_blackbox.c **** static long cmsx_Blackbox_onExit(const OSD_Entry *self)
 187:../cleanflight/src/main/cms/cms_menu_blackbox.c **** {
 406              	 .loc 2 187 0
 407              	 .cfi_startproc
 408              	 
 409              	 
 410 0000 80B5     	 push {r7,lr}
 411              	.LCFI15:
 412              	 .cfi_def_cfa_offset 8
 413              	 .cfi_offset 7,-8
 414              	 .cfi_offset 14,-4
 415 0002 82B0     	 sub sp,sp,#8
 416              	.LCFI16:
 417              	 .cfi_def_cfa_offset 16
 418 0004 00AF     	 add r7,sp,#0
 419              	.LCFI17:
 420              	 .cfi_def_cfa_register 7
 421 0006 7860     	 str r0,[r7,#4]
 188:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     UNUSED(self);
 189:../cleanflight/src/main/cms/cms_menu_blackbox.c **** 
 190:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     if (blackboxMayEditConfig()) {
 422              	 .loc 2 190 0
 423 0008 FFF7FEFF 	 bl blackboxMayEditConfig
 424 000c 0346     	 mov r3,r0
 425 000e 002B     	 cmp r3,#0
 426 0010 07D0     	 beq .L29
 191:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         blackboxConfigMutable()->device = cmsx_BlackboxDevice;
 427              	 .loc 2 191 0
 428 0012 FFF7FEFF 	 bl blackboxConfigMutable
 429 0016 0246     	 mov r2,r0
 430 0018 074B     	 ldr r3,.L31
 431 001a 1B78     	 ldrb r3,[r3]
 432 001c 9370     	 strb r3,[r2,#2]
 192:../cleanflight/src/main/cms/cms_menu_blackbox.c ****         blackboxValidateConfig();
 433              	 .loc 2 192 0
 434 001e FFF7FEFF 	 bl blackboxValidateConfig
 435              	.L29:
 193:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     }
 194:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     blackboxConfigMutable()->p_ratio = blackboxConfig_p_ratio;
 436              	 .loc 2 194 0
 437 0022 FFF7FEFF 	 bl blackboxConfigMutable
 438 0026 0246     	 mov r2,r0
 439 0028 044B     	 ldr r3,.L31+4
 440 002a 1B88     	 ldrh r3,[r3]
 441 002c 1380     	 strh r3,[r2]
 195:../cleanflight/src/main/cms/cms_menu_blackbox.c ****     return 0;
 442              	 .loc 2 195 0
 443 002e 0023     	 movs r3,#0
 196:../cleanflight/src/main/cms/cms_menu_blackbox.c **** }
 444              	 .loc 2 196 0
 445 0030 1846     	 mov r0,r3
 446 0032 0837     	 adds r7,r7,#8
 447              	.LCFI18:
 448              	 .cfi_def_cfa_offset 8
 449 0034 BD46     	 mov sp,r7
 450              	.LCFI19:
 451              	 .cfi_def_cfa_register 13
 452              	 
 453 0036 80BD     	 pop {r7,pc}
 454              	.L32:
 455              	 .align 2
 456              	.L31:
 457 0038 00000000 	 .word cmsx_BlackboxDevice
 458 003c 00000000 	 .word blackboxConfig_p_ratio
 459              	 .cfi_endproc
 460              	.LFE541:
 462              	 .section .data.__compound_literal.0,"aw",%progbits
 463              	 .align 2
 466              	__compound_literal.0:
 467 0000 00000000 	 .word blackboxConfig_p_ratio
 468 0004 0100     	 .short 1
 469 0006 FF7F     	 .short 32767
 470 0008 0100     	 .short 1
 471 000a 0000     	 .section .rodata
 472 0052 0000     	 .align 2
 473              	.LC12:
 474 0054 2D2D2042 	 .ascii "-- BLACKBOX --\000"
 474      4C41434B 
 474      424F5820 
 474      2D2D00
 475 0063 00       	 .align 2
 476              	.LC13:
 477 0064 44455649 	 .ascii "DEVICE\000"
 477      434500
 478 006b 00       	 .align 2
 479              	.LC14:
 480 006c 28535441 	 .ascii "(STATUS)\000"
 480      54555329 
 480      00
 481 0075 000000   	 .align 2
 482              	.LC15:
 483 0078 28555345 	 .ascii "(USED)\000"
 483      442900
 484 007f 00       	 .align 2
 485              	.LC16:
 486 0080 28465245 	 .ascii "(FREE)\000"
 486      452900
 487 0087 00       	 .align 2
 488              	.LC17:
 489 0088 50205241 	 .ascii "P RATIO\000"
 489      54494F00 
 490              	 .align 2
 491              	.LC18:
 492 0090 4241434B 	 .ascii "BACK\000"
 492      00
 493 0095 000000   	 .section .data.cmsx_menuBlackboxEntries,"aw",%progbits
 494              	 .align 2
 497              	cmsx_menuBlackboxEntries:
 498 0000 54000000 	 .word .LC12
 499 0004 00       	 .byte 0
 500 0005 00000000 	 .4byte 0
 501 0009 00000000 	 .4byte 0
 502 000d 00       	 .byte 0
 503 000e 64000000 	 .4byte .LC13
 504 0012 0D       	 .byte 13
 505 0013 00000000 	 .4byte 0
 506 0017 00000000 	 .4byte cmsx_BlackboxDeviceTable
 507 001b 00       	 .byte 0
 508 001c 6C000000 	 .word .LC14
 509 0020 0A       	 .byte 10
 510 0021 00000000 	 .4byte 0
 511 0025 00000000 	 .4byte cmsx_BlackboxStatus
 512 0029 00       	 .byte 0
 513 002a 78000000 	 .4byte .LC15
 514 002e 0A       	 .byte 10
 515 002f 00000000 	 .4byte 0
 516 0033 00000000 	 .4byte cmsx_BlackboxDeviceStorageUsed
 517 0037 00       	 .byte 0
 518 0038 80000000 	 .word .LC16
 519 003c 0A       	 .byte 10
 520 003d 00000000 	 .4byte 0
 521 0041 00000000 	 .4byte cmsx_BlackboxDeviceStorageFree
 522 0045 00       	 .byte 0
 523 0046 88000000 	 .4byte .LC17
 524 004a 08       	 .byte 8
 525 004b 00000000 	 .4byte 0
 526 004f 00000000 	 .4byte __compound_literal.0
 527 0053 00       	 .byte 0
 528 0054 90000000 	 .word .LC18
 529 0058 01       	 .byte 1
 530 0059 00000000 	 .4byte 0
 531 005d 00000000 	 .4byte 0
 532 0061 00       	 .byte 0
 533 0062 00000000 	 .4byte 0
 534 0066 0E       	 .byte 14
 535 0067 00000000 	 .4byte 0
 536 006b 00000000 	 .4byte 0
 537 006f 00       	 .byte 0
 538              	 .global cmsx_menuBlackbox
 539              	 .section .data.cmsx_menuBlackbox,"aw",%progbits
 540              	 .align 2
 543              	cmsx_menuBlackbox:
 544 0000 00000000 	 .word cmsx_Blackbox_onEnter
 545 0004 00000000 	 .word cmsx_Blackbox_onExit
 546 0008 00000000 	 .word cmsx_menuBlackboxEntries
 547              	 .text
 548              	.Letext0:
 549              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 550              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 551              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 552              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 553              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/display.h"
 554              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms_types.h"
 555              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 556              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 557              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/flash.h"
 558              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 559              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/sdcard.h"
 560              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 561              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/asyncfatfs/asyncfatfs.h"
 562              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 563              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
 564              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cms_menu_blackbox.c
    {standard input}:20     .text.blackboxConfig:00000000 $t
    {standard input}:24     .text.blackboxConfig:00000000 blackboxConfig
    {standard input}:54     .text.blackboxConfig:00000010 $d
    {standard input}:59     .text.blackboxConfigMutable:00000000 $t
    {standard input}:63     .text.blackboxConfigMutable:00000000 blackboxConfigMutable
    {standard input}:92     .text.blackboxConfigMutable:00000010 $d
                            *COM*:00000004 pCurrentDisplay
    {standard input}:98     .rodata:00000000 $d
    {standard input}:111    .rodata.cmsx_BlackboxDeviceNames:00000000 $d
    {standard input}:114    .rodata.cmsx_BlackboxDeviceNames:00000000 cmsx_BlackboxDeviceNames
    {standard input}:120    .bss.blackboxConfig_p_ratio:00000000 $d
    {standard input}:123    .bss.blackboxConfig_p_ratio:00000000 blackboxConfig_p_ratio
    {standard input}:128    .bss.cmsx_BlackboxDevice:00000000 cmsx_BlackboxDevice
    {standard input}:129    .bss.cmsx_BlackboxDevice:00000000 $d
    {standard input}:131    .data.cmsx_BlackboxDeviceTable:00000000 $d
    {standard input}:134    .data.cmsx_BlackboxDeviceTable:00000000 cmsx_BlackboxDeviceTable
    {standard input}:139    .bss.cmsx_BlackboxStatus:00000000 $d
    {standard input}:142    .bss.cmsx_BlackboxStatus:00000000 cmsx_BlackboxStatus
    {standard input}:145    .bss.cmsx_BlackboxDeviceStorageUsed:00000000 $d
    {standard input}:148    .bss.cmsx_BlackboxDeviceStorageUsed:00000000 cmsx_BlackboxDeviceStorageUsed
    {standard input}:151    .bss.cmsx_BlackboxDeviceStorageFree:00000000 $d
    {standard input}:154    .bss.cmsx_BlackboxDeviceStorageFree:00000000 cmsx_BlackboxDeviceStorageFree
    {standard input}:182    .text.cmsx_Blackbox_GetDeviceStatus:00000000 $t
    {standard input}:186    .text.cmsx_Blackbox_GetDeviceStatus:00000000 cmsx_Blackbox_GetDeviceStatus
    {standard input}:337    .text.cmsx_Blackbox_GetDeviceStatus:000000e0 $d
    {standard input}:353    .text.cmsx_Blackbox_onEnter:00000000 $t
    {standard input}:357    .text.cmsx_Blackbox_onEnter:00000000 cmsx_Blackbox_onEnter
    {standard input}:394    .text.cmsx_Blackbox_onEnter:00000028 $d
    {standard input}:400    .text.cmsx_Blackbox_onExit:00000000 $t
    {standard input}:404    .text.cmsx_Blackbox_onExit:00000000 cmsx_Blackbox_onExit
    {standard input}:457    .text.cmsx_Blackbox_onExit:00000038 $d
    {standard input}:463    .data.__compound_literal.0:00000000 $d
    {standard input}:466    .data.__compound_literal.0:00000000 __compound_literal.0
    {standard input}:494    .data.cmsx_menuBlackboxEntries:00000000 $d
    {standard input}:497    .data.cmsx_menuBlackboxEntries:00000000 cmsx_menuBlackboxEntries
    {standard input}:543    .data.cmsx_menuBlackbox:00000000 cmsx_menuBlackbox
    {standard input}:540    .data.cmsx_menuBlackbox:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
blackboxConfig_System
sdcard_isInserted
tfp_sprintf
sdcard_isFunctional
afatfs_getFilesystemState
afatfs_getContiguousFreeSpace
sdcard_getMetadata
blackboxMayEditConfig
blackboxValidateConfig
