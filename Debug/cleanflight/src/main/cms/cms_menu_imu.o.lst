   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "cms_menu_imu.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm pCurrentDisplay,4,4
  20              	 .section .text.controlRateProfiles,"ax",%progbits
  21              	 .align 2
  22              	 .thumb
  23              	 .thumb_func
  25              	controlRateProfiles:
  26              	.LFB533:
  27              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/controlrate_profile.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** #define CONTROL_RATE_PROFILE_COUNT  6
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     RATES_TYPE_BETAFLIGHT = 0,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     RATES_TYPE_RACEFLIGHT,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** } ratesType_e;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** typedef enum {
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     THROTTLE_LIMIT_TYPE_OFF = 0,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     THROTTLE_LIMIT_TYPE_SCALE,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     THROTTLE_LIMIT_TYPE_CLIP,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** } throttleLimitType_e;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** typedef struct controlRateConfig_s {
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t thrMid8;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t thrExpo8;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t rates_type;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t rcRates[3];
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t rcExpo[3];
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t rates[3];
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t dynThrPID;
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint16_t tpa_breakpoint;                // Breakpoint where TPA is activated
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t throttle_limit_type;            // Sets the throttle limiting type - off, scale or clip
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t throttle_limit_percent;         // Sets the maximum pilot commanded throttle limit
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** } controlRateConfig_t;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** PG_DECLARE_ARRAY(controlRateConfig_t, CONTROL_RATE_PROFILE_COUNT, controlRateProfiles);
  28              	 .loc 1 53 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44              	 .loc 1 53 0
  45 0008 7A68     	 ldr r2,[r7,#4]
  46 000a 1346     	 mov r3,r2
  47 000c 1B01     	 lsls r3,r3,#4
  48 000e 1344     	 add r3,r3,r2
  49 0010 034A     	 ldr r2,.L3
  50 0012 1344     	 add r3,r3,r2
  51 0014 1846     	 mov r0,r3
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	.L4:
  65              	 .align 2
  66              	.L3:
  67 0020 00000000 	 .word controlRateProfiles_SystemArray
  68              	 .cfi_endproc
  69              	.LFE533:
  71              	 .section .text.controlRateProfilesMutable,"ax",%progbits
  72              	 .align 2
  73              	 .thumb
  74              	 .thumb_func
  76              	controlRateProfilesMutable:
  77              	.LFB534:
  78              	 .loc 1 53 0
  79              	 .cfi_startproc
  80              	 
  81              	 
  82              	 
  83 0000 80B4     	 push {r7}
  84              	.LCFI6:
  85              	 .cfi_def_cfa_offset 4
  86              	 .cfi_offset 7,-4
  87 0002 83B0     	 sub sp,sp,#12
  88              	.LCFI7:
  89              	 .cfi_def_cfa_offset 16
  90 0004 00AF     	 add r7,sp,#0
  91              	.LCFI8:
  92              	 .cfi_def_cfa_register 7
  93 0006 7860     	 str r0,[r7,#4]
  94              	 .loc 1 53 0
  95 0008 7A68     	 ldr r2,[r7,#4]
  96 000a 1346     	 mov r3,r2
  97 000c 1B01     	 lsls r3,r3,#4
  98 000e 1344     	 add r3,r3,r2
  99 0010 034A     	 ldr r2,.L7
 100 0012 1344     	 add r3,r3,r2
 101 0014 1846     	 mov r0,r3
 102 0016 0C37     	 adds r7,r7,#12
 103              	.LCFI9:
 104              	 .cfi_def_cfa_offset 4
 105 0018 BD46     	 mov sp,r7
 106              	.LCFI10:
 107              	 .cfi_def_cfa_register 13
 108              	 
 109 001a 5DF8047B 	 ldr r7,[sp],#4
 110              	.LCFI11:
 111              	 .cfi_restore 7
 112              	 .cfi_def_cfa_offset 0
 113 001e 7047     	 bx lr
 114              	.L8:
 115              	 .align 2
 116              	.L7:
 117 0020 00000000 	 .word controlRateProfiles_SystemArray
 118              	 .cfi_endproc
 119              	.LFE534:
 121              	 .section .text.pidProfiles,"ax",%progbits
 122              	 .align 2
 123              	 .thumb
 124              	 .thumb_func
 126              	pidProfiles:
 127              	.LFB542:
 128              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/pid.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #include <stdbool.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #include "common/time.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #include "common/filter.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define MAX_PID_PROCESS_DENOM       16
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PID_CONTROLLER_BETAFLIGHT   1
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PID_MIXER_SCALING           1000.0f
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PID_SERVO_MIXER_SCALING     0.7f
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PIDSUM_LIMIT                500
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PIDSUM_LIMIT_YAW            400
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PIDSUM_LIMIT_MIN            100
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PIDSUM_LIMIT_MAX            1000
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** // Scaling factors for Pids for better tunable range in configurator for betaflight pid controller.
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PTERM_SCALE 0.032029f
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define ITERM_SCALE 0.244381f
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define DTERM_SCALE 0.000529f
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** // The constant scale factor to replace the Kd component of the feedforward calculation.
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** // This value gives the same "feel" as the previous Kd default of 26 (26 * DTERM_SCALE)
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define FEEDFORWARD_SCALE 0.013754f
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_ROLL,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_PITCH,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_YAW,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_LEVEL,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_MAG,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_ITEM_COUNT
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidIndex_e;
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     SUPEREXPO_YAW_OFF = 0,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     SUPEREXPO_YAW_ON,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     SUPEREXPO_YAW_ALWAYS
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidSuperExpoYaw_e;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_STABILISATION_OFF = 0,
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_STABILISATION_ON
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidStabilisationState_e;
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_CRASH_RECOVERY_OFF = 0,
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_CRASH_RECOVERY_ON,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_CRASH_RECOVERY_BEEP
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidCrashRecovery_e;
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef struct pidf_s {
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t P;
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t I;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t D;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t F;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidf_t;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ANTI_GRAVITY_SMOOTH,
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ANTI_GRAVITY_STEP
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } antiGravityMode_e;
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_OFF,
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_RP,
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_RPY,
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_RP_INC,
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_RPY_INC
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } itermRelax_e;
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_GYRO,
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_SETPOINT
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } itermRelaxType_e;
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef struct pidProfile_s {
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t yaw_lowpass_hz;                // Additional yaw filter when yaw axis too noisy
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t dterm_lowpass_hz;              // Delta Filter in hz
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t dterm_notch_hz;                // Biquad dterm notch hz
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t dterm_notch_cutoff;            // Biquad dterm notch low cutoff
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     pidf_t  pid[PID_ITEM_COUNT];
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t dterm_filter_type;              // Filter selection for dterm
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t itermWindupPointPercent;        // Experimental ITerm windup threshold, percent motor s
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t pidSumLimit;
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t pidSumLimitYaw;
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t pidAtMinThrottle;               // Disable/Enable pids on zero throttle. Normally even 
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t levelAngleLimit;                // Max angle in degrees in level mode
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t horizon_tilt_effect;            // inclination factor for Horizon mode
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t horizon_tilt_expert_mode;       // OFF or ON
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     // Betaflight PID controller parameters
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t  antiGravityMode;             // type of anti gravity method
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t itermThrottleThreshold;        // max allowed throttle delta before iterm accelerated 
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t itermAcceleratorGain;          // Iterm Accelerator Gain when itermThrottlethreshold i
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t yawRateAccelLimit;             // yaw accel limiter for deg/sec/ms
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t rateAccelLimit;                // accel limiter roll/pitch deg/sec/ms
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_dthreshold;              // dterm crash value
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_gthreshold;              // gyro crash value
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_setpoint_threshold;      // setpoint must be below this value to detect crash, s
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_time;                    // ms
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_delay;                   // ms
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t crash_recovery_angle;           // degrees
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t crash_recovery_rate;            // degree/second
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t vbatPidCompensation;            // Scale PIDsum to battery voltage
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t feedForwardTransition;          // Feed forward weight transition
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_limit_yaw;               // limits yaw errorRate, so crashes don't cause huge th
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t itermLimit;
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t dterm_lowpass2_hz;             // Extra PT1 Filter on D in hz
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t crash_recovery;                 // off, on, on and beeps when it is in crash recovery m
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t throttle_boost;                 // how much should throttle be boosted during transient
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t throttle_boost_cutoff;          // Which cutoff frequency to use for throttle boost. hi
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t iterm_rotation;                 // rotates iterm to translate world errors to local coo
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t smart_feedforward;              // takes only the larger of P and the D weight feed for
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t iterm_relax_type;               // Specifies type of relax algorithm
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t iterm_relax_cutoff;             // This cutoff frequency specifies a low pass filter wh
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t iterm_relax;                    // Enable iterm suppression during stick input
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t acro_trainer_angle_limit;       // Acro trainer roll/pitch angle limit in degrees
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t acro_trainer_debug_axis;        // The axis for which record debugging values are captu
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t acro_trainer_gain;              // The strength of the limiting. Raising may reduce ove
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t acro_trainer_lookahead_ms;     // The lookahead window in milliseconds used to reduce 
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t abs_control_gain;               // How strongly should the absolute accumulated error b
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t abs_control_limit;              // Limit to the correction
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t abs_control_error_limit;        // Limit to the accumulated error
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidProfile_t;
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #ifndef USE_OSD_SLAVE
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** PG_DECLARE_ARRAY(pidProfile_t, MAX_PROFILE_COUNT, pidProfiles);
 129              	 .loc 2 151 0
 130              	 .cfi_startproc
 131              	 
 132              	 
 133              	 
 134 0000 80B4     	 push {r7}
 135              	.LCFI12:
 136              	 .cfi_def_cfa_offset 4
 137              	 .cfi_offset 7,-4
 138 0002 83B0     	 sub sp,sp,#12
 139              	.LCFI13:
 140              	 .cfi_def_cfa_offset 16
 141 0004 00AF     	 add r7,sp,#0
 142              	.LCFI14:
 143              	 .cfi_def_cfa_register 7
 144 0006 7860     	 str r0,[r7,#4]
 145              	 .loc 2 151 0
 146 0008 7B68     	 ldr r3,[r7,#4]
 147 000a 5822     	 movs r2,#88
 148 000c 02FB03F3 	 mul r3,r2,r3
 149 0010 034A     	 ldr r2,.L11
 150 0012 1344     	 add r3,r3,r2
 151 0014 1846     	 mov r0,r3
 152 0016 0C37     	 adds r7,r7,#12
 153              	.LCFI15:
 154              	 .cfi_def_cfa_offset 4
 155 0018 BD46     	 mov sp,r7
 156              	.LCFI16:
 157              	 .cfi_def_cfa_register 13
 158              	 
 159 001a 5DF8047B 	 ldr r7,[sp],#4
 160              	.LCFI17:
 161              	 .cfi_restore 7
 162              	 .cfi_def_cfa_offset 0
 163 001e 7047     	 bx lr
 164              	.L12:
 165              	 .align 2
 166              	.L11:
 167 0020 00000000 	 .word pidProfiles_SystemArray
 168              	 .cfi_endproc
 169              	.LFE542:
 171              	 .section .text.pidProfilesMutable,"ax",%progbits
 172              	 .align 2
 173              	 .thumb
 174              	 .thumb_func
 176              	pidProfilesMutable:
 177              	.LFB543:
 178              	 .loc 2 151 0
 179              	 .cfi_startproc
 180              	 
 181              	 
 182              	 
 183 0000 80B4     	 push {r7}
 184              	.LCFI18:
 185              	 .cfi_def_cfa_offset 4
 186              	 .cfi_offset 7,-4
 187 0002 83B0     	 sub sp,sp,#12
 188              	.LCFI19:
 189              	 .cfi_def_cfa_offset 16
 190 0004 00AF     	 add r7,sp,#0
 191              	.LCFI20:
 192              	 .cfi_def_cfa_register 7
 193 0006 7860     	 str r0,[r7,#4]
 194              	 .loc 2 151 0
 195 0008 7B68     	 ldr r3,[r7,#4]
 196 000a 5822     	 movs r2,#88
 197 000c 02FB03F3 	 mul r3,r2,r3
 198 0010 034A     	 ldr r2,.L15
 199 0012 1344     	 add r3,r3,r2
 200 0014 1846     	 mov r0,r3
 201 0016 0C37     	 adds r7,r7,#12
 202              	.LCFI21:
 203              	 .cfi_def_cfa_offset 4
 204 0018 BD46     	 mov sp,r7
 205              	.LCFI22:
 206              	 .cfi_def_cfa_register 13
 207              	 
 208 001a 5DF8047B 	 ldr r7,[sp],#4
 209              	.LCFI23:
 210              	 .cfi_restore 7
 211              	 .cfi_def_cfa_offset 0
 212 001e 7047     	 bx lr
 213              	.L16:
 214              	 .align 2
 215              	.L15:
 216 0020 00000000 	 .word pidProfiles_SystemArray
 217              	 .cfi_endproc
 218              	.LFE543:
 220              	 .section .text.gyroConfig,"ax",%progbits
 221              	 .align 2
 222              	 .thumb
 223              	 .thumb_func
 225              	gyroConfig:
 226              	.LFB547:
 227              	 .file 3 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/gyro.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "common/axis.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "common/time.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "drivers/bus.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "drivers/sensor.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_NONE = 0,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_DEFAULT,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU6050,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_L3G4200D,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU3050,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_L3GD20,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU6000,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU6500,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU9250,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20601,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20602,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20608G,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20649,
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20689,
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_BMI160,
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_FAKE
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyroSensor_e;
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef struct gyro_s {
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint32_t targetLooptime;
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     float gyroADCf[XYZ_AXIS_COUNT];
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyro_t;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** extern gyro_t gyro;
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef enum {
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_OVERFLOW_CHECK_NONE = 0,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_OVERFLOW_CHECK_YAW,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_OVERFLOW_CHECK_ALL_AXES
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyroOverflowCheck_e;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #define GYRO_CONFIG_USE_GYRO_1      0
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #define GYRO_CONFIG_USE_GYRO_2      1
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #define GYRO_CONFIG_USE_GYRO_BOTH   2
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef enum {
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     FILTER_LOWPASS = 0,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     FILTER_LOWPASS2
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } filterSlots;
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef struct gyroConfig_s {
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_align;                       // gyro alignment
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyroMovementCalibrationThreshold; // people keep forgetting that moving model while in
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_sync_denom;                  // Gyro sample divider
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_hardware_lpf;                // gyro DLPF setting
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_32khz_hardware_lpf;          // gyro 32khz DLPF setting
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_high_fsr;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_use_32khz;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_to_use;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_lowpass_hz;
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_lowpass2_hz;
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_hz_1;
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_cutoff_1;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_hz_2;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_cutoff_2;
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     int16_t  gyro_offset_yaw;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  checkOverflow;
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     // Lowpass primary/secondary
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_lowpass_type;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_lowpass2_type;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  yaw_spin_recovery;
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     int16_t  yaw_spin_threshold;
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyroCalibrationDuration;  // Gyro calibration duration in 1/100 second
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t dyn_notch_quality; // bandpass quality factor, 100 for steep sided bandpass
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t dyn_notch_width_percent;
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyroConfig_t;
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** PG_DECLARE(gyroConfig_t, gyroConfig);
 228              	 .loc 3 103 0
 229              	 .cfi_startproc
 230              	 
 231              	 
 232              	 
 233 0000 80B4     	 push {r7}
 234              	.LCFI24:
 235              	 .cfi_def_cfa_offset 4
 236              	 .cfi_offset 7,-4
 237 0002 00AF     	 add r7,sp,#0
 238              	.LCFI25:
 239              	 .cfi_def_cfa_register 7
 240              	 .loc 3 103 0
 241 0004 024B     	 ldr r3,.L19
 242 0006 1846     	 mov r0,r3
 243 0008 BD46     	 mov sp,r7
 244              	.LCFI26:
 245              	 .cfi_def_cfa_register 13
 246              	 
 247 000a 5DF8047B 	 ldr r7,[sp],#4
 248              	.LCFI27:
 249              	 .cfi_restore 7
 250              	 .cfi_def_cfa_offset 0
 251 000e 7047     	 bx lr
 252              	.L20:
 253              	 .align 2
 254              	.L19:
 255 0010 00000000 	 .word gyroConfig_System
 256              	 .cfi_endproc
 257              	.LFE547:
 259              	 .section .text.gyroConfigMutable,"ax",%progbits
 260              	 .align 2
 261              	 .thumb
 262              	 .thumb_func
 264              	gyroConfigMutable:
 265              	.LFB548:
 266              	 .loc 3 103 0
 267              	 .cfi_startproc
 268              	 
 269              	 
 270              	 
 271 0000 80B4     	 push {r7}
 272              	.LCFI28:
 273              	 .cfi_def_cfa_offset 4
 274              	 .cfi_offset 7,-4
 275 0002 00AF     	 add r7,sp,#0
 276              	.LCFI29:
 277              	 .cfi_def_cfa_register 7
 278              	 .loc 3 103 0
 279 0004 024B     	 ldr r3,.L23
 280 0006 1846     	 mov r0,r3
 281 0008 BD46     	 mov sp,r7
 282              	.LCFI30:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 000a 5DF8047B 	 ldr r7,[sp],#4
 286              	.LCFI31:
 287              	 .cfi_restore 7
 288              	 .cfi_def_cfa_offset 0
 289 000e 7047     	 bx lr
 290              	.L24:
 291              	 .align 2
 292              	.L23:
 293 0010 00000000 	 .word gyroConfig_System
 294              	 .cfi_endproc
 295              	.LFE548:
 297              	 .section .bss.tmpPidProfileIndex,"aw",%nobits
 300              	tmpPidProfileIndex:
 301 0000 00       	 .space 1
 302              	 .section .bss.pidProfileIndex,"aw",%nobits
 305              	pidProfileIndex:
 306 0000 00       	 .space 1
 307              	 .section .data.pidProfileIndexString,"aw",%progbits
 308              	 .align 2
 311              	pidProfileIndexString:
 312 0000 207000   	 .ascii " p\000"
 313 0003 00       	 .section .bss.tempPid,"aw",%nobits
 314              	 .align 2
 317              	tempPid:
 318 0000 00000000 	 .space 9
 318      00000000 
 318      00
 319 0009 000000   	 .section .bss.tempPidF,"aw",%nobits
 320              	 .align 2
 323              	tempPidF:
 324 0000 00000000 	 .space 6
 324      0000
 325 0006 0000     	 .section .bss.tmpRateProfileIndex,"aw",%nobits
 328              	tmpRateProfileIndex:
 329 0000 00       	 .space 1
 330              	 .section .bss.rateProfileIndex,"aw",%nobits
 333              	rateProfileIndex:
 334 0000 00       	 .space 1
 335              	 .section .data.rateProfileIndexString,"aw",%progbits
 336              	 .align 2
 339              	rateProfileIndexString:
 340 0000 20702D72 	 .ascii " p-r\000"
 340      00
 341 0005 000000   	 .section .bss.rateProfile,"aw",%nobits
 342              	 .align 2
 345              	rateProfile:
 346 0000 00000000 	 .space 17
 346      00000000 
 346      00000000 
 346      00000000 
 346      00
 347 0011 000000   	 .section .text.cmsx_menuImu_onEnter,"ax",%progbits
 348              	 .align 2
 349              	 .thumb
 350              	 .thumb_func
 352              	cmsx_menuImu_onEnter:
 353              	.LFB549:
 354              	 .file 4 "../cleanflight/src/main/cms/cms_menu_imu.c"
   1:../cleanflight/src/main/cms/cms_menu_imu.c **** /*
   2:../cleanflight/src/main/cms/cms_menu_imu.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/cms/cms_menu_imu.c ****  *
   4:../cleanflight/src/main/cms/cms_menu_imu.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/cms/cms_menu_imu.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/cms/cms_menu_imu.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/cms/cms_menu_imu.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/cms/cms_menu_imu.c ****  * any later version.
   9:../cleanflight/src/main/cms/cms_menu_imu.c ****  *
  10:../cleanflight/src/main/cms/cms_menu_imu.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/cms/cms_menu_imu.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/cms/cms_menu_imu.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/cms/cms_menu_imu.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/cms/cms_menu_imu.c ****  *
  15:../cleanflight/src/main/cms/cms_menu_imu.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/cms/cms_menu_imu.c ****  * along with this software.
  17:../cleanflight/src/main/cms/cms_menu_imu.c ****  *
  18:../cleanflight/src/main/cms/cms_menu_imu.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/cms/cms_menu_imu.c ****  */
  20:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  21:../cleanflight/src/main/cms/cms_menu_imu.c **** // Menu contents for PID, RATES, RC preview, misc
  22:../cleanflight/src/main/cms/cms_menu_imu.c **** // Should be part of the relevant .c file.
  23:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  24:../cleanflight/src/main/cms/cms_menu_imu.c **** #include <stdbool.h>
  25:../cleanflight/src/main/cms/cms_menu_imu.c **** #include <stdint.h>
  26:../cleanflight/src/main/cms/cms_menu_imu.c **** #include <string.h>
  27:../cleanflight/src/main/cms/cms_menu_imu.c **** #include <ctype.h>
  28:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  29:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "platform.h"
  30:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  31:../cleanflight/src/main/cms/cms_menu_imu.c **** #ifdef USE_CMS
  32:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  33:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "build/version.h"
  34:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  35:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "cms/cms.h"
  36:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "cms/cms_types.h"
  37:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "cms/cms_menu_imu.h"
  38:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  39:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "common/utils.h"
  40:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  41:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "config/feature.h"
  42:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "pg/pg.h"
  43:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  44:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "fc/config.h"
  45:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "fc/controlrate_profile.h"
  46:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "fc/rc_controls.h"
  47:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "fc/runtime_config.h"
  48:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  49:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "flight/pid.h"
  50:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  51:../cleanflight/src/main/cms/cms_menu_imu.c **** #include "sensors/gyro.h"
  52:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  53:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  54:../cleanflight/src/main/cms/cms_menu_imu.c **** //
  55:../cleanflight/src/main/cms/cms_menu_imu.c **** // PID
  56:../cleanflight/src/main/cms/cms_menu_imu.c **** //
  57:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t tmpPidProfileIndex;
  58:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t pidProfileIndex;
  59:../cleanflight/src/main/cms/cms_menu_imu.c **** static char pidProfileIndexString[] = " p";
  60:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t tempPid[3][3];
  61:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t tempPidF[3];
  62:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  63:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t tmpRateProfileIndex;
  64:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t rateProfileIndex;
  65:../cleanflight/src/main/cms/cms_menu_imu.c **** static char rateProfileIndexString[] = " p-r";
  66:../cleanflight/src/main/cms/cms_menu_imu.c **** static controlRateConfig_t rateProfile;
  67:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  68:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_menuImu_onEnter(void)
  69:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 355              	 .loc 4 69 0
 356              	 .cfi_startproc
 357              	 
 358              	 
 359 0000 80B5     	 push {r7,lr}
 360              	.LCFI32:
 361              	 .cfi_def_cfa_offset 8
 362              	 .cfi_offset 7,-8
 363              	 .cfi_offset 14,-4
 364 0002 00AF     	 add r7,sp,#0
 365              	.LCFI33:
 366              	 .cfi_def_cfa_register 7
  70:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfileIndex = getCurrentPidProfileIndex();
 367              	 .loc 4 70 0
 368 0004 FFF7FEFF 	 bl getCurrentPidProfileIndex
 369 0008 0346     	 mov r3,r0
 370 000a 1A46     	 mov r2,r3
 371 000c 0B4B     	 ldr r3,.L27
 372 000e 1A70     	 strb r2,[r3]
  71:../cleanflight/src/main/cms/cms_menu_imu.c ****     tmpPidProfileIndex = pidProfileIndex + 1;
 373              	 .loc 4 71 0
 374 0010 0A4B     	 ldr r3,.L27
 375 0012 1B78     	 ldrb r3,[r3]
 376 0014 0133     	 adds r3,r3,#1
 377 0016 DAB2     	 uxtb r2,r3
 378 0018 094B     	 ldr r3,.L27+4
 379 001a 1A70     	 strb r2,[r3]
  72:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  73:../cleanflight/src/main/cms/cms_menu_imu.c ****     rateProfileIndex = getCurrentControlRateProfileIndex();
 380              	 .loc 4 73 0
 381 001c FFF7FEFF 	 bl getCurrentControlRateProfileIndex
 382 0020 0346     	 mov r3,r0
 383 0022 1A46     	 mov r2,r3
 384 0024 074B     	 ldr r3,.L27+8
 385 0026 1A70     	 strb r2,[r3]
  74:../cleanflight/src/main/cms/cms_menu_imu.c ****     tmpRateProfileIndex = rateProfileIndex + 1;
 386              	 .loc 4 74 0
 387 0028 064B     	 ldr r3,.L27+8
 388 002a 1B78     	 ldrb r3,[r3]
 389 002c 0133     	 adds r3,r3,#1
 390 002e DAB2     	 uxtb r2,r3
 391 0030 054B     	 ldr r3,.L27+12
 392 0032 1A70     	 strb r2,[r3]
  75:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  76:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 393              	 .loc 4 76 0
 394 0034 0023     	 movs r3,#0
  77:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 395              	 .loc 4 77 0
 396 0036 1846     	 mov r0,r3
 397 0038 80BD     	 pop {r7,pc}
 398              	.L28:
 399 003a 00BF     	 .align 2
 400              	.L27:
 401 003c 00000000 	 .word pidProfileIndex
 402 0040 00000000 	 .word tmpPidProfileIndex
 403 0044 00000000 	 .word rateProfileIndex
 404 0048 00000000 	 .word tmpRateProfileIndex
 405              	 .cfi_endproc
 406              	.LFE549:
 408              	 .section .text.cmsx_menuImu_onExit,"ax",%progbits
 409              	 .align 2
 410              	 .thumb
 411              	 .thumb_func
 413              	cmsx_menuImu_onExit:
 414              	.LFB550:
  78:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  79:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_menuImu_onExit(const OSD_Entry *self)
  80:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 415              	 .loc 4 80 0
 416              	 .cfi_startproc
 417              	 
 418              	 
 419 0000 80B5     	 push {r7,lr}
 420              	.LCFI34:
 421              	 .cfi_def_cfa_offset 8
 422              	 .cfi_offset 7,-8
 423              	 .cfi_offset 14,-4
 424 0002 82B0     	 sub sp,sp,#8
 425              	.LCFI35:
 426              	 .cfi_def_cfa_offset 16
 427 0004 00AF     	 add r7,sp,#0
 428              	.LCFI36:
 429              	 .cfi_def_cfa_register 7
 430 0006 7860     	 str r0,[r7,#4]
  81:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(self);
  82:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  83:../cleanflight/src/main/cms/cms_menu_imu.c ****     changePidProfile(pidProfileIndex);
 431              	 .loc 4 83 0
 432 0008 074B     	 ldr r3,.L31
 433 000a 1B78     	 ldrb r3,[r3]
 434 000c 1846     	 mov r0,r3
 435 000e FFF7FEFF 	 bl changePidProfile
  84:../cleanflight/src/main/cms/cms_menu_imu.c ****     changeControlRateProfile(rateProfileIndex);
 436              	 .loc 4 84 0
 437 0012 064B     	 ldr r3,.L31+4
 438 0014 1B78     	 ldrb r3,[r3]
 439 0016 1846     	 mov r0,r3
 440 0018 FFF7FEFF 	 bl changeControlRateProfile
  85:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  86:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 441              	 .loc 4 86 0
 442 001c 0023     	 movs r3,#0
  87:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 443              	 .loc 4 87 0
 444 001e 1846     	 mov r0,r3
 445 0020 0837     	 adds r7,r7,#8
 446              	.LCFI37:
 447              	 .cfi_def_cfa_offset 8
 448 0022 BD46     	 mov sp,r7
 449              	.LCFI38:
 450              	 .cfi_def_cfa_register 13
 451              	 
 452 0024 80BD     	 pop {r7,pc}
 453              	.L32:
 454 0026 00BF     	 .align 2
 455              	.L31:
 456 0028 00000000 	 .word pidProfileIndex
 457 002c 00000000 	 .word rateProfileIndex
 458              	 .cfi_endproc
 459              	.LFE550:
 461              	 .section .text.cmsx_profileIndexOnChange,"ax",%progbits
 462              	 .align 2
 463              	 .thumb
 464              	 .thumb_func
 466              	cmsx_profileIndexOnChange:
 467              	.LFB551:
  88:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  89:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_profileIndexOnChange(displayPort_t *displayPort, const void *ptr)
  90:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 468              	 .loc 4 90 0
 469              	 .cfi_startproc
 470              	 
 471              	 
 472 0000 80B5     	 push {r7,lr}
 473              	.LCFI39:
 474              	 .cfi_def_cfa_offset 8
 475              	 .cfi_offset 7,-8
 476              	 .cfi_offset 14,-4
 477 0002 82B0     	 sub sp,sp,#8
 478              	.LCFI40:
 479              	 .cfi_def_cfa_offset 16
 480 0004 00AF     	 add r7,sp,#0
 481              	.LCFI41:
 482              	 .cfi_def_cfa_register 7
 483 0006 7860     	 str r0,[r7,#4]
 484 0008 3960     	 str r1,[r7]
  91:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(displayPort);
  92:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(ptr);
  93:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  94:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfileIndex = tmpPidProfileIndex - 1;
 485              	 .loc 4 94 0
 486 000a 084B     	 ldr r3,.L35
 487 000c 1B78     	 ldrb r3,[r3]
 488 000e 013B     	 subs r3,r3,#1
 489 0010 DAB2     	 uxtb r2,r3
 490 0012 074B     	 ldr r3,.L35+4
 491 0014 1A70     	 strb r2,[r3]
  95:../cleanflight/src/main/cms/cms_menu_imu.c ****     changePidProfile(pidProfileIndex);
 492              	 .loc 4 95 0
 493 0016 064B     	 ldr r3,.L35+4
 494 0018 1B78     	 ldrb r3,[r3]
 495 001a 1846     	 mov r0,r3
 496 001c FFF7FEFF 	 bl changePidProfile
  96:../cleanflight/src/main/cms/cms_menu_imu.c **** 
  97:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 497              	 .loc 4 97 0
 498 0020 0023     	 movs r3,#0
  98:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 499              	 .loc 4 98 0
 500 0022 1846     	 mov r0,r3
 501 0024 0837     	 adds r7,r7,#8
 502              	.LCFI42:
 503              	 .cfi_def_cfa_offset 8
 504 0026 BD46     	 mov sp,r7
 505              	.LCFI43:
 506              	 .cfi_def_cfa_register 13
 507              	 
 508 0028 80BD     	 pop {r7,pc}
 509              	.L36:
 510 002a 00BF     	 .align 2
 511              	.L35:
 512 002c 00000000 	 .word tmpPidProfileIndex
 513 0030 00000000 	 .word pidProfileIndex
 514              	 .cfi_endproc
 515              	.LFE551:
 517              	 .section .text.cmsx_rateProfileIndexOnChange,"ax",%progbits
 518              	 .align 2
 519              	 .thumb
 520              	 .thumb_func
 522              	cmsx_rateProfileIndexOnChange:
 523              	.LFB552:
  99:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 100:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_rateProfileIndexOnChange(displayPort_t *displayPort, const void *ptr)
 101:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 524              	 .loc 4 101 0
 525              	 .cfi_startproc
 526              	 
 527              	 
 528 0000 80B5     	 push {r7,lr}
 529              	.LCFI44:
 530              	 .cfi_def_cfa_offset 8
 531              	 .cfi_offset 7,-8
 532              	 .cfi_offset 14,-4
 533 0002 82B0     	 sub sp,sp,#8
 534              	.LCFI45:
 535              	 .cfi_def_cfa_offset 16
 536 0004 00AF     	 add r7,sp,#0
 537              	.LCFI46:
 538              	 .cfi_def_cfa_register 7
 539 0006 7860     	 str r0,[r7,#4]
 540 0008 3960     	 str r1,[r7]
 102:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(displayPort);
 103:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(ptr);
 104:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 105:../cleanflight/src/main/cms/cms_menu_imu.c ****     rateProfileIndex = tmpRateProfileIndex - 1;
 541              	 .loc 4 105 0
 542 000a 084B     	 ldr r3,.L39
 543 000c 1B78     	 ldrb r3,[r3]
 544 000e 013B     	 subs r3,r3,#1
 545 0010 DAB2     	 uxtb r2,r3
 546 0012 074B     	 ldr r3,.L39+4
 547 0014 1A70     	 strb r2,[r3]
 106:../cleanflight/src/main/cms/cms_menu_imu.c ****     changeControlRateProfile(rateProfileIndex);
 548              	 .loc 4 106 0
 549 0016 064B     	 ldr r3,.L39+4
 550 0018 1B78     	 ldrb r3,[r3]
 551 001a 1846     	 mov r0,r3
 552 001c FFF7FEFF 	 bl changeControlRateProfile
 107:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 108:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 553              	 .loc 4 108 0
 554 0020 0023     	 movs r3,#0
 109:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 555              	 .loc 4 109 0
 556 0022 1846     	 mov r0,r3
 557 0024 0837     	 adds r7,r7,#8
 558              	.LCFI47:
 559              	 .cfi_def_cfa_offset 8
 560 0026 BD46     	 mov sp,r7
 561              	.LCFI48:
 562              	 .cfi_def_cfa_register 13
 563              	 
 564 0028 80BD     	 pop {r7,pc}
 565              	.L40:
 566 002a 00BF     	 .align 2
 567              	.L39:
 568 002c 00000000 	 .word tmpRateProfileIndex
 569 0030 00000000 	 .word rateProfileIndex
 570              	 .cfi_endproc
 571              	.LFE552:
 573              	 .section .text.cmsx_PidRead,"ax",%progbits
 574              	 .align 2
 575              	 .thumb
 576              	 .thumb_func
 578              	cmsx_PidRead:
 579              	.LFB553:
 110:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 111:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_PidRead(void)
 112:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 580              	 .loc 4 112 0
 581              	 .cfi_startproc
 582              	 
 583              	 
 584 0000 80B5     	 push {r7,lr}
 585              	.LCFI49:
 586              	 .cfi_def_cfa_offset 8
 587              	 .cfi_offset 7,-8
 588              	 .cfi_offset 14,-4
 589 0002 82B0     	 sub sp,sp,#8
 590              	.LCFI50:
 591              	 .cfi_def_cfa_offset 16
 592 0004 00AF     	 add r7,sp,#0
 593              	.LCFI51:
 594              	 .cfi_def_cfa_register 7
 113:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 114:../cleanflight/src/main/cms/cms_menu_imu.c ****     const pidProfile_t *pidProfile = pidProfiles(pidProfileIndex);
 595              	 .loc 4 114 0
 596 0006 2A4B     	 ldr r3,.L45
 597 0008 1B78     	 ldrb r3,[r3]
 598 000a 1846     	 mov r0,r3
 599 000c FFF7FEFF 	 bl pidProfiles
 600 0010 3860     	 str r0,[r7]
 601              	.LBB2:
 115:../cleanflight/src/main/cms/cms_menu_imu.c ****     for (uint8_t i = 0; i < 3; i++) {
 602              	 .loc 4 115 0
 603 0012 0023     	 movs r3,#0
 604 0014 FB71     	 strb r3,[r7,#7]
 605 0016 42E0     	 b .L42
 606              	.L43:
 116:../cleanflight/src/main/cms/cms_menu_imu.c ****         tempPid[i][0] = pidProfile->pid[i].P;
 607              	 .loc 4 116 0 discriminator 3
 608 0018 FA79     	 ldrb r2,[r7,#7]
 609 001a F979     	 ldrb r1,[r7,#7]
 610 001c 3868     	 ldr r0,[r7]
 611 001e 0B46     	 mov r3,r1
 612 0020 9B00     	 lsls r3,r3,#2
 613 0022 0B44     	 add r3,r3,r1
 614 0024 0344     	 add r3,r3,r0
 615 0026 0833     	 adds r3,r3,#8
 616 0028 1878     	 ldrb r0,[r3]
 617 002a 2249     	 ldr r1,.L45+4
 618 002c 1346     	 mov r3,r2
 619 002e 5B00     	 lsls r3,r3,#1
 620 0030 1344     	 add r3,r3,r2
 621 0032 0B44     	 add r3,r3,r1
 622 0034 0246     	 mov r2,r0
 623 0036 1A70     	 strb r2,[r3]
 117:../cleanflight/src/main/cms/cms_menu_imu.c ****         tempPid[i][1] = pidProfile->pid[i].I;
 624              	 .loc 4 117 0 discriminator 3
 625 0038 FA79     	 ldrb r2,[r7,#7]
 626 003a F979     	 ldrb r1,[r7,#7]
 627 003c 3868     	 ldr r0,[r7]
 628 003e 0B46     	 mov r3,r1
 629 0040 9B00     	 lsls r3,r3,#2
 630 0042 0B44     	 add r3,r3,r1
 631 0044 0344     	 add r3,r3,r0
 632 0046 0833     	 adds r3,r3,#8
 633 0048 5878     	 ldrb r0,[r3,#1]
 634 004a 1A49     	 ldr r1,.L45+4
 635 004c 1346     	 mov r3,r2
 636 004e 5B00     	 lsls r3,r3,#1
 637 0050 1344     	 add r3,r3,r2
 638 0052 0B44     	 add r3,r3,r1
 639 0054 0133     	 adds r3,r3,#1
 640 0056 0246     	 mov r2,r0
 641 0058 1A70     	 strb r2,[r3]
 118:../cleanflight/src/main/cms/cms_menu_imu.c ****         tempPid[i][2] = pidProfile->pid[i].D;
 642              	 .loc 4 118 0 discriminator 3
 643 005a FA79     	 ldrb r2,[r7,#7]
 644 005c F979     	 ldrb r1,[r7,#7]
 645 005e 3868     	 ldr r0,[r7]
 646 0060 0B46     	 mov r3,r1
 647 0062 9B00     	 lsls r3,r3,#2
 648 0064 0B44     	 add r3,r3,r1
 649 0066 0344     	 add r3,r3,r0
 650 0068 0833     	 adds r3,r3,#8
 651 006a 9878     	 ldrb r0,[r3,#2]
 652 006c 1149     	 ldr r1,.L45+4
 653 006e 1346     	 mov r3,r2
 654 0070 5B00     	 lsls r3,r3,#1
 655 0072 1344     	 add r3,r3,r2
 656 0074 0B44     	 add r3,r3,r1
 657 0076 0233     	 adds r3,r3,#2
 658 0078 0246     	 mov r2,r0
 659 007a 1A70     	 strb r2,[r3]
 119:../cleanflight/src/main/cms/cms_menu_imu.c ****         tempPidF[i] = pidProfile->pid[i].F;
 660              	 .loc 4 119 0 discriminator 3
 661 007c F979     	 ldrb r1,[r7,#7]
 662 007e FA79     	 ldrb r2,[r7,#7]
 663 0080 3868     	 ldr r0,[r7]
 664 0082 1346     	 mov r3,r2
 665 0084 9B00     	 lsls r3,r3,#2
 666 0086 1344     	 add r3,r3,r2
 667 0088 0344     	 add r3,r3,r0
 668 008a 0833     	 adds r3,r3,#8
 669 008c B3F80330 	 ldrh r3,[r3,#3]
 670 0090 9AB2     	 uxth r2,r3
 671 0092 094B     	 ldr r3,.L45+8
 672 0094 23F81120 	 strh r2,[r3,r1,lsl#1]
 115:../cleanflight/src/main/cms/cms_menu_imu.c ****         tempPid[i][0] = pidProfile->pid[i].P;
 673              	 .loc 4 115 0 discriminator 3
 674 0098 FB79     	 ldrb r3,[r7,#7]
 675 009a 0133     	 adds r3,r3,#1
 676 009c FB71     	 strb r3,[r7,#7]
 677              	.L42:
 115:../cleanflight/src/main/cms/cms_menu_imu.c ****         tempPid[i][0] = pidProfile->pid[i].P;
 678              	 .loc 4 115 0 is_stmt 0 discriminator 1
 679 009e FB79     	 ldrb r3,[r7,#7]
 680 00a0 022B     	 cmp r3,#2
 681 00a2 B9D9     	 bls .L43
 682              	.LBE2:
 120:../cleanflight/src/main/cms/cms_menu_imu.c ****     }
 121:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 122:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 683              	 .loc 4 122 0 is_stmt 1
 684 00a4 0023     	 movs r3,#0
 123:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 685              	 .loc 4 123 0
 686 00a6 1846     	 mov r0,r3
 687 00a8 0837     	 adds r7,r7,#8
 688              	.LCFI52:
 689              	 .cfi_def_cfa_offset 8
 690 00aa BD46     	 mov sp,r7
 691              	.LCFI53:
 692              	 .cfi_def_cfa_register 13
 693              	 
 694 00ac 80BD     	 pop {r7,pc}
 695              	.L46:
 696 00ae 00BF     	 .align 2
 697              	.L45:
 698 00b0 00000000 	 .word pidProfileIndex
 699 00b4 00000000 	 .word tempPid
 700 00b8 00000000 	 .word tempPidF
 701              	 .cfi_endproc
 702              	.LFE553:
 704              	 .section .text.cmsx_PidOnEnter,"ax",%progbits
 705              	 .align 2
 706              	 .thumb
 707              	 .thumb_func
 709              	cmsx_PidOnEnter:
 710              	.LFB554:
 124:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 125:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_PidOnEnter(void)
 126:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 711              	 .loc 4 126 0
 712              	 .cfi_startproc
 713              	 
 714              	 
 715 0000 80B5     	 push {r7,lr}
 716              	.LCFI54:
 717              	 .cfi_def_cfa_offset 8
 718              	 .cfi_offset 7,-8
 719              	 .cfi_offset 14,-4
 720 0002 00AF     	 add r7,sp,#0
 721              	.LCFI55:
 722              	 .cfi_def_cfa_register 7
 127:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfileIndexString[1] = '0' + tmpPidProfileIndex;
 723              	 .loc 4 127 0
 724 0004 054B     	 ldr r3,.L49
 725 0006 1B78     	 ldrb r3,[r3]
 726 0008 3033     	 adds r3,r3,#48
 727 000a DAB2     	 uxtb r2,r3
 728 000c 044B     	 ldr r3,.L49+4
 729 000e 5A70     	 strb r2,[r3,#1]
 128:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_PidRead();
 730              	 .loc 4 128 0
 731 0010 FFF7FEFF 	 bl cmsx_PidRead
 129:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 130:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 732              	 .loc 4 130 0
 733 0014 0023     	 movs r3,#0
 131:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 734              	 .loc 4 131 0
 735 0016 1846     	 mov r0,r3
 736 0018 80BD     	 pop {r7,pc}
 737              	.L50:
 738 001a 00BF     	 .align 2
 739              	.L49:
 740 001c 00000000 	 .word tmpPidProfileIndex
 741 0020 00000000 	 .word pidProfileIndexString
 742              	 .cfi_endproc
 743              	.LFE554:
 745              	 .section .text.cmsx_PidWriteback,"ax",%progbits
 746              	 .align 2
 747              	 .thumb
 748              	 .thumb_func
 750              	cmsx_PidWriteback:
 751              	.LFB555:
 132:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 133:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_PidWriteback(const OSD_Entry *self)
 134:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 752              	 .loc 4 134 0
 753              	 .cfi_startproc
 754              	 
 755              	 
 756 0000 80B5     	 push {r7,lr}
 757              	.LCFI56:
 758              	 .cfi_def_cfa_offset 8
 759              	 .cfi_offset 7,-8
 760              	 .cfi_offset 14,-4
 761 0002 84B0     	 sub sp,sp,#16
 762              	.LCFI57:
 763              	 .cfi_def_cfa_offset 24
 764 0004 00AF     	 add r7,sp,#0
 765              	.LCFI58:
 766              	 .cfi_def_cfa_register 7
 767 0006 7860     	 str r0,[r7,#4]
 135:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(self);
 136:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 137:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile_t *pidProfile = currentPidProfile;
 768              	 .loc 4 137 0
 769 0008 2A4B     	 ldr r3,.L55
 770 000a 1B68     	 ldr r3,[r3]
 771 000c BB60     	 str r3,[r7,#8]
 772              	.LBB3:
 138:../cleanflight/src/main/cms/cms_menu_imu.c ****     for (uint8_t i = 0; i < 3; i++) {
 773              	 .loc 4 138 0
 774 000e 0023     	 movs r3,#0
 775 0010 FB73     	 strb r3,[r7,#15]
 776 0012 42E0     	 b .L52
 777              	.L53:
 139:../cleanflight/src/main/cms/cms_menu_imu.c ****         pidProfile->pid[i].P = tempPid[i][0];
 778              	 .loc 4 139 0 discriminator 3
 779 0014 FA7B     	 ldrb r2,[r7,#15]
 780 0016 F97B     	 ldrb r1,[r7,#15]
 781 0018 2748     	 ldr r0,.L55+4
 782 001a 0B46     	 mov r3,r1
 783 001c 5B00     	 lsls r3,r3,#1
 784 001e 0B44     	 add r3,r3,r1
 785 0020 0344     	 add r3,r3,r0
 786 0022 1878     	 ldrb r0,[r3]
 787 0024 B968     	 ldr r1,[r7,#8]
 788 0026 1346     	 mov r3,r2
 789 0028 9B00     	 lsls r3,r3,#2
 790 002a 1344     	 add r3,r3,r2
 791 002c 0B44     	 add r3,r3,r1
 792 002e 0833     	 adds r3,r3,#8
 793 0030 0246     	 mov r2,r0
 794 0032 1A70     	 strb r2,[r3]
 140:../cleanflight/src/main/cms/cms_menu_imu.c ****         pidProfile->pid[i].I = tempPid[i][1];
 795              	 .loc 4 140 0 discriminator 3
 796 0034 FA7B     	 ldrb r2,[r7,#15]
 797 0036 F97B     	 ldrb r1,[r7,#15]
 798 0038 1F48     	 ldr r0,.L55+4
 799 003a 0B46     	 mov r3,r1
 800 003c 5B00     	 lsls r3,r3,#1
 801 003e 0B44     	 add r3,r3,r1
 802 0040 0344     	 add r3,r3,r0
 803 0042 0133     	 adds r3,r3,#1
 804 0044 1878     	 ldrb r0,[r3]
 805 0046 B968     	 ldr r1,[r7,#8]
 806 0048 1346     	 mov r3,r2
 807 004a 9B00     	 lsls r3,r3,#2
 808 004c 1344     	 add r3,r3,r2
 809 004e 0B44     	 add r3,r3,r1
 810 0050 0833     	 adds r3,r3,#8
 811 0052 0246     	 mov r2,r0
 812 0054 5A70     	 strb r2,[r3,#1]
 141:../cleanflight/src/main/cms/cms_menu_imu.c ****         pidProfile->pid[i].D = tempPid[i][2];
 813              	 .loc 4 141 0 discriminator 3
 814 0056 FA7B     	 ldrb r2,[r7,#15]
 815 0058 F97B     	 ldrb r1,[r7,#15]
 816 005a 1748     	 ldr r0,.L55+4
 817 005c 0B46     	 mov r3,r1
 818 005e 5B00     	 lsls r3,r3,#1
 819 0060 0B44     	 add r3,r3,r1
 820 0062 0344     	 add r3,r3,r0
 821 0064 0233     	 adds r3,r3,#2
 822 0066 1878     	 ldrb r0,[r3]
 823 0068 B968     	 ldr r1,[r7,#8]
 824 006a 1346     	 mov r3,r2
 825 006c 9B00     	 lsls r3,r3,#2
 826 006e 1344     	 add r3,r3,r2
 827 0070 0B44     	 add r3,r3,r1
 828 0072 0833     	 adds r3,r3,#8
 829 0074 0246     	 mov r2,r0
 830 0076 9A70     	 strb r2,[r3,#2]
 142:../cleanflight/src/main/cms/cms_menu_imu.c ****         pidProfile->pid[i].F = tempPidF[i];
 831              	 .loc 4 142 0 discriminator 3
 832 0078 FA7B     	 ldrb r2,[r7,#15]
 833 007a FB7B     	 ldrb r3,[r7,#15]
 834 007c 0F49     	 ldr r1,.L55+8
 835 007e 31F81300 	 ldrh r0,[r1,r3,lsl#1]
 836 0082 B968     	 ldr r1,[r7,#8]
 837 0084 1346     	 mov r3,r2
 838 0086 9B00     	 lsls r3,r3,#2
 839 0088 1344     	 add r3,r3,r2
 840 008a 0B44     	 add r3,r3,r1
 841 008c 0833     	 adds r3,r3,#8
 842 008e 0246     	 mov r2,r0
 843 0090 A3F80320 	 strh r2,[r3,#3]
 138:../cleanflight/src/main/cms/cms_menu_imu.c ****         pidProfile->pid[i].P = tempPid[i][0];
 844              	 .loc 4 138 0 discriminator 3
 845 0094 FB7B     	 ldrb r3,[r7,#15]
 846 0096 0133     	 adds r3,r3,#1
 847 0098 FB73     	 strb r3,[r7,#15]
 848              	.L52:
 138:../cleanflight/src/main/cms/cms_menu_imu.c ****         pidProfile->pid[i].P = tempPid[i][0];
 849              	 .loc 4 138 0 is_stmt 0 discriminator 1
 850 009a FB7B     	 ldrb r3,[r7,#15]
 851 009c 022B     	 cmp r3,#2
 852 009e B9D9     	 bls .L53
 853              	.LBE3:
 143:../cleanflight/src/main/cms/cms_menu_imu.c ****     }
 144:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidInitConfig(currentPidProfile);
 854              	 .loc 4 144 0 is_stmt 1
 855 00a0 044B     	 ldr r3,.L55
 856 00a2 1B68     	 ldr r3,[r3]
 857 00a4 1846     	 mov r0,r3
 858 00a6 FFF7FEFF 	 bl pidInitConfig
 145:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 146:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 859              	 .loc 4 146 0
 860 00aa 0023     	 movs r3,#0
 147:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 861              	 .loc 4 147 0
 862 00ac 1846     	 mov r0,r3
 863 00ae 1037     	 adds r7,r7,#16
 864              	.LCFI59:
 865              	 .cfi_def_cfa_offset 8
 866 00b0 BD46     	 mov sp,r7
 867              	.LCFI60:
 868              	 .cfi_def_cfa_register 13
 869              	 
 870 00b2 80BD     	 pop {r7,pc}
 871              	.L56:
 872              	 .align 2
 873              	.L55:
 874 00b4 00000000 	 .word currentPidProfile
 875 00b8 00000000 	 .word tempPid
 876 00bc 00000000 	 .word tempPidF
 877              	 .cfi_endproc
 878              	.LFE555:
 880              	 .section .data.__compound_literal.0,"aw",%progbits
 881              	 .align 2
 884              	__compound_literal.0:
 885 0000 00000000 	 .word tempPid
 886 0004 00       	 .byte 0
 887 0005 C8       	 .byte -56
 888 0006 01       	 .byte 1
 889 0007 00       	 .section .data.__compound_literal.1,"aw",%progbits
 890              	 .align 2
 893              	__compound_literal.1:
 894 0000 01000000 	 .word tempPid+1
 895 0004 00       	 .byte 0
 896 0005 C8       	 .byte -56
 897 0006 01       	 .byte 1
 898 0007 00       	 .section .data.__compound_literal.2,"aw",%progbits
 899              	 .align 2
 902              	__compound_literal.2:
 903 0000 02000000 	 .word tempPid+2
 904 0004 00       	 .byte 0
 905 0005 C8       	 .byte -56
 906 0006 01       	 .byte 1
 907 0007 00       	 .section .data.__compound_literal.3,"aw",%progbits
 908              	 .align 2
 911              	__compound_literal.3:
 912 0000 00000000 	 .word tempPidF
 913 0004 0000     	 .short 0
 914 0006 D007     	 .short 2000
 915 0008 0100     	 .short 1
 916 000a 0000     	 .section .data.__compound_literal.4,"aw",%progbits
 917              	 .align 2
 920              	__compound_literal.4:
 921 0000 03000000 	 .word tempPid+3
 922 0004 00       	 .byte 0
 923 0005 C8       	 .byte -56
 924 0006 01       	 .byte 1
 925 0007 00       	 .section .data.__compound_literal.5,"aw",%progbits
 926              	 .align 2
 929              	__compound_literal.5:
 930 0000 04000000 	 .word tempPid+4
 931 0004 00       	 .byte 0
 932 0005 C8       	 .byte -56
 933 0006 01       	 .byte 1
 934 0007 00       	 .section .data.__compound_literal.6,"aw",%progbits
 935              	 .align 2
 938              	__compound_literal.6:
 939 0000 05000000 	 .word tempPid+5
 940 0004 00       	 .byte 0
 941 0005 C8       	 .byte -56
 942 0006 01       	 .byte 1
 943 0007 00       	 .section .data.__compound_literal.7,"aw",%progbits
 944              	 .align 2
 947              	__compound_literal.7:
 948 0000 02000000 	 .word tempPidF+2
 949 0004 0000     	 .short 0
 950 0006 D007     	 .short 2000
 951 0008 0100     	 .short 1
 952 000a 0000     	 .section .data.__compound_literal.8,"aw",%progbits
 953              	 .align 2
 956              	__compound_literal.8:
 957 0000 06000000 	 .word tempPid+6
 958 0004 00       	 .byte 0
 959 0005 C8       	 .byte -56
 960 0006 01       	 .byte 1
 961 0007 00       	 .section .data.__compound_literal.9,"aw",%progbits
 962              	 .align 2
 965              	__compound_literal.9:
 966 0000 07000000 	 .word tempPid+7
 967 0004 00       	 .byte 0
 968 0005 C8       	 .byte -56
 969 0006 01       	 .byte 1
 970 0007 00       	 .section .data.__compound_literal.10,"aw",%progbits
 971              	 .align 2
 974              	__compound_literal.10:
 975 0000 08000000 	 .word tempPid+8
 976 0004 00       	 .byte 0
 977 0005 C8       	 .byte -56
 978 0006 01       	 .byte 1
 979 0007 00       	 .section .data.__compound_literal.11,"aw",%progbits
 980              	 .align 2
 983              	__compound_literal.11:
 984 0000 04000000 	 .word tempPidF+4
 985 0004 0000     	 .short 0
 986 0006 D007     	 .short 2000
 987 0008 0100     	 .short 1
 988 000a 0000     	 .section .rodata
 989              	 .align 2
 990              	.LC0:
 991 0000 2D2D2050 	 .ascii "-- PID --\000"
 991      4944202D 
 991      2D00
 992 000a 0000     	 .align 2
 993              	.LC1:
 994 000c 524F4C4C 	 .ascii "ROLL  P\000"
 994      20205000 
 995              	 .align 2
 996              	.LC2:
 997 0014 524F4C4C 	 .ascii "ROLL  I\000"
 997      20204900 
 998              	 .align 2
 999              	.LC3:
 1000 001c 524F4C4C 	 .ascii "ROLL  D\000"
 1000      20204400 
 1001              	 .align 2
 1002              	.LC4:
 1003 0024 524F4C4C 	 .ascii "ROLL  F\000"
 1003      20204600 
 1004              	 .align 2
 1005              	.LC5:
 1006 002c 50495443 	 .ascii "PITCH P\000"
 1006      48205000 
 1007              	 .align 2
 1008              	.LC6:
 1009 0034 50495443 	 .ascii "PITCH I\000"
 1009      48204900 
 1010              	 .align 2
 1011              	.LC7:
 1012 003c 50495443 	 .ascii "PITCH D\000"
 1012      48204400 
 1013              	 .align 2
 1014              	.LC8:
 1015 0044 50495443 	 .ascii "PITCH F\000"
 1015      48204600 
 1016              	 .align 2
 1017              	.LC9:
 1018 004c 59415720 	 .ascii "YAW   P\000"
 1018      20205000 
 1019              	 .align 2
 1020              	.LC10:
 1021 0054 59415720 	 .ascii "YAW   I\000"
 1021      20204900 
 1022              	 .align 2
 1023              	.LC11:
 1024 005c 59415720 	 .ascii "YAW   D\000"
 1024      20204400 
 1025              	 .align 2
 1026              	.LC12:
 1027 0064 59415720 	 .ascii "YAW   F\000"
 1027      20204600 
 1028              	 .align 2
 1029              	.LC13:
 1030 006c 4241434B 	 .ascii "BACK\000"
 1030      00
 1031              	 .section .data.cmsx_menuPidEntries,"aw",%progbits
 1032              	 .align 2
 1035              	cmsx_menuPidEntries:
 1036 0000 00000000 	 .word .LC0
 1037 0004 00       	 .byte 0
 1038 0005 00000000 	 .4byte 0
 1039 0009 00000000 	 .4byte pidProfileIndexString
 1040 000d 00       	 .byte 0
 1041 000e 0C000000 	 .4byte .LC1
 1042 0012 07       	 .byte 7
 1043 0013 00000000 	 .4byte 0
 1044 0017 00000000 	 .4byte __compound_literal.0
 1045 001b 00       	 .byte 0
 1046 001c 14000000 	 .word .LC2
 1047 0020 07       	 .byte 7
 1048 0021 00000000 	 .4byte 0
 1049 0025 00000000 	 .4byte __compound_literal.1
 1050 0029 00       	 .byte 0
 1051 002a 1C000000 	 .4byte .LC3
 1052 002e 07       	 .byte 7
 1053 002f 00000000 	 .4byte 0
 1054 0033 00000000 	 .4byte __compound_literal.2
 1055 0037 00       	 .byte 0
 1056 0038 24000000 	 .word .LC4
 1057 003c 08       	 .byte 8
 1058 003d 00000000 	 .4byte 0
 1059 0041 00000000 	 .4byte __compound_literal.3
 1060 0045 00       	 .byte 0
 1061 0046 2C000000 	 .4byte .LC5
 1062 004a 07       	 .byte 7
 1063 004b 00000000 	 .4byte 0
 1064 004f 00000000 	 .4byte __compound_literal.4
 1065 0053 00       	 .byte 0
 1066 0054 34000000 	 .word .LC6
 1067 0058 07       	 .byte 7
 1068 0059 00000000 	 .4byte 0
 1069 005d 00000000 	 .4byte __compound_literal.5
 1070 0061 00       	 .byte 0
 1071 0062 3C000000 	 .4byte .LC7
 1072 0066 07       	 .byte 7
 1073 0067 00000000 	 .4byte 0
 1074 006b 00000000 	 .4byte __compound_literal.6
 1075 006f 00       	 .byte 0
 1076 0070 44000000 	 .word .LC8
 1077 0074 08       	 .byte 8
 1078 0075 00000000 	 .4byte 0
 1079 0079 00000000 	 .4byte __compound_literal.7
 1080 007d 00       	 .byte 0
 1081 007e 4C000000 	 .4byte .LC9
 1082 0082 07       	 .byte 7
 1083 0083 00000000 	 .4byte 0
 1084 0087 00000000 	 .4byte __compound_literal.8
 1085 008b 00       	 .byte 0
 1086 008c 54000000 	 .word .LC10
 1087 0090 07       	 .byte 7
 1088 0091 00000000 	 .4byte 0
 1089 0095 00000000 	 .4byte __compound_literal.9
 1090 0099 00       	 .byte 0
 1091 009a 5C000000 	 .4byte .LC11
 1092 009e 07       	 .byte 7
 1093 009f 00000000 	 .4byte 0
 1094 00a3 00000000 	 .4byte __compound_literal.10
 1095 00a7 00       	 .byte 0
 1096 00a8 64000000 	 .word .LC12
 1097 00ac 08       	 .byte 8
 1098 00ad 00000000 	 .4byte 0
 1099 00b1 00000000 	 .4byte __compound_literal.11
 1100 00b5 00       	 .byte 0
 1101 00b6 6C000000 	 .4byte .LC13
 1102 00ba 01       	 .byte 1
 1103 00bb 00000000 	 .4byte 0
 1104 00bf 00000000 	 .4byte 0
 1105 00c3 00       	 .byte 0
 1106 00c4 00000000 	 .word 0
 1107 00c8 0E       	 .byte 14
 1108 00c9 00000000 	 .4byte 0
 1109 00cd 00000000 	 .4byte 0
 1110 00d1 00       	 .byte 0
 1111 00d2 0000     	 .section .data.cmsx_menuPid,"aw",%progbits
 1112              	 .align 2
 1115              	cmsx_menuPid:
 1116 0000 00000000 	 .word cmsx_PidOnEnter
 1117 0004 00000000 	 .word cmsx_PidWriteback
 1118 0008 00000000 	 .word cmsx_menuPidEntries
 1119              	 .section .text.cmsx_RateProfileRead,"ax",%progbits
 1120              	 .align 2
 1121              	 .thumb
 1122              	 .thumb_func
 1124              	cmsx_RateProfileRead:
 1125              	.LFB556:
 148:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 149:../cleanflight/src/main/cms/cms_menu_imu.c **** static OSD_Entry cmsx_menuPidEntries[] =
 150:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 151:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "-- PID --", OME_Label, NULL, pidProfileIndexString, 0},
 152:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 153:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "ROLL  P", OME_UINT8, NULL, &(OSD_UINT8_t){ &tempPid[PID_ROLL][0],  0, 200, 1 }, 0 },
 154:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "ROLL  I", OME_UINT8, NULL, &(OSD_UINT8_t){ &tempPid[PID_ROLL][1],  0, 200, 1 }, 0 },
 155:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "ROLL  D", OME_UINT8, NULL, &(OSD_UINT8_t){ &tempPid[PID_ROLL][2],  0, 200, 1 }, 0 },
 156:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "ROLL  F", OME_UINT16, NULL, &(OSD_UINT16_t){ &tempPidF[PID_ROLL],  0, 2000, 1 }, 0 },
 157:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 158:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "PITCH P", OME_UINT8, NULL, &(OSD_UINT8_t){ &tempPid[PID_PITCH][0], 0, 200, 1 }, 0 },
 159:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "PITCH I", OME_UINT8, NULL, &(OSD_UINT8_t){ &tempPid[PID_PITCH][1], 0, 200, 1 }, 0 },
 160:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "PITCH D", OME_UINT8, NULL, &(OSD_UINT8_t){ &tempPid[PID_PITCH][2], 0, 200, 1 }, 0 },
 161:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "PITCH F", OME_UINT16, NULL, &(OSD_UINT16_t){ &tempPidF[PID_PITCH], 0, 2000, 1 }, 0 },
 162:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 163:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "YAW   P", OME_UINT8, NULL, &(OSD_UINT8_t){ &tempPid[PID_YAW][0],   0, 200, 1 }, 0 },
 164:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "YAW   I", OME_UINT8, NULL, &(OSD_UINT8_t){ &tempPid[PID_YAW][1],   0, 200, 1 }, 0 },
 165:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "YAW   D", OME_UINT8, NULL, &(OSD_UINT8_t){ &tempPid[PID_YAW][2],   0, 200, 1 }, 0 },
 166:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "YAW   F", OME_UINT16, NULL, &(OSD_UINT16_t){ &tempPidF[PID_YAW],   0, 2000, 1 }, 0 },
 167:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 168:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "BACK", OME_Back, NULL, NULL, 0 },
 169:../cleanflight/src/main/cms/cms_menu_imu.c ****     { NULL, OME_END, NULL, NULL, 0 }
 170:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 171:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 172:../cleanflight/src/main/cms/cms_menu_imu.c **** static CMS_Menu cmsx_menuPid = {
 173:../cleanflight/src/main/cms/cms_menu_imu.c **** #ifdef CMS_MENU_DEBUG
 174:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_text = "XPID",
 175:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_type = OME_MENU,
 176:../cleanflight/src/main/cms/cms_menu_imu.c **** #endif
 177:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onEnter = cmsx_PidOnEnter,
 178:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onExit = cmsx_PidWriteback,
 179:../cleanflight/src/main/cms/cms_menu_imu.c ****     .entries = cmsx_menuPidEntries
 180:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 181:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 182:../cleanflight/src/main/cms/cms_menu_imu.c **** //
 183:../cleanflight/src/main/cms/cms_menu_imu.c **** // Rate & Expo
 184:../cleanflight/src/main/cms/cms_menu_imu.c **** //
 185:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 186:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_RateProfileRead(void)
 187:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 1126              	 .loc 4 187 0
 1127              	 .cfi_startproc
 1128              	 
 1129              	 
 1130 0000 B0B5     	 push {r4,r5,r7,lr}
 1131              	.LCFI61:
 1132              	 .cfi_def_cfa_offset 16
 1133              	 .cfi_offset 4,-16
 1134              	 .cfi_offset 5,-12
 1135              	 .cfi_offset 7,-8
 1136              	 .cfi_offset 14,-4
 1137 0002 00AF     	 add r7,sp,#0
 1138              	.LCFI62:
 1139              	 .cfi_def_cfa_register 7
 188:../cleanflight/src/main/cms/cms_menu_imu.c ****     memcpy(&rateProfile, controlRateProfiles(rateProfileIndex), sizeof(controlRateConfig_t));
 1140              	 .loc 4 188 0
 1141 0004 094B     	 ldr r3,.L59
 1142 0006 1B78     	 ldrb r3,[r3]
 1143 0008 1846     	 mov r0,r3
 1144 000a FFF7FEFF 	 bl controlRateProfiles
 1145 000e 0246     	 mov r2,r0
 1146 0010 074B     	 ldr r3,.L59+4
 1147 0012 1C46     	 mov r4,r3
 1148 0014 1546     	 mov r5,r2
 1149 0016 2868     	 ldr r0,[r5]
 1150 0018 6968     	 ldr r1,[r5,#4]
 1151 001a AA68     	 ldr r2,[r5,#8]
 1152 001c EB68     	 ldr r3,[r5,#12]
 1153 001e 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 1154 0020 2B7C     	 ldrb r3,[r5,#16]
 1155 0022 2370     	 strb r3,[r4]
 189:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 190:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 1156              	 .loc 4 190 0
 1157 0024 0023     	 movs r3,#0
 191:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 1158              	 .loc 4 191 0
 1159 0026 1846     	 mov r0,r3
 1160 0028 B0BD     	 pop {r4,r5,r7,pc}
 1161              	.L60:
 1162 002a 00BF     	 .align 2
 1163              	.L59:
 1164 002c 00000000 	 .word rateProfileIndex
 1165 0030 00000000 	 .word rateProfile
 1166              	 .cfi_endproc
 1167              	.LFE556:
 1169              	 .section .text.cmsx_RateProfileWriteback,"ax",%progbits
 1170              	 .align 2
 1171              	 .thumb
 1172              	 .thumb_func
 1174              	cmsx_RateProfileWriteback:
 1175              	.LFB557:
 192:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 193:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_RateProfileWriteback(const OSD_Entry *self)
 194:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 1176              	 .loc 4 194 0
 1177              	 .cfi_startproc
 1178              	 
 1179              	 
 1180 0000 B0B5     	 push {r4,r5,r7,lr}
 1181              	.LCFI63:
 1182              	 .cfi_def_cfa_offset 16
 1183              	 .cfi_offset 4,-16
 1184              	 .cfi_offset 5,-12
 1185              	 .cfi_offset 7,-8
 1186              	 .cfi_offset 14,-4
 1187 0002 82B0     	 sub sp,sp,#8
 1188              	.LCFI64:
 1189              	 .cfi_def_cfa_offset 24
 1190 0004 00AF     	 add r7,sp,#0
 1191              	.LCFI65:
 1192              	 .cfi_def_cfa_register 7
 1193 0006 7860     	 str r0,[r7,#4]
 195:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(self);
 196:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 197:../cleanflight/src/main/cms/cms_menu_imu.c ****     memcpy(controlRateProfilesMutable(rateProfileIndex), &rateProfile, sizeof(controlRateConfig_t))
 1194              	 .loc 4 197 0
 1195 0008 0A4B     	 ldr r3,.L63
 1196 000a 1B78     	 ldrb r3,[r3]
 1197 000c 1846     	 mov r0,r3
 1198 000e FFF7FEFF 	 bl controlRateProfilesMutable
 1199 0012 0246     	 mov r2,r0
 1200 0014 084B     	 ldr r3,.L63+4
 1201 0016 1546     	 mov r5,r2
 1202 0018 1C46     	 mov r4,r3
 1203 001a 0FCC     	 ldmia r4!,{r0,r1,r2,r3}
 1204 001c 2860     	 str r0,[r5]
 1205 001e 6960     	 str r1,[r5,#4]
 1206 0020 AA60     	 str r2,[r5,#8]
 1207 0022 EB60     	 str r3,[r5,#12]
 1208 0024 2378     	 ldrb r3,[r4]
 1209 0026 2B74     	 strb r3,[r5,#16]
 198:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 199:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 1210              	 .loc 4 199 0
 1211 0028 0023     	 movs r3,#0
 200:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 1212              	 .loc 4 200 0
 1213 002a 1846     	 mov r0,r3
 1214 002c 0837     	 adds r7,r7,#8
 1215              	.LCFI66:
 1216              	 .cfi_def_cfa_offset 16
 1217 002e BD46     	 mov sp,r7
 1218              	.LCFI67:
 1219              	 .cfi_def_cfa_register 13
 1220              	 
 1221 0030 B0BD     	 pop {r4,r5,r7,pc}
 1222              	.L64:
 1223 0032 00BF     	 .align 2
 1224              	.L63:
 1225 0034 00000000 	 .word rateProfileIndex
 1226 0038 00000000 	 .word rateProfile
 1227              	 .cfi_endproc
 1228              	.LFE557:
 1230              	 .section .text.cmsx_RateProfileOnEnter,"ax",%progbits
 1231              	 .align 2
 1232              	 .thumb
 1233              	 .thumb_func
 1235              	cmsx_RateProfileOnEnter:
 1236              	.LFB558:
 201:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 202:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_RateProfileOnEnter(void)
 203:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 1237              	 .loc 4 203 0
 1238              	 .cfi_startproc
 1239              	 
 1240              	 
 1241 0000 80B5     	 push {r7,lr}
 1242              	.LCFI68:
 1243              	 .cfi_def_cfa_offset 8
 1244              	 .cfi_offset 7,-8
 1245              	 .cfi_offset 14,-4
 1246 0002 00AF     	 add r7,sp,#0
 1247              	.LCFI69:
 1248              	 .cfi_def_cfa_register 7
 204:../cleanflight/src/main/cms/cms_menu_imu.c ****     rateProfileIndexString[1] = '0' + tmpPidProfileIndex;
 1249              	 .loc 4 204 0
 1250 0004 084B     	 ldr r3,.L67
 1251 0006 1B78     	 ldrb r3,[r3]
 1252 0008 3033     	 adds r3,r3,#48
 1253 000a DAB2     	 uxtb r2,r3
 1254 000c 074B     	 ldr r3,.L67+4
 1255 000e 5A70     	 strb r2,[r3,#1]
 205:../cleanflight/src/main/cms/cms_menu_imu.c ****     rateProfileIndexString[3] = '0' + tmpRateProfileIndex;
 1256              	 .loc 4 205 0
 1257 0010 074B     	 ldr r3,.L67+8
 1258 0012 1B78     	 ldrb r3,[r3]
 1259 0014 3033     	 adds r3,r3,#48
 1260 0016 DAB2     	 uxtb r2,r3
 1261 0018 044B     	 ldr r3,.L67+4
 1262 001a DA70     	 strb r2,[r3,#3]
 206:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_RateProfileRead();
 1263              	 .loc 4 206 0
 1264 001c FFF7FEFF 	 bl cmsx_RateProfileRead
 207:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 208:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 1265              	 .loc 4 208 0
 1266 0020 0023     	 movs r3,#0
 209:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 1267              	 .loc 4 209 0
 1268 0022 1846     	 mov r0,r3
 1269 0024 80BD     	 pop {r7,pc}
 1270              	.L68:
 1271 0026 00BF     	 .align 2
 1272              	.L67:
 1273 0028 00000000 	 .word tmpPidProfileIndex
 1274 002c 00000000 	 .word rateProfileIndexString
 1275 0030 00000000 	 .word tmpRateProfileIndex
 1276              	 .cfi_endproc
 1277              	.LFE558:
 1279              	 .section .data.__compound_literal.12,"aw",%progbits
 1280              	 .align 2
 1283              	__compound_literal.12:
 1284 0000 03000000 	 .word rateProfile+3
 1285 0004 00       	 .byte 0
 1286 0005 FF       	 .byte -1
 1287 0006 01       	 .byte 1
 1288 0007 0A00     	 .2byte 10
 1289 0009 000000   	 .section .data.__compound_literal.13,"aw",%progbits
 1290              	 .align 2
 1293              	__compound_literal.13:
 1294 0000 04000000 	 .word rateProfile+4
 1295 0004 00       	 .byte 0
 1296 0005 FF       	 .byte -1
 1297 0006 01       	 .byte 1
 1298 0007 0A00     	 .2byte 10
 1299 0009 000000   	 .section .data.__compound_literal.14,"aw",%progbits
 1300              	 .align 2
 1303              	__compound_literal.14:
 1304 0000 05000000 	 .word rateProfile+5
 1305 0004 00       	 .byte 0
 1306 0005 FF       	 .byte -1
 1307 0006 01       	 .byte 1
 1308 0007 0A00     	 .2byte 10
 1309 0009 000000   	 .section .data.__compound_literal.15,"aw",%progbits
 1310              	 .align 2
 1313              	__compound_literal.15:
 1314 0000 09000000 	 .word rateProfile+9
 1315 0004 00       	 .byte 0
 1316 0005 64       	 .byte 100
 1317 0006 01       	 .byte 1
 1318 0007 0A00     	 .2byte 10
 1319 0009 000000   	 .section .data.__compound_literal.16,"aw",%progbits
 1320              	 .align 2
 1323              	__compound_literal.16:
 1324 0000 0A000000 	 .word rateProfile+10
 1325 0004 00       	 .byte 0
 1326 0005 64       	 .byte 100
 1327 0006 01       	 .byte 1
 1328 0007 0A00     	 .2byte 10
 1329 0009 000000   	 .section .data.__compound_literal.17,"aw",%progbits
 1330              	 .align 2
 1333              	__compound_literal.17:
 1334 0000 0B000000 	 .word rateProfile+11
 1335 0004 00       	 .byte 0
 1336 0005 64       	 .byte 100
 1337 0006 01       	 .byte 1
 1338 0007 0A00     	 .2byte 10
 1339 0009 000000   	 .section .data.__compound_literal.18,"aw",%progbits
 1340              	 .align 2
 1343              	__compound_literal.18:
 1344 0000 06000000 	 .word rateProfile+6
 1345 0004 00       	 .byte 0
 1346 0005 64       	 .byte 100
 1347 0006 01       	 .byte 1
 1348 0007 0A00     	 .2byte 10
 1349 0009 000000   	 .section .data.__compound_literal.19,"aw",%progbits
 1350              	 .align 2
 1353              	__compound_literal.19:
 1354 0000 07000000 	 .word rateProfile+7
 1355 0004 00       	 .byte 0
 1356 0005 64       	 .byte 100
 1357 0006 01       	 .byte 1
 1358 0007 0A00     	 .2byte 10
 1359 0009 000000   	 .section .data.__compound_literal.20,"aw",%progbits
 1360              	 .align 2
 1363              	__compound_literal.20:
 1364 0000 08000000 	 .word rateProfile+8
 1365 0004 00       	 .byte 0
 1366 0005 64       	 .byte 100
 1367 0006 01       	 .byte 1
 1368 0007 0A00     	 .2byte 10
 1369 0009 000000   	 .section .data.__compound_literal.21,"aw",%progbits
 1370              	 .align 2
 1373              	__compound_literal.21:
 1374 0000 00000000 	 .word rateProfile
 1375 0004 00       	 .byte 0
 1376 0005 64       	 .byte 100
 1377 0006 01       	 .byte 1
 1378 0007 00       	 .section .data.__compound_literal.22,"aw",%progbits
 1379              	 .align 2
 1382              	__compound_literal.22:
 1383 0000 01000000 	 .word rateProfile+1
 1384 0004 00       	 .byte 0
 1385 0005 64       	 .byte 100
 1386 0006 01       	 .byte 1
 1387 0007 00       	 .section .data.__compound_literal.23,"aw",%progbits
 1388              	 .align 2
 1391              	__compound_literal.23:
 1392 0000 0C000000 	 .word rateProfile+12
 1393 0004 00       	 .byte 0
 1394 0005 64       	 .byte 100
 1395 0006 01       	 .byte 1
 1396 0007 0A00     	 .2byte 10
 1397 0009 000000   	 .section .data.__compound_literal.24,"aw",%progbits
 1398              	 .align 2
 1401              	__compound_literal.24:
 1402 0000 0D000000 	 .word rateProfile+13
 1403 0004 E803     	 .short 1000
 1404 0006 D007     	 .short 2000
 1405 0008 0A00     	 .short 10
 1406 000a 0000     	 .section .rodata
 1407 0071 000000   	 .align 2
 1408              	.LC14:
 1409 0074 2D2D2052 	 .ascii "-- RATE --\000"
 1409      41544520 
 1409      2D2D00
 1410 007f 00       	 .align 2
 1411              	.LC15:
 1412 0080 52432052 	 .ascii "RC R RATE\000"
 1412      20524154 
 1412      4500
 1413 008a 0000     	 .align 2
 1414              	.LC16:
 1415 008c 52432050 	 .ascii "RC P RATE\000"
 1415      20524154 
 1415      4500
 1416 0096 0000     	 .align 2
 1417              	.LC17:
 1418 0098 52432059 	 .ascii "RC Y RATE\000"
 1418      20524154 
 1418      4500
 1419 00a2 0000     	 .align 2
 1420              	.LC18:
 1421 00a4 524F4C4C 	 .ascii "ROLL SUPER\000"
 1421      20535550 
 1421      455200
 1422 00af 00       	 .align 2
 1423              	.LC19:
 1424 00b0 50495443 	 .ascii "PITCH SUPER\000"
 1424      48205355 
 1424      50455200 
 1425              	 .align 2
 1426              	.LC20:
 1427 00bc 59415720 	 .ascii "YAW SUPER\000"
 1427      53555045 
 1427      5200
 1428 00c6 0000     	 .align 2
 1429              	.LC21:
 1430 00c8 52432052 	 .ascii "RC R EXPO\000"
 1430      20455850 
 1430      4F00
 1431 00d2 0000     	 .align 2
 1432              	.LC22:
 1433 00d4 52432050 	 .ascii "RC P EXPO\000"
 1433      20455850 
 1433      4F00
 1434 00de 0000     	 .align 2
 1435              	.LC23:
 1436 00e0 52432059 	 .ascii "RC Y EXPO\000"
 1436      20455850 
 1436      4F00
 1437 00ea 0000     	 .align 2
 1438              	.LC24:
 1439 00ec 54485220 	 .ascii "THR MID\000"
 1439      4D494400 
 1440              	 .align 2
 1441              	.LC25:
 1442 00f4 54485220 	 .ascii "THR EXPO\000"
 1442      4558504F 
 1442      00
 1443 00fd 000000   	 .align 2
 1444              	.LC26:
 1445 0100 54485250 	 .ascii "THRPID ATT\000"
 1445      49442041 
 1445      545400
 1446 010b 00       	 .align 2
 1447              	.LC27:
 1448 010c 54504120 	 .ascii "TPA BRKPT\000"
 1448      42524B50 
 1448      5400
 1449              	 .section .data.cmsx_menuRateProfileEntries,"aw",%progbits
 1450              	 .align 2
 1453              	cmsx_menuRateProfileEntries:
 1454 0000 74000000 	 .word .LC14
 1455 0004 00       	 .byte 0
 1456 0005 00000000 	 .4byte 0
 1457 0009 00000000 	 .4byte rateProfileIndexString
 1458 000d 00       	 .byte 0
 1459 000e 80000000 	 .4byte .LC15
 1460 0012 0B       	 .byte 11
 1461 0013 00000000 	 .4byte 0
 1462 0017 00000000 	 .4byte __compound_literal.12
 1463 001b 00       	 .byte 0
 1464 001c 8C000000 	 .word .LC16
 1465 0020 0B       	 .byte 11
 1466 0021 00000000 	 .4byte 0
 1467 0025 00000000 	 .4byte __compound_literal.13
 1468 0029 00       	 .byte 0
 1469 002a 98000000 	 .4byte .LC17
 1470 002e 0B       	 .byte 11
 1471 002f 00000000 	 .4byte 0
 1472 0033 00000000 	 .4byte __compound_literal.14
 1473 0037 00       	 .byte 0
 1474 0038 A4000000 	 .word .LC18
 1475 003c 0B       	 .byte 11
 1476 003d 00000000 	 .4byte 0
 1477 0041 00000000 	 .4byte __compound_literal.15
 1478 0045 00       	 .byte 0
 1479 0046 B0000000 	 .4byte .LC19
 1480 004a 0B       	 .byte 11
 1481 004b 00000000 	 .4byte 0
 1482 004f 00000000 	 .4byte __compound_literal.16
 1483 0053 00       	 .byte 0
 1484 0054 BC000000 	 .word .LC20
 1485 0058 0B       	 .byte 11
 1486 0059 00000000 	 .4byte 0
 1487 005d 00000000 	 .4byte __compound_literal.17
 1488 0061 00       	 .byte 0
 1489 0062 C8000000 	 .4byte .LC21
 1490 0066 0B       	 .byte 11
 1491 0067 00000000 	 .4byte 0
 1492 006b 00000000 	 .4byte __compound_literal.18
 1493 006f 00       	 .byte 0
 1494 0070 D4000000 	 .word .LC22
 1495 0074 0B       	 .byte 11
 1496 0075 00000000 	 .4byte 0
 1497 0079 00000000 	 .4byte __compound_literal.19
 1498 007d 00       	 .byte 0
 1499 007e E0000000 	 .4byte .LC23
 1500 0082 0B       	 .byte 11
 1501 0083 00000000 	 .4byte 0
 1502 0087 00000000 	 .4byte __compound_literal.20
 1503 008b 00       	 .byte 0
 1504 008c EC000000 	 .word .LC24
 1505 0090 07       	 .byte 7
 1506 0091 00000000 	 .4byte 0
 1507 0095 00000000 	 .4byte __compound_literal.21
 1508 0099 00       	 .byte 0
 1509 009a F4000000 	 .4byte .LC25
 1510 009e 07       	 .byte 7
 1511 009f 00000000 	 .4byte 0
 1512 00a3 00000000 	 .4byte __compound_literal.22
 1513 00a7 00       	 .byte 0
 1514 00a8 00010000 	 .word .LC26
 1515 00ac 0B       	 .byte 11
 1516 00ad 00000000 	 .4byte 0
 1517 00b1 00000000 	 .4byte __compound_literal.23
 1518 00b5 00       	 .byte 0
 1519 00b6 0C010000 	 .4byte .LC27
 1520 00ba 08       	 .byte 8
 1521 00bb 00000000 	 .4byte 0
 1522 00bf 00000000 	 .4byte __compound_literal.24
 1523 00c3 00       	 .byte 0
 1524 00c4 6C000000 	 .word .LC13
 1525 00c8 01       	 .byte 1
 1526 00c9 00000000 	 .4byte 0
 1527 00cd 00000000 	 .4byte 0
 1528 00d1 00       	 .byte 0
 1529 00d2 00000000 	 .4byte 0
 1530 00d6 0E       	 .byte 14
 1531 00d7 00000000 	 .4byte 0
 1532 00db 00000000 	 .4byte 0
 1533 00df 00       	 .byte 0
 1534              	 .section .data.cmsx_menuRateProfile,"aw",%progbits
 1535              	 .align 2
 1538              	cmsx_menuRateProfile:
 1539 0000 00000000 	 .word cmsx_RateProfileOnEnter
 1540 0004 00000000 	 .word cmsx_RateProfileWriteback
 1541 0008 00000000 	 .word cmsx_menuRateProfileEntries
 1542              	 .section .bss.cmsx_feedForwardTransition,"aw",%nobits
 1545              	cmsx_feedForwardTransition:
 1546 0000 00       	 .space 1
 1547              	 .section .bss.cmsx_angleStrength,"aw",%nobits
 1550              	cmsx_angleStrength:
 1551 0000 00       	 .space 1
 1552              	 .section .bss.cmsx_horizonStrength,"aw",%nobits
 1555              	cmsx_horizonStrength:
 1556 0000 00       	 .space 1
 1557              	 .section .bss.cmsx_horizonTransition,"aw",%nobits
 1560              	cmsx_horizonTransition:
 1561 0000 00       	 .space 1
 1562              	 .section .bss.cmsx_throttleBoost,"aw",%nobits
 1565              	cmsx_throttleBoost:
 1566 0000 00       	 .space 1
 1567              	 .section .bss.cmsx_itermAcceleratorGain,"aw",%nobits
 1568              	 .align 1
 1571              	cmsx_itermAcceleratorGain:
 1572 0000 0000     	 .space 2
 1573              	 .section .bss.cmsx_itermThrottleThreshold,"aw",%nobits
 1574              	 .align 1
 1577              	cmsx_itermThrottleThreshold:
 1578 0000 0000     	 .space 2
 1579              	 .section .text.cmsx_profileOtherOnEnter,"ax",%progbits
 1580              	 .align 2
 1581              	 .thumb
 1582              	 .thumb_func
 1584              	cmsx_profileOtherOnEnter:
 1585              	.LFB559:
 210:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 211:../cleanflight/src/main/cms/cms_menu_imu.c **** static OSD_Entry cmsx_menuRateProfileEntries[] =
 212:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 213:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "-- RATE --", OME_Label, NULL, rateProfileIndexString, 0 },
 214:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 215:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "RC R RATE",   OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.rcRates[FD_ROLL],    0, 255, 1
 216:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "RC P RATE",   OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.rcRates[FD_PITCH],    0, 255, 
 217:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "RC Y RATE",   OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.rcRates[FD_YAW], 0, 255, 1, 10
 218:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 219:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "ROLL SUPER",  OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.rates[FD_ROLL],   0, 100, 1, 1
 220:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "PITCH SUPER", OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.rates[FD_PITCH],   0, 100, 1, 
 221:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "YAW SUPER",   OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.rates[FD_YAW],   0, 100, 1, 10
 222:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 223:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "RC R EXPO",   OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.rcExpo[FD_ROLL],    0, 100, 1,
 224:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "RC P EXPO",   OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.rcExpo[FD_PITCH],    0, 100, 1
 225:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "RC Y EXPO",   OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.rcExpo[FD_YAW], 0, 100, 1, 10 
 226:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 227:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "THR MID",     OME_UINT8,  NULL, &(OSD_UINT8_t) { &rateProfile.thrMid8,           0,  100,  1
 228:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "THR EXPO",    OME_UINT8,  NULL, &(OSD_UINT8_t) { &rateProfile.thrExpo8,          0,  100,  1
 229:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "THRPID ATT",  OME_FLOAT,  NULL, &(OSD_FLOAT_t) { &rateProfile.dynThrPID,         0,  100,  1
 230:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "TPA BRKPT",   OME_UINT16, NULL, &(OSD_UINT16_t){ &rateProfile.tpa_breakpoint, 1000, 2000, 10
 231:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 232:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "BACK", OME_Back, NULL, NULL, 0 },
 233:../cleanflight/src/main/cms/cms_menu_imu.c ****     { NULL, OME_END, NULL, NULL, 0 }
 234:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 235:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 236:../cleanflight/src/main/cms/cms_menu_imu.c **** static CMS_Menu cmsx_menuRateProfile = {
 237:../cleanflight/src/main/cms/cms_menu_imu.c **** #ifdef CMS_MENU_DEBUG
 238:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_text = "MENURATE",
 239:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_type = OME_MENU,
 240:../cleanflight/src/main/cms/cms_menu_imu.c **** #endif
 241:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onEnter = cmsx_RateProfileOnEnter,
 242:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onExit = cmsx_RateProfileWriteback,
 243:../cleanflight/src/main/cms/cms_menu_imu.c ****     .entries = cmsx_menuRateProfileEntries
 244:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 245:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 246:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t  cmsx_feedForwardTransition;
 247:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t  cmsx_angleStrength;
 248:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t  cmsx_horizonStrength;
 249:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t  cmsx_horizonTransition;
 250:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t  cmsx_throttleBoost;
 251:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t cmsx_itermAcceleratorGain;
 252:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t cmsx_itermThrottleThreshold;
 253:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 254:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_profileOtherOnEnter(void)
 255:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 1586              	 .loc 4 255 0
 1587              	 .cfi_startproc
 1588              	 
 1589              	 
 1590 0000 80B5     	 push {r7,lr}
 1591              	.LCFI70:
 1592              	 .cfi_def_cfa_offset 8
 1593              	 .cfi_offset 7,-8
 1594              	 .cfi_offset 14,-4
 1595 0002 82B0     	 sub sp,sp,#8
 1596              	.LCFI71:
 1597              	 .cfi_def_cfa_offset 16
 1598 0004 00AF     	 add r7,sp,#0
 1599              	.LCFI72:
 1600              	 .cfi_def_cfa_register 7
 256:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfileIndexString[1] = '0' + tmpPidProfileIndex;
 1601              	 .loc 4 256 0
 1602 0006 184B     	 ldr r3,.L71
 1603 0008 1B78     	 ldrb r3,[r3]
 1604 000a 3033     	 adds r3,r3,#48
 1605 000c DAB2     	 uxtb r2,r3
 1606 000e 174B     	 ldr r3,.L71+4
 1607 0010 5A70     	 strb r2,[r3,#1]
 257:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 258:../cleanflight/src/main/cms/cms_menu_imu.c ****     const pidProfile_t *pidProfile = pidProfiles(pidProfileIndex);
 1608              	 .loc 4 258 0
 1609 0012 174B     	 ldr r3,.L71+8
 1610 0014 1B78     	 ldrb r3,[r3]
 1611 0016 1846     	 mov r0,r3
 1612 0018 FFF7FEFF 	 bl pidProfiles
 1613 001c 7860     	 str r0,[r7,#4]
 259:../cleanflight/src/main/cms/cms_menu_imu.c ****     
 260:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_feedForwardTransition  = pidProfile->feedForwardTransition;
 1614              	 .loc 4 260 0
 1615 001e 7B68     	 ldr r3,[r7,#4]
 1616 0020 93F84120 	 ldrb r2,[r3,#65]
 1617 0024 134B     	 ldr r3,.L71+12
 1618 0026 1A70     	 strb r2,[r3]
 261:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 262:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_angleStrength =     pidProfile->pid[PID_LEVEL].P;
 1619              	 .loc 4 262 0
 1620 0028 7B68     	 ldr r3,[r7,#4]
 1621 002a DA7D     	 ldrb r2,[r3,#23]
 1622 002c 124B     	 ldr r3,.L71+16
 1623 002e 1A70     	 strb r2,[r3]
 263:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_horizonStrength =   pidProfile->pid[PID_LEVEL].I;
 1624              	 .loc 4 263 0
 1625 0030 7B68     	 ldr r3,[r7,#4]
 1626 0032 1A7E     	 ldrb r2,[r3,#24]
 1627 0034 114B     	 ldr r3,.L71+20
 1628 0036 1A70     	 strb r2,[r3]
 264:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_horizonTransition = pidProfile->pid[PID_LEVEL].D;
 1629              	 .loc 4 264 0
 1630 0038 7B68     	 ldr r3,[r7,#4]
 1631 003a 5A7E     	 ldrb r2,[r3,#25]
 1632 003c 104B     	 ldr r3,.L71+24
 1633 003e 1A70     	 strb r2,[r3]
 265:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 266:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_itermAcceleratorGain   = pidProfile->itermAcceleratorGain;
 1634              	 .loc 4 266 0
 1635 0040 7B68     	 ldr r3,[r7,#4]
 1636 0042 DB8D     	 ldrh r3,[r3,#46]
 1637 0044 9AB2     	 uxth r2,r3
 1638 0046 0F4B     	 ldr r3,.L71+28
 1639 0048 1A80     	 strh r2,[r3]
 267:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_itermThrottleThreshold = pidProfile->itermThrottleThreshold;
 1640              	 .loc 4 267 0
 1641 004a 7B68     	 ldr r3,[r7,#4]
 1642 004c 9B8D     	 ldrh r3,[r3,#44]
 1643 004e 9AB2     	 uxth r2,r3
 1644 0050 0D4B     	 ldr r3,.L71+32
 1645 0052 1A80     	 strh r2,[r3]
 268:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 269:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_throttleBoost = pidProfile->throttle_boost;
 1646              	 .loc 4 269 0
 1647 0054 7B68     	 ldr r3,[r7,#4]
 1648 0056 93F84920 	 ldrb r2,[r3,#73]
 1649 005a 0C4B     	 ldr r3,.L71+36
 1650 005c 1A70     	 strb r2,[r3]
 270:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 271:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 1651              	 .loc 4 271 0
 1652 005e 0023     	 movs r3,#0
 272:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 1653              	 .loc 4 272 0
 1654 0060 1846     	 mov r0,r3
 1655 0062 0837     	 adds r7,r7,#8
 1656              	.LCFI73:
 1657              	 .cfi_def_cfa_offset 8
 1658 0064 BD46     	 mov sp,r7
 1659              	.LCFI74:
 1660              	 .cfi_def_cfa_register 13
 1661              	 
 1662 0066 80BD     	 pop {r7,pc}
 1663              	.L72:
 1664              	 .align 2
 1665              	.L71:
 1666 0068 00000000 	 .word tmpPidProfileIndex
 1667 006c 00000000 	 .word pidProfileIndexString
 1668 0070 00000000 	 .word pidProfileIndex
 1669 0074 00000000 	 .word cmsx_feedForwardTransition
 1670 0078 00000000 	 .word cmsx_angleStrength
 1671 007c 00000000 	 .word cmsx_horizonStrength
 1672 0080 00000000 	 .word cmsx_horizonTransition
 1673 0084 00000000 	 .word cmsx_itermAcceleratorGain
 1674 0088 00000000 	 .word cmsx_itermThrottleThreshold
 1675 008c 00000000 	 .word cmsx_throttleBoost
 1676              	 .cfi_endproc
 1677              	.LFE559:
 1679              	 .section .text.cmsx_profileOtherOnExit,"ax",%progbits
 1680              	 .align 2
 1681              	 .thumb
 1682              	 .thumb_func
 1684              	cmsx_profileOtherOnExit:
 1685              	.LFB560:
 273:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 274:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_profileOtherOnExit(const OSD_Entry *self)
 275:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 1686              	 .loc 4 275 0
 1687              	 .cfi_startproc
 1688              	 
 1689              	 
 1690 0000 80B5     	 push {r7,lr}
 1691              	.LCFI75:
 1692              	 .cfi_def_cfa_offset 8
 1693              	 .cfi_offset 7,-8
 1694              	 .cfi_offset 14,-4
 1695 0002 84B0     	 sub sp,sp,#16
 1696              	.LCFI76:
 1697              	 .cfi_def_cfa_offset 24
 1698 0004 00AF     	 add r7,sp,#0
 1699              	.LCFI77:
 1700              	 .cfi_def_cfa_register 7
 1701 0006 7860     	 str r0,[r7,#4]
 276:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(self);
 277:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 278:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile_t *pidProfile = pidProfilesMutable(pidProfileIndex);
 1702              	 .loc 4 278 0
 1703 0008 164B     	 ldr r3,.L75
 1704 000a 1B78     	 ldrb r3,[r3]
 1705 000c 1846     	 mov r0,r3
 1706 000e FFF7FEFF 	 bl pidProfilesMutable
 1707 0012 F860     	 str r0,[r7,#12]
 279:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->feedForwardTransition = cmsx_feedForwardTransition;
 1708              	 .loc 4 279 0
 1709 0014 144B     	 ldr r3,.L75+4
 1710 0016 1A78     	 ldrb r2,[r3]
 1711 0018 FB68     	 ldr r3,[r7,#12]
 1712 001a 83F84120 	 strb r2,[r3,#65]
 280:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidInitConfig(currentPidProfile);
 1713              	 .loc 4 280 0
 1714 001e 134B     	 ldr r3,.L75+8
 1715 0020 1B68     	 ldr r3,[r3]
 1716 0022 1846     	 mov r0,r3
 1717 0024 FFF7FEFF 	 bl pidInitConfig
 281:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 282:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->pid[PID_LEVEL].P = cmsx_angleStrength;
 1718              	 .loc 4 282 0
 1719 0028 114B     	 ldr r3,.L75+12
 1720 002a 1A78     	 ldrb r2,[r3]
 1721 002c FB68     	 ldr r3,[r7,#12]
 1722 002e DA75     	 strb r2,[r3,#23]
 283:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->pid[PID_LEVEL].I = cmsx_horizonStrength;
 1723              	 .loc 4 283 0
 1724 0030 104B     	 ldr r3,.L75+16
 1725 0032 1A78     	 ldrb r2,[r3]
 1726 0034 FB68     	 ldr r3,[r7,#12]
 1727 0036 1A76     	 strb r2,[r3,#24]
 284:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->pid[PID_LEVEL].D = cmsx_horizonTransition;
 1728              	 .loc 4 284 0
 1729 0038 0F4B     	 ldr r3,.L75+20
 1730 003a 1A78     	 ldrb r2,[r3]
 1731 003c FB68     	 ldr r3,[r7,#12]
 1732 003e 5A76     	 strb r2,[r3,#25]
 285:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 286:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->itermAcceleratorGain   = cmsx_itermAcceleratorGain;
 1733              	 .loc 4 286 0
 1734 0040 0E4B     	 ldr r3,.L75+24
 1735 0042 1A88     	 ldrh r2,[r3]
 1736 0044 FB68     	 ldr r3,[r7,#12]
 1737 0046 DA85     	 strh r2,[r3,#46]
 287:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->itermThrottleThreshold = cmsx_itermThrottleThreshold;
 1738              	 .loc 4 287 0
 1739 0048 0D4B     	 ldr r3,.L75+28
 1740 004a 1A88     	 ldrh r2,[r3]
 1741 004c FB68     	 ldr r3,[r7,#12]
 1742 004e 9A85     	 strh r2,[r3,#44]
 288:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 289:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->throttle_boost = cmsx_throttleBoost;
 1743              	 .loc 4 289 0
 1744 0050 0C4B     	 ldr r3,.L75+32
 1745 0052 1A78     	 ldrb r2,[r3]
 1746 0054 FB68     	 ldr r3,[r7,#12]
 1747 0056 83F84920 	 strb r2,[r3,#73]
 290:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 291:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 1748              	 .loc 4 291 0
 1749 005a 0023     	 movs r3,#0
 292:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 1750              	 .loc 4 292 0
 1751 005c 1846     	 mov r0,r3
 1752 005e 1037     	 adds r7,r7,#16
 1753              	.LCFI78:
 1754              	 .cfi_def_cfa_offset 8
 1755 0060 BD46     	 mov sp,r7
 1756              	.LCFI79:
 1757              	 .cfi_def_cfa_register 13
 1758              	 
 1759 0062 80BD     	 pop {r7,pc}
 1760              	.L76:
 1761              	 .align 2
 1762              	.L75:
 1763 0064 00000000 	 .word pidProfileIndex
 1764 0068 00000000 	 .word cmsx_feedForwardTransition
 1765 006c 00000000 	 .word currentPidProfile
 1766 0070 00000000 	 .word cmsx_angleStrength
 1767 0074 00000000 	 .word cmsx_horizonStrength
 1768 0078 00000000 	 .word cmsx_horizonTransition
 1769 007c 00000000 	 .word cmsx_itermAcceleratorGain
 1770 0080 00000000 	 .word cmsx_itermThrottleThreshold
 1771 0084 00000000 	 .word cmsx_throttleBoost
 1772              	 .cfi_endproc
 1773              	.LFE560:
 1775              	 .section .data.__compound_literal.25,"aw",%progbits
 1776              	 .align 2
 1779              	__compound_literal.25:
 1780 0000 00000000 	 .word cmsx_feedForwardTransition
 1781 0004 00       	 .byte 0
 1782 0005 64       	 .byte 100
 1783 0006 01       	 .byte 1
 1784 0007 0A00     	 .2byte 10
 1785 0009 000000   	 .section .data.__compound_literal.26,"aw",%progbits
 1786              	 .align 2
 1789              	__compound_literal.26:
 1790 0000 00000000 	 .word cmsx_angleStrength
 1791 0004 00       	 .byte 0
 1792 0005 C8       	 .byte -56
 1793 0006 01       	 .byte 1
 1794 0007 00       	 .section .data.__compound_literal.27,"aw",%progbits
 1795              	 .align 2
 1798              	__compound_literal.27:
 1799 0000 00000000 	 .word cmsx_horizonStrength
 1800 0004 00       	 .byte 0
 1801 0005 C8       	 .byte -56
 1802 0006 01       	 .byte 1
 1803 0007 00       	 .section .data.__compound_literal.28,"aw",%progbits
 1804              	 .align 2
 1807              	__compound_literal.28:
 1808 0000 00000000 	 .word cmsx_horizonTransition
 1809 0004 00       	 .byte 0
 1810 0005 C8       	 .byte -56
 1811 0006 01       	 .byte 1
 1812 0007 00       	 .section .data.__compound_literal.29,"aw",%progbits
 1813              	 .align 2
 1816              	__compound_literal.29:
 1817 0000 00000000 	 .word cmsx_itermAcceleratorGain
 1818 0004 E803     	 .short 1000
 1819 0006 3075     	 .short 30000
 1820 0008 0A00     	 .short 10
 1821 000a 0000     	 .section .data.__compound_literal.30,"aw",%progbits
 1822              	 .align 2
 1825              	__compound_literal.30:
 1826 0000 00000000 	 .word cmsx_itermThrottleThreshold
 1827 0004 1400     	 .short 20
 1828 0006 E803     	 .short 1000
 1829 0008 0100     	 .short 1
 1830 000a 0000     	 .section .data.__compound_literal.31,"aw",%progbits
 1831              	 .align 2
 1834              	__compound_literal.31:
 1835 0000 00000000 	 .word cmsx_throttleBoost
 1836 0004 00       	 .byte 0
 1837 0005 64       	 .byte 100
 1838 0006 01       	 .byte 1
 1839 0007 00       	 .section .rodata
 1840 0116 0000     	 .align 2
 1841              	.LC28:
 1842 0118 2D2D204F 	 .ascii "-- OTHER PP --\000"
 1842      54484552 
 1842      20505020 
 1842      2D2D00
 1843 0127 00       	 .align 2
 1844              	.LC29:
 1845 0128 46462054 	 .ascii "FF TRANS\000"
 1845      52414E53 
 1845      00
 1846 0131 000000   	 .align 2
 1847              	.LC30:
 1848 0134 414E474C 	 .ascii "ANGLE STR\000"
 1848      45205354 
 1848      5200
 1849 013e 0000     	 .align 2
 1850              	.LC31:
 1851 0140 484F525A 	 .ascii "HORZN STR\000"
 1851      4E205354 
 1851      5200
 1852 014a 0000     	 .align 2
 1853              	.LC32:
 1854 014c 484F525A 	 .ascii "HORZN TRS\000"
 1854      4E205452 
 1854      5300
 1855 0156 0000     	 .align 2
 1856              	.LC33:
 1857 0158 41472047 	 .ascii "AG GAIN\000"
 1857      41494E00 
 1858              	 .align 2
 1859              	.LC34:
 1860 0160 41472054 	 .ascii "AG THR\000"
 1860      485200
 1861 0167 00       	 .align 2
 1862              	.LC35:
 1863 0168 54485220 	 .ascii "THR BOOST\000"
 1863      424F4F53 
 1863      5400
 1864              	 .section .data.cmsx_menuProfileOtherEntries,"aw",%progbits
 1865              	 .align 2
 1868              	cmsx_menuProfileOtherEntries:
 1869 0000 18010000 	 .word .LC28
 1870 0004 00       	 .byte 0
 1871 0005 00000000 	 .4byte 0
 1872 0009 00000000 	 .4byte pidProfileIndexString
 1873 000d 00       	 .byte 0
 1874 000e 28010000 	 .4byte .LC29
 1875 0012 0B       	 .byte 11
 1876 0013 00000000 	 .4byte 0
 1877 0017 00000000 	 .4byte __compound_literal.25
 1878 001b 00       	 .byte 0
 1879 001c 34010000 	 .word .LC30
 1880 0020 07       	 .byte 7
 1881 0021 00000000 	 .4byte 0
 1882 0025 00000000 	 .4byte __compound_literal.26
 1883 0029 00       	 .byte 0
 1884 002a 40010000 	 .4byte .LC31
 1885 002e 07       	 .byte 7
 1886 002f 00000000 	 .4byte 0
 1887 0033 00000000 	 .4byte __compound_literal.27
 1888 0037 00       	 .byte 0
 1889 0038 4C010000 	 .word .LC32
 1890 003c 07       	 .byte 7
 1891 003d 00000000 	 .4byte 0
 1892 0041 00000000 	 .4byte __compound_literal.28
 1893 0045 00       	 .byte 0
 1894 0046 58010000 	 .4byte .LC33
 1895 004a 08       	 .byte 8
 1896 004b 00000000 	 .4byte 0
 1897 004f 00000000 	 .4byte __compound_literal.29
 1898 0053 00       	 .byte 0
 1899 0054 60010000 	 .word .LC34
 1900 0058 08       	 .byte 8
 1901 0059 00000000 	 .4byte 0
 1902 005d 00000000 	 .4byte __compound_literal.30
 1903 0061 00       	 .byte 0
 1904 0062 68010000 	 .4byte .LC35
 1905 0066 07       	 .byte 7
 1906 0067 00000000 	 .4byte 0
 1907 006b 00000000 	 .4byte __compound_literal.31
 1908 006f 00       	 .byte 0
 1909 0070 6C000000 	 .word .LC13
 1910 0074 01       	 .byte 1
 1911 0075 00000000 	 .4byte 0
 1912 0079 00000000 	 .4byte 0
 1913 007d 00       	 .byte 0
 1914 007e 00000000 	 .4byte 0
 1915 0082 0E       	 .byte 14
 1916 0083 00000000 	 .4byte 0
 1917 0087 00000000 	 .4byte 0
 1918 008b 00       	 .byte 0
 1919              	 .section .data.cmsx_menuProfileOther,"aw",%progbits
 1920              	 .align 2
 1923              	cmsx_menuProfileOther:
 1924 0000 00000000 	 .word cmsx_profileOtherOnEnter
 1925 0004 00000000 	 .word cmsx_profileOtherOnExit
 1926 0008 00000000 	 .word cmsx_menuProfileOtherEntries
 1927              	 .section .bss.gyroConfig_gyro_lowpass_hz,"aw",%nobits
 1928              	 .align 1
 1931              	gyroConfig_gyro_lowpass_hz:
 1932 0000 0000     	 .space 2
 1933              	 .section .bss.gyroConfig_gyro_lowpass2_hz,"aw",%nobits
 1934              	 .align 1
 1937              	gyroConfig_gyro_lowpass2_hz:
 1938 0000 0000     	 .space 2
 1939              	 .section .bss.gyroConfig_gyro_soft_notch_hz_1,"aw",%nobits
 1940              	 .align 1
 1943              	gyroConfig_gyro_soft_notch_hz_1:
 1944 0000 0000     	 .space 2
 1945              	 .section .bss.gyroConfig_gyro_soft_notch_cutoff_1,"aw",%nobits
 1946              	 .align 1
 1949              	gyroConfig_gyro_soft_notch_cutoff_1:
 1950 0000 0000     	 .space 2
 1951              	 .section .bss.gyroConfig_gyro_soft_notch_hz_2,"aw",%nobits
 1952              	 .align 1
 1955              	gyroConfig_gyro_soft_notch_hz_2:
 1956 0000 0000     	 .space 2
 1957              	 .section .bss.gyroConfig_gyro_soft_notch_cutoff_2,"aw",%nobits
 1958              	 .align 1
 1961              	gyroConfig_gyro_soft_notch_cutoff_2:
 1962 0000 0000     	 .space 2
 1963              	 .section .text.cmsx_menuGyro_onEnter,"ax",%progbits
 1964              	 .align 2
 1965              	 .thumb
 1966              	 .thumb_func
 1968              	cmsx_menuGyro_onEnter:
 1969              	.LFB561:
 293:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 294:../cleanflight/src/main/cms/cms_menu_imu.c **** static OSD_Entry cmsx_menuProfileOtherEntries[] = {
 295:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "-- OTHER PP --", OME_Label, NULL, pidProfileIndexString, 0 },
 296:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 297:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "FF TRANS",    OME_FLOAT,  NULL, &(OSD_FLOAT_t)  { &cmsx_feedForwardTransition,  0,    100,  
 298:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "ANGLE STR",   OME_UINT8,  NULL, &(OSD_UINT8_t)  { &cmsx_angleStrength,          0,    200,  
 299:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "HORZN STR",   OME_UINT8,  NULL, &(OSD_UINT8_t)  { &cmsx_horizonStrength,        0,    200,  
 300:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "HORZN TRS",   OME_UINT8,  NULL, &(OSD_UINT8_t)  { &cmsx_horizonTransition,      0,    200,  
 301:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "AG GAIN",     OME_UINT16, NULL, &(OSD_UINT16_t) { &cmsx_itermAcceleratorGain,   1000, 30000,
 302:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "AG THR",      OME_UINT16, NULL, &(OSD_UINT16_t) { &cmsx_itermThrottleThreshold, 20,   1000, 
 303:../cleanflight/src/main/cms/cms_menu_imu.c **** #ifdef USE_THROTTLE_BOOST
 304:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "THR BOOST",   OME_UINT8,  NULL, &(OSD_UINT8_t)  { &cmsx_throttleBoost,          0,    100,  
 305:../cleanflight/src/main/cms/cms_menu_imu.c **** #endif
 306:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 307:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "BACK", OME_Back, NULL, NULL, 0 },
 308:../cleanflight/src/main/cms/cms_menu_imu.c ****     { NULL, OME_END, NULL, NULL, 0 }
 309:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 310:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 311:../cleanflight/src/main/cms/cms_menu_imu.c **** static CMS_Menu cmsx_menuProfileOther = {
 312:../cleanflight/src/main/cms/cms_menu_imu.c **** #ifdef CMS_MENU_DEBUG
 313:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_text = "XPROFOTHER",
 314:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_type = OME_MENU,
 315:../cleanflight/src/main/cms/cms_menu_imu.c **** #endif
 316:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onEnter = cmsx_profileOtherOnEnter,
 317:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onExit = cmsx_profileOtherOnExit,
 318:../cleanflight/src/main/cms/cms_menu_imu.c ****     .entries = cmsx_menuProfileOtherEntries,
 319:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 320:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 321:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 322:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t gyroConfig_gyro_lowpass_hz;
 323:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t gyroConfig_gyro_lowpass2_hz;
 324:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t gyroConfig_gyro_soft_notch_hz_1;
 325:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t gyroConfig_gyro_soft_notch_cutoff_1;
 326:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t gyroConfig_gyro_soft_notch_hz_2;
 327:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t gyroConfig_gyro_soft_notch_cutoff_2;
 328:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 329:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_menuGyro_onEnter(void)
 330:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 1970              	 .loc 4 330 0
 1971              	 .cfi_startproc
 1972              	 
 1973              	 
 1974 0000 80B5     	 push {r7,lr}
 1975              	.LCFI80:
 1976              	 .cfi_def_cfa_offset 8
 1977              	 .cfi_offset 7,-8
 1978              	 .cfi_offset 14,-4
 1979 0002 00AF     	 add r7,sp,#0
 1980              	.LCFI81:
 1981              	 .cfi_def_cfa_register 7
 331:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfig_gyro_lowpass_hz =  gyroConfig()->gyro_lowpass_hz;
 1982              	 .loc 4 331 0
 1983 0004 FFF7FEFF 	 bl gyroConfig
 1984 0008 0346     	 mov r3,r0
 1985 000a 1B89     	 ldrh r3,[r3,#8]
 1986 000c 9AB2     	 uxth r2,r3
 1987 000e 144B     	 ldr r3,.L79
 1988 0010 1A80     	 strh r2,[r3]
 332:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfig_gyro_lowpass2_hz =  gyroConfig()->gyro_lowpass2_hz;
 1989              	 .loc 4 332 0
 1990 0012 FFF7FEFF 	 bl gyroConfig
 1991 0016 0346     	 mov r3,r0
 1992 0018 5B89     	 ldrh r3,[r3,#10]
 1993 001a 9AB2     	 uxth r2,r3
 1994 001c 114B     	 ldr r3,.L79+4
 1995 001e 1A80     	 strh r2,[r3]
 333:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfig_gyro_soft_notch_hz_1 = gyroConfig()->gyro_soft_notch_hz_1;
 1996              	 .loc 4 333 0
 1997 0020 FFF7FEFF 	 bl gyroConfig
 1998 0024 0346     	 mov r3,r0
 1999 0026 9B89     	 ldrh r3,[r3,#12]
 2000 0028 9AB2     	 uxth r2,r3
 2001 002a 0F4B     	 ldr r3,.L79+8
 2002 002c 1A80     	 strh r2,[r3]
 334:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfig_gyro_soft_notch_cutoff_1 = gyroConfig()->gyro_soft_notch_cutoff_1;
 2003              	 .loc 4 334 0
 2004 002e FFF7FEFF 	 bl gyroConfig
 2005 0032 0346     	 mov r3,r0
 2006 0034 DB89     	 ldrh r3,[r3,#14]
 2007 0036 9AB2     	 uxth r2,r3
 2008 0038 0C4B     	 ldr r3,.L79+12
 2009 003a 1A80     	 strh r2,[r3]
 335:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfig_gyro_soft_notch_hz_2 = gyroConfig()->gyro_soft_notch_hz_2;
 2010              	 .loc 4 335 0
 2011 003c FFF7FEFF 	 bl gyroConfig
 2012 0040 0346     	 mov r3,r0
 2013 0042 1B8A     	 ldrh r3,[r3,#16]
 2014 0044 9AB2     	 uxth r2,r3
 2015 0046 0A4B     	 ldr r3,.L79+16
 2016 0048 1A80     	 strh r2,[r3]
 336:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfig_gyro_soft_notch_cutoff_2 = gyroConfig()->gyro_soft_notch_cutoff_2;
 2017              	 .loc 4 336 0
 2018 004a FFF7FEFF 	 bl gyroConfig
 2019 004e 0346     	 mov r3,r0
 2020 0050 5B8A     	 ldrh r3,[r3,#18]
 2021 0052 9AB2     	 uxth r2,r3
 2022 0054 074B     	 ldr r3,.L79+20
 2023 0056 1A80     	 strh r2,[r3]
 337:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 338:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 2024              	 .loc 4 338 0
 2025 0058 0023     	 movs r3,#0
 339:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 2026              	 .loc 4 339 0
 2027 005a 1846     	 mov r0,r3
 2028 005c 80BD     	 pop {r7,pc}
 2029              	.L80:
 2030 005e 00BF     	 .align 2
 2031              	.L79:
 2032 0060 00000000 	 .word gyroConfig_gyro_lowpass_hz
 2033 0064 00000000 	 .word gyroConfig_gyro_lowpass2_hz
 2034 0068 00000000 	 .word gyroConfig_gyro_soft_notch_hz_1
 2035 006c 00000000 	 .word gyroConfig_gyro_soft_notch_cutoff_1
 2036 0070 00000000 	 .word gyroConfig_gyro_soft_notch_hz_2
 2037 0074 00000000 	 .word gyroConfig_gyro_soft_notch_cutoff_2
 2038              	 .cfi_endproc
 2039              	.LFE561:
 2041              	 .section .text.cmsx_menuGyro_onExit,"ax",%progbits
 2042              	 .align 2
 2043              	 .thumb
 2044              	 .thumb_func
 2046              	cmsx_menuGyro_onExit:
 2047              	.LFB562:
 340:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 341:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_menuGyro_onExit(const OSD_Entry *self)
 342:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 2048              	 .loc 4 342 0
 2049              	 .cfi_startproc
 2050              	 
 2051              	 
 2052 0000 80B5     	 push {r7,lr}
 2053              	.LCFI82:
 2054              	 .cfi_def_cfa_offset 8
 2055              	 .cfi_offset 7,-8
 2056              	 .cfi_offset 14,-4
 2057 0002 82B0     	 sub sp,sp,#8
 2058              	.LCFI83:
 2059              	 .cfi_def_cfa_offset 16
 2060 0004 00AF     	 add r7,sp,#0
 2061              	.LCFI84:
 2062              	 .cfi_def_cfa_register 7
 2063 0006 7860     	 str r0,[r7,#4]
 343:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(self);
 344:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 345:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfigMutable()->gyro_lowpass_hz =  gyroConfig_gyro_lowpass_hz;
 2064              	 .loc 4 345 0
 2065 0008 FFF7FEFF 	 bl gyroConfigMutable
 2066 000c 0246     	 mov r2,r0
 2067 000e 134B     	 ldr r3,.L83
 2068 0010 1B88     	 ldrh r3,[r3]
 2069 0012 1381     	 strh r3,[r2,#8]
 346:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfigMutable()->gyro_lowpass2_hz =  gyroConfig_gyro_lowpass2_hz;
 2070              	 .loc 4 346 0
 2071 0014 FFF7FEFF 	 bl gyroConfigMutable
 2072 0018 0246     	 mov r2,r0
 2073 001a 114B     	 ldr r3,.L83+4
 2074 001c 1B88     	 ldrh r3,[r3]
 2075 001e 5381     	 strh r3,[r2,#10]
 347:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfigMutable()->gyro_soft_notch_hz_1 = gyroConfig_gyro_soft_notch_hz_1;
 2076              	 .loc 4 347 0
 2077 0020 FFF7FEFF 	 bl gyroConfigMutable
 2078 0024 0246     	 mov r2,r0
 2079 0026 0F4B     	 ldr r3,.L83+8
 2080 0028 1B88     	 ldrh r3,[r3]
 2081 002a 9381     	 strh r3,[r2,#12]
 348:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfigMutable()->gyro_soft_notch_cutoff_1 = gyroConfig_gyro_soft_notch_cutoff_1;
 2082              	 .loc 4 348 0
 2083 002c FFF7FEFF 	 bl gyroConfigMutable
 2084 0030 0246     	 mov r2,r0
 2085 0032 0D4B     	 ldr r3,.L83+12
 2086 0034 1B88     	 ldrh r3,[r3]
 2087 0036 D381     	 strh r3,[r2,#14]
 349:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfigMutable()->gyro_soft_notch_hz_2 = gyroConfig_gyro_soft_notch_hz_2;
 2088              	 .loc 4 349 0
 2089 0038 FFF7FEFF 	 bl gyroConfigMutable
 2090 003c 0246     	 mov r2,r0
 2091 003e 0B4B     	 ldr r3,.L83+16
 2092 0040 1B88     	 ldrh r3,[r3]
 2093 0042 1382     	 strh r3,[r2,#16]
 350:../cleanflight/src/main/cms/cms_menu_imu.c ****     gyroConfigMutable()->gyro_soft_notch_cutoff_2 = gyroConfig_gyro_soft_notch_cutoff_2;
 2094              	 .loc 4 350 0
 2095 0044 FFF7FEFF 	 bl gyroConfigMutable
 2096 0048 0246     	 mov r2,r0
 2097 004a 094B     	 ldr r3,.L83+20
 2098 004c 1B88     	 ldrh r3,[r3]
 2099 004e 5382     	 strh r3,[r2,#18]
 351:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 352:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 2100              	 .loc 4 352 0
 2101 0050 0023     	 movs r3,#0
 353:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 2102              	 .loc 4 353 0
 2103 0052 1846     	 mov r0,r3
 2104 0054 0837     	 adds r7,r7,#8
 2105              	.LCFI85:
 2106              	 .cfi_def_cfa_offset 8
 2107 0056 BD46     	 mov sp,r7
 2108              	.LCFI86:
 2109              	 .cfi_def_cfa_register 13
 2110              	 
 2111 0058 80BD     	 pop {r7,pc}
 2112              	.L84:
 2113 005a 00BF     	 .align 2
 2114              	.L83:
 2115 005c 00000000 	 .word gyroConfig_gyro_lowpass_hz
 2116 0060 00000000 	 .word gyroConfig_gyro_lowpass2_hz
 2117 0064 00000000 	 .word gyroConfig_gyro_soft_notch_hz_1
 2118 0068 00000000 	 .word gyroConfig_gyro_soft_notch_cutoff_1
 2119 006c 00000000 	 .word gyroConfig_gyro_soft_notch_hz_2
 2120 0070 00000000 	 .word gyroConfig_gyro_soft_notch_cutoff_2
 2121              	 .cfi_endproc
 2122              	.LFE562:
 2124              	 .section .data.__compound_literal.32,"aw",%progbits
 2125              	 .align 2
 2128              	__compound_literal.32:
 2129 0000 00000000 	 .word gyroConfig_gyro_lowpass_hz
 2130 0004 0000     	 .short 0
 2131 0006 803E     	 .short 16000
 2132 0008 0100     	 .short 1
 2133 000a 0000     	 .section .data.__compound_literal.33,"aw",%progbits
 2134              	 .align 2
 2137              	__compound_literal.33:
 2138 0000 00000000 	 .word gyroConfig_gyro_lowpass2_hz
 2139 0004 0000     	 .short 0
 2140 0006 803E     	 .short 16000
 2141 0008 0100     	 .short 1
 2142 000a 0000     	 .section .data.__compound_literal.34,"aw",%progbits
 2143              	 .align 2
 2146              	__compound_literal.34:
 2147 0000 00000000 	 .word gyroConfig_gyro_soft_notch_hz_1
 2148 0004 0000     	 .short 0
 2149 0006 F401     	 .short 500
 2150 0008 0100     	 .short 1
 2151 000a 0000     	 .section .data.__compound_literal.35,"aw",%progbits
 2152              	 .align 2
 2155              	__compound_literal.35:
 2156 0000 00000000 	 .word gyroConfig_gyro_soft_notch_cutoff_1
 2157 0004 0000     	 .short 0
 2158 0006 F401     	 .short 500
 2159 0008 0100     	 .short 1
 2160 000a 0000     	 .section .data.__compound_literal.36,"aw",%progbits
 2161              	 .align 2
 2164              	__compound_literal.36:
 2165 0000 00000000 	 .word gyroConfig_gyro_soft_notch_hz_2
 2166 0004 0000     	 .short 0
 2167 0006 F401     	 .short 500
 2168 0008 0100     	 .short 1
 2169 000a 0000     	 .section .data.__compound_literal.37,"aw",%progbits
 2170              	 .align 2
 2173              	__compound_literal.37:
 2174 0000 00000000 	 .word gyroConfig_gyro_soft_notch_cutoff_2
 2175 0004 0000     	 .short 0
 2176 0006 F401     	 .short 500
 2177 0008 0100     	 .short 1
 2178 000a 0000     	 .section .rodata
 2179 0172 0000     	 .align 2
 2180              	.LC36:
 2181 0174 2D2D2046 	 .ascii "-- FILTER GLB  --\000"
 2181      494C5445 
 2181      5220474C 
 2181      4220202D 
 2181      2D00
 2182 0186 0000     	 .align 2
 2183              	.LC37:
 2184 0188 4759524F 	 .ascii "GYRO LPF\000"
 2184      204C5046 
 2184      00
 2185 0191 000000   	 .align 2
 2186              	.LC38:
 2187 0194 4759524F 	 .ascii "GYRO LPF2\000"
 2187      204C5046 
 2187      3200
 2188 019e 0000     	 .align 2
 2189              	.LC39:
 2190 01a0 4759524F 	 .ascii "GYRO NF1\000"
 2190      204E4631 
 2190      00
 2191 01a9 000000   	 .align 2
 2192              	.LC40:
 2193 01ac 4759524F 	 .ascii "GYRO NF1C\000"
 2193      204E4631 
 2193      4300
 2194 01b6 0000     	 .align 2
 2195              	.LC41:
 2196 01b8 4759524F 	 .ascii "GYRO NF2\000"
 2196      204E4632 
 2196      00
 2197 01c1 000000   	 .align 2
 2198              	.LC42:
 2199 01c4 4759524F 	 .ascii "GYRO NF2C\000"
 2199      204E4632 
 2199      4300
 2200              	 .section .data.cmsx_menuFilterGlobalEntries,"aw",%progbits
 2201              	 .align 2
 2204              	cmsx_menuFilterGlobalEntries:
 2205 0000 74010000 	 .word .LC36
 2206 0004 00       	 .byte 0
 2207 0005 00000000 	 .4byte 0
 2208 0009 00000000 	 .4byte 0
 2209 000d 00       	 .byte 0
 2210 000e 88010000 	 .4byte .LC37
 2211 0012 08       	 .byte 8
 2212 0013 00000000 	 .4byte 0
 2213 0017 00000000 	 .4byte __compound_literal.32
 2214 001b 00       	 .byte 0
 2215 001c 94010000 	 .word .LC38
 2216 0020 08       	 .byte 8
 2217 0021 00000000 	 .4byte 0
 2218 0025 00000000 	 .4byte __compound_literal.33
 2219 0029 00       	 .byte 0
 2220 002a A0010000 	 .4byte .LC39
 2221 002e 08       	 .byte 8
 2222 002f 00000000 	 .4byte 0
 2223 0033 00000000 	 .4byte __compound_literal.34
 2224 0037 00       	 .byte 0
 2225 0038 AC010000 	 .word .LC40
 2226 003c 08       	 .byte 8
 2227 003d 00000000 	 .4byte 0
 2228 0041 00000000 	 .4byte __compound_literal.35
 2229 0045 00       	 .byte 0
 2230 0046 B8010000 	 .4byte .LC41
 2231 004a 08       	 .byte 8
 2232 004b 00000000 	 .4byte 0
 2233 004f 00000000 	 .4byte __compound_literal.36
 2234 0053 00       	 .byte 0
 2235 0054 C4010000 	 .word .LC42
 2236 0058 08       	 .byte 8
 2237 0059 00000000 	 .4byte 0
 2238 005d 00000000 	 .4byte __compound_literal.37
 2239 0061 00       	 .byte 0
 2240 0062 6C000000 	 .4byte .LC13
 2241 0066 01       	 .byte 1
 2242 0067 00000000 	 .4byte 0
 2243 006b 00000000 	 .4byte 0
 2244 006f 00       	 .byte 0
 2245 0070 00000000 	 .word 0
 2246 0074 0E       	 .byte 14
 2247 0075 00000000 	 .4byte 0
 2248 0079 00000000 	 .4byte 0
 2249 007d 00       	 .byte 0
 2250 007e 0000     	 .section .data.cmsx_menuFilterGlobal,"aw",%progbits
 2251              	 .align 2
 2254              	cmsx_menuFilterGlobal:
 2255 0000 00000000 	 .word cmsx_menuGyro_onEnter
 2256 0004 00000000 	 .word cmsx_menuGyro_onExit
 2257 0008 00000000 	 .word cmsx_menuFilterGlobalEntries
 2258              	 .section .bss.cmsx_dterm_lowpass_hz,"aw",%nobits
 2259              	 .align 1
 2262              	cmsx_dterm_lowpass_hz:
 2263 0000 0000     	 .space 2
 2264              	 .section .bss.cmsx_dterm_lowpass2_hz,"aw",%nobits
 2265              	 .align 1
 2268              	cmsx_dterm_lowpass2_hz:
 2269 0000 0000     	 .space 2
 2270              	 .section .bss.cmsx_dterm_notch_hz,"aw",%nobits
 2271              	 .align 1
 2274              	cmsx_dterm_notch_hz:
 2275 0000 0000     	 .space 2
 2276              	 .section .bss.cmsx_dterm_notch_cutoff,"aw",%nobits
 2277              	 .align 1
 2280              	cmsx_dterm_notch_cutoff:
 2281 0000 0000     	 .space 2
 2282              	 .section .bss.cmsx_yaw_lowpass_hz,"aw",%nobits
 2283              	 .align 1
 2286              	cmsx_yaw_lowpass_hz:
 2287 0000 0000     	 .space 2
 2288              	 .section .text.cmsx_FilterPerProfileRead,"ax",%progbits
 2289              	 .align 2
 2290              	 .thumb
 2291              	 .thumb_func
 2293              	cmsx_FilterPerProfileRead:
 2294              	.LFB563:
 354:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 355:../cleanflight/src/main/cms/cms_menu_imu.c **** static OSD_Entry cmsx_menuFilterGlobalEntries[] =
 356:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 357:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "-- FILTER GLB  --", OME_Label, NULL, NULL, 0 },
 358:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 359:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "GYRO LPF",   OME_UINT16, NULL, &(OSD_UINT16_t) { &gyroConfig_gyro_lowpass_hz, 0, 16000, 1 },
 360:../cleanflight/src/main/cms/cms_menu_imu.c **** #ifdef USE_GYRO_LPF2
 361:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "GYRO LPF2",  OME_UINT16, NULL, &(OSD_UINT16_t) { &gyroConfig_gyro_lowpass2_hz,  0, 16000, 1 
 362:../cleanflight/src/main/cms/cms_menu_imu.c **** #endif
 363:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "GYRO NF1",   OME_UINT16, NULL, &(OSD_UINT16_t) { &gyroConfig_gyro_soft_notch_hz_1,     0, 50
 364:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "GYRO NF1C",  OME_UINT16, NULL, &(OSD_UINT16_t) { &gyroConfig_gyro_soft_notch_cutoff_1, 0, 50
 365:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "GYRO NF2",   OME_UINT16, NULL, &(OSD_UINT16_t) { &gyroConfig_gyro_soft_notch_hz_2,     0, 50
 366:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "GYRO NF2C",  OME_UINT16, NULL, &(OSD_UINT16_t) { &gyroConfig_gyro_soft_notch_cutoff_2, 0, 50
 367:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 368:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "BACK", OME_Back, NULL, NULL, 0 },
 369:../cleanflight/src/main/cms/cms_menu_imu.c ****     { NULL, OME_END, NULL, NULL, 0 }
 370:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 371:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 372:../cleanflight/src/main/cms/cms_menu_imu.c **** static CMS_Menu cmsx_menuFilterGlobal = {
 373:../cleanflight/src/main/cms/cms_menu_imu.c **** #ifdef CMS_MENU_DEBUG
 374:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_text = "XFLTGLB",
 375:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_type = OME_MENU,
 376:../cleanflight/src/main/cms/cms_menu_imu.c **** #endif
 377:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onEnter = cmsx_menuGyro_onEnter,
 378:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onExit = cmsx_menuGyro_onExit,
 379:../cleanflight/src/main/cms/cms_menu_imu.c ****     .entries = cmsx_menuFilterGlobalEntries,
 380:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 381:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 382:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t cmsx_dterm_lowpass_hz;
 383:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t cmsx_dterm_lowpass2_hz;
 384:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t cmsx_dterm_notch_hz;
 385:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t cmsx_dterm_notch_cutoff;
 386:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint16_t cmsx_yaw_lowpass_hz;
 387:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 388:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_FilterPerProfileRead(void)
 389:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 2295              	 .loc 4 389 0
 2296              	 .cfi_startproc
 2297              	 
 2298              	 
 2299 0000 80B5     	 push {r7,lr}
 2300              	.LCFI87:
 2301              	 .cfi_def_cfa_offset 8
 2302              	 .cfi_offset 7,-8
 2303              	 .cfi_offset 14,-4
 2304 0002 82B0     	 sub sp,sp,#8
 2305              	.LCFI88:
 2306              	 .cfi_def_cfa_offset 16
 2307 0004 00AF     	 add r7,sp,#0
 2308              	.LCFI89:
 2309              	 .cfi_def_cfa_register 7
 390:../cleanflight/src/main/cms/cms_menu_imu.c ****     const pidProfile_t *pidProfile = pidProfiles(pidProfileIndex);
 2310              	 .loc 4 390 0
 2311 0006 124B     	 ldr r3,.L87
 2312 0008 1B78     	 ldrb r3,[r3]
 2313 000a 1846     	 mov r0,r3
 2314 000c FFF7FEFF 	 bl pidProfiles
 2315 0010 7860     	 str r0,[r7,#4]
 391:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 392:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_dterm_lowpass_hz   = pidProfile->dterm_lowpass_hz;
 2316              	 .loc 4 392 0
 2317 0012 7B68     	 ldr r3,[r7,#4]
 2318 0014 5B88     	 ldrh r3,[r3,#2]
 2319 0016 9AB2     	 uxth r2,r3
 2320 0018 0E4B     	 ldr r3,.L87+4
 2321 001a 1A80     	 strh r2,[r3]
 393:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_dterm_lowpass2_hz  = pidProfile->dterm_lowpass2_hz;
 2322              	 .loc 4 393 0
 2323 001c 7B68     	 ldr r3,[r7,#4]
 2324 001e B3F84630 	 ldrh r3,[r3,#70]
 2325 0022 9AB2     	 uxth r2,r3
 2326 0024 0C4B     	 ldr r3,.L87+8
 2327 0026 1A80     	 strh r2,[r3]
 394:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_dterm_notch_hz     = pidProfile->dterm_notch_hz;
 2328              	 .loc 4 394 0
 2329 0028 7B68     	 ldr r3,[r7,#4]
 2330 002a 9B88     	 ldrh r3,[r3,#4]
 2331 002c 9AB2     	 uxth r2,r3
 2332 002e 0B4B     	 ldr r3,.L87+12
 2333 0030 1A80     	 strh r2,[r3]
 395:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_dterm_notch_cutoff = pidProfile->dterm_notch_cutoff;
 2334              	 .loc 4 395 0
 2335 0032 7B68     	 ldr r3,[r7,#4]
 2336 0034 DB88     	 ldrh r3,[r3,#6]
 2337 0036 9AB2     	 uxth r2,r3
 2338 0038 094B     	 ldr r3,.L87+16
 2339 003a 1A80     	 strh r2,[r3]
 396:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_yaw_lowpass_hz     = pidProfile->yaw_lowpass_hz;
 2340              	 .loc 4 396 0
 2341 003c 7B68     	 ldr r3,[r7,#4]
 2342 003e 1B88     	 ldrh r3,[r3]
 2343 0040 9AB2     	 uxth r2,r3
 2344 0042 084B     	 ldr r3,.L87+20
 2345 0044 1A80     	 strh r2,[r3]
 397:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 398:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 2346              	 .loc 4 398 0
 2347 0046 0023     	 movs r3,#0
 399:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 2348              	 .loc 4 399 0
 2349 0048 1846     	 mov r0,r3
 2350 004a 0837     	 adds r7,r7,#8
 2351              	.LCFI90:
 2352              	 .cfi_def_cfa_offset 8
 2353 004c BD46     	 mov sp,r7
 2354              	.LCFI91:
 2355              	 .cfi_def_cfa_register 13
 2356              	 
 2357 004e 80BD     	 pop {r7,pc}
 2358              	.L88:
 2359              	 .align 2
 2360              	.L87:
 2361 0050 00000000 	 .word pidProfileIndex
 2362 0054 00000000 	 .word cmsx_dterm_lowpass_hz
 2363 0058 00000000 	 .word cmsx_dterm_lowpass2_hz
 2364 005c 00000000 	 .word cmsx_dterm_notch_hz
 2365 0060 00000000 	 .word cmsx_dterm_notch_cutoff
 2366 0064 00000000 	 .word cmsx_yaw_lowpass_hz
 2367              	 .cfi_endproc
 2368              	.LFE563:
 2370              	 .section .text.cmsx_FilterPerProfileWriteback,"ax",%progbits
 2371              	 .align 2
 2372              	 .thumb
 2373              	 .thumb_func
 2375              	cmsx_FilterPerProfileWriteback:
 2376              	.LFB564:
 400:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 401:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_FilterPerProfileWriteback(const OSD_Entry *self)
 402:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 2377              	 .loc 4 402 0
 2378              	 .cfi_startproc
 2379              	 
 2380              	 
 2381              	 
 2382 0000 80B4     	 push {r7}
 2383              	.LCFI92:
 2384              	 .cfi_def_cfa_offset 4
 2385              	 .cfi_offset 7,-4
 2386 0002 85B0     	 sub sp,sp,#20
 2387              	.LCFI93:
 2388              	 .cfi_def_cfa_offset 24
 2389 0004 00AF     	 add r7,sp,#0
 2390              	.LCFI94:
 2391              	 .cfi_def_cfa_register 7
 2392 0006 7860     	 str r0,[r7,#4]
 403:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(self);
 404:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 405:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile_t *pidProfile = currentPidProfile;
 2393              	 .loc 4 405 0
 2394 0008 0F4B     	 ldr r3,.L91
 2395 000a 1B68     	 ldr r3,[r3]
 2396 000c FB60     	 str r3,[r7,#12]
 406:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 407:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->dterm_lowpass_hz   = cmsx_dterm_lowpass_hz;
 2397              	 .loc 4 407 0
 2398 000e 0F4B     	 ldr r3,.L91+4
 2399 0010 1A88     	 ldrh r2,[r3]
 2400 0012 FB68     	 ldr r3,[r7,#12]
 2401 0014 5A80     	 strh r2,[r3,#2]
 408:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->dterm_lowpass2_hz  = cmsx_dterm_lowpass2_hz;
 2402              	 .loc 4 408 0
 2403 0016 0E4B     	 ldr r3,.L91+8
 2404 0018 1A88     	 ldrh r2,[r3]
 2405 001a FB68     	 ldr r3,[r7,#12]
 2406 001c A3F84620 	 strh r2,[r3,#70]
 409:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->dterm_notch_hz     = cmsx_dterm_notch_hz;
 2407              	 .loc 4 409 0
 2408 0020 0C4B     	 ldr r3,.L91+12
 2409 0022 1A88     	 ldrh r2,[r3]
 2410 0024 FB68     	 ldr r3,[r7,#12]
 2411 0026 9A80     	 strh r2,[r3,#4]
 410:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->dterm_notch_cutoff = cmsx_dterm_notch_cutoff;
 2412              	 .loc 4 410 0
 2413 0028 0B4B     	 ldr r3,.L91+16
 2414 002a 1A88     	 ldrh r2,[r3]
 2415 002c FB68     	 ldr r3,[r7,#12]
 2416 002e DA80     	 strh r2,[r3,#6]
 411:../cleanflight/src/main/cms/cms_menu_imu.c ****     pidProfile->yaw_lowpass_hz     = cmsx_yaw_lowpass_hz;
 2417              	 .loc 4 411 0
 2418 0030 0A4B     	 ldr r3,.L91+20
 2419 0032 1A88     	 ldrh r2,[r3]
 2420 0034 FB68     	 ldr r3,[r7,#12]
 2421 0036 1A80     	 strh r2,[r3]
 412:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 413:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 2422              	 .loc 4 413 0
 2423 0038 0023     	 movs r3,#0
 414:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 2424              	 .loc 4 414 0
 2425 003a 1846     	 mov r0,r3
 2426 003c 1437     	 adds r7,r7,#20
 2427              	.LCFI95:
 2428              	 .cfi_def_cfa_offset 4
 2429 003e BD46     	 mov sp,r7
 2430              	.LCFI96:
 2431              	 .cfi_def_cfa_register 13
 2432              	 
 2433 0040 5DF8047B 	 ldr r7,[sp],#4
 2434              	.LCFI97:
 2435              	 .cfi_restore 7
 2436              	 .cfi_def_cfa_offset 0
 2437 0044 7047     	 bx lr
 2438              	.L92:
 2439 0046 00BF     	 .align 2
 2440              	.L91:
 2441 0048 00000000 	 .word currentPidProfile
 2442 004c 00000000 	 .word cmsx_dterm_lowpass_hz
 2443 0050 00000000 	 .word cmsx_dterm_lowpass2_hz
 2444 0054 00000000 	 .word cmsx_dterm_notch_hz
 2445 0058 00000000 	 .word cmsx_dterm_notch_cutoff
 2446 005c 00000000 	 .word cmsx_yaw_lowpass_hz
 2447              	 .cfi_endproc
 2448              	.LFE564:
 2450              	 .section .data.__compound_literal.38,"aw",%progbits
 2451              	 .align 2
 2454              	__compound_literal.38:
 2455 0000 00000000 	 .word cmsx_dterm_lowpass_hz
 2456 0004 0000     	 .short 0
 2457 0006 F401     	 .short 500
 2458 0008 0100     	 .short 1
 2459 000a 0000     	 .section .data.__compound_literal.39,"aw",%progbits
 2460              	 .align 2
 2463              	__compound_literal.39:
 2464 0000 00000000 	 .word cmsx_dterm_lowpass2_hz
 2465 0004 0000     	 .short 0
 2466 0006 F401     	 .short 500
 2467 0008 0100     	 .short 1
 2468 000a 0000     	 .section .data.__compound_literal.40,"aw",%progbits
 2469              	 .align 2
 2472              	__compound_literal.40:
 2473 0000 00000000 	 .word cmsx_dterm_notch_hz
 2474 0004 0000     	 .short 0
 2475 0006 F401     	 .short 500
 2476 0008 0100     	 .short 1
 2477 000a 0000     	 .section .data.__compound_literal.41,"aw",%progbits
 2478              	 .align 2
 2481              	__compound_literal.41:
 2482 0000 00000000 	 .word cmsx_dterm_notch_cutoff
 2483 0004 0000     	 .short 0
 2484 0006 F401     	 .short 500
 2485 0008 0100     	 .short 1
 2486 000a 0000     	 .section .data.__compound_literal.42,"aw",%progbits
 2487              	 .align 2
 2490              	__compound_literal.42:
 2491 0000 00000000 	 .word cmsx_yaw_lowpass_hz
 2492 0004 0000     	 .short 0
 2493 0006 F401     	 .short 500
 2494 0008 0100     	 .short 1
 2495 000a 0000     	 .section .rodata
 2496 01ce 0000     	 .align 2
 2497              	.LC43:
 2498 01d0 2D2D2046 	 .ascii "-- FILTER PP  --\000"
 2498      494C5445 
 2498      52205050 
 2498      20202D2D 
 2498      00
 2499 01e1 000000   	 .align 2
 2500              	.LC44:
 2501 01e4 44544552 	 .ascii "DTERM LPF\000"
 2501      4D204C50 
 2501      4600
 2502 01ee 0000     	 .align 2
 2503              	.LC45:
 2504 01f0 44544552 	 .ascii "DTERM LPF2\000"
 2504      4D204C50 
 2504      463200
 2505 01fb 00       	 .align 2
 2506              	.LC46:
 2507 01fc 44544552 	 .ascii "DTERM NF\000"
 2507      4D204E46 
 2507      00
 2508 0205 000000   	 .align 2
 2509              	.LC47:
 2510 0208 44544552 	 .ascii "DTERM NFCO\000"
 2510      4D204E46 
 2510      434F00
 2511 0213 00       	 .align 2
 2512              	.LC48:
 2513 0214 59415720 	 .ascii "YAW LPF\000"
 2513      4C504600 
 2514              	 .section .data.cmsx_menuFilterPerProfileEntries,"aw",%progbits
 2515              	 .align 2
 2518              	cmsx_menuFilterPerProfileEntries:
 2519 0000 D0010000 	 .word .LC43
 2520 0004 00       	 .byte 0
 2521 0005 00000000 	 .4byte 0
 2522 0009 00000000 	 .4byte 0
 2523 000d 00       	 .byte 0
 2524 000e E4010000 	 .4byte .LC44
 2525 0012 08       	 .byte 8
 2526 0013 00000000 	 .4byte 0
 2527 0017 00000000 	 .4byte __compound_literal.38
 2528 001b 00       	 .byte 0
 2529 001c F0010000 	 .word .LC45
 2530 0020 08       	 .byte 8
 2531 0021 00000000 	 .4byte 0
 2532 0025 00000000 	 .4byte __compound_literal.39
 2533 0029 00       	 .byte 0
 2534 002a FC010000 	 .4byte .LC46
 2535 002e 08       	 .byte 8
 2536 002f 00000000 	 .4byte 0
 2537 0033 00000000 	 .4byte __compound_literal.40
 2538 0037 00       	 .byte 0
 2539 0038 08020000 	 .word .LC47
 2540 003c 08       	 .byte 8
 2541 003d 00000000 	 .4byte 0
 2542 0041 00000000 	 .4byte __compound_literal.41
 2543 0045 00       	 .byte 0
 2544 0046 14020000 	 .4byte .LC48
 2545 004a 08       	 .byte 8
 2546 004b 00000000 	 .4byte 0
 2547 004f 00000000 	 .4byte __compound_literal.42
 2548 0053 00       	 .byte 0
 2549 0054 6C000000 	 .word .LC13
 2550 0058 01       	 .byte 1
 2551 0059 00000000 	 .4byte 0
 2552 005d 00000000 	 .4byte 0
 2553 0061 00       	 .byte 0
 2554 0062 00000000 	 .4byte 0
 2555 0066 0E       	 .byte 14
 2556 0067 00000000 	 .4byte 0
 2557 006b 00000000 	 .4byte 0
 2558 006f 00       	 .byte 0
 2559              	 .section .data.cmsx_menuFilterPerProfile,"aw",%progbits
 2560              	 .align 2
 2563              	cmsx_menuFilterPerProfile:
 2564 0000 00000000 	 .word cmsx_FilterPerProfileRead
 2565 0004 00000000 	 .word cmsx_FilterPerProfileWriteback
 2566 0008 00000000 	 .word cmsx_menuFilterPerProfileEntries
 2567              	 .section .bss.cmsx_dstPidProfile,"aw",%nobits
 2570              	cmsx_dstPidProfile:
 2571 0000 00       	 .space 1
 2572              	 .section .bss.cmsx_dstControlRateProfile,"aw",%nobits
 2575              	cmsx_dstControlRateProfile:
 2576 0000 00       	 .space 1
 2577              	 .section .rodata
 2578              	 .align 2
 2579              	.LC49:
 2580 021c 2D00     	 .ascii "-\000"
 2581 021e 0000     	 .align 2
 2582              	.LC50:
 2583 0220 3100     	 .ascii "1\000"
 2584 0222 0000     	 .align 2
 2585              	.LC51:
 2586 0224 3200     	 .ascii "2\000"
 2587 0226 0000     	 .align 2
 2588              	.LC52:
 2589 0228 3300     	 .ascii "3\000"
 2590              	 .section .rodata.cmsx_ProfileNames,"a",%progbits
 2591              	 .align 2
 2594              	cmsx_ProfileNames:
 2595 0000 1C020000 	 .word .LC49
 2596 0004 20020000 	 .word .LC50
 2597 0008 24020000 	 .word .LC51
 2598 000c 28020000 	 .word .LC52
 2599              	 .section .data.cmsx_PidProfileTable,"aw",%progbits
 2600              	 .align 2
 2603              	cmsx_PidProfileTable:
 2604 0000 00000000 	 .word cmsx_dstPidProfile
 2605 0004 03       	 .byte 3
 2606 0005 00000000 	 .4byte cmsx_ProfileNames
 2607 0009 000000   	 .section .data.cmsx_ControlRateProfileTable,"aw",%progbits
 2608              	 .align 2
 2611              	cmsx_ControlRateProfileTable:
 2612 0000 00000000 	 .word cmsx_dstControlRateProfile
 2613 0004 03       	 .byte 3
 2614 0005 00000000 	 .4byte cmsx_ProfileNames
 2615 0009 000000   	 .section .text.cmsx_menuCopyProfile_onEnter,"ax",%progbits
 2616              	 .align 2
 2617              	 .thumb
 2618              	 .thumb_func
 2620              	cmsx_menuCopyProfile_onEnter:
 2621              	.LFB565:
 415:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 416:../cleanflight/src/main/cms/cms_menu_imu.c **** static OSD_Entry cmsx_menuFilterPerProfileEntries[] =
 417:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 418:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "-- FILTER PP  --", OME_Label, NULL, NULL, 0 },
 419:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 420:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "DTERM LPF",  OME_UINT16, NULL, &(OSD_UINT16_t){ &cmsx_dterm_lowpass_hz,     0, 500, 1 }, 0 }
 421:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "DTERM LPF2", OME_UINT16, NULL, &(OSD_UINT16_t){ &cmsx_dterm_lowpass2_hz,    0, 500, 1 }, 0 }
 422:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "DTERM NF",   OME_UINT16, NULL, &(OSD_UINT16_t){ &cmsx_dterm_notch_hz,       0, 500, 1 }, 0 }
 423:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "DTERM NFCO", OME_UINT16, NULL, &(OSD_UINT16_t){ &cmsx_dterm_notch_cutoff,   0, 500, 1 }, 0 }
 424:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "YAW LPF",    OME_UINT16, NULL, &(OSD_UINT16_t){ &cmsx_yaw_lowpass_hz,       0, 500, 1 }, 0 }
 425:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 426:../cleanflight/src/main/cms/cms_menu_imu.c ****     { "BACK", OME_Back, NULL, NULL, 0 },
 427:../cleanflight/src/main/cms/cms_menu_imu.c ****     { NULL, OME_END, NULL, NULL, 0 }
 428:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 429:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 430:../cleanflight/src/main/cms/cms_menu_imu.c **** static CMS_Menu cmsx_menuFilterPerProfile = {
 431:../cleanflight/src/main/cms/cms_menu_imu.c **** #ifdef CMS_MENU_DEBUG
 432:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_text = "XFLTPP",
 433:../cleanflight/src/main/cms/cms_menu_imu.c ****     .GUARD_type = OME_MENU,
 434:../cleanflight/src/main/cms/cms_menu_imu.c **** #endif
 435:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onEnter = cmsx_FilterPerProfileRead,
 436:../cleanflight/src/main/cms/cms_menu_imu.c ****     .onExit = cmsx_FilterPerProfileWriteback,
 437:../cleanflight/src/main/cms/cms_menu_imu.c ****     .entries = cmsx_menuFilterPerProfileEntries,
 438:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 439:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 440:../cleanflight/src/main/cms/cms_menu_imu.c **** #ifdef USE_EXTENDED_CMS_MENUS
 441:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 442:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t cmsx_dstPidProfile;
 443:../cleanflight/src/main/cms/cms_menu_imu.c **** static uint8_t cmsx_dstControlRateProfile;
 444:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 445:../cleanflight/src/main/cms/cms_menu_imu.c **** static const char * const cmsx_ProfileNames[] = {
 446:../cleanflight/src/main/cms/cms_menu_imu.c ****     "-",
 447:../cleanflight/src/main/cms/cms_menu_imu.c ****     "1",
 448:../cleanflight/src/main/cms/cms_menu_imu.c ****     "2",
 449:../cleanflight/src/main/cms/cms_menu_imu.c ****     "3"
 450:../cleanflight/src/main/cms/cms_menu_imu.c **** };
 451:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 452:../cleanflight/src/main/cms/cms_menu_imu.c **** static OSD_TAB_t cmsx_PidProfileTable = { &cmsx_dstPidProfile, 3, cmsx_ProfileNames };
 453:../cleanflight/src/main/cms/cms_menu_imu.c **** static OSD_TAB_t cmsx_ControlRateProfileTable = { &cmsx_dstControlRateProfile, 3, cmsx_ProfileNames
 454:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 455:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_menuCopyProfile_onEnter(void)
 456:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 2622              	 .loc 4 456 0
 2623              	 .cfi_startproc
 2624              	 
 2625              	 
 2626              	 
 2627 0000 80B4     	 push {r7}
 2628              	.LCFI98:
 2629              	 .cfi_def_cfa_offset 4
 2630              	 .cfi_offset 7,-4
 2631 0002 00AF     	 add r7,sp,#0
 2632              	.LCFI99:
 2633              	 .cfi_def_cfa_register 7
 457:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_dstPidProfile = 0;
 2634              	 .loc 4 457 0
 2635 0004 054B     	 ldr r3,.L95
 2636 0006 0022     	 movs r2,#0
 2637 0008 1A70     	 strb r2,[r3]
 458:../cleanflight/src/main/cms/cms_menu_imu.c ****     cmsx_dstControlRateProfile = 0;
 2638              	 .loc 4 458 0
 2639 000a 054B     	 ldr r3,.L95+4
 2640 000c 0022     	 movs r2,#0
 2641 000e 1A70     	 strb r2,[r3]
 459:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 460:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 2642              	 .loc 4 460 0
 2643 0010 0023     	 movs r3,#0
 461:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 2644              	 .loc 4 461 0
 2645 0012 1846     	 mov r0,r3
 2646 0014 BD46     	 mov sp,r7
 2647              	.LCFI100:
 2648              	 .cfi_def_cfa_register 13
 2649              	 
 2650 0016 5DF8047B 	 ldr r7,[sp],#4
 2651              	.LCFI101:
 2652              	 .cfi_restore 7
 2653              	 .cfi_def_cfa_offset 0
 2654 001a 7047     	 bx lr
 2655              	.L96:
 2656              	 .align 2
 2657              	.L95:
 2658 001c 00000000 	 .word cmsx_dstPidProfile
 2659 0020 00000000 	 .word cmsx_dstControlRateProfile
 2660              	 .cfi_endproc
 2661              	.LFE565:
 2663              	 .section .text.cmsx_CopyPidProfile,"ax",%progbits
 2664              	 .align 2
 2665              	 .thumb
 2666              	 .thumb_func
 2668              	cmsx_CopyPidProfile:
 2669              	.LFB566:
 462:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 463:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_CopyPidProfile(displayPort_t *pDisplay, const void *ptr)
 464:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 2670              	 .loc 4 464 0
 2671              	 .cfi_startproc
 2672              	 
 2673              	 
 2674 0000 90B5     	 push {r4,r7,lr}
 2675              	.LCFI102:
 2676              	 .cfi_def_cfa_offset 12
 2677              	 .cfi_offset 4,-12
 2678              	 .cfi_offset 7,-8
 2679              	 .cfi_offset 14,-4
 2680 0002 83B0     	 sub sp,sp,#12
 2681              	.LCFI103:
 2682              	 .cfi_def_cfa_offset 24
 2683 0004 00AF     	 add r7,sp,#0
 2684              	.LCFI104:
 2685              	 .cfi_def_cfa_register 7
 2686 0006 7860     	 str r0,[r7,#4]
 2687 0008 3960     	 str r1,[r7]
 465:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(pDisplay);
 466:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(ptr);
 467:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 468:../cleanflight/src/main/cms/cms_menu_imu.c ****     if (cmsx_dstPidProfile > 0) {
 2688              	 .loc 4 468 0
 2689 000a 0A4B     	 ldr r3,.L100
 2690 000c 1B78     	 ldrb r3,[r3]
 2691 000e 002B     	 cmp r3,#0
 2692 0010 0AD0     	 beq .L98
 469:../cleanflight/src/main/cms/cms_menu_imu.c ****         pidCopyProfile(cmsx_dstPidProfile - 1, getCurrentPidProfileIndex());
 2693              	 .loc 4 469 0
 2694 0012 084B     	 ldr r3,.L100
 2695 0014 1B78     	 ldrb r3,[r3]
 2696 0016 013B     	 subs r3,r3,#1
 2697 0018 DCB2     	 uxtb r4,r3
 2698 001a FFF7FEFF 	 bl getCurrentPidProfileIndex
 2699 001e 0346     	 mov r3,r0
 2700 0020 2046     	 mov r0,r4
 2701 0022 1946     	 mov r1,r3
 2702 0024 FFF7FEFF 	 bl pidCopyProfile
 2703              	.L98:
 470:../cleanflight/src/main/cms/cms_menu_imu.c ****     }
 471:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 472:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 2704              	 .loc 4 472 0
 2705 0028 0023     	 movs r3,#0
 473:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 2706              	 .loc 4 473 0
 2707 002a 1846     	 mov r0,r3
 2708 002c 0C37     	 adds r7,r7,#12
 2709              	.LCFI105:
 2710              	 .cfi_def_cfa_offset 12
 2711 002e BD46     	 mov sp,r7
 2712              	.LCFI106:
 2713              	 .cfi_def_cfa_register 13
 2714              	 
 2715 0030 90BD     	 pop {r4,r7,pc}
 2716              	.L101:
 2717 0032 00BF     	 .align 2
 2718              	.L100:
 2719 0034 00000000 	 .word cmsx_dstPidProfile
 2720              	 .cfi_endproc
 2721              	.LFE566:
 2723              	 .section .text.cmsx_CopyControlRateProfile,"ax",%progbits
 2724              	 .align 2
 2725              	 .thumb
 2726              	 .thumb_func
 2728              	cmsx_CopyControlRateProfile:
 2729              	.LFB567:
 474:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 475:../cleanflight/src/main/cms/cms_menu_imu.c **** static long cmsx_CopyControlRateProfile(displayPort_t *pDisplay, const void *ptr)
 476:../cleanflight/src/main/cms/cms_menu_imu.c **** {
 2730              	 .loc 4 476 0
 2731              	 .cfi_startproc
 2732              	 
 2733              	 
 2734 0000 90B5     	 push {r4,r7,lr}
 2735              	.LCFI107:
 2736              	 .cfi_def_cfa_offset 12
 2737              	 .cfi_offset 4,-12
 2738              	 .cfi_offset 7,-8
 2739              	 .cfi_offset 14,-4
 2740 0002 83B0     	 sub sp,sp,#12
 2741              	.LCFI108:
 2742              	 .cfi_def_cfa_offset 24
 2743 0004 00AF     	 add r7,sp,#0
 2744              	.LCFI109:
 2745              	 .cfi_def_cfa_register 7
 2746 0006 7860     	 str r0,[r7,#4]
 2747 0008 3960     	 str r1,[r7]
 477:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(pDisplay);
 478:../cleanflight/src/main/cms/cms_menu_imu.c ****     UNUSED(ptr);
 479:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 480:../cleanflight/src/main/cms/cms_menu_imu.c ****     if (cmsx_dstControlRateProfile > 0) {
 2748              	 .loc 4 480 0
 2749 000a 0A4B     	 ldr r3,.L105
 2750 000c 1B78     	 ldrb r3,[r3]
 2751 000e 002B     	 cmp r3,#0
 2752 0010 0AD0     	 beq .L103
 481:../cleanflight/src/main/cms/cms_menu_imu.c ****         copyControlRateProfile(cmsx_dstControlRateProfile - 1, getCurrentControlRateProfileIndex())
 2753              	 .loc 4 481 0
 2754 0012 084B     	 ldr r3,.L105
 2755 0014 1B78     	 ldrb r3,[r3]
 2756 0016 013B     	 subs r3,r3,#1
 2757 0018 DCB2     	 uxtb r4,r3
 2758 001a FFF7FEFF 	 bl getCurrentControlRateProfileIndex
 2759 001e 0346     	 mov r3,r0
 2760 0020 2046     	 mov r0,r4
 2761 0022 1946     	 mov r1,r3
 2762 0024 FFF7FEFF 	 bl copyControlRateProfile
 2763              	.L103:
 482:../cleanflight/src/main/cms/cms_menu_imu.c ****     }
 483:../cleanflight/src/main/cms/cms_menu_imu.c **** 
 484:../cleanflight/src/main/cms/cms_menu_imu.c ****     return 0;
 2764              	 .loc 4 484 0
 2765 0028 0023     	 movs r3,#0
 485:../cleanflight/src/main/cms/cms_menu_imu.c **** }
 2766              	 .loc 4 485 0
 2767 002a 1846     	 mov r0,r3
 2768 002c 0C37     	 adds r7,r7,#12
 2769              	.LCFI110:
 2770              	 .cfi_def_cfa_offset 12
 2771 002e BD46     	 mov sp,r7
 2772              	.LCFI111:
 2773              	 .cfi_def_cfa_register 13
 2774              	 
 2775 0030 90BD     	 pop {r4,r7,pc}
 2776              	.L106:
 2777 0032 00BF     	 .align 2
 2778              	.L105:
 2779 0034 00000000 	 .word cmsx_dstControlRateProfile
 2780              	 .cfi_endproc
 2781              	.LFE567:
 2783              	 .section .rodata
 2784 022a 0000     	 .align 2
 2785              	.LC53:
 2786 022c 2D2D2043 	 .ascii "-- COPY PROFILE --\000"
 2786      4F505920 
 2786      50524F46 
 2786      494C4520 
 2786      2D2D00
 2787 023f 00       	 .align 2
 2788              	.LC54:
 2789 0240 43505920 	 .ascii "CPY PID PROF TO\000"
 2789      50494420 
 2789      50524F46 
 2789      20544F00 
 2790              	 .align 2
 2791              	.LC55:
 2792 0250 434F5059 	 .ascii "COPY PP\000"
 2792      20505000 
 2793              	 .align 2
 2794              	.LC56:
 2795 0258 43505920 	 .ascii "CPY RATE PROF TO\000"
 2795      52415445 
 2795      2050524F 
 2795      4620544F 
 2795      00
 2796 0269 000000   	 .align 2
 2797              	.LC57:
 2798 026c 434F5059 	 .ascii "COPY RP\000"
 2798      20525000 
 2799              	 .section .data.cmsx_menuCopyProfileEntries,"aw",%progbits
 2800              	 .align 2
 2803              	cmsx_menuCopyProfileEntries:
 2804 0000 2C020000 	 .word .LC53
 2805 0004 00       	 .byte 0
 2806 0005 00000000 	 .4byte 0
 2807 0009 00000000 	 .4byte 0
 2808 000d 00       	 .byte 0
 2809 000e 40020000 	 .4byte .LC54
 2810 0012 0D       	 .byte 13
 2811 0013 00000000 	 .4byte 0
 2812 0017 00000000 	 .4byte cmsx_PidProfileTable
 2813 001b 00       	 .byte 0
 2814 001c 50020000 	 .word .LC55
 2815 0020 04       	 .byte 4
 2816 0021 00000000 	 .4byte cmsx_CopyPidProfile
 2817 0025 00000000 	 .4byte 0
 2818 0029 00       	 .byte 0
 2819 002a 58020000 	 .4byte .LC56
 2820 002e 0D       	 .byte 13
 2821 002f 00000000 	 .4byte 0
 2822 0033 00000000 	 .4byte cmsx_ControlRateProfileTable
 2823 0037 00       	 .byte 0
 2824 0038 6C020000 	 .word .LC57
 2825 003c 04       	 .byte 4
 2826 003d 00000000 	 .4byte cmsx_CopyControlRateProfile
 2827 0041 00000000 	 .4byte 0
 2828 0045 00       	 .byte 0
 2829 0046 6C000000 	 .4byte .LC13
 2830 004a 01       	 .byte 1
 2831 004b 00000000 	 .4byte 0
 2832 004f 00000000 	 .4byte 0
 2833 0053 00       	 .byte 0
 2834 0054 00000000 	 .word 0
 2835 0058 0E       	 .byte 14
 2836 0059 00000000 	 .4byte 0
 2837 005d 00000000 	 .4byte 0
 2838 0061 00       	 .byte 0
 2839              	 .global cmsx_menuCopyProfile
 2840 0062 0000     	 .section .data.cmsx_menuCopyProfile,"aw",%progbits
 2841              	 .align 2
 2844              	cmsx_menuCopyProfile:
 2845 0000 00000000 	 .word cmsx_menuCopyProfile_onEnter
 2846 0004 00000000 	 .word 0
 2847 0008 00000000 	 .word cmsx_menuCopyProfileEntries
 2848              	 .section .data.__compound_literal.43,"aw",%progbits
 2849              	 .align 2
 2852              	__compound_literal.43:
 2853 0000 00000000 	 .word tmpPidProfileIndex
 2854 0004 01       	 .byte 1
 2855 0005 03       	 .byte 3
 2856 0006 01       	 .byte 1
 2857 0007 00       	 .section .data.__compound_literal.44,"aw",%progbits
 2858              	 .align 2
 2861              	__compound_literal.44:
 2862 0000 00000000 	 .word tmpRateProfileIndex
 2863 0004 01       	 .byte 1
 2864 0005 06       	 .byte 6
 2865 0006 01       	 .byte 1
 2866 0007 00       	 .section .rodata
 2867              	 .align 2
 2868              	.LC58:
 2869 0274 2D2D2050 	 .ascii "-- PROFILE --\000"
 2869      524F4649 
 2869      4C45202D 
 2869      2D00
 2870 0282 0000     	 .align 2
 2871              	.LC59:
 2872 0284 50494420 	 .ascii "PID PROF\000"
 2872      50524F46 
 2872      00
 2873 028d 000000   	 .align 2
 2874              	.LC60:
 2875 0290 50494400 	 .ascii "PID\000"
 2876              	 .align 2
 2877              	.LC61:
 2878 0294 4D495343 	 .ascii "MISC PP\000"
 2878      20505000 
 2879              	 .align 2
 2880              	.LC62:
 2881 029c 46494C54 	 .ascii "FILT PP\000"
 2881      20505000 
 2882              	 .align 2
 2883              	.LC63:
 2884 02a4 52415445 	 .ascii "RATE PROF\000"
 2884      2050524F 
 2884      4600
 2885 02ae 0000     	 .align 2
 2886              	.LC64:
 2887 02b0 52415445 	 .ascii "RATE\000"
 2887      00
 2888 02b5 000000   	 .align 2
 2889              	.LC65:
 2890 02b8 46494C54 	 .ascii "FILT GLB\000"
 2890      20474C42 
 2890      00
 2891 02c1 000000   	 .align 2
 2892              	.LC66:
 2893 02c4 434F5059 	 .ascii "COPY PROF\000"
 2893      2050524F 
 2893      4600
 2894 02ce 0000     	 .section .data.cmsx_menuImuEntries,"aw",%progbits
 2895              	 .align 2
 2898              	cmsx_menuImuEntries:
 2899 0000 74020000 	 .word .LC58
 2900 0004 00       	 .byte 0
 2901 0005 00000000 	 .4byte 0
 2902 0009 00000000 	 .4byte 0
 2903 000d 00       	 .byte 0
 2904 000e 84020000 	 .4byte .LC59
 2905 0012 07       	 .byte 7
 2906 0013 00000000 	 .4byte cmsx_profileIndexOnChange
 2907 0017 00000000 	 .4byte __compound_literal.43
 2908 001b 00       	 .byte 0
 2909 001c 90020000 	 .word .LC60
 2910 0020 03       	 .byte 3
 2911 0021 00000000 	 .4byte cmsMenuChange
 2912 0025 00000000 	 .4byte cmsx_menuPid
 2913 0029 00       	 .byte 0
 2914 002a 94020000 	 .4byte .LC61
 2915 002e 03       	 .byte 3
 2916 002f 00000000 	 .4byte cmsMenuChange
 2917 0033 00000000 	 .4byte cmsx_menuProfileOther
 2918 0037 00       	 .byte 0
 2919 0038 9C020000 	 .word .LC62
 2920 003c 03       	 .byte 3
 2921 003d 00000000 	 .4byte cmsMenuChange
 2922 0041 00000000 	 .4byte cmsx_menuFilterPerProfile
 2923 0045 00       	 .byte 0
 2924 0046 A4020000 	 .4byte .LC63
 2925 004a 07       	 .byte 7
 2926 004b 00000000 	 .4byte cmsx_rateProfileIndexOnChange
 2927 004f 00000000 	 .4byte __compound_literal.44
 2928 0053 00       	 .byte 0
 2929 0054 B0020000 	 .word .LC64
 2930 0058 03       	 .byte 3
 2931 0059 00000000 	 .4byte cmsMenuChange
 2932 005d 00000000 	 .4byte cmsx_menuRateProfile
 2933 0061 00       	 .byte 0
 2934 0062 B8020000 	 .4byte .LC65
 2935 0066 03       	 .byte 3
 2936 0067 00000000 	 .4byte cmsMenuChange
 2937 006b 00000000 	 .4byte cmsx_menuFilterGlobal
 2938 006f 00       	 .byte 0
 2939 0070 C4020000 	 .word .LC66
 2940 0074 03       	 .byte 3
 2941 0075 00000000 	 .4byte cmsMenuChange
 2942 0079 00000000 	 .4byte cmsx_menuCopyProfile
 2943 007d 00       	 .byte 0
 2944 007e 6C000000 	 .4byte .LC13
 2945 0082 01       	 .byte 1
 2946 0083 00000000 	 .4byte 0
 2947 0087 00000000 	 .4byte 0
 2948 008b 00       	 .byte 0
 2949 008c 00000000 	 .word 0
 2950 0090 0E       	 .byte 14
 2951 0091 00000000 	 .4byte 0
 2952 0095 00000000 	 .4byte 0
 2953 0099 00       	 .byte 0
 2954              	 .global cmsx_menuImu
 2955 009a 0000     	 .section .data.cmsx_menuImu,"aw",%progbits
 2956              	 .align 2
 2959              	cmsx_menuImu:
 2960 0000 00000000 	 .word cmsx_menuImu_onEnter
 2961 0004 00000000 	 .word cmsx_menuImu_onExit
 2962 0008 00000000 	 .word cmsx_menuImuEntries
 2963              	 .text
 2964              	.Letext0:
 2965              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2966              	 .file 6 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2967              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 2968              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/display.h"
 2969              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 2970              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms_types.h"
 2971              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 2972              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 2973              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_controls.h"
 2974              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/axis.h"
 2975              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 2976              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
 2977              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cms_menu_imu.c
                            *COM*:00000004 pCurrentDisplay
    {standard input}:21     .text.controlRateProfiles:00000000 $t
    {standard input}:25     .text.controlRateProfiles:00000000 controlRateProfiles
    {standard input}:67     .text.controlRateProfiles:00000020 $d
    {standard input}:72     .text.controlRateProfilesMutable:00000000 $t
    {standard input}:76     .text.controlRateProfilesMutable:00000000 controlRateProfilesMutable
    {standard input}:117    .text.controlRateProfilesMutable:00000020 $d
    {standard input}:122    .text.pidProfiles:00000000 $t
    {standard input}:126    .text.pidProfiles:00000000 pidProfiles
    {standard input}:167    .text.pidProfiles:00000020 $d
    {standard input}:172    .text.pidProfilesMutable:00000000 $t
    {standard input}:176    .text.pidProfilesMutable:00000000 pidProfilesMutable
    {standard input}:216    .text.pidProfilesMutable:00000020 $d
    {standard input}:221    .text.gyroConfig:00000000 $t
    {standard input}:225    .text.gyroConfig:00000000 gyroConfig
    {standard input}:255    .text.gyroConfig:00000010 $d
    {standard input}:260    .text.gyroConfigMutable:00000000 $t
    {standard input}:264    .text.gyroConfigMutable:00000000 gyroConfigMutable
    {standard input}:293    .text.gyroConfigMutable:00000010 $d
    {standard input}:300    .bss.tmpPidProfileIndex:00000000 tmpPidProfileIndex
    {standard input}:301    .bss.tmpPidProfileIndex:00000000 $d
    {standard input}:305    .bss.pidProfileIndex:00000000 pidProfileIndex
    {standard input}:306    .bss.pidProfileIndex:00000000 $d
    {standard input}:308    .data.pidProfileIndexString:00000000 $d
    {standard input}:311    .data.pidProfileIndexString:00000000 pidProfileIndexString
    {standard input}:314    .bss.tempPid:00000000 $d
    {standard input}:317    .bss.tempPid:00000000 tempPid
    {standard input}:320    .bss.tempPidF:00000000 $d
    {standard input}:323    .bss.tempPidF:00000000 tempPidF
    {standard input}:328    .bss.tmpRateProfileIndex:00000000 tmpRateProfileIndex
    {standard input}:329    .bss.tmpRateProfileIndex:00000000 $d
    {standard input}:333    .bss.rateProfileIndex:00000000 rateProfileIndex
    {standard input}:334    .bss.rateProfileIndex:00000000 $d
    {standard input}:336    .data.rateProfileIndexString:00000000 $d
    {standard input}:339    .data.rateProfileIndexString:00000000 rateProfileIndexString
    {standard input}:342    .bss.rateProfile:00000000 $d
    {standard input}:345    .bss.rateProfile:00000000 rateProfile
    {standard input}:348    .text.cmsx_menuImu_onEnter:00000000 $t
    {standard input}:352    .text.cmsx_menuImu_onEnter:00000000 cmsx_menuImu_onEnter
    {standard input}:401    .text.cmsx_menuImu_onEnter:0000003c $d
    {standard input}:409    .text.cmsx_menuImu_onExit:00000000 $t
    {standard input}:413    .text.cmsx_menuImu_onExit:00000000 cmsx_menuImu_onExit
    {standard input}:456    .text.cmsx_menuImu_onExit:00000028 $d
    {standard input}:462    .text.cmsx_profileIndexOnChange:00000000 $t
    {standard input}:466    .text.cmsx_profileIndexOnChange:00000000 cmsx_profileIndexOnChange
    {standard input}:512    .text.cmsx_profileIndexOnChange:0000002c $d
    {standard input}:518    .text.cmsx_rateProfileIndexOnChange:00000000 $t
    {standard input}:522    .text.cmsx_rateProfileIndexOnChange:00000000 cmsx_rateProfileIndexOnChange
    {standard input}:568    .text.cmsx_rateProfileIndexOnChange:0000002c $d
    {standard input}:574    .text.cmsx_PidRead:00000000 $t
    {standard input}:578    .text.cmsx_PidRead:00000000 cmsx_PidRead
    {standard input}:698    .text.cmsx_PidRead:000000b0 $d
    {standard input}:705    .text.cmsx_PidOnEnter:00000000 $t
    {standard input}:709    .text.cmsx_PidOnEnter:00000000 cmsx_PidOnEnter
    {standard input}:740    .text.cmsx_PidOnEnter:0000001c $d
    {standard input}:746    .text.cmsx_PidWriteback:00000000 $t
    {standard input}:750    .text.cmsx_PidWriteback:00000000 cmsx_PidWriteback
    {standard input}:874    .text.cmsx_PidWriteback:000000b4 $d
    {standard input}:881    .data.__compound_literal.0:00000000 $d
    {standard input}:884    .data.__compound_literal.0:00000000 __compound_literal.0
    {standard input}:890    .data.__compound_literal.1:00000000 $d
    {standard input}:893    .data.__compound_literal.1:00000000 __compound_literal.1
    {standard input}:899    .data.__compound_literal.2:00000000 $d
    {standard input}:902    .data.__compound_literal.2:00000000 __compound_literal.2
    {standard input}:908    .data.__compound_literal.3:00000000 $d
    {standard input}:911    .data.__compound_literal.3:00000000 __compound_literal.3
    {standard input}:917    .data.__compound_literal.4:00000000 $d
    {standard input}:920    .data.__compound_literal.4:00000000 __compound_literal.4
    {standard input}:926    .data.__compound_literal.5:00000000 $d
    {standard input}:929    .data.__compound_literal.5:00000000 __compound_literal.5
    {standard input}:935    .data.__compound_literal.6:00000000 $d
    {standard input}:938    .data.__compound_literal.6:00000000 __compound_literal.6
    {standard input}:944    .data.__compound_literal.7:00000000 $d
    {standard input}:947    .data.__compound_literal.7:00000000 __compound_literal.7
    {standard input}:953    .data.__compound_literal.8:00000000 $d
    {standard input}:956    .data.__compound_literal.8:00000000 __compound_literal.8
    {standard input}:962    .data.__compound_literal.9:00000000 $d
    {standard input}:965    .data.__compound_literal.9:00000000 __compound_literal.9
    {standard input}:971    .data.__compound_literal.10:00000000 $d
    {standard input}:974    .data.__compound_literal.10:00000000 __compound_literal.10
    {standard input}:980    .data.__compound_literal.11:00000000 $d
    {standard input}:983    .data.__compound_literal.11:00000000 __compound_literal.11
    {standard input}:989    .rodata:00000000 $d
    {standard input}:1032   .data.cmsx_menuPidEntries:00000000 $d
    {standard input}:1035   .data.cmsx_menuPidEntries:00000000 cmsx_menuPidEntries
    {standard input}:1112   .data.cmsx_menuPid:00000000 $d
    {standard input}:1115   .data.cmsx_menuPid:00000000 cmsx_menuPid
    {standard input}:1120   .text.cmsx_RateProfileRead:00000000 $t
    {standard input}:1124   .text.cmsx_RateProfileRead:00000000 cmsx_RateProfileRead
    {standard input}:1164   .text.cmsx_RateProfileRead:0000002c $d
    {standard input}:1170   .text.cmsx_RateProfileWriteback:00000000 $t
    {standard input}:1174   .text.cmsx_RateProfileWriteback:00000000 cmsx_RateProfileWriteback
    {standard input}:1225   .text.cmsx_RateProfileWriteback:00000034 $d
    {standard input}:1231   .text.cmsx_RateProfileOnEnter:00000000 $t
    {standard input}:1235   .text.cmsx_RateProfileOnEnter:00000000 cmsx_RateProfileOnEnter
    {standard input}:1273   .text.cmsx_RateProfileOnEnter:00000028 $d
    {standard input}:1280   .data.__compound_literal.12:00000000 $d
    {standard input}:1283   .data.__compound_literal.12:00000000 __compound_literal.12
    {standard input}:1290   .data.__compound_literal.13:00000000 $d
    {standard input}:1293   .data.__compound_literal.13:00000000 __compound_literal.13
    {standard input}:1300   .data.__compound_literal.14:00000000 $d
    {standard input}:1303   .data.__compound_literal.14:00000000 __compound_literal.14
    {standard input}:1310   .data.__compound_literal.15:00000000 $d
    {standard input}:1313   .data.__compound_literal.15:00000000 __compound_literal.15
    {standard input}:1320   .data.__compound_literal.16:00000000 $d
    {standard input}:1323   .data.__compound_literal.16:00000000 __compound_literal.16
    {standard input}:1330   .data.__compound_literal.17:00000000 $d
    {standard input}:1333   .data.__compound_literal.17:00000000 __compound_literal.17
    {standard input}:1340   .data.__compound_literal.18:00000000 $d
    {standard input}:1343   .data.__compound_literal.18:00000000 __compound_literal.18
    {standard input}:1350   .data.__compound_literal.19:00000000 $d
    {standard input}:1353   .data.__compound_literal.19:00000000 __compound_literal.19
    {standard input}:1360   .data.__compound_literal.20:00000000 $d
    {standard input}:1363   .data.__compound_literal.20:00000000 __compound_literal.20
    {standard input}:1370   .data.__compound_literal.21:00000000 $d
    {standard input}:1373   .data.__compound_literal.21:00000000 __compound_literal.21
    {standard input}:1379   .data.__compound_literal.22:00000000 $d
    {standard input}:1382   .data.__compound_literal.22:00000000 __compound_literal.22
    {standard input}:1388   .data.__compound_literal.23:00000000 $d
    {standard input}:1391   .data.__compound_literal.23:00000000 __compound_literal.23
    {standard input}:1398   .data.__compound_literal.24:00000000 $d
    {standard input}:1401   .data.__compound_literal.24:00000000 __compound_literal.24
    {standard input}:1450   .data.cmsx_menuRateProfileEntries:00000000 $d
    {standard input}:1453   .data.cmsx_menuRateProfileEntries:00000000 cmsx_menuRateProfileEntries
    {standard input}:1535   .data.cmsx_menuRateProfile:00000000 $d
    {standard input}:1538   .data.cmsx_menuRateProfile:00000000 cmsx_menuRateProfile
    {standard input}:1545   .bss.cmsx_feedForwardTransition:00000000 cmsx_feedForwardTransition
    {standard input}:1546   .bss.cmsx_feedForwardTransition:00000000 $d
    {standard input}:1550   .bss.cmsx_angleStrength:00000000 cmsx_angleStrength
    {standard input}:1551   .bss.cmsx_angleStrength:00000000 $d
    {standard input}:1555   .bss.cmsx_horizonStrength:00000000 cmsx_horizonStrength
    {standard input}:1556   .bss.cmsx_horizonStrength:00000000 $d
    {standard input}:1560   .bss.cmsx_horizonTransition:00000000 cmsx_horizonTransition
    {standard input}:1561   .bss.cmsx_horizonTransition:00000000 $d
    {standard input}:1565   .bss.cmsx_throttleBoost:00000000 cmsx_throttleBoost
    {standard input}:1566   .bss.cmsx_throttleBoost:00000000 $d
    {standard input}:1568   .bss.cmsx_itermAcceleratorGain:00000000 $d
    {standard input}:1571   .bss.cmsx_itermAcceleratorGain:00000000 cmsx_itermAcceleratorGain
    {standard input}:1574   .bss.cmsx_itermThrottleThreshold:00000000 $d
    {standard input}:1577   .bss.cmsx_itermThrottleThreshold:00000000 cmsx_itermThrottleThreshold
    {standard input}:1580   .text.cmsx_profileOtherOnEnter:00000000 $t
    {standard input}:1584   .text.cmsx_profileOtherOnEnter:00000000 cmsx_profileOtherOnEnter
    {standard input}:1666   .text.cmsx_profileOtherOnEnter:00000068 $d
    {standard input}:1680   .text.cmsx_profileOtherOnExit:00000000 $t
    {standard input}:1684   .text.cmsx_profileOtherOnExit:00000000 cmsx_profileOtherOnExit
    {standard input}:1763   .text.cmsx_profileOtherOnExit:00000064 $d
    {standard input}:1776   .data.__compound_literal.25:00000000 $d
    {standard input}:1779   .data.__compound_literal.25:00000000 __compound_literal.25
    {standard input}:1786   .data.__compound_literal.26:00000000 $d
    {standard input}:1789   .data.__compound_literal.26:00000000 __compound_literal.26
    {standard input}:1795   .data.__compound_literal.27:00000000 $d
    {standard input}:1798   .data.__compound_literal.27:00000000 __compound_literal.27
    {standard input}:1804   .data.__compound_literal.28:00000000 $d
    {standard input}:1807   .data.__compound_literal.28:00000000 __compound_literal.28
    {standard input}:1813   .data.__compound_literal.29:00000000 $d
    {standard input}:1816   .data.__compound_literal.29:00000000 __compound_literal.29
    {standard input}:1822   .data.__compound_literal.30:00000000 $d
    {standard input}:1825   .data.__compound_literal.30:00000000 __compound_literal.30
    {standard input}:1831   .data.__compound_literal.31:00000000 $d
    {standard input}:1834   .data.__compound_literal.31:00000000 __compound_literal.31
    {standard input}:1865   .data.cmsx_menuProfileOtherEntries:00000000 $d
    {standard input}:1868   .data.cmsx_menuProfileOtherEntries:00000000 cmsx_menuProfileOtherEntries
    {standard input}:1920   .data.cmsx_menuProfileOther:00000000 $d
    {standard input}:1923   .data.cmsx_menuProfileOther:00000000 cmsx_menuProfileOther
    {standard input}:1928   .bss.gyroConfig_gyro_lowpass_hz:00000000 $d
    {standard input}:1931   .bss.gyroConfig_gyro_lowpass_hz:00000000 gyroConfig_gyro_lowpass_hz
    {standard input}:1934   .bss.gyroConfig_gyro_lowpass2_hz:00000000 $d
    {standard input}:1937   .bss.gyroConfig_gyro_lowpass2_hz:00000000 gyroConfig_gyro_lowpass2_hz
    {standard input}:1940   .bss.gyroConfig_gyro_soft_notch_hz_1:00000000 $d
    {standard input}:1943   .bss.gyroConfig_gyro_soft_notch_hz_1:00000000 gyroConfig_gyro_soft_notch_hz_1
    {standard input}:1946   .bss.gyroConfig_gyro_soft_notch_cutoff_1:00000000 $d
    {standard input}:1949   .bss.gyroConfig_gyro_soft_notch_cutoff_1:00000000 gyroConfig_gyro_soft_notch_cutoff_1
    {standard input}:1952   .bss.gyroConfig_gyro_soft_notch_hz_2:00000000 $d
    {standard input}:1955   .bss.gyroConfig_gyro_soft_notch_hz_2:00000000 gyroConfig_gyro_soft_notch_hz_2
    {standard input}:1958   .bss.gyroConfig_gyro_soft_notch_cutoff_2:00000000 $d
    {standard input}:1961   .bss.gyroConfig_gyro_soft_notch_cutoff_2:00000000 gyroConfig_gyro_soft_notch_cutoff_2
    {standard input}:1964   .text.cmsx_menuGyro_onEnter:00000000 $t
    {standard input}:1968   .text.cmsx_menuGyro_onEnter:00000000 cmsx_menuGyro_onEnter
    {standard input}:2032   .text.cmsx_menuGyro_onEnter:00000060 $d
    {standard input}:2042   .text.cmsx_menuGyro_onExit:00000000 $t
    {standard input}:2046   .text.cmsx_menuGyro_onExit:00000000 cmsx_menuGyro_onExit
    {standard input}:2115   .text.cmsx_menuGyro_onExit:0000005c $d
    {standard input}:2125   .data.__compound_literal.32:00000000 $d
    {standard input}:2128   .data.__compound_literal.32:00000000 __compound_literal.32
    {standard input}:2134   .data.__compound_literal.33:00000000 $d
    {standard input}:2137   .data.__compound_literal.33:00000000 __compound_literal.33
    {standard input}:2143   .data.__compound_literal.34:00000000 $d
    {standard input}:2146   .data.__compound_literal.34:00000000 __compound_literal.34
    {standard input}:2152   .data.__compound_literal.35:00000000 $d
    {standard input}:2155   .data.__compound_literal.35:00000000 __compound_literal.35
    {standard input}:2161   .data.__compound_literal.36:00000000 $d
    {standard input}:2164   .data.__compound_literal.36:00000000 __compound_literal.36
    {standard input}:2170   .data.__compound_literal.37:00000000 $d
    {standard input}:2173   .data.__compound_literal.37:00000000 __compound_literal.37
    {standard input}:2201   .data.cmsx_menuFilterGlobalEntries:00000000 $d
    {standard input}:2204   .data.cmsx_menuFilterGlobalEntries:00000000 cmsx_menuFilterGlobalEntries
    {standard input}:2251   .data.cmsx_menuFilterGlobal:00000000 $d
    {standard input}:2254   .data.cmsx_menuFilterGlobal:00000000 cmsx_menuFilterGlobal
    {standard input}:2259   .bss.cmsx_dterm_lowpass_hz:00000000 $d
    {standard input}:2262   .bss.cmsx_dterm_lowpass_hz:00000000 cmsx_dterm_lowpass_hz
    {standard input}:2265   .bss.cmsx_dterm_lowpass2_hz:00000000 $d
    {standard input}:2268   .bss.cmsx_dterm_lowpass2_hz:00000000 cmsx_dterm_lowpass2_hz
    {standard input}:2271   .bss.cmsx_dterm_notch_hz:00000000 $d
    {standard input}:2274   .bss.cmsx_dterm_notch_hz:00000000 cmsx_dterm_notch_hz
    {standard input}:2277   .bss.cmsx_dterm_notch_cutoff:00000000 $d
    {standard input}:2280   .bss.cmsx_dterm_notch_cutoff:00000000 cmsx_dterm_notch_cutoff
    {standard input}:2283   .bss.cmsx_yaw_lowpass_hz:00000000 $d
    {standard input}:2286   .bss.cmsx_yaw_lowpass_hz:00000000 cmsx_yaw_lowpass_hz
    {standard input}:2289   .text.cmsx_FilterPerProfileRead:00000000 $t
    {standard input}:2293   .text.cmsx_FilterPerProfileRead:00000000 cmsx_FilterPerProfileRead
    {standard input}:2361   .text.cmsx_FilterPerProfileRead:00000050 $d
    {standard input}:2371   .text.cmsx_FilterPerProfileWriteback:00000000 $t
    {standard input}:2375   .text.cmsx_FilterPerProfileWriteback:00000000 cmsx_FilterPerProfileWriteback
    {standard input}:2441   .text.cmsx_FilterPerProfileWriteback:00000048 $d
    {standard input}:2451   .data.__compound_literal.38:00000000 $d
    {standard input}:2454   .data.__compound_literal.38:00000000 __compound_literal.38
    {standard input}:2460   .data.__compound_literal.39:00000000 $d
    {standard input}:2463   .data.__compound_literal.39:00000000 __compound_literal.39
    {standard input}:2469   .data.__compound_literal.40:00000000 $d
    {standard input}:2472   .data.__compound_literal.40:00000000 __compound_literal.40
    {standard input}:2478   .data.__compound_literal.41:00000000 $d
    {standard input}:2481   .data.__compound_literal.41:00000000 __compound_literal.41
    {standard input}:2487   .data.__compound_literal.42:00000000 $d
    {standard input}:2490   .data.__compound_literal.42:00000000 __compound_literal.42
    {standard input}:2515   .data.cmsx_menuFilterPerProfileEntries:00000000 $d
    {standard input}:2518   .data.cmsx_menuFilterPerProfileEntries:00000000 cmsx_menuFilterPerProfileEntries
    {standard input}:2560   .data.cmsx_menuFilterPerProfile:00000000 $d
    {standard input}:2563   .data.cmsx_menuFilterPerProfile:00000000 cmsx_menuFilterPerProfile
    {standard input}:2570   .bss.cmsx_dstPidProfile:00000000 cmsx_dstPidProfile
    {standard input}:2571   .bss.cmsx_dstPidProfile:00000000 $d
    {standard input}:2575   .bss.cmsx_dstControlRateProfile:00000000 cmsx_dstControlRateProfile
    {standard input}:2576   .bss.cmsx_dstControlRateProfile:00000000 $d
    {standard input}:2591   .rodata.cmsx_ProfileNames:00000000 $d
    {standard input}:2594   .rodata.cmsx_ProfileNames:00000000 cmsx_ProfileNames
    {standard input}:2600   .data.cmsx_PidProfileTable:00000000 $d
    {standard input}:2603   .data.cmsx_PidProfileTable:00000000 cmsx_PidProfileTable
    {standard input}:2608   .data.cmsx_ControlRateProfileTable:00000000 $d
    {standard input}:2611   .data.cmsx_ControlRateProfileTable:00000000 cmsx_ControlRateProfileTable
    {standard input}:2616   .text.cmsx_menuCopyProfile_onEnter:00000000 $t
    {standard input}:2620   .text.cmsx_menuCopyProfile_onEnter:00000000 cmsx_menuCopyProfile_onEnter
    {standard input}:2658   .text.cmsx_menuCopyProfile_onEnter:0000001c $d
    {standard input}:2664   .text.cmsx_CopyPidProfile:00000000 $t
    {standard input}:2668   .text.cmsx_CopyPidProfile:00000000 cmsx_CopyPidProfile
    {standard input}:2719   .text.cmsx_CopyPidProfile:00000034 $d
    {standard input}:2724   .text.cmsx_CopyControlRateProfile:00000000 $t
    {standard input}:2728   .text.cmsx_CopyControlRateProfile:00000000 cmsx_CopyControlRateProfile
    {standard input}:2779   .text.cmsx_CopyControlRateProfile:00000034 $d
    {standard input}:2800   .data.cmsx_menuCopyProfileEntries:00000000 $d
    {standard input}:2803   .data.cmsx_menuCopyProfileEntries:00000000 cmsx_menuCopyProfileEntries
    {standard input}:2844   .data.cmsx_menuCopyProfile:00000000 cmsx_menuCopyProfile
    {standard input}:2841   .data.cmsx_menuCopyProfile:00000000 $d
    {standard input}:2849   .data.__compound_literal.43:00000000 $d
    {standard input}:2852   .data.__compound_literal.43:00000000 __compound_literal.43
    {standard input}:2858   .data.__compound_literal.44:00000000 $d
    {standard input}:2861   .data.__compound_literal.44:00000000 __compound_literal.44
    {standard input}:2895   .data.cmsx_menuImuEntries:00000000 $d
    {standard input}:2898   .data.cmsx_menuImuEntries:00000000 cmsx_menuImuEntries
    {standard input}:2959   .data.cmsx_menuImu:00000000 cmsx_menuImu
    {standard input}:2956   .data.cmsx_menuImu:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
controlRateProfiles_SystemArray
pidProfiles_SystemArray
gyroConfig_System
getCurrentPidProfileIndex
getCurrentControlRateProfileIndex
changePidProfile
changeControlRateProfile
pidInitConfig
currentPidProfile
pidCopyProfile
copyControlRateProfile
cmsMenuChange
