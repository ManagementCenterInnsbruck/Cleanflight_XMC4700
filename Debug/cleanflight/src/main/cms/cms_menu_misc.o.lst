   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "cms_menu_misc.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm pCurrentDisplay,4,4
  20              	 .section .text.systemConfig,"ax",%progbits
  21              	 .align 2
  22              	 .thumb
  23              	 .thumb_func
  25              	systemConfig:
  26              	.LFB533:
  27              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #define MAX_NAME_LENGTH 16u
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct pilotConfig_s {
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char name[MAX_NAME_LENGTH + 1];
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } pilotConfig_t;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(pilotConfig_t, pilotConfig);
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct systemConfig_s {
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t pidProfileIndex;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t activeRateProfile;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t debug_mode;
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t task_statistics;
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t rateProfile6PosSwitch;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t cpu_overclock;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t powerOnArmingGraceTime; // in seconds
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char boardIdentifier[sizeof(TARGET_BOARD_IDENTIFIER) + 1];
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } systemConfig_t;
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(systemConfig_t, systemConfig);
  28              	 .loc 1 47 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 00AF     	 add r7,sp,#0
  38              	.LCFI1:
  39              	 .cfi_def_cfa_register 7
  40              	 .loc 1 47 0
  41 0004 024B     	 ldr r3,.L3
  42 0006 1846     	 mov r0,r3
  43 0008 BD46     	 mov sp,r7
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 13
  46              	 
  47 000a 5DF8047B 	 ldr r7,[sp],#4
  48              	.LCFI3:
  49              	 .cfi_restore 7
  50              	 .cfi_def_cfa_offset 0
  51 000e 7047     	 bx lr
  52              	.L4:
  53              	 .align 2
  54              	.L3:
  55 0010 00000000 	 .word systemConfig_System
  56              	 .cfi_endproc
  57              	.LFE533:
  59              	 .section .text.systemConfigMutable,"ax",%progbits
  60              	 .align 2
  61              	 .thumb
  62              	 .thumb_func
  64              	systemConfigMutable:
  65              	.LFB534:
  66              	 .loc 1 47 0
  67              	 .cfi_startproc
  68              	 
  69              	 
  70              	 
  71 0000 80B4     	 push {r7}
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 4
  74              	 .cfi_offset 7,-4
  75 0002 00AF     	 add r7,sp,#0
  76              	.LCFI5:
  77              	 .cfi_def_cfa_register 7
  78              	 .loc 1 47 0
  79 0004 024B     	 ldr r3,.L7
  80 0006 1846     	 mov r0,r3
  81 0008 BD46     	 mov sp,r7
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 13
  84              	 
  85 000a 5DF8047B 	 ldr r7,[sp],#4
  86              	.LCFI7:
  87              	 .cfi_restore 7
  88              	 .cfi_def_cfa_offset 0
  89 000e 7047     	 bx lr
  90              	.L8:
  91              	 .align 2
  92              	.L7:
  93 0010 00000000 	 .word systemConfig_System
  94              	 .cfi_endproc
  95              	.LFE534:
  97              	 .section .text.motorConfig,"ax",%progbits
  98              	 .align 2
  99              	 .thumb
 100              	 .thumb_func
 102              	motorConfig:
 103              	.LFB546:
 104              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/mixer.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "platform.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "common/time.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/pwm_output_counts.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/io_types.h"
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/pwm_output.h"
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define QUAD_MOTOR_COUNT 4
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define BRUSHED_MOTORS_PWM_RATE 16000
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define BRUSHLESS_MOTORS_PWM_RATE 480
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Digital protocol has fixed values
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_DISARM_COMMAND      0
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_MIN_THROTTLE       48
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_MAX_THROTTLE     2047
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_3D_DEADBAND_LOW  1047
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_3D_DEADBAND_HIGH 1048
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Note: this is called MultiType/MULTITYPE_* in baseflight.
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef enum mixerMode
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** {
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_TRI = 1,
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADP = 2,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADX = 3,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_BICOPTER = 4,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_GIMBAL = 5,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_Y6 = 6,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6 = 7,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_FLYING_WING = 8,
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_Y4 = 9,
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6X = 10,
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOX8 = 11,
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOFLATP = 12,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOFLATX = 13,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_AIRPLANE = 14,        // airplane / singlecopter / dualcopter (not yet properly supported
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HELI_120_CCPM = 15,
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HELI_90_DEG = 16,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_VTAIL4 = 17,
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6H = 18,
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_RX_TO_SERVO = 19,    // PPM -> servo relay
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_DUALCOPTER = 20,
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_SINGLECOPTER = 21,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_ATAIL4 = 22,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM = 23,
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM_AIRPLANE = 24,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM_TRI = 25,
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADX_1234 = 26
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixerMode_e;
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Custom mixer data per motor
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct motorMixer_s {
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float throttle;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float roll;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float pitch;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float yaw;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } motorMixer_t;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE_ARRAY(motorMixer_t, MAX_SUPPORTED_MOTORS, customMotorMixer);
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Custom mixer configuration
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct mixer_s {
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t motorCount;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t useServo;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     const motorMixer_t *motor;
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixer_t;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct mixerConfig_s {
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t mixerMode;
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     bool yaw_motors_reversed;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t crashflip_motor_percent;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixerConfig_t;
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE(mixerConfig_t, mixerConfig);
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct motorConfig_s {
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     motorDevConfig_t dev;
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t digitalIdleOffsetValue;        // Idle value for DShot protocol, full motor output = 1
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t minthrottle;                   // Set the minimum throttle command sent to the ESC (El
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t maxthrottle;                   // This is the maximum value for the ESCs at full power
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t mincommand;                    // This is the value for the ESCs when they are not arm
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t motorPoleCount;                // Magnetic poles in the motors for calculating actual R
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } motorConfig_t;
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE(motorConfig_t, motorConfig);
 105              	 .loc 2 107 0
 106              	 .cfi_startproc
 107              	 
 108              	 
 109              	 
 110 0000 80B4     	 push {r7}
 111              	.LCFI8:
 112              	 .cfi_def_cfa_offset 4
 113              	 .cfi_offset 7,-4
 114 0002 00AF     	 add r7,sp,#0
 115              	.LCFI9:
 116              	 .cfi_def_cfa_register 7
 117              	 .loc 2 107 0
 118 0004 024B     	 ldr r3,.L11
 119 0006 1846     	 mov r0,r3
 120 0008 BD46     	 mov sp,r7
 121              	.LCFI10:
 122              	 .cfi_def_cfa_register 13
 123              	 
 124 000a 5DF8047B 	 ldr r7,[sp],#4
 125              	.LCFI11:
 126              	 .cfi_restore 7
 127              	 .cfi_def_cfa_offset 0
 128 000e 7047     	 bx lr
 129              	.L12:
 130              	 .align 2
 131              	.L11:
 132 0010 00000000 	 .word motorConfig_System
 133              	 .cfi_endproc
 134              	.LFE546:
 136              	 .section .text.motorConfigMutable,"ax",%progbits
 137              	 .align 2
 138              	 .thumb
 139              	 .thumb_func
 141              	motorConfigMutable:
 142              	.LFB547:
 143              	 .loc 2 107 0
 144              	 .cfi_startproc
 145              	 
 146              	 
 147              	 
 148 0000 80B4     	 push {r7}
 149              	.LCFI12:
 150              	 .cfi_def_cfa_offset 4
 151              	 .cfi_offset 7,-4
 152 0002 00AF     	 add r7,sp,#0
 153              	.LCFI13:
 154              	 .cfi_def_cfa_register 7
 155              	 .loc 2 107 0
 156 0004 024B     	 ldr r3,.L15
 157 0006 1846     	 mov r0,r3
 158 0008 BD46     	 mov sp,r7
 159              	.LCFI14:
 160              	 .cfi_def_cfa_register 13
 161              	 
 162 000a 5DF8047B 	 ldr r7,[sp],#4
 163              	.LCFI15:
 164              	 .cfi_restore 7
 165              	 .cfi_def_cfa_offset 0
 166 000e 7047     	 bx lr
 167              	.L16:
 168              	 .align 2
 169              	.L15:
 170 0010 00000000 	 .word motorConfig_System
 171              	 .cfi_endproc
 172              	.LFE547:
 174              	 .section .text.cmsx_menuRcConfirmBack,"ax",%progbits
 175              	 .align 2
 176              	 .thumb
 177              	 .thumb_func
 179              	cmsx_menuRcConfirmBack:
 180              	.LFB563:
 181              	 .file 3 "../cleanflight/src/main/cms/cms_menu_misc.c"
   1:../cleanflight/src/main/cms/cms_menu_misc.c **** /*
   2:../cleanflight/src/main/cms/cms_menu_misc.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/cms/cms_menu_misc.c ****  *
   4:../cleanflight/src/main/cms/cms_menu_misc.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/cms/cms_menu_misc.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/cms/cms_menu_misc.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/cms/cms_menu_misc.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/cms/cms_menu_misc.c ****  * any later version.
   9:../cleanflight/src/main/cms/cms_menu_misc.c ****  *
  10:../cleanflight/src/main/cms/cms_menu_misc.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/cms/cms_menu_misc.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/cms/cms_menu_misc.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/cms/cms_menu_misc.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/cms/cms_menu_misc.c ****  *
  15:../cleanflight/src/main/cms/cms_menu_misc.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/cms/cms_menu_misc.c ****  * along with this software.
  17:../cleanflight/src/main/cms/cms_menu_misc.c ****  *
  18:../cleanflight/src/main/cms/cms_menu_misc.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/cms/cms_menu_misc.c ****  */
  20:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  21:../cleanflight/src/main/cms/cms_menu_misc.c **** #include <stdbool.h>
  22:../cleanflight/src/main/cms/cms_menu_misc.c **** #include <stdint.h>
  23:../cleanflight/src/main/cms/cms_menu_misc.c **** #include <string.h>
  24:../cleanflight/src/main/cms/cms_menu_misc.c **** #include <ctype.h>
  25:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  26:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "platform.h"
  27:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  28:../cleanflight/src/main/cms/cms_menu_misc.c **** #ifdef USE_CMS
  29:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  30:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "build/debug.h"
  31:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "build/version.h"
  32:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  33:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "drivers/time.h"
  34:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  35:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "cms/cms.h"
  36:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "cms/cms_types.h"
  37:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "cms/cms_menu_ledstrip.h"
  38:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  39:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "common/utils.h"
  40:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  41:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "config/feature.h"
  42:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "pg/pg.h"
  43:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "pg/pg_ids.h"
  44:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "pg/rx.h"
  45:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  46:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "fc/config.h"
  47:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "fc/rc_controls.h"
  48:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  49:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "flight/mixer.h"
  50:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  51:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "rx/rx.h"
  52:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  53:../cleanflight/src/main/cms/cms_menu_misc.c **** #include "sensors/battery.h"
  54:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  55:../cleanflight/src/main/cms/cms_menu_misc.c **** //
  56:../cleanflight/src/main/cms/cms_menu_misc.c **** // Misc
  57:../cleanflight/src/main/cms/cms_menu_misc.c **** //
  58:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  59:../cleanflight/src/main/cms/cms_menu_misc.c **** static long cmsx_menuRcConfirmBack(const OSD_Entry *self)
  60:../cleanflight/src/main/cms/cms_menu_misc.c **** {
 182              	 .loc 3 60 0
 183              	 .cfi_startproc
 184              	 
 185              	 
 186              	 
 187 0000 80B4     	 push {r7}
 188              	.LCFI16:
 189              	 .cfi_def_cfa_offset 4
 190              	 .cfi_offset 7,-4
 191 0002 83B0     	 sub sp,sp,#12
 192              	.LCFI17:
 193              	 .cfi_def_cfa_offset 16
 194 0004 00AF     	 add r7,sp,#0
 195              	.LCFI18:
 196              	 .cfi_def_cfa_register 7
 197 0006 7860     	 str r0,[r7,#4]
  61:../cleanflight/src/main/cms/cms_menu_misc.c ****     if (self && self->type == OME_Back)
 198              	 .loc 3 61 0
 199 0008 7B68     	 ldr r3,[r7,#4]
 200 000a 002B     	 cmp r3,#0
 201 000c 05D0     	 beq .L18
 202              	 .loc 3 61 0 is_stmt 0 discriminator 1
 203 000e 7B68     	 ldr r3,[r7,#4]
 204 0010 1B79     	 ldrb r3,[r3,#4]
 205 0012 012B     	 cmp r3,#1
 206 0014 01D1     	 bne .L18
  62:../cleanflight/src/main/cms/cms_menu_misc.c ****         return 0;
 207              	 .loc 3 62 0 is_stmt 1
 208 0016 0023     	 movs r3,#0
 209 0018 01E0     	 b .L19
 210              	.L18:
  63:../cleanflight/src/main/cms/cms_menu_misc.c ****     else
  64:../cleanflight/src/main/cms/cms_menu_misc.c ****         return -1;
 211              	 .loc 3 64 0
 212 001a 4FF0FF33 	 mov r3,#-1
 213              	.L19:
  65:../cleanflight/src/main/cms/cms_menu_misc.c **** }
 214              	 .loc 3 65 0
 215 001e 1846     	 mov r0,r3
 216 0020 0C37     	 adds r7,r7,#12
 217              	.LCFI19:
 218              	 .cfi_def_cfa_offset 4
 219 0022 BD46     	 mov sp,r7
 220              	.LCFI20:
 221              	 .cfi_def_cfa_register 13
 222              	 
 223 0024 5DF8047B 	 ldr r7,[sp],#4
 224              	.LCFI21:
 225              	 .cfi_restore 7
 226              	 .cfi_def_cfa_offset 0
 227 0028 7047     	 bx lr
 228              	 .cfi_endproc
 229              	.LFE563:
 231 002a 00BF     	 .section .data.__compound_literal.0,"aw",%progbits
 232              	 .align 2
 235              	__compound_literal.0:
 236 0000 00000000 	 .word rcData
 237 0004 0100     	 .short 1
 238 0006 C409     	 .short 2500
 239 0008 0000     	 .short 0
 240 000a 0000     	 .section .data.__compound_literal.1,"aw",%progbits
 241              	 .align 2
 244              	__compound_literal.1:
 245 0000 02000000 	 .word rcData+2
 246 0004 0100     	 .short 1
 247 0006 C409     	 .short 2500
 248 0008 0000     	 .short 0
 249 000a 0000     	 .section .data.__compound_literal.2,"aw",%progbits
 250              	 .align 2
 253              	__compound_literal.2:
 254 0000 06000000 	 .word rcData+6
 255 0004 0100     	 .short 1
 256 0006 C409     	 .short 2500
 257 0008 0000     	 .short 0
 258 000a 0000     	 .section .data.__compound_literal.3,"aw",%progbits
 259              	 .align 2
 262              	__compound_literal.3:
 263 0000 04000000 	 .word rcData+4
 264 0004 0100     	 .short 1
 265 0006 C409     	 .short 2500
 266 0008 0000     	 .short 0
 267 000a 0000     	 .section .data.__compound_literal.4,"aw",%progbits
 268              	 .align 2
 271              	__compound_literal.4:
 272 0000 08000000 	 .word rcData+8
 273 0004 0100     	 .short 1
 274 0006 C409     	 .short 2500
 275 0008 0000     	 .short 0
 276 000a 0000     	 .section .data.__compound_literal.5,"aw",%progbits
 277              	 .align 2
 280              	__compound_literal.5:
 281 0000 0A000000 	 .word rcData+10
 282 0004 0100     	 .short 1
 283 0006 C409     	 .short 2500
 284 0008 0000     	 .short 0
 285 000a 0000     	 .section .data.__compound_literal.6,"aw",%progbits
 286              	 .align 2
 289              	__compound_literal.6:
 290 0000 0C000000 	 .word rcData+12
 291 0004 0100     	 .short 1
 292 0006 C409     	 .short 2500
 293 0008 0000     	 .short 0
 294 000a 0000     	 .section .data.__compound_literal.7,"aw",%progbits
 295              	 .align 2
 298              	__compound_literal.7:
 299 0000 0E000000 	 .word rcData+14
 300 0004 0100     	 .short 1
 301 0006 C409     	 .short 2500
 302 0008 0000     	 .short 0
 303 000a 0000     	 .section .rodata
 304              	 .align 2
 305              	.LC0:
 306 0000 2D2D2052 	 .ascii "-- RC PREV --\000"
 306      43205052 
 306      4556202D 
 306      2D00
 307 000e 0000     	 .align 2
 308              	.LC1:
 309 0010 524F4C4C 	 .ascii "ROLL\000"
 309      00
 310 0015 000000   	 .align 2
 311              	.LC2:
 312 0018 50495443 	 .ascii "PITCH\000"
 312      4800
 313 001e 0000     	 .align 2
 314              	.LC3:
 315 0020 54485200 	 .ascii "THR\000"
 316              	 .align 2
 317              	.LC4:
 318 0024 59415700 	 .ascii "YAW\000"
 319              	 .align 2
 320              	.LC5:
 321 0028 41555831 	 .ascii "AUX1\000"
 321      00
 322 002d 000000   	 .align 2
 323              	.LC6:
 324 0030 41555832 	 .ascii "AUX2\000"
 324      00
 325 0035 000000   	 .align 2
 326              	.LC7:
 327 0038 41555833 	 .ascii "AUX3\000"
 327      00
 328 003d 000000   	 .align 2
 329              	.LC8:
 330 0040 41555834 	 .ascii "AUX4\000"
 330      00
 331 0045 000000   	 .align 2
 332              	.LC9:
 333 0048 4241434B 	 .ascii "BACK\000"
 333      00
 334              	 .section .data.cmsx_menuRcEntries,"aw",%progbits
 335              	 .align 2
 338              	cmsx_menuRcEntries:
 339 0000 00000000 	 .word .LC0
 340 0004 00       	 .byte 0
 341 0005 00000000 	 .4byte 0
 342 0009 00000000 	 .4byte 0
 343 000d 00       	 .byte 0
 344 000e 10000000 	 .4byte .LC1
 345 0012 09       	 .byte 9
 346 0013 00000000 	 .4byte 0
 347 0017 00000000 	 .4byte __compound_literal.0
 348 001b 04       	 .byte 4
 349 001c 18000000 	 .word .LC2
 350 0020 09       	 .byte 9
 351 0021 00000000 	 .4byte 0
 352 0025 00000000 	 .4byte __compound_literal.1
 353 0029 04       	 .byte 4
 354 002a 20000000 	 .4byte .LC3
 355 002e 09       	 .byte 9
 356 002f 00000000 	 .4byte 0
 357 0033 00000000 	 .4byte __compound_literal.2
 358 0037 04       	 .byte 4
 359 0038 24000000 	 .word .LC4
 360 003c 09       	 .byte 9
 361 003d 00000000 	 .4byte 0
 362 0041 00000000 	 .4byte __compound_literal.3
 363 0045 04       	 .byte 4
 364 0046 28000000 	 .4byte .LC5
 365 004a 09       	 .byte 9
 366 004b 00000000 	 .4byte 0
 367 004f 00000000 	 .4byte __compound_literal.4
 368 0053 04       	 .byte 4
 369 0054 30000000 	 .word .LC6
 370 0058 09       	 .byte 9
 371 0059 00000000 	 .4byte 0
 372 005d 00000000 	 .4byte __compound_literal.5
 373 0061 04       	 .byte 4
 374 0062 38000000 	 .4byte .LC7
 375 0066 09       	 .byte 9
 376 0067 00000000 	 .4byte 0
 377 006b 00000000 	 .4byte __compound_literal.6
 378 006f 04       	 .byte 4
 379 0070 40000000 	 .word .LC8
 380 0074 09       	 .byte 9
 381 0075 00000000 	 .4byte 0
 382 0079 00000000 	 .4byte __compound_literal.7
 383 007d 04       	 .byte 4
 384 007e 48000000 	 .4byte .LC9
 385 0082 01       	 .byte 1
 386 0083 00000000 	 .4byte 0
 387 0087 00000000 	 .4byte 0
 388 008b 00       	 .byte 0
 389 008c 00000000 	 .word 0
 390 0090 0E       	 .byte 14
 391 0091 00000000 	 .4byte 0
 392 0095 00000000 	 .4byte 0
 393 0099 00       	 .byte 0
 394              	 .global cmsx_menuRcPreview
 395 009a 0000     	 .section .data.cmsx_menuRcPreview,"aw",%progbits
 396              	 .align 2
 399              	cmsx_menuRcPreview:
 400 0000 00000000 	 .word 0
 401 0004 00000000 	 .word cmsx_menuRcConfirmBack
 402 0008 00000000 	 .word cmsx_menuRcEntries
 403              	 .section .bss.motorConfig_minthrottle,"aw",%nobits
 404              	 .align 1
 407              	motorConfig_minthrottle:
 408 0000 0000     	 .space 2
 409              	 .section .bss.motorConfig_digitalIdleOffsetValue,"aw",%nobits
 412              	motorConfig_digitalIdleOffsetValue:
 413 0000 00       	 .space 1
 414              	 .section .bss.systemConfig_debug_mode,"aw",%nobits
 417              	systemConfig_debug_mode:
 418 0000 00       	 .space 1
 419              	 .section .text.cmsx_menuMiscOnEnter,"ax",%progbits
 420              	 .align 2
 421              	 .thumb
 422              	 .thumb_func
 424              	cmsx_menuMiscOnEnter:
 425              	.LFB564:
  66:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  67:../cleanflight/src/main/cms/cms_menu_misc.c **** //
  68:../cleanflight/src/main/cms/cms_menu_misc.c **** // RC preview
  69:../cleanflight/src/main/cms/cms_menu_misc.c **** //
  70:../cleanflight/src/main/cms/cms_menu_misc.c **** static OSD_Entry cmsx_menuRcEntries[] =
  71:../cleanflight/src/main/cms/cms_menu_misc.c **** {
  72:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "-- RC PREV --", OME_Label, NULL, NULL, 0},
  73:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  74:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "ROLL",  OME_INT16, NULL, &(OSD_INT16_t){ &rcData[ROLL],     1, 2500, 0 }, DYNAMIC },
  75:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "PITCH", OME_INT16, NULL, &(OSD_INT16_t){ &rcData[PITCH],    1, 2500, 0 }, DYNAMIC },
  76:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "THR",   OME_INT16, NULL, &(OSD_INT16_t){ &rcData[THROTTLE], 1, 2500, 0 }, DYNAMIC },
  77:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "YAW",   OME_INT16, NULL, &(OSD_INT16_t){ &rcData[YAW],      1, 2500, 0 }, DYNAMIC },
  78:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  79:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "AUX1",  OME_INT16, NULL, &(OSD_INT16_t){ &rcData[AUX1],     1, 2500, 0 }, DYNAMIC },
  80:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "AUX2",  OME_INT16, NULL, &(OSD_INT16_t){ &rcData[AUX2],     1, 2500, 0 }, DYNAMIC },
  81:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "AUX3",  OME_INT16, NULL, &(OSD_INT16_t){ &rcData[AUX3],     1, 2500, 0 }, DYNAMIC },
  82:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "AUX4",  OME_INT16, NULL, &(OSD_INT16_t){ &rcData[AUX4],     1, 2500, 0 }, DYNAMIC },
  83:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  84:../cleanflight/src/main/cms/cms_menu_misc.c ****     { "BACK",  OME_Back, NULL, NULL, 0},
  85:../cleanflight/src/main/cms/cms_menu_misc.c ****     {NULL, OME_END, NULL, NULL, 0}
  86:../cleanflight/src/main/cms/cms_menu_misc.c **** };
  87:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  88:../cleanflight/src/main/cms/cms_menu_misc.c **** CMS_Menu cmsx_menuRcPreview = {
  89:../cleanflight/src/main/cms/cms_menu_misc.c **** #ifdef CMS_MENU_DEBUG
  90:../cleanflight/src/main/cms/cms_menu_misc.c ****     .GUARD_text = "XRCPREV",
  91:../cleanflight/src/main/cms/cms_menu_misc.c ****     .GUARD_type = OME_MENU,
  92:../cleanflight/src/main/cms/cms_menu_misc.c **** #endif
  93:../cleanflight/src/main/cms/cms_menu_misc.c ****     .onEnter = NULL,
  94:../cleanflight/src/main/cms/cms_menu_misc.c ****     .onExit = cmsx_menuRcConfirmBack,
  95:../cleanflight/src/main/cms/cms_menu_misc.c ****     .entries = cmsx_menuRcEntries
  96:../cleanflight/src/main/cms/cms_menu_misc.c **** };
  97:../cleanflight/src/main/cms/cms_menu_misc.c **** 
  98:../cleanflight/src/main/cms/cms_menu_misc.c **** static uint16_t motorConfig_minthrottle;
  99:../cleanflight/src/main/cms/cms_menu_misc.c **** static uint8_t motorConfig_digitalIdleOffsetValue;
 100:../cleanflight/src/main/cms/cms_menu_misc.c **** static debugType_e systemConfig_debug_mode;
 101:../cleanflight/src/main/cms/cms_menu_misc.c **** 
 102:../cleanflight/src/main/cms/cms_menu_misc.c **** static long cmsx_menuMiscOnEnter(void)
 103:../cleanflight/src/main/cms/cms_menu_misc.c **** {
 426              	 .loc 3 103 0
 427              	 .cfi_startproc
 428              	 
 429              	 
 430 0000 80B5     	 push {r7,lr}
 431              	.LCFI22:
 432              	 .cfi_def_cfa_offset 8
 433              	 .cfi_offset 7,-8
 434              	 .cfi_offset 14,-4
 435 0002 00AF     	 add r7,sp,#0
 436              	.LCFI23:
 437              	 .cfi_def_cfa_register 7
 104:../cleanflight/src/main/cms/cms_menu_misc.c ****     motorConfig_minthrottle = motorConfig()->minthrottle;
 438              	 .loc 3 104 0
 439 0004 FFF7FEFF 	 bl motorConfig
 440 0008 0346     	 mov r3,r0
 441 000a 1B8A     	 ldrh r3,[r3,#16]
 442 000c 9AB2     	 uxth r2,r3
 443 000e 0C4B     	 ldr r3,.L22
 444 0010 1A80     	 strh r2,[r3]
 105:../cleanflight/src/main/cms/cms_menu_misc.c ****     motorConfig_digitalIdleOffsetValue = motorConfig()->digitalIdleOffsetValue / 10;
 445              	 .loc 3 105 0
 446 0012 FFF7FEFF 	 bl motorConfig
 447 0016 0346     	 mov r3,r0
 448 0018 DB89     	 ldrh r3,[r3,#14]
 449 001a 9BB2     	 uxth r3,r3
 450 001c 094A     	 ldr r2,.L22+4
 451 001e A2FB0323 	 umull r2,r3,r2,r3
 452 0022 DB08     	 lsrs r3,r3,#3
 453 0024 9BB2     	 uxth r3,r3
 454 0026 DAB2     	 uxtb r2,r3
 455 0028 074B     	 ldr r3,.L22+8
 456 002a 1A70     	 strb r2,[r3]
 106:../cleanflight/src/main/cms/cms_menu_misc.c ****     systemConfig_debug_mode = systemConfig()->debug_mode;
 457              	 .loc 3 106 0
 458 002c FFF7FEFF 	 bl systemConfig
 459 0030 0346     	 mov r3,r0
 460 0032 9A78     	 ldrb r2,[r3,#2]
 461 0034 054B     	 ldr r3,.L22+12
 462 0036 1A70     	 strb r2,[r3]
 107:../cleanflight/src/main/cms/cms_menu_misc.c **** 
 108:../cleanflight/src/main/cms/cms_menu_misc.c ****     return 0;
 463              	 .loc 3 108 0
 464 0038 0023     	 movs r3,#0
 109:../cleanflight/src/main/cms/cms_menu_misc.c **** }
 465              	 .loc 3 109 0
 466 003a 1846     	 mov r0,r3
 467 003c 80BD     	 pop {r7,pc}
 468              	.L23:
 469 003e 00BF     	 .align 2
 470              	.L22:
 471 0040 00000000 	 .word motorConfig_minthrottle
 472 0044 CDCCCCCC 	 .word -858993459
 473 0048 00000000 	 .word motorConfig_digitalIdleOffsetValue
 474 004c 00000000 	 .word systemConfig_debug_mode
 475              	 .cfi_endproc
 476              	.LFE564:
 478              	 .section .text.cmsx_menuMiscOnExit,"ax",%progbits
 479              	 .align 2
 480              	 .thumb
 481              	 .thumb_func
 483              	cmsx_menuMiscOnExit:
 484              	.LFB565:
 110:../cleanflight/src/main/cms/cms_menu_misc.c **** 
 111:../cleanflight/src/main/cms/cms_menu_misc.c **** static long cmsx_menuMiscOnExit(const OSD_Entry *self)
 112:../cleanflight/src/main/cms/cms_menu_misc.c **** {
 485              	 .loc 3 112 0
 486              	 .cfi_startproc
 487              	 
 488              	 
 489 0000 80B5     	 push {r7,lr}
 490              	.LCFI24:
 491              	 .cfi_def_cfa_offset 8
 492              	 .cfi_offset 7,-8
 493              	 .cfi_offset 14,-4
 494 0002 82B0     	 sub sp,sp,#8
 495              	.LCFI25:
 496              	 .cfi_def_cfa_offset 16
 497 0004 00AF     	 add r7,sp,#0
 498              	.LCFI26:
 499              	 .cfi_def_cfa_register 7
 500 0006 7860     	 str r0,[r7,#4]
 113:../cleanflight/src/main/cms/cms_menu_misc.c ****     UNUSED(self);
 114:../cleanflight/src/main/cms/cms_menu_misc.c **** 
 115:../cleanflight/src/main/cms/cms_menu_misc.c ****     motorConfigMutable()->minthrottle = motorConfig_minthrottle;
 501              	 .loc 3 115 0
 502 0008 FFF7FEFF 	 bl motorConfigMutable
 503 000c 0246     	 mov r2,r0
 504 000e 0D4B     	 ldr r3,.L26
 505 0010 1B88     	 ldrh r3,[r3]
 506 0012 1382     	 strh r3,[r2,#16]
 116:../cleanflight/src/main/cms/cms_menu_misc.c ****     motorConfigMutable()->digitalIdleOffsetValue = 10 * motorConfig_digitalIdleOffsetValue;
 507              	 .loc 3 116 0
 508 0014 FFF7FEFF 	 bl motorConfigMutable
 509 0018 0246     	 mov r2,r0
 510 001a 0B4B     	 ldr r3,.L26+4
 511 001c 1B78     	 ldrb r3,[r3]
 512 001e 9BB2     	 uxth r3,r3
 513 0020 1946     	 mov r1,r3
 514 0022 8900     	 lsls r1,r1,#2
 515 0024 0B44     	 add r3,r3,r1
 516 0026 5B00     	 lsls r3,r3,#1
 517 0028 9BB2     	 uxth r3,r3
 518 002a D381     	 strh r3,[r2,#14]
 117:../cleanflight/src/main/cms/cms_menu_misc.c ****     systemConfigMutable()->debug_mode = systemConfig_debug_mode;
 519              	 .loc 3 117 0
 520 002c FFF7FEFF 	 bl systemConfigMutable
 521 0030 0246     	 mov r2,r0
 522 0032 064B     	 ldr r3,.L26+8
 523 0034 1B78     	 ldrb r3,[r3]
 524 0036 9370     	 strb r3,[r2,#2]
 118:../cleanflight/src/main/cms/cms_menu_misc.c **** 
 119:../cleanflight/src/main/cms/cms_menu_misc.c ****     return 0;
 525              	 .loc 3 119 0
 526 0038 0023     	 movs r3,#0
 120:../cleanflight/src/main/cms/cms_menu_misc.c **** }
 527              	 .loc 3 120 0
 528 003a 1846     	 mov r0,r3
 529 003c 0837     	 adds r7,r7,#8
 530              	.LCFI27:
 531              	 .cfi_def_cfa_offset 8
 532 003e BD46     	 mov sp,r7
 533              	.LCFI28:
 534              	 .cfi_def_cfa_register 13
 535              	 
 536 0040 80BD     	 pop {r7,pc}
 537              	.L27:
 538 0042 00BF     	 .align 2
 539              	.L26:
 540 0044 00000000 	 .word motorConfig_minthrottle
 541 0048 00000000 	 .word motorConfig_digitalIdleOffsetValue
 542 004c 00000000 	 .word systemConfig_debug_mode
 543              	 .cfi_endproc
 544              	.LFE565:
 546              	 .section .data.__compound_literal.8,"aw",%progbits
 547              	 .align 2
 550              	__compound_literal.8:
 551 0000 00000000 	 .word motorConfig_minthrottle
 552 0004 E803     	 .short 1000
 553 0006 D007     	 .short 2000
 554 0008 0100     	 .short 1
 555 000a 0000     	 .section .data.__compound_literal.9,"aw",%progbits
 556              	 .align 2
 559              	__compound_literal.9:
 560 0000 00000000 	 .word motorConfig_digitalIdleOffsetValue
 561 0004 00       	 .byte 0
 562 0005 C8       	 .byte -56
 563 0006 01       	 .byte 1
 564 0007 00       	 .section .data.__compound_literal.10,"aw",%progbits
 565              	 .align 2
 568              	__compound_literal.10:
 569 0000 00000000 	 .word systemConfig_debug_mode
 570 0004 2B       	 .byte 43
 571 0005 00000000 	 .4byte debugModeNames
 572 0009 000000   	 .section .rodata
 573 004d 000000   	 .align 2
 574              	.LC10:
 575 0050 2D2D204D 	 .ascii "-- MISC --\000"
 575      49534320 
 575      2D2D00
 576 005b 00       	 .align 2
 577              	.LC11:
 578 005c 4D494E20 	 .ascii "MIN THR\000"
 578      54485200 
 579              	 .align 2
 580              	.LC12:
 581 0064 44494749 	 .ascii "DIGITAL IDLE\000"
 581      54414C20 
 581      49444C45 
 581      00
 582 0071 000000   	 .align 2
 583              	.LC13:
 584 0074 44454255 	 .ascii "DEBUG MODE\000"
 584      47204D4F 
 584      444500
 585 007f 00       	 .align 2
 586              	.LC14:
 587 0080 52432050 	 .ascii "RC PREV\000"
 587      52455600 
 588              	 .section .data.menuMiscEntries,"aw",%progbits
 589              	 .align 2
 592              	menuMiscEntries:
 593 0000 50000000 	 .word .LC10
 594 0004 00       	 .byte 0
 595 0005 00000000 	 .4byte 0
 596 0009 00000000 	 .4byte 0
 597 000d 00       	 .byte 0
 598 000e 5C000000 	 .4byte .LC11
 599 0012 08       	 .byte 8
 600 0013 00000000 	 .4byte 0
 601 0017 00000000 	 .4byte __compound_literal.8
 602 001b 00       	 .byte 0
 603 001c 64000000 	 .word .LC12
 604 0020 07       	 .byte 7
 605 0021 00000000 	 .4byte 0
 606 0025 00000000 	 .4byte __compound_literal.9
 607 0029 00       	 .byte 0
 608 002a 74000000 	 .4byte .LC13
 609 002e 0D       	 .byte 13
 610 002f 00000000 	 .4byte 0
 611 0033 00000000 	 .4byte __compound_literal.10
 612 0037 00       	 .byte 0
 613 0038 80000000 	 .word .LC14
 614 003c 03       	 .byte 3
 615 003d 00000000 	 .4byte cmsMenuChange
 616 0041 00000000 	 .4byte cmsx_menuRcPreview
 617 0045 00       	 .byte 0
 618 0046 48000000 	 .4byte .LC9
 619 004a 01       	 .byte 1
 620 004b 00000000 	 .4byte 0
 621 004f 00000000 	 .4byte 0
 622 0053 00       	 .byte 0
 623 0054 00000000 	 .word 0
 624 0058 0E       	 .byte 14
 625 0059 00000000 	 .4byte 0
 626 005d 00000000 	 .4byte 0
 627 0061 00       	 .byte 0
 628              	 .global cmsx_menuMisc
 629 0062 0000     	 .section .data.cmsx_menuMisc,"aw",%progbits
 630              	 .align 2
 633              	cmsx_menuMisc:
 634 0000 00000000 	 .word cmsx_menuMiscOnEnter
 635 0004 00000000 	 .word cmsx_menuMiscOnExit
 636 0008 00000000 	 .word menuMiscEntries
 637              	 .text
 638              	.Letext0:
 639              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 640              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 641              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 642              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build/debug.h"
 643              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 644              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/display.h"
 645              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms_types.h"
 646              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 647              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 648              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx.h"
 649              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_controls.h"
 650              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/pwm_output.h"
 651              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/rx/rx.h"
 652              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/current.h"
 653              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/voltage.h"
 654              	 .file 19 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/battery.h"
 655              	 .file 20 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 656              	 .file 21 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
 657              	 .file 22 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cms_menu_misc.c
                            *COM*:00000004 pCurrentDisplay
    {standard input}:21     .text.systemConfig:00000000 $t
    {standard input}:25     .text.systemConfig:00000000 systemConfig
    {standard input}:55     .text.systemConfig:00000010 $d
    {standard input}:60     .text.systemConfigMutable:00000000 $t
    {standard input}:64     .text.systemConfigMutable:00000000 systemConfigMutable
    {standard input}:93     .text.systemConfigMutable:00000010 $d
    {standard input}:98     .text.motorConfig:00000000 $t
    {standard input}:102    .text.motorConfig:00000000 motorConfig
    {standard input}:132    .text.motorConfig:00000010 $d
    {standard input}:137    .text.motorConfigMutable:00000000 $t
    {standard input}:141    .text.motorConfigMutable:00000000 motorConfigMutable
    {standard input}:170    .text.motorConfigMutable:00000010 $d
    {standard input}:175    .text.cmsx_menuRcConfirmBack:00000000 $t
    {standard input}:179    .text.cmsx_menuRcConfirmBack:00000000 cmsx_menuRcConfirmBack
    {standard input}:232    .data.__compound_literal.0:00000000 $d
    {standard input}:235    .data.__compound_literal.0:00000000 __compound_literal.0
    {standard input}:241    .data.__compound_literal.1:00000000 $d
    {standard input}:244    .data.__compound_literal.1:00000000 __compound_literal.1
    {standard input}:250    .data.__compound_literal.2:00000000 $d
    {standard input}:253    .data.__compound_literal.2:00000000 __compound_literal.2
    {standard input}:259    .data.__compound_literal.3:00000000 $d
    {standard input}:262    .data.__compound_literal.3:00000000 __compound_literal.3
    {standard input}:268    .data.__compound_literal.4:00000000 $d
    {standard input}:271    .data.__compound_literal.4:00000000 __compound_literal.4
    {standard input}:277    .data.__compound_literal.5:00000000 $d
    {standard input}:280    .data.__compound_literal.5:00000000 __compound_literal.5
    {standard input}:286    .data.__compound_literal.6:00000000 $d
    {standard input}:289    .data.__compound_literal.6:00000000 __compound_literal.6
    {standard input}:295    .data.__compound_literal.7:00000000 $d
    {standard input}:298    .data.__compound_literal.7:00000000 __compound_literal.7
    {standard input}:304    .rodata:00000000 $d
    {standard input}:335    .data.cmsx_menuRcEntries:00000000 $d
    {standard input}:338    .data.cmsx_menuRcEntries:00000000 cmsx_menuRcEntries
    {standard input}:399    .data.cmsx_menuRcPreview:00000000 cmsx_menuRcPreview
    {standard input}:396    .data.cmsx_menuRcPreview:00000000 $d
    {standard input}:404    .bss.motorConfig_minthrottle:00000000 $d
    {standard input}:407    .bss.motorConfig_minthrottle:00000000 motorConfig_minthrottle
    {standard input}:412    .bss.motorConfig_digitalIdleOffsetValue:00000000 motorConfig_digitalIdleOffsetValue
    {standard input}:413    .bss.motorConfig_digitalIdleOffsetValue:00000000 $d
    {standard input}:417    .bss.systemConfig_debug_mode:00000000 systemConfig_debug_mode
    {standard input}:418    .bss.systemConfig_debug_mode:00000000 $d
    {standard input}:420    .text.cmsx_menuMiscOnEnter:00000000 $t
    {standard input}:424    .text.cmsx_menuMiscOnEnter:00000000 cmsx_menuMiscOnEnter
    {standard input}:471    .text.cmsx_menuMiscOnEnter:00000040 $d
    {standard input}:479    .text.cmsx_menuMiscOnExit:00000000 $t
    {standard input}:483    .text.cmsx_menuMiscOnExit:00000000 cmsx_menuMiscOnExit
    {standard input}:540    .text.cmsx_menuMiscOnExit:00000044 $d
    {standard input}:547    .data.__compound_literal.8:00000000 $d
    {standard input}:550    .data.__compound_literal.8:00000000 __compound_literal.8
    {standard input}:556    .data.__compound_literal.9:00000000 $d
    {standard input}:559    .data.__compound_literal.9:00000000 __compound_literal.9
    {standard input}:565    .data.__compound_literal.10:00000000 $d
    {standard input}:568    .data.__compound_literal.10:00000000 __compound_literal.10
    {standard input}:589    .data.menuMiscEntries:00000000 $d
    {standard input}:592    .data.menuMiscEntries:00000000 menuMiscEntries
    {standard input}:633    .data.cmsx_menuMisc:00000000 cmsx_menuMisc
    {standard input}:630    .data.cmsx_menuMisc:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
systemConfig_System
motorConfig_System
rcData
debugModeNames
cmsMenuChange
