   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "cms_menu_power.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm pCurrentDisplay,4,4
  20              	 .section .text.currentSensorADCConfig,"ax",%progbits
  21              	 .align 2
  22              	 .thumb
  23              	 .thumb_func
  25              	currentSensorADCConfig:
  26              	.LFB529:
  27              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/current.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** #include "common/time.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** #include "current_ids.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** typedef enum {
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_METER_NONE = 0,
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_METER_ADC,
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_METER_VIRTUAL,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_METER_ESC,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_METER_MSP,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_METER_COUNT
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** } currentMeterSource_e;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** extern const char * const currentMeterSourceNames[CURRENT_METER_COUNT];
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** typedef struct currentMeter_s {
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int32_t amperage;           // current read by current sensor in centiampere (1/100th A)
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int32_t amperageLatest;     // current read by current sensor in centiampere (1/100th A) (unfil
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int32_t mAhDrawn;           // milliampere hours drawn from the battery since start
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** } currentMeter_t;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** // WARNING - do not mix usage of CURRENT_SENSOR_* and CURRENT_METER_*, they are separate concerns.
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** typedef struct currentMeterMAhDrawnState_s {
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int32_t mAhDrawn;           // milliampere hours drawn from the battery since start
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     float mAhDrawnF;
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** } currentMeterMAhDrawnState_t;
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** //
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** // Sensors
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** //
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** typedef enum {
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_SENSOR_VIRTUAL = 0,
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_SENSOR_ADC,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_SENSOR_ESC,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     CURRENT_SENSOR_MSP
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** } currentSensor_e;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** //
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** // ADC
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** //
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** typedef struct currentMeterADCState_s {
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     currentMeterMAhDrawnState_t mahDrawnState;
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int32_t amperage;           // current read by current sensor in centiampere (1/100th A)
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int32_t amperageLatest;     // current read by current sensor in centiampere (1/100th A) (unfil
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** } currentMeterADCState_t;
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** typedef struct currentSensorADCConfig_s {
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int16_t scale;              // scale the current sensor output voltage to milliamps. Value in m
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int16_t offset;             // offset of the current sensor in mA
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** } currentSensorADCConfig_t;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** PG_DECLARE(currentSensorADCConfig_t, currentSensorADCConfig);
  28              	 .loc 1 77 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 00AF     	 add r7,sp,#0
  38              	.LCFI1:
  39              	 .cfi_def_cfa_register 7
  40              	 .loc 1 77 0
  41 0004 024B     	 ldr r3,.L3
  42 0006 1846     	 mov r0,r3
  43 0008 BD46     	 mov sp,r7
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 13
  46              	 
  47 000a 5DF8047B 	 ldr r7,[sp],#4
  48              	.LCFI3:
  49              	 .cfi_restore 7
  50              	 .cfi_def_cfa_offset 0
  51 000e 7047     	 bx lr
  52              	.L4:
  53              	 .align 2
  54              	.L3:
  55 0010 00000000 	 .word currentSensorADCConfig_System
  56              	 .cfi_endproc
  57              	.LFE529:
  59              	 .section .text.currentSensorADCConfigMutable,"ax",%progbits
  60              	 .align 2
  61              	 .thumb
  62              	 .thumb_func
  64              	currentSensorADCConfigMutable:
  65              	.LFB530:
  66              	 .loc 1 77 0
  67              	 .cfi_startproc
  68              	 
  69              	 
  70              	 
  71 0000 80B4     	 push {r7}
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 4
  74              	 .cfi_offset 7,-4
  75 0002 00AF     	 add r7,sp,#0
  76              	.LCFI5:
  77              	 .cfi_def_cfa_register 7
  78              	 .loc 1 77 0
  79 0004 024B     	 ldr r3,.L7
  80 0006 1846     	 mov r0,r3
  81 0008 BD46     	 mov sp,r7
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 13
  84              	 
  85 000a 5DF8047B 	 ldr r7,[sp],#4
  86              	.LCFI7:
  87              	 .cfi_restore 7
  88              	 .cfi_def_cfa_offset 0
  89 000e 7047     	 bx lr
  90              	.L8:
  91              	 .align 2
  92              	.L7:
  93 0010 00000000 	 .word currentSensorADCConfig_System
  94              	 .cfi_endproc
  95              	.LFE530:
  97              	 .section .text.currentSensorVirtualConfig,"ax",%progbits
  98              	 .align 2
  99              	 .thumb
 100              	 .thumb_func
 102              	currentSensorVirtualConfig:
 103              	.LFB531:
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** //
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** // Virtual
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** //
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** typedef struct currentMeterVirtualState_s {
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     currentMeterMAhDrawnState_t mahDrawnState;
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int32_t amperage;           // current read by current sensor in centiampere (1/100th A)
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** } currentSensorVirtualState_t;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** typedef struct currentSensorVirtualConfig_s {
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     int16_t scale;              // scale the current sensor output voltage to milliamps. Value in 1
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h ****     uint16_t offset;            // offset of the current sensor in millivolt steps
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** } currentSensorVirtualConfig_t;
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** 
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\current.h **** PG_DECLARE(currentSensorVirtualConfig_t, currentSensorVirtualConfig);
 104              	 .loc 1 93 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108              	 
 109 0000 80B4     	 push {r7}
 110              	.LCFI8:
 111              	 .cfi_def_cfa_offset 4
 112              	 .cfi_offset 7,-4
 113 0002 00AF     	 add r7,sp,#0
 114              	.LCFI9:
 115              	 .cfi_def_cfa_register 7
 116              	 .loc 1 93 0
 117 0004 024B     	 ldr r3,.L11
 118 0006 1846     	 mov r0,r3
 119 0008 BD46     	 mov sp,r7
 120              	.LCFI10:
 121              	 .cfi_def_cfa_register 13
 122              	 
 123 000a 5DF8047B 	 ldr r7,[sp],#4
 124              	.LCFI11:
 125              	 .cfi_restore 7
 126              	 .cfi_def_cfa_offset 0
 127 000e 7047     	 bx lr
 128              	.L12:
 129              	 .align 2
 130              	.L11:
 131 0010 00000000 	 .word currentSensorVirtualConfig_System
 132              	 .cfi_endproc
 133              	.LFE531:
 135              	 .section .text.currentSensorVirtualConfigMutable,"ax",%progbits
 136              	 .align 2
 137              	 .thumb
 138              	 .thumb_func
 140              	currentSensorVirtualConfigMutable:
 141              	.LFB532:
 142              	 .loc 1 93 0
 143              	 .cfi_startproc
 144              	 
 145              	 
 146              	 
 147 0000 80B4     	 push {r7}
 148              	.LCFI12:
 149              	 .cfi_def_cfa_offset 4
 150              	 .cfi_offset 7,-4
 151 0002 00AF     	 add r7,sp,#0
 152              	.LCFI13:
 153              	 .cfi_def_cfa_register 7
 154              	 .loc 1 93 0
 155 0004 024B     	 ldr r3,.L15
 156 0006 1846     	 mov r0,r3
 157 0008 BD46     	 mov sp,r7
 158              	.LCFI14:
 159              	 .cfi_def_cfa_register 13
 160              	 
 161 000a 5DF8047B 	 ldr r7,[sp],#4
 162              	.LCFI15:
 163              	 .cfi_restore 7
 164              	 .cfi_def_cfa_offset 0
 165 000e 7047     	 bx lr
 166              	.L16:
 167              	 .align 2
 168              	.L15:
 169 0010 00000000 	 .word currentSensorVirtualConfig_System
 170              	 .cfi_endproc
 171              	.LFE532:
 173              	 .section .text.voltageSensorADCConfig,"ax",%progbits
 174              	 .align 2
 175              	 .thumb
 176              	 .thumb_func
 178              	voltageSensorADCConfig:
 179              	.LFB533:
 180              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/voltage.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #include "voltage_ids.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** //
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** // meters
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** //
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_METER_NONE = 0,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_METER_ADC,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_METER_ESC,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_METER_COUNT
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** } voltageMeterSource_e;
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** extern const char * const voltageMeterSourceNames[VOLTAGE_METER_COUNT];
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** // WARNING - do not mix usage of VOLTAGE_METER_* and VOLTAGE_SENSOR_*, they are separate concerns.
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** typedef struct voltageMeter_s {
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     uint16_t filtered;                      // voltage in 0.1V steps
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     uint16_t unfiltered;                    // voltage in 0.1V steps
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     bool lowVoltageCutoff;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** } voltageMeter_t;
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** //
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** // sensors
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** //
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** typedef enum {
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_SENSOR_TYPE_ADC_RESISTOR_DIVIDER = 0,
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_SENSOR_TYPE_ESC
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** } voltageSensorType_e;
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** //
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** // adc sensors
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** //
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #define VBAT_SCALE_MIN 0
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #define VBAT_SCALE_MAX 255
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #define VBAT_DIVIDER_MIN 1
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #define VBAT_DIVIDER_MAX 255
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #define VBAT_MULTIPLIER_MIN 1
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #define VBAT_MULTIPLIER_MAX 255
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #ifndef VBAT_LPF_FREQ
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #define VBAT_LPF_FREQ  0.1f
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #endif
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #ifndef MAX_VOLTAGE_SENSOR_ADC
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #define MAX_VOLTAGE_SENSOR_ADC 1 // VBAT - some boards have external, 12V, 9V and 5V meters.
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #endif
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** #define VOLTAGE_METER_ID_ESC_COUNT 12
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** typedef enum {
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_SENSOR_ADC_VBAT = 0,
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_SENSOR_ADC_12V = 1,
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_SENSOR_ADC_9V = 2,
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     VOLTAGE_SENSOR_ADC_5V = 3
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** } voltageSensorADC_e; // see also voltageMeterADCtoIDMap
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** typedef struct voltageSensorADCConfig_s {
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     uint8_t vbatscale;                      // adjust this to match battery voltage to reported val
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     uint8_t vbatresdivval;                  // resistor divider R2 (default NAZE 10(K))
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h ****     uint8_t vbatresdivmultiplier;           // multiplier for scale (e.g. 2.5:1 ratio with multipli
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** } voltageSensorADCConfig_t;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** 
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\voltage.h **** PG_DECLARE_ARRAY(voltageSensorADCConfig_t, MAX_VOLTAGE_SENSOR_ADC, voltageSensorADCConfig);
 181              	 .loc 2 94 0
 182              	 .cfi_startproc
 183              	 
 184              	 
 185              	 
 186 0000 80B4     	 push {r7}
 187              	.LCFI16:
 188              	 .cfi_def_cfa_offset 4
 189              	 .cfi_offset 7,-4
 190 0002 83B0     	 sub sp,sp,#12
 191              	.LCFI17:
 192              	 .cfi_def_cfa_offset 16
 193 0004 00AF     	 add r7,sp,#0
 194              	.LCFI18:
 195              	 .cfi_def_cfa_register 7
 196 0006 7860     	 str r0,[r7,#4]
 197              	 .loc 2 94 0
 198 0008 7A68     	 ldr r2,[r7,#4]
 199 000a 1346     	 mov r3,r2
 200 000c 5B00     	 lsls r3,r3,#1
 201 000e 1344     	 add r3,r3,r2
 202 0010 034A     	 ldr r2,.L19
 203 0012 1344     	 add r3,r3,r2
 204 0014 1846     	 mov r0,r3
 205 0016 0C37     	 adds r7,r7,#12
 206              	.LCFI19:
 207              	 .cfi_def_cfa_offset 4
 208 0018 BD46     	 mov sp,r7
 209              	.LCFI20:
 210              	 .cfi_def_cfa_register 13
 211              	 
 212 001a 5DF8047B 	 ldr r7,[sp],#4
 213              	.LCFI21:
 214              	 .cfi_restore 7
 215              	 .cfi_def_cfa_offset 0
 216 001e 7047     	 bx lr
 217              	.L20:
 218              	 .align 2
 219              	.L19:
 220 0020 00000000 	 .word voltageSensorADCConfig_SystemArray
 221              	 .cfi_endproc
 222              	.LFE533:
 224              	 .section .text.voltageSensorADCConfigMutable,"ax",%progbits
 225              	 .align 2
 226              	 .thumb
 227              	 .thumb_func
 229              	voltageSensorADCConfigMutable:
 230              	.LFB534:
 231              	 .loc 2 94 0
 232              	 .cfi_startproc
 233              	 
 234              	 
 235              	 
 236 0000 80B4     	 push {r7}
 237              	.LCFI22:
 238              	 .cfi_def_cfa_offset 4
 239              	 .cfi_offset 7,-4
 240 0002 83B0     	 sub sp,sp,#12
 241              	.LCFI23:
 242              	 .cfi_def_cfa_offset 16
 243 0004 00AF     	 add r7,sp,#0
 244              	.LCFI24:
 245              	 .cfi_def_cfa_register 7
 246 0006 7860     	 str r0,[r7,#4]
 247              	 .loc 2 94 0
 248 0008 7A68     	 ldr r2,[r7,#4]
 249 000a 1346     	 mov r3,r2
 250 000c 5B00     	 lsls r3,r3,#1
 251 000e 1344     	 add r3,r3,r2
 252 0010 034A     	 ldr r2,.L23
 253 0012 1344     	 add r3,r3,r2
 254 0014 1846     	 mov r0,r3
 255 0016 0C37     	 adds r7,r7,#12
 256              	.LCFI25:
 257              	 .cfi_def_cfa_offset 4
 258 0018 BD46     	 mov sp,r7
 259              	.LCFI26:
 260              	 .cfi_def_cfa_register 13
 261              	 
 262 001a 5DF8047B 	 ldr r7,[sp],#4
 263              	.LCFI27:
 264              	 .cfi_restore 7
 265              	 .cfi_def_cfa_offset 0
 266 001e 7047     	 bx lr
 267              	.L24:
 268              	 .align 2
 269              	.L23:
 270 0020 00000000 	 .word voltageSensorADCConfig_SystemArray
 271              	 .cfi_endproc
 272              	.LFE534:
 274              	 .section .text.batteryConfig,"ax",%progbits
 275              	 .align 2
 276              	 .thumb
 277              	 .thumb_func
 279              	batteryConfig:
 280              	.LFB536:
 281              	 .file 3 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/battery.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "common/filter.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "common/time.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "sensors/current.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "sensors/voltage.h"
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** typedef struct batteryConfig_s {
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     // voltage
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatmaxcellvoltage;             // maximum voltage per cell, used for auto-detecting ba
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatmincellvoltage;             // minimum voltage per cell, this triggers battery crit
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatwarningcellvoltage;         // warning voltage per cell, this triggers battery warn
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatnotpresentcellvoltage;      // Between vbatmaxcellvoltage and 2*this is considered 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t lvcPercentage;                  // Percentage of throttle when lvc is triggered
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     voltageMeterSource_e voltageMeterSource; // source of battery voltage meter used, either ADC or
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     // current
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     currentMeterSource_e currentMeterSource; // source of battery current meter used, either ADC, V
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint16_t batteryCapacity;               // mAh
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     // warnings / alerts
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     bool useVBatAlerts;                     // Issue alerts based on VBat readings
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     bool useConsumptionAlerts;              // Issue alerts based on total power consumption
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t consumptionWarningPercentage;   // Percentage of remaining capacity that should trigger
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbathysteresis;                 // hysteresis for alarm, default 1 = 0.1V
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatfullcellvoltage;            // Cell voltage at which the battery is deemed to be "f
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** } batteryConfig_t;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** typedef struct lowVoltageCutoff_s {
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     bool enabled;
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t percentage;
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     timeUs_t startTime;
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** } lowVoltageCutoff_t;
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** PG_DECLARE(batteryConfig_t, batteryConfig);
 282              	 .loc 3 59 0
 283              	 .cfi_startproc
 284              	 
 285              	 
 286              	 
 287 0000 80B4     	 push {r7}
 288              	.LCFI28:
 289              	 .cfi_def_cfa_offset 4
 290              	 .cfi_offset 7,-4
 291 0002 00AF     	 add r7,sp,#0
 292              	.LCFI29:
 293              	 .cfi_def_cfa_register 7
 294              	 .loc 3 59 0
 295 0004 024B     	 ldr r3,.L27
 296 0006 1846     	 mov r0,r3
 297 0008 BD46     	 mov sp,r7
 298              	.LCFI30:
 299              	 .cfi_def_cfa_register 13
 300              	 
 301 000a 5DF8047B 	 ldr r7,[sp],#4
 302              	.LCFI31:
 303              	 .cfi_restore 7
 304              	 .cfi_def_cfa_offset 0
 305 000e 7047     	 bx lr
 306              	.L28:
 307              	 .align 2
 308              	.L27:
 309 0010 00000000 	 .word batteryConfig_System
 310              	 .cfi_endproc
 311              	.LFE536:
 313              	 .section .text.batteryConfigMutable,"ax",%progbits
 314              	 .align 2
 315              	 .thumb
 316              	 .thumb_func
 318              	batteryConfigMutable:
 319              	.LFB537:
 320              	 .loc 3 59 0
 321              	 .cfi_startproc
 322              	 
 323              	 
 324              	 
 325 0000 80B4     	 push {r7}
 326              	.LCFI32:
 327              	 .cfi_def_cfa_offset 4
 328              	 .cfi_offset 7,-4
 329 0002 00AF     	 add r7,sp,#0
 330              	.LCFI33:
 331              	 .cfi_def_cfa_register 7
 332              	 .loc 3 59 0
 333 0004 024B     	 ldr r3,.L31
 334 0006 1846     	 mov r0,r3
 335 0008 BD46     	 mov sp,r7
 336              	.LCFI34:
 337              	 .cfi_def_cfa_register 13
 338              	 
 339 000a 5DF8047B 	 ldr r7,[sp],#4
 340              	.LCFI35:
 341              	 .cfi_restore 7
 342              	 .cfi_def_cfa_offset 0
 343 000e 7047     	 bx lr
 344              	.L32:
 345              	 .align 2
 346              	.L31:
 347 0010 00000000 	 .word batteryConfig_System
 348              	 .cfi_endproc
 349              	.LFE537:
 351              	 .comm batteryConfig_voltageMeterSource,1,1
 352              	 .comm batteryConfig_currentMeterSource,1,1
 353              	 .comm batteryConfig_vbatmaxcellvoltage,1,1
 354              	 .comm voltageSensorADCConfig_vbatscale,1,1
 355              	 .comm currentSensorADCConfig_scale,2,2
 356              	 .comm currentSensorADCConfig_offset,2,2
 357              	 .comm currentSensorVirtualConfig_scale,2,2
 358              	 .comm currentSensorVirtualConfig_offset,2,2
 359              	 .section .text.cmsx_Power_onEnter,"ax",%progbits
 360              	 .align 2
 361              	 .thumb
 362              	 .thumb_func
 364              	cmsx_Power_onEnter:
 365              	.LFB542:
 366              	 .file 4 "../cleanflight/src/main/cms/cms_menu_power.c"
   1:../cleanflight/src/main/cms/cms_menu_power.c **** /*
   2:../cleanflight/src/main/cms/cms_menu_power.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/cms/cms_menu_power.c ****  *
   4:../cleanflight/src/main/cms/cms_menu_power.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/cms/cms_menu_power.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/cms/cms_menu_power.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/cms/cms_menu_power.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/cms/cms_menu_power.c ****  * any later version.
   9:../cleanflight/src/main/cms/cms_menu_power.c ****  *
  10:../cleanflight/src/main/cms/cms_menu_power.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/cms/cms_menu_power.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/cms/cms_menu_power.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/cms/cms_menu_power.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/cms/cms_menu_power.c ****  *
  15:../cleanflight/src/main/cms/cms_menu_power.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/cms/cms_menu_power.c ****  * along with this software.
  17:../cleanflight/src/main/cms/cms_menu_power.c ****  *
  18:../cleanflight/src/main/cms/cms_menu_power.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/cms/cms_menu_power.c ****  */
  20:../cleanflight/src/main/cms/cms_menu_power.c **** 
  21:../cleanflight/src/main/cms/cms_menu_power.c **** #include <stdbool.h>
  22:../cleanflight/src/main/cms/cms_menu_power.c **** #include <stdint.h>
  23:../cleanflight/src/main/cms/cms_menu_power.c **** #include <string.h>
  24:../cleanflight/src/main/cms/cms_menu_power.c **** #include <ctype.h>
  25:../cleanflight/src/main/cms/cms_menu_power.c **** 
  26:../cleanflight/src/main/cms/cms_menu_power.c **** #include "platform.h"
  27:../cleanflight/src/main/cms/cms_menu_power.c **** 
  28:../cleanflight/src/main/cms/cms_menu_power.c **** #ifdef USE_CMS
  29:../cleanflight/src/main/cms/cms_menu_power.c **** 
  30:../cleanflight/src/main/cms/cms_menu_power.c **** #include "cms/cms.h"
  31:../cleanflight/src/main/cms/cms_menu_power.c **** #include "cms/cms_types.h"
  32:../cleanflight/src/main/cms/cms_menu_power.c **** #include "cms/cms_menu_power.h"
  33:../cleanflight/src/main/cms/cms_menu_power.c **** 
  34:../cleanflight/src/main/cms/cms_menu_power.c **** #include "config/feature.h"
  35:../cleanflight/src/main/cms/cms_menu_power.c **** 
  36:../cleanflight/src/main/cms/cms_menu_power.c **** #include "sensors/battery.h"
  37:../cleanflight/src/main/cms/cms_menu_power.c **** #include "sensors/current.h"
  38:../cleanflight/src/main/cms/cms_menu_power.c **** #include "sensors/voltage.h"
  39:../cleanflight/src/main/cms/cms_menu_power.c **** 
  40:../cleanflight/src/main/cms/cms_menu_power.c **** #include "fc/config.h"
  41:../cleanflight/src/main/cms/cms_menu_power.c **** 
  42:../cleanflight/src/main/cms/cms_menu_power.c **** voltageMeterSource_e batteryConfig_voltageMeterSource;
  43:../cleanflight/src/main/cms/cms_menu_power.c **** currentMeterSource_e batteryConfig_currentMeterSource;
  44:../cleanflight/src/main/cms/cms_menu_power.c **** 
  45:../cleanflight/src/main/cms/cms_menu_power.c **** uint8_t batteryConfig_vbatmaxcellvoltage;
  46:../cleanflight/src/main/cms/cms_menu_power.c **** 
  47:../cleanflight/src/main/cms/cms_menu_power.c **** uint8_t voltageSensorADCConfig_vbatscale;
  48:../cleanflight/src/main/cms/cms_menu_power.c **** 
  49:../cleanflight/src/main/cms/cms_menu_power.c **** int16_t currentSensorADCConfig_scale;
  50:../cleanflight/src/main/cms/cms_menu_power.c **** int16_t currentSensorADCConfig_offset;
  51:../cleanflight/src/main/cms/cms_menu_power.c **** 
  52:../cleanflight/src/main/cms/cms_menu_power.c **** #ifdef USE_VIRTUAL_CURRENT_METER
  53:../cleanflight/src/main/cms/cms_menu_power.c **** int16_t currentSensorVirtualConfig_scale;
  54:../cleanflight/src/main/cms/cms_menu_power.c **** int16_t currentSensorVirtualConfig_offset;
  55:../cleanflight/src/main/cms/cms_menu_power.c **** #endif
  56:../cleanflight/src/main/cms/cms_menu_power.c **** 
  57:../cleanflight/src/main/cms/cms_menu_power.c **** static long cmsx_Power_onEnter(void)
  58:../cleanflight/src/main/cms/cms_menu_power.c **** {
 367              	 .loc 4 58 0
 368              	 .cfi_startproc
 369              	 
 370              	 
 371 0000 80B5     	 push {r7,lr}
 372              	.LCFI36:
 373              	 .cfi_def_cfa_offset 8
 374              	 .cfi_offset 7,-8
 375              	 .cfi_offset 14,-4
 376 0002 00AF     	 add r7,sp,#0
 377              	.LCFI37:
 378              	 .cfi_def_cfa_register 7
  59:../cleanflight/src/main/cms/cms_menu_power.c ****     batteryConfig_voltageMeterSource = batteryConfig()->voltageMeterSource;
 379              	 .loc 4 59 0
 380 0004 FFF7FEFF 	 bl batteryConfig
 381 0008 0346     	 mov r3,r0
 382 000a 5A79     	 ldrb r2,[r3,#5]
 383 000c 1B4B     	 ldr r3,.L35
 384 000e 1A70     	 strb r2,[r3]
  60:../cleanflight/src/main/cms/cms_menu_power.c ****     batteryConfig_currentMeterSource = batteryConfig()->currentMeterSource;
 385              	 .loc 4 60 0
 386 0010 FFF7FEFF 	 bl batteryConfig
 387 0014 0346     	 mov r3,r0
 388 0016 9A79     	 ldrb r2,[r3,#6]
 389 0018 194B     	 ldr r3,.L35+4
 390 001a 1A70     	 strb r2,[r3]
  61:../cleanflight/src/main/cms/cms_menu_power.c **** 
  62:../cleanflight/src/main/cms/cms_menu_power.c ****     batteryConfig_vbatmaxcellvoltage = batteryConfig()->vbatmaxcellvoltage;
 391              	 .loc 4 62 0
 392 001c FFF7FEFF 	 bl batteryConfig
 393 0020 0346     	 mov r3,r0
 394 0022 1A78     	 ldrb r2,[r3]
 395 0024 174B     	 ldr r3,.L35+8
 396 0026 1A70     	 strb r2,[r3]
  63:../cleanflight/src/main/cms/cms_menu_power.c **** 
  64:../cleanflight/src/main/cms/cms_menu_power.c ****     voltageSensorADCConfig_vbatscale = voltageSensorADCConfig(0)->vbatscale;
 397              	 .loc 4 64 0
 398 0028 0020     	 movs r0,#0
 399 002a FFF7FEFF 	 bl voltageSensorADCConfig
 400 002e 0346     	 mov r3,r0
 401 0030 1A78     	 ldrb r2,[r3]
 402 0032 154B     	 ldr r3,.L35+12
 403 0034 1A70     	 strb r2,[r3]
  65:../cleanflight/src/main/cms/cms_menu_power.c **** 
  66:../cleanflight/src/main/cms/cms_menu_power.c ****     currentSensorADCConfig_scale = currentSensorADCConfig()->scale;
 404              	 .loc 4 66 0
 405 0036 FFF7FEFF 	 bl currentSensorADCConfig
 406 003a 0346     	 mov r3,r0
 407 003c B3F90030 	 ldrsh r3,[r3]
 408 0040 9AB2     	 uxth r2,r3
 409 0042 124B     	 ldr r3,.L35+16
 410 0044 1A80     	 strh r2,[r3]
  67:../cleanflight/src/main/cms/cms_menu_power.c ****     currentSensorADCConfig_offset = currentSensorADCConfig()->offset;
 411              	 .loc 4 67 0
 412 0046 FFF7FEFF 	 bl currentSensorADCConfig
 413 004a 0346     	 mov r3,r0
 414 004c B3F90230 	 ldrsh r3,[r3,#2]
 415 0050 9AB2     	 uxth r2,r3
 416 0052 0F4B     	 ldr r3,.L35+20
 417 0054 1A80     	 strh r2,[r3]
  68:../cleanflight/src/main/cms/cms_menu_power.c **** 
  69:../cleanflight/src/main/cms/cms_menu_power.c **** #ifdef USE_VIRTUAL_CURRENT_METER
  70:../cleanflight/src/main/cms/cms_menu_power.c ****     currentSensorVirtualConfig_scale = currentSensorVirtualConfig()->scale;
 418              	 .loc 4 70 0
 419 0056 FFF7FEFF 	 bl currentSensorVirtualConfig
 420 005a 0346     	 mov r3,r0
 421 005c B3F90030 	 ldrsh r3,[r3]
 422 0060 9AB2     	 uxth r2,r3
 423 0062 0C4B     	 ldr r3,.L35+24
 424 0064 1A80     	 strh r2,[r3]
  71:../cleanflight/src/main/cms/cms_menu_power.c ****     currentSensorVirtualConfig_offset = currentSensorVirtualConfig()->offset;
 425              	 .loc 4 71 0
 426 0066 FFF7FEFF 	 bl currentSensorVirtualConfig
 427 006a 0346     	 mov r3,r0
 428 006c 5B88     	 ldrh r3,[r3,#2]
 429 006e 9BB2     	 uxth r3,r3
 430 0070 9AB2     	 uxth r2,r3
 431 0072 094B     	 ldr r3,.L35+28
 432 0074 1A80     	 strh r2,[r3]
  72:../cleanflight/src/main/cms/cms_menu_power.c **** #endif
  73:../cleanflight/src/main/cms/cms_menu_power.c **** 
  74:../cleanflight/src/main/cms/cms_menu_power.c ****     return 0;
 433              	 .loc 4 74 0
 434 0076 0023     	 movs r3,#0
  75:../cleanflight/src/main/cms/cms_menu_power.c **** }
 435              	 .loc 4 75 0
 436 0078 1846     	 mov r0,r3
 437 007a 80BD     	 pop {r7,pc}
 438              	.L36:
 439              	 .align 2
 440              	.L35:
 441 007c 00000000 	 .word batteryConfig_voltageMeterSource
 442 0080 00000000 	 .word batteryConfig_currentMeterSource
 443 0084 00000000 	 .word batteryConfig_vbatmaxcellvoltage
 444 0088 00000000 	 .word voltageSensorADCConfig_vbatscale
 445 008c 00000000 	 .word currentSensorADCConfig_scale
 446 0090 00000000 	 .word currentSensorADCConfig_offset
 447 0094 00000000 	 .word currentSensorVirtualConfig_scale
 448 0098 00000000 	 .word currentSensorVirtualConfig_offset
 449              	 .cfi_endproc
 450              	.LFE542:
 452              	 .section .text.cmsx_Power_onExit,"ax",%progbits
 453              	 .align 2
 454              	 .thumb
 455              	 .thumb_func
 457              	cmsx_Power_onExit:
 458              	.LFB543:
  76:../cleanflight/src/main/cms/cms_menu_power.c **** 
  77:../cleanflight/src/main/cms/cms_menu_power.c **** static long cmsx_Power_onExit(const OSD_Entry *self)
  78:../cleanflight/src/main/cms/cms_menu_power.c **** {
 459              	 .loc 4 78 0
 460              	 .cfi_startproc
 461              	 
 462              	 
 463 0000 80B5     	 push {r7,lr}
 464              	.LCFI38:
 465              	 .cfi_def_cfa_offset 8
 466              	 .cfi_offset 7,-8
 467              	 .cfi_offset 14,-4
 468 0002 82B0     	 sub sp,sp,#8
 469              	.LCFI39:
 470              	 .cfi_def_cfa_offset 16
 471 0004 00AF     	 add r7,sp,#0
 472              	.LCFI40:
 473              	 .cfi_def_cfa_register 7
 474 0006 7860     	 str r0,[r7,#4]
  79:../cleanflight/src/main/cms/cms_menu_power.c ****     UNUSED(self);
  80:../cleanflight/src/main/cms/cms_menu_power.c **** 
  81:../cleanflight/src/main/cms/cms_menu_power.c ****     batteryConfigMutable()->voltageMeterSource = batteryConfig_voltageMeterSource;
 475              	 .loc 4 81 0
 476 0008 FFF7FEFF 	 bl batteryConfigMutable
 477 000c 0246     	 mov r2,r0
 478 000e 1A4B     	 ldr r3,.L39
 479 0010 1B78     	 ldrb r3,[r3]
 480 0012 5371     	 strb r3,[r2,#5]
  82:../cleanflight/src/main/cms/cms_menu_power.c ****     batteryConfigMutable()->currentMeterSource = batteryConfig_currentMeterSource;
 481              	 .loc 4 82 0
 482 0014 FFF7FEFF 	 bl batteryConfigMutable
 483 0018 0246     	 mov r2,r0
 484 001a 184B     	 ldr r3,.L39+4
 485 001c 1B78     	 ldrb r3,[r3]
 486 001e 9371     	 strb r3,[r2,#6]
  83:../cleanflight/src/main/cms/cms_menu_power.c **** 
  84:../cleanflight/src/main/cms/cms_menu_power.c ****     batteryConfigMutable()->vbatmaxcellvoltage = batteryConfig_vbatmaxcellvoltage;
 487              	 .loc 4 84 0
 488 0020 FFF7FEFF 	 bl batteryConfigMutable
 489 0024 0246     	 mov r2,r0
 490 0026 164B     	 ldr r3,.L39+8
 491 0028 1B78     	 ldrb r3,[r3]
 492 002a 1370     	 strb r3,[r2]
  85:../cleanflight/src/main/cms/cms_menu_power.c **** 
  86:../cleanflight/src/main/cms/cms_menu_power.c ****     voltageSensorADCConfigMutable(0)->vbatscale = voltageSensorADCConfig_vbatscale;
 493              	 .loc 4 86 0
 494 002c 0020     	 movs r0,#0
 495 002e FFF7FEFF 	 bl voltageSensorADCConfigMutable
 496 0032 0246     	 mov r2,r0
 497 0034 134B     	 ldr r3,.L39+12
 498 0036 1B78     	 ldrb r3,[r3]
 499 0038 1370     	 strb r3,[r2]
  87:../cleanflight/src/main/cms/cms_menu_power.c **** 
  88:../cleanflight/src/main/cms/cms_menu_power.c ****     currentSensorADCConfigMutable()->scale = currentSensorADCConfig_scale;
 500              	 .loc 4 88 0
 501 003a FFF7FEFF 	 bl currentSensorADCConfigMutable
 502 003e 0246     	 mov r2,r0
 503 0040 114B     	 ldr r3,.L39+16
 504 0042 1B88     	 ldrh r3,[r3]
 505 0044 1380     	 strh r3,[r2]
  89:../cleanflight/src/main/cms/cms_menu_power.c ****     currentSensorADCConfigMutable()->offset = currentSensorADCConfig_offset;
 506              	 .loc 4 89 0
 507 0046 FFF7FEFF 	 bl currentSensorADCConfigMutable
 508 004a 0246     	 mov r2,r0
 509 004c 0F4B     	 ldr r3,.L39+20
 510 004e 1B88     	 ldrh r3,[r3]
 511 0050 5380     	 strh r3,[r2,#2]
  90:../cleanflight/src/main/cms/cms_menu_power.c **** 
  91:../cleanflight/src/main/cms/cms_menu_power.c **** #ifdef USE_VIRTUAL_CURRENT_METER
  92:../cleanflight/src/main/cms/cms_menu_power.c ****     currentSensorVirtualConfigMutable()->scale = currentSensorVirtualConfig_scale;
 512              	 .loc 4 92 0
 513 0052 FFF7FEFF 	 bl currentSensorVirtualConfigMutable
 514 0056 0246     	 mov r2,r0
 515 0058 0D4B     	 ldr r3,.L39+24
 516 005a 1B88     	 ldrh r3,[r3]
 517 005c 1380     	 strh r3,[r2]
  93:../cleanflight/src/main/cms/cms_menu_power.c ****     currentSensorVirtualConfigMutable()->offset = currentSensorVirtualConfig_offset;
 518              	 .loc 4 93 0
 519 005e FFF7FEFF 	 bl currentSensorVirtualConfigMutable
 520 0062 0246     	 mov r2,r0
 521 0064 0B4B     	 ldr r3,.L39+28
 522 0066 1B88     	 ldrh r3,[r3]
 523 0068 9BB2     	 uxth r3,r3
 524 006a 5380     	 strh r3,[r2,#2]
  94:../cleanflight/src/main/cms/cms_menu_power.c **** #endif
  95:../cleanflight/src/main/cms/cms_menu_power.c **** 
  96:../cleanflight/src/main/cms/cms_menu_power.c ****     return 0;
 525              	 .loc 4 96 0
 526 006c 0023     	 movs r3,#0
  97:../cleanflight/src/main/cms/cms_menu_power.c **** }
 527              	 .loc 4 97 0
 528 006e 1846     	 mov r0,r3
 529 0070 0837     	 adds r7,r7,#8
 530              	.LCFI41:
 531              	 .cfi_def_cfa_offset 8
 532 0072 BD46     	 mov sp,r7
 533              	.LCFI42:
 534              	 .cfi_def_cfa_register 13
 535              	 
 536 0074 80BD     	 pop {r7,pc}
 537              	.L40:
 538 0076 00BF     	 .align 2
 539              	.L39:
 540 0078 00000000 	 .word batteryConfig_voltageMeterSource
 541 007c 00000000 	 .word batteryConfig_currentMeterSource
 542 0080 00000000 	 .word batteryConfig_vbatmaxcellvoltage
 543 0084 00000000 	 .word voltageSensorADCConfig_vbatscale
 544 0088 00000000 	 .word currentSensorADCConfig_scale
 545 008c 00000000 	 .word currentSensorADCConfig_offset
 546 0090 00000000 	 .word currentSensorVirtualConfig_scale
 547 0094 00000000 	 .word currentSensorVirtualConfig_offset
 548              	 .cfi_endproc
 549              	.LFE543:
 551              	 .section .data.__compound_literal.0,"aw",%progbits
 552              	 .align 2
 555              	__compound_literal.0:
 556 0000 00000000 	 .word batteryConfig_voltageMeterSource
 557 0004 02       	 .byte 2
 558 0005 00000000 	 .4byte voltageMeterSourceNames
 559 0009 000000   	 .section .data.__compound_literal.1,"aw",%progbits
 560              	 .align 2
 563              	__compound_literal.1:
 564 0000 00000000 	 .word batteryConfig_currentMeterSource
 565 0004 04       	 .byte 4
 566 0005 00000000 	 .4byte currentMeterSourceNames
 567 0009 000000   	 .section .data.__compound_literal.2,"aw",%progbits
 568              	 .align 2
 571              	__compound_literal.2:
 572 0000 00000000 	 .word batteryConfig_vbatmaxcellvoltage
 573 0004 0A       	 .byte 10
 574 0005 32       	 .byte 50
 575 0006 01       	 .byte 1
 576 0007 00       	 .section .data.__compound_literal.3,"aw",%progbits
 577              	 .align 2
 580              	__compound_literal.3:
 581 0000 00000000 	 .word voltageSensorADCConfig_vbatscale
 582 0004 00       	 .byte 0
 583 0005 FF       	 .byte -1
 584 0006 01       	 .byte 1
 585 0007 00       	 .section .data.__compound_literal.4,"aw",%progbits
 586              	 .align 2
 589              	__compound_literal.4:
 590 0000 00000000 	 .word currentSensorADCConfig_scale
 591 0004 80C1     	 .short -16000
 592 0006 803E     	 .short 16000
 593 0008 0500     	 .short 5
 594 000a 0000     	 .section .data.__compound_literal.5,"aw",%progbits
 595              	 .align 2
 598              	__compound_literal.5:
 599 0000 00000000 	 .word currentSensorADCConfig_offset
 600 0004 80C1     	 .short -16000
 601 0006 803E     	 .short 16000
 602 0008 0500     	 .short 5
 603 000a 0000     	 .section .data.__compound_literal.6,"aw",%progbits
 604              	 .align 2
 607              	__compound_literal.6:
 608 0000 00000000 	 .word currentSensorVirtualConfig_scale
 609 0004 80C1     	 .short -16000
 610 0006 803E     	 .short 16000
 611 0008 0500     	 .short 5
 612 000a 0000     	 .section .data.__compound_literal.7,"aw",%progbits
 613              	 .align 2
 616              	__compound_literal.7:
 617 0000 00000000 	 .word currentSensorVirtualConfig_offset
 618 0004 80C1     	 .short -16000
 619 0006 803E     	 .short 16000
 620 0008 0500     	 .short 5
 621 000a 0000     	 .section .rodata
 622              	 .align 2
 623              	.LC0:
 624 0000 2D2D2050 	 .ascii "-- POWER --\000"
 624      4F574552 
 624      202D2D00 
 625              	 .align 2
 626              	.LC1:
 627 000c 56204D45 	 .ascii "V METER\000"
 627      54455200 
 628              	 .align 2
 629              	.LC2:
 630 0014 49204D45 	 .ascii "I METER\000"
 630      54455200 
 631              	 .align 2
 632              	.LC3:
 633 001c 56424154 	 .ascii "VBAT CLMAX\000"
 633      20434C4D 
 633      415800
 634 0027 00       	 .align 2
 635              	.LC4:
 636 0028 56424154 	 .ascii "VBAT SCALE\000"
 636      20534341 
 636      4C4500
 637 0033 00       	 .align 2
 638              	.LC5:
 639 0034 49424154 	 .ascii "IBAT SCALE\000"
 639      20534341 
 639      4C4500
 640 003f 00       	 .align 2
 641              	.LC6:
 642 0040 49424154 	 .ascii "IBAT OFFSET\000"
 642      204F4646 
 642      53455400 
 643              	 .align 2
 644              	.LC7:
 645 004c 49424154 	 .ascii "IBAT VIRT SCALE\000"
 645      20564952 
 645      54205343 
 645      414C4500 
 646              	 .align 2
 647              	.LC8:
 648 005c 49424154 	 .ascii "IBAT VIRT OFFSET\000"
 648      20564952 
 648      54204F46 
 648      46534554 
 648      00
 649 006d 000000   	 .align 2
 650              	.LC9:
 651 0070 4241434B 	 .ascii "BACK\000"
 651      00
 652 0075 000000   	 .section .data.cmsx_menuPowerEntries,"aw",%progbits
 653              	 .align 2
 656              	cmsx_menuPowerEntries:
 657 0000 00000000 	 .word .LC0
 658 0004 00       	 .byte 0
 659 0005 00000000 	 .4byte 0
 660 0009 00000000 	 .4byte 0
 661 000d 00       	 .byte 0
 662 000e 0C000000 	 .4byte .LC1
 663 0012 0D       	 .byte 13
 664 0013 00000000 	 .4byte 0
 665 0017 00000000 	 .4byte __compound_literal.0
 666 001b 00       	 .byte 0
 667 001c 14000000 	 .word .LC2
 668 0020 0D       	 .byte 13
 669 0021 00000000 	 .4byte 0
 670 0025 00000000 	 .4byte __compound_literal.1
 671 0029 00       	 .byte 0
 672 002a 1C000000 	 .4byte .LC3
 673 002e 07       	 .byte 7
 674 002f 00000000 	 .4byte 0
 675 0033 00000000 	 .4byte __compound_literal.2
 676 0037 00       	 .byte 0
 677 0038 28000000 	 .word .LC4
 678 003c 07       	 .byte 7
 679 003d 00000000 	 .4byte 0
 680 0041 00000000 	 .4byte __compound_literal.3
 681 0045 00       	 .byte 0
 682 0046 34000000 	 .4byte .LC5
 683 004a 09       	 .byte 9
 684 004b 00000000 	 .4byte 0
 685 004f 00000000 	 .4byte __compound_literal.4
 686 0053 00       	 .byte 0
 687 0054 40000000 	 .word .LC6
 688 0058 09       	 .byte 9
 689 0059 00000000 	 .4byte 0
 690 005d 00000000 	 .4byte __compound_literal.5
 691 0061 00       	 .byte 0
 692 0062 4C000000 	 .4byte .LC7
 693 0066 09       	 .byte 9
 694 0067 00000000 	 .4byte 0
 695 006b 00000000 	 .4byte __compound_literal.6
 696 006f 00       	 .byte 0
 697 0070 5C000000 	 .word .LC8
 698 0074 09       	 .byte 9
 699 0075 00000000 	 .4byte 0
 700 0079 00000000 	 .4byte __compound_literal.7
 701 007d 00       	 .byte 0
 702 007e 70000000 	 .4byte .LC9
 703 0082 01       	 .byte 1
 704 0083 00000000 	 .4byte 0
 705 0087 00000000 	 .4byte 0
 706 008b 00       	 .byte 0
 707 008c 00000000 	 .word 0
 708 0090 0E       	 .byte 14
 709 0091 00000000 	 .4byte 0
 710 0095 00000000 	 .4byte 0
 711 0099 00       	 .byte 0
 712              	 .global cmsx_menuPower
 713 009a 0000     	 .section .data.cmsx_menuPower,"aw",%progbits
 714              	 .align 2
 717              	cmsx_menuPower:
 718 0000 00000000 	 .word cmsx_Power_onEnter
 719 0004 00000000 	 .word cmsx_Power_onExit
 720 0008 00000000 	 .word cmsx_menuPowerEntries
 721              	 .text
 722              	.Letext0:
 723              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 724              	 .file 6 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 725              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 726              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/display.h"
 727              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 728              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms_types.h"
 729              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 730              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 731              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 732              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
 733              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cms_menu_power.c
                            *COM*:00000004 pCurrentDisplay
    {standard input}:21     .text.currentSensorADCConfig:00000000 $t
    {standard input}:25     .text.currentSensorADCConfig:00000000 currentSensorADCConfig
    {standard input}:55     .text.currentSensorADCConfig:00000010 $d
    {standard input}:60     .text.currentSensorADCConfigMutable:00000000 $t
    {standard input}:64     .text.currentSensorADCConfigMutable:00000000 currentSensorADCConfigMutable
    {standard input}:93     .text.currentSensorADCConfigMutable:00000010 $d
    {standard input}:98     .text.currentSensorVirtualConfig:00000000 $t
    {standard input}:102    .text.currentSensorVirtualConfig:00000000 currentSensorVirtualConfig
    {standard input}:131    .text.currentSensorVirtualConfig:00000010 $d
    {standard input}:136    .text.currentSensorVirtualConfigMutable:00000000 $t
    {standard input}:140    .text.currentSensorVirtualConfigMutable:00000000 currentSensorVirtualConfigMutable
    {standard input}:169    .text.currentSensorVirtualConfigMutable:00000010 $d
    {standard input}:174    .text.voltageSensorADCConfig:00000000 $t
    {standard input}:178    .text.voltageSensorADCConfig:00000000 voltageSensorADCConfig
    {standard input}:220    .text.voltageSensorADCConfig:00000020 $d
    {standard input}:225    .text.voltageSensorADCConfigMutable:00000000 $t
    {standard input}:229    .text.voltageSensorADCConfigMutable:00000000 voltageSensorADCConfigMutable
    {standard input}:270    .text.voltageSensorADCConfigMutable:00000020 $d
    {standard input}:275    .text.batteryConfig:00000000 $t
    {standard input}:279    .text.batteryConfig:00000000 batteryConfig
    {standard input}:309    .text.batteryConfig:00000010 $d
    {standard input}:314    .text.batteryConfigMutable:00000000 $t
    {standard input}:318    .text.batteryConfigMutable:00000000 batteryConfigMutable
    {standard input}:347    .text.batteryConfigMutable:00000010 $d
                            *COM*:00000001 batteryConfig_voltageMeterSource
                            *COM*:00000001 batteryConfig_currentMeterSource
                            *COM*:00000001 batteryConfig_vbatmaxcellvoltage
                            *COM*:00000001 voltageSensorADCConfig_vbatscale
                            *COM*:00000002 currentSensorADCConfig_scale
                            *COM*:00000002 currentSensorADCConfig_offset
                            *COM*:00000002 currentSensorVirtualConfig_scale
                            *COM*:00000002 currentSensorVirtualConfig_offset
    {standard input}:360    .text.cmsx_Power_onEnter:00000000 $t
    {standard input}:364    .text.cmsx_Power_onEnter:00000000 cmsx_Power_onEnter
    {standard input}:441    .text.cmsx_Power_onEnter:0000007c $d
    {standard input}:453    .text.cmsx_Power_onExit:00000000 $t
    {standard input}:457    .text.cmsx_Power_onExit:00000000 cmsx_Power_onExit
    {standard input}:540    .text.cmsx_Power_onExit:00000078 $d
    {standard input}:552    .data.__compound_literal.0:00000000 $d
    {standard input}:555    .data.__compound_literal.0:00000000 __compound_literal.0
    {standard input}:560    .data.__compound_literal.1:00000000 $d
    {standard input}:563    .data.__compound_literal.1:00000000 __compound_literal.1
    {standard input}:568    .data.__compound_literal.2:00000000 $d
    {standard input}:571    .data.__compound_literal.2:00000000 __compound_literal.2
    {standard input}:577    .data.__compound_literal.3:00000000 $d
    {standard input}:580    .data.__compound_literal.3:00000000 __compound_literal.3
    {standard input}:586    .data.__compound_literal.4:00000000 $d
    {standard input}:589    .data.__compound_literal.4:00000000 __compound_literal.4
    {standard input}:595    .data.__compound_literal.5:00000000 $d
    {standard input}:598    .data.__compound_literal.5:00000000 __compound_literal.5
    {standard input}:604    .data.__compound_literal.6:00000000 $d
    {standard input}:607    .data.__compound_literal.6:00000000 __compound_literal.6
    {standard input}:613    .data.__compound_literal.7:00000000 $d
    {standard input}:616    .data.__compound_literal.7:00000000 __compound_literal.7
    {standard input}:622    .rodata:00000000 $d
    {standard input}:653    .data.cmsx_menuPowerEntries:00000000 $d
    {standard input}:656    .data.cmsx_menuPowerEntries:00000000 cmsx_menuPowerEntries
    {standard input}:717    .data.cmsx_menuPower:00000000 cmsx_menuPower
    {standard input}:714    .data.cmsx_menuPower:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
currentSensorADCConfig_System
currentSensorVirtualConfig_System
voltageSensorADCConfig_SystemArray
batteryConfig_System
voltageMeterSourceNames
currentMeterSourceNames
