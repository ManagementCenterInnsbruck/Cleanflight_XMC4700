   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "printf.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.printfSerialPort,"aw",%nobits
  20              	 .align 2
  23              	printfSerialPort:
  24 0000 00000000 	 .space 4
  25              	 .section .bss.stdout_putf,"aw",%nobits
  26              	 .align 2
  29              	stdout_putf:
  30 0000 00000000 	 .space 4
  31              	 .section .bss.stdout_putp,"aw",%nobits
  32              	 .align 2
  35              	stdout_putp:
  36 0000 00000000 	 .space 4
  37              	 .section .text.putchw,"ax",%progbits
  38              	 .align 2
  39              	 .thumb
  40              	 .thumb_func
  42              	putchw:
  43              	.LFB528:
  44              	 .file 1 "../cleanflight/src/main/common/printf.c"
   1:../cleanflight/src/main/common/printf.c **** /*
   2:../cleanflight/src/main/common/printf.c ****  * Copyright (c) 2004,2012 Kustaa Nyholm / SpareTimeLabs
   3:../cleanflight/src/main/common/printf.c ****  *
   4:../cleanflight/src/main/common/printf.c ****  * All rights reserved.
   5:../cleanflight/src/main/common/printf.c ****  *
   6:../cleanflight/src/main/common/printf.c ****  * Redistribution and use in source and binary forms, with or without modification,
   7:../cleanflight/src/main/common/printf.c ****  * are permitted provided that the following conditions are met:
   8:../cleanflight/src/main/common/printf.c ****  *
   9:../cleanflight/src/main/common/printf.c ****  * Redistributions of source code must retain the above copyright notice, this list
  10:../cleanflight/src/main/common/printf.c ****  * of conditions and the following disclaimer.
  11:../cleanflight/src/main/common/printf.c ****  *
  12:../cleanflight/src/main/common/printf.c ****  * Redistributions in binary form must reproduce the above copyright notice, this
  13:../cleanflight/src/main/common/printf.c ****  * list of conditions and the following disclaimer in the documentation and/or other
  14:../cleanflight/src/main/common/printf.c ****  * materials provided with the distribution.
  15:../cleanflight/src/main/common/printf.c ****  *
  16:../cleanflight/src/main/common/printf.c ****  * Neither the name of the Kustaa Nyholm or SpareTimeLabs nor the names of its
  17:../cleanflight/src/main/common/printf.c ****  * contributors may be used to endorse or promote products derived from this software
  18:../cleanflight/src/main/common/printf.c ****  * without specific prior written permission.
  19:../cleanflight/src/main/common/printf.c ****  *
  20:../cleanflight/src/main/common/printf.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:../cleanflight/src/main/common/printf.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  22:../cleanflight/src/main/common/printf.c ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  23:../cleanflight/src/main/common/printf.c ****  * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  24:../cleanflight/src/main/common/printf.c ****  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  25:../cleanflight/src/main/common/printf.c ****  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  26:../cleanflight/src/main/common/printf.c ****  * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
  27:../cleanflight/src/main/common/printf.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:../cleanflight/src/main/common/printf.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  29:../cleanflight/src/main/common/printf.c ****  * OF SUCH DAMAGE.
  30:../cleanflight/src/main/common/printf.c ****  */
  31:../cleanflight/src/main/common/printf.c **** 
  32:../cleanflight/src/main/common/printf.c **** #include <stdbool.h>
  33:../cleanflight/src/main/common/printf.c **** #include <stdint.h>
  34:../cleanflight/src/main/common/printf.c **** #include <stdarg.h>
  35:../cleanflight/src/main/common/printf.c **** #include <stdlib.h>
  36:../cleanflight/src/main/common/printf.c **** 
  37:../cleanflight/src/main/common/printf.c **** #include "platform.h"
  38:../cleanflight/src/main/common/printf.c **** 
  39:../cleanflight/src/main/common/printf.c **** #include "build/build_config.h"
  40:../cleanflight/src/main/common/printf.c **** 
  41:../cleanflight/src/main/common/printf.c **** #include "common/utils.h"
  42:../cleanflight/src/main/common/printf.c **** 
  43:../cleanflight/src/main/common/printf.c **** #include "drivers/serial.h"
  44:../cleanflight/src/main/common/printf.c **** #include "io/serial.h"
  45:../cleanflight/src/main/common/printf.c **** 
  46:../cleanflight/src/main/common/printf.c **** #include "printf.h"
  47:../cleanflight/src/main/common/printf.c **** 
  48:../cleanflight/src/main/common/printf.c **** #ifdef REQUIRE_PRINTF_LONG_SUPPORT
  49:../cleanflight/src/main/common/printf.c **** #include "typeconversion.h"
  50:../cleanflight/src/main/common/printf.c **** #endif
  51:../cleanflight/src/main/common/printf.c **** 
  52:../cleanflight/src/main/common/printf.c **** static serialPort_t *printfSerialPort;
  53:../cleanflight/src/main/common/printf.c **** 
  54:../cleanflight/src/main/common/printf.c **** #ifdef REQUIRE_CC_ARM_PRINTF_SUPPORT
  55:../cleanflight/src/main/common/printf.c **** 
  56:../cleanflight/src/main/common/printf.c **** typedef void (*putcf) (void *, char);
  57:../cleanflight/src/main/common/printf.c **** static putcf stdout_putf;
  58:../cleanflight/src/main/common/printf.c **** static void *stdout_putp;
  59:../cleanflight/src/main/common/printf.c **** 
  60:../cleanflight/src/main/common/printf.c **** // print bf, padded from left to at least n characters.
  61:../cleanflight/src/main/common/printf.c **** // padding is zero ('0') if z!=0, space (' ') otherwise
  62:../cleanflight/src/main/common/printf.c **** static int putchw(void *putp, putcf putf, int n, char z, char *bf)
  63:../cleanflight/src/main/common/printf.c **** {
  45              	 .loc 1 63 0
  46              	 .cfi_startproc
  47              	 
  48              	 
  49 0000 80B5     	 push {r7,lr}
  50              	.LCFI0:
  51              	 .cfi_def_cfa_offset 8
  52              	 .cfi_offset 7,-8
  53              	 .cfi_offset 14,-4
  54 0002 88B0     	 sub sp,sp,#32
  55              	.LCFI1:
  56              	 .cfi_def_cfa_offset 40
  57 0004 00AF     	 add r7,sp,#0
  58              	.LCFI2:
  59              	 .cfi_def_cfa_register 7
  60 0006 F860     	 str r0,[r7,#12]
  61 0008 B960     	 str r1,[r7,#8]
  62 000a 7A60     	 str r2,[r7,#4]
  63 000c FB70     	 strb r3,[r7,#3]
  64:../cleanflight/src/main/common/printf.c ****     int written = 0;
  64              	 .loc 1 64 0
  65 000e 0023     	 movs r3,#0
  66 0010 FB61     	 str r3,[r7,#28]
  65:../cleanflight/src/main/common/printf.c ****     char fc = z ? '0' : ' ';
  67              	 .loc 1 65 0
  68 0012 FB78     	 ldrb r3,[r7,#3]
  69 0014 002B     	 cmp r3,#0
  70 0016 01D0     	 beq .L2
  71              	 .loc 1 65 0 is_stmt 0 discriminator 1
  72 0018 3023     	 movs r3,#48
  73 001a 00E0     	 b .L3
  74              	.L2:
  75              	 .loc 1 65 0 discriminator 2
  76 001c 2023     	 movs r3,#32
  77              	.L3:
  78              	 .loc 1 65 0 discriminator 4
  79 001e FB75     	 strb r3,[r7,#23]
  66:../cleanflight/src/main/common/printf.c ****     char ch;
  67:../cleanflight/src/main/common/printf.c ****     char *p = bf;
  80              	 .loc 1 67 0 is_stmt 1 discriminator 4
  81 0020 BB6A     	 ldr r3,[r7,#40]
  82 0022 BB61     	 str r3,[r7,#24]
  68:../cleanflight/src/main/common/printf.c ****     while (*p++ && n > 0)
  83              	 .loc 1 68 0 discriminator 4
  84 0024 02E0     	 b .L4
  85              	.L6:
  69:../cleanflight/src/main/common/printf.c ****         n--;
  86              	 .loc 1 69 0
  87 0026 7B68     	 ldr r3,[r7,#4]
  88 0028 013B     	 subs r3,r3,#1
  89 002a 7B60     	 str r3,[r7,#4]
  90              	.L4:
  68:../cleanflight/src/main/common/printf.c ****     while (*p++ && n > 0)
  91              	 .loc 1 68 0
  92 002c BB69     	 ldr r3,[r7,#24]
  93 002e 5A1C     	 adds r2,r3,#1
  94 0030 BA61     	 str r2,[r7,#24]
  95 0032 1B78     	 ldrb r3,[r3]
  96 0034 002B     	 cmp r3,#0
  97 0036 02D0     	 beq .L5
  68:../cleanflight/src/main/common/printf.c ****     while (*p++ && n > 0)
  98              	 .loc 1 68 0 is_stmt 0 discriminator 1
  99 0038 7B68     	 ldr r3,[r7,#4]
 100 003a 002B     	 cmp r3,#0
 101 003c F3DC     	 bgt .L6
 102              	.L5:
  70:../cleanflight/src/main/common/printf.c ****     while (n-- > 0) {
 103              	 .loc 1 70 0 is_stmt 1
 104 003e 07E0     	 b .L7
 105              	.L8:
  71:../cleanflight/src/main/common/printf.c ****         putf(putp, fc); written++;
 106              	 .loc 1 71 0
 107 0040 FA7D     	 ldrb r2,[r7,#23]
 108 0042 BB68     	 ldr r3,[r7,#8]
 109 0044 F868     	 ldr r0,[r7,#12]
 110 0046 1146     	 mov r1,r2
 111 0048 9847     	 blx r3
 112 004a FB69     	 ldr r3,[r7,#28]
 113 004c 0133     	 adds r3,r3,#1
 114 004e FB61     	 str r3,[r7,#28]
 115              	.L7:
  70:../cleanflight/src/main/common/printf.c ****     while (n-- > 0) {
 116              	 .loc 1 70 0
 117 0050 7B68     	 ldr r3,[r7,#4]
 118 0052 5A1E     	 subs r2,r3,#1
 119 0054 7A60     	 str r2,[r7,#4]
 120 0056 002B     	 cmp r3,#0
 121 0058 F2DC     	 bgt .L8
  72:../cleanflight/src/main/common/printf.c ****     }
  73:../cleanflight/src/main/common/printf.c ****     while ((ch = *bf++)) {
 122              	 .loc 1 73 0
 123 005a 07E0     	 b .L9
 124              	.L10:
  74:../cleanflight/src/main/common/printf.c ****         putf(putp, ch); written++;
 125              	 .loc 1 74 0
 126 005c BA7D     	 ldrb r2,[r7,#22]
 127 005e BB68     	 ldr r3,[r7,#8]
 128 0060 F868     	 ldr r0,[r7,#12]
 129 0062 1146     	 mov r1,r2
 130 0064 9847     	 blx r3
 131 0066 FB69     	 ldr r3,[r7,#28]
 132 0068 0133     	 adds r3,r3,#1
 133 006a FB61     	 str r3,[r7,#28]
 134              	.L9:
  73:../cleanflight/src/main/common/printf.c ****         putf(putp, ch); written++;
 135              	 .loc 1 73 0
 136 006c BB6A     	 ldr r3,[r7,#40]
 137 006e 5A1C     	 adds r2,r3,#1
 138 0070 BA62     	 str r2,[r7,#40]
 139 0072 1B78     	 ldrb r3,[r3]
 140 0074 BB75     	 strb r3,[r7,#22]
 141 0076 BB7D     	 ldrb r3,[r7,#22]
 142 0078 002B     	 cmp r3,#0
 143 007a EFD1     	 bne .L10
  75:../cleanflight/src/main/common/printf.c ****     }
  76:../cleanflight/src/main/common/printf.c ****     return written;
 144              	 .loc 1 76 0
 145 007c FB69     	 ldr r3,[r7,#28]
  77:../cleanflight/src/main/common/printf.c **** }
 146              	 .loc 1 77 0
 147 007e 1846     	 mov r0,r3
 148 0080 2037     	 adds r7,r7,#32
 149              	.LCFI3:
 150              	 .cfi_def_cfa_offset 8
 151 0082 BD46     	 mov sp,r7
 152              	.LCFI4:
 153              	 .cfi_def_cfa_register 13
 154              	 
 155 0084 80BD     	 pop {r7,pc}
 156              	 .cfi_endproc
 157              	.LFE528:
 159 0086 00BF     	 .section .text.tfp_format,"ax",%progbits
 160              	 .align 2
 161              	 .global tfp_format
 162              	 .thumb
 163              	 .thumb_func
 165              	tfp_format:
 166              	.LFB529:
  78:../cleanflight/src/main/common/printf.c **** 
  79:../cleanflight/src/main/common/printf.c **** // retrun number of bytes written
  80:../cleanflight/src/main/common/printf.c **** int tfp_format(void *putp, putcf putf, const char *fmt, va_list va)
  81:../cleanflight/src/main/common/printf.c **** {
 167              	 .loc 1 81 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171 0000 90B5     	 push {r4,r7,lr}
 172              	.LCFI5:
 173              	 .cfi_def_cfa_offset 12
 174              	 .cfi_offset 4,-12
 175              	 .cfi_offset 7,-8
 176              	 .cfi_offset 14,-4
 177 0002 8DB0     	 sub sp,sp,#52
 178              	.LCFI6:
 179              	 .cfi_def_cfa_offset 64
 180 0004 02AF     	 add r7,sp,#8
 181              	.LCFI7:
 182              	 .cfi_def_cfa 7,56
 183 0006 F860     	 str r0,[r7,#12]
 184 0008 B960     	 str r1,[r7,#8]
 185 000a 7A60     	 str r2,[r7,#4]
 186 000c 3B60     	 str r3,[r7]
  82:../cleanflight/src/main/common/printf.c ****     char bf[12];
  83:../cleanflight/src/main/common/printf.c ****     int written = 0;
 187              	 .loc 1 83 0
 188 000e 0023     	 movs r3,#0
 189 0010 7B62     	 str r3,[r7,#36]
  84:../cleanflight/src/main/common/printf.c ****     char ch;
  85:../cleanflight/src/main/common/printf.c **** 
  86:../cleanflight/src/main/common/printf.c ****     while ((ch = *(fmt++))) {
 190              	 .loc 1 86 0
 191 0012 2CE1     	 b .L13
 192              	.L38:
  87:../cleanflight/src/main/common/printf.c ****         if (ch != '%') {
 193              	 .loc 1 87 0
 194 0014 97F82330 	 ldrb r3,[r7,#35]
 195 0018 252B     	 cmp r3,#37
 196 001a 09D0     	 beq .L14
  88:../cleanflight/src/main/common/printf.c ****             putf(putp, ch); written++;
 197              	 .loc 1 88 0
 198 001c 97F82320 	 ldrb r2,[r7,#35]
 199 0020 BB68     	 ldr r3,[r7,#8]
 200 0022 F868     	 ldr r0,[r7,#12]
 201 0024 1146     	 mov r1,r2
 202 0026 9847     	 blx r3
 203 0028 7B6A     	 ldr r3,[r7,#36]
 204 002a 0133     	 adds r3,r3,#1
 205 002c 7B62     	 str r3,[r7,#36]
 206 002e 1EE1     	 b .L13
 207              	.L14:
 208              	.LBB2:
  89:../cleanflight/src/main/common/printf.c ****         } else {
  90:../cleanflight/src/main/common/printf.c ****             char lz = 0;
 209              	 .loc 1 90 0
 210 0030 0023     	 movs r3,#0
 211 0032 87F82230 	 strb r3,[r7,#34]
  91:../cleanflight/src/main/common/printf.c **** #ifdef  REQUIRE_PRINTF_LONG_SUPPORT
  92:../cleanflight/src/main/common/printf.c ****             char lng = 0;
 212              	 .loc 1 92 0
 213 0036 0023     	 movs r3,#0
 214 0038 87F82130 	 strb r3,[r7,#33]
  93:../cleanflight/src/main/common/printf.c **** #endif
  94:../cleanflight/src/main/common/printf.c ****             int w = 0;
 215              	 .loc 1 94 0
 216 003c 0023     	 movs r3,#0
 217 003e 3B61     	 str r3,[r7,#16]
  95:../cleanflight/src/main/common/printf.c ****             ch = *(fmt++);
 218              	 .loc 1 95 0
 219 0040 7B68     	 ldr r3,[r7,#4]
 220 0042 5A1C     	 adds r2,r3,#1
 221 0044 7A60     	 str r2,[r7,#4]
 222 0046 1B78     	 ldrb r3,[r3]
 223 0048 87F82330 	 strb r3,[r7,#35]
  96:../cleanflight/src/main/common/printf.c ****             if (ch == '0') {
 224              	 .loc 1 96 0
 225 004c 97F82330 	 ldrb r3,[r7,#35]
 226 0050 302B     	 cmp r3,#48
 227 0052 08D1     	 bne .L15
  97:../cleanflight/src/main/common/printf.c ****                 ch = *(fmt++);
 228              	 .loc 1 97 0
 229 0054 7B68     	 ldr r3,[r7,#4]
 230 0056 5A1C     	 adds r2,r3,#1
 231 0058 7A60     	 str r2,[r7,#4]
 232 005a 1B78     	 ldrb r3,[r3]
 233 005c 87F82330 	 strb r3,[r7,#35]
  98:../cleanflight/src/main/common/printf.c ****                 lz = 1;
 234              	 .loc 1 98 0
 235 0060 0123     	 movs r3,#1
 236 0062 87F82230 	 strb r3,[r7,#34]
 237              	.L15:
  99:../cleanflight/src/main/common/printf.c ****             }
 100:../cleanflight/src/main/common/printf.c ****             if (ch >= '0' && ch <= '9') {
 238              	 .loc 1 100 0
 239 0066 97F82330 	 ldrb r3,[r7,#35]
 240 006a 2F2B     	 cmp r3,#47
 241 006c 10D9     	 bls .L16
 242              	 .loc 1 100 0 is_stmt 0 discriminator 1
 243 006e 97F82330 	 ldrb r3,[r7,#35]
 244 0072 392B     	 cmp r3,#57
 245 0074 0CD8     	 bhi .L16
 101:../cleanflight/src/main/common/printf.c ****                 ch = a2i(ch, &fmt, 10, &w);
 246              	 .loc 1 101 0 is_stmt 1
 247 0076 97F82310 	 ldrb r1,[r7,#35]
 248 007a 3A1D     	 adds r2,r7,#4
 249 007c 07F11003 	 add r3,r7,#16
 250 0080 0846     	 mov r0,r1
 251 0082 1146     	 mov r1,r2
 252 0084 0A22     	 movs r2,#10
 253 0086 FFF7FEFF 	 bl a2i
 254 008a 0346     	 mov r3,r0
 255 008c 87F82330 	 strb r3,[r7,#35]
 256              	.L16:
 102:../cleanflight/src/main/common/printf.c ****             }
 103:../cleanflight/src/main/common/printf.c **** #ifdef  REQUIRE_PRINTF_LONG_SUPPORT
 104:../cleanflight/src/main/common/printf.c ****             if (ch == 'l') {
 257              	 .loc 1 104 0
 258 0090 97F82330 	 ldrb r3,[r7,#35]
 259 0094 6C2B     	 cmp r3,#108
 260 0096 08D1     	 bne .L17
 105:../cleanflight/src/main/common/printf.c ****                 ch = *(fmt++);
 261              	 .loc 1 105 0
 262 0098 7B68     	 ldr r3,[r7,#4]
 263 009a 5A1C     	 adds r2,r3,#1
 264 009c 7A60     	 str r2,[r7,#4]
 265 009e 1B78     	 ldrb r3,[r3]
 266 00a0 87F82330 	 strb r3,[r7,#35]
 106:../cleanflight/src/main/common/printf.c ****                 lng = 1;
 267              	 .loc 1 106 0
 268 00a4 0123     	 movs r3,#1
 269 00a6 87F82130 	 strb r3,[r7,#33]
 270              	.L17:
 107:../cleanflight/src/main/common/printf.c ****             }
 108:../cleanflight/src/main/common/printf.c **** #endif
 109:../cleanflight/src/main/common/printf.c ****             switch (ch) {
 271              	 .loc 1 109 0
 272 00aa 97F82330 	 ldrb r3,[r7,#35]
 273 00ae 642B     	 cmp r3,#100
 274 00b0 49D0     	 beq .L19
 275 00b2 642B     	 cmp r3,#100
 276 00b4 0EDC     	 bgt .L20
 277 00b6 252B     	 cmp r3,#37
 278 00b8 00F0C880 	 beq .L21
 279 00bc 252B     	 cmp r3,#37
 280 00be 03DC     	 bgt .L22
 281 00c0 002B     	 cmp r3,#0
 282 00c2 00F0E080 	 beq .L40
 110:../cleanflight/src/main/common/printf.c ****             case 0:
 111:../cleanflight/src/main/common/printf.c ****                 goto abort;
 112:../cleanflight/src/main/common/printf.c ****             case 'u':{
 113:../cleanflight/src/main/common/printf.c **** #ifdef  REQUIRE_PRINTF_LONG_SUPPORT
 114:../cleanflight/src/main/common/printf.c ****                     if (lng)
 115:../cleanflight/src/main/common/printf.c ****                         uli2a(va_arg(va, unsigned long int), 10, 0, bf);
 116:../cleanflight/src/main/common/printf.c ****                     else
 117:../cleanflight/src/main/common/printf.c **** #endif
 118:../cleanflight/src/main/common/printf.c ****                         ui2a(va_arg(va, unsigned int), 10, 0, bf);
 119:../cleanflight/src/main/common/printf.c ****                     written += putchw(putp, putf, w, lz, bf);
 120:../cleanflight/src/main/common/printf.c ****                     break;
 121:../cleanflight/src/main/common/printf.c ****                 }
 122:../cleanflight/src/main/common/printf.c ****             case 'd':{
 123:../cleanflight/src/main/common/printf.c **** #ifdef  REQUIRE_PRINTF_LONG_SUPPORT
 124:../cleanflight/src/main/common/printf.c ****                     if (lng)
 125:../cleanflight/src/main/common/printf.c ****                         li2a(va_arg(va, unsigned long int), bf);
 126:../cleanflight/src/main/common/printf.c ****                     else
 127:../cleanflight/src/main/common/printf.c **** #endif
 128:../cleanflight/src/main/common/printf.c ****                         i2a(va_arg(va, int), bf);
 129:../cleanflight/src/main/common/printf.c ****                     written += putchw(putp, putf, w, lz, bf);
 130:../cleanflight/src/main/common/printf.c ****                     break;
 131:../cleanflight/src/main/common/printf.c ****                 }
 132:../cleanflight/src/main/common/printf.c ****             case 'x':
 133:../cleanflight/src/main/common/printf.c ****             case 'X':
 134:../cleanflight/src/main/common/printf.c **** #ifdef  REQUIRE_PRINTF_LONG_SUPPORT
 135:../cleanflight/src/main/common/printf.c ****                 if (lng)
 136:../cleanflight/src/main/common/printf.c ****                     uli2a(va_arg(va, unsigned long int), 16, (ch == 'X'), bf);
 137:../cleanflight/src/main/common/printf.c ****                 else
 138:../cleanflight/src/main/common/printf.c **** #endif
 139:../cleanflight/src/main/common/printf.c ****                     ui2a(va_arg(va, unsigned int), 16, (ch == 'X'), bf);
 140:../cleanflight/src/main/common/printf.c ****                 written += putchw(putp, putf, w, lz, bf);
 141:../cleanflight/src/main/common/printf.c ****                 break;
 142:../cleanflight/src/main/common/printf.c ****             case 'c':
 143:../cleanflight/src/main/common/printf.c ****                 putf(putp, (char) (va_arg(va, int))); written++;
 144:../cleanflight/src/main/common/printf.c ****                 break;
 145:../cleanflight/src/main/common/printf.c ****             case 's':
 146:../cleanflight/src/main/common/printf.c ****                 written += putchw(putp, putf, w, 0, va_arg(va, char *));
 147:../cleanflight/src/main/common/printf.c ****                 break;
 148:../cleanflight/src/main/common/printf.c ****             case '%':
 149:../cleanflight/src/main/common/printf.c ****                 putf(putp, ch); written++;
 150:../cleanflight/src/main/common/printf.c ****                 break;
 151:../cleanflight/src/main/common/printf.c ****             case 'n':
 152:../cleanflight/src/main/common/printf.c ****                 *va_arg(va, int*) = written;
 153:../cleanflight/src/main/common/printf.c ****                 break;
 154:../cleanflight/src/main/common/printf.c ****             default:
 155:../cleanflight/src/main/common/printf.c ****                 break;
 283              	 .loc 1 155 0
 284 00c6 D2E0     	 b .L33
 285              	.L22:
 109:../cleanflight/src/main/common/printf.c ****             case 0:
 286              	 .loc 1 109 0
 287 00c8 582B     	 cmp r3,#88
 288 00ca 66D0     	 beq .L24
 289 00cc 632B     	 cmp r3,#99
 290 00ce 00F09F80 	 beq .L25
 291              	 .loc 1 155 0
 292 00d2 CCE0     	 b .L33
 293              	.L20:
 109:../cleanflight/src/main/common/printf.c ****             case 0:
 294              	 .loc 1 109 0
 295 00d4 732B     	 cmp r3,#115
 296 00d6 00F0A880 	 beq .L26
 297 00da 732B     	 cmp r3,#115
 298 00dc 03DC     	 bgt .L27
 299 00de 6E2B     	 cmp r3,#110
 300 00e0 00F0BE80 	 beq .L28
 301              	 .loc 1 155 0
 302 00e4 C3E0     	 b .L33
 303              	.L27:
 109:../cleanflight/src/main/common/printf.c ****             case 0:
 304              	 .loc 1 109 0
 305 00e6 752B     	 cmp r3,#117
 306 00e8 02D0     	 beq .L29
 307 00ea 782B     	 cmp r3,#120
 308 00ec 55D0     	 beq .L24
 309              	 .loc 1 155 0
 310 00ee BEE0     	 b .L33
 311              	.L29:
 114:../cleanflight/src/main/common/printf.c ****                         uli2a(va_arg(va, unsigned long int), 10, 0, bf);
 312              	 .loc 1 114 0
 313 00f0 97F82130 	 ldrb r3,[r7,#33]
 314 00f4 002B     	 cmp r3,#0
 315 00f6 0BD0     	 beq .L31
 115:../cleanflight/src/main/common/printf.c ****                     else
 316              	 .loc 1 115 0
 317 00f8 3B68     	 ldr r3,[r7]
 318 00fa 1A1D     	 adds r2,r3,#4
 319 00fc 3A60     	 str r2,[r7]
 320 00fe 1A68     	 ldr r2,[r3]
 321 0100 07F11403 	 add r3,r7,#20
 322 0104 1046     	 mov r0,r2
 323 0106 0A21     	 movs r1,#10
 324 0108 0022     	 movs r2,#0
 325 010a FFF7FEFF 	 bl uli2a
 326 010e 0AE0     	 b .L32
 327              	.L31:
 118:../cleanflight/src/main/common/printf.c ****                     written += putchw(putp, putf, w, lz, bf);
 328              	 .loc 1 118 0
 329 0110 3B68     	 ldr r3,[r7]
 330 0112 1A1D     	 adds r2,r3,#4
 331 0114 3A60     	 str r2,[r7]
 332 0116 1A68     	 ldr r2,[r3]
 333 0118 07F11403 	 add r3,r7,#20
 334 011c 1046     	 mov r0,r2
 335 011e 0A21     	 movs r1,#10
 336 0120 0022     	 movs r2,#0
 337 0122 FFF7FEFF 	 bl ui2a
 338              	.L32:
 119:../cleanflight/src/main/common/printf.c ****                     break;
 339              	 .loc 1 119 0
 340 0126 3A69     	 ldr r2,[r7,#16]
 341 0128 97F82240 	 ldrb r4,[r7,#34]
 342 012c 07F11403 	 add r3,r7,#20
 343 0130 0093     	 str r3,[sp]
 344 0132 F868     	 ldr r0,[r7,#12]
 345 0134 B968     	 ldr r1,[r7,#8]
 346 0136 2346     	 mov r3,r4
 347 0138 FFF7FEFF 	 bl putchw
 348 013c 0246     	 mov r2,r0
 349 013e 7B6A     	 ldr r3,[r7,#36]
 350 0140 1344     	 add r3,r3,r2
 351 0142 7B62     	 str r3,[r7,#36]
 120:../cleanflight/src/main/common/printf.c ****                 }
 352              	 .loc 1 120 0
 353 0144 93E0     	 b .L33
 354              	.L19:
 124:../cleanflight/src/main/common/printf.c ****                         li2a(va_arg(va, unsigned long int), bf);
 355              	 .loc 1 124 0
 356 0146 97F82130 	 ldrb r3,[r7,#33]
 357 014a 002B     	 cmp r3,#0
 358 014c 0BD0     	 beq .L34
 125:../cleanflight/src/main/common/printf.c ****                     else
 359              	 .loc 1 125 0
 360 014e 3B68     	 ldr r3,[r7]
 361 0150 1A1D     	 adds r2,r3,#4
 362 0152 3A60     	 str r2,[r7]
 363 0154 1B68     	 ldr r3,[r3]
 364 0156 1A46     	 mov r2,r3
 365 0158 07F11403 	 add r3,r7,#20
 366 015c 1046     	 mov r0,r2
 367 015e 1946     	 mov r1,r3
 368 0160 FFF7FEFF 	 bl li2a
 369 0164 09E0     	 b .L35
 370              	.L34:
 128:../cleanflight/src/main/common/printf.c ****                     written += putchw(putp, putf, w, lz, bf);
 371              	 .loc 1 128 0
 372 0166 3B68     	 ldr r3,[r7]
 373 0168 1A1D     	 adds r2,r3,#4
 374 016a 3A60     	 str r2,[r7]
 375 016c 1A68     	 ldr r2,[r3]
 376 016e 07F11403 	 add r3,r7,#20
 377 0172 1046     	 mov r0,r2
 378 0174 1946     	 mov r1,r3
 379 0176 FFF7FEFF 	 bl i2a
 380              	.L35:
 129:../cleanflight/src/main/common/printf.c ****                     break;
 381              	 .loc 1 129 0
 382 017a 3A69     	 ldr r2,[r7,#16]
 383 017c 97F82240 	 ldrb r4,[r7,#34]
 384 0180 07F11403 	 add r3,r7,#20
 385 0184 0093     	 str r3,[sp]
 386 0186 F868     	 ldr r0,[r7,#12]
 387 0188 B968     	 ldr r1,[r7,#8]
 388 018a 2346     	 mov r3,r4
 389 018c FFF7FEFF 	 bl putchw
 390 0190 0246     	 mov r2,r0
 391 0192 7B6A     	 ldr r3,[r7,#36]
 392 0194 1344     	 add r3,r3,r2
 393 0196 7B62     	 str r3,[r7,#36]
 130:../cleanflight/src/main/common/printf.c ****                 }
 394              	 .loc 1 130 0
 395 0198 69E0     	 b .L33
 396              	.L24:
 135:../cleanflight/src/main/common/printf.c ****                     uli2a(va_arg(va, unsigned long int), 16, (ch == 'X'), bf);
 397              	 .loc 1 135 0
 398 019a 97F82130 	 ldrb r3,[r7,#33]
 399 019e 002B     	 cmp r3,#0
 400 01a0 13D0     	 beq .L36
 136:../cleanflight/src/main/common/printf.c ****                 else
 401              	 .loc 1 136 0
 402 01a2 3B68     	 ldr r3,[r7]
 403 01a4 1A1D     	 adds r2,r3,#4
 404 01a6 3A60     	 str r2,[r7]
 405 01a8 1A68     	 ldr r2,[r3]
 406 01aa 97F82330 	 ldrb r3,[r7,#35]
 407 01ae 582B     	 cmp r3,#88
 408 01b0 0CBF     	 ite eq
 409 01b2 0123     	 moveq r3,#1
 410 01b4 0023     	 movne r3,#0
 411 01b6 DBB2     	 uxtb r3,r3
 412 01b8 1C46     	 mov r4,r3
 413 01ba 07F11403 	 add r3,r7,#20
 414 01be 1046     	 mov r0,r2
 415 01c0 1021     	 movs r1,#16
 416 01c2 2246     	 mov r2,r4
 417 01c4 FFF7FEFF 	 bl uli2a
 418 01c8 12E0     	 b .L37
 419              	.L36:
 139:../cleanflight/src/main/common/printf.c ****                 written += putchw(putp, putf, w, lz, bf);
 420              	 .loc 1 139 0
 421 01ca 3B68     	 ldr r3,[r7]
 422 01cc 1A1D     	 adds r2,r3,#4
 423 01ce 3A60     	 str r2,[r7]
 424 01d0 1A68     	 ldr r2,[r3]
 425 01d2 97F82330 	 ldrb r3,[r7,#35]
 426 01d6 582B     	 cmp r3,#88
 427 01d8 0CBF     	 ite eq
 428 01da 0123     	 moveq r3,#1
 429 01dc 0023     	 movne r3,#0
 430 01de DBB2     	 uxtb r3,r3
 431 01e0 1C46     	 mov r4,r3
 432 01e2 07F11403 	 add r3,r7,#20
 433 01e6 1046     	 mov r0,r2
 434 01e8 1021     	 movs r1,#16
 435 01ea 2246     	 mov r2,r4
 436 01ec FFF7FEFF 	 bl ui2a
 437              	.L37:
 140:../cleanflight/src/main/common/printf.c ****                 break;
 438              	 .loc 1 140 0
 439 01f0 3A69     	 ldr r2,[r7,#16]
 440 01f2 97F82240 	 ldrb r4,[r7,#34]
 441 01f6 07F11403 	 add r3,r7,#20
 442 01fa 0093     	 str r3,[sp]
 443 01fc F868     	 ldr r0,[r7,#12]
 444 01fe B968     	 ldr r1,[r7,#8]
 445 0200 2346     	 mov r3,r4
 446 0202 FFF7FEFF 	 bl putchw
 447 0206 0246     	 mov r2,r0
 448 0208 7B6A     	 ldr r3,[r7,#36]
 449 020a 1344     	 add r3,r3,r2
 450 020c 7B62     	 str r3,[r7,#36]
 141:../cleanflight/src/main/common/printf.c ****             case 'c':
 451              	 .loc 1 141 0
 452 020e 2EE0     	 b .L33
 453              	.L25:
 143:../cleanflight/src/main/common/printf.c ****                 break;
 454              	 .loc 1 143 0
 455 0210 3B68     	 ldr r3,[r7]
 456 0212 1A1D     	 adds r2,r3,#4
 457 0214 3A60     	 str r2,[r7]
 458 0216 1B68     	 ldr r3,[r3]
 459 0218 DAB2     	 uxtb r2,r3
 460 021a BB68     	 ldr r3,[r7,#8]
 461 021c F868     	 ldr r0,[r7,#12]
 462 021e 1146     	 mov r1,r2
 463 0220 9847     	 blx r3
 464 0222 7B6A     	 ldr r3,[r7,#36]
 465 0224 0133     	 adds r3,r3,#1
 466 0226 7B62     	 str r3,[r7,#36]
 144:../cleanflight/src/main/common/printf.c ****             case 's':
 467              	 .loc 1 144 0
 468 0228 21E0     	 b .L33
 469              	.L26:
 146:../cleanflight/src/main/common/printf.c ****                 break;
 470              	 .loc 1 146 0
 471 022a 3C69     	 ldr r4,[r7,#16]
 472 022c 3B68     	 ldr r3,[r7]
 473 022e 1A1D     	 adds r2,r3,#4
 474 0230 3A60     	 str r2,[r7]
 475 0232 1B68     	 ldr r3,[r3]
 476 0234 0093     	 str r3,[sp]
 477 0236 F868     	 ldr r0,[r7,#12]
 478 0238 B968     	 ldr r1,[r7,#8]
 479 023a 2246     	 mov r2,r4
 480 023c 0023     	 movs r3,#0
 481 023e FFF7FEFF 	 bl putchw
 482 0242 0246     	 mov r2,r0
 483 0244 7B6A     	 ldr r3,[r7,#36]
 484 0246 1344     	 add r3,r3,r2
 485 0248 7B62     	 str r3,[r7,#36]
 147:../cleanflight/src/main/common/printf.c ****             case '%':
 486              	 .loc 1 147 0
 487 024a 10E0     	 b .L33
 488              	.L21:
 149:../cleanflight/src/main/common/printf.c ****                 break;
 489              	 .loc 1 149 0
 490 024c 97F82320 	 ldrb r2,[r7,#35]
 491 0250 BB68     	 ldr r3,[r7,#8]
 492 0252 F868     	 ldr r0,[r7,#12]
 493 0254 1146     	 mov r1,r2
 494 0256 9847     	 blx r3
 495 0258 7B6A     	 ldr r3,[r7,#36]
 496 025a 0133     	 adds r3,r3,#1
 497 025c 7B62     	 str r3,[r7,#36]
 150:../cleanflight/src/main/common/printf.c ****             case 'n':
 498              	 .loc 1 150 0
 499 025e 06E0     	 b .L33
 500              	.L28:
 152:../cleanflight/src/main/common/printf.c ****                 break;
 501              	 .loc 1 152 0
 502 0260 3B68     	 ldr r3,[r7]
 503 0262 1A1D     	 adds r2,r3,#4
 504 0264 3A60     	 str r2,[r7]
 505 0266 1B68     	 ldr r3,[r3]
 506 0268 7A6A     	 ldr r2,[r7,#36]
 507 026a 1A60     	 str r2,[r3]
 153:../cleanflight/src/main/common/printf.c ****             default:
 508              	 .loc 1 153 0
 509 026c 00BF     	 nop
 510              	.L33:
 511              	.L13:
 512              	.LBE2:
  86:../cleanflight/src/main/common/printf.c ****         if (ch != '%') {
 513              	 .loc 1 86 0
 514 026e 7B68     	 ldr r3,[r7,#4]
 515 0270 5A1C     	 adds r2,r3,#1
 516 0272 7A60     	 str r2,[r7,#4]
 517 0274 1B78     	 ldrb r3,[r3]
 518 0276 87F82330 	 strb r3,[r7,#35]
 519 027a 97F82330 	 ldrb r3,[r7,#35]
 520 027e 002B     	 cmp r3,#0
 521 0280 7FF4C8AE 	 bne .L38
 522 0284 00E0     	 b .L30
 523              	.L40:
 524              	.LBB3:
 111:../cleanflight/src/main/common/printf.c ****             case 'u':{
 525              	 .loc 1 111 0
 526 0286 00BF     	 nop
 527              	.L30:
 528              	.LBE3:
 156:../cleanflight/src/main/common/printf.c ****             }
 157:../cleanflight/src/main/common/printf.c ****         }
 158:../cleanflight/src/main/common/printf.c ****     }
 159:../cleanflight/src/main/common/printf.c **** abort:
 160:../cleanflight/src/main/common/printf.c ****     return written;
 529              	 .loc 1 160 0
 530 0288 7B6A     	 ldr r3,[r7,#36]
 161:../cleanflight/src/main/common/printf.c **** }
 531              	 .loc 1 161 0
 532 028a 1846     	 mov r0,r3
 533 028c 2C37     	 adds r7,r7,#44
 534              	.LCFI8:
 535              	 .cfi_def_cfa_offset 12
 536 028e BD46     	 mov sp,r7
 537              	.LCFI9:
 538              	 .cfi_def_cfa_register 13
 539              	 
 540 0290 90BD     	 pop {r4,r7,pc}
 541              	 .cfi_endproc
 542              	.LFE529:
 544 0292 00BF     	 .section .text.init_printf,"ax",%progbits
 545              	 .align 2
 546              	 .global init_printf
 547              	 .thumb
 548              	 .thumb_func
 550              	init_printf:
 551              	.LFB530:
 162:../cleanflight/src/main/common/printf.c **** 
 163:../cleanflight/src/main/common/printf.c **** void init_printf(void *putp, void (*putf) (void *, char))
 164:../cleanflight/src/main/common/printf.c **** {
 552              	 .loc 1 164 0
 553              	 .cfi_startproc
 554              	 
 555              	 
 556              	 
 557 0000 80B4     	 push {r7}
 558              	.LCFI10:
 559              	 .cfi_def_cfa_offset 4
 560              	 .cfi_offset 7,-4
 561 0002 83B0     	 sub sp,sp,#12
 562              	.LCFI11:
 563              	 .cfi_def_cfa_offset 16
 564 0004 00AF     	 add r7,sp,#0
 565              	.LCFI12:
 566              	 .cfi_def_cfa_register 7
 567 0006 7860     	 str r0,[r7,#4]
 568 0008 3960     	 str r1,[r7]
 165:../cleanflight/src/main/common/printf.c ****     stdout_putf = putf;
 569              	 .loc 1 165 0
 570 000a 054A     	 ldr r2,.L42
 571 000c 3B68     	 ldr r3,[r7]
 572 000e 1360     	 str r3,[r2]
 166:../cleanflight/src/main/common/printf.c ****     stdout_putp = putp;
 573              	 .loc 1 166 0
 574 0010 044A     	 ldr r2,.L42+4
 575 0012 7B68     	 ldr r3,[r7,#4]
 576 0014 1360     	 str r3,[r2]
 167:../cleanflight/src/main/common/printf.c **** }
 577              	 .loc 1 167 0
 578 0016 0C37     	 adds r7,r7,#12
 579              	.LCFI13:
 580              	 .cfi_def_cfa_offset 4
 581 0018 BD46     	 mov sp,r7
 582              	.LCFI14:
 583              	 .cfi_def_cfa_register 13
 584              	 
 585 001a 5DF8047B 	 ldr r7,[sp],#4
 586              	.LCFI15:
 587              	 .cfi_restore 7
 588              	 .cfi_def_cfa_offset 0
 589 001e 7047     	 bx lr
 590              	.L43:
 591              	 .align 2
 592              	.L42:
 593 0020 00000000 	 .word stdout_putf
 594 0024 00000000 	 .word stdout_putp
 595              	 .cfi_endproc
 596              	.LFE530:
 598              	 .section .text.tfp_printf,"ax",%progbits
 599              	 .align 2
 600              	 .global tfp_printf
 601              	 .thumb
 602              	 .thumb_func
 604              	tfp_printf:
 605              	.LFB531:
 168:../cleanflight/src/main/common/printf.c **** 
 169:../cleanflight/src/main/common/printf.c **** int tfp_printf(const char *fmt, ...)
 170:../cleanflight/src/main/common/printf.c **** {
 606              	 .loc 1 170 0
 607              	 .cfi_startproc
 608              	 
 609              	 
 610 0000 0FB4     	 push {r0,r1,r2,r3}
 611              	.LCFI16:
 612              	 .cfi_def_cfa_offset 16
 613              	 .cfi_offset 0,-16
 614              	 .cfi_offset 1,-12
 615              	 .cfi_offset 2,-8
 616              	 .cfi_offset 3,-4
 617 0002 80B5     	 push {r7,lr}
 618              	.LCFI17:
 619              	 .cfi_def_cfa_offset 24
 620              	 .cfi_offset 7,-24
 621              	 .cfi_offset 14,-20
 622 0004 82B0     	 sub sp,sp,#8
 623              	.LCFI18:
 624              	 .cfi_def_cfa_offset 32
 625 0006 00AF     	 add r7,sp,#0
 626              	.LCFI19:
 627              	 .cfi_def_cfa_register 7
 171:../cleanflight/src/main/common/printf.c ****     va_list va;
 172:../cleanflight/src/main/common/printf.c ****     va_start(va, fmt);
 628              	 .loc 1 172 0
 629 0008 07F11403 	 add r3,r7,#20
 630 000c 3B60     	 str r3,[r7]
 173:../cleanflight/src/main/common/printf.c ****     int written = tfp_format(stdout_putp, stdout_putf, fmt, va);
 631              	 .loc 1 173 0
 632 000e 0F4B     	 ldr r3,.L47
 633 0010 1A68     	 ldr r2,[r3]
 634 0012 0F4B     	 ldr r3,.L47+4
 635 0014 1B68     	 ldr r3,[r3]
 636 0016 1046     	 mov r0,r2
 637 0018 1946     	 mov r1,r3
 638 001a 3A69     	 ldr r2,[r7,#16]
 639 001c 3B68     	 ldr r3,[r7]
 640 001e FFF7FEFF 	 bl tfp_format
 641 0022 7860     	 str r0,[r7,#4]
 174:../cleanflight/src/main/common/printf.c ****     va_end(va);
 175:../cleanflight/src/main/common/printf.c ****     while (!isSerialTransmitBufferEmpty(printfSerialPort));
 642              	 .loc 1 175 0
 643 0024 00BF     	 nop
 644              	.L45:
 645              	 .loc 1 175 0 is_stmt 0 discriminator 1
 646 0026 0B4B     	 ldr r3,.L47+8
 647 0028 1B68     	 ldr r3,[r3]
 648 002a 1846     	 mov r0,r3
 649 002c FFF7FEFF 	 bl isSerialTransmitBufferEmpty
 650 0030 0346     	 mov r3,r0
 651 0032 83F00103 	 eor r3,r3,#1
 652 0036 DBB2     	 uxtb r3,r3
 653 0038 002B     	 cmp r3,#0
 654 003a F4D1     	 bne .L45
 176:../cleanflight/src/main/common/printf.c ****     return written;
 655              	 .loc 1 176 0 is_stmt 1
 656 003c 7B68     	 ldr r3,[r7,#4]
 177:../cleanflight/src/main/common/printf.c **** }
 657              	 .loc 1 177 0
 658 003e 1846     	 mov r0,r3
 659 0040 0837     	 adds r7,r7,#8
 660              	.LCFI20:
 661              	 .cfi_def_cfa_offset 24
 662 0042 BD46     	 mov sp,r7
 663              	.LCFI21:
 664              	 .cfi_def_cfa_register 13
 665              	 
 666 0044 BDE88040 	 pop {r7,lr}
 667              	.LCFI22:
 668              	 .cfi_restore 14
 669              	 .cfi_restore 7
 670              	 .cfi_def_cfa_offset 16
 671 0048 04B0     	 add sp,sp,#16
 672              	.LCFI23:
 673              	 .cfi_restore 3
 674              	 .cfi_restore 2
 675              	 .cfi_restore 1
 676              	 .cfi_restore 0
 677              	 .cfi_def_cfa_offset 0
 678 004a 7047     	 bx lr
 679              	.L48:
 680              	 .align 2
 681              	.L47:
 682 004c 00000000 	 .word stdout_putp
 683 0050 00000000 	 .word stdout_putf
 684 0054 00000000 	 .word printfSerialPort
 685              	 .cfi_endproc
 686              	.LFE531:
 688              	 .section .text.putcp,"ax",%progbits
 689              	 .align 2
 690              	 .thumb
 691              	 .thumb_func
 693              	putcp:
 694              	.LFB532:
 178:../cleanflight/src/main/common/printf.c **** 
 179:../cleanflight/src/main/common/printf.c **** static void putcp(void *p, char c)
 180:../cleanflight/src/main/common/printf.c **** {
 695              	 .loc 1 180 0
 696              	 .cfi_startproc
 697              	 
 698              	 
 699              	 
 700 0000 80B4     	 push {r7}
 701              	.LCFI24:
 702              	 .cfi_def_cfa_offset 4
 703              	 .cfi_offset 7,-4
 704 0002 83B0     	 sub sp,sp,#12
 705              	.LCFI25:
 706              	 .cfi_def_cfa_offset 16
 707 0004 00AF     	 add r7,sp,#0
 708              	.LCFI26:
 709              	 .cfi_def_cfa_register 7
 710 0006 7860     	 str r0,[r7,#4]
 711 0008 0B46     	 mov r3,r1
 712 000a FB70     	 strb r3,[r7,#3]
 181:../cleanflight/src/main/common/printf.c ****     *(*((char **) p))++ = c;
 713              	 .loc 1 181 0
 714 000c 7B68     	 ldr r3,[r7,#4]
 715 000e 1B68     	 ldr r3,[r3]
 716 0010 591C     	 adds r1,r3,#1
 717 0012 7A68     	 ldr r2,[r7,#4]
 718 0014 1160     	 str r1,[r2]
 719 0016 FA78     	 ldrb r2,[r7,#3]
 720 0018 1A70     	 strb r2,[r3]
 182:../cleanflight/src/main/common/printf.c **** }
 721              	 .loc 1 182 0
 722 001a 0C37     	 adds r7,r7,#12
 723              	.LCFI27:
 724              	 .cfi_def_cfa_offset 4
 725 001c BD46     	 mov sp,r7
 726              	.LCFI28:
 727              	 .cfi_def_cfa_register 13
 728              	 
 729 001e 5DF8047B 	 ldr r7,[sp],#4
 730              	.LCFI29:
 731              	 .cfi_restore 7
 732              	 .cfi_def_cfa_offset 0
 733 0022 7047     	 bx lr
 734              	 .cfi_endproc
 735              	.LFE532:
 737              	 .section .text.tfp_sprintf,"ax",%progbits
 738              	 .align 2
 739              	 .global tfp_sprintf
 740              	 .thumb
 741              	 .thumb_func
 743              	tfp_sprintf:
 744              	.LFB533:
 183:../cleanflight/src/main/common/printf.c **** 
 184:../cleanflight/src/main/common/printf.c **** int tfp_sprintf(char *s, const char *fmt, ...)
 185:../cleanflight/src/main/common/printf.c **** {
 745              	 .loc 1 185 0
 746              	 .cfi_startproc
 747              	 
 748              	 
 749 0000 0EB4     	 push {r1,r2,r3}
 750              	.LCFI30:
 751              	 .cfi_def_cfa_offset 12
 752              	 .cfi_offset 1,-12
 753              	 .cfi_offset 2,-8
 754              	 .cfi_offset 3,-4
 755 0002 80B5     	 push {r7,lr}
 756              	.LCFI31:
 757              	 .cfi_def_cfa_offset 20
 758              	 .cfi_offset 7,-20
 759              	 .cfi_offset 14,-16
 760 0004 85B0     	 sub sp,sp,#20
 761              	.LCFI32:
 762              	 .cfi_def_cfa_offset 40
 763 0006 00AF     	 add r7,sp,#0
 764              	.LCFI33:
 765              	 .cfi_def_cfa_register 7
 766 0008 7860     	 str r0,[r7,#4]
 186:../cleanflight/src/main/common/printf.c ****     va_list va;
 187:../cleanflight/src/main/common/printf.c **** 
 188:../cleanflight/src/main/common/printf.c ****     va_start(va, fmt);
 767              	 .loc 1 188 0
 768 000a 07F12003 	 add r3,r7,#32
 769 000e BB60     	 str r3,[r7,#8]
 189:../cleanflight/src/main/common/printf.c ****     int written = tfp_format(&s, putcp, fmt, va);
 770              	 .loc 1 189 0
 771 0010 3B1D     	 adds r3,r7,#4
 772 0012 1846     	 mov r0,r3
 773 0014 0949     	 ldr r1,.L52
 774 0016 FA69     	 ldr r2,[r7,#28]
 775 0018 BB68     	 ldr r3,[r7,#8]
 776 001a FFF7FEFF 	 bl tfp_format
 777 001e F860     	 str r0,[r7,#12]
 190:../cleanflight/src/main/common/printf.c ****     putcp(&s, 0);
 778              	 .loc 1 190 0
 779 0020 3B1D     	 adds r3,r7,#4
 780 0022 1846     	 mov r0,r3
 781 0024 0021     	 movs r1,#0
 782 0026 FFF7FEFF 	 bl putcp
 191:../cleanflight/src/main/common/printf.c ****     va_end(va);
 192:../cleanflight/src/main/common/printf.c ****     return written;
 783              	 .loc 1 192 0
 784 002a FB68     	 ldr r3,[r7,#12]
 193:../cleanflight/src/main/common/printf.c **** }
 785              	 .loc 1 193 0
 786 002c 1846     	 mov r0,r3
 787 002e 1437     	 adds r7,r7,#20
 788              	.LCFI34:
 789              	 .cfi_def_cfa_offset 20
 790 0030 BD46     	 mov sp,r7
 791              	.LCFI35:
 792              	 .cfi_def_cfa_register 13
 793              	 
 794 0032 BDE88040 	 pop {r7,lr}
 795              	.LCFI36:
 796              	 .cfi_restore 14
 797              	 .cfi_restore 7
 798              	 .cfi_def_cfa_offset 12
 799 0036 03B0     	 add sp,sp,#12
 800              	.LCFI37:
 801              	 .cfi_restore 3
 802              	 .cfi_restore 2
 803              	 .cfi_restore 1
 804              	 .cfi_def_cfa_offset 0
 805 0038 7047     	 bx lr
 806              	.L53:
 807 003a 00BF     	 .align 2
 808              	.L52:
 809 003c 00000000 	 .word putcp
 810              	 .cfi_endproc
 811              	.LFE533:
 813              	 .section .text._putc,"ax",%progbits
 814              	 .align 2
 815              	 .thumb
 816              	 .thumb_func
 818              	_putc:
 819              	.LFB534:
 194:../cleanflight/src/main/common/printf.c **** 
 195:../cleanflight/src/main/common/printf.c **** 
 196:../cleanflight/src/main/common/printf.c **** static void _putc(void *p, char c)
 197:../cleanflight/src/main/common/printf.c **** {
 820              	 .loc 1 197 0
 821              	 .cfi_startproc
 822              	 
 823              	 
 824 0000 80B5     	 push {r7,lr}
 825              	.LCFI38:
 826              	 .cfi_def_cfa_offset 8
 827              	 .cfi_offset 7,-8
 828              	 .cfi_offset 14,-4
 829 0002 82B0     	 sub sp,sp,#8
 830              	.LCFI39:
 831              	 .cfi_def_cfa_offset 16
 832 0004 00AF     	 add r7,sp,#0
 833              	.LCFI40:
 834              	 .cfi_def_cfa_register 7
 835 0006 7860     	 str r0,[r7,#4]
 836 0008 0B46     	 mov r3,r1
 837 000a FB70     	 strb r3,[r7,#3]
 198:../cleanflight/src/main/common/printf.c ****     UNUSED(p);
 199:../cleanflight/src/main/common/printf.c ****     serialWrite(printfSerialPort, c);
 838              	 .loc 1 199 0
 839 000c 044B     	 ldr r3,.L55
 840 000e 1A68     	 ldr r2,[r3]
 841 0010 FB78     	 ldrb r3,[r7,#3]
 842 0012 1046     	 mov r0,r2
 843 0014 1946     	 mov r1,r3
 844 0016 FFF7FEFF 	 bl serialWrite
 200:../cleanflight/src/main/common/printf.c **** }
 845              	 .loc 1 200 0
 846 001a 0837     	 adds r7,r7,#8
 847              	.LCFI41:
 848              	 .cfi_def_cfa_offset 8
 849 001c BD46     	 mov sp,r7
 850              	.LCFI42:
 851              	 .cfi_def_cfa_register 13
 852              	 
 853 001e 80BD     	 pop {r7,pc}
 854              	.L56:
 855              	 .align 2
 856              	.L55:
 857 0020 00000000 	 .word printfSerialPort
 858              	 .cfi_endproc
 859              	.LFE534:
 861              	 .section .text.printfSupportInit,"ax",%progbits
 862              	 .align 2
 863              	 .global printfSupportInit
 864              	 .thumb
 865              	 .thumb_func
 867              	printfSupportInit:
 868              	.LFB535:
 201:../cleanflight/src/main/common/printf.c **** 
 202:../cleanflight/src/main/common/printf.c **** void printfSupportInit(void)
 203:../cleanflight/src/main/common/printf.c **** {
 869              	 .loc 1 203 0
 870              	 .cfi_startproc
 871              	 
 872              	 
 873 0000 80B5     	 push {r7,lr}
 874              	.LCFI43:
 875              	 .cfi_def_cfa_offset 8
 876              	 .cfi_offset 7,-8
 877              	 .cfi_offset 14,-4
 878 0002 00AF     	 add r7,sp,#0
 879              	.LCFI44:
 880              	 .cfi_def_cfa_register 7
 204:../cleanflight/src/main/common/printf.c ****     init_printf(NULL, _putc);
 881              	 .loc 1 204 0
 882 0004 0020     	 movs r0,#0
 883 0006 0249     	 ldr r1,.L58
 884 0008 FFF7FEFF 	 bl init_printf
 205:../cleanflight/src/main/common/printf.c **** }
 885              	 .loc 1 205 0
 886 000c 80BD     	 pop {r7,pc}
 887              	.L59:
 888 000e 00BF     	 .align 2
 889              	.L58:
 890 0010 00000000 	 .word _putc
 891              	 .cfi_endproc
 892              	.LFE535:
 894              	 .section .text.setPrintfSerialPort,"ax",%progbits
 895              	 .align 2
 896              	 .global setPrintfSerialPort
 897              	 .thumb
 898              	 .thumb_func
 900              	setPrintfSerialPort:
 901              	.LFB536:
 206:../cleanflight/src/main/common/printf.c **** 
 207:../cleanflight/src/main/common/printf.c **** #else
 208:../cleanflight/src/main/common/printf.c **** 
 209:../cleanflight/src/main/common/printf.c **** // keil/armcc version
 210:../cleanflight/src/main/common/printf.c **** int fputc(int c, FILE *f)
 211:../cleanflight/src/main/common/printf.c **** {
 212:../cleanflight/src/main/common/printf.c ****     // let DMA catch up a bit when using set or dump, we're too fast.
 213:../cleanflight/src/main/common/printf.c ****     while (!isSerialTransmitBufferEmpty(printfSerialPort));
 214:../cleanflight/src/main/common/printf.c ****     serialWrite(printfSerialPort, c);
 215:../cleanflight/src/main/common/printf.c ****     return c;
 216:../cleanflight/src/main/common/printf.c **** }
 217:../cleanflight/src/main/common/printf.c **** 
 218:../cleanflight/src/main/common/printf.c **** void printfSupportInit(void)
 219:../cleanflight/src/main/common/printf.c **** {
 220:../cleanflight/src/main/common/printf.c ****     // Nothing to do
 221:../cleanflight/src/main/common/printf.c **** }
 222:../cleanflight/src/main/common/printf.c **** #endif
 223:../cleanflight/src/main/common/printf.c **** 
 224:../cleanflight/src/main/common/printf.c **** void setPrintfSerialPort(serialPort_t *serialPort)
 225:../cleanflight/src/main/common/printf.c **** {
 902              	 .loc 1 225 0
 903              	 .cfi_startproc
 904              	 
 905              	 
 906              	 
 907 0000 80B4     	 push {r7}
 908              	.LCFI45:
 909              	 .cfi_def_cfa_offset 4
 910              	 .cfi_offset 7,-4
 911 0002 83B0     	 sub sp,sp,#12
 912              	.LCFI46:
 913              	 .cfi_def_cfa_offset 16
 914 0004 00AF     	 add r7,sp,#0
 915              	.LCFI47:
 916              	 .cfi_def_cfa_register 7
 917 0006 7860     	 str r0,[r7,#4]
 226:../cleanflight/src/main/common/printf.c ****     printfSerialPort = serialPort;
 918              	 .loc 1 226 0
 919 0008 034A     	 ldr r2,.L61
 920 000a 7B68     	 ldr r3,[r7,#4]
 921 000c 1360     	 str r3,[r2]
 227:../cleanflight/src/main/common/printf.c **** }
 922              	 .loc 1 227 0
 923 000e 0C37     	 adds r7,r7,#12
 924              	.LCFI48:
 925              	 .cfi_def_cfa_offset 4
 926 0010 BD46     	 mov sp,r7
 927              	.LCFI49:
 928              	 .cfi_def_cfa_register 13
 929              	 
 930 0012 5DF8047B 	 ldr r7,[sp],#4
 931              	.LCFI50:
 932              	 .cfi_restore 7
 933              	 .cfi_def_cfa_offset 0
 934 0016 7047     	 bx lr
 935              	.L62:
 936              	 .align 2
 937              	.L61:
 938 0018 00000000 	 .word printfSerialPort
 939              	 .cfi_endproc
 940              	.LFE536:
 942              	 .text
 943              	.Letext0:
 944              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 945              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 946              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stdarg.h"
 947              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 948              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 949              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 950              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
 951              	 .file 9 "<built-in>"
 952              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/serial.h"
 953              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 954              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 printf.c
    {standard input}:20     .bss.printfSerialPort:00000000 $d
    {standard input}:23     .bss.printfSerialPort:00000000 printfSerialPort
    {standard input}:26     .bss.stdout_putf:00000000 $d
    {standard input}:29     .bss.stdout_putf:00000000 stdout_putf
    {standard input}:32     .bss.stdout_putp:00000000 $d
    {standard input}:35     .bss.stdout_putp:00000000 stdout_putp
    {standard input}:38     .text.putchw:00000000 $t
    {standard input}:42     .text.putchw:00000000 putchw
    {standard input}:160    .text.tfp_format:00000000 $t
    {standard input}:165    .text.tfp_format:00000000 tfp_format
    {standard input}:545    .text.init_printf:00000000 $t
    {standard input}:550    .text.init_printf:00000000 init_printf
    {standard input}:593    .text.init_printf:00000020 $d
    {standard input}:599    .text.tfp_printf:00000000 $t
    {standard input}:604    .text.tfp_printf:00000000 tfp_printf
    {standard input}:682    .text.tfp_printf:0000004c $d
    {standard input}:689    .text.putcp:00000000 $t
    {standard input}:693    .text.putcp:00000000 putcp
    {standard input}:738    .text.tfp_sprintf:00000000 $t
    {standard input}:743    .text.tfp_sprintf:00000000 tfp_sprintf
    {standard input}:809    .text.tfp_sprintf:0000003c $d
    {standard input}:814    .text._putc:00000000 $t
    {standard input}:818    .text._putc:00000000 _putc
    {standard input}:857    .text._putc:00000020 $d
    {standard input}:862    .text.printfSupportInit:00000000 $t
    {standard input}:867    .text.printfSupportInit:00000000 printfSupportInit
    {standard input}:890    .text.printfSupportInit:00000010 $d
    {standard input}:895    .text.setPrintfSerialPort:00000000 $t
    {standard input}:900    .text.setPrintfSerialPort:00000000 setPrintfSerialPort
    {standard input}:938    .text.setPrintfSerialPort:00000018 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
a2i
uli2a
ui2a
li2a
i2a
isSerialTransmitBufferEmpty
serialWrite
