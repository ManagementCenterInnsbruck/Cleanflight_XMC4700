   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "config_eeprom.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.pgN,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	pgN:
  25              	.LFB521:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pg.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** #include "build/build_config.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** typedef uint16_t pgn_t;
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** // parameter group registry flags
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** typedef enum {
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     PGRF_NONE = 0,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     PGRF_CLASSIFICATON_BIT = (1 << 0)
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** } pgRegistryFlags_e;
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** typedef enum {
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     PGR_PGN_MASK =          0x0fff,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     PGR_PGN_VERSION_MASK =  0xf000,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     PGR_SIZE_MASK =         0x0fff,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     PGR_SIZE_SYSTEM_FLAG =  0x0000 // documentary
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** } pgRegistryInternal_e;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** 
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** // function that resets a single parameter group instance
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** typedef void (pgResetFunc)(void * /* base */, int /* size */);
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** 
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** typedef struct pgRegistry_s {
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     pgn_t pgn;             // The parameter group number, the top 4 bits are reserved for version
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     uint16_t size;         // Size of the group in RAM, the top 4 bits are reserved for flags
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     uint8_t *address;      // Address of the group in RAM.
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     uint8_t *copy;         // Address of the copy in RAM.
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     uint8_t **ptr;         // The pointer to update after loading the record into ram.
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     union {
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****         void *ptr;         // Pointer to init template
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****         pgResetFunc *fn;   // Pointer to pgResetFunc
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h ****     } reset;
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** } pgRegistry_t;
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** 
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** static inline uint16_t pgN(const pgRegistry_t* reg) {return reg->pgn & PGR_PGN_MASK;}
  27              	 .loc 1 58 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43              	 .loc 1 58 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1B88     	 ldrh r3,[r3]
  46 000c 9BB2     	 uxth r3,r3
  47 000e C3F30B03 	 ubfx r3,r3,#0,#12
  48 0012 9BB2     	 uxth r3,r3
  49 0014 1846     	 mov r0,r3
  50 0016 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0018 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 001a 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001e 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE521:
  65              	 .section .text.pgVersion,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	pgVersion:
  71              	.LFB522:
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** static inline uint8_t pgVersion(const pgRegistry_t* reg) {return (uint8_t)(reg->pgn >> 12);}
  72              	 .loc 1 59 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
  88              	 .loc 1 59 0
  89 0008 7B68     	 ldr r3,[r7,#4]
  90 000a 1B88     	 ldrh r3,[r3]
  91 000c 9BB2     	 uxth r3,r3
  92 000e 1B0B     	 lsrs r3,r3,#12
  93 0010 9BB2     	 uxth r3,r3
  94 0012 DBB2     	 uxtb r3,r3
  95 0014 1846     	 mov r0,r3
  96 0016 0C37     	 adds r7,r7,#12
  97              	.LCFI9:
  98              	 .cfi_def_cfa_offset 4
  99 0018 BD46     	 mov sp,r7
 100              	.LCFI10:
 101              	 .cfi_def_cfa_register 13
 102              	 
 103 001a 5DF8047B 	 ldr r7,[sp],#4
 104              	.LCFI11:
 105              	 .cfi_restore 7
 106              	 .cfi_def_cfa_offset 0
 107 001e 7047     	 bx lr
 108              	 .cfi_endproc
 109              	.LFE522:
 111              	 .section .text.pgSize,"ax",%progbits
 112              	 .align 2
 113              	 .thumb
 114              	 .thumb_func
 116              	pgSize:
 117              	.LFB523:
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pg.h **** static inline uint16_t pgSize(const pgRegistry_t* reg) {return reg->size & PGR_SIZE_MASK;}
 118              	 .loc 1 60 0
 119              	 .cfi_startproc
 120              	 
 121              	 
 122              	 
 123 0000 80B4     	 push {r7}
 124              	.LCFI12:
 125              	 .cfi_def_cfa_offset 4
 126              	 .cfi_offset 7,-4
 127 0002 83B0     	 sub sp,sp,#12
 128              	.LCFI13:
 129              	 .cfi_def_cfa_offset 16
 130 0004 00AF     	 add r7,sp,#0
 131              	.LCFI14:
 132              	 .cfi_def_cfa_register 7
 133 0006 7860     	 str r0,[r7,#4]
 134              	 .loc 1 60 0
 135 0008 7B68     	 ldr r3,[r7,#4]
 136 000a 5B88     	 ldrh r3,[r3,#2]
 137 000c 9BB2     	 uxth r3,r3
 138 000e C3F30B03 	 ubfx r3,r3,#0,#12
 139 0012 9BB2     	 uxth r3,r3
 140 0014 1846     	 mov r0,r3
 141 0016 0C37     	 adds r7,r7,#12
 142              	.LCFI15:
 143              	 .cfi_def_cfa_offset 4
 144 0018 BD46     	 mov sp,r7
 145              	.LCFI16:
 146              	 .cfi_def_cfa_register 13
 147              	 
 148 001a 5DF8047B 	 ldr r7,[sp],#4
 149              	.LCFI17:
 150              	 .cfi_restore 7
 151              	 .cfi_def_cfa_offset 0
 152 001e 7047     	 bx lr
 153              	 .cfi_endproc
 154              	.LFE523:
 156              	 .section .bss.eepromConfigSize,"aw",%nobits
 157              	 .align 1
 160              	eepromConfigSize:
 161 0000 0000     	 .space 2
 162              	 .section .text.initEEPROM,"ax",%progbits
 163              	 .align 2
 164              	 .global initEEPROM
 165              	 .thumb
 166              	 .thumb_func
 168              	initEEPROM:
 169              	.LFB528:
 170              	 .file 2 "../cleanflight/src/main/config/config_eeprom.c"
   1:../cleanflight/src/main/config/config_eeprom.c **** /*
   2:../cleanflight/src/main/config/config_eeprom.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/config/config_eeprom.c ****  *
   4:../cleanflight/src/main/config/config_eeprom.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/config/config_eeprom.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/config/config_eeprom.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/config/config_eeprom.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/config/config_eeprom.c ****  * any later version.
   9:../cleanflight/src/main/config/config_eeprom.c ****  *
  10:../cleanflight/src/main/config/config_eeprom.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/config/config_eeprom.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/config/config_eeprom.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/config/config_eeprom.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/config/config_eeprom.c ****  *
  15:../cleanflight/src/main/config/config_eeprom.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/config/config_eeprom.c ****  * along with this software.
  17:../cleanflight/src/main/config/config_eeprom.c ****  *
  18:../cleanflight/src/main/config/config_eeprom.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/config/config_eeprom.c ****  */
  20:../cleanflight/src/main/config/config_eeprom.c **** 
  21:../cleanflight/src/main/config/config_eeprom.c **** #include <stdbool.h>
  22:../cleanflight/src/main/config/config_eeprom.c **** #include <stdint.h>
  23:../cleanflight/src/main/config/config_eeprom.c **** #include <string.h>
  24:../cleanflight/src/main/config/config_eeprom.c **** 
  25:../cleanflight/src/main/config/config_eeprom.c **** #include "platform.h"
  26:../cleanflight/src/main/config/config_eeprom.c **** 
  27:../cleanflight/src/main/config/config_eeprom.c **** #include "build/build_config.h"
  28:../cleanflight/src/main/config/config_eeprom.c **** 
  29:../cleanflight/src/main/config/config_eeprom.c **** #include "common/crc.h"
  30:../cleanflight/src/main/config/config_eeprom.c **** #include "common/utils.h"
  31:../cleanflight/src/main/config/config_eeprom.c **** 
  32:../cleanflight/src/main/config/config_eeprom.c **** #include "config/config_eeprom.h"
  33:../cleanflight/src/main/config/config_eeprom.c **** #include "config/config_streamer.h"
  34:../cleanflight/src/main/config/config_eeprom.c **** #include "pg/pg.h"
  35:../cleanflight/src/main/config/config_eeprom.c **** #include "fc/config.h"
  36:../cleanflight/src/main/config/config_eeprom.c **** 
  37:../cleanflight/src/main/config/config_eeprom.c **** #include "drivers/system.h"
  38:../cleanflight/src/main/config/config_eeprom.c **** 
  39:../cleanflight/src/main/config/config_eeprom.c **** #ifndef EEPROM_IN_RAM
  40:../cleanflight/src/main/config/config_eeprom.c **** extern uint8_t __config_start;   // configured via linker script when building binaries.
  41:../cleanflight/src/main/config/config_eeprom.c **** extern uint8_t __config_end;
  42:../cleanflight/src/main/config/config_eeprom.c **** #endif
  43:../cleanflight/src/main/config/config_eeprom.c **** 
  44:../cleanflight/src/main/config/config_eeprom.c **** static uint16_t eepromConfigSize;
  45:../cleanflight/src/main/config/config_eeprom.c **** 
  46:../cleanflight/src/main/config/config_eeprom.c **** typedef enum {
  47:../cleanflight/src/main/config/config_eeprom.c ****     CR_CLASSICATION_SYSTEM   = 0,
  48:../cleanflight/src/main/config/config_eeprom.c ****     CR_CLASSICATION_PROFILE_LAST = CR_CLASSICATION_SYSTEM,
  49:../cleanflight/src/main/config/config_eeprom.c **** } configRecordFlags_e;
  50:../cleanflight/src/main/config/config_eeprom.c **** 
  51:../cleanflight/src/main/config/config_eeprom.c **** #define CR_CLASSIFICATION_MASK  (0x3)
  52:../cleanflight/src/main/config/config_eeprom.c **** #define CRC_START_VALUE         0xFFFF
  53:../cleanflight/src/main/config/config_eeprom.c **** #define CRC_CHECK_VALUE         0x1D0F  // pre-calculated value of CRC that includes the CRC itself
  54:../cleanflight/src/main/config/config_eeprom.c **** 
  55:../cleanflight/src/main/config/config_eeprom.c **** // Header for the saved copy.
  56:../cleanflight/src/main/config/config_eeprom.c **** typedef struct {
  57:../cleanflight/src/main/config/config_eeprom.c ****     uint8_t eepromConfigVersion;
  58:../cleanflight/src/main/config/config_eeprom.c ****     uint8_t magic_be;           // magic number, should be 0xBE
  59:../cleanflight/src/main/config/config_eeprom.c **** } PG_PACKED configHeader_t;
  60:../cleanflight/src/main/config/config_eeprom.c **** 
  61:../cleanflight/src/main/config/config_eeprom.c **** // Header for each stored PG.
  62:../cleanflight/src/main/config/config_eeprom.c **** typedef struct {
  63:../cleanflight/src/main/config/config_eeprom.c ****     // split up.
  64:../cleanflight/src/main/config/config_eeprom.c ****     uint16_t size;
  65:../cleanflight/src/main/config/config_eeprom.c ****     pgn_t pgn;
  66:../cleanflight/src/main/config/config_eeprom.c ****     uint8_t version;
  67:../cleanflight/src/main/config/config_eeprom.c **** 
  68:../cleanflight/src/main/config/config_eeprom.c ****     // lower 2 bits used to indicate system or profile number, see CR_CLASSIFICATION_MASK
  69:../cleanflight/src/main/config/config_eeprom.c ****     uint8_t flags;
  70:../cleanflight/src/main/config/config_eeprom.c **** 
  71:../cleanflight/src/main/config/config_eeprom.c ****     uint8_t pg[];
  72:../cleanflight/src/main/config/config_eeprom.c **** } PG_PACKED configRecord_t;
  73:../cleanflight/src/main/config/config_eeprom.c **** 
  74:../cleanflight/src/main/config/config_eeprom.c **** // Footer for the saved copy.
  75:../cleanflight/src/main/config/config_eeprom.c **** typedef struct {
  76:../cleanflight/src/main/config/config_eeprom.c ****     uint16_t terminator;
  77:../cleanflight/src/main/config/config_eeprom.c **** } PG_PACKED configFooter_t;
  78:../cleanflight/src/main/config/config_eeprom.c **** // checksum is appended just after footer. It is not included in footer to make checksum calculatio
  79:../cleanflight/src/main/config/config_eeprom.c **** 
  80:../cleanflight/src/main/config/config_eeprom.c **** // Used to check the compiler packing at build time.
  81:../cleanflight/src/main/config/config_eeprom.c **** typedef struct {
  82:../cleanflight/src/main/config/config_eeprom.c ****     uint8_t byte;
  83:../cleanflight/src/main/config/config_eeprom.c ****     uint32_t word;
  84:../cleanflight/src/main/config/config_eeprom.c **** } PG_PACKED packingTest_t;
  85:../cleanflight/src/main/config/config_eeprom.c **** 
  86:../cleanflight/src/main/config/config_eeprom.c **** void initEEPROM(void)
  87:../cleanflight/src/main/config/config_eeprom.c **** {
 171              	 .loc 2 87 0
 172              	 .cfi_startproc
 173              	 
 174              	 
 175              	 
 176 0000 80B4     	 push {r7}
 177              	.LCFI18:
 178              	 .cfi_def_cfa_offset 4
 179              	 .cfi_offset 7,-4
 180 0002 00AF     	 add r7,sp,#0
 181              	.LCFI19:
 182              	 .cfi_def_cfa_register 7
  88:../cleanflight/src/main/config/config_eeprom.c ****     // Verify that this architecture packs as expected.
  89:../cleanflight/src/main/config/config_eeprom.c ****     BUILD_BUG_ON(offsetof(packingTest_t, byte) != 0);
  90:../cleanflight/src/main/config/config_eeprom.c ****     BUILD_BUG_ON(offsetof(packingTest_t, word) != 1);
  91:../cleanflight/src/main/config/config_eeprom.c ****     BUILD_BUG_ON(sizeof(packingTest_t) != 5);
  92:../cleanflight/src/main/config/config_eeprom.c **** 
  93:../cleanflight/src/main/config/config_eeprom.c ****     BUILD_BUG_ON(sizeof(configFooter_t) != 2);
  94:../cleanflight/src/main/config/config_eeprom.c ****     BUILD_BUG_ON(sizeof(configRecord_t) != 6);
  95:../cleanflight/src/main/config/config_eeprom.c **** }
 183              	 .loc 2 95 0
 184 0004 BD46     	 mov sp,r7
 185              	.LCFI20:
 186              	 .cfi_def_cfa_register 13
 187              	 
 188 0006 5DF8047B 	 ldr r7,[sp],#4
 189              	.LCFI21:
 190              	 .cfi_restore 7
 191              	 .cfi_def_cfa_offset 0
 192 000a 7047     	 bx lr
 193              	 .cfi_endproc
 194              	.LFE528:
 196              	 .section .text.isEEPROMVersionValid,"ax",%progbits
 197              	 .align 2
 198              	 .global isEEPROMVersionValid
 199              	 .thumb
 200              	 .thumb_func
 202              	isEEPROMVersionValid:
 203              	.LFB529:
  96:../cleanflight/src/main/config/config_eeprom.c **** 
  97:../cleanflight/src/main/config/config_eeprom.c **** bool isEEPROMVersionValid(void)
  98:../cleanflight/src/main/config/config_eeprom.c **** {
 204              	 .loc 2 98 0
 205              	 .cfi_startproc
 206              	 
 207              	 
 208              	 
 209 0000 80B4     	 push {r7}
 210              	.LCFI22:
 211              	 .cfi_def_cfa_offset 4
 212              	 .cfi_offset 7,-4
 213 0002 83B0     	 sub sp,sp,#12
 214              	.LCFI23:
 215              	 .cfi_def_cfa_offset 16
 216 0004 00AF     	 add r7,sp,#0
 217              	.LCFI24:
 218              	 .cfi_def_cfa_register 7
  99:../cleanflight/src/main/config/config_eeprom.c ****     const uint8_t *p = &__config_start;
 219              	 .loc 2 99 0
 220 0006 084B     	 ldr r3,.L11
 221 0008 7B60     	 str r3,[r7,#4]
 100:../cleanflight/src/main/config/config_eeprom.c ****     const configHeader_t *header = (const configHeader_t *)p;
 222              	 .loc 2 100 0
 223 000a 7B68     	 ldr r3,[r7,#4]
 224 000c 3B60     	 str r3,[r7]
 101:../cleanflight/src/main/config/config_eeprom.c **** 
 102:../cleanflight/src/main/config/config_eeprom.c ****     if (header->eepromConfigVersion != EEPROM_CONF_VERSION) {
 225              	 .loc 2 102 0
 226 000e 3B68     	 ldr r3,[r7]
 227 0010 1B78     	 ldrb r3,[r3]
 228 0012 AB2B     	 cmp r3,#171
 229 0014 01D0     	 beq .L9
 103:../cleanflight/src/main/config/config_eeprom.c ****         return false;
 230              	 .loc 2 103 0
 231 0016 0023     	 movs r3,#0
 232 0018 00E0     	 b .L10
 233              	.L9:
 104:../cleanflight/src/main/config/config_eeprom.c ****     }
 105:../cleanflight/src/main/config/config_eeprom.c **** 
 106:../cleanflight/src/main/config/config_eeprom.c ****     return true;
 234              	 .loc 2 106 0
 235 001a 0123     	 movs r3,#1
 236              	.L10:
 107:../cleanflight/src/main/config/config_eeprom.c **** }
 237              	 .loc 2 107 0
 238 001c 1846     	 mov r0,r3
 239 001e 0C37     	 adds r7,r7,#12
 240              	.LCFI25:
 241              	 .cfi_def_cfa_offset 4
 242 0020 BD46     	 mov sp,r7
 243              	.LCFI26:
 244              	 .cfi_def_cfa_register 13
 245              	 
 246 0022 5DF8047B 	 ldr r7,[sp],#4
 247              	.LCFI27:
 248              	 .cfi_restore 7
 249              	 .cfi_def_cfa_offset 0
 250 0026 7047     	 bx lr
 251              	.L12:
 252              	 .align 2
 253              	.L11:
 254 0028 00000000 	 .word __config_start
 255              	 .cfi_endproc
 256              	.LFE529:
 258              	 .section .text.isEEPROMStructureValid,"ax",%progbits
 259              	 .align 2
 260              	 .global isEEPROMStructureValid
 261              	 .thumb
 262              	 .thumb_func
 264              	isEEPROMStructureValid:
 265              	.LFB530:
 108:../cleanflight/src/main/config/config_eeprom.c **** 
 109:../cleanflight/src/main/config/config_eeprom.c **** // Scan the EEPROM config. Returns true if the config is valid.
 110:../cleanflight/src/main/config/config_eeprom.c **** bool isEEPROMStructureValid(void)
 111:../cleanflight/src/main/config/config_eeprom.c **** {
 266              	 .loc 2 111 0
 267              	 .cfi_startproc
 268              	 
 269              	 
 270 0000 80B5     	 push {r7,lr}
 271              	.LCFI28:
 272              	 .cfi_def_cfa_offset 8
 273              	 .cfi_offset 7,-8
 274              	 .cfi_offset 14,-4
 275 0002 86B0     	 sub sp,sp,#24
 276              	.LCFI29:
 277              	 .cfi_def_cfa_offset 32
 278 0004 00AF     	 add r7,sp,#0
 279              	.LCFI30:
 280              	 .cfi_def_cfa_register 7
 112:../cleanflight/src/main/config/config_eeprom.c ****     const uint8_t *p = &__config_start;
 281              	 .loc 2 112 0
 282 0006 384B     	 ldr r3,.L21
 283 0008 7B61     	 str r3,[r7,#20]
 113:../cleanflight/src/main/config/config_eeprom.c ****     const configHeader_t *header = (const configHeader_t *)p;
 284              	 .loc 2 113 0
 285 000a 7B69     	 ldr r3,[r7,#20]
 286 000c FB60     	 str r3,[r7,#12]
 114:../cleanflight/src/main/config/config_eeprom.c **** 
 115:../cleanflight/src/main/config/config_eeprom.c ****     if (header->magic_be != 0xBE) {
 287              	 .loc 2 115 0
 288 000e FB68     	 ldr r3,[r7,#12]
 289 0010 5B78     	 ldrb r3,[r3,#1]
 290 0012 BE2B     	 cmp r3,#190
 291 0014 01D0     	 beq .L14
 116:../cleanflight/src/main/config/config_eeprom.c ****         return false;
 292              	 .loc 2 116 0
 293 0016 0023     	 movs r3,#0
 294 0018 61E0     	 b .L15
 295              	.L14:
 117:../cleanflight/src/main/config/config_eeprom.c ****     }
 118:../cleanflight/src/main/config/config_eeprom.c **** 
 119:../cleanflight/src/main/config/config_eeprom.c ****     uint16_t crc = CRC_START_VALUE;
 296              	 .loc 2 119 0
 297 001a 4FF6FF73 	 movw r3,#65535
 298 001e 7B82     	 strh r3,[r7,#18]
 120:../cleanflight/src/main/config/config_eeprom.c ****     crc = crc16_ccitt_update(crc, header, sizeof(*header));
 299              	 .loc 2 120 0
 300 0020 7B8A     	 ldrh r3,[r7,#18]
 301 0022 1846     	 mov r0,r3
 302 0024 F968     	 ldr r1,[r7,#12]
 303 0026 0222     	 movs r2,#2
 304 0028 FFF7FEFF 	 bl crc16_ccitt_update
 305 002c 0346     	 mov r3,r0
 306 002e 7B82     	 strh r3,[r7,#18]
 121:../cleanflight/src/main/config/config_eeprom.c ****     p += sizeof(*header);
 307              	 .loc 2 121 0
 308 0030 7B69     	 ldr r3,[r7,#20]
 309 0032 0233     	 adds r3,r3,#2
 310 0034 7B61     	 str r3,[r7,#20]
 311              	.L20:
 312              	.LBB2:
 122:../cleanflight/src/main/config/config_eeprom.c **** 
 123:../cleanflight/src/main/config/config_eeprom.c ****     for (;;) {
 124:../cleanflight/src/main/config/config_eeprom.c ****         const configRecord_t *record = (const configRecord_t *)p;
 313              	 .loc 2 124 0
 314 0036 7B69     	 ldr r3,[r7,#20]
 315 0038 BB60     	 str r3,[r7,#8]
 125:../cleanflight/src/main/config/config_eeprom.c **** 
 126:../cleanflight/src/main/config/config_eeprom.c ****         if (record->size == 0) {
 316              	 .loc 2 126 0
 317 003a BB68     	 ldr r3,[r7,#8]
 318 003c 1B88     	 ldrh r3,[r3]
 319 003e 9BB2     	 uxth r3,r3
 320 0040 002B     	 cmp r3,#0
 321 0042 29D1     	 bne .L16
 127:../cleanflight/src/main/config/config_eeprom.c ****             // Found the end.  Stop scanning.
 128:../cleanflight/src/main/config/config_eeprom.c ****             break;
 322              	 .loc 2 128 0
 323 0044 00BF     	 nop
 324              	.LBE2:
 129:../cleanflight/src/main/config/config_eeprom.c ****         }
 130:../cleanflight/src/main/config/config_eeprom.c ****         if (p + record->size >= &__config_end
 131:../cleanflight/src/main/config/config_eeprom.c ****             || record->size < sizeof(*record)) {
 132:../cleanflight/src/main/config/config_eeprom.c ****             // Too big or too small.
 133:../cleanflight/src/main/config/config_eeprom.c ****             return false;
 134:../cleanflight/src/main/config/config_eeprom.c ****         }
 135:../cleanflight/src/main/config/config_eeprom.c **** 
 136:../cleanflight/src/main/config/config_eeprom.c ****         crc = crc16_ccitt_update(crc, p, record->size);
 137:../cleanflight/src/main/config/config_eeprom.c **** 
 138:../cleanflight/src/main/config/config_eeprom.c ****         p += record->size;
 139:../cleanflight/src/main/config/config_eeprom.c ****     }
 140:../cleanflight/src/main/config/config_eeprom.c **** 
 141:../cleanflight/src/main/config/config_eeprom.c ****     const configFooter_t *footer = (const configFooter_t *)p;
 325              	 .loc 2 141 0
 326 0046 7B69     	 ldr r3,[r7,#20]
 327 0048 7B60     	 str r3,[r7,#4]
 142:../cleanflight/src/main/config/config_eeprom.c ****     crc = crc16_ccitt_update(crc, footer, sizeof(*footer));
 328              	 .loc 2 142 0
 329 004a 7B8A     	 ldrh r3,[r7,#18]
 330 004c 1846     	 mov r0,r3
 331 004e 7968     	 ldr r1,[r7,#4]
 332 0050 0222     	 movs r2,#2
 333 0052 FFF7FEFF 	 bl crc16_ccitt_update
 334 0056 0346     	 mov r3,r0
 335 0058 7B82     	 strh r3,[r7,#18]
 143:../cleanflight/src/main/config/config_eeprom.c ****     p += sizeof(*footer);
 336              	 .loc 2 143 0
 337 005a 7B69     	 ldr r3,[r7,#20]
 338 005c 0233     	 adds r3,r3,#2
 339 005e 7B61     	 str r3,[r7,#20]
 144:../cleanflight/src/main/config/config_eeprom.c **** 
 145:../cleanflight/src/main/config/config_eeprom.c ****     // include stored CRC in the CRC calculation
 146:../cleanflight/src/main/config/config_eeprom.c ****     const uint16_t *storedCrc = (const uint16_t *)p;
 340              	 .loc 2 146 0
 341 0060 7B69     	 ldr r3,[r7,#20]
 342 0062 3B60     	 str r3,[r7]
 147:../cleanflight/src/main/config/config_eeprom.c ****     crc = crc16_ccitt_update(crc, storedCrc, sizeof(*storedCrc));
 343              	 .loc 2 147 0
 344 0064 7B8A     	 ldrh r3,[r7,#18]
 345 0066 1846     	 mov r0,r3
 346 0068 3968     	 ldr r1,[r7]
 347 006a 0222     	 movs r2,#2
 348 006c FFF7FEFF 	 bl crc16_ccitt_update
 349 0070 0346     	 mov r3,r0
 350 0072 7B82     	 strh r3,[r7,#18]
 148:../cleanflight/src/main/config/config_eeprom.c ****     p += sizeof(storedCrc);
 351              	 .loc 2 148 0
 352 0074 7B69     	 ldr r3,[r7,#20]
 353 0076 0433     	 adds r3,r3,#4
 354 0078 7B61     	 str r3,[r7,#20]
 149:../cleanflight/src/main/config/config_eeprom.c **** 
 150:../cleanflight/src/main/config/config_eeprom.c ****     eepromConfigSize = p - &__config_start;
 355              	 .loc 2 150 0
 356 007a 7B69     	 ldr r3,[r7,#20]
 357 007c 1A4A     	 ldr r2,.L21
 358 007e 9B1A     	 subs r3,r3,r2
 359 0080 9AB2     	 uxth r2,r3
 360 0082 1A4B     	 ldr r3,.L21+4
 361 0084 1A80     	 strh r2,[r3]
 151:../cleanflight/src/main/config/config_eeprom.c **** 
 152:../cleanflight/src/main/config/config_eeprom.c ****     // CRC has the property that if the CRC itself is included in the calculation the resulting CRC
 153:../cleanflight/src/main/config/config_eeprom.c ****     return crc == CRC_CHECK_VALUE;
 362              	 .loc 2 153 0
 363 0086 7B8A     	 ldrh r3,[r7,#18]
 364 0088 41F60F52 	 movw r2,#7439
 365 008c 9342     	 cmp r3,r2
 366 008e 0CBF     	 ite eq
 367 0090 0123     	 moveq r3,#1
 368 0092 0023     	 movne r3,#0
 369 0094 DBB2     	 uxtb r3,r3
 370 0096 22E0     	 b .L15
 371              	.L16:
 372              	.LBB3:
 130:../cleanflight/src/main/config/config_eeprom.c ****             || record->size < sizeof(*record)) {
 373              	 .loc 2 130 0
 374 0098 BB68     	 ldr r3,[r7,#8]
 375 009a 1B88     	 ldrh r3,[r3]
 376 009c 9BB2     	 uxth r3,r3
 377 009e 1A46     	 mov r2,r3
 378 00a0 7B69     	 ldr r3,[r7,#20]
 379 00a2 1344     	 add r3,r3,r2
 380 00a4 124A     	 ldr r2,.L21+8
 381 00a6 9342     	 cmp r3,r2
 382 00a8 04D2     	 bcs .L18
 131:../cleanflight/src/main/config/config_eeprom.c ****             // Too big or too small.
 383              	 .loc 2 131 0
 384 00aa BB68     	 ldr r3,[r7,#8]
 385 00ac 1B88     	 ldrh r3,[r3]
 386 00ae 9BB2     	 uxth r3,r3
 387 00b0 052B     	 cmp r3,#5
 388 00b2 01D8     	 bhi .L19
 389              	.L18:
 133:../cleanflight/src/main/config/config_eeprom.c ****         }
 390              	 .loc 2 133 0
 391 00b4 0023     	 movs r3,#0
 392 00b6 12E0     	 b .L15
 393              	.L19:
 136:../cleanflight/src/main/config/config_eeprom.c **** 
 394              	 .loc 2 136 0
 395 00b8 BB68     	 ldr r3,[r7,#8]
 396 00ba 1B88     	 ldrh r3,[r3]
 397 00bc 9BB2     	 uxth r3,r3
 398 00be 1A46     	 mov r2,r3
 399 00c0 7B8A     	 ldrh r3,[r7,#18]
 400 00c2 1846     	 mov r0,r3
 401 00c4 7969     	 ldr r1,[r7,#20]
 402 00c6 FFF7FEFF 	 bl crc16_ccitt_update
 403 00ca 0346     	 mov r3,r0
 404 00cc 7B82     	 strh r3,[r7,#18]
 138:../cleanflight/src/main/config/config_eeprom.c ****     }
 405              	 .loc 2 138 0
 406 00ce BB68     	 ldr r3,[r7,#8]
 407 00d0 1B88     	 ldrh r3,[r3]
 408 00d2 9BB2     	 uxth r3,r3
 409 00d4 1A46     	 mov r2,r3
 410 00d6 7B69     	 ldr r3,[r7,#20]
 411 00d8 1344     	 add r3,r3,r2
 412 00da 7B61     	 str r3,[r7,#20]
 413              	.LBE3:
 139:../cleanflight/src/main/config/config_eeprom.c **** 
 414              	 .loc 2 139 0
 415 00dc ABE7     	 b .L20
 416              	.L15:
 154:../cleanflight/src/main/config/config_eeprom.c **** }
 417              	 .loc 2 154 0
 418 00de 1846     	 mov r0,r3
 419 00e0 1837     	 adds r7,r7,#24
 420              	.LCFI31:
 421              	 .cfi_def_cfa_offset 8
 422 00e2 BD46     	 mov sp,r7
 423              	.LCFI32:
 424              	 .cfi_def_cfa_register 13
 425              	 
 426 00e4 80BD     	 pop {r7,pc}
 427              	.L22:
 428 00e6 00BF     	 .align 2
 429              	.L21:
 430 00e8 00000000 	 .word __config_start
 431 00ec 00000000 	 .word eepromConfigSize
 432 00f0 00000000 	 .word __config_end
 433              	 .cfi_endproc
 434              	.LFE530:
 436              	 .section .text.getEEPROMConfigSize,"ax",%progbits
 437              	 .align 2
 438              	 .global getEEPROMConfigSize
 439              	 .thumb
 440              	 .thumb_func
 442              	getEEPROMConfigSize:
 443              	.LFB531:
 155:../cleanflight/src/main/config/config_eeprom.c **** 
 156:../cleanflight/src/main/config/config_eeprom.c **** uint16_t getEEPROMConfigSize(void)
 157:../cleanflight/src/main/config/config_eeprom.c **** {
 444              	 .loc 2 157 0
 445              	 .cfi_startproc
 446              	 
 447              	 
 448              	 
 449 0000 80B4     	 push {r7}
 450              	.LCFI33:
 451              	 .cfi_def_cfa_offset 4
 452              	 .cfi_offset 7,-4
 453 0002 00AF     	 add r7,sp,#0
 454              	.LCFI34:
 455              	 .cfi_def_cfa_register 7
 158:../cleanflight/src/main/config/config_eeprom.c ****     return eepromConfigSize;
 456              	 .loc 2 158 0
 457 0004 034B     	 ldr r3,.L25
 458 0006 1B88     	 ldrh r3,[r3]
 159:../cleanflight/src/main/config/config_eeprom.c **** }
 459              	 .loc 2 159 0
 460 0008 1846     	 mov r0,r3
 461 000a BD46     	 mov sp,r7
 462              	.LCFI35:
 463              	 .cfi_def_cfa_register 13
 464              	 
 465 000c 5DF8047B 	 ldr r7,[sp],#4
 466              	.LCFI36:
 467              	 .cfi_restore 7
 468              	 .cfi_def_cfa_offset 0
 469 0010 7047     	 bx lr
 470              	.L26:
 471 0012 00BF     	 .align 2
 472              	.L25:
 473 0014 00000000 	 .word eepromConfigSize
 474              	 .cfi_endproc
 475              	.LFE531:
 477              	 .section .text.findEEPROM,"ax",%progbits
 478              	 .align 2
 479              	 .thumb
 480              	 .thumb_func
 482              	findEEPROM:
 483              	.LFB532:
 160:../cleanflight/src/main/config/config_eeprom.c **** 
 161:../cleanflight/src/main/config/config_eeprom.c **** // find config record for reg + classification (profile info) in EEPROM
 162:../cleanflight/src/main/config/config_eeprom.c **** // return NULL when record is not found
 163:../cleanflight/src/main/config/config_eeprom.c **** // this function assumes that EEPROM content is valid
 164:../cleanflight/src/main/config/config_eeprom.c **** static const configRecord_t *findEEPROM(const pgRegistry_t *reg, configRecordFlags_e classification
 165:../cleanflight/src/main/config/config_eeprom.c **** {
 484              	 .loc 2 165 0
 485              	 .cfi_startproc
 486              	 
 487              	 
 488 0000 80B5     	 push {r7,lr}
 489              	.LCFI37:
 490              	 .cfi_def_cfa_offset 8
 491              	 .cfi_offset 7,-8
 492              	 .cfi_offset 14,-4
 493 0002 84B0     	 sub sp,sp,#16
 494              	.LCFI38:
 495              	 .cfi_def_cfa_offset 24
 496 0004 00AF     	 add r7,sp,#0
 497              	.LCFI39:
 498              	 .cfi_def_cfa_register 7
 499 0006 7860     	 str r0,[r7,#4]
 500 0008 0B46     	 mov r3,r1
 501 000a FB70     	 strb r3,[r7,#3]
 166:../cleanflight/src/main/config/config_eeprom.c ****     const uint8_t *p = &__config_start;
 502              	 .loc 2 166 0
 503 000c 1C4B     	 ldr r3,.L32
 504 000e FB60     	 str r3,[r7,#12]
 167:../cleanflight/src/main/config/config_eeprom.c ****     p += sizeof(configHeader_t);             // skip header
 505              	 .loc 2 167 0
 506 0010 FB68     	 ldr r3,[r7,#12]
 507 0012 0233     	 adds r3,r3,#2
 508 0014 FB60     	 str r3,[r7,#12]
 509              	.L31:
 510              	.LBB4:
 168:../cleanflight/src/main/config/config_eeprom.c ****     while (true) {
 169:../cleanflight/src/main/config/config_eeprom.c ****         const configRecord_t *record = (const configRecord_t *)p;
 511              	 .loc 2 169 0
 512 0016 FB68     	 ldr r3,[r7,#12]
 513 0018 BB60     	 str r3,[r7,#8]
 170:../cleanflight/src/main/config/config_eeprom.c ****         if (record->size == 0
 514              	 .loc 2 170 0
 515 001a BB68     	 ldr r3,[r7,#8]
 516 001c 1B88     	 ldrh r3,[r3]
 517 001e 9BB2     	 uxth r3,r3
 518 0020 002B     	 cmp r3,#0
 519 0022 28D0     	 beq .L28
 171:../cleanflight/src/main/config/config_eeprom.c ****             || p + record->size >= &__config_end
 520              	 .loc 2 171 0
 521 0024 BB68     	 ldr r3,[r7,#8]
 522 0026 1B88     	 ldrh r3,[r3]
 523 0028 9BB2     	 uxth r3,r3
 524 002a 1A46     	 mov r2,r3
 525 002c FB68     	 ldr r3,[r7,#12]
 526 002e 1344     	 add r3,r3,r2
 527 0030 144A     	 ldr r2,.L32+4
 528 0032 9342     	 cmp r3,r2
 529 0034 1FD2     	 bcs .L28
 172:../cleanflight/src/main/config/config_eeprom.c ****             || record->size < sizeof(*record))
 530              	 .loc 2 172 0
 531 0036 BB68     	 ldr r3,[r7,#8]
 532 0038 1B88     	 ldrh r3,[r3]
 533 003a 9BB2     	 uxth r3,r3
 534 003c 052B     	 cmp r3,#5
 535 003e 1AD9     	 bls .L28
 173:../cleanflight/src/main/config/config_eeprom.c ****             break;
 174:../cleanflight/src/main/config/config_eeprom.c ****         if (pgN(reg) == record->pgn
 536              	 .loc 2 174 0
 537 0040 7868     	 ldr r0,[r7,#4]
 538 0042 FFF7FEFF 	 bl pgN
 539 0046 0346     	 mov r3,r0
 540 0048 1A46     	 mov r2,r3
 541 004a BB68     	 ldr r3,[r7,#8]
 542 004c 5B88     	 ldrh r3,[r3,#2]
 543 004e 9BB2     	 uxth r3,r3
 544 0050 9A42     	 cmp r2,r3
 545 0052 08D1     	 bne .L29
 175:../cleanflight/src/main/config/config_eeprom.c ****             && (record->flags & CR_CLASSIFICATION_MASK) == classification)
 546              	 .loc 2 175 0
 547 0054 BB68     	 ldr r3,[r7,#8]
 548 0056 5B79     	 ldrb r3,[r3,#5]
 549 0058 03F00302 	 and r2,r3,#3
 550 005c FB78     	 ldrb r3,[r7,#3]
 551 005e 9A42     	 cmp r2,r3
 552 0060 01D1     	 bne .L29
 176:../cleanflight/src/main/config/config_eeprom.c ****             return record;
 553              	 .loc 2 176 0
 554 0062 BB68     	 ldr r3,[r7,#8]
 555 0064 08E0     	 b .L30
 556              	.L29:
 177:../cleanflight/src/main/config/config_eeprom.c ****         p += record->size;
 557              	 .loc 2 177 0
 558 0066 BB68     	 ldr r3,[r7,#8]
 559 0068 1B88     	 ldrh r3,[r3]
 560 006a 9BB2     	 uxth r3,r3
 561 006c 1A46     	 mov r2,r3
 562 006e FB68     	 ldr r3,[r7,#12]
 563 0070 1344     	 add r3,r3,r2
 564 0072 FB60     	 str r3,[r7,#12]
 565              	.LBE4:
 178:../cleanflight/src/main/config/config_eeprom.c ****     }
 566              	 .loc 2 178 0
 567 0074 CFE7     	 b .L31
 568              	.L28:
 179:../cleanflight/src/main/config/config_eeprom.c ****     // record not found
 180:../cleanflight/src/main/config/config_eeprom.c ****     return NULL;
 569              	 .loc 2 180 0
 570 0076 0023     	 movs r3,#0
 571              	.L30:
 181:../cleanflight/src/main/config/config_eeprom.c **** }
 572              	 .loc 2 181 0
 573 0078 1846     	 mov r0,r3
 574 007a 1037     	 adds r7,r7,#16
 575              	.LCFI40:
 576              	 .cfi_def_cfa_offset 8
 577 007c BD46     	 mov sp,r7
 578              	.LCFI41:
 579              	 .cfi_def_cfa_register 13
 580              	 
 581 007e 80BD     	 pop {r7,pc}
 582              	.L33:
 583              	 .align 2
 584              	.L32:
 585 0080 00000000 	 .word __config_start
 586 0084 00000000 	 .word __config_end
 587              	 .cfi_endproc
 588              	.LFE532:
 590              	 .section .text.loadEEPROM,"ax",%progbits
 591              	 .align 2
 592              	 .global loadEEPROM
 593              	 .thumb
 594              	 .thumb_func
 596              	loadEEPROM:
 597              	.LFB533:
 182:../cleanflight/src/main/config/config_eeprom.c **** 
 183:../cleanflight/src/main/config/config_eeprom.c **** // Initialize all PG records from EEPROM.
 184:../cleanflight/src/main/config/config_eeprom.c **** // This functions processes all PGs sequentially, scanning EEPROM for each one. This is suboptimal,
 185:../cleanflight/src/main/config/config_eeprom.c **** //   but each PG is loaded/initialized exactly once and in defined order.
 186:../cleanflight/src/main/config/config_eeprom.c **** bool loadEEPROM(void)
 187:../cleanflight/src/main/config/config_eeprom.c **** {
 598              	 .loc 2 187 0
 599              	 .cfi_startproc
 600              	 
 601              	 
 602 0000 90B5     	 push {r4,r7,lr}
 603              	.LCFI42:
 604              	 .cfi_def_cfa_offset 12
 605              	 .cfi_offset 4,-12
 606              	 .cfi_offset 7,-8
 607              	 .cfi_offset 14,-4
 608 0002 85B0     	 sub sp,sp,#20
 609              	.LCFI43:
 610              	 .cfi_def_cfa_offset 32
 611 0004 00AF     	 add r7,sp,#0
 612              	.LCFI44:
 613              	 .cfi_def_cfa_register 7
 188:../cleanflight/src/main/config/config_eeprom.c ****     bool success = true;
 614              	 .loc 2 188 0
 615 0006 0123     	 movs r3,#1
 616 0008 FB73     	 strb r3,[r7,#15]
 617              	.LBB5:
 189:../cleanflight/src/main/config/config_eeprom.c **** 
 190:../cleanflight/src/main/config/config_eeprom.c ****     PG_FOREACH(reg) {
 618              	 .loc 2 190 0
 619 000a 194B     	 ldr r3,.L41
 620 000c BB60     	 str r3,[r7,#8]
 621 000e 26E0     	 b .L35
 622              	.L39:
 623              	.LBB6:
 191:../cleanflight/src/main/config/config_eeprom.c ****         const configRecord_t *rec = findEEPROM(reg, CR_CLASSICATION_SYSTEM);
 624              	 .loc 2 191 0
 625 0010 B868     	 ldr r0,[r7,#8]
 626 0012 0021     	 movs r1,#0
 627 0014 FFF7FEFF 	 bl findEEPROM
 628 0018 7860     	 str r0,[r7,#4]
 192:../cleanflight/src/main/config/config_eeprom.c ****         if (rec) {
 629              	 .loc 2 192 0
 630 001a 7B68     	 ldr r3,[r7,#4]
 631 001c 002B     	 cmp r3,#0
 632 001e 16D0     	 beq .L36
 193:../cleanflight/src/main/config/config_eeprom.c ****             // config from EEPROM is available, use it to initialize PG. pgLoad will handle version
 194:../cleanflight/src/main/config/config_eeprom.c ****             if (!pgLoad(reg, rec->pg, rec->size - offsetof(configRecord_t, pg), rec->version)) {
 633              	 .loc 2 194 0
 634 0020 7B68     	 ldr r3,[r7,#4]
 635 0022 9A1D     	 adds r2,r3,#6
 636 0024 7B68     	 ldr r3,[r7,#4]
 637 0026 1B88     	 ldrh r3,[r3]
 638 0028 9BB2     	 uxth r3,r3
 639 002a 063B     	 subs r3,r3,#6
 640 002c 1C46     	 mov r4,r3
 641 002e 7B68     	 ldr r3,[r7,#4]
 642 0030 1B79     	 ldrb r3,[r3,#4]
 643 0032 B868     	 ldr r0,[r7,#8]
 644 0034 1146     	 mov r1,r2
 645 0036 2246     	 mov r2,r4
 646 0038 FFF7FEFF 	 bl pgLoad
 647 003c 0346     	 mov r3,r0
 648 003e 83F00103 	 eor r3,r3,#1
 649 0042 DBB2     	 uxtb r3,r3
 650 0044 002B     	 cmp r3,#0
 651 0046 07D0     	 beq .L38
 195:../cleanflight/src/main/config/config_eeprom.c ****                 success = false;
 652              	 .loc 2 195 0
 653 0048 0023     	 movs r3,#0
 654 004a FB73     	 strb r3,[r7,#15]
 655 004c 04E0     	 b .L38
 656              	.L36:
 196:../cleanflight/src/main/config/config_eeprom.c ****             }
 197:../cleanflight/src/main/config/config_eeprom.c ****         } else {
 198:../cleanflight/src/main/config/config_eeprom.c ****             pgReset(reg);
 657              	 .loc 2 198 0
 658 004e B868     	 ldr r0,[r7,#8]
 659 0050 FFF7FEFF 	 bl pgReset
 199:../cleanflight/src/main/config/config_eeprom.c **** 
 200:../cleanflight/src/main/config/config_eeprom.c ****             success = false;
 660              	 .loc 2 200 0
 661 0054 0023     	 movs r3,#0
 662 0056 FB73     	 strb r3,[r7,#15]
 663              	.L38:
 664              	.LBE6:
 190:../cleanflight/src/main/config/config_eeprom.c ****         const configRecord_t *rec = findEEPROM(reg, CR_CLASSICATION_SYSTEM);
 665              	 .loc 2 190 0 discriminator 2
 666 0058 BB68     	 ldr r3,[r7,#8]
 667 005a 1433     	 adds r3,r3,#20
 668 005c BB60     	 str r3,[r7,#8]
 669              	.L35:
 190:../cleanflight/src/main/config/config_eeprom.c ****         const configRecord_t *rec = findEEPROM(reg, CR_CLASSICATION_SYSTEM);
 670              	 .loc 2 190 0 is_stmt 0 discriminator 1
 671 005e BB68     	 ldr r3,[r7,#8]
 672 0060 044A     	 ldr r2,.L41+4
 673 0062 9342     	 cmp r3,r2
 674 0064 D4D3     	 bcc .L39
 675              	.LBE5:
 201:../cleanflight/src/main/config/config_eeprom.c ****         }
 202:../cleanflight/src/main/config/config_eeprom.c ****     }
 203:../cleanflight/src/main/config/config_eeprom.c **** 
 204:../cleanflight/src/main/config/config_eeprom.c ****     return success;
 676              	 .loc 2 204 0 is_stmt 1
 677 0066 FB7B     	 ldrb r3,[r7,#15]
 205:../cleanflight/src/main/config/config_eeprom.c **** }
 678              	 .loc 2 205 0
 679 0068 1846     	 mov r0,r3
 680 006a 1437     	 adds r7,r7,#20
 681              	.LCFI45:
 682              	 .cfi_def_cfa_offset 12
 683 006c BD46     	 mov sp,r7
 684              	.LCFI46:
 685              	 .cfi_def_cfa_register 13
 686              	 
 687 006e 90BD     	 pop {r4,r7,pc}
 688              	.L42:
 689              	 .align 2
 690              	.L41:
 691 0070 00000000 	 .word __pg_registry_start
 692 0074 00000000 	 .word __pg_registry_end
 693              	 .cfi_endproc
 694              	.LFE533:
 696              	 .section .rodata
 697              	 .align 2
 698              	.LC0:
 699 0000 AB       	 .byte -85
 700 0001 BE       	 .byte -66
 701 0002 0000     	 .section .text.writeSettingsToEEPROM,"ax",%progbits
 702              	 .align 2
 703              	 .thumb
 704              	 .thumb_func
 706              	writeSettingsToEEPROM:
 707              	.LFB534:
 206:../cleanflight/src/main/config/config_eeprom.c **** 
 207:../cleanflight/src/main/config/config_eeprom.c **** static bool writeSettingsToEEPROM(void)
 208:../cleanflight/src/main/config/config_eeprom.c **** {
 708              	 .loc 2 208 0
 709              	 .cfi_startproc
 710              	 
 711              	 
 712 0000 80B5     	 push {r7,lr}
 713              	.LCFI47:
 714              	 .cfi_def_cfa_offset 8
 715              	 .cfi_offset 7,-8
 716              	 .cfi_offset 14,-4
 717 0002 CCB0     	 sub sp,sp,#304
 718              	.LCFI48:
 719              	 .cfi_def_cfa_offset 312
 720 0004 00AF     	 add r7,sp,#0
 721              	.LCFI49:
 722              	 .cfi_def_cfa_register 7
 209:../cleanflight/src/main/config/config_eeprom.c ****     config_streamer_t streamer;
 210:../cleanflight/src/main/config/config_eeprom.c ****     config_streamer_init(&streamer);
 723              	 .loc 2 210 0
 724 0006 07F11403 	 add r3,r7,#20
 725 000a 1846     	 mov r0,r3
 726 000c FFF7FEFF 	 bl config_streamer_init
 211:../cleanflight/src/main/config/config_eeprom.c **** 
 212:../cleanflight/src/main/config/config_eeprom.c ****     config_streamer_start(&streamer, (uintptr_t)&__config_start, &__config_end - &__config_start);
 727              	 .loc 2 212 0
 728 0010 6A49     	 ldr r1,.L47
 729 0012 6B4A     	 ldr r2,.L47+4
 730 0014 694B     	 ldr r3,.L47
 731 0016 D31A     	 subs r3,r2,r3
 732 0018 07F11402 	 add r2,r7,#20
 733 001c 1046     	 mov r0,r2
 734 001e 1A46     	 mov r2,r3
 735 0020 FFF7FEFF 	 bl config_streamer_start
 213:../cleanflight/src/main/config/config_eeprom.c **** 
 214:../cleanflight/src/main/config/config_eeprom.c ****     configHeader_t header = {
 736              	 .loc 2 214 0
 737 0024 07F11003 	 add r3,r7,#16
 738 0028 6649     	 ldr r1,.L47+8
 739 002a 1A46     	 mov r2,r3
 740 002c 0B46     	 mov r3,r1
 741 002e 1B88     	 ldrh r3,[r3]
 742 0030 1380     	 strh r3,[r2]
 215:../cleanflight/src/main/config/config_eeprom.c ****         .eepromConfigVersion =  EEPROM_CONF_VERSION,
 216:../cleanflight/src/main/config/config_eeprom.c ****         .magic_be =             0xBE,
 217:../cleanflight/src/main/config/config_eeprom.c ****     };
 218:../cleanflight/src/main/config/config_eeprom.c **** 
 219:../cleanflight/src/main/config/config_eeprom.c ****     config_streamer_write(&streamer, (uint8_t *)&header, sizeof(header));
 743              	 .loc 2 219 0
 744 0032 07F11402 	 add r2,r7,#20
 745 0036 07F11003 	 add r3,r7,#16
 746 003a 1046     	 mov r0,r2
 747 003c 1946     	 mov r1,r3
 748 003e 0222     	 movs r2,#2
 749 0040 FFF7FEFF 	 bl config_streamer_write
 220:../cleanflight/src/main/config/config_eeprom.c ****     uint16_t crc = CRC_START_VALUE;
 750              	 .loc 2 220 0
 751 0044 4FF6FF73 	 movw r3,#65535
 752 0048 A7F82E31 	 strh r3,[r7,#302]
 221:../cleanflight/src/main/config/config_eeprom.c ****     crc = crc16_ccitt_update(crc, (uint8_t *)&header, sizeof(header));
 753              	 .loc 2 221 0
 754 004c B7F82E21 	 ldrh r2,[r7,#302]
 755 0050 07F11003 	 add r3,r7,#16
 756 0054 1046     	 mov r0,r2
 757 0056 1946     	 mov r1,r3
 758 0058 0222     	 movs r2,#2
 759 005a FFF7FEFF 	 bl crc16_ccitt_update
 760 005e 0346     	 mov r3,r0
 761 0060 A7F82E31 	 strh r3,[r7,#302]
 762              	.LBB7:
 222:../cleanflight/src/main/config/config_eeprom.c ****     PG_FOREACH(reg) {
 763              	 .loc 2 222 0
 764 0064 584B     	 ldr r3,.L47+12
 765 0066 C7F82831 	 str r3,[r7,#296]
 766 006a 56E0     	 b .L44
 767              	.L45:
 768              	.LBB8:
 223:../cleanflight/src/main/config/config_eeprom.c ****         const uint16_t regSize = pgSize(reg);
 769              	 .loc 2 223 0 discriminator 3
 770 006c D7F82801 	 ldr r0,[r7,#296]
 771 0070 FFF7FEFF 	 bl pgSize
 772 0074 0346     	 mov r3,r0
 773 0076 A7F82631 	 strh r3,[r7,#294]
 224:../cleanflight/src/main/config/config_eeprom.c ****         configRecord_t record = {
 774              	 .loc 2 224 0 discriminator 3
 775 007a B7F82631 	 ldrh r3,[r7,#294]
 776 007e 0633     	 adds r3,r3,#6
 777 0080 9AB2     	 uxth r2,r3
 778 0082 3B1D     	 adds r3,r7,#4
 779 0084 1A80     	 strh r2,[r3]
 225:../cleanflight/src/main/config/config_eeprom.c ****             .size = sizeof(configRecord_t) + regSize,
 226:../cleanflight/src/main/config/config_eeprom.c ****             .pgn = pgN(reg),
 780              	 .loc 2 226 0 discriminator 3
 781 0086 D7F82801 	 ldr r0,[r7,#296]
 782 008a FFF7FEFF 	 bl pgN
 783 008e 0346     	 mov r3,r0
 784 0090 1A46     	 mov r2,r3
 224:../cleanflight/src/main/config/config_eeprom.c ****         configRecord_t record = {
 785              	 .loc 2 224 0 discriminator 3
 786 0092 3B1D     	 adds r3,r7,#4
 787 0094 5A80     	 strh r2,[r3,#2]
 227:../cleanflight/src/main/config/config_eeprom.c ****             .version = pgVersion(reg),
 788              	 .loc 2 227 0 discriminator 3
 789 0096 D7F82801 	 ldr r0,[r7,#296]
 790 009a FFF7FEFF 	 bl pgVersion
 791 009e 0346     	 mov r3,r0
 792 00a0 1A46     	 mov r2,r3
 224:../cleanflight/src/main/config/config_eeprom.c ****         configRecord_t record = {
 793              	 .loc 2 224 0 discriminator 3
 794 00a2 3B1D     	 adds r3,r7,#4
 795 00a4 1A71     	 strb r2,[r3,#4]
 796 00a6 3B1D     	 adds r3,r7,#4
 797 00a8 0022     	 movs r2,#0
 798 00aa 5A71     	 strb r2,[r3,#5]
 228:../cleanflight/src/main/config/config_eeprom.c ****             .flags = 0
 229:../cleanflight/src/main/config/config_eeprom.c ****         };
 230:../cleanflight/src/main/config/config_eeprom.c **** 
 231:../cleanflight/src/main/config/config_eeprom.c ****         record.flags |= CR_CLASSICATION_SYSTEM;
 799              	 .loc 2 231 0 discriminator 3
 800 00ac 3B1D     	 adds r3,r7,#4
 801 00ae 5A79     	 ldrb r2,[r3,#5]
 802 00b0 3B1D     	 adds r3,r7,#4
 803 00b2 5A71     	 strb r2,[r3,#5]
 232:../cleanflight/src/main/config/config_eeprom.c ****         config_streamer_write(&streamer, (uint8_t *)&record, sizeof(record));
 804              	 .loc 2 232 0 discriminator 3
 805 00b4 07F11402 	 add r2,r7,#20
 806 00b8 3B1D     	 adds r3,r7,#4
 807 00ba 1046     	 mov r0,r2
 808 00bc 1946     	 mov r1,r3
 809 00be 0622     	 movs r2,#6
 810 00c0 FFF7FEFF 	 bl config_streamer_write
 233:../cleanflight/src/main/config/config_eeprom.c ****         crc = crc16_ccitt_update(crc, (uint8_t *)&record, sizeof(record));
 811              	 .loc 2 233 0 discriminator 3
 812 00c4 B7F82E21 	 ldrh r2,[r7,#302]
 813 00c8 3B1D     	 adds r3,r7,#4
 814 00ca 1046     	 mov r0,r2
 815 00cc 1946     	 mov r1,r3
 816 00ce 0622     	 movs r2,#6
 817 00d0 FFF7FEFF 	 bl crc16_ccitt_update
 818 00d4 0346     	 mov r3,r0
 819 00d6 A7F82E31 	 strh r3,[r7,#302]
 234:../cleanflight/src/main/config/config_eeprom.c ****         config_streamer_write(&streamer, reg->address, regSize);
 820              	 .loc 2 234 0 discriminator 3
 821 00da D7F82831 	 ldr r3,[r7,#296]
 822 00de 5A68     	 ldr r2,[r3,#4]
 823 00e0 B7F82631 	 ldrh r3,[r7,#294]
 824 00e4 07F11401 	 add r1,r7,#20
 825 00e8 0846     	 mov r0,r1
 826 00ea 1146     	 mov r1,r2
 827 00ec 1A46     	 mov r2,r3
 828 00ee FFF7FEFF 	 bl config_streamer_write
 235:../cleanflight/src/main/config/config_eeprom.c ****         crc = crc16_ccitt_update(crc, reg->address, regSize);
 829              	 .loc 2 235 0 discriminator 3
 830 00f2 D7F82831 	 ldr r3,[r7,#296]
 831 00f6 5A68     	 ldr r2,[r3,#4]
 832 00f8 B7F82631 	 ldrh r3,[r7,#294]
 833 00fc B7F82E11 	 ldrh r1,[r7,#302]
 834 0100 0846     	 mov r0,r1
 835 0102 1146     	 mov r1,r2
 836 0104 1A46     	 mov r2,r3
 837 0106 FFF7FEFF 	 bl crc16_ccitt_update
 838 010a 0346     	 mov r3,r0
 839 010c A7F82E31 	 strh r3,[r7,#302]
 840              	.LBE8:
 222:../cleanflight/src/main/config/config_eeprom.c ****         const uint16_t regSize = pgSize(reg);
 841              	 .loc 2 222 0 discriminator 3
 842 0110 D7F82831 	 ldr r3,[r7,#296]
 843 0114 1433     	 adds r3,r3,#20
 844 0116 C7F82831 	 str r3,[r7,#296]
 845              	.L44:
 222:../cleanflight/src/main/config/config_eeprom.c ****         const uint16_t regSize = pgSize(reg);
 846              	 .loc 2 222 0 is_stmt 0 discriminator 1
 847 011a D7F82831 	 ldr r3,[r7,#296]
 848 011e 2B4A     	 ldr r2,.L47+16
 849 0120 9342     	 cmp r3,r2
 850 0122 A3D3     	 bcc .L45
 851              	.LBE7:
 236:../cleanflight/src/main/config/config_eeprom.c ****     }
 237:../cleanflight/src/main/config/config_eeprom.c **** 
 238:../cleanflight/src/main/config/config_eeprom.c ****     configFooter_t footer = {
 852              	 .loc 2 238 0 is_stmt 1
 853 0124 07F10C03 	 add r3,r7,#12
 854 0128 0022     	 movs r2,#0
 855 012a 1A80     	 strh r2,[r3]
 239:../cleanflight/src/main/config/config_eeprom.c ****         .terminator = 0,
 240:../cleanflight/src/main/config/config_eeprom.c ****     };
 241:../cleanflight/src/main/config/config_eeprom.c **** 
 242:../cleanflight/src/main/config/config_eeprom.c ****     config_streamer_write(&streamer, (uint8_t *)&footer, sizeof(footer));
 856              	 .loc 2 242 0
 857 012c 07F11402 	 add r2,r7,#20
 858 0130 07F10C03 	 add r3,r7,#12
 859 0134 1046     	 mov r0,r2
 860 0136 1946     	 mov r1,r3
 861 0138 0222     	 movs r2,#2
 862 013a FFF7FEFF 	 bl config_streamer_write
 243:../cleanflight/src/main/config/config_eeprom.c ****     crc = crc16_ccitt_update(crc, (uint8_t *)&footer, sizeof(footer));
 863              	 .loc 2 243 0
 864 013e B7F82E21 	 ldrh r2,[r7,#302]
 865 0142 07F10C03 	 add r3,r7,#12
 866 0146 1046     	 mov r0,r2
 867 0148 1946     	 mov r1,r3
 868 014a 0222     	 movs r2,#2
 869 014c FFF7FEFF 	 bl crc16_ccitt_update
 870 0150 0346     	 mov r3,r0
 871 0152 A7F82E31 	 strh r3,[r7,#302]
 244:../cleanflight/src/main/config/config_eeprom.c **** 
 245:../cleanflight/src/main/config/config_eeprom.c ****     // include inverted CRC in big endian format in the CRC
 246:../cleanflight/src/main/config/config_eeprom.c ****     const uint16_t invertedBigEndianCrc = ~(((crc & 0xFF) << 8) | (crc >> 8));
 872              	 .loc 2 246 0
 873 0156 B7F82E31 	 ldrh r3,[r7,#302]
 874 015a 1B02     	 lsls r3,r3,#8
 875 015c 9AB2     	 uxth r2,r3
 876 015e B7F82E31 	 ldrh r3,[r7,#302]
 877 0162 1B0A     	 lsrs r3,r3,#8
 878 0164 9BB2     	 uxth r3,r3
 879 0166 9BB2     	 uxth r3,r3
 880 0168 1343     	 orrs r3,r3,r2
 881 016a 9BB2     	 uxth r3,r3
 882 016c 9BB2     	 uxth r3,r3
 883 016e DB43     	 mvns r3,r3
 884 0170 9AB2     	 uxth r2,r3
 885 0172 07F10A03 	 add r3,r7,#10
 886 0176 1A80     	 strh r2,[r3]
 247:../cleanflight/src/main/config/config_eeprom.c ****     config_streamer_write(&streamer, (uint8_t *)&invertedBigEndianCrc, sizeof(crc));
 887              	 .loc 2 247 0
 888 0178 07F11402 	 add r2,r7,#20
 889 017c 07F10A03 	 add r3,r7,#10
 890 0180 1046     	 mov r0,r2
 891 0182 1946     	 mov r1,r3
 892 0184 0222     	 movs r2,#2
 893 0186 FFF7FEFF 	 bl config_streamer_write
 248:../cleanflight/src/main/config/config_eeprom.c **** 
 249:../cleanflight/src/main/config/config_eeprom.c ****     config_streamer_flush(&streamer);
 894              	 .loc 2 249 0
 895 018a 07F11403 	 add r3,r7,#20
 896 018e 1846     	 mov r0,r3
 897 0190 FFF7FEFF 	 bl config_streamer_flush
 250:../cleanflight/src/main/config/config_eeprom.c **** 
 251:../cleanflight/src/main/config/config_eeprom.c ****     const bool success = config_streamer_finish(&streamer) == 0;
 898              	 .loc 2 251 0
 899 0194 07F11403 	 add r3,r7,#20
 900 0198 1846     	 mov r0,r3
 901 019a FFF7FEFF 	 bl config_streamer_finish
 902 019e 0346     	 mov r3,r0
 903 01a0 002B     	 cmp r3,#0
 904 01a2 0CBF     	 ite eq
 905 01a4 0123     	 moveq r3,#1
 906 01a6 0023     	 movne r3,#0
 907 01a8 87F82531 	 strb r3,[r7,#293]
 252:../cleanflight/src/main/config/config_eeprom.c **** 
 253:../cleanflight/src/main/config/config_eeprom.c ****     return success;
 908              	 .loc 2 253 0
 909 01ac 97F82531 	 ldrb r3,[r7,#293]
 254:../cleanflight/src/main/config/config_eeprom.c **** }
 910              	 .loc 2 254 0
 911 01b0 1846     	 mov r0,r3
 912 01b2 07F59877 	 add r7,r7,#304
 913              	.LCFI50:
 914              	 .cfi_def_cfa_offset 8
 915 01b6 BD46     	 mov sp,r7
 916              	.LCFI51:
 917              	 .cfi_def_cfa_register 13
 918              	 
 919 01b8 80BD     	 pop {r7,pc}
 920              	.L48:
 921 01ba 00BF     	 .align 2
 922              	.L47:
 923 01bc 00000000 	 .word __config_start
 924 01c0 00000000 	 .word __config_end
 925 01c4 00000000 	 .word .LC0
 926 01c8 00000000 	 .word __pg_registry_start
 927 01cc 00000000 	 .word __pg_registry_end
 928              	 .cfi_endproc
 929              	.LFE534:
 931              	 .section .text.writeConfigToEEPROM,"ax",%progbits
 932              	 .align 2
 933              	 .global writeConfigToEEPROM
 934              	 .thumb
 935              	 .thumb_func
 937              	writeConfigToEEPROM:
 938              	.LFB535:
 255:../cleanflight/src/main/config/config_eeprom.c **** 
 256:../cleanflight/src/main/config/config_eeprom.c **** void writeConfigToEEPROM(void)
 257:../cleanflight/src/main/config/config_eeprom.c **** {
 939              	 .loc 2 257 0
 940              	 .cfi_startproc
 941              	 
 942              	 
 943 0000 80B5     	 push {r7,lr}
 944              	.LCFI52:
 945              	 .cfi_def_cfa_offset 8
 946              	 .cfi_offset 7,-8
 947              	 .cfi_offset 14,-4
 948 0002 82B0     	 sub sp,sp,#8
 949              	.LCFI53:
 950              	 .cfi_def_cfa_offset 16
 951 0004 00AF     	 add r7,sp,#0
 952              	.LCFI54:
 953              	 .cfi_def_cfa_register 7
 258:../cleanflight/src/main/config/config_eeprom.c ****     bool success = false;
 954              	 .loc 2 258 0
 955 0006 0023     	 movs r3,#0
 956 0008 FB71     	 strb r3,[r7,#7]
 957              	.LBB9:
 259:../cleanflight/src/main/config/config_eeprom.c ****     // write it
 260:../cleanflight/src/main/config/config_eeprom.c ****     for (int attempt = 0; attempt < 3 && !success; attempt++) {
 958              	 .loc 2 260 0
 959 000a 0023     	 movs r3,#0
 960 000c 3B60     	 str r3,[r7]
 961 000e 09E0     	 b .L50
 962              	.L53:
 261:../cleanflight/src/main/config/config_eeprom.c ****         if (writeSettingsToEEPROM()) {
 963              	 .loc 2 261 0
 964 0010 FFF7FEFF 	 bl writeSettingsToEEPROM
 965 0014 0346     	 mov r3,r0
 966 0016 002B     	 cmp r3,#0
 967 0018 01D0     	 beq .L51
 262:../cleanflight/src/main/config/config_eeprom.c ****             success = true;
 968              	 .loc 2 262 0
 969 001a 0123     	 movs r3,#1
 970 001c FB71     	 strb r3,[r7,#7]
 971              	.L51:
 260:../cleanflight/src/main/config/config_eeprom.c ****         if (writeSettingsToEEPROM()) {
 972              	 .loc 2 260 0 discriminator 2
 973 001e 3B68     	 ldr r3,[r7]
 974 0020 0133     	 adds r3,r3,#1
 975 0022 3B60     	 str r3,[r7]
 976              	.L50:
 260:../cleanflight/src/main/config/config_eeprom.c ****         if (writeSettingsToEEPROM()) {
 977              	 .loc 2 260 0 is_stmt 0 discriminator 1
 978 0024 3B68     	 ldr r3,[r7]
 979 0026 022B     	 cmp r3,#2
 980 0028 05DC     	 bgt .L52
 260:../cleanflight/src/main/config/config_eeprom.c ****         if (writeSettingsToEEPROM()) {
 981              	 .loc 2 260 0 discriminator 3
 982 002a FB79     	 ldrb r3,[r7,#7]
 983 002c 83F00103 	 eor r3,r3,#1
 984 0030 DBB2     	 uxtb r3,r3
 985 0032 002B     	 cmp r3,#0
 986 0034 ECD1     	 bne .L53
 987              	.L52:
 988              	.LBE9:
 263:../cleanflight/src/main/config/config_eeprom.c ****         }
 264:../cleanflight/src/main/config/config_eeprom.c ****     }
 265:../cleanflight/src/main/config/config_eeprom.c **** 
 266:../cleanflight/src/main/config/config_eeprom.c ****     if (success && isEEPROMVersionValid() && isEEPROMStructureValid()) {
 989              	 .loc 2 266 0 is_stmt 1
 990 0036 FB79     	 ldrb r3,[r7,#7]
 991 0038 002B     	 cmp r3,#0
 992 003a 0AD0     	 beq .L54
 993              	 .loc 2 266 0 is_stmt 0 discriminator 1
 994 003c FFF7FEFF 	 bl isEEPROMVersionValid
 995 0040 0346     	 mov r3,r0
 996 0042 002B     	 cmp r3,#0
 997 0044 05D0     	 beq .L54
 998              	 .loc 2 266 0 discriminator 2
 999 0046 FFF7FEFF 	 bl isEEPROMStructureValid
 1000 004a 0346     	 mov r3,r0
 1001 004c 002B     	 cmp r3,#0
 1002 004e 00D0     	 beq .L54
 267:../cleanflight/src/main/config/config_eeprom.c ****         return;
 1003              	 .loc 2 267 0 is_stmt 1
 1004 0050 02E0     	 b .L49
 1005              	.L54:
 268:../cleanflight/src/main/config/config_eeprom.c ****     }
 269:../cleanflight/src/main/config/config_eeprom.c **** 
 270:../cleanflight/src/main/config/config_eeprom.c ****     // Flash write failed - just die now
 271:../cleanflight/src/main/config/config_eeprom.c ****     failureMode(FAILURE_FLASH_WRITE_FAILED);
 1006              	 .loc 2 271 0
 1007 0052 0520     	 movs r0,#5
 1008 0054 FFF7FEFF 	 bl failureMode
 1009              	.L49:
 272:../cleanflight/src/main/config/config_eeprom.c **** }
 1010              	 .loc 2 272 0
 1011 0058 0837     	 adds r7,r7,#8
 1012              	.LCFI55:
 1013              	 .cfi_def_cfa_offset 8
 1014 005a BD46     	 mov sp,r7
 1015              	.LCFI56:
 1016              	 .cfi_def_cfa_register 13
 1017              	 
 1018 005c 80BD     	 pop {r7,pc}
 1019              	 .cfi_endproc
 1020              	.LFE535:
 1022 005e 00BF     	 .text
 1023              	.Letext0:
 1024              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1025              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1026              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 1027              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/config_streamer.h"
 1028              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 1029              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/system.h"
 1030              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 1031              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 config_eeprom.c
    {standard input}:20     .text.pgN:00000000 $t
    {standard input}:24     .text.pgN:00000000 pgN
    {standard input}:66     .text.pgVersion:00000000 $t
    {standard input}:70     .text.pgVersion:00000000 pgVersion
    {standard input}:112    .text.pgSize:00000000 $t
    {standard input}:116    .text.pgSize:00000000 pgSize
    {standard input}:157    .bss.eepromConfigSize:00000000 $d
    {standard input}:160    .bss.eepromConfigSize:00000000 eepromConfigSize
    {standard input}:163    .text.initEEPROM:00000000 $t
    {standard input}:168    .text.initEEPROM:00000000 initEEPROM
    {standard input}:197    .text.isEEPROMVersionValid:00000000 $t
    {standard input}:202    .text.isEEPROMVersionValid:00000000 isEEPROMVersionValid
    {standard input}:254    .text.isEEPROMVersionValid:00000028 $d
    {standard input}:259    .text.isEEPROMStructureValid:00000000 $t
    {standard input}:264    .text.isEEPROMStructureValid:00000000 isEEPROMStructureValid
    {standard input}:430    .text.isEEPROMStructureValid:000000e8 $d
    {standard input}:437    .text.getEEPROMConfigSize:00000000 $t
    {standard input}:442    .text.getEEPROMConfigSize:00000000 getEEPROMConfigSize
    {standard input}:473    .text.getEEPROMConfigSize:00000014 $d
    {standard input}:478    .text.findEEPROM:00000000 $t
    {standard input}:482    .text.findEEPROM:00000000 findEEPROM
    {standard input}:585    .text.findEEPROM:00000080 $d
    {standard input}:591    .text.loadEEPROM:00000000 $t
    {standard input}:596    .text.loadEEPROM:00000000 loadEEPROM
    {standard input}:691    .text.loadEEPROM:00000070 $d
    {standard input}:697    .rodata:00000000 $d
    {standard input}:702    .text.writeSettingsToEEPROM:00000000 $t
    {standard input}:706    .text.writeSettingsToEEPROM:00000000 writeSettingsToEEPROM
    {standard input}:923    .text.writeSettingsToEEPROM:000001bc $d
    {standard input}:932    .text.writeConfigToEEPROM:00000000 $t
    {standard input}:937    .text.writeConfigToEEPROM:00000000 writeConfigToEEPROM
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__config_start
crc16_ccitt_update
__config_end
pgLoad
pgReset
__pg_registry_start
__pg_registry_end
config_streamer_init
config_streamer_start
config_streamer_write
config_streamer_flush
config_streamer_finish
failureMode
