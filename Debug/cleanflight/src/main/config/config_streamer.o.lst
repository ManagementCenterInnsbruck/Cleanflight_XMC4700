   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "config_streamer.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.config_streamer_init,"ax",%progbits
  20              	 .align 2
  21              	 .global config_streamer_init
  22              	 .thumb
  23              	 .thumb_func
  25              	config_streamer_init:
  26              	.LFB521:
  27              	 .file 1 "../cleanflight/src/main/config/config_streamer.c"
   1:../cleanflight/src/main/config/config_streamer.c **** /*
   2:../cleanflight/src/main/config/config_streamer.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/config/config_streamer.c ****  *
   4:../cleanflight/src/main/config/config_streamer.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/config/config_streamer.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/config/config_streamer.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/config/config_streamer.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/config/config_streamer.c ****  * any later version.
   9:../cleanflight/src/main/config/config_streamer.c ****  *
  10:../cleanflight/src/main/config/config_streamer.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/config/config_streamer.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/config/config_streamer.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/config/config_streamer.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/config/config_streamer.c ****  *
  15:../cleanflight/src/main/config/config_streamer.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/config/config_streamer.c ****  * along with this software.
  17:../cleanflight/src/main/config/config_streamer.c ****  *
  18:../cleanflight/src/main/config/config_streamer.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/config/config_streamer.c ****  */
  20:../cleanflight/src/main/config/config_streamer.c **** 
  21:../cleanflight/src/main/config/config_streamer.c **** #include <string.h>
  22:../cleanflight/src/main/config/config_streamer.c **** 
  23:../cleanflight/src/main/config/config_streamer.c **** #include "platform.h"
  24:../cleanflight/src/main/config/config_streamer.c **** 
  25:../cleanflight/src/main/config/config_streamer.c **** #include "drivers/system.h"
  26:../cleanflight/src/main/config/config_streamer.c **** 
  27:../cleanflight/src/main/config/config_streamer.c **** #include "config/config_streamer.h"
  28:../cleanflight/src/main/config/config_streamer.c **** 
  29:../cleanflight/src/main/config/config_streamer.c **** #ifndef EEPROM_IN_RAM
  30:../cleanflight/src/main/config/config_streamer.c **** extern uint8_t __config_start;   // configured via linker script when building binaries.
  31:../cleanflight/src/main/config/config_streamer.c **** extern uint8_t __config_end;
  32:../cleanflight/src/main/config/config_streamer.c **** #endif
  33:../cleanflight/src/main/config/config_streamer.c **** 
  34:../cleanflight/src/main/config/config_streamer.c **** #if !defined(FLASH_PAGE_SIZE)
  35:../cleanflight/src/main/config/config_streamer.c **** // F1
  36:../cleanflight/src/main/config/config_streamer.c **** # if defined(STM32F10X_MD)
  37:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 (0x400)
  38:../cleanflight/src/main/config/config_streamer.c **** # elif defined(STM32F10X_HD)
  39:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 (0x800)
  40:../cleanflight/src/main/config/config_streamer.c **** // F3
  41:../cleanflight/src/main/config/config_streamer.c **** # elif defined(STM32F303xC)
  42:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 (0x800)
  43:../cleanflight/src/main/config/config_streamer.c **** // F4
  44:../cleanflight/src/main/config/config_streamer.c **** # elif defined(STM32F40_41xxx)
  45:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 ((uint32_t)0x4000) // 16K sectors
  46:../cleanflight/src/main/config/config_streamer.c **** # elif defined (STM32F411xE)
  47:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 ((uint32_t)0x4000)
  48:../cleanflight/src/main/config/config_streamer.c **** # elif defined(STM32F427_437xx)
  49:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 ((uint32_t)0x4000)
  50:../cleanflight/src/main/config/config_streamer.c **** # elif defined (STM32F446xx)
  51:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 ((uint32_t)0x4000)
  52:../cleanflight/src/main/config/config_streamer.c **** // F7
  53:../cleanflight/src/main/config/config_streamer.c **** #elif defined(STM32F722xx)
  54:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 ((uint32_t)0x4000) // 16K sectors
  55:../cleanflight/src/main/config/config_streamer.c **** # elif defined(STM32F745xx)
  56:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 ((uint32_t)0x8000) // 32K sectors
  57:../cleanflight/src/main/config/config_streamer.c **** # elif defined(STM32F746xx)
  58:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 ((uint32_t)0x8000)
  59:../cleanflight/src/main/config/config_streamer.c **** #elif defined(XMC4700_F100x2048)
  60:../cleanflight/src/main/config/config_streamer.c **** 
  61:../cleanflight/src/main/config/config_streamer.c **** # elif defined(UNIT_TEST)
  62:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 (0x400)
  63:../cleanflight/src/main/config/config_streamer.c **** // SIMULATOR
  64:../cleanflight/src/main/config/config_streamer.c **** # elif defined(SIMULATOR_BUILD)
  65:../cleanflight/src/main/config/config_streamer.c **** #  define FLASH_PAGE_SIZE                 (0x400)
  66:../cleanflight/src/main/config/config_streamer.c **** # else
  67:../cleanflight/src/main/config/config_streamer.c **** #  error "Flash page size not defined for target."
  68:../cleanflight/src/main/config/config_streamer.c **** # endif
  69:../cleanflight/src/main/config/config_streamer.c **** #endif
  70:../cleanflight/src/main/config/config_streamer.c **** 
  71:../cleanflight/src/main/config/config_streamer.c **** void config_streamer_init(config_streamer_t *c)
  72:../cleanflight/src/main/config/config_streamer.c **** {
  28              	 .loc 1 72 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  73:../cleanflight/src/main/config/config_streamer.c ****     memset(c, 0, sizeof(*c));
  44              	 .loc 1 73 0
  45 0008 7868     	 ldr r0,[r7,#4]
  46 000a 0021     	 movs r1,#0
  47 000c 40F21112 	 movw r2,#273
  48 0010 FFF7FEFF 	 bl memset
  74:../cleanflight/src/main/config/config_streamer.c **** }
  49              	 .loc 1 74 0
  50 0014 0837     	 adds r7,r7,#8
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 8
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 80BD     	 pop {r7,pc}
  58              	 .cfi_endproc
  59              	.LFE521:
  61 001a 00BF     	 .section .text.config_streamer_start,"ax",%progbits
  62              	 .align 2
  63              	 .global config_streamer_start
  64              	 .thumb
  65              	 .thumb_func
  67              	config_streamer_start:
  68              	.LFB522:
  75:../cleanflight/src/main/config/config_streamer.c **** 
  76:../cleanflight/src/main/config/config_streamer.c **** void config_streamer_start(config_streamer_t *c, uintptr_t base, int size)
  77:../cleanflight/src/main/config/config_streamer.c **** {
  69              	 .loc 1 77 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73 0000 80B5     	 push {r7,lr}
  74              	.LCFI5:
  75              	 .cfi_def_cfa_offset 8
  76              	 .cfi_offset 7,-8
  77              	 .cfi_offset 14,-4
  78 0002 84B0     	 sub sp,sp,#16
  79              	.LCFI6:
  80              	 .cfi_def_cfa_offset 24
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI7:
  83              	 .cfi_def_cfa_register 7
  84 0006 F860     	 str r0,[r7,#12]
  85 0008 B960     	 str r1,[r7,#8]
  86 000a 7A60     	 str r2,[r7,#4]
  78:../cleanflight/src/main/config/config_streamer.c ****     // base must start at FLASH_PAGE_SIZE boundary
  79:../cleanflight/src/main/config/config_streamer.c ****     c->address = base;
  87              	 .loc 1 79 0
  88 000c FB68     	 ldr r3,[r7,#12]
  89 000e BA68     	 ldr r2,[r7,#8]
  90 0010 1A60     	 str r2,[r3]
  80:../cleanflight/src/main/config/config_streamer.c ****     c->size = size;
  91              	 .loc 1 80 0
  92 0012 FB68     	 ldr r3,[r7,#12]
  93 0014 7A68     	 ldr r2,[r7,#4]
  94 0016 5A60     	 str r2,[r3,#4]
  81:../cleanflight/src/main/config/config_streamer.c ****     if (!c->unlocked) {
  95              	 .loc 1 81 0
  96 0018 FB68     	 ldr r3,[r7,#12]
  97 001a 93F81031 	 ldrb r3,[r3,#272]
  98 001e 83F00103 	 eor r3,r3,#1
  99 0022 DBB2     	 uxtb r3,r3
 100 0024 002B     	 cmp r3,#0
 101 0026 08D0     	 beq .L3
  82:../cleanflight/src/main/config/config_streamer.c **** #ifdef XMC4700_F100x2048
  83:../cleanflight/src/main/config/config_streamer.c ****     	XMC_FLASH_EraseSector((uint32_t*)c->address);
 102              	 .loc 1 83 0
 103 0028 FB68     	 ldr r3,[r7,#12]
 104 002a 1B68     	 ldr r3,[r3]
 105 002c 1846     	 mov r0,r3
 106 002e FFF7FEFF 	 bl XMC_FLASH_EraseSector
  84:../cleanflight/src/main/config/config_streamer.c **** #else
  85:../cleanflight/src/main/config/config_streamer.c **** #if defined(STM32F7)
  86:../cleanflight/src/main/config/config_streamer.c ****         HAL_FLASH_Unlock();
  87:../cleanflight/src/main/config/config_streamer.c **** #else
  88:../cleanflight/src/main/config/config_streamer.c ****         FLASH_Unlock();
  89:../cleanflight/src/main/config/config_streamer.c **** #endif
  90:../cleanflight/src/main/config/config_streamer.c **** #endif
  91:../cleanflight/src/main/config/config_streamer.c ****         c->unlocked = true;
 107              	 .loc 1 91 0
 108 0032 FB68     	 ldr r3,[r7,#12]
 109 0034 0122     	 movs r2,#1
 110 0036 83F81021 	 strb r2,[r3,#272]
 111              	.L3:
  92:../cleanflight/src/main/config/config_streamer.c ****     }
  93:../cleanflight/src/main/config/config_streamer.c **** 
  94:../cleanflight/src/main/config/config_streamer.c **** #if defined(STM32F10X)
  95:../cleanflight/src/main/config/config_streamer.c ****     FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_PGERR | FLASH_FLAG_WRPRTERR);
  96:../cleanflight/src/main/config/config_streamer.c **** #elif defined(STM32F303)
  97:../cleanflight/src/main/config/config_streamer.c ****     FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_PGERR | FLASH_FLAG_WRPERR);
  98:../cleanflight/src/main/config/config_streamer.c **** #elif defined(STM32F4)
  99:../cleanflight/src/main/config/config_streamer.c ****     FLASH_ClearFlag(FLASH_FLAG_EOP | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR | FLASH_FLAG_PGAERR | FLA
 100:../cleanflight/src/main/config/config_streamer.c **** #elif defined(XMC4700_F100x2048)
 101:../cleanflight/src/main/config/config_streamer.c ****     // NOP
 102:../cleanflight/src/main/config/config_streamer.c **** #elif defined(STM32F7)
 103:../cleanflight/src/main/config/config_streamer.c ****     // NOP
 104:../cleanflight/src/main/config/config_streamer.c **** #elif defined(UNIT_TEST) || defined(SIMULATOR_BUILD)
 105:../cleanflight/src/main/config/config_streamer.c ****     // NOP
 106:../cleanflight/src/main/config/config_streamer.c **** #else
 107:../cleanflight/src/main/config/config_streamer.c **** # error "Unsupported CPU"
 108:../cleanflight/src/main/config/config_streamer.c **** #endif
 109:../cleanflight/src/main/config/config_streamer.c ****     c->err = 0;
 112              	 .loc 1 109 0
 113 003a FB68     	 ldr r3,[r7,#12]
 114 003c 0022     	 movs r2,#0
 115 003e 83F80C21 	 strb r2,[r3,#268]
 116 0042 0022     	 movs r2,#0
 117 0044 83F80D21 	 strb r2,[r3,#269]
 118 0048 0022     	 movs r2,#0
 119 004a 83F80E21 	 strb r2,[r3,#270]
 120 004e 0022     	 movs r2,#0
 121 0050 83F80F21 	 strb r2,[r3,#271]
 110:../cleanflight/src/main/config/config_streamer.c **** }
 122              	 .loc 1 110 0
 123 0054 1037     	 adds r7,r7,#16
 124              	.LCFI8:
 125              	 .cfi_def_cfa_offset 8
 126 0056 BD46     	 mov sp,r7
 127              	.LCFI9:
 128              	 .cfi_def_cfa_register 13
 129              	 
 130 0058 80BD     	 pop {r7,pc}
 131              	 .cfi_endproc
 132              	.LFE522:
 134 005a 00BF     	 .section .text.write_page,"ax",%progbits
 135              	 .align 2
 136              	 .thumb
 137              	 .thumb_func
 139              	write_page:
 140              	.LFB523:
 111:../cleanflight/src/main/config/config_streamer.c **** 
 112:../cleanflight/src/main/config/config_streamer.c **** #if defined(STM32F745xx) || defined(STM32F746xx)
 113:../cleanflight/src/main/config/config_streamer.c **** /*
 114:../cleanflight/src/main/config/config_streamer.c **** Sector 0    0x08000000 - 0x08007FFF 32 Kbytes
 115:../cleanflight/src/main/config/config_streamer.c **** Sector 1    0x08008000 - 0x0800FFFF 32 Kbytes
 116:../cleanflight/src/main/config/config_streamer.c **** Sector 2    0x08010000 - 0x08017FFF 32 Kbytes
 117:../cleanflight/src/main/config/config_streamer.c **** Sector 3    0x08018000 - 0x0801FFFF 32 Kbytes
 118:../cleanflight/src/main/config/config_streamer.c **** Sector 4    0x08020000 - 0x0803FFFF 128 Kbytes
 119:../cleanflight/src/main/config/config_streamer.c **** Sector 5    0x08040000 - 0x0807FFFF 256 Kbytes
 120:../cleanflight/src/main/config/config_streamer.c **** Sector 6    0x08080000 - 0x080BFFFF 256 Kbytes
 121:../cleanflight/src/main/config/config_streamer.c **** Sector 7    0x080C0000 - 0x080FFFFF 256 Kbytes
 122:../cleanflight/src/main/config/config_streamer.c **** */
 123:../cleanflight/src/main/config/config_streamer.c **** 
 124:../cleanflight/src/main/config/config_streamer.c **** static uint32_t getFLASHSectorForEEPROM(void)
 125:../cleanflight/src/main/config/config_streamer.c **** {
 126:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x08007FFF)
 127:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_0;
 128:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0800FFFF)
 129:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_1;
 130:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x08017FFF)
 131:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_2;
 132:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0801FFFF)
 133:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_3;
 134:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0803FFFF)
 135:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_4;
 136:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0807FFFF)
 137:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_5;
 138:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x080BFFFF)
 139:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_6;
 140:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x080FFFFF)
 141:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_7;
 142:../cleanflight/src/main/config/config_streamer.c **** 
 143:../cleanflight/src/main/config/config_streamer.c ****     // Not good
 144:../cleanflight/src/main/config/config_streamer.c ****     while (1) {
 145:../cleanflight/src/main/config/config_streamer.c ****         failureMode(FAILURE_FLASH_WRITE_FAILED);
 146:../cleanflight/src/main/config/config_streamer.c ****     }
 147:../cleanflight/src/main/config/config_streamer.c **** }
 148:../cleanflight/src/main/config/config_streamer.c **** 
 149:../cleanflight/src/main/config/config_streamer.c **** #elif defined(STM32F722xx)
 150:../cleanflight/src/main/config/config_streamer.c **** /*
 151:../cleanflight/src/main/config/config_streamer.c **** Sector 0    0x08000000 - 0x08003FFF 16 Kbytes
 152:../cleanflight/src/main/config/config_streamer.c **** Sector 1    0x08004000 - 0x08007FFF 16 Kbytes
 153:../cleanflight/src/main/config/config_streamer.c **** Sector 2    0x08008000 - 0x0800BFFF 16 Kbytes
 154:../cleanflight/src/main/config/config_streamer.c **** Sector 3    0x0800C000 - 0x0800FFFF 16 Kbytes
 155:../cleanflight/src/main/config/config_streamer.c **** Sector 4    0x08010000 - 0x0801FFFF 64 Kbytes
 156:../cleanflight/src/main/config/config_streamer.c **** Sector 5    0x08020000 - 0x0803FFFF 128 Kbytes
 157:../cleanflight/src/main/config/config_streamer.c **** Sector 6    0x08040000 - 0x0805FFFF 128 Kbytes
 158:../cleanflight/src/main/config/config_streamer.c **** Sector 7    0x08060000 - 0x0807FFFF 128 Kbytes
 159:../cleanflight/src/main/config/config_streamer.c **** */
 160:../cleanflight/src/main/config/config_streamer.c **** 
 161:../cleanflight/src/main/config/config_streamer.c **** static uint32_t getFLASHSectorForEEPROM(void)
 162:../cleanflight/src/main/config/config_streamer.c **** {
 163:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x08003FFF)
 164:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_0;
 165:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x08007FFF)
 166:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_1;
 167:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0800BFFF)
 168:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_2;
 169:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0800FFFF)
 170:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_3;
 171:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0801FFFF)
 172:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_4;
 173:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0803FFFF)
 174:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_5;
 175:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0805FFFF)
 176:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_6;
 177:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0807FFFF)
 178:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_SECTOR_7;
 179:../cleanflight/src/main/config/config_streamer.c **** 
 180:../cleanflight/src/main/config/config_streamer.c ****     // Not good
 181:../cleanflight/src/main/config/config_streamer.c ****     while (1) {
 182:../cleanflight/src/main/config/config_streamer.c ****         failureMode(FAILURE_FLASH_WRITE_FAILED);
 183:../cleanflight/src/main/config/config_streamer.c ****     }
 184:../cleanflight/src/main/config/config_streamer.c **** }
 185:../cleanflight/src/main/config/config_streamer.c **** 
 186:../cleanflight/src/main/config/config_streamer.c **** #elif defined(STM32F4)
 187:../cleanflight/src/main/config/config_streamer.c **** /*
 188:../cleanflight/src/main/config/config_streamer.c **** Sector 0    0x08000000 - 0x08003FFF 16 Kbytes
 189:../cleanflight/src/main/config/config_streamer.c **** Sector 1    0x08004000 - 0x08007FFF 16 Kbytes
 190:../cleanflight/src/main/config/config_streamer.c **** Sector 2    0x08008000 - 0x0800BFFF 16 Kbytes
 191:../cleanflight/src/main/config/config_streamer.c **** Sector 3    0x0800C000 - 0x0800FFFF 16 Kbytes
 192:../cleanflight/src/main/config/config_streamer.c **** Sector 4    0x08010000 - 0x0801FFFF 64 Kbytes
 193:../cleanflight/src/main/config/config_streamer.c **** Sector 5    0x08020000 - 0x0803FFFF 128 Kbytes
 194:../cleanflight/src/main/config/config_streamer.c **** Sector 6    0x08040000 - 0x0805FFFF 128 Kbytes
 195:../cleanflight/src/main/config/config_streamer.c **** Sector 7    0x08060000 - 0x0807FFFF 128 Kbytes
 196:../cleanflight/src/main/config/config_streamer.c **** Sector 8    0x08080000 - 0x0809FFFF 128 Kbytes
 197:../cleanflight/src/main/config/config_streamer.c **** Sector 9    0x080A0000 - 0x080BFFFF 128 Kbytes
 198:../cleanflight/src/main/config/config_streamer.c **** Sector 10   0x080C0000 - 0x080DFFFF 128 Kbytes
 199:../cleanflight/src/main/config/config_streamer.c **** Sector 11   0x080E0000 - 0x080FFFFF 128 Kbytes
 200:../cleanflight/src/main/config/config_streamer.c **** */
 201:../cleanflight/src/main/config/config_streamer.c **** 
 202:../cleanflight/src/main/config/config_streamer.c **** static uint32_t getFLASHSectorForEEPROM(void)
 203:../cleanflight/src/main/config/config_streamer.c **** {
 204:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x08003FFF)
 205:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_0;
 206:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x08007FFF)
 207:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_1;
 208:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0800BFFF)
 209:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_2;
 210:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0800FFFF)
 211:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_3;
 212:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0801FFFF)
 213:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_4;
 214:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0803FFFF)
 215:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_5;
 216:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0805FFFF)
 217:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_6;
 218:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0807FFFF)
 219:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_7;
 220:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x0809FFFF)
 221:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_8;
 222:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x080DFFFF)
 223:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_9;
 224:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x080BFFFF)
 225:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_10;
 226:../cleanflight/src/main/config/config_streamer.c ****     if ((uint32_t)&__config_start <= 0x080FFFFF)
 227:../cleanflight/src/main/config/config_streamer.c ****         return FLASH_Sector_11;
 228:../cleanflight/src/main/config/config_streamer.c **** 
 229:../cleanflight/src/main/config/config_streamer.c ****     // Not good
 230:../cleanflight/src/main/config/config_streamer.c ****     while (1) {
 231:../cleanflight/src/main/config/config_streamer.c ****         failureMode(FAILURE_FLASH_WRITE_FAILED);
 232:../cleanflight/src/main/config/config_streamer.c ****     }
 233:../cleanflight/src/main/config/config_streamer.c **** }
 234:../cleanflight/src/main/config/config_streamer.c **** #endif
 235:../cleanflight/src/main/config/config_streamer.c **** 
 236:../cleanflight/src/main/config/config_streamer.c **** #if defined(XMC4700_F100x2048)
 237:../cleanflight/src/main/config/config_streamer.c **** 
 238:../cleanflight/src/main/config/config_streamer.c **** static int write_page(config_streamer_t *c)
 239:../cleanflight/src/main/config/config_streamer.c **** {
 141              	 .loc 1 239 0
 142              	 .cfi_startproc
 143              	 
 144              	 
 145 0000 80B5     	 push {r7,lr}
 146              	.LCFI10:
 147              	 .cfi_def_cfa_offset 8
 148              	 .cfi_offset 7,-8
 149              	 .cfi_offset 14,-4
 150 0002 82B0     	 sub sp,sp,#8
 151              	.LCFI11:
 152              	 .cfi_def_cfa_offset 16
 153 0004 00AF     	 add r7,sp,#0
 154              	.LCFI12:
 155              	 .cfi_def_cfa_register 7
 156 0006 7860     	 str r0,[r7,#4]
 240:../cleanflight/src/main/config/config_streamer.c ****     if (c->err != 0) {
 157              	 .loc 1 240 0
 158 0008 7B68     	 ldr r3,[r7,#4]
 159 000a D3F80C31 	 ldr r3,[r3,#268]
 160 000e 002B     	 cmp r3,#0
 161 0010 03D0     	 beq .L5
 241:../cleanflight/src/main/config/config_streamer.c ****         return c->err;
 162              	 .loc 1 241 0
 163 0012 7B68     	 ldr r3,[r7,#4]
 164 0014 D3F80C31 	 ldr r3,[r3,#268]
 165 0018 0FE0     	 b .L6
 166              	.L5:
 242:../cleanflight/src/main/config/config_streamer.c ****     }
 243:../cleanflight/src/main/config/config_streamer.c **** 
 244:../cleanflight/src/main/config/config_streamer.c ****     XMC_FLASH_ProgramPage((uint32_t*)c->address, (uint32_t*)c->buffer.b);
 167              	 .loc 1 244 0
 168 001a 7B68     	 ldr r3,[r7,#4]
 169 001c 1B68     	 ldr r3,[r3]
 170 001e 1A46     	 mov r2,r3
 171 0020 7B68     	 ldr r3,[r7,#4]
 172 0022 0833     	 adds r3,r3,#8
 173 0024 1046     	 mov r0,r2
 174 0026 1946     	 mov r1,r3
 175 0028 FFF7FEFF 	 bl XMC_FLASH_ProgramPage
 245:../cleanflight/src/main/config/config_streamer.c **** 
 246:../cleanflight/src/main/config/config_streamer.c ****     c->address += XMC_FLASH_BYTES_PER_PAGE;
 176              	 .loc 1 246 0
 177 002c 7B68     	 ldr r3,[r7,#4]
 178 002e 1B68     	 ldr r3,[r3]
 179 0030 03F58072 	 add r2,r3,#256
 180 0034 7B68     	 ldr r3,[r7,#4]
 181 0036 1A60     	 str r2,[r3]
 247:../cleanflight/src/main/config/config_streamer.c ****     return 0;
 182              	 .loc 1 247 0
 183 0038 0023     	 movs r3,#0
 184              	.L6:
 248:../cleanflight/src/main/config/config_streamer.c **** }
 185              	 .loc 1 248 0
 186 003a 1846     	 mov r0,r3
 187 003c 0837     	 adds r7,r7,#8
 188              	.LCFI13:
 189              	 .cfi_def_cfa_offset 8
 190 003e BD46     	 mov sp,r7
 191              	.LCFI14:
 192              	 .cfi_def_cfa_register 13
 193              	 
 194 0040 80BD     	 pop {r7,pc}
 195              	 .cfi_endproc
 196              	.LFE523:
 198 0042 00BF     	 .section .text.config_streamer_write,"ax",%progbits
 199              	 .align 2
 200              	 .global config_streamer_write
 201              	 .thumb
 202              	 .thumb_func
 204              	config_streamer_write:
 205              	.LFB524:
 249:../cleanflight/src/main/config/config_streamer.c **** 
 250:../cleanflight/src/main/config/config_streamer.c **** #else
 251:../cleanflight/src/main/config/config_streamer.c **** 
 252:../cleanflight/src/main/config/config_streamer.c **** static int write_word(config_streamer_t *c, uint32_t value)
 253:../cleanflight/src/main/config/config_streamer.c **** {
 254:../cleanflight/src/main/config/config_streamer.c ****     if (c->err != 0) {
 255:../cleanflight/src/main/config/config_streamer.c ****         return c->err;
 256:../cleanflight/src/main/config/config_streamer.c ****     }
 257:../cleanflight/src/main/config/config_streamer.c **** #if defined(STM32F7)
 258:../cleanflight/src/main/config/config_streamer.c ****     if (c->address % FLASH_PAGE_SIZE == 0) {
 259:../cleanflight/src/main/config/config_streamer.c ****         FLASH_EraseInitTypeDef EraseInitStruct = {
 260:../cleanflight/src/main/config/config_streamer.c ****             .TypeErase     = FLASH_TYPEERASE_SECTORS,
 261:../cleanflight/src/main/config/config_streamer.c ****             .VoltageRange  = FLASH_VOLTAGE_RANGE_3, // 2.7-3.6V
 262:../cleanflight/src/main/config/config_streamer.c ****             .NbSectors     = 1
 263:../cleanflight/src/main/config/config_streamer.c ****         };
 264:../cleanflight/src/main/config/config_streamer.c ****         EraseInitStruct.Sector = getFLASHSectorForEEPROM();
 265:../cleanflight/src/main/config/config_streamer.c ****         uint32_t SECTORError;
 266:../cleanflight/src/main/config/config_streamer.c ****         const HAL_StatusTypeDef status = HAL_FLASHEx_Erase(&EraseInitStruct, &SECTORError);
 267:../cleanflight/src/main/config/config_streamer.c ****         if (status != HAL_OK) {
 268:../cleanflight/src/main/config/config_streamer.c ****             return -1;
 269:../cleanflight/src/main/config/config_streamer.c ****         }
 270:../cleanflight/src/main/config/config_streamer.c ****     }
 271:../cleanflight/src/main/config/config_streamer.c ****     const HAL_StatusTypeDef status = HAL_FLASH_Program(FLASH_TYPEPROGRAM_WORD, c->address, value);
 272:../cleanflight/src/main/config/config_streamer.c ****     if (status != HAL_OK) {
 273:../cleanflight/src/main/config/config_streamer.c ****         return -2;
 274:../cleanflight/src/main/config/config_streamer.c ****     }
 275:../cleanflight/src/main/config/config_streamer.c **** #else
 276:../cleanflight/src/main/config/config_streamer.c ****     if (c->address % FLASH_PAGE_SIZE == 0) {
 277:../cleanflight/src/main/config/config_streamer.c **** #if defined(STM32F4)
 278:../cleanflight/src/main/config/config_streamer.c ****         const FLASH_Status status = FLASH_EraseSector(getFLASHSectorForEEPROM(), VoltageRange_3); /
 279:../cleanflight/src/main/config/config_streamer.c **** #else
 280:../cleanflight/src/main/config/config_streamer.c ****         const FLASH_Status status = FLASH_ErasePage(c->address);
 281:../cleanflight/src/main/config/config_streamer.c **** #endif
 282:../cleanflight/src/main/config/config_streamer.c ****         if (status != FLASH_COMPLETE) {
 283:../cleanflight/src/main/config/config_streamer.c ****             return -1;
 284:../cleanflight/src/main/config/config_streamer.c ****         }
 285:../cleanflight/src/main/config/config_streamer.c ****     }
 286:../cleanflight/src/main/config/config_streamer.c ****     const FLASH_Status status = FLASH_ProgramWord(c->address, value);
 287:../cleanflight/src/main/config/config_streamer.c ****     if (status != FLASH_COMPLETE) {
 288:../cleanflight/src/main/config/config_streamer.c ****         return -2;
 289:../cleanflight/src/main/config/config_streamer.c ****     }
 290:../cleanflight/src/main/config/config_streamer.c **** #endif
 291:../cleanflight/src/main/config/config_streamer.c ****     c->address += sizeof(value);
 292:../cleanflight/src/main/config/config_streamer.c ****     return 0;
 293:../cleanflight/src/main/config/config_streamer.c **** }
 294:../cleanflight/src/main/config/config_streamer.c **** #endif
 295:../cleanflight/src/main/config/config_streamer.c **** 
 296:../cleanflight/src/main/config/config_streamer.c **** int config_streamer_write(config_streamer_t *c, const uint8_t *p, uint32_t size)
 297:../cleanflight/src/main/config/config_streamer.c **** {
 206              	 .loc 1 297 0
 207              	 .cfi_startproc
 208              	 
 209              	 
 210 0000 80B5     	 push {r7,lr}
 211              	.LCFI15:
 212              	 .cfi_def_cfa_offset 8
 213              	 .cfi_offset 7,-8
 214              	 .cfi_offset 14,-4
 215 0002 86B0     	 sub sp,sp,#24
 216              	.LCFI16:
 217              	 .cfi_def_cfa_offset 32
 218 0004 00AF     	 add r7,sp,#0
 219              	.LCFI17:
 220              	 .cfi_def_cfa_register 7
 221 0006 F860     	 str r0,[r7,#12]
 222 0008 B960     	 str r1,[r7,#8]
 223 000a 7A60     	 str r2,[r7,#4]
 224              	.LBB2:
 298:../cleanflight/src/main/config/config_streamer.c ****     for (const uint8_t *pat = p; pat != (uint8_t*)p + size; pat++) {
 225              	 .loc 1 298 0
 226 000c BB68     	 ldr r3,[r7,#8]
 227 000e 7B61     	 str r3,[r7,#20]
 228 0010 29E0     	 b .L8
 229              	.L10:
 299:../cleanflight/src/main/config/config_streamer.c ****         c->buffer.b[c->at++] = *pat;
 230              	 .loc 1 299 0
 231 0012 FB68     	 ldr r3,[r7,#12]
 232 0014 D3F80831 	 ldr r3,[r3,#264]
 233 0018 591C     	 adds r1,r3,#1
 234 001a FA68     	 ldr r2,[r7,#12]
 235 001c C2F80811 	 str r1,[r2,#264]
 236 0020 7A69     	 ldr r2,[r7,#20]
 237 0022 1178     	 ldrb r1,[r2]
 238 0024 FA68     	 ldr r2,[r7,#12]
 239 0026 1344     	 add r3,r3,r2
 240 0028 0A46     	 mov r2,r1
 241 002a 1A72     	 strb r2,[r3,#8]
 300:../cleanflight/src/main/config/config_streamer.c **** 
 301:../cleanflight/src/main/config/config_streamer.c ****         if (c->at == sizeof(c->buffer)) {
 242              	 .loc 1 301 0
 243 002c FB68     	 ldr r3,[r7,#12]
 244 002e D3F80831 	 ldr r3,[r3,#264]
 245 0032 B3F5807F 	 cmp r3,#256
 246 0036 13D1     	 bne .L9
 302:../cleanflight/src/main/config/config_streamer.c **** #ifdef XMC4700_F100x2048
 303:../cleanflight/src/main/config/config_streamer.c ****         	c->err = write_page(c);
 247              	 .loc 1 303 0
 248 0038 F868     	 ldr r0,[r7,#12]
 249 003a FFF7FEFF 	 bl write_page
 250 003e 0246     	 mov r2,r0
 251 0040 FB68     	 ldr r3,[r7,#12]
 252 0042 C3F80C21 	 str r2,[r3,#268]
 304:../cleanflight/src/main/config/config_streamer.c **** #else
 305:../cleanflight/src/main/config/config_streamer.c ****             c->err = write_word(c, c->buffer.w);
 306:../cleanflight/src/main/config/config_streamer.c **** #endif
 307:../cleanflight/src/main/config/config_streamer.c ****             c->at = 0;
 253              	 .loc 1 307 0
 254 0046 FB68     	 ldr r3,[r7,#12]
 255 0048 0022     	 movs r2,#0
 256 004a 83F80821 	 strb r2,[r3,#264]
 257 004e 0022     	 movs r2,#0
 258 0050 83F80921 	 strb r2,[r3,#265]
 259 0054 0022     	 movs r2,#0
 260 0056 83F80A21 	 strb r2,[r3,#266]
 261 005a 0022     	 movs r2,#0
 262 005c 83F80B21 	 strb r2,[r3,#267]
 263              	.L9:
 298:../cleanflight/src/main/config/config_streamer.c ****         c->buffer.b[c->at++] = *pat;
 264              	 .loc 1 298 0 discriminator 2
 265 0060 7B69     	 ldr r3,[r7,#20]
 266 0062 0133     	 adds r3,r3,#1
 267 0064 7B61     	 str r3,[r7,#20]
 268              	.L8:
 298:../cleanflight/src/main/config/config_streamer.c ****         c->buffer.b[c->at++] = *pat;
 269              	 .loc 1 298 0 is_stmt 0 discriminator 1
 270 0066 BA68     	 ldr r2,[r7,#8]
 271 0068 7B68     	 ldr r3,[r7,#4]
 272 006a 1A44     	 add r2,r2,r3
 273 006c 7B69     	 ldr r3,[r7,#20]
 274 006e 9A42     	 cmp r2,r3
 275 0070 CFD1     	 bne .L10
 276              	.LBE2:
 308:../cleanflight/src/main/config/config_streamer.c ****         }
 309:../cleanflight/src/main/config/config_streamer.c ****     }
 310:../cleanflight/src/main/config/config_streamer.c ****     return c->err;
 277              	 .loc 1 310 0 is_stmt 1
 278 0072 FB68     	 ldr r3,[r7,#12]
 279 0074 D3F80C31 	 ldr r3,[r3,#268]
 311:../cleanflight/src/main/config/config_streamer.c **** }
 280              	 .loc 1 311 0
 281 0078 1846     	 mov r0,r3
 282 007a 1837     	 adds r7,r7,#24
 283              	.LCFI18:
 284              	 .cfi_def_cfa_offset 8
 285 007c BD46     	 mov sp,r7
 286              	.LCFI19:
 287              	 .cfi_def_cfa_register 13
 288              	 
 289 007e 80BD     	 pop {r7,pc}
 290              	 .cfi_endproc
 291              	.LFE524:
 293              	 .section .text.config_streamer_status,"ax",%progbits
 294              	 .align 2
 295              	 .global config_streamer_status
 296              	 .thumb
 297              	 .thumb_func
 299              	config_streamer_status:
 300              	.LFB525:
 312:../cleanflight/src/main/config/config_streamer.c **** 
 313:../cleanflight/src/main/config/config_streamer.c **** int config_streamer_status(config_streamer_t *c)
 314:../cleanflight/src/main/config/config_streamer.c **** {
 301              	 .loc 1 314 0
 302              	 .cfi_startproc
 303              	 
 304              	 
 305              	 
 306 0000 80B4     	 push {r7}
 307              	.LCFI20:
 308              	 .cfi_def_cfa_offset 4
 309              	 .cfi_offset 7,-4
 310 0002 83B0     	 sub sp,sp,#12
 311              	.LCFI21:
 312              	 .cfi_def_cfa_offset 16
 313 0004 00AF     	 add r7,sp,#0
 314              	.LCFI22:
 315              	 .cfi_def_cfa_register 7
 316 0006 7860     	 str r0,[r7,#4]
 315:../cleanflight/src/main/config/config_streamer.c ****     return c->err;
 317              	 .loc 1 315 0
 318 0008 7B68     	 ldr r3,[r7,#4]
 319 000a D3F80C31 	 ldr r3,[r3,#268]
 316:../cleanflight/src/main/config/config_streamer.c **** }
 320              	 .loc 1 316 0
 321 000e 1846     	 mov r0,r3
 322 0010 0C37     	 adds r7,r7,#12
 323              	.LCFI23:
 324              	 .cfi_def_cfa_offset 4
 325 0012 BD46     	 mov sp,r7
 326              	.LCFI24:
 327              	 .cfi_def_cfa_register 13
 328              	 
 329 0014 5DF8047B 	 ldr r7,[sp],#4
 330              	.LCFI25:
 331              	 .cfi_restore 7
 332              	 .cfi_def_cfa_offset 0
 333 0018 7047     	 bx lr
 334              	 .cfi_endproc
 335              	.LFE525:
 337 001a 00BF     	 .section .text.config_streamer_flush,"ax",%progbits
 338              	 .align 2
 339              	 .global config_streamer_flush
 340              	 .thumb
 341              	 .thumb_func
 343              	config_streamer_flush:
 344              	.LFB526:
 317:../cleanflight/src/main/config/config_streamer.c **** 
 318:../cleanflight/src/main/config/config_streamer.c **** int config_streamer_flush(config_streamer_t *c)
 319:../cleanflight/src/main/config/config_streamer.c **** {
 345              	 .loc 1 319 0
 346              	 .cfi_startproc
 347              	 
 348              	 
 349 0000 80B5     	 push {r7,lr}
 350              	.LCFI26:
 351              	 .cfi_def_cfa_offset 8
 352              	 .cfi_offset 7,-8
 353              	 .cfi_offset 14,-4
 354 0002 82B0     	 sub sp,sp,#8
 355              	.LCFI27:
 356              	 .cfi_def_cfa_offset 16
 357 0004 00AF     	 add r7,sp,#0
 358              	.LCFI28:
 359              	 .cfi_def_cfa_register 7
 360 0006 7860     	 str r0,[r7,#4]
 320:../cleanflight/src/main/config/config_streamer.c ****     if (c->at != 0) {
 361              	 .loc 1 320 0
 362 0008 7B68     	 ldr r3,[r7,#4]
 363 000a D3F80831 	 ldr r3,[r3,#264]
 364 000e 002B     	 cmp r3,#0
 365 0010 23D0     	 beq .L15
 321:../cleanflight/src/main/config/config_streamer.c ****         memset(c->buffer.b + c->at, 0, sizeof(c->buffer) - c->at);
 366              	 .loc 1 321 0
 367 0012 7B68     	 ldr r3,[r7,#4]
 368 0014 D3F80831 	 ldr r3,[r3,#264]
 369 0018 0833     	 adds r3,r3,#8
 370 001a 7A68     	 ldr r2,[r7,#4]
 371 001c 1A44     	 add r2,r2,r3
 372 001e 7B68     	 ldr r3,[r7,#4]
 373 0020 D3F80831 	 ldr r3,[r3,#264]
 374 0024 C3F58073 	 rsb r3,r3,#256
 375 0028 1046     	 mov r0,r2
 376 002a 0021     	 movs r1,#0
 377 002c 1A46     	 mov r2,r3
 378 002e FFF7FEFF 	 bl memset
 322:../cleanflight/src/main/config/config_streamer.c **** #ifdef XMC4700_F100x2048
 323:../cleanflight/src/main/config/config_streamer.c ****         c->err = write_page(c);
 379              	 .loc 1 323 0
 380 0032 7868     	 ldr r0,[r7,#4]
 381 0034 FFF7FEFF 	 bl write_page
 382 0038 0246     	 mov r2,r0
 383 003a 7B68     	 ldr r3,[r7,#4]
 384 003c C3F80C21 	 str r2,[r3,#268]
 324:../cleanflight/src/main/config/config_streamer.c **** #else
 325:../cleanflight/src/main/config/config_streamer.c ****         c->err = write_word(c, c->buffer.w);
 326:../cleanflight/src/main/config/config_streamer.c **** #endif
 327:../cleanflight/src/main/config/config_streamer.c ****         c->at = 0;
 385              	 .loc 1 327 0
 386 0040 7B68     	 ldr r3,[r7,#4]
 387 0042 0022     	 movs r2,#0
 388 0044 83F80821 	 strb r2,[r3,#264]
 389 0048 0022     	 movs r2,#0
 390 004a 83F80921 	 strb r2,[r3,#265]
 391 004e 0022     	 movs r2,#0
 392 0050 83F80A21 	 strb r2,[r3,#266]
 393 0054 0022     	 movs r2,#0
 394 0056 83F80B21 	 strb r2,[r3,#267]
 395              	.L15:
 328:../cleanflight/src/main/config/config_streamer.c ****     }
 329:../cleanflight/src/main/config/config_streamer.c ****     return c-> err;
 396              	 .loc 1 329 0
 397 005a 7B68     	 ldr r3,[r7,#4]
 398 005c D3F80C31 	 ldr r3,[r3,#268]
 330:../cleanflight/src/main/config/config_streamer.c **** }
 399              	 .loc 1 330 0
 400 0060 1846     	 mov r0,r3
 401 0062 0837     	 adds r7,r7,#8
 402              	.LCFI29:
 403              	 .cfi_def_cfa_offset 8
 404 0064 BD46     	 mov sp,r7
 405              	.LCFI30:
 406              	 .cfi_def_cfa_register 13
 407              	 
 408 0066 80BD     	 pop {r7,pc}
 409              	 .cfi_endproc
 410              	.LFE526:
 412              	 .section .text.config_streamer_finish,"ax",%progbits
 413              	 .align 2
 414              	 .global config_streamer_finish
 415              	 .thumb
 416              	 .thumb_func
 418              	config_streamer_finish:
 419              	.LFB527:
 331:../cleanflight/src/main/config/config_streamer.c **** 
 332:../cleanflight/src/main/config/config_streamer.c **** int config_streamer_finish(config_streamer_t *c)
 333:../cleanflight/src/main/config/config_streamer.c **** {
 420              	 .loc 1 333 0
 421              	 .cfi_startproc
 422              	 
 423              	 
 424              	 
 425 0000 80B4     	 push {r7}
 426              	.LCFI31:
 427              	 .cfi_def_cfa_offset 4
 428              	 .cfi_offset 7,-4
 429 0002 83B0     	 sub sp,sp,#12
 430              	.LCFI32:
 431              	 .cfi_def_cfa_offset 16
 432 0004 00AF     	 add r7,sp,#0
 433              	.LCFI33:
 434              	 .cfi_def_cfa_register 7
 435 0006 7860     	 str r0,[r7,#4]
 334:../cleanflight/src/main/config/config_streamer.c ****     if (c->unlocked) {
 436              	 .loc 1 334 0
 437 0008 7B68     	 ldr r3,[r7,#4]
 438 000a 93F81031 	 ldrb r3,[r3,#272]
 439 000e 002B     	 cmp r3,#0
 440 0010 03D0     	 beq .L18
 335:../cleanflight/src/main/config/config_streamer.c **** #ifndef XMC4700_F100x2048
 336:../cleanflight/src/main/config/config_streamer.c **** #if defined(STM32F7)
 337:../cleanflight/src/main/config/config_streamer.c ****         HAL_FLASH_Lock();
 338:../cleanflight/src/main/config/config_streamer.c **** #else
 339:../cleanflight/src/main/config/config_streamer.c ****         FLASH_Lock();
 340:../cleanflight/src/main/config/config_streamer.c **** #endif
 341:../cleanflight/src/main/config/config_streamer.c **** #endif
 342:../cleanflight/src/main/config/config_streamer.c ****         c->unlocked = false;
 441              	 .loc 1 342 0
 442 0012 7B68     	 ldr r3,[r7,#4]
 443 0014 0022     	 movs r2,#0
 444 0016 83F81021 	 strb r2,[r3,#272]
 445              	.L18:
 343:../cleanflight/src/main/config/config_streamer.c ****     }
 344:../cleanflight/src/main/config/config_streamer.c ****     return c->err;
 446              	 .loc 1 344 0
 447 001a 7B68     	 ldr r3,[r7,#4]
 448 001c D3F80C31 	 ldr r3,[r3,#268]
 345:../cleanflight/src/main/config/config_streamer.c **** }
 449              	 .loc 1 345 0
 450 0020 1846     	 mov r0,r3
 451 0022 0C37     	 adds r7,r7,#12
 452              	.LCFI34:
 453              	 .cfi_def_cfa_offset 4
 454 0024 BD46     	 mov sp,r7
 455              	.LCFI35:
 456              	 .cfi_def_cfa_register 13
 457              	 
 458 0026 5DF8047B 	 ldr r7,[sp],#4
 459              	.LCFI36:
 460              	 .cfi_restore 7
 461              	 .cfi_def_cfa_offset 0
 462 002a 7047     	 bx lr
 463              	 .cfi_endproc
 464              	.LFE527:
 466              	 .text
 467              	.Letext0:
 468              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 469              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 470              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/config_streamer.h"
 471              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 472              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 config_streamer.c
    {standard input}:20     .text.config_streamer_init:00000000 $t
    {standard input}:25     .text.config_streamer_init:00000000 config_streamer_init
    {standard input}:62     .text.config_streamer_start:00000000 $t
    {standard input}:67     .text.config_streamer_start:00000000 config_streamer_start
    {standard input}:135    .text.write_page:00000000 $t
    {standard input}:139    .text.write_page:00000000 write_page
    {standard input}:199    .text.config_streamer_write:00000000 $t
    {standard input}:204    .text.config_streamer_write:00000000 config_streamer_write
    {standard input}:294    .text.config_streamer_status:00000000 $t
    {standard input}:299    .text.config_streamer_status:00000000 config_streamer_status
    {standard input}:338    .text.config_streamer_flush:00000000 $t
    {standard input}:343    .text.config_streamer_flush:00000000 config_streamer_flush
    {standard input}:413    .text.config_streamer_finish:00000000 $t
    {standard input}:418    .text.config_streamer_finish:00000000 config_streamer_finish
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
XMC_FLASH_EraseSector
XMC_FLASH_ProgramPage
