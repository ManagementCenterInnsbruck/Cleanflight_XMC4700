   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "feature.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.featureConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	featureConfig:
  25              	.LFB524:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** #ifndef DEFAULT_FEATURES
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** #define DEFAULT_FEATURES 0
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** #endif
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** #ifndef DEFAULT_RX_FEATURE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** #define DEFAULT_RX_FEATURE FEATURE_RX_PARALLEL_PWM
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** #endif
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** 
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** typedef enum {
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_RX_PPM = 1 << 0,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_INFLIGHT_ACC_CAL = 1 << 2,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_RX_SERIAL = 1 << 3,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_MOTOR_STOP = 1 << 4,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_SERVO_TILT = 1 << 5,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_SOFTSERIAL = 1 << 6,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_GPS = 1 << 7,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_RANGEFINDER = 1 << 9,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_TELEMETRY = 1 << 10,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_3D = 1 << 12,
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_RX_PARALLEL_PWM = 1 << 13,
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_RX_MSP = 1 << 14,
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_RSSI_ADC = 1 << 15,
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_LED_STRIP = 1 << 16,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_DASHBOARD = 1 << 17,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_OSD = 1 << 18,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_CHANNEL_FORWARDING = 1 << 20,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_TRANSPONDER = 1 << 21,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_AIRMODE = 1 << 22,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_RX_SPI = 1 << 25,
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_SOFTSPI = 1 << 26,
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_ESC_SENSOR = 1 << 27,
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_ANTI_GRAVITY = 1 << 28,
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     FEATURE_DYNAMIC_FILTER = 1 << 29,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** } features_e;
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** 
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** typedef struct featureConfig_s {
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h ****     uint32_t enabledFeatures;
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** } featureConfig_t;
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** 
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config\feature.h **** PG_DECLARE(featureConfig_t, featureConfig);
  27              	 .loc 1 63 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 63 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word featureConfig_System
  55              	 .cfi_endproc
  56              	.LFE524:
  58              	 .section .text.featureConfigMutable,"ax",%progbits
  59              	 .align 2
  60              	 .thumb
  61              	 .thumb_func
  63              	featureConfigMutable:
  64              	.LFB525:
  65              	 .loc 1 63 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69              	 
  70 0000 80B4     	 push {r7}
  71              	.LCFI4:
  72              	 .cfi_def_cfa_offset 4
  73              	 .cfi_offset 7,-4
  74 0002 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77              	 .loc 1 63 0
  78 0004 024B     	 ldr r3,.L7
  79 0006 1846     	 mov r0,r3
  80 0008 BD46     	 mov sp,r7
  81              	.LCFI6:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 000a 5DF8047B 	 ldr r7,[sp],#4
  85              	.LCFI7:
  86              	 .cfi_restore 7
  87              	 .cfi_def_cfa_offset 0
  88 000e 7047     	 bx lr
  89              	.L8:
  90              	 .align 2
  91              	.L7:
  92 0010 00000000 	 .word featureConfig_System
  93              	 .cfi_endproc
  94              	.LFE525:
  96              	 .section .bss.activeFeaturesLatch,"aw",%nobits
  97              	 .align 2
 100              	activeFeaturesLatch:
 101 0000 00000000 	 .space 4
 102              	 .comm featureConfig_System,4,4
 103              	 .comm featureConfig_Copy,4,4
 104              	 .global featureConfig_Registry
 105              	 .section .pg_registry,"a",%progbits
 106              	 .align 2
 109              	featureConfig_Registry:
 110 0000 1300     	 .short 19
 111 0002 0400     	 .short 4
 112 0004 00000000 	 .word featureConfig_System
 113 0008 00000000 	 .word featureConfig_Copy
 114 000c 00000000 	 .word 0
 115 0010 00000000 	 .word pgResetTemplate_featureConfig
 116              	 .global pgResetTemplate_featureConfig
 117              	 .section .pg_resetdata,"a",%progbits
 118              	 .align 1
 121              	pgResetTemplate_featureConfig:
 122 0000 18000030 	 .4byte 805306392
 123              	 .section .text.intFeatureSet,"ax",%progbits
 124              	 .align 2
 125              	 .global intFeatureSet
 126              	 .thumb
 127              	 .thumb_func
 129              	intFeatureSet:
 130              	.LFB526:
 131              	 .file 2 "../cleanflight/src/main/config/feature.c"
   1:../cleanflight/src/main/config/feature.c **** /*
   2:../cleanflight/src/main/config/feature.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/config/feature.c ****  *
   4:../cleanflight/src/main/config/feature.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/config/feature.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/config/feature.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/config/feature.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/config/feature.c ****  * any later version.
   9:../cleanflight/src/main/config/feature.c ****  *
  10:../cleanflight/src/main/config/feature.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/config/feature.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/config/feature.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/config/feature.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/config/feature.c ****  *
  15:../cleanflight/src/main/config/feature.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/config/feature.c ****  * along with this software.
  17:../cleanflight/src/main/config/feature.c ****  *
  18:../cleanflight/src/main/config/feature.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/config/feature.c ****  */
  20:../cleanflight/src/main/config/feature.c **** 
  21:../cleanflight/src/main/config/feature.c **** #include <stdbool.h>
  22:../cleanflight/src/main/config/feature.c **** #include <stdint.h>
  23:../cleanflight/src/main/config/feature.c **** #include <stdlib.h>
  24:../cleanflight/src/main/config/feature.c **** 
  25:../cleanflight/src/main/config/feature.c **** #include "platform.h"
  26:../cleanflight/src/main/config/feature.c **** 
  27:../cleanflight/src/main/config/feature.c **** #include "config/feature.h"
  28:../cleanflight/src/main/config/feature.c **** #include "pg/pg.h"
  29:../cleanflight/src/main/config/feature.c **** #include "pg/pg_ids.h"
  30:../cleanflight/src/main/config/feature.c **** 
  31:../cleanflight/src/main/config/feature.c **** 
  32:../cleanflight/src/main/config/feature.c **** static uint32_t activeFeaturesLatch = 0;
  33:../cleanflight/src/main/config/feature.c **** 
  34:../cleanflight/src/main/config/feature.c **** PG_REGISTER_WITH_RESET_TEMPLATE(featureConfig_t, featureConfig, PG_FEATURE_CONFIG, 0);
  35:../cleanflight/src/main/config/feature.c **** 
  36:../cleanflight/src/main/config/feature.c **** PG_RESET_TEMPLATE(featureConfig_t, featureConfig,
  37:../cleanflight/src/main/config/feature.c ****     .enabledFeatures = DEFAULT_FEATURES | DEFAULT_RX_FEATURE | FEATURE_DYNAMIC_FILTER | FEATURE_ANT
  38:../cleanflight/src/main/config/feature.c **** );
  39:../cleanflight/src/main/config/feature.c **** 
  40:../cleanflight/src/main/config/feature.c **** void intFeatureSet(uint32_t mask, uint32_t *features)
  41:../cleanflight/src/main/config/feature.c **** {
 132              	 .loc 2 41 0
 133              	 .cfi_startproc
 134              	 
 135              	 
 136              	 
 137 0000 80B4     	 push {r7}
 138              	.LCFI8:
 139              	 .cfi_def_cfa_offset 4
 140              	 .cfi_offset 7,-4
 141 0002 83B0     	 sub sp,sp,#12
 142              	.LCFI9:
 143              	 .cfi_def_cfa_offset 16
 144 0004 00AF     	 add r7,sp,#0
 145              	.LCFI10:
 146              	 .cfi_def_cfa_register 7
 147 0006 7860     	 str r0,[r7,#4]
 148 0008 3960     	 str r1,[r7]
  42:../cleanflight/src/main/config/feature.c ****     *features |= mask;
 149              	 .loc 2 42 0
 150 000a 3B68     	 ldr r3,[r7]
 151 000c 1A68     	 ldr r2,[r3]
 152 000e 7B68     	 ldr r3,[r7,#4]
 153 0010 1A43     	 orrs r2,r2,r3
 154 0012 3B68     	 ldr r3,[r7]
 155 0014 1A60     	 str r2,[r3]
  43:../cleanflight/src/main/config/feature.c **** }
 156              	 .loc 2 43 0
 157 0016 0C37     	 adds r7,r7,#12
 158              	.LCFI11:
 159              	 .cfi_def_cfa_offset 4
 160 0018 BD46     	 mov sp,r7
 161              	.LCFI12:
 162              	 .cfi_def_cfa_register 13
 163              	 
 164 001a 5DF8047B 	 ldr r7,[sp],#4
 165              	.LCFI13:
 166              	 .cfi_restore 7
 167              	 .cfi_def_cfa_offset 0
 168 001e 7047     	 bx lr
 169              	 .cfi_endproc
 170              	.LFE526:
 172              	 .section .text.intFeatureClear,"ax",%progbits
 173              	 .align 2
 174              	 .global intFeatureClear
 175              	 .thumb
 176              	 .thumb_func
 178              	intFeatureClear:
 179              	.LFB527:
  44:../cleanflight/src/main/config/feature.c **** 
  45:../cleanflight/src/main/config/feature.c **** void intFeatureClear(uint32_t mask, uint32_t *features)
  46:../cleanflight/src/main/config/feature.c **** {
 180              	 .loc 2 46 0
 181              	 .cfi_startproc
 182              	 
 183              	 
 184              	 
 185 0000 80B4     	 push {r7}
 186              	.LCFI14:
 187              	 .cfi_def_cfa_offset 4
 188              	 .cfi_offset 7,-4
 189 0002 83B0     	 sub sp,sp,#12
 190              	.LCFI15:
 191              	 .cfi_def_cfa_offset 16
 192 0004 00AF     	 add r7,sp,#0
 193              	.LCFI16:
 194              	 .cfi_def_cfa_register 7
 195 0006 7860     	 str r0,[r7,#4]
 196 0008 3960     	 str r1,[r7]
  47:../cleanflight/src/main/config/feature.c ****     *features &= ~(mask);
 197              	 .loc 2 47 0
 198 000a 3B68     	 ldr r3,[r7]
 199 000c 1A68     	 ldr r2,[r3]
 200 000e 7B68     	 ldr r3,[r7,#4]
 201 0010 DB43     	 mvns r3,r3
 202 0012 1A40     	 ands r2,r2,r3
 203 0014 3B68     	 ldr r3,[r7]
 204 0016 1A60     	 str r2,[r3]
  48:../cleanflight/src/main/config/feature.c **** }
 205              	 .loc 2 48 0
 206 0018 0C37     	 adds r7,r7,#12
 207              	.LCFI17:
 208              	 .cfi_def_cfa_offset 4
 209 001a BD46     	 mov sp,r7
 210              	.LCFI18:
 211              	 .cfi_def_cfa_register 13
 212              	 
 213 001c 5DF8047B 	 ldr r7,[sp],#4
 214              	.LCFI19:
 215              	 .cfi_restore 7
 216              	 .cfi_def_cfa_offset 0
 217 0020 7047     	 bx lr
 218              	 .cfi_endproc
 219              	.LFE527:
 221 0022 00BF     	 .section .text.intFeatureClearAll,"ax",%progbits
 222              	 .align 2
 223              	 .global intFeatureClearAll
 224              	 .thumb
 225              	 .thumb_func
 227              	intFeatureClearAll:
 228              	.LFB528:
  49:../cleanflight/src/main/config/feature.c **** 
  50:../cleanflight/src/main/config/feature.c **** void intFeatureClearAll(uint32_t *features)
  51:../cleanflight/src/main/config/feature.c **** {
 229              	 .loc 2 51 0
 230              	 .cfi_startproc
 231              	 
 232              	 
 233              	 
 234 0000 80B4     	 push {r7}
 235              	.LCFI20:
 236              	 .cfi_def_cfa_offset 4
 237              	 .cfi_offset 7,-4
 238 0002 83B0     	 sub sp,sp,#12
 239              	.LCFI21:
 240              	 .cfi_def_cfa_offset 16
 241 0004 00AF     	 add r7,sp,#0
 242              	.LCFI22:
 243              	 .cfi_def_cfa_register 7
 244 0006 7860     	 str r0,[r7,#4]
  52:../cleanflight/src/main/config/feature.c ****     *features = 0;
 245              	 .loc 2 52 0
 246 0008 7B68     	 ldr r3,[r7,#4]
 247 000a 0022     	 movs r2,#0
 248 000c 1A60     	 str r2,[r3]
  53:../cleanflight/src/main/config/feature.c **** }
 249              	 .loc 2 53 0
 250 000e 0C37     	 adds r7,r7,#12
 251              	.LCFI23:
 252              	 .cfi_def_cfa_offset 4
 253 0010 BD46     	 mov sp,r7
 254              	.LCFI24:
 255              	 .cfi_def_cfa_register 13
 256              	 
 257 0012 5DF8047B 	 ldr r7,[sp],#4
 258              	.LCFI25:
 259              	 .cfi_restore 7
 260              	 .cfi_def_cfa_offset 0
 261 0016 7047     	 bx lr
 262              	 .cfi_endproc
 263              	.LFE528:
 265              	 .section .text.latchActiveFeatures,"ax",%progbits
 266              	 .align 2
 267              	 .global latchActiveFeatures
 268              	 .thumb
 269              	 .thumb_func
 271              	latchActiveFeatures:
 272              	.LFB529:
  54:../cleanflight/src/main/config/feature.c **** 
  55:../cleanflight/src/main/config/feature.c **** void latchActiveFeatures(void)
  56:../cleanflight/src/main/config/feature.c **** {
 273              	 .loc 2 56 0
 274              	 .cfi_startproc
 275              	 
 276              	 
 277 0000 80B5     	 push {r7,lr}
 278              	.LCFI26:
 279              	 .cfi_def_cfa_offset 8
 280              	 .cfi_offset 7,-8
 281              	 .cfi_offset 14,-4
 282 0002 00AF     	 add r7,sp,#0
 283              	.LCFI27:
 284              	 .cfi_def_cfa_register 7
  57:../cleanflight/src/main/config/feature.c ****     activeFeaturesLatch = featureConfig()->enabledFeatures;
 285              	 .loc 2 57 0
 286 0004 FFF7FEFF 	 bl featureConfig
 287 0008 0346     	 mov r3,r0
 288 000a 1B68     	 ldr r3,[r3]
 289 000c 014A     	 ldr r2,.L13
 290 000e 1360     	 str r3,[r2]
  58:../cleanflight/src/main/config/feature.c **** }
 291              	 .loc 2 58 0
 292 0010 80BD     	 pop {r7,pc}
 293              	.L14:
 294 0012 00BF     	 .align 2
 295              	.L13:
 296 0014 00000000 	 .word activeFeaturesLatch
 297              	 .cfi_endproc
 298              	.LFE529:
 300              	 .section .text.featureConfigured,"ax",%progbits
 301              	 .align 2
 302              	 .global featureConfigured
 303              	 .thumb
 304              	 .thumb_func
 306              	featureConfigured:
 307              	.LFB530:
  59:../cleanflight/src/main/config/feature.c **** 
  60:../cleanflight/src/main/config/feature.c **** bool featureConfigured(uint32_t mask)
  61:../cleanflight/src/main/config/feature.c **** {
 308              	 .loc 2 61 0
 309              	 .cfi_startproc
 310              	 
 311              	 
 312 0000 80B5     	 push {r7,lr}
 313              	.LCFI28:
 314              	 .cfi_def_cfa_offset 8
 315              	 .cfi_offset 7,-8
 316              	 .cfi_offset 14,-4
 317 0002 82B0     	 sub sp,sp,#8
 318              	.LCFI29:
 319              	 .cfi_def_cfa_offset 16
 320 0004 00AF     	 add r7,sp,#0
 321              	.LCFI30:
 322              	 .cfi_def_cfa_register 7
 323 0006 7860     	 str r0,[r7,#4]
  62:../cleanflight/src/main/config/feature.c ****     return featureConfig()->enabledFeatures & mask;
 324              	 .loc 2 62 0
 325 0008 FFF7FEFF 	 bl featureConfig
 326 000c 0346     	 mov r3,r0
 327 000e 1A68     	 ldr r2,[r3]
 328 0010 7B68     	 ldr r3,[r7,#4]
 329 0012 1340     	 ands r3,r3,r2
 330 0014 002B     	 cmp r3,#0
 331 0016 14BF     	 ite ne
 332 0018 0123     	 movne r3,#1
 333 001a 0023     	 moveq r3,#0
 334 001c DBB2     	 uxtb r3,r3
  63:../cleanflight/src/main/config/feature.c **** }
 335              	 .loc 2 63 0
 336 001e 1846     	 mov r0,r3
 337 0020 0837     	 adds r7,r7,#8
 338              	.LCFI31:
 339              	 .cfi_def_cfa_offset 8
 340 0022 BD46     	 mov sp,r7
 341              	.LCFI32:
 342              	 .cfi_def_cfa_register 13
 343              	 
 344 0024 80BD     	 pop {r7,pc}
 345              	 .cfi_endproc
 346              	.LFE530:
 348 0026 00BF     	 .section .text.feature,"ax",%progbits
 349              	 .align 2
 350              	 .global feature
 351              	 .thumb
 352              	 .thumb_func
 354              	feature:
 355              	.LFB531:
  64:../cleanflight/src/main/config/feature.c **** 
  65:../cleanflight/src/main/config/feature.c **** bool feature(uint32_t mask)
  66:../cleanflight/src/main/config/feature.c **** {
 356              	 .loc 2 66 0
 357              	 .cfi_startproc
 358              	 
 359              	 
 360              	 
 361 0000 80B4     	 push {r7}
 362              	.LCFI33:
 363              	 .cfi_def_cfa_offset 4
 364              	 .cfi_offset 7,-4
 365 0002 83B0     	 sub sp,sp,#12
 366              	.LCFI34:
 367              	 .cfi_def_cfa_offset 16
 368 0004 00AF     	 add r7,sp,#0
 369              	.LCFI35:
 370              	 .cfi_def_cfa_register 7
 371 0006 7860     	 str r0,[r7,#4]
  67:../cleanflight/src/main/config/feature.c ****     return activeFeaturesLatch & mask;
 372              	 .loc 2 67 0
 373 0008 074B     	 ldr r3,.L19
 374 000a 1A68     	 ldr r2,[r3]
 375 000c 7B68     	 ldr r3,[r7,#4]
 376 000e 1340     	 ands r3,r3,r2
 377 0010 002B     	 cmp r3,#0
 378 0012 14BF     	 ite ne
 379 0014 0123     	 movne r3,#1
 380 0016 0023     	 moveq r3,#0
 381 0018 DBB2     	 uxtb r3,r3
  68:../cleanflight/src/main/config/feature.c **** }
 382              	 .loc 2 68 0
 383 001a 1846     	 mov r0,r3
 384 001c 0C37     	 adds r7,r7,#12
 385              	.LCFI36:
 386              	 .cfi_def_cfa_offset 4
 387 001e BD46     	 mov sp,r7
 388              	.LCFI37:
 389              	 .cfi_def_cfa_register 13
 390              	 
 391 0020 5DF8047B 	 ldr r7,[sp],#4
 392              	.LCFI38:
 393              	 .cfi_restore 7
 394              	 .cfi_def_cfa_offset 0
 395 0024 7047     	 bx lr
 396              	.L20:
 397 0026 00BF     	 .align 2
 398              	.L19:
 399 0028 00000000 	 .word activeFeaturesLatch
 400              	 .cfi_endproc
 401              	.LFE531:
 403              	 .section .text.featureSet,"ax",%progbits
 404              	 .align 2
 405              	 .global featureSet
 406              	 .thumb
 407              	 .thumb_func
 409              	featureSet:
 410              	.LFB532:
  69:../cleanflight/src/main/config/feature.c **** 
  70:../cleanflight/src/main/config/feature.c **** void featureSet(uint32_t mask)
  71:../cleanflight/src/main/config/feature.c **** {
 411              	 .loc 2 71 0
 412              	 .cfi_startproc
 413              	 
 414              	 
 415 0000 80B5     	 push {r7,lr}
 416              	.LCFI39:
 417              	 .cfi_def_cfa_offset 8
 418              	 .cfi_offset 7,-8
 419              	 .cfi_offset 14,-4
 420 0002 82B0     	 sub sp,sp,#8
 421              	.LCFI40:
 422              	 .cfi_def_cfa_offset 16
 423 0004 00AF     	 add r7,sp,#0
 424              	.LCFI41:
 425              	 .cfi_def_cfa_register 7
 426 0006 7860     	 str r0,[r7,#4]
  72:../cleanflight/src/main/config/feature.c ****     intFeatureSet(mask, &featureConfigMutable()->enabledFeatures);
 427              	 .loc 2 72 0
 428 0008 FFF7FEFF 	 bl featureConfigMutable
 429 000c 0346     	 mov r3,r0
 430 000e 7868     	 ldr r0,[r7,#4]
 431 0010 1946     	 mov r1,r3
 432 0012 FFF7FEFF 	 bl intFeatureSet
  73:../cleanflight/src/main/config/feature.c **** }
 433              	 .loc 2 73 0
 434 0016 0837     	 adds r7,r7,#8
 435              	.LCFI42:
 436              	 .cfi_def_cfa_offset 8
 437 0018 BD46     	 mov sp,r7
 438              	.LCFI43:
 439              	 .cfi_def_cfa_register 13
 440              	 
 441 001a 80BD     	 pop {r7,pc}
 442              	 .cfi_endproc
 443              	.LFE532:
 445              	 .section .text.featureClear,"ax",%progbits
 446              	 .align 2
 447              	 .global featureClear
 448              	 .thumb
 449              	 .thumb_func
 451              	featureClear:
 452              	.LFB533:
  74:../cleanflight/src/main/config/feature.c **** 
  75:../cleanflight/src/main/config/feature.c **** void featureClear(uint32_t mask)
  76:../cleanflight/src/main/config/feature.c **** {
 453              	 .loc 2 76 0
 454              	 .cfi_startproc
 455              	 
 456              	 
 457 0000 80B5     	 push {r7,lr}
 458              	.LCFI44:
 459              	 .cfi_def_cfa_offset 8
 460              	 .cfi_offset 7,-8
 461              	 .cfi_offset 14,-4
 462 0002 82B0     	 sub sp,sp,#8
 463              	.LCFI45:
 464              	 .cfi_def_cfa_offset 16
 465 0004 00AF     	 add r7,sp,#0
 466              	.LCFI46:
 467              	 .cfi_def_cfa_register 7
 468 0006 7860     	 str r0,[r7,#4]
  77:../cleanflight/src/main/config/feature.c ****     intFeatureClear(mask, &featureConfigMutable()->enabledFeatures);
 469              	 .loc 2 77 0
 470 0008 FFF7FEFF 	 bl featureConfigMutable
 471 000c 0346     	 mov r3,r0
 472 000e 7868     	 ldr r0,[r7,#4]
 473 0010 1946     	 mov r1,r3
 474 0012 FFF7FEFF 	 bl intFeatureClear
  78:../cleanflight/src/main/config/feature.c **** }
 475              	 .loc 2 78 0
 476 0016 0837     	 adds r7,r7,#8
 477              	.LCFI47:
 478              	 .cfi_def_cfa_offset 8
 479 0018 BD46     	 mov sp,r7
 480              	.LCFI48:
 481              	 .cfi_def_cfa_register 13
 482              	 
 483 001a 80BD     	 pop {r7,pc}
 484              	 .cfi_endproc
 485              	.LFE533:
 487              	 .section .text.featureClearAll,"ax",%progbits
 488              	 .align 2
 489              	 .global featureClearAll
 490              	 .thumb
 491              	 .thumb_func
 493              	featureClearAll:
 494              	.LFB534:
  79:../cleanflight/src/main/config/feature.c **** 
  80:../cleanflight/src/main/config/feature.c **** void featureClearAll(void)
  81:../cleanflight/src/main/config/feature.c **** {
 495              	 .loc 2 81 0
 496              	 .cfi_startproc
 497              	 
 498              	 
 499 0000 80B5     	 push {r7,lr}
 500              	.LCFI49:
 501              	 .cfi_def_cfa_offset 8
 502              	 .cfi_offset 7,-8
 503              	 .cfi_offset 14,-4
 504 0002 00AF     	 add r7,sp,#0
 505              	.LCFI50:
 506              	 .cfi_def_cfa_register 7
  82:../cleanflight/src/main/config/feature.c ****     intFeatureClearAll(&featureConfigMutable()->enabledFeatures);
 507              	 .loc 2 82 0
 508 0004 FFF7FEFF 	 bl featureConfigMutable
 509 0008 0346     	 mov r3,r0
 510 000a 1846     	 mov r0,r3
 511 000c FFF7FEFF 	 bl intFeatureClearAll
  83:../cleanflight/src/main/config/feature.c **** }
 512              	 .loc 2 83 0
 513 0010 80BD     	 pop {r7,pc}
 514              	 .cfi_endproc
 515              	.LFE534:
 517 0012 00BF     	 .section .text.featureMask,"ax",%progbits
 518              	 .align 2
 519              	 .global featureMask
 520              	 .thumb
 521              	 .thumb_func
 523              	featureMask:
 524              	.LFB535:
  84:../cleanflight/src/main/config/feature.c **** 
  85:../cleanflight/src/main/config/feature.c **** uint32_t featureMask(void)
  86:../cleanflight/src/main/config/feature.c **** {
 525              	 .loc 2 86 0
 526              	 .cfi_startproc
 527              	 
 528              	 
 529 0000 80B5     	 push {r7,lr}
 530              	.LCFI51:
 531              	 .cfi_def_cfa_offset 8
 532              	 .cfi_offset 7,-8
 533              	 .cfi_offset 14,-4
 534 0002 00AF     	 add r7,sp,#0
 535              	.LCFI52:
 536              	 .cfi_def_cfa_register 7
  87:../cleanflight/src/main/config/feature.c ****     return featureConfig()->enabledFeatures;
 537              	 .loc 2 87 0
 538 0004 FFF7FEFF 	 bl featureConfig
 539 0008 0346     	 mov r3,r0
 540 000a 1B68     	 ldr r3,[r3]
  88:../cleanflight/src/main/config/feature.c **** }
 541              	 .loc 2 88 0
 542 000c 1846     	 mov r0,r3
 543 000e 80BD     	 pop {r7,pc}
 544              	 .cfi_endproc
 545              	.LFE535:
 547              	 .text
 548              	.Letext0:
 549              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 550              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 551              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 552              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pg.h"
 553              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 554              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 feature.c
    {standard input}:20     .text.featureConfig:00000000 $t
    {standard input}:24     .text.featureConfig:00000000 featureConfig
    {standard input}:54     .text.featureConfig:00000010 $d
                            *COM*:00000004 featureConfig_System
    {standard input}:59     .text.featureConfigMutable:00000000 $t
    {standard input}:63     .text.featureConfigMutable:00000000 featureConfigMutable
    {standard input}:92     .text.featureConfigMutable:00000010 $d
    {standard input}:97     .bss.activeFeaturesLatch:00000000 $d
    {standard input}:100    .bss.activeFeaturesLatch:00000000 activeFeaturesLatch
                            *COM*:00000004 featureConfig_Copy
    {standard input}:109    .pg_registry:00000000 featureConfig_Registry
    {standard input}:106    .pg_registry:00000000 $d
    {standard input}:121    .pg_resetdata:00000000 pgResetTemplate_featureConfig
    {standard input}:118    .pg_resetdata:00000000 $d
    {standard input}:124    .text.intFeatureSet:00000000 $t
    {standard input}:129    .text.intFeatureSet:00000000 intFeatureSet
    {standard input}:173    .text.intFeatureClear:00000000 $t
    {standard input}:178    .text.intFeatureClear:00000000 intFeatureClear
    {standard input}:222    .text.intFeatureClearAll:00000000 $t
    {standard input}:227    .text.intFeatureClearAll:00000000 intFeatureClearAll
    {standard input}:266    .text.latchActiveFeatures:00000000 $t
    {standard input}:271    .text.latchActiveFeatures:00000000 latchActiveFeatures
    {standard input}:296    .text.latchActiveFeatures:00000014 $d
    {standard input}:301    .text.featureConfigured:00000000 $t
    {standard input}:306    .text.featureConfigured:00000000 featureConfigured
    {standard input}:349    .text.feature:00000000 $t
    {standard input}:354    .text.feature:00000000 feature
    {standard input}:399    .text.feature:00000028 $d
    {standard input}:404    .text.featureSet:00000000 $t
    {standard input}:409    .text.featureSet:00000000 featureSet
    {standard input}:446    .text.featureClear:00000000 $t
    {standard input}:451    .text.featureClear:00000000 featureClear
    {standard input}:488    .text.featureClearAll:00000000 $t
    {standard input}:493    .text.featureClearAll:00000000 featureClearAll
    {standard input}:518    .text.featureMask:00000000 $t
    {standard input}:523    .text.featureMask:00000000 featureMask
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
