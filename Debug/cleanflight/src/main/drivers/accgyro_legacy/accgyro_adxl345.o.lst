   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "accgyro_adxl345.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.useFifo,"aw",%nobits
  22              	useFifo:
  23 0000 00       	 .space 1
  24              	 .section .text.adxl345Init,"ax",%progbits
  25              	 .align 2
  26              	 .thumb
  27              	 .thumb_func
  29              	adxl345Init:
  30              	.LFB533:
  31              	 .file 1 "../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c"
   1:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** /*
   2:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  *
   4:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * any later version.
   9:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  *
  10:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  *
  15:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  *
  18:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****  */
  20:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  21:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #include <stdbool.h>
  22:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #include <stdint.h>
  23:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  24:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #include "platform.h"
  25:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  26:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #include "drivers/bus_i2c.h"
  27:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  28:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #include "drivers/sensor.h"
  29:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #include "drivers/accgyro/accgyro.h"
  30:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #include "accgyro_adxl345.h"
  31:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  32:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** // ADXL345, Alternative address mode 0x53
  33:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_ADDRESS     0x53
  34:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  35:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** // Registers
  36:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_BW_RATE     0x2C
  37:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_POWER_CTL   0x2D
  38:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_INT_ENABLE  0x2E
  39:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_DATA_FORMAT 0x31
  40:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_DATA_OUT    0x32
  41:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_FIFO_CTL    0x38
  42:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  43:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** // BW_RATE values
  44:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RATE_50     0x09
  45:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RATE_100    0x0A
  46:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RATE_200    0x0B
  47:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RATE_400    0x0C
  48:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RATE_800    0x0D
  49:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RATE_1600   0x0E
  50:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RATE_3200   0x0F
  51:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  52:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** // various register values
  53:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_POWER_MEAS  0x08
  54:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_FULL_RANGE  0x08
  55:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RANGE_2G    0x00
  56:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RANGE_4G    0x01
  57:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RANGE_8G    0x02
  58:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_RANGE_16G   0x03
  59:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** #define ADXL345_FIFO_STREAM 0x80
  60:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  61:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** static bool useFifo = false;
  62:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  63:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** static void adxl345Init(accDev_t *acc)
  64:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** {
  32              	 .loc 1 64 0
  33              	 .cfi_startproc
  34              	 
  35              	 
  36 0000 80B5     	 push {r7,lr}
  37              	.LCFI0:
  38              	 .cfi_def_cfa_offset 8
  39              	 .cfi_offset 7,-8
  40              	 .cfi_offset 14,-4
  41 0002 84B0     	 sub sp,sp,#16
  42              	.LCFI1:
  43              	 .cfi_def_cfa_offset 24
  44 0004 00AF     	 add r7,sp,#0
  45              	.LCFI2:
  46              	 .cfi_def_cfa_register 7
  47 0006 7860     	 str r0,[r7,#4]
  65:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     if (useFifo) {
  48              	 .loc 1 65 0
  49 0008 204B     	 ldr r3,.L4
  50 000a 1B78     	 ldrb r3,[r3]
  51 000c 002B     	 cmp r3,#0
  52 000e 21D0     	 beq .L2
  53              	.LBB2:
  66:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         uint8_t fifoDepth = 16;
  54              	 .loc 1 66 0
  55 0010 1023     	 movs r3,#16
  56 0012 FB73     	 strb r3,[r7,#15]
  67:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         i2cWrite(MPU_I2C_INSTANCE, ADXL345_ADDRESS, ADXL345_POWER_CTL, ADXL345_POWER_MEAS);
  57              	 .loc 1 67 0
  58 0014 0420     	 movs r0,#4
  59 0016 5321     	 movs r1,#83
  60 0018 2D22     	 movs r2,#45
  61 001a 0823     	 movs r3,#8
  62 001c FFF7FEFF 	 bl i2cWrite
  68:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         i2cWrite(MPU_I2C_INSTANCE, ADXL345_ADDRESS, ADXL345_DATA_FORMAT, ADXL345_FULL_RANGE | ADXL3
  63              	 .loc 1 68 0
  64 0020 0420     	 movs r0,#4
  65 0022 5321     	 movs r1,#83
  66 0024 3122     	 movs r2,#49
  67 0026 0A23     	 movs r3,#10
  68 0028 FFF7FEFF 	 bl i2cWrite
  69:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         i2cWrite(MPU_I2C_INSTANCE, ADXL345_ADDRESS, ADXL345_BW_RATE, ADXL345_RATE_400);
  69              	 .loc 1 69 0
  70 002c 0420     	 movs r0,#4
  71 002e 5321     	 movs r1,#83
  72 0030 2C22     	 movs r2,#44
  73 0032 0C23     	 movs r3,#12
  74 0034 FFF7FEFF 	 bl i2cWrite
  70:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         i2cWrite(MPU_I2C_INSTANCE, ADXL345_ADDRESS, ADXL345_FIFO_CTL, (fifoDepth & 0x1F) | ADXL345_
  75              	 .loc 1 70 0
  76 0038 FB7B     	 ldrb r3,[r7,#15]
  77 003a 03F01F03 	 and r3,r3,#31
  78 003e DBB2     	 uxtb r3,r3
  79 0040 63F07F03 	 orn r3,r3,#127
  80 0044 DBB2     	 uxtb r3,r3
  81 0046 DBB2     	 uxtb r3,r3
  82 0048 0420     	 movs r0,#4
  83 004a 5321     	 movs r1,#83
  84 004c 3822     	 movs r2,#56
  85 004e FFF7FEFF 	 bl i2cWrite
  86              	.LBE2:
  87 0052 11E0     	 b .L3
  88              	.L2:
  71:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     } else {
  72:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         i2cWrite(MPU_I2C_INSTANCE, ADXL345_ADDRESS, ADXL345_POWER_CTL, ADXL345_POWER_MEAS);
  89              	 .loc 1 72 0
  90 0054 0420     	 movs r0,#4
  91 0056 5321     	 movs r1,#83
  92 0058 2D22     	 movs r2,#45
  93 005a 0823     	 movs r3,#8
  94 005c FFF7FEFF 	 bl i2cWrite
  73:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         i2cWrite(MPU_I2C_INSTANCE, ADXL345_ADDRESS, ADXL345_DATA_FORMAT, ADXL345_FULL_RANGE | ADXL3
  95              	 .loc 1 73 0
  96 0060 0420     	 movs r0,#4
  97 0062 5321     	 movs r1,#83
  98 0064 3122     	 movs r2,#49
  99 0066 0A23     	 movs r3,#10
 100 0068 FFF7FEFF 	 bl i2cWrite
  74:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         i2cWrite(MPU_I2C_INSTANCE, ADXL345_ADDRESS, ADXL345_BW_RATE, ADXL345_RATE_100);
 101              	 .loc 1 74 0
 102 006c 0420     	 movs r0,#4
 103 006e 5321     	 movs r1,#83
 104 0070 2C22     	 movs r2,#44
 105 0072 0A23     	 movs r3,#10
 106 0074 FFF7FEFF 	 bl i2cWrite
 107              	.L3:
  75:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     }
  76:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     acc->acc_1G = 256; // 3.3V operation
 108              	 .loc 1 76 0
 109 0078 7B68     	 ldr r3,[r7,#4]
 110 007a 0022     	 movs r2,#0
 111 007c 5A74     	 strb r2,[r3,#17]
 112 007e 0022     	 movs r2,#0
 113 0080 42F00102 	 orr r2,r2,#1
 114 0084 9A74     	 strb r2,[r3,#18]
  77:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** }
 115              	 .loc 1 77 0
 116 0086 1037     	 adds r7,r7,#16
 117              	.LCFI3:
 118              	 .cfi_def_cfa_offset 8
 119 0088 BD46     	 mov sp,r7
 120              	.LCFI4:
 121              	 .cfi_def_cfa_register 13
 122              	 
 123 008a 80BD     	 pop {r7,pc}
 124              	.L5:
 125              	 .align 2
 126              	.L4:
 127 008c 00000000 	 .word useFifo
 128              	 .cfi_endproc
 129              	.LFE533:
 131              	 .global acc_samples
 132              	 .section .bss.acc_samples,"aw",%nobits
 135              	acc_samples:
 136 0000 00       	 .space 1
 137              	 .section .text.adxl345Read,"ax",%progbits
 138              	 .align 2
 139              	 .thumb
 140              	 .thumb_func
 142              	adxl345Read:
 143              	.LFB534:
  78:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  79:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** uint8_t acc_samples = 0;
  80:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  81:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** static bool adxl345Read(accDev_t *acc)
  82:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** {
 144              	 .loc 1 82 0
 145              	 .cfi_startproc
 146              	 
 147              	 
 148 0000 80B5     	 push {r7,lr}
 149              	.LCFI5:
 150              	 .cfi_def_cfa_offset 8
 151              	 .cfi_offset 7,-8
 152              	 .cfi_offset 14,-4
 153 0002 8AB0     	 sub sp,sp,#40
 154              	.LCFI6:
 155              	 .cfi_def_cfa_offset 48
 156 0004 02AF     	 add r7,sp,#8
 157              	.LCFI7:
 158              	 .cfi_def_cfa 7,40
 159 0006 7860     	 str r0,[r7,#4]
  83:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     uint8_t buf[8];
  84:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  85:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     if (useFifo) {
 160              	 .loc 1 85 0
 161 0008 534B     	 ldr r3,.L15
 162 000a 1B78     	 ldrb r3,[r3]
 163 000c 002B     	 cmp r3,#0
 164 000e 68D0     	 beq .L7
 165              	.LBB3:
  86:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         int32_t x = 0;
 166              	 .loc 1 86 0
 167 0010 0023     	 movs r3,#0
 168 0012 FB61     	 str r3,[r7,#28]
  87:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         int32_t y = 0;
 169              	 .loc 1 87 0
 170 0014 0023     	 movs r3,#0
 171 0016 BB61     	 str r3,[r7,#24]
  88:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         int32_t z = 0;
 172              	 .loc 1 88 0
 173 0018 0023     	 movs r3,#0
 174 001a 7B61     	 str r3,[r7,#20]
  89:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         uint8_t i = 0;
 175              	 .loc 1 89 0
 176 001c 0023     	 movs r3,#0
 177 001e FB74     	 strb r3,[r7,#19]
 178              	.L11:
  90:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         uint8_t samples_remaining;
  91:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  92:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         do {
  93:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****             i++;
 179              	 .loc 1 93 0
 180 0020 FB7C     	 ldrb r3,[r7,#19]
 181 0022 0133     	 adds r3,r3,#1
 182 0024 FB74     	 strb r3,[r7,#19]
  94:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  95:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****             if (!i2cRead(MPU_I2C_INSTANCE, ADXL345_ADDRESS, ADXL345_DATA_OUT, 8, buf)) {
 183              	 .loc 1 95 0
 184 0026 07F10803 	 add r3,r7,#8
 185 002a 0093     	 str r3,[sp]
 186 002c 0420     	 movs r0,#4
 187 002e 5321     	 movs r1,#83
 188 0030 3222     	 movs r2,#50
 189 0032 0823     	 movs r3,#8
 190 0034 FFF7FEFF 	 bl i2cRead
 191 0038 0346     	 mov r3,r0
 192 003a 83F00103 	 eor r3,r3,#1
 193 003e DBB2     	 uxtb r3,r3
 194 0040 002B     	 cmp r3,#0
 195 0042 01D0     	 beq .L8
  96:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****                 return false;
 196              	 .loc 1 96 0
 197 0044 0023     	 movs r3,#0
 198 0046 82E0     	 b .L14
 199              	.L8:
  97:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****             }
  98:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
  99:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****             x += (int16_t)(buf[0] + (buf[1] << 8));
 200              	 .loc 1 99 0
 201 0048 3B7A     	 ldrb r3,[r7,#8]
 202 004a 9AB2     	 uxth r2,r3
 203 004c 7B7A     	 ldrb r3,[r7,#9]
 204 004e 9BB2     	 uxth r3,r3
 205 0050 1B02     	 lsls r3,r3,#8
 206 0052 9BB2     	 uxth r3,r3
 207 0054 1344     	 add r3,r3,r2
 208 0056 9BB2     	 uxth r3,r3
 209 0058 9BB2     	 uxth r3,r3
 210 005a 1BB2     	 sxth r3,r3
 211 005c FA69     	 ldr r2,[r7,#28]
 212 005e 1344     	 add r3,r3,r2
 213 0060 FB61     	 str r3,[r7,#28]
 100:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****             y += (int16_t)(buf[2] + (buf[3] << 8));
 214              	 .loc 1 100 0
 215 0062 BB7A     	 ldrb r3,[r7,#10]
 216 0064 9AB2     	 uxth r2,r3
 217 0066 FB7A     	 ldrb r3,[r7,#11]
 218 0068 9BB2     	 uxth r3,r3
 219 006a 1B02     	 lsls r3,r3,#8
 220 006c 9BB2     	 uxth r3,r3
 221 006e 1344     	 add r3,r3,r2
 222 0070 9BB2     	 uxth r3,r3
 223 0072 9BB2     	 uxth r3,r3
 224 0074 1BB2     	 sxth r3,r3
 225 0076 BA69     	 ldr r2,[r7,#24]
 226 0078 1344     	 add r3,r3,r2
 227 007a BB61     	 str r3,[r7,#24]
 101:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****             z += (int16_t)(buf[4] + (buf[5] << 8));
 228              	 .loc 1 101 0
 229 007c 3B7B     	 ldrb r3,[r7,#12]
 230 007e 9AB2     	 uxth r2,r3
 231 0080 7B7B     	 ldrb r3,[r7,#13]
 232 0082 9BB2     	 uxth r3,r3
 233 0084 1B02     	 lsls r3,r3,#8
 234 0086 9BB2     	 uxth r3,r3
 235 0088 1344     	 add r3,r3,r2
 236 008a 9BB2     	 uxth r3,r3
 237 008c 9BB2     	 uxth r3,r3
 238 008e 1BB2     	 sxth r3,r3
 239 0090 7A69     	 ldr r2,[r7,#20]
 240 0092 1344     	 add r3,r3,r2
 241 0094 7B61     	 str r3,[r7,#20]
 102:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****             samples_remaining = buf[7] & 0x7F;
 242              	 .loc 1 102 0
 243 0096 FB7B     	 ldrb r3,[r7,#15]
 244 0098 03F07F03 	 and r3,r3,#127
 245 009c BB74     	 strb r3,[r7,#18]
 103:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         } while ((i < 32) && (samples_remaining > 0));
 246              	 .loc 1 103 0
 247 009e FB7C     	 ldrb r3,[r7,#19]
 248 00a0 1F2B     	 cmp r3,#31
 249 00a2 02D8     	 bhi .L10
 250              	 .loc 1 103 0 is_stmt 0 discriminator 1
 251 00a4 BB7C     	 ldrb r3,[r7,#18]
 252 00a6 002B     	 cmp r3,#0
 253 00a8 BAD1     	 bne .L11
 254              	.L10:
 104:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         acc->ADCRaw[0] = x / i;
 255              	 .loc 1 104 0 is_stmt 1
 256 00aa FB7C     	 ldrb r3,[r7,#19]
 257 00ac FA69     	 ldr r2,[r7,#28]
 258 00ae 92FBF3F3 	 sdiv r3,r2,r3
 259 00b2 9AB2     	 uxth r2,r3
 260 00b4 7B68     	 ldr r3,[r7,#4]
 261 00b6 A3F81320 	 strh r2,[r3,#19]
 105:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         acc->ADCRaw[1] = y / i;
 262              	 .loc 1 105 0
 263 00ba FB7C     	 ldrb r3,[r7,#19]
 264 00bc BA69     	 ldr r2,[r7,#24]
 265 00be 92FBF3F3 	 sdiv r3,r2,r3
 266 00c2 9AB2     	 uxth r2,r3
 267 00c4 7B68     	 ldr r3,[r7,#4]
 268 00c6 A3F81520 	 strh r2,[r3,#21]
 106:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         acc->ADCRaw[2] = z / i;
 269              	 .loc 1 106 0
 270 00ca FB7C     	 ldrb r3,[r7,#19]
 271 00cc 7A69     	 ldr r2,[r7,#20]
 272 00ce 92FBF3F3 	 sdiv r3,r2,r3
 273 00d2 9AB2     	 uxth r2,r3
 274 00d4 7B68     	 ldr r3,[r7,#4]
 275 00d6 A3F81720 	 strh r2,[r3,#23]
 107:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         acc_samples = i;
 276              	 .loc 1 107 0
 277 00da 204A     	 ldr r2,.L15+4
 278 00dc FB7C     	 ldrb r3,[r7,#19]
 279 00de 1370     	 strb r3,[r2]
 280              	.LBE3:
 281 00e0 34E0     	 b .L12
 282              	.L7:
 108:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     } else {
 109:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
 110:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         if (!i2cRead(MPU_I2C_INSTANCE, ADXL345_ADDRESS, ADXL345_DATA_OUT, 6, buf)) {
 283              	 .loc 1 110 0
 284 00e2 07F10803 	 add r3,r7,#8
 285 00e6 0093     	 str r3,[sp]
 286 00e8 0420     	 movs r0,#4
 287 00ea 5321     	 movs r1,#83
 288 00ec 3222     	 movs r2,#50
 289 00ee 0623     	 movs r3,#6
 290 00f0 FFF7FEFF 	 bl i2cRead
 291 00f4 0346     	 mov r3,r0
 292 00f6 83F00103 	 eor r3,r3,#1
 293 00fa DBB2     	 uxtb r3,r3
 294 00fc 002B     	 cmp r3,#0
 295 00fe 01D0     	 beq .L13
 111:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****             return false;
 296              	 .loc 1 111 0
 297 0100 0023     	 movs r3,#0
 298 0102 24E0     	 b .L14
 299              	.L13:
 112:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         }
 113:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
 114:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         acc->ADCRaw[0] = buf[0] + (buf[1] << 8);
 300              	 .loc 1 114 0
 301 0104 3B7A     	 ldrb r3,[r7,#8]
 302 0106 9AB2     	 uxth r2,r3
 303 0108 7B7A     	 ldrb r3,[r7,#9]
 304 010a 9BB2     	 uxth r3,r3
 305 010c 1B02     	 lsls r3,r3,#8
 306 010e 9BB2     	 uxth r3,r3
 307 0110 1344     	 add r3,r3,r2
 308 0112 9BB2     	 uxth r3,r3
 309 0114 9AB2     	 uxth r2,r3
 310 0116 7B68     	 ldr r3,[r7,#4]
 311 0118 A3F81320 	 strh r2,[r3,#19]
 115:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         acc->ADCRaw[1] = buf[2] + (buf[3] << 8);
 312              	 .loc 1 115 0
 313 011c BB7A     	 ldrb r3,[r7,#10]
 314 011e 9AB2     	 uxth r2,r3
 315 0120 FB7A     	 ldrb r3,[r7,#11]
 316 0122 9BB2     	 uxth r3,r3
 317 0124 1B02     	 lsls r3,r3,#8
 318 0126 9BB2     	 uxth r3,r3
 319 0128 1344     	 add r3,r3,r2
 320 012a 9BB2     	 uxth r3,r3
 321 012c 9AB2     	 uxth r2,r3
 322 012e 7B68     	 ldr r3,[r7,#4]
 323 0130 A3F81520 	 strh r2,[r3,#21]
 116:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         acc->ADCRaw[2] = buf[4] + (buf[5] << 8);
 324              	 .loc 1 116 0
 325 0134 3B7B     	 ldrb r3,[r7,#12]
 326 0136 9AB2     	 uxth r2,r3
 327 0138 7B7B     	 ldrb r3,[r7,#13]
 328 013a 9BB2     	 uxth r3,r3
 329 013c 1B02     	 lsls r3,r3,#8
 330 013e 9BB2     	 uxth r3,r3
 331 0140 1344     	 add r3,r3,r2
 332 0142 9BB2     	 uxth r3,r3
 333 0144 9AB2     	 uxth r2,r3
 334 0146 7B68     	 ldr r3,[r7,#4]
 335 0148 A3F81720 	 strh r2,[r3,#23]
 336              	.L12:
 117:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     }
 118:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
 119:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     return true;
 337              	 .loc 1 119 0
 338 014c 0123     	 movs r3,#1
 339              	.L14:
 120:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** }
 340              	 .loc 1 120 0 discriminator 1
 341 014e 1846     	 mov r0,r3
 342 0150 2037     	 adds r7,r7,#32
 343              	.LCFI8:
 344              	 .cfi_def_cfa_offset 8
 345 0152 BD46     	 mov sp,r7
 346              	.LCFI9:
 347              	 .cfi_def_cfa_register 13
 348              	 
 349 0154 80BD     	 pop {r7,pc}
 350              	.L16:
 351 0156 00BF     	 .align 2
 352              	.L15:
 353 0158 00000000 	 .word useFifo
 354 015c 00000000 	 .word acc_samples
 355              	 .cfi_endproc
 356              	.LFE534:
 358              	 .section .text.adxl345Detect,"ax",%progbits
 359              	 .align 2
 360              	 .global adxl345Detect
 361              	 .thumb
 362              	 .thumb_func
 364              	adxl345Detect:
 365              	.LFB535:
 121:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
 122:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** bool adxl345Detect(drv_adxl345_config_t *init, accDev_t *acc)
 123:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** {
 366              	 .loc 1 123 0
 367              	 .cfi_startproc
 368              	 
 369              	 
 370 0000 80B5     	 push {r7,lr}
 371              	.LCFI10:
 372              	 .cfi_def_cfa_offset 8
 373              	 .cfi_offset 7,-8
 374              	 .cfi_offset 14,-4
 375 0002 86B0     	 sub sp,sp,#24
 376              	.LCFI11:
 377              	 .cfi_def_cfa_offset 32
 378 0004 02AF     	 add r7,sp,#8
 379              	.LCFI12:
 380              	 .cfi_def_cfa 7,24
 381 0006 7860     	 str r0,[r7,#4]
 382 0008 3960     	 str r1,[r7]
 124:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     uint8_t sig = 0;
 383              	 .loc 1 124 0
 384 000a 0023     	 movs r3,#0
 385 000c BB73     	 strb r3,[r7,#14]
 125:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     bool ack = i2cRead(MPU_I2C_INSTANCE, ADXL345_ADDRESS, 0x00, 1, &sig);
 386              	 .loc 1 125 0
 387 000e 07F10E03 	 add r3,r7,#14
 388 0012 0093     	 str r3,[sp]
 389 0014 0420     	 movs r0,#4
 390 0016 5321     	 movs r1,#83
 391 0018 0022     	 movs r2,#0
 392 001a 0123     	 movs r3,#1
 393 001c FFF7FEFF 	 bl i2cRead
 394 0020 0346     	 mov r3,r0
 395 0022 FB73     	 strb r3,[r7,#15]
 126:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
 127:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     if (!ack || sig != 0xE5)
 396              	 .loc 1 127 0
 397 0024 FB7B     	 ldrb r3,[r7,#15]
 398 0026 83F00103 	 eor r3,r3,#1
 399 002a DBB2     	 uxtb r3,r3
 400 002c 002B     	 cmp r3,#0
 401 002e 02D1     	 bne .L18
 402              	 .loc 1 127 0 is_stmt 0 discriminator 1
 403 0030 BB7B     	 ldrb r3,[r7,#14]
 404 0032 E52B     	 cmp r3,#229
 405 0034 01D0     	 beq .L19
 406              	.L18:
 128:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****         return false;
 407              	 .loc 1 128 0 is_stmt 1
 408 0036 0023     	 movs r3,#0
 409 0038 0AE0     	 b .L21
 410              	.L19:
 129:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
 130:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     // use ADXL345's fifo to filter data or not
 131:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     useFifo = init->useFifo;
 411              	 .loc 1 131 0
 412 003a 7B68     	 ldr r3,[r7,#4]
 413 003c 9A78     	 ldrb r2,[r3,#2]
 414 003e 064B     	 ldr r3,.L22
 415 0040 1A70     	 strb r2,[r3]
 132:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** 
 133:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     acc->initFn = adxl345Init;
 416              	 .loc 1 133 0
 417 0042 3B68     	 ldr r3,[r7]
 418 0044 054A     	 ldr r2,.L22+4
 419 0046 1A60     	 str r2,[r3]
 134:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     acc->readFn = adxl345Read;
 420              	 .loc 1 134 0
 421 0048 3B68     	 ldr r3,[r7]
 422 004a 054A     	 ldr r2,.L22+8
 423 004c 5A60     	 str r2,[r3,#4]
 135:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c ****     return true;
 424              	 .loc 1 135 0
 425 004e 0123     	 movs r3,#1
 426              	.L21:
 136:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.c **** }
 427              	 .loc 1 136 0 discriminator 1
 428 0050 1846     	 mov r0,r3
 429 0052 1037     	 adds r7,r7,#16
 430              	.LCFI13:
 431              	 .cfi_def_cfa_offset 8
 432 0054 BD46     	 mov sp,r7
 433              	.LCFI14:
 434              	 .cfi_def_cfa_register 13
 435              	 
 436 0056 80BD     	 pop {r7,pc}
 437              	.L23:
 438              	 .align 2
 439              	.L22:
 440 0058 00000000 	 .word useFifo
 441 005c 00000000 	 .word adxl345Init
 442 0060 00000000 	 .word adxl345Read
 443              	 .cfi_endproc
 444              	.LFE535:
 446              	 .text
 447              	.Letext0:
 448              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 449              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 450              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 451              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 452              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 453              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 454              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 455              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/sensor.h"
 456              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/accgyro/accgyro.h"
 457              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus.h"
 458              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/accgyro/accgyro_mpu.h"
 459              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 460              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/gyro.h"
 461              	 .file 15 "../cleanflight/src/main/drivers/accgyro_legacy/accgyro_adxl345.h"
 462              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 463              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 accgyro_adxl345.c
    {standard input}:22     .bss.useFifo:00000000 useFifo
    {standard input}:23     .bss.useFifo:00000000 $d
    {standard input}:25     .text.adxl345Init:00000000 $t
    {standard input}:29     .text.adxl345Init:00000000 adxl345Init
    {standard input}:127    .text.adxl345Init:0000008c $d
    {standard input}:135    .bss.acc_samples:00000000 acc_samples
    {standard input}:136    .bss.acc_samples:00000000 $d
    {standard input}:138    .text.adxl345Read:00000000 $t
    {standard input}:142    .text.adxl345Read:00000000 adxl345Read
    {standard input}:353    .text.adxl345Read:00000158 $d
    {standard input}:359    .text.adxl345Detect:00000000 $t
    {standard input}:364    .text.adxl345Detect:00000000 adxl345Detect
    {standard input}:440    .text.adxl345Detect:00000058 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
i2cWrite
i2cRead
