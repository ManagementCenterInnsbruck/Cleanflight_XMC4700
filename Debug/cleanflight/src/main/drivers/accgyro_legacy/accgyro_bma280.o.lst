   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "accgyro_bma280.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.bma280Init,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	bma280Init:
  25              	.LFB533:
  26              	 .file 1 "../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c"
   1:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** /*
   2:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  *
   4:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * any later version.
   9:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  *
  10:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  *
  15:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  *
  18:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****  */
  20:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  21:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #include <stdbool.h>
  22:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #include <stdint.h>
  23:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  24:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #include "platform.h"
  25:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  26:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #include "drivers/bus_i2c.h"
  27:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  28:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #include "drivers/sensor.h"
  29:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #include "drivers/accgyro/accgyro.h"
  30:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #include "accgyro_bma280.h"
  31:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  32:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** // BMA280, default I2C address mode 0x18
  33:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #define BMA280_ADDRESS     0x18
  34:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #define BMA280_ACC_X_LSB   0x02
  35:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #define BMA280_PMU_BW      0x10
  36:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** #define BMA280_PMU_RANGE   0x0F
  37:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  38:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** static void bma280Init(accDev_t *acc)
  39:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** {
  27              	 .loc 1 39 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31 0000 80B5     	 push {r7,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 8
  34              	 .cfi_offset 7,-8
  35              	 .cfi_offset 14,-4
  36 0002 82B0     	 sub sp,sp,#8
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  40:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     i2cWrite(MPU_I2C_INSTANCE, BMA280_ADDRESS, BMA280_PMU_RANGE, 0x08); // +-8g range
  43              	 .loc 1 40 0
  44 0008 0420     	 movs r0,#4
  45 000a 1821     	 movs r1,#24
  46 000c 0F22     	 movs r2,#15
  47 000e 0823     	 movs r3,#8
  48 0010 FFF7FEFF 	 bl i2cWrite
  41:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     i2cWrite(MPU_I2C_INSTANCE, BMA280_ADDRESS, BMA280_PMU_BW, 0x0E); // 500Hz BW
  49              	 .loc 1 41 0
  50 0014 0420     	 movs r0,#4
  51 0016 1821     	 movs r1,#24
  52 0018 1022     	 movs r2,#16
  53 001a 0E23     	 movs r3,#14
  54 001c FFF7FEFF 	 bl i2cWrite
  42:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  43:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     acc->acc_1G = 512 * 8;
  55              	 .loc 1 43 0
  56 0020 7B68     	 ldr r3,[r7,#4]
  57 0022 0022     	 movs r2,#0
  58 0024 5A74     	 strb r2,[r3,#17]
  59 0026 0022     	 movs r2,#0
  60 0028 42F01002 	 orr r2,r2,#16
  61 002c 9A74     	 strb r2,[r3,#18]
  44:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** }
  62              	 .loc 1 44 0
  63 002e 0837     	 adds r7,r7,#8
  64              	.LCFI3:
  65              	 .cfi_def_cfa_offset 8
  66 0030 BD46     	 mov sp,r7
  67              	.LCFI4:
  68              	 .cfi_def_cfa_register 13
  69              	 
  70 0032 80BD     	 pop {r7,pc}
  71              	 .cfi_endproc
  72              	.LFE533:
  74              	 .section .text.bma280Read,"ax",%progbits
  75              	 .align 2
  76              	 .thumb
  77              	 .thumb_func
  79              	bma280Read:
  80              	.LFB534:
  45:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  46:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** static bool bma280Read(accDev_t *acc)
  47:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** {
  81              	 .loc 1 47 0
  82              	 .cfi_startproc
  83              	 
  84              	 
  85 0000 80B5     	 push {r7,lr}
  86              	.LCFI5:
  87              	 .cfi_def_cfa_offset 8
  88              	 .cfi_offset 7,-8
  89              	 .cfi_offset 14,-4
  90 0002 86B0     	 sub sp,sp,#24
  91              	.LCFI6:
  92              	 .cfi_def_cfa_offset 32
  93 0004 02AF     	 add r7,sp,#8
  94              	.LCFI7:
  95              	 .cfi_def_cfa 7,24
  96 0006 7860     	 str r0,[r7,#4]
  48:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     uint8_t buf[6];
  49:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  50:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     if (!i2cRead(MPU_I2C_INSTANCE, BMA280_ADDRESS, BMA280_ACC_X_LSB, 6, buf)) {
  97              	 .loc 1 50 0
  98 0008 07F10803 	 add r3,r7,#8
  99 000c 0093     	 str r3,[sp]
 100 000e 0420     	 movs r0,#4
 101 0010 1821     	 movs r1,#24
 102 0012 0222     	 movs r2,#2
 103 0014 0623     	 movs r3,#6
 104 0016 FFF7FEFF 	 bl i2cRead
 105 001a 0346     	 mov r3,r0
 106 001c 83F00103 	 eor r3,r3,#1
 107 0020 DBB2     	 uxtb r3,r3
 108 0022 002B     	 cmp r3,#0
 109 0024 01D0     	 beq .L3
  51:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****         return false;
 110              	 .loc 1 51 0
 111 0026 0023     	 movs r3,#0
 112 0028 2AE0     	 b .L5
 113              	.L3:
  52:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     }
  53:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  54:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     // Data format is lsb<5:0><crap><new_data_bit> | msb<13:6>
  55:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     acc->ADCRaw[0] = (int16_t)((buf[0] >> 2) + (buf[1] << 8));
 114              	 .loc 1 55 0
 115 002a 3B7A     	 ldrb r3,[r7,#8]
 116 002c 9B08     	 lsrs r3,r3,#2
 117 002e DBB2     	 uxtb r3,r3
 118 0030 9AB2     	 uxth r2,r3
 119 0032 7B7A     	 ldrb r3,[r7,#9]
 120 0034 9BB2     	 uxth r3,r3
 121 0036 1B02     	 lsls r3,r3,#8
 122 0038 9BB2     	 uxth r3,r3
 123 003a 1344     	 add r3,r3,r2
 124 003c 9BB2     	 uxth r3,r3
 125 003e 9AB2     	 uxth r2,r3
 126 0040 7B68     	 ldr r3,[r7,#4]
 127 0042 A3F81320 	 strh r2,[r3,#19]
  56:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     acc->ADCRaw[1] = (int16_t)((buf[2] >> 2) + (buf[3] << 8));
 128              	 .loc 1 56 0
 129 0046 BB7A     	 ldrb r3,[r7,#10]
 130 0048 9B08     	 lsrs r3,r3,#2
 131 004a DBB2     	 uxtb r3,r3
 132 004c 9AB2     	 uxth r2,r3
 133 004e FB7A     	 ldrb r3,[r7,#11]
 134 0050 9BB2     	 uxth r3,r3
 135 0052 1B02     	 lsls r3,r3,#8
 136 0054 9BB2     	 uxth r3,r3
 137 0056 1344     	 add r3,r3,r2
 138 0058 9BB2     	 uxth r3,r3
 139 005a 9AB2     	 uxth r2,r3
 140 005c 7B68     	 ldr r3,[r7,#4]
 141 005e A3F81520 	 strh r2,[r3,#21]
  57:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     acc->ADCRaw[2] = (int16_t)((buf[4] >> 2) + (buf[5] << 8));
 142              	 .loc 1 57 0
 143 0062 3B7B     	 ldrb r3,[r7,#12]
 144 0064 9B08     	 lsrs r3,r3,#2
 145 0066 DBB2     	 uxtb r3,r3
 146 0068 9AB2     	 uxth r2,r3
 147 006a 7B7B     	 ldrb r3,[r7,#13]
 148 006c 9BB2     	 uxth r3,r3
 149 006e 1B02     	 lsls r3,r3,#8
 150 0070 9BB2     	 uxth r3,r3
 151 0072 1344     	 add r3,r3,r2
 152 0074 9BB2     	 uxth r3,r3
 153 0076 9AB2     	 uxth r2,r3
 154 0078 7B68     	 ldr r3,[r7,#4]
 155 007a A3F81720 	 strh r2,[r3,#23]
  58:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  59:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     return true;
 156              	 .loc 1 59 0
 157 007e 0123     	 movs r3,#1
 158              	.L5:
  60:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** }
 159              	 .loc 1 60 0 discriminator 1
 160 0080 1846     	 mov r0,r3
 161 0082 1037     	 adds r7,r7,#16
 162              	.LCFI8:
 163              	 .cfi_def_cfa_offset 8
 164 0084 BD46     	 mov sp,r7
 165              	.LCFI9:
 166              	 .cfi_def_cfa_register 13
 167              	 
 168 0086 80BD     	 pop {r7,pc}
 169              	 .cfi_endproc
 170              	.LFE534:
 172              	 .section .text.bma280Detect,"ax",%progbits
 173              	 .align 2
 174              	 .global bma280Detect
 175              	 .thumb
 176              	 .thumb_func
 178              	bma280Detect:
 179              	.LFB535:
  61:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  62:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** bool bma280Detect(accDev_t *acc)
  63:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** {
 180              	 .loc 1 63 0
 181              	 .cfi_startproc
 182              	 
 183              	 
 184 0000 80B5     	 push {r7,lr}
 185              	.LCFI10:
 186              	 .cfi_def_cfa_offset 8
 187              	 .cfi_offset 7,-8
 188              	 .cfi_offset 14,-4
 189 0002 86B0     	 sub sp,sp,#24
 190              	.LCFI11:
 191              	 .cfi_def_cfa_offset 32
 192 0004 02AF     	 add r7,sp,#8
 193              	.LCFI12:
 194              	 .cfi_def_cfa 7,24
 195 0006 7860     	 str r0,[r7,#4]
  64:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     uint8_t sig = 0;
 196              	 .loc 1 64 0
 197 0008 0023     	 movs r3,#0
 198 000a BB73     	 strb r3,[r7,#14]
  65:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     bool ack = i2cRead(MPU_I2C_INSTANCE, BMA280_ADDRESS, 0x00, 1, &sig);
 199              	 .loc 1 65 0
 200 000c 07F10E03 	 add r3,r7,#14
 201 0010 0093     	 str r3,[sp]
 202 0012 0420     	 movs r0,#4
 203 0014 1821     	 movs r1,#24
 204 0016 0022     	 movs r2,#0
 205 0018 0123     	 movs r3,#1
 206 001a FFF7FEFF 	 bl i2cRead
 207 001e 0346     	 mov r3,r0
 208 0020 FB73     	 strb r3,[r7,#15]
  66:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  67:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     if (!ack || sig != 0xFB)
 209              	 .loc 1 67 0
 210 0022 FB7B     	 ldrb r3,[r7,#15]
 211 0024 83F00103 	 eor r3,r3,#1
 212 0028 DBB2     	 uxtb r3,r3
 213 002a 002B     	 cmp r3,#0
 214 002c 02D1     	 bne .L7
 215              	 .loc 1 67 0 is_stmt 0 discriminator 1
 216 002e BB7B     	 ldrb r3,[r7,#14]
 217 0030 FB2B     	 cmp r3,#251
 218 0032 01D0     	 beq .L8
 219              	.L7:
  68:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****         return false;
 220              	 .loc 1 68 0 is_stmt 1
 221 0034 0023     	 movs r3,#0
 222 0036 06E0     	 b .L10
 223              	.L8:
  69:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** 
  70:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     acc->initFn = bma280Init;
 224              	 .loc 1 70 0
 225 0038 7B68     	 ldr r3,[r7,#4]
 226 003a 054A     	 ldr r2,.L11
 227 003c 1A60     	 str r2,[r3]
  71:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     acc->readFn = bma280Read;
 228              	 .loc 1 71 0
 229 003e 7B68     	 ldr r3,[r7,#4]
 230 0040 044A     	 ldr r2,.L11+4
 231 0042 5A60     	 str r2,[r3,#4]
  72:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c ****     return true;
 232              	 .loc 1 72 0
 233 0044 0123     	 movs r3,#1
 234              	.L10:
  73:../cleanflight/src/main/drivers/accgyro_legacy/accgyro_bma280.c **** }
 235              	 .loc 1 73 0 discriminator 1
 236 0046 1846     	 mov r0,r3
 237 0048 1037     	 adds r7,r7,#16
 238              	.LCFI13:
 239              	 .cfi_def_cfa_offset 8
 240 004a BD46     	 mov sp,r7
 241              	.LCFI14:
 242              	 .cfi_def_cfa_register 13
 243              	 
 244 004c 80BD     	 pop {r7,pc}
 245              	.L12:
 246 004e 00BF     	 .align 2
 247              	.L11:
 248 0050 00000000 	 .word bma280Init
 249 0054 00000000 	 .word bma280Read
 250              	 .cfi_endproc
 251              	.LFE535:
 253              	 .text
 254              	.Letext0:
 255              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 256              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 257              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 258              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 259              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 260              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 261              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/sensor.h"
 262              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/accgyro/accgyro.h"
 263              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus.h"
 264              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/accgyro/accgyro_mpu.h"
 265              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 266              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/gyro.h"
 267              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 268              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 accgyro_bma280.c
    {standard input}:20     .text.bma280Init:00000000 $t
    {standard input}:24     .text.bma280Init:00000000 bma280Init
    {standard input}:75     .text.bma280Read:00000000 $t
    {standard input}:79     .text.bma280Read:00000000 bma280Read
    {standard input}:173    .text.bma280Detect:00000000 $t
    {standard input}:178    .text.bma280Detect:00000000 bma280Detect
    {standard input}:248    .text.bma280Detect:00000050 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
i2cWrite
i2cRead
