   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "buf_writer.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.bufWriterInit,"ax",%progbits
  20              	 .align 2
  21              	 .global bufWriterInit
  22              	 .thumb
  23              	 .thumb_func
  25              	bufWriterInit:
  26              	.LFB0:
  27              	 .file 1 "../cleanflight/src/main/drivers/buf_writer.c"
   1:../cleanflight/src/main/drivers/buf_writer.c **** /*
   2:../cleanflight/src/main/drivers/buf_writer.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/buf_writer.c ****  *
   4:../cleanflight/src/main/drivers/buf_writer.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/buf_writer.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/buf_writer.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/buf_writer.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/buf_writer.c ****  * any later version.
   9:../cleanflight/src/main/drivers/buf_writer.c ****  *
  10:../cleanflight/src/main/drivers/buf_writer.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/buf_writer.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/buf_writer.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/buf_writer.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/buf_writer.c ****  *
  15:../cleanflight/src/main/drivers/buf_writer.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/buf_writer.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/buf_writer.c ****  *
  18:../cleanflight/src/main/drivers/buf_writer.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/buf_writer.c ****  */
  20:../cleanflight/src/main/drivers/buf_writer.c **** 
  21:../cleanflight/src/main/drivers/buf_writer.c **** #include <stdint.h>
  22:../cleanflight/src/main/drivers/buf_writer.c **** 
  23:../cleanflight/src/main/drivers/buf_writer.c **** #include "buf_writer.h"
  24:../cleanflight/src/main/drivers/buf_writer.c **** 
  25:../cleanflight/src/main/drivers/buf_writer.c **** bufWriter_t *bufWriterInit(uint8_t *b, int total_size, bufWrite_t writer, void *arg)
  26:../cleanflight/src/main/drivers/buf_writer.c **** {
  28              	 .loc 1 26 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 87B0     	 sub sp,sp,#28
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 32
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 B960     	 str r1,[r7,#8]
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c 3B60     	 str r3,[r7]
  27:../cleanflight/src/main/drivers/buf_writer.c ****     bufWriter_t *buf = (bufWriter_t *)b;
  47              	 .loc 1 27 0
  48 000e FB68     	 ldr r3,[r7,#12]
  49 0010 7B61     	 str r3,[r7,#20]
  28:../cleanflight/src/main/drivers/buf_writer.c ****     buf->writer = writer;
  50              	 .loc 1 28 0
  51 0012 7B69     	 ldr r3,[r7,#20]
  52 0014 7A68     	 ldr r2,[r7,#4]
  53 0016 1A60     	 str r2,[r3]
  29:../cleanflight/src/main/drivers/buf_writer.c ****     buf->arg = arg;
  54              	 .loc 1 29 0
  55 0018 7B69     	 ldr r3,[r7,#20]
  56 001a 3A68     	 ldr r2,[r7]
  57 001c 5A60     	 str r2,[r3,#4]
  30:../cleanflight/src/main/drivers/buf_writer.c ****     buf->at = 0;
  58              	 .loc 1 30 0
  59 001e 7B69     	 ldr r3,[r7,#20]
  60 0020 0022     	 movs r2,#0
  61 0022 5A72     	 strb r2,[r3,#9]
  31:../cleanflight/src/main/drivers/buf_writer.c ****     buf->capacity = total_size - sizeof(*buf);
  62              	 .loc 1 31 0
  63 0024 BB68     	 ldr r3,[r7,#8]
  64 0026 DBB2     	 uxtb r3,r3
  65 0028 0A3B     	 subs r3,r3,#10
  66 002a DAB2     	 uxtb r2,r3
  67 002c 7B69     	 ldr r3,[r7,#20]
  68 002e 1A72     	 strb r2,[r3,#8]
  32:../cleanflight/src/main/drivers/buf_writer.c **** 
  33:../cleanflight/src/main/drivers/buf_writer.c ****     return buf;
  69              	 .loc 1 33 0
  70 0030 7B69     	 ldr r3,[r7,#20]
  34:../cleanflight/src/main/drivers/buf_writer.c **** }
  71              	 .loc 1 34 0
  72 0032 1846     	 mov r0,r3
  73 0034 1C37     	 adds r7,r7,#28
  74              	.LCFI3:
  75              	 .cfi_def_cfa_offset 4
  76 0036 BD46     	 mov sp,r7
  77              	.LCFI4:
  78              	 .cfi_def_cfa_register 13
  79              	 
  80 0038 5DF8047B 	 ldr r7,[sp],#4
  81              	.LCFI5:
  82              	 .cfi_restore 7
  83              	 .cfi_def_cfa_offset 0
  84 003c 7047     	 bx lr
  85              	 .cfi_endproc
  86              	.LFE0:
  88 003e 00BF     	 .section .text.bufWriterAppend,"ax",%progbits
  89              	 .align 2
  90              	 .global bufWriterAppend
  91              	 .thumb
  92              	 .thumb_func
  94              	bufWriterAppend:
  95              	.LFB1:
  35:../cleanflight/src/main/drivers/buf_writer.c **** 
  36:../cleanflight/src/main/drivers/buf_writer.c **** void bufWriterAppend(bufWriter_t *b, uint8_t ch)
  37:../cleanflight/src/main/drivers/buf_writer.c **** {
  96              	 .loc 1 37 0
  97              	 .cfi_startproc
  98              	 
  99              	 
 100 0000 80B5     	 push {r7,lr}
 101              	.LCFI6:
 102              	 .cfi_def_cfa_offset 8
 103              	 .cfi_offset 7,-8
 104              	 .cfi_offset 14,-4
 105 0002 82B0     	 sub sp,sp,#8
 106              	.LCFI7:
 107              	 .cfi_def_cfa_offset 16
 108 0004 00AF     	 add r7,sp,#0
 109              	.LCFI8:
 110              	 .cfi_def_cfa_register 7
 111 0006 7860     	 str r0,[r7,#4]
 112 0008 0B46     	 mov r3,r1
 113 000a FB70     	 strb r3,[r7,#3]
  38:../cleanflight/src/main/drivers/buf_writer.c ****     b->data[b->at++] = ch;
 114              	 .loc 1 38 0
 115 000c 7B68     	 ldr r3,[r7,#4]
 116 000e 5B7A     	 ldrb r3,[r3,#9]
 117 0010 5A1C     	 adds r2,r3,#1
 118 0012 D1B2     	 uxtb r1,r2
 119 0014 7A68     	 ldr r2,[r7,#4]
 120 0016 5172     	 strb r1,[r2,#9]
 121 0018 1A46     	 mov r2,r3
 122 001a 7B68     	 ldr r3,[r7,#4]
 123 001c 1344     	 add r3,r3,r2
 124 001e FA78     	 ldrb r2,[r7,#3]
 125 0020 9A72     	 strb r2,[r3,#10]
  39:../cleanflight/src/main/drivers/buf_writer.c ****     if (b->at >= b->capacity) {
 126              	 .loc 1 39 0
 127 0022 7B68     	 ldr r3,[r7,#4]
 128 0024 5A7A     	 ldrb r2,[r3,#9]
 129 0026 7B68     	 ldr r3,[r7,#4]
 130 0028 1B7A     	 ldrb r3,[r3,#8]
 131 002a 9A42     	 cmp r2,r3
 132 002c 02D3     	 bcc .L3
  40:../cleanflight/src/main/drivers/buf_writer.c ****         bufWriterFlush(b);
 133              	 .loc 1 40 0
 134 002e 7868     	 ldr r0,[r7,#4]
 135 0030 FFF7FEFF 	 bl bufWriterFlush
 136              	.L3:
  41:../cleanflight/src/main/drivers/buf_writer.c ****     }
  42:../cleanflight/src/main/drivers/buf_writer.c **** }
 137              	 .loc 1 42 0
 138 0034 0837     	 adds r7,r7,#8
 139              	.LCFI9:
 140              	 .cfi_def_cfa_offset 8
 141 0036 BD46     	 mov sp,r7
 142              	.LCFI10:
 143              	 .cfi_def_cfa_register 13
 144              	 
 145 0038 80BD     	 pop {r7,pc}
 146              	 .cfi_endproc
 147              	.LFE1:
 149 003a 00BF     	 .section .text.bufWriterFlush,"ax",%progbits
 150              	 .align 2
 151              	 .global bufWriterFlush
 152              	 .thumb
 153              	 .thumb_func
 155              	bufWriterFlush:
 156              	.LFB2:
  43:../cleanflight/src/main/drivers/buf_writer.c **** 
  44:../cleanflight/src/main/drivers/buf_writer.c **** void bufWriterFlush(bufWriter_t *b)
  45:../cleanflight/src/main/drivers/buf_writer.c **** {
 157              	 .loc 1 45 0
 158              	 .cfi_startproc
 159              	 
 160              	 
 161 0000 80B5     	 push {r7,lr}
 162              	.LCFI11:
 163              	 .cfi_def_cfa_offset 8
 164              	 .cfi_offset 7,-8
 165              	 .cfi_offset 14,-4
 166 0002 82B0     	 sub sp,sp,#8
 167              	.LCFI12:
 168              	 .cfi_def_cfa_offset 16
 169 0004 00AF     	 add r7,sp,#0
 170              	.LCFI13:
 171              	 .cfi_def_cfa_register 7
 172 0006 7860     	 str r0,[r7,#4]
  46:../cleanflight/src/main/drivers/buf_writer.c ****     if (b->at != 0) {
 173              	 .loc 1 46 0
 174 0008 7B68     	 ldr r3,[r7,#4]
 175 000a 5B7A     	 ldrb r3,[r3,#9]
 176 000c 002B     	 cmp r3,#0
 177 000e 0CD0     	 beq .L5
  47:../cleanflight/src/main/drivers/buf_writer.c ****         b->writer(b->arg, b->data, b->at);
 178              	 .loc 1 47 0
 179 0010 7B68     	 ldr r3,[r7,#4]
 180 0012 1B68     	 ldr r3,[r3]
 181 0014 7A68     	 ldr r2,[r7,#4]
 182 0016 5068     	 ldr r0,[r2,#4]
 183 0018 7A68     	 ldr r2,[r7,#4]
 184 001a 02F10A01 	 add r1,r2,#10
 185 001e 7A68     	 ldr r2,[r7,#4]
 186 0020 527A     	 ldrb r2,[r2,#9]
 187 0022 9847     	 blx r3
  48:../cleanflight/src/main/drivers/buf_writer.c ****         b->at = 0;
 188              	 .loc 1 48 0
 189 0024 7B68     	 ldr r3,[r7,#4]
 190 0026 0022     	 movs r2,#0
 191 0028 5A72     	 strb r2,[r3,#9]
 192              	.L5:
  49:../cleanflight/src/main/drivers/buf_writer.c ****     }
  50:../cleanflight/src/main/drivers/buf_writer.c **** }
 193              	 .loc 1 50 0
 194 002a 0837     	 adds r7,r7,#8
 195              	.LCFI14:
 196              	 .cfi_def_cfa_offset 8
 197 002c BD46     	 mov sp,r7
 198              	.LCFI15:
 199              	 .cfi_def_cfa_register 13
 200              	 
 201 002e 80BD     	 pop {r7,pc}
 202              	 .cfi_endproc
 203              	.LFE2:
 205              	 .text
 206              	.Letext0:
 207              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 208              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 209              	 .file 4 "../cleanflight/src/main/drivers/buf_writer.h"
DEFINED SYMBOLS
                            *ABS*:00000000 buf_writer.c
    {standard input}:20     .text.bufWriterInit:00000000 $t
    {standard input}:25     .text.bufWriterInit:00000000 bufWriterInit
    {standard input}:89     .text.bufWriterAppend:00000000 $t
    {standard input}:94     .text.bufWriterAppend:00000000 bufWriterAppend
    {standard input}:155    .text.bufWriterFlush:00000000 bufWriterFlush
    {standard input}:150    .text.bufWriterFlush:00000000 $t
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
