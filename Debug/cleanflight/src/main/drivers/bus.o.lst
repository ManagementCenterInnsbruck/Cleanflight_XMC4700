   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "bus.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.busWriteRegister,"ax",%progbits
  20              	 .align 2
  21              	 .global busWriteRegister
  22              	 .thumb
  23              	 .thumb_func
  25              	busWriteRegister:
  26              	.LFB524:
  27              	 .file 1 "../cleanflight/src/main/drivers/bus.c"
   1:../cleanflight/src/main/drivers/bus.c **** /*
   2:../cleanflight/src/main/drivers/bus.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/bus.c ****  *
   4:../cleanflight/src/main/drivers/bus.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/bus.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/bus.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/bus.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/bus.c ****  * any later version.
   9:../cleanflight/src/main/drivers/bus.c ****  *
  10:../cleanflight/src/main/drivers/bus.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/bus.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/bus.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/bus.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/bus.c ****  *
  15:../cleanflight/src/main/drivers/bus.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/bus.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/bus.c ****  *
  18:../cleanflight/src/main/drivers/bus.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/bus.c ****  */
  20:../cleanflight/src/main/drivers/bus.c **** 
  21:../cleanflight/src/main/drivers/bus.c **** #include <stdbool.h>
  22:../cleanflight/src/main/drivers/bus.c **** #include <stdint.h>
  23:../cleanflight/src/main/drivers/bus.c **** 
  24:../cleanflight/src/main/drivers/bus.c **** #include "platform.h"
  25:../cleanflight/src/main/drivers/bus.c **** 
  26:../cleanflight/src/main/drivers/bus.c **** #include "drivers/bus.h"
  27:../cleanflight/src/main/drivers/bus.c **** #include "drivers/bus_i2c_busdev.h"
  28:../cleanflight/src/main/drivers/bus.c **** #include "drivers/bus_spi.h"
  29:../cleanflight/src/main/drivers/bus.c **** 
  30:../cleanflight/src/main/drivers/bus.c **** bool busWriteRegister(const busDevice_t *busdev, uint8_t reg, uint8_t data)
  31:../cleanflight/src/main/drivers/bus.c **** {
  28              	 .loc 1 31 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 0B46     	 mov r3,r1
  45 000a FB70     	 strb r3,[r7,#3]
  46 000c 1346     	 mov r3,r2
  47 000e BB70     	 strb r3,[r7,#2]
  32:../cleanflight/src/main/drivers/bus.c **** #if !defined(USE_SPI) && !defined(USE_I2C)
  33:../cleanflight/src/main/drivers/bus.c ****     UNUSED(reg);
  34:../cleanflight/src/main/drivers/bus.c ****     UNUSED(data);
  35:../cleanflight/src/main/drivers/bus.c **** #endif
  36:../cleanflight/src/main/drivers/bus.c ****     switch (busdev->bustype) {
  48              	 .loc 1 36 0
  49 0010 7B68     	 ldr r3,[r7,#4]
  50 0012 1B78     	 ldrb r3,[r3]
  51 0014 012B     	 cmp r3,#1
  52 0016 0DD0     	 beq .L3
  53 0018 022B     	 cmp r3,#2
  54 001a 14D1     	 bne .L6
  37:../cleanflight/src/main/drivers/bus.c **** #ifdef USE_SPI
  38:../cleanflight/src/main/drivers/bus.c ****     case BUSTYPE_SPI:
  39:../cleanflight/src/main/drivers/bus.c ****         return spiBusWriteRegister(busdev, reg & 0x7f, data);
  55              	 .loc 1 39 0
  56 001c FB78     	 ldrb r3,[r7,#3]
  57 001e 03F07F03 	 and r3,r3,#127
  58 0022 DAB2     	 uxtb r2,r3
  59 0024 BB78     	 ldrb r3,[r7,#2]
  60 0026 7868     	 ldr r0,[r7,#4]
  61 0028 1146     	 mov r1,r2
  62 002a 1A46     	 mov r2,r3
  63 002c FFF7FEFF 	 bl spiBusWriteRegister
  64 0030 0346     	 mov r3,r0
  65 0032 09E0     	 b .L5
  66              	.L3:
  40:../cleanflight/src/main/drivers/bus.c **** #endif
  41:../cleanflight/src/main/drivers/bus.c **** #ifdef USE_I2C
  42:../cleanflight/src/main/drivers/bus.c ****     case BUSTYPE_I2C:
  43:../cleanflight/src/main/drivers/bus.c ****         return i2cBusWriteRegister(busdev, reg, data);
  67              	 .loc 1 43 0
  68 0034 FA78     	 ldrb r2,[r7,#3]
  69 0036 BB78     	 ldrb r3,[r7,#2]
  70 0038 7868     	 ldr r0,[r7,#4]
  71 003a 1146     	 mov r1,r2
  72 003c 1A46     	 mov r2,r3
  73 003e FFF7FEFF 	 bl i2cBusWriteRegister
  74 0042 0346     	 mov r3,r0
  75 0044 00E0     	 b .L5
  76              	.L6:
  44:../cleanflight/src/main/drivers/bus.c **** #endif
  45:../cleanflight/src/main/drivers/bus.c ****     default:
  46:../cleanflight/src/main/drivers/bus.c ****         return false;
  77              	 .loc 1 46 0
  78 0046 0023     	 movs r3,#0
  79              	.L5:
  47:../cleanflight/src/main/drivers/bus.c ****     }
  48:../cleanflight/src/main/drivers/bus.c **** }
  80              	 .loc 1 48 0
  81 0048 1846     	 mov r0,r3
  82 004a 0837     	 adds r7,r7,#8
  83              	.LCFI3:
  84              	 .cfi_def_cfa_offset 8
  85 004c BD46     	 mov sp,r7
  86              	.LCFI4:
  87              	 .cfi_def_cfa_register 13
  88              	 
  89 004e 80BD     	 pop {r7,pc}
  90              	 .cfi_endproc
  91              	.LFE524:
  93              	 .section .text.busReadRegisterBuffer,"ax",%progbits
  94              	 .align 2
  95              	 .global busReadRegisterBuffer
  96              	 .thumb
  97              	 .thumb_func
  99              	busReadRegisterBuffer:
 100              	.LFB525:
  49:../cleanflight/src/main/drivers/bus.c **** 
  50:../cleanflight/src/main/drivers/bus.c **** bool busReadRegisterBuffer(const busDevice_t *busdev, uint8_t reg, uint8_t *data, uint8_t length)
  51:../cleanflight/src/main/drivers/bus.c **** {
 101              	 .loc 1 51 0
 102              	 .cfi_startproc
 103              	 
 104              	 
 105 0000 80B5     	 push {r7,lr}
 106              	.LCFI5:
 107              	 .cfi_def_cfa_offset 8
 108              	 .cfi_offset 7,-8
 109              	 .cfi_offset 14,-4
 110 0002 84B0     	 sub sp,sp,#16
 111              	.LCFI6:
 112              	 .cfi_def_cfa_offset 24
 113 0004 00AF     	 add r7,sp,#0
 114              	.LCFI7:
 115              	 .cfi_def_cfa_register 7
 116 0006 F860     	 str r0,[r7,#12]
 117 0008 7A60     	 str r2,[r7,#4]
 118 000a 1A46     	 mov r2,r3
 119 000c 0B46     	 mov r3,r1
 120 000e FB72     	 strb r3,[r7,#11]
 121 0010 1346     	 mov r3,r2
 122 0012 BB72     	 strb r3,[r7,#10]
  52:../cleanflight/src/main/drivers/bus.c **** #if !defined(USE_SPI) && !defined(USE_I2C)
  53:../cleanflight/src/main/drivers/bus.c ****     UNUSED(reg);
  54:../cleanflight/src/main/drivers/bus.c ****     UNUSED(data);
  55:../cleanflight/src/main/drivers/bus.c ****     UNUSED(length);
  56:../cleanflight/src/main/drivers/bus.c **** #endif
  57:../cleanflight/src/main/drivers/bus.c ****     switch (busdev->bustype) {
 123              	 .loc 1 57 0
 124 0014 FB68     	 ldr r3,[r7,#12]
 125 0016 1B78     	 ldrb r3,[r3]
 126 0018 012B     	 cmp r3,#1
 127 001a 0DD0     	 beq .L9
 128 001c 022B     	 cmp r3,#2
 129 001e 14D1     	 bne .L12
  58:../cleanflight/src/main/drivers/bus.c **** #ifdef USE_SPI
  59:../cleanflight/src/main/drivers/bus.c ****     case BUSTYPE_SPI:
  60:../cleanflight/src/main/drivers/bus.c ****         return spiBusReadRegisterBuffer(busdev, reg | 0x80, data, length);
 130              	 .loc 1 60 0
 131 0020 FB7A     	 ldrb r3,[r7,#11]
 132 0022 63F07F03 	 orn r3,r3,#127
 133 0026 DAB2     	 uxtb r2,r3
 134 0028 BB7A     	 ldrb r3,[r7,#10]
 135 002a F868     	 ldr r0,[r7,#12]
 136 002c 1146     	 mov r1,r2
 137 002e 7A68     	 ldr r2,[r7,#4]
 138 0030 FFF7FEFF 	 bl spiBusReadRegisterBuffer
 139 0034 0346     	 mov r3,r0
 140 0036 09E0     	 b .L11
 141              	.L9:
  61:../cleanflight/src/main/drivers/bus.c **** #endif
  62:../cleanflight/src/main/drivers/bus.c **** #ifdef USE_I2C
  63:../cleanflight/src/main/drivers/bus.c ****     case BUSTYPE_I2C:
  64:../cleanflight/src/main/drivers/bus.c ****         return i2cBusReadRegisterBuffer(busdev, reg, data, length);
 142              	 .loc 1 64 0
 143 0038 FA7A     	 ldrb r2,[r7,#11]
 144 003a BB7A     	 ldrb r3,[r7,#10]
 145 003c F868     	 ldr r0,[r7,#12]
 146 003e 1146     	 mov r1,r2
 147 0040 7A68     	 ldr r2,[r7,#4]
 148 0042 FFF7FEFF 	 bl i2cBusReadRegisterBuffer
 149 0046 0346     	 mov r3,r0
 150 0048 00E0     	 b .L11
 151              	.L12:
  65:../cleanflight/src/main/drivers/bus.c **** #endif
  66:../cleanflight/src/main/drivers/bus.c ****     default:
  67:../cleanflight/src/main/drivers/bus.c ****         return false;
 152              	 .loc 1 67 0
 153 004a 0023     	 movs r3,#0
 154              	.L11:
  68:../cleanflight/src/main/drivers/bus.c ****     }
  69:../cleanflight/src/main/drivers/bus.c **** }
 155              	 .loc 1 69 0
 156 004c 1846     	 mov r0,r3
 157 004e 1037     	 adds r7,r7,#16
 158              	.LCFI8:
 159              	 .cfi_def_cfa_offset 8
 160 0050 BD46     	 mov sp,r7
 161              	.LCFI9:
 162              	 .cfi_def_cfa_register 13
 163              	 
 164 0052 80BD     	 pop {r7,pc}
 165              	 .cfi_endproc
 166              	.LFE525:
 168              	 .section .text.busReadRegister,"ax",%progbits
 169              	 .align 2
 170              	 .global busReadRegister
 171              	 .thumb
 172              	 .thumb_func
 174              	busReadRegister:
 175              	.LFB526:
  70:../cleanflight/src/main/drivers/bus.c **** 
  71:../cleanflight/src/main/drivers/bus.c **** uint8_t busReadRegister(const busDevice_t *busdev, uint8_t reg)
  72:../cleanflight/src/main/drivers/bus.c **** {
 176              	 .loc 1 72 0
 177              	 .cfi_startproc
 178              	 
 179              	 
 180 0000 80B5     	 push {r7,lr}
 181              	.LCFI10:
 182              	 .cfi_def_cfa_offset 8
 183              	 .cfi_offset 7,-8
 184              	 .cfi_offset 14,-4
 185 0002 84B0     	 sub sp,sp,#16
 186              	.LCFI11:
 187              	 .cfi_def_cfa_offset 24
 188 0004 00AF     	 add r7,sp,#0
 189              	.LCFI12:
 190              	 .cfi_def_cfa_register 7
 191 0006 7860     	 str r0,[r7,#4]
 192 0008 0B46     	 mov r3,r1
 193 000a FB70     	 strb r3,[r7,#3]
  73:../cleanflight/src/main/drivers/bus.c **** #if !defined(USE_SPI) && !defined(USE_I2C)
  74:../cleanflight/src/main/drivers/bus.c ****     UNUSED(busdev);
  75:../cleanflight/src/main/drivers/bus.c ****     UNUSED(reg);
  76:../cleanflight/src/main/drivers/bus.c ****     return false;
  77:../cleanflight/src/main/drivers/bus.c **** #else
  78:../cleanflight/src/main/drivers/bus.c ****     uint8_t data;
  79:../cleanflight/src/main/drivers/bus.c ****     busReadRegisterBuffer(busdev, reg, &data, 1);
 194              	 .loc 1 79 0
 195 000c FA78     	 ldrb r2,[r7,#3]
 196 000e 07F10F03 	 add r3,r7,#15
 197 0012 7868     	 ldr r0,[r7,#4]
 198 0014 1146     	 mov r1,r2
 199 0016 1A46     	 mov r2,r3
 200 0018 0123     	 movs r3,#1
 201 001a FFF7FEFF 	 bl busReadRegisterBuffer
  80:../cleanflight/src/main/drivers/bus.c ****     return data;
 202              	 .loc 1 80 0
 203 001e FB7B     	 ldrb r3,[r7,#15]
  81:../cleanflight/src/main/drivers/bus.c **** #endif
  82:../cleanflight/src/main/drivers/bus.c **** }
 204              	 .loc 1 82 0
 205 0020 1846     	 mov r0,r3
 206 0022 1037     	 adds r7,r7,#16
 207              	.LCFI13:
 208              	 .cfi_def_cfa_offset 8
 209 0024 BD46     	 mov sp,r7
 210              	.LCFI14:
 211              	 .cfi_def_cfa_register 13
 212              	 
 213 0026 80BD     	 pop {r7,pc}
 214              	 .cfi_endproc
 215              	.LFE526:
 217              	 .text
 218              	.Letext0:
 219              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 220              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 221              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 222              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 223              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 224              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 225              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus.h"
 226              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 227              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 bus.c
    {standard input}:20     .text.busWriteRegister:00000000 $t
    {standard input}:25     .text.busWriteRegister:00000000 busWriteRegister
    {standard input}:94     .text.busReadRegisterBuffer:00000000 $t
    {standard input}:99     .text.busReadRegisterBuffer:00000000 busReadRegisterBuffer
    {standard input}:169    .text.busReadRegister:00000000 $t
    {standard input}:174    .text.busReadRegister:00000000 busReadRegister
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
spiBusWriteRegister
i2cBusWriteRegister
spiBusReadRegisterBuffer
i2cBusReadRegisterBuffer
