   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "bus_i2c_busdev.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.i2cBusWriteRegister,"ax",%progbits
  20              	 .align 2
  21              	 .global i2cBusWriteRegister
  22              	 .thumb
  23              	 .thumb_func
  25              	i2cBusWriteRegister:
  26              	.LFB521:
  27              	 .file 1 "../cleanflight/src/main/drivers/bus_i2c_busdev.c"
   1:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** /*
   2:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  *
   4:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * any later version.
   9:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  *
  10:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  *
  15:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  *
  18:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****  */
  20:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** 
  21:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** #include <stdbool.h>
  22:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** #include <stdint.h>
  23:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** #include <string.h>
  24:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** 
  25:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** #include "platform.h"
  26:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** 
  27:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** #if defined(USE_I2C)
  28:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** 
  29:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** #include "drivers/bus.h"
  30:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** #include "drivers/bus_i2c.h"
  31:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** 
  32:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** bool i2cBusWriteRegister(const busDevice_t *busdev, uint8_t reg, uint8_t data)
  33:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** {
  28              	 .loc 1 33 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44 0008 0B46     	 mov r3,r1
  45 000a FB70     	 strb r3,[r7,#3]
  46 000c 1346     	 mov r3,r2
  47 000e BB70     	 strb r3,[r7,#2]
  34:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****     return i2cWrite(busdev->busdev_u.i2c.device, busdev->busdev_u.i2c.address, reg, data);
  48              	 .loc 1 34 0
  49 0010 7B68     	 ldr r3,[r7,#4]
  50 0012 5A78     	 ldrb r2,[r3,#1]
  51 0014 7B68     	 ldr r3,[r7,#4]
  52 0016 9978     	 ldrb r1,[r3,#2]
  53 0018 50B2     	 sxtb r0,r2
  54 001a FA78     	 ldrb r2,[r7,#3]
  55 001c BB78     	 ldrb r3,[r7,#2]
  56 001e FFF7FEFF 	 bl i2cWrite
  57 0022 0346     	 mov r3,r0
  35:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** }
  58              	 .loc 1 35 0
  59 0024 1846     	 mov r0,r3
  60 0026 0837     	 adds r7,r7,#8
  61              	.LCFI3:
  62              	 .cfi_def_cfa_offset 8
  63 0028 BD46     	 mov sp,r7
  64              	.LCFI4:
  65              	 .cfi_def_cfa_register 13
  66              	 
  67 002a 80BD     	 pop {r7,pc}
  68              	 .cfi_endproc
  69              	.LFE521:
  71              	 .section .text.i2cBusReadRegisterBuffer,"ax",%progbits
  72              	 .align 2
  73              	 .global i2cBusReadRegisterBuffer
  74              	 .thumb
  75              	 .thumb_func
  77              	i2cBusReadRegisterBuffer:
  78              	.LFB522:
  36:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** 
  37:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** bool i2cBusReadRegisterBuffer(const busDevice_t *busdev, uint8_t reg, uint8_t *data, uint8_t length
  38:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** {
  79              	 .loc 1 38 0
  80              	 .cfi_startproc
  81              	 
  82              	 
  83 0000 90B5     	 push {r4,r7,lr}
  84              	.LCFI5:
  85              	 .cfi_def_cfa_offset 12
  86              	 .cfi_offset 4,-12
  87              	 .cfi_offset 7,-8
  88              	 .cfi_offset 14,-4
  89 0002 87B0     	 sub sp,sp,#28
  90              	.LCFI6:
  91              	 .cfi_def_cfa_offset 40
  92 0004 02AF     	 add r7,sp,#8
  93              	.LCFI7:
  94              	 .cfi_def_cfa 7,32
  95 0006 F860     	 str r0,[r7,#12]
  96 0008 7A60     	 str r2,[r7,#4]
  97 000a 1A46     	 mov r2,r3
  98 000c 0B46     	 mov r3,r1
  99 000e FB72     	 strb r3,[r7,#11]
 100 0010 1346     	 mov r3,r2
 101 0012 BB72     	 strb r3,[r7,#10]
  39:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****     return i2cRead(busdev->busdev_u.i2c.device, busdev->busdev_u.i2c.address, reg, length, data);
 102              	 .loc 1 39 0
 103 0014 FB68     	 ldr r3,[r7,#12]
 104 0016 5A78     	 ldrb r2,[r3,#1]
 105 0018 FB68     	 ldr r3,[r7,#12]
 106 001a 9978     	 ldrb r1,[r3,#2]
 107 001c 50B2     	 sxtb r0,r2
 108 001e FA7A     	 ldrb r2,[r7,#11]
 109 0020 BC7A     	 ldrb r4,[r7,#10]
 110 0022 7B68     	 ldr r3,[r7,#4]
 111 0024 0093     	 str r3,[sp]
 112 0026 2346     	 mov r3,r4
 113 0028 FFF7FEFF 	 bl i2cRead
 114 002c 0346     	 mov r3,r0
  40:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** }
 115              	 .loc 1 40 0
 116 002e 1846     	 mov r0,r3
 117 0030 1437     	 adds r7,r7,#20
 118              	.LCFI8:
 119              	 .cfi_def_cfa_offset 12
 120 0032 BD46     	 mov sp,r7
 121              	.LCFI9:
 122              	 .cfi_def_cfa_register 13
 123              	 
 124 0034 90BD     	 pop {r4,r7,pc}
 125              	 .cfi_endproc
 126              	.LFE522:
 128 0036 00BF     	 .section .text.i2cBusReadRegister,"ax",%progbits
 129              	 .align 2
 130              	 .global i2cBusReadRegister
 131              	 .thumb
 132              	 .thumb_func
 134              	i2cBusReadRegister:
 135              	.LFB523:
  41:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** 
  42:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** uint8_t i2cBusReadRegister(const busDevice_t *busdev, uint8_t reg)
  43:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** {
 136              	 .loc 1 43 0
 137              	 .cfi_startproc
 138              	 
 139              	 
 140 0000 80B5     	 push {r7,lr}
 141              	.LCFI10:
 142              	 .cfi_def_cfa_offset 8
 143              	 .cfi_offset 7,-8
 144              	 .cfi_offset 14,-4
 145 0002 86B0     	 sub sp,sp,#24
 146              	.LCFI11:
 147              	 .cfi_def_cfa_offset 32
 148 0004 02AF     	 add r7,sp,#8
 149              	.LCFI12:
 150              	 .cfi_def_cfa 7,24
 151 0006 7860     	 str r0,[r7,#4]
 152 0008 0B46     	 mov r3,r1
 153 000a FB70     	 strb r3,[r7,#3]
  44:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****     uint8_t data;
  45:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****     i2cRead(busdev->busdev_u.i2c.device, busdev->busdev_u.i2c.address, reg, 1, &data);
 154              	 .loc 1 45 0
 155 000c 7B68     	 ldr r3,[r7,#4]
 156 000e 5A78     	 ldrb r2,[r3,#1]
 157 0010 7B68     	 ldr r3,[r7,#4]
 158 0012 9978     	 ldrb r1,[r3,#2]
 159 0014 50B2     	 sxtb r0,r2
 160 0016 FA78     	 ldrb r2,[r7,#3]
 161 0018 07F10F03 	 add r3,r7,#15
 162 001c 0093     	 str r3,[sp]
 163 001e 0123     	 movs r3,#1
 164 0020 FFF7FEFF 	 bl i2cRead
  46:../cleanflight/src/main/drivers/bus_i2c_busdev.c ****     return data;
 165              	 .loc 1 46 0
 166 0024 FB7B     	 ldrb r3,[r7,#15]
  47:../cleanflight/src/main/drivers/bus_i2c_busdev.c **** }
 167              	 .loc 1 47 0
 168 0026 1846     	 mov r0,r3
 169 0028 1037     	 adds r7,r7,#16
 170              	.LCFI13:
 171              	 .cfi_def_cfa_offset 8
 172 002a BD46     	 mov sp,r7
 173              	.LCFI14:
 174              	 .cfi_def_cfa_register 13
 175              	 
 176 002c 80BD     	 pop {r7,pc}
 177              	 .cfi_endproc
 178              	.LFE523:
 180 002e 00BF     	 .text
 181              	.Letext0:
 182              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 183              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 184              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 185              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 186              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 187              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 188              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus.h"
 189              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 190              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 bus_i2c_busdev.c
    {standard input}:20     .text.i2cBusWriteRegister:00000000 $t
    {standard input}:25     .text.i2cBusWriteRegister:00000000 i2cBusWriteRegister
    {standard input}:72     .text.i2cBusReadRegisterBuffer:00000000 $t
    {standard input}:77     .text.i2cBusReadRegisterBuffer:00000000 i2cBusReadRegisterBuffer
    {standard input}:129    .text.i2cBusReadRegister:00000000 $t
    {standard input}:134    .text.i2cBusReadRegister:00000000 i2cBusReadRegister
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
i2cWrite
i2cRead
