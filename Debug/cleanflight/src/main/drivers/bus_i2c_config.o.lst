   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "bus_i2c_config.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.i2cHardwareConfigure,"ax",%progbits
  20              	 .align 2
  21              	 .global i2cHardwareConfigure
  22              	 .thumb
  23              	 .thumb_func
  25              	i2cHardwareConfigure:
  26              	.LFB527:
  27              	 .file 1 "../cleanflight/src/main/drivers/bus_i2c_config.c"
   1:../cleanflight/src/main/drivers/bus_i2c_config.c **** /*
   2:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/bus_i2c_config.c ****  *
   4:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * any later version.
   9:../cleanflight/src/main/drivers/bus_i2c_config.c ****  *
  10:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/bus_i2c_config.c ****  *
  15:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/bus_i2c_config.c ****  *
  18:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/bus_i2c_config.c ****  */
  20:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  21:../cleanflight/src/main/drivers/bus_i2c_config.c **** /*
  22:../cleanflight/src/main/drivers/bus_i2c_config.c ****  * Created by jflyper
  23:../cleanflight/src/main/drivers/bus_i2c_config.c ****  */
  24:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  25:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include <stdbool.h>
  26:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include <stdint.h>
  27:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include <string.h>
  28:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  29:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include "platform.h"
  30:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  31:../cleanflight/src/main/drivers/bus_i2c_config.c **** #if defined(USE_I2C) && !defined(SOFT_I2C)
  32:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  33:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include "build/build_config.h"
  34:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include "build/debug.h"
  35:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  36:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include "drivers/bus_i2c.h"
  37:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include "drivers/bus_i2c_impl.h"
  38:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include "drivers/io.h"
  39:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  40:../cleanflight/src/main/drivers/bus_i2c_config.c **** #include "pg/bus_i2c.h"
  41:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  42:../cleanflight/src/main/drivers/bus_i2c_config.c **** // Backward compatibility for overclocking and internal pullup.
  43:../cleanflight/src/main/drivers/bus_i2c_config.c **** // These will eventually be configurable through PG-based configurator
  44:../cleanflight/src/main/drivers/bus_i2c_config.c **** // (and/or probably through some cli extension).
  45:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  46:../cleanflight/src/main/drivers/bus_i2c_config.c **** #ifndef I2C1_OVERCLOCK
  47:../cleanflight/src/main/drivers/bus_i2c_config.c **** #define I2C1_OVERCLOCK false
  48:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  49:../cleanflight/src/main/drivers/bus_i2c_config.c **** #ifndef I2C2_OVERCLOCK
  50:../cleanflight/src/main/drivers/bus_i2c_config.c **** #define I2C2_OVERCLOCK false
  51:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  52:../cleanflight/src/main/drivers/bus_i2c_config.c **** #ifndef I2C3_OVERCLOCK
  53:../cleanflight/src/main/drivers/bus_i2c_config.c **** #define I2C3_OVERCLOCK false
  54:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  55:../cleanflight/src/main/drivers/bus_i2c_config.c **** #ifndef I2C4_OVERCLOCK
  56:../cleanflight/src/main/drivers/bus_i2c_config.c **** #define I2C4_OVERCLOCK false
  57:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  58:../cleanflight/src/main/drivers/bus_i2c_config.c **** #ifndef I2C5_OVERCLOCK
  59:../cleanflight/src/main/drivers/bus_i2c_config.c **** #define I2C5_OVERCLOCK false
  60:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  61:../cleanflight/src/main/drivers/bus_i2c_config.c **** #ifndef I2C6_OVERCLOCK
  62:../cleanflight/src/main/drivers/bus_i2c_config.c **** #define I2C6_OVERCLOCK false
  63:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  64:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  65:../cleanflight/src/main/drivers/bus_i2c_config.c **** void i2cHardwareConfigure(const i2cConfig_t *i2cConfig)
  66:../cleanflight/src/main/drivers/bus_i2c_config.c **** {
  28              	 .loc 1 66 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 88B0     	 sub sp,sp,#32
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 40
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  44              	.LBB2:
  67:../cleanflight/src/main/drivers/bus_i2c_config.c ****     for (int index = 0 ; index < I2CDEV_COUNT ; index++) {
  45              	 .loc 1 67 0
  46 0008 0023     	 movs r3,#0
  47 000a FB61     	 str r3,[r7,#28]
  48 000c A3E0     	 b .L2
  49              	.L9:
  50              	.LBB3:
  68:../cleanflight/src/main/drivers/bus_i2c_config.c ****         const i2cHardware_t *hardware = &i2cHardware[index];
  51              	 .loc 1 68 0
  52 000e FB69     	 ldr r3,[r7,#28]
  53 0010 5B01     	 lsls r3,r3,#5
  54 0012 544A     	 ldr r2,.L10
  55 0014 1344     	 add r3,r3,r2
  56 0016 7B61     	 str r3,[r7,#20]
  69:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  70:../cleanflight/src/main/drivers/bus_i2c_config.c ****         if (!hardware->reg) {
  57              	 .loc 1 70 0
  58 0018 7B69     	 ldr r3,[r7,#20]
  59 001a D3F80130 	 ldr r3,[r3,#1]
  60 001e 002B     	 cmp r3,#0
  61 0020 00D1     	 bne .L3
  71:../cleanflight/src/main/drivers/bus_i2c_config.c ****             continue;
  62              	 .loc 1 71 0
  63 0022 95E0     	 b .L4
  64              	.L3:
  72:../cleanflight/src/main/drivers/bus_i2c_config.c ****         }
  73:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  74:../cleanflight/src/main/drivers/bus_i2c_config.c ****         I2CDevice device = hardware->device;
  65              	 .loc 1 74 0
  66 0024 7B69     	 ldr r3,[r7,#20]
  67 0026 1B78     	 ldrb r3,[r3]
  68 0028 FB74     	 strb r3,[r7,#19]
  75:../cleanflight/src/main/drivers/bus_i2c_config.c ****         i2cDevice_t *pDev = &i2cDevice[device];
  69              	 .loc 1 75 0
  70 002a 97F91330 	 ldrsb r3,[r7,#19]
  71 002e 1622     	 movs r2,#22
  72 0030 02FB03F3 	 mul r3,r2,r3
  73 0034 4C4A     	 ldr r2,.L10+4
  74 0036 1344     	 add r3,r3,r2
  75 0038 FB60     	 str r3,[r7,#12]
  76:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  77:../cleanflight/src/main/drivers/bus_i2c_config.c ****         memset(pDev, 0, sizeof(*pDev));
  76              	 .loc 1 77 0
  77 003a F868     	 ldr r0,[r7,#12]
  78 003c 0021     	 movs r1,#0
  79 003e 1622     	 movs r2,#22
  80 0040 FFF7FEFF 	 bl memset
  81              	.LBB4:
  78:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
  79:../cleanflight/src/main/drivers/bus_i2c_config.c ****         for (int pindex = 0 ; pindex < I2C_PIN_SEL_MAX ; pindex++) {
  82              	 .loc 1 79 0
  83 0044 0023     	 movs r3,#0
  84 0046 BB61     	 str r3,[r7,#24]
  85 0048 5FE0     	 b .L5
  86              	.L8:
  80:../cleanflight/src/main/drivers/bus_i2c_config.c ****             if (i2cConfig[device].ioTagScl == hardware->sclPins[pindex].ioTag) {
  87              	 .loc 1 80 0
  88 004a 97F91330 	 ldrsb r3,[r7,#19]
  89 004e 9B00     	 lsls r3,r3,#2
  90 0050 7A68     	 ldr r2,[r7,#4]
  91 0052 1344     	 add r3,r3,r2
  92 0054 1978     	 ldrb r1,[r3]
  93 0056 7869     	 ldr r0,[r7,#20]
  94 0058 BA69     	 ldr r2,[r7,#24]
  95 005a 1346     	 mov r3,r2
  96 005c 5B00     	 lsls r3,r3,#1
  97 005e 1344     	 add r3,r3,r2
  98 0060 0344     	 add r3,r3,r0
  99 0062 5B79     	 ldrb r3,[r3,#5]
 100 0064 9942     	 cmp r1,r3
 101 0066 1DD1     	 bne .L6
  81:../cleanflight/src/main/drivers/bus_i2c_config.c ****                 pDev->scl = IOGetByTag(i2cConfig[device].ioTagScl);
 102              	 .loc 1 81 0
 103 0068 97F91330 	 ldrsb r3,[r7,#19]
 104 006c 9B00     	 lsls r3,r3,#2
 105 006e 7A68     	 ldr r2,[r7,#4]
 106 0070 1344     	 add r3,r3,r2
 107 0072 1B78     	 ldrb r3,[r3]
 108 0074 1846     	 mov r0,r3
 109 0076 FFF7FEFF 	 bl IOGetByTag
 110 007a 0246     	 mov r2,r0
 111 007c FB68     	 ldr r3,[r7,#12]
 112 007e 9A60     	 str r2,[r3,#8]
  82:../cleanflight/src/main/drivers/bus_i2c_config.c **** #if defined(STM32F4)
  83:../cleanflight/src/main/drivers/bus_i2c_config.c ****                 pDev->sclAF = hardware->sclPins[pindex].af;
  84:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  85:../cleanflight/src/main/drivers/bus_i2c_config.c **** #if defined(XMC4700_F100x2048)
  86:../cleanflight/src/main/drivers/bus_i2c_config.c ****                 pDev->sclAF = hardware->sclPins[pindex].af;
 113              	 .loc 1 86 0
 114 0080 7969     	 ldr r1,[r7,#20]
 115 0082 BA69     	 ldr r2,[r7,#24]
 116 0084 1346     	 mov r3,r2
 117 0086 5B00     	 lsls r3,r3,#1
 118 0088 1344     	 add r3,r3,r2
 119 008a 0B44     	 add r3,r3,r1
 120 008c 9A79     	 ldrb r2,[r3,#6]
 121 008e FB68     	 ldr r3,[r7,#12]
 122 0090 1A74     	 strb r2,[r3,#16]
  87:../cleanflight/src/main/drivers/bus_i2c_config.c ****                 pDev->sclSource = hardware->sclPins[pindex].source;
 123              	 .loc 1 87 0
 124 0092 7969     	 ldr r1,[r7,#20]
 125 0094 BA69     	 ldr r2,[r7,#24]
 126 0096 1346     	 mov r3,r2
 127 0098 5B00     	 lsls r3,r3,#1
 128 009a 1344     	 add r3,r3,r2
 129 009c 0B44     	 add r3,r3,r1
 130 009e DA79     	 ldrb r2,[r3,#7]
 131 00a0 FB68     	 ldr r3,[r7,#12]
 132 00a2 9A74     	 strb r2,[r3,#18]
 133              	.L6:
  88:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  89:../cleanflight/src/main/drivers/bus_i2c_config.c ****             }
  90:../cleanflight/src/main/drivers/bus_i2c_config.c ****             if (i2cConfig[device].ioTagSda == hardware->sdaPins[pindex].ioTag) {
 134              	 .loc 1 90 0
 135 00a4 97F91330 	 ldrsb r3,[r7,#19]
 136 00a8 9B00     	 lsls r3,r3,#2
 137 00aa 7A68     	 ldr r2,[r7,#4]
 138 00ac 1344     	 add r3,r3,r2
 139 00ae 5978     	 ldrb r1,[r3,#1]
 140 00b0 7869     	 ldr r0,[r7,#20]
 141 00b2 BA69     	 ldr r2,[r7,#24]
 142 00b4 1346     	 mov r3,r2
 143 00b6 5B00     	 lsls r3,r3,#1
 144 00b8 1344     	 add r3,r3,r2
 145 00ba 0344     	 add r3,r3,r0
 146 00bc 1033     	 adds r3,r3,#16
 147 00be 5B78     	 ldrb r3,[r3,#1]
 148 00c0 9942     	 cmp r1,r3
 149 00c2 1FD1     	 bne .L7
  91:../cleanflight/src/main/drivers/bus_i2c_config.c ****                 pDev->sda = IOGetByTag(i2cConfig[device].ioTagSda);
 150              	 .loc 1 91 0
 151 00c4 97F91330 	 ldrsb r3,[r7,#19]
 152 00c8 9B00     	 lsls r3,r3,#2
 153 00ca 7A68     	 ldr r2,[r7,#4]
 154 00cc 1344     	 add r3,r3,r2
 155 00ce 5B78     	 ldrb r3,[r3,#1]
 156 00d0 1846     	 mov r0,r3
 157 00d2 FFF7FEFF 	 bl IOGetByTag
 158 00d6 0246     	 mov r2,r0
 159 00d8 FB68     	 ldr r3,[r7,#12]
 160 00da DA60     	 str r2,[r3,#12]
  92:../cleanflight/src/main/drivers/bus_i2c_config.c **** #if defined(STM32F4)
  93:../cleanflight/src/main/drivers/bus_i2c_config.c ****                 pDev->sdaAF = hardware->sdaPins[pindex].af;
  94:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  95:../cleanflight/src/main/drivers/bus_i2c_config.c **** #if defined(XMC4700_F100x2048)
  96:../cleanflight/src/main/drivers/bus_i2c_config.c ****                 pDev->sdaAF = hardware->sdaPins[pindex].af;
 161              	 .loc 1 96 0
 162 00dc 7969     	 ldr r1,[r7,#20]
 163 00de BA69     	 ldr r2,[r7,#24]
 164 00e0 1346     	 mov r3,r2
 165 00e2 5B00     	 lsls r3,r3,#1
 166 00e4 1344     	 add r3,r3,r2
 167 00e6 0B44     	 add r3,r3,r1
 168 00e8 1033     	 adds r3,r3,#16
 169 00ea 9A78     	 ldrb r2,[r3,#2]
 170 00ec FB68     	 ldr r3,[r7,#12]
 171 00ee 5A74     	 strb r2,[r3,#17]
  97:../cleanflight/src/main/drivers/bus_i2c_config.c ****                 pDev->sdaSource = hardware->sdaPins[pindex].source;
 172              	 .loc 1 97 0
 173 00f0 7969     	 ldr r1,[r7,#20]
 174 00f2 BA69     	 ldr r2,[r7,#24]
 175 00f4 1346     	 mov r3,r2
 176 00f6 5B00     	 lsls r3,r3,#1
 177 00f8 1344     	 add r3,r3,r2
 178 00fa 0B44     	 add r3,r3,r1
 179 00fc 1033     	 adds r3,r3,#16
 180 00fe DA78     	 ldrb r2,[r3,#3]
 181 0100 FB68     	 ldr r3,[r7,#12]
 182 0102 DA74     	 strb r2,[r3,#19]
 183              	.L7:
  79:../cleanflight/src/main/drivers/bus_i2c_config.c ****             if (i2cConfig[device].ioTagScl == hardware->sclPins[pindex].ioTag) {
 184              	 .loc 1 79 0 discriminator 2
 185 0104 BB69     	 ldr r3,[r7,#24]
 186 0106 0133     	 adds r3,r3,#1
 187 0108 BB61     	 str r3,[r7,#24]
 188              	.L5:
  79:../cleanflight/src/main/drivers/bus_i2c_config.c ****             if (i2cConfig[device].ioTagScl == hardware->sclPins[pindex].ioTag) {
 189              	 .loc 1 79 0 is_stmt 0 discriminator 1
 190 010a BB69     	 ldr r3,[r7,#24]
 191 010c 032B     	 cmp r3,#3
 192 010e 9CDD     	 ble .L8
 193              	.LBE4:
  98:../cleanflight/src/main/drivers/bus_i2c_config.c **** #endif
  99:../cleanflight/src/main/drivers/bus_i2c_config.c ****             }
 100:../cleanflight/src/main/drivers/bus_i2c_config.c ****         }
 101:../cleanflight/src/main/drivers/bus_i2c_config.c **** 
 102:../cleanflight/src/main/drivers/bus_i2c_config.c ****         if (pDev->scl && pDev->sda) {
 194              	 .loc 1 102 0 is_stmt 1
 195 0110 FB68     	 ldr r3,[r7,#12]
 196 0112 9B68     	 ldr r3,[r3,#8]
 197 0114 002B     	 cmp r3,#0
 198 0116 1BD0     	 beq .L4
 199              	 .loc 1 102 0 is_stmt 0 discriminator 1
 200 0118 FB68     	 ldr r3,[r7,#12]
 201 011a DB68     	 ldr r3,[r3,#12]
 202 011c 002B     	 cmp r3,#0
 203 011e 17D0     	 beq .L4
 103:../cleanflight/src/main/drivers/bus_i2c_config.c ****             pDev->hardware = hardware;
 204              	 .loc 1 103 0 is_stmt 1
 205 0120 FB68     	 ldr r3,[r7,#12]
 206 0122 7A69     	 ldr r2,[r7,#20]
 207 0124 1A60     	 str r2,[r3]
 104:../cleanflight/src/main/drivers/bus_i2c_config.c ****             pDev->reg = hardware->reg;
 208              	 .loc 1 104 0
 209 0126 7B69     	 ldr r3,[r7,#20]
 210 0128 D3F80120 	 ldr r2,[r3,#1]
 211 012c FB68     	 ldr r3,[r7,#12]
 212 012e 5A60     	 str r2,[r3,#4]
 105:../cleanflight/src/main/drivers/bus_i2c_config.c ****             pDev->overClock = i2cConfig[device].overClock;
 213              	 .loc 1 105 0
 214 0130 97F91330 	 ldrsb r3,[r7,#19]
 215 0134 9B00     	 lsls r3,r3,#2
 216 0136 7A68     	 ldr r2,[r7,#4]
 217 0138 1344     	 add r3,r3,r2
 218 013a 9A78     	 ldrb r2,[r3,#2]
 219 013c FB68     	 ldr r3,[r7,#12]
 220 013e 1A75     	 strb r2,[r3,#20]
 106:../cleanflight/src/main/drivers/bus_i2c_config.c ****             pDev->pullUp = i2cConfig[device].pullUp;
 221              	 .loc 1 106 0
 222 0140 97F91330 	 ldrsb r3,[r7,#19]
 223 0144 9B00     	 lsls r3,r3,#2
 224 0146 7A68     	 ldr r2,[r7,#4]
 225 0148 1344     	 add r3,r3,r2
 226 014a DA78     	 ldrb r2,[r3,#3]
 227 014c FB68     	 ldr r3,[r7,#12]
 228 014e 5A75     	 strb r2,[r3,#21]
 229              	.L4:
 230              	.LBE3:
  67:../cleanflight/src/main/drivers/bus_i2c_config.c ****         const i2cHardware_t *hardware = &i2cHardware[index];
 231              	 .loc 1 67 0 discriminator 2
 232 0150 FB69     	 ldr r3,[r7,#28]
 233 0152 0133     	 adds r3,r3,#1
 234 0154 FB61     	 str r3,[r7,#28]
 235              	.L2:
  67:../cleanflight/src/main/drivers/bus_i2c_config.c ****         const i2cHardware_t *hardware = &i2cHardware[index];
 236              	 .loc 1 67 0 is_stmt 0 discriminator 1
 237 0156 FB69     	 ldr r3,[r7,#28]
 238 0158 052B     	 cmp r3,#5
 239 015a 7FF758AF 	 ble .L9
 240              	.LBE2:
 107:../cleanflight/src/main/drivers/bus_i2c_config.c ****         }
 108:../cleanflight/src/main/drivers/bus_i2c_config.c ****     }
 109:../cleanflight/src/main/drivers/bus_i2c_config.c **** }
 241              	 .loc 1 109 0 is_stmt 1
 242 015e 2037     	 adds r7,r7,#32
 243              	.LCFI3:
 244              	 .cfi_def_cfa_offset 8
 245 0160 BD46     	 mov sp,r7
 246              	.LCFI4:
 247              	 .cfi_def_cfa_register 13
 248              	 
 249 0162 80BD     	 pop {r7,pc}
 250              	.L11:
 251              	 .align 2
 252              	.L10:
 253 0164 00000000 	 .word i2cHardware
 254 0168 00000000 	 .word i2cDevice
 255              	 .cfi_endproc
 256              	.LFE527:
 258              	 .text
 259              	.Letext0:
 260              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 261              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 262              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 263              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 264              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 265              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/rcc_types.h"
 266              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 267              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c_impl.h"
 268              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/bus_i2c.h"
 269              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 270              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 bus_i2c_config.c
    {standard input}:20     .text.i2cHardwareConfigure:00000000 $t
    {standard input}:25     .text.i2cHardwareConfigure:00000000 i2cHardwareConfigure
    {standard input}:253    .text.i2cHardwareConfigure:00000164 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
IOGetByTag
i2cHardware
i2cDevice
