   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "display.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.displayClearScreen,"ax",%progbits
  20              	 .align 2
  21              	 .global displayClearScreen
  22              	 .thumb
  23              	 .thumb_func
  25              	displayClearScreen:
  26              	.LFB521:
  27              	 .file 1 "../cleanflight/src/main/drivers/display.c"
   1:../cleanflight/src/main/drivers/display.c **** /*
   2:../cleanflight/src/main/drivers/display.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/display.c ****  *
   4:../cleanflight/src/main/drivers/display.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/display.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/display.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/display.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/display.c ****  * any later version.
   9:../cleanflight/src/main/drivers/display.c ****  *
  10:../cleanflight/src/main/drivers/display.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/display.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/display.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/display.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/display.c ****  *
  15:../cleanflight/src/main/drivers/display.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/display.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/display.c ****  *
  18:../cleanflight/src/main/drivers/display.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/display.c ****  */
  20:../cleanflight/src/main/drivers/display.c **** 
  21:../cleanflight/src/main/drivers/display.c **** #include <stdbool.h>
  22:../cleanflight/src/main/drivers/display.c **** #include <stdint.h>
  23:../cleanflight/src/main/drivers/display.c **** #include <string.h>
  24:../cleanflight/src/main/drivers/display.c **** 
  25:../cleanflight/src/main/drivers/display.c **** #include "platform.h"
  26:../cleanflight/src/main/drivers/display.c **** 
  27:../cleanflight/src/main/drivers/display.c **** #include "common/utils.h"
  28:../cleanflight/src/main/drivers/display.c **** 
  29:../cleanflight/src/main/drivers/display.c **** #include "display.h"
  30:../cleanflight/src/main/drivers/display.c **** 
  31:../cleanflight/src/main/drivers/display.c **** void displayClearScreen(displayPort_t *instance)
  32:../cleanflight/src/main/drivers/display.c **** {
  28              	 .loc 1 32 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 82B0     	 sub sp,sp,#8
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 7860     	 str r0,[r7,#4]
  33:../cleanflight/src/main/drivers/display.c ****     instance->vTable->clearScreen(instance);
  44              	 .loc 1 33 0
  45 0008 7B68     	 ldr r3,[r7,#4]
  46 000a 1B68     	 ldr r3,[r3]
  47 000c 9B68     	 ldr r3,[r3,#8]
  48 000e 7868     	 ldr r0,[r7,#4]
  49 0010 9847     	 blx r3
  34:../cleanflight/src/main/drivers/display.c ****     instance->cleared = true;
  50              	 .loc 1 34 0
  51 0012 7B68     	 ldr r3,[r7,#4]
  52 0014 0122     	 movs r2,#1
  53 0016 1A73     	 strb r2,[r3,#12]
  35:../cleanflight/src/main/drivers/display.c ****     instance->cursorRow = -1;
  54              	 .loc 1 35 0
  55 0018 7B68     	 ldr r3,[r7,#4]
  56 001a FF22     	 movs r2,#255
  57 001c 5A73     	 strb r2,[r3,#13]
  36:../cleanflight/src/main/drivers/display.c **** }
  58              	 .loc 1 36 0
  59 001e 0837     	 adds r7,r7,#8
  60              	.LCFI3:
  61              	 .cfi_def_cfa_offset 8
  62 0020 BD46     	 mov sp,r7
  63              	.LCFI4:
  64              	 .cfi_def_cfa_register 13
  65              	 
  66 0022 80BD     	 pop {r7,pc}
  67              	 .cfi_endproc
  68              	.LFE521:
  70              	 .section .text.displayDrawScreen,"ax",%progbits
  71              	 .align 2
  72              	 .global displayDrawScreen
  73              	 .thumb
  74              	 .thumb_func
  76              	displayDrawScreen:
  77              	.LFB522:
  37:../cleanflight/src/main/drivers/display.c **** 
  38:../cleanflight/src/main/drivers/display.c **** void displayDrawScreen(displayPort_t *instance)
  39:../cleanflight/src/main/drivers/display.c **** {
  78              	 .loc 1 39 0
  79              	 .cfi_startproc
  80              	 
  81              	 
  82 0000 80B5     	 push {r7,lr}
  83              	.LCFI5:
  84              	 .cfi_def_cfa_offset 8
  85              	 .cfi_offset 7,-8
  86              	 .cfi_offset 14,-4
  87 0002 82B0     	 sub sp,sp,#8
  88              	.LCFI6:
  89              	 .cfi_def_cfa_offset 16
  90 0004 00AF     	 add r7,sp,#0
  91              	.LCFI7:
  92              	 .cfi_def_cfa_register 7
  93 0006 7860     	 str r0,[r7,#4]
  40:../cleanflight/src/main/drivers/display.c ****     instance->vTable->drawScreen(instance);
  94              	 .loc 1 40 0
  95 0008 7B68     	 ldr r3,[r7,#4]
  96 000a 1B68     	 ldr r3,[r3]
  97 000c DB68     	 ldr r3,[r3,#12]
  98 000e 7868     	 ldr r0,[r7,#4]
  99 0010 9847     	 blx r3
  41:../cleanflight/src/main/drivers/display.c **** }
 100              	 .loc 1 41 0
 101 0012 0837     	 adds r7,r7,#8
 102              	.LCFI8:
 103              	 .cfi_def_cfa_offset 8
 104 0014 BD46     	 mov sp,r7
 105              	.LCFI9:
 106              	 .cfi_def_cfa_register 13
 107              	 
 108 0016 80BD     	 pop {r7,pc}
 109              	 .cfi_endproc
 110              	.LFE522:
 112              	 .section .text.displayScreenSize,"ax",%progbits
 113              	 .align 2
 114              	 .global displayScreenSize
 115              	 .thumb
 116              	 .thumb_func
 118              	displayScreenSize:
 119              	.LFB523:
  42:../cleanflight/src/main/drivers/display.c **** 
  43:../cleanflight/src/main/drivers/display.c **** int displayScreenSize(const displayPort_t *instance)
  44:../cleanflight/src/main/drivers/display.c **** {
 120              	 .loc 1 44 0
 121              	 .cfi_startproc
 122              	 
 123              	 
 124 0000 80B5     	 push {r7,lr}
 125              	.LCFI10:
 126              	 .cfi_def_cfa_offset 8
 127              	 .cfi_offset 7,-8
 128              	 .cfi_offset 14,-4
 129 0002 82B0     	 sub sp,sp,#8
 130              	.LCFI11:
 131              	 .cfi_def_cfa_offset 16
 132 0004 00AF     	 add r7,sp,#0
 133              	.LCFI12:
 134              	 .cfi_def_cfa_register 7
 135 0006 7860     	 str r0,[r7,#4]
  45:../cleanflight/src/main/drivers/display.c ****     return instance->vTable->screenSize(instance);
 136              	 .loc 1 45 0
 137 0008 7B68     	 ldr r3,[r7,#4]
 138 000a 1B68     	 ldr r3,[r3]
 139 000c 1B69     	 ldr r3,[r3,#16]
 140 000e 7868     	 ldr r0,[r7,#4]
 141 0010 9847     	 blx r3
 142 0012 0346     	 mov r3,r0
  46:../cleanflight/src/main/drivers/display.c **** }
 143              	 .loc 1 46 0
 144 0014 1846     	 mov r0,r3
 145 0016 0837     	 adds r7,r7,#8
 146              	.LCFI13:
 147              	 .cfi_def_cfa_offset 8
 148 0018 BD46     	 mov sp,r7
 149              	.LCFI14:
 150              	 .cfi_def_cfa_register 13
 151              	 
 152 001a 80BD     	 pop {r7,pc}
 153              	 .cfi_endproc
 154              	.LFE523:
 156              	 .section .text.displayGrab,"ax",%progbits
 157              	 .align 2
 158              	 .global displayGrab
 159              	 .thumb
 160              	 .thumb_func
 162              	displayGrab:
 163              	.LFB524:
  47:../cleanflight/src/main/drivers/display.c **** 
  48:../cleanflight/src/main/drivers/display.c **** void displayGrab(displayPort_t *instance)
  49:../cleanflight/src/main/drivers/display.c **** {
 164              	 .loc 1 49 0
 165              	 .cfi_startproc
 166              	 
 167              	 
 168 0000 80B5     	 push {r7,lr}
 169              	.LCFI15:
 170              	 .cfi_def_cfa_offset 8
 171              	 .cfi_offset 7,-8
 172              	 .cfi_offset 14,-4
 173 0002 82B0     	 sub sp,sp,#8
 174              	.LCFI16:
 175              	 .cfi_def_cfa_offset 16
 176 0004 00AF     	 add r7,sp,#0
 177              	.LCFI17:
 178              	 .cfi_def_cfa_register 7
 179 0006 7860     	 str r0,[r7,#4]
  50:../cleanflight/src/main/drivers/display.c ****     instance->vTable->grab(instance);
 180              	 .loc 1 50 0
 181 0008 7B68     	 ldr r3,[r7,#4]
 182 000a 1B68     	 ldr r3,[r3]
 183 000c 1B68     	 ldr r3,[r3]
 184 000e 7868     	 ldr r0,[r7,#4]
 185 0010 9847     	 blx r3
  51:../cleanflight/src/main/drivers/display.c ****     instance->vTable->clearScreen(instance);
 186              	 .loc 1 51 0
 187 0012 7B68     	 ldr r3,[r7,#4]
 188 0014 1B68     	 ldr r3,[r3]
 189 0016 9B68     	 ldr r3,[r3,#8]
 190 0018 7868     	 ldr r0,[r7,#4]
 191 001a 9847     	 blx r3
  52:../cleanflight/src/main/drivers/display.c ****     ++instance->grabCount;
 192              	 .loc 1 52 0
 193 001c 7B68     	 ldr r3,[r7,#4]
 194 001e 9B7B     	 ldrb r3,[r3,#14]
 195 0020 DBB2     	 uxtb r3,r3
 196 0022 0133     	 adds r3,r3,#1
 197 0024 DBB2     	 uxtb r3,r3
 198 0026 DAB2     	 uxtb r2,r3
 199 0028 7B68     	 ldr r3,[r7,#4]
 200 002a 9A73     	 strb r2,[r3,#14]
  53:../cleanflight/src/main/drivers/display.c **** }
 201              	 .loc 1 53 0
 202 002c 0837     	 adds r7,r7,#8
 203              	.LCFI18:
 204              	 .cfi_def_cfa_offset 8
 205 002e BD46     	 mov sp,r7
 206              	.LCFI19:
 207              	 .cfi_def_cfa_register 13
 208              	 
 209 0030 80BD     	 pop {r7,pc}
 210              	 .cfi_endproc
 211              	.LFE524:
 213 0032 00BF     	 .section .text.displayRelease,"ax",%progbits
 214              	 .align 2
 215              	 .global displayRelease
 216              	 .thumb
 217              	 .thumb_func
 219              	displayRelease:
 220              	.LFB525:
  54:../cleanflight/src/main/drivers/display.c **** 
  55:../cleanflight/src/main/drivers/display.c **** void displayRelease(displayPort_t *instance)
  56:../cleanflight/src/main/drivers/display.c **** {
 221              	 .loc 1 56 0
 222              	 .cfi_startproc
 223              	 
 224              	 
 225 0000 80B5     	 push {r7,lr}
 226              	.LCFI20:
 227              	 .cfi_def_cfa_offset 8
 228              	 .cfi_offset 7,-8
 229              	 .cfi_offset 14,-4
 230 0002 82B0     	 sub sp,sp,#8
 231              	.LCFI21:
 232              	 .cfi_def_cfa_offset 16
 233 0004 00AF     	 add r7,sp,#0
 234              	.LCFI22:
 235              	 .cfi_def_cfa_register 7
 236 0006 7860     	 str r0,[r7,#4]
  57:../cleanflight/src/main/drivers/display.c ****     instance->vTable->release(instance);
 237              	 .loc 1 57 0
 238 0008 7B68     	 ldr r3,[r7,#4]
 239 000a 1B68     	 ldr r3,[r3]
 240 000c 5B68     	 ldr r3,[r3,#4]
 241 000e 7868     	 ldr r0,[r7,#4]
 242 0010 9847     	 blx r3
  58:../cleanflight/src/main/drivers/display.c ****     --instance->grabCount;
 243              	 .loc 1 58 0
 244 0012 7B68     	 ldr r3,[r7,#4]
 245 0014 9B7B     	 ldrb r3,[r3,#14]
 246 0016 DBB2     	 uxtb r3,r3
 247 0018 013B     	 subs r3,r3,#1
 248 001a DBB2     	 uxtb r3,r3
 249 001c DAB2     	 uxtb r2,r3
 250 001e 7B68     	 ldr r3,[r7,#4]
 251 0020 9A73     	 strb r2,[r3,#14]
  59:../cleanflight/src/main/drivers/display.c **** }
 252              	 .loc 1 59 0
 253 0022 0837     	 adds r7,r7,#8
 254              	.LCFI23:
 255              	 .cfi_def_cfa_offset 8
 256 0024 BD46     	 mov sp,r7
 257              	.LCFI24:
 258              	 .cfi_def_cfa_register 13
 259              	 
 260 0026 80BD     	 pop {r7,pc}
 261              	 .cfi_endproc
 262              	.LFE525:
 264              	 .section .text.displayReleaseAll,"ax",%progbits
 265              	 .align 2
 266              	 .global displayReleaseAll
 267              	 .thumb
 268              	 .thumb_func
 270              	displayReleaseAll:
 271              	.LFB526:
  60:../cleanflight/src/main/drivers/display.c **** 
  61:../cleanflight/src/main/drivers/display.c **** void displayReleaseAll(displayPort_t *instance)
  62:../cleanflight/src/main/drivers/display.c **** {
 272              	 .loc 1 62 0
 273              	 .cfi_startproc
 274              	 
 275              	 
 276 0000 80B5     	 push {r7,lr}
 277              	.LCFI25:
 278              	 .cfi_def_cfa_offset 8
 279              	 .cfi_offset 7,-8
 280              	 .cfi_offset 14,-4
 281 0002 82B0     	 sub sp,sp,#8
 282              	.LCFI26:
 283              	 .cfi_def_cfa_offset 16
 284 0004 00AF     	 add r7,sp,#0
 285              	.LCFI27:
 286              	 .cfi_def_cfa_register 7
 287 0006 7860     	 str r0,[r7,#4]
  63:../cleanflight/src/main/drivers/display.c ****     instance->vTable->release(instance);
 288              	 .loc 1 63 0
 289 0008 7B68     	 ldr r3,[r7,#4]
 290 000a 1B68     	 ldr r3,[r3]
 291 000c 5B68     	 ldr r3,[r3,#4]
 292 000e 7868     	 ldr r0,[r7,#4]
 293 0010 9847     	 blx r3
  64:../cleanflight/src/main/drivers/display.c ****     instance->grabCount = 0;
 294              	 .loc 1 64 0
 295 0012 7B68     	 ldr r3,[r7,#4]
 296 0014 0022     	 movs r2,#0
 297 0016 9A73     	 strb r2,[r3,#14]
  65:../cleanflight/src/main/drivers/display.c **** }
 298              	 .loc 1 65 0
 299 0018 0837     	 adds r7,r7,#8
 300              	.LCFI28:
 301              	 .cfi_def_cfa_offset 8
 302 001a BD46     	 mov sp,r7
 303              	.LCFI29:
 304              	 .cfi_def_cfa_register 13
 305              	 
 306 001c 80BD     	 pop {r7,pc}
 307              	 .cfi_endproc
 308              	.LFE526:
 310 001e 00BF     	 .section .text.displayIsGrabbed,"ax",%progbits
 311              	 .align 2
 312              	 .global displayIsGrabbed
 313              	 .thumb
 314              	 .thumb_func
 316              	displayIsGrabbed:
 317              	.LFB527:
  66:../cleanflight/src/main/drivers/display.c **** 
  67:../cleanflight/src/main/drivers/display.c **** bool displayIsGrabbed(const displayPort_t *instance)
  68:../cleanflight/src/main/drivers/display.c **** {
 318              	 .loc 1 68 0
 319              	 .cfi_startproc
 320              	 
 321              	 
 322              	 
 323 0000 80B4     	 push {r7}
 324              	.LCFI30:
 325              	 .cfi_def_cfa_offset 4
 326              	 .cfi_offset 7,-4
 327 0002 83B0     	 sub sp,sp,#12
 328              	.LCFI31:
 329              	 .cfi_def_cfa_offset 16
 330 0004 00AF     	 add r7,sp,#0
 331              	.LCFI32:
 332              	 .cfi_def_cfa_register 7
 333 0006 7860     	 str r0,[r7,#4]
  69:../cleanflight/src/main/drivers/display.c ****     // can be called before initialised
  70:../cleanflight/src/main/drivers/display.c ****     return (instance && instance->grabCount > 0);
 334              	 .loc 1 70 0
 335 0008 7B68     	 ldr r3,[r7,#4]
 336 000a 002B     	 cmp r3,#0
 337 000c 06D0     	 beq .L9
 338              	 .loc 1 70 0 is_stmt 0 discriminator 1
 339 000e 7B68     	 ldr r3,[r7,#4]
 340 0010 9B7B     	 ldrb r3,[r3,#14]
 341 0012 5BB2     	 sxtb r3,r3
 342 0014 002B     	 cmp r3,#0
 343 0016 01DD     	 ble .L9
 344              	 .loc 1 70 0 discriminator 3
 345 0018 0123     	 movs r3,#1
 346 001a 00E0     	 b .L10
 347              	.L9:
 348              	 .loc 1 70 0 discriminator 4
 349 001c 0023     	 movs r3,#0
 350              	.L10:
 351              	 .loc 1 70 0 discriminator 6
 352 001e 03F00103 	 and r3,r3,#1
 353 0022 DBB2     	 uxtb r3,r3
  71:../cleanflight/src/main/drivers/display.c **** }
 354              	 .loc 1 71 0 is_stmt 1 discriminator 6
 355 0024 1846     	 mov r0,r3
 356 0026 0C37     	 adds r7,r7,#12
 357              	.LCFI33:
 358              	 .cfi_def_cfa_offset 4
 359 0028 BD46     	 mov sp,r7
 360              	.LCFI34:
 361              	 .cfi_def_cfa_register 13
 362              	 
 363 002a 5DF8047B 	 ldr r7,[sp],#4
 364              	.LCFI35:
 365              	 .cfi_restore 7
 366              	 .cfi_def_cfa_offset 0
 367 002e 7047     	 bx lr
 368              	 .cfi_endproc
 369              	.LFE527:
 371              	 .section .text.displaySetXY,"ax",%progbits
 372              	 .align 2
 373              	 .global displaySetXY
 374              	 .thumb
 375              	 .thumb_func
 377              	displaySetXY:
 378              	.LFB528:
  72:../cleanflight/src/main/drivers/display.c **** 
  73:../cleanflight/src/main/drivers/display.c **** void displaySetXY(displayPort_t *instance, uint8_t x, uint8_t y)
  74:../cleanflight/src/main/drivers/display.c **** {
 379              	 .loc 1 74 0
 380              	 .cfi_startproc
 381              	 
 382              	 
 383              	 
 384 0000 80B4     	 push {r7}
 385              	.LCFI36:
 386              	 .cfi_def_cfa_offset 4
 387              	 .cfi_offset 7,-4
 388 0002 83B0     	 sub sp,sp,#12
 389              	.LCFI37:
 390              	 .cfi_def_cfa_offset 16
 391 0004 00AF     	 add r7,sp,#0
 392              	.LCFI38:
 393              	 .cfi_def_cfa_register 7
 394 0006 7860     	 str r0,[r7,#4]
 395 0008 0B46     	 mov r3,r1
 396 000a FB70     	 strb r3,[r7,#3]
 397 000c 1346     	 mov r3,r2
 398 000e BB70     	 strb r3,[r7,#2]
  75:../cleanflight/src/main/drivers/display.c ****     instance->posX = x;
 399              	 .loc 1 75 0
 400 0010 7B68     	 ldr r3,[r7,#4]
 401 0012 FA78     	 ldrb r2,[r7,#3]
 402 0014 9A72     	 strb r2,[r3,#10]
  76:../cleanflight/src/main/drivers/display.c ****     instance->posY = y;
 403              	 .loc 1 76 0
 404 0016 7B68     	 ldr r3,[r7,#4]
 405 0018 BA78     	 ldrb r2,[r7,#2]
 406 001a DA72     	 strb r2,[r3,#11]
  77:../cleanflight/src/main/drivers/display.c **** }
 407              	 .loc 1 77 0
 408 001c 0C37     	 adds r7,r7,#12
 409              	.LCFI39:
 410              	 .cfi_def_cfa_offset 4
 411 001e BD46     	 mov sp,r7
 412              	.LCFI40:
 413              	 .cfi_def_cfa_register 13
 414              	 
 415 0020 5DF8047B 	 ldr r7,[sp],#4
 416              	.LCFI41:
 417              	 .cfi_restore 7
 418              	 .cfi_def_cfa_offset 0
 419 0024 7047     	 bx lr
 420              	 .cfi_endproc
 421              	.LFE528:
 423 0026 00BF     	 .section .text.displayWrite,"ax",%progbits
 424              	 .align 2
 425              	 .global displayWrite
 426              	 .thumb
 427              	 .thumb_func
 429              	displayWrite:
 430              	.LFB529:
  78:../cleanflight/src/main/drivers/display.c **** 
  79:../cleanflight/src/main/drivers/display.c **** int displayWrite(displayPort_t *instance, uint8_t x, uint8_t y, const char *s)
  80:../cleanflight/src/main/drivers/display.c **** {
 431              	 .loc 1 80 0
 432              	 .cfi_startproc
 433              	 
 434              	 
 435 0000 90B5     	 push {r4,r7,lr}
 436              	.LCFI42:
 437              	 .cfi_def_cfa_offset 12
 438              	 .cfi_offset 4,-12
 439              	 .cfi_offset 7,-8
 440              	 .cfi_offset 14,-4
 441 0002 85B0     	 sub sp,sp,#20
 442              	.LCFI43:
 443              	 .cfi_def_cfa_offset 32
 444 0004 00AF     	 add r7,sp,#0
 445              	.LCFI44:
 446              	 .cfi_def_cfa_register 7
 447 0006 F860     	 str r0,[r7,#12]
 448 0008 7B60     	 str r3,[r7,#4]
 449 000a 0B46     	 mov r3,r1
 450 000c FB72     	 strb r3,[r7,#11]
 451 000e 1346     	 mov r3,r2
 452 0010 BB72     	 strb r3,[r7,#10]
  81:../cleanflight/src/main/drivers/display.c ****     instance->posX = x + strlen(s);
 453              	 .loc 1 81 0
 454 0012 7868     	 ldr r0,[r7,#4]
 455 0014 FFF7FEFF 	 bl strlen
 456 0018 0346     	 mov r3,r0
 457 001a DAB2     	 uxtb r2,r3
 458 001c FB7A     	 ldrb r3,[r7,#11]
 459 001e 1344     	 add r3,r3,r2
 460 0020 DAB2     	 uxtb r2,r3
 461 0022 FB68     	 ldr r3,[r7,#12]
 462 0024 9A72     	 strb r2,[r3,#10]
  82:../cleanflight/src/main/drivers/display.c ****     instance->posY = y;
 463              	 .loc 1 82 0
 464 0026 FB68     	 ldr r3,[r7,#12]
 465 0028 BA7A     	 ldrb r2,[r7,#10]
 466 002a DA72     	 strb r2,[r3,#11]
  83:../cleanflight/src/main/drivers/display.c ****     return instance->vTable->writeString(instance, x, y, s);
 467              	 .loc 1 83 0
 468 002c FB68     	 ldr r3,[r7,#12]
 469 002e 1B68     	 ldr r3,[r3]
 470 0030 5C69     	 ldr r4,[r3,#20]
 471 0032 FA7A     	 ldrb r2,[r7,#11]
 472 0034 BB7A     	 ldrb r3,[r7,#10]
 473 0036 F868     	 ldr r0,[r7,#12]
 474 0038 1146     	 mov r1,r2
 475 003a 1A46     	 mov r2,r3
 476 003c 7B68     	 ldr r3,[r7,#4]
 477 003e A047     	 blx r4
 478 0040 0346     	 mov r3,r0
  84:../cleanflight/src/main/drivers/display.c **** }
 479              	 .loc 1 84 0
 480 0042 1846     	 mov r0,r3
 481 0044 1437     	 adds r7,r7,#20
 482              	.LCFI45:
 483              	 .cfi_def_cfa_offset 12
 484 0046 BD46     	 mov sp,r7
 485              	.LCFI46:
 486              	 .cfi_def_cfa_register 13
 487              	 
 488 0048 90BD     	 pop {r4,r7,pc}
 489              	 .cfi_endproc
 490              	.LFE529:
 492 004a 00BF     	 .section .text.displayWriteChar,"ax",%progbits
 493              	 .align 2
 494              	 .global displayWriteChar
 495              	 .thumb
 496              	 .thumb_func
 498              	displayWriteChar:
 499              	.LFB530:
  85:../cleanflight/src/main/drivers/display.c **** 
  86:../cleanflight/src/main/drivers/display.c **** int displayWriteChar(displayPort_t *instance, uint8_t x, uint8_t y, uint8_t c)
  87:../cleanflight/src/main/drivers/display.c **** {
 500              	 .loc 1 87 0
 501              	 .cfi_startproc
 502              	 
 503              	 
 504 0000 90B5     	 push {r4,r7,lr}
 505              	.LCFI47:
 506              	 .cfi_def_cfa_offset 12
 507              	 .cfi_offset 4,-12
 508              	 .cfi_offset 7,-8
 509              	 .cfi_offset 14,-4
 510 0002 83B0     	 sub sp,sp,#12
 511              	.LCFI48:
 512              	 .cfi_def_cfa_offset 24
 513 0004 00AF     	 add r7,sp,#0
 514              	.LCFI49:
 515              	 .cfi_def_cfa_register 7
 516 0006 7860     	 str r0,[r7,#4]
 517 0008 0846     	 mov r0,r1
 518 000a 1146     	 mov r1,r2
 519 000c 1A46     	 mov r2,r3
 520 000e 0346     	 mov r3,r0
 521 0010 FB70     	 strb r3,[r7,#3]
 522 0012 0B46     	 mov r3,r1
 523 0014 BB70     	 strb r3,[r7,#2]
 524 0016 1346     	 mov r3,r2
 525 0018 7B70     	 strb r3,[r7,#1]
  88:../cleanflight/src/main/drivers/display.c ****     instance->posX = x + 1;
 526              	 .loc 1 88 0
 527 001a FB78     	 ldrb r3,[r7,#3]
 528 001c 0133     	 adds r3,r3,#1
 529 001e DAB2     	 uxtb r2,r3
 530 0020 7B68     	 ldr r3,[r7,#4]
 531 0022 9A72     	 strb r2,[r3,#10]
  89:../cleanflight/src/main/drivers/display.c ****     instance->posY = y;
 532              	 .loc 1 89 0
 533 0024 7B68     	 ldr r3,[r7,#4]
 534 0026 BA78     	 ldrb r2,[r7,#2]
 535 0028 DA72     	 strb r2,[r3,#11]
  90:../cleanflight/src/main/drivers/display.c ****     return instance->vTable->writeChar(instance, x, y, c);
 536              	 .loc 1 90 0
 537 002a 7B68     	 ldr r3,[r7,#4]
 538 002c 1B68     	 ldr r3,[r3]
 539 002e 9C69     	 ldr r4,[r3,#24]
 540 0030 F978     	 ldrb r1,[r7,#3]
 541 0032 BA78     	 ldrb r2,[r7,#2]
 542 0034 7B78     	 ldrb r3,[r7,#1]
 543 0036 7868     	 ldr r0,[r7,#4]
 544 0038 A047     	 blx r4
 545 003a 0346     	 mov r3,r0
  91:../cleanflight/src/main/drivers/display.c **** }
 546              	 .loc 1 91 0
 547 003c 1846     	 mov r0,r3
 548 003e 0C37     	 adds r7,r7,#12
 549              	.LCFI50:
 550              	 .cfi_def_cfa_offset 12
 551 0040 BD46     	 mov sp,r7
 552              	.LCFI51:
 553              	 .cfi_def_cfa_register 13
 554              	 
 555 0042 90BD     	 pop {r4,r7,pc}
 556              	 .cfi_endproc
 557              	.LFE530:
 559              	 .section .text.displayIsTransferInProgress,"ax",%progbits
 560              	 .align 2
 561              	 .global displayIsTransferInProgress
 562              	 .thumb
 563              	 .thumb_func
 565              	displayIsTransferInProgress:
 566              	.LFB531:
  92:../cleanflight/src/main/drivers/display.c **** 
  93:../cleanflight/src/main/drivers/display.c **** bool displayIsTransferInProgress(const displayPort_t *instance)
  94:../cleanflight/src/main/drivers/display.c **** {
 567              	 .loc 1 94 0
 568              	 .cfi_startproc
 569              	 
 570              	 
 571 0000 80B5     	 push {r7,lr}
 572              	.LCFI52:
 573              	 .cfi_def_cfa_offset 8
 574              	 .cfi_offset 7,-8
 575              	 .cfi_offset 14,-4
 576 0002 82B0     	 sub sp,sp,#8
 577              	.LCFI53:
 578              	 .cfi_def_cfa_offset 16
 579 0004 00AF     	 add r7,sp,#0
 580              	.LCFI54:
 581              	 .cfi_def_cfa_register 7
 582 0006 7860     	 str r0,[r7,#4]
  95:../cleanflight/src/main/drivers/display.c ****     return instance->vTable->isTransferInProgress(instance);
 583              	 .loc 1 95 0
 584 0008 7B68     	 ldr r3,[r7,#4]
 585 000a 1B68     	 ldr r3,[r3]
 586 000c DB69     	 ldr r3,[r3,#28]
 587 000e 7868     	 ldr r0,[r7,#4]
 588 0010 9847     	 blx r3
 589 0012 0346     	 mov r3,r0
  96:../cleanflight/src/main/drivers/display.c **** }
 590              	 .loc 1 96 0
 591 0014 1846     	 mov r0,r3
 592 0016 0837     	 adds r7,r7,#8
 593              	.LCFI55:
 594              	 .cfi_def_cfa_offset 8
 595 0018 BD46     	 mov sp,r7
 596              	.LCFI56:
 597              	 .cfi_def_cfa_register 13
 598              	 
 599 001a 80BD     	 pop {r7,pc}
 600              	 .cfi_endproc
 601              	.LFE531:
 603              	 .section .text.displayIsSynced,"ax",%progbits
 604              	 .align 2
 605              	 .global displayIsSynced
 606              	 .thumb
 607              	 .thumb_func
 609              	displayIsSynced:
 610              	.LFB532:
  97:../cleanflight/src/main/drivers/display.c **** 
  98:../cleanflight/src/main/drivers/display.c **** bool displayIsSynced(const displayPort_t *instance)
  99:../cleanflight/src/main/drivers/display.c **** {
 611              	 .loc 1 99 0
 612              	 .cfi_startproc
 613              	 
 614              	 
 615 0000 80B5     	 push {r7,lr}
 616              	.LCFI57:
 617              	 .cfi_def_cfa_offset 8
 618              	 .cfi_offset 7,-8
 619              	 .cfi_offset 14,-4
 620 0002 82B0     	 sub sp,sp,#8
 621              	.LCFI58:
 622              	 .cfi_def_cfa_offset 16
 623 0004 00AF     	 add r7,sp,#0
 624              	.LCFI59:
 625              	 .cfi_def_cfa_register 7
 626 0006 7860     	 str r0,[r7,#4]
 100:../cleanflight/src/main/drivers/display.c ****     return instance->vTable->isSynced(instance);
 627              	 .loc 1 100 0
 628 0008 7B68     	 ldr r3,[r7,#4]
 629 000a 1B68     	 ldr r3,[r3]
 630 000c 9B6A     	 ldr r3,[r3,#40]
 631 000e 7868     	 ldr r0,[r7,#4]
 632 0010 9847     	 blx r3
 633 0012 0346     	 mov r3,r0
 101:../cleanflight/src/main/drivers/display.c **** }
 634              	 .loc 1 101 0
 635 0014 1846     	 mov r0,r3
 636 0016 0837     	 adds r7,r7,#8
 637              	.LCFI60:
 638              	 .cfi_def_cfa_offset 8
 639 0018 BD46     	 mov sp,r7
 640              	.LCFI61:
 641              	 .cfi_def_cfa_register 13
 642              	 
 643 001a 80BD     	 pop {r7,pc}
 644              	 .cfi_endproc
 645              	.LFE532:
 647              	 .section .text.displayHeartbeat,"ax",%progbits
 648              	 .align 2
 649              	 .global displayHeartbeat
 650              	 .thumb
 651              	 .thumb_func
 653              	displayHeartbeat:
 654              	.LFB533:
 102:../cleanflight/src/main/drivers/display.c **** 
 103:../cleanflight/src/main/drivers/display.c **** void displayHeartbeat(displayPort_t *instance)
 104:../cleanflight/src/main/drivers/display.c **** {
 655              	 .loc 1 104 0
 656              	 .cfi_startproc
 657              	 
 658              	 
 659 0000 80B5     	 push {r7,lr}
 660              	.LCFI62:
 661              	 .cfi_def_cfa_offset 8
 662              	 .cfi_offset 7,-8
 663              	 .cfi_offset 14,-4
 664 0002 82B0     	 sub sp,sp,#8
 665              	.LCFI63:
 666              	 .cfi_def_cfa_offset 16
 667 0004 00AF     	 add r7,sp,#0
 668              	.LCFI64:
 669              	 .cfi_def_cfa_register 7
 670 0006 7860     	 str r0,[r7,#4]
 105:../cleanflight/src/main/drivers/display.c ****     instance->vTable->heartbeat(instance);
 671              	 .loc 1 105 0
 672 0008 7B68     	 ldr r3,[r7,#4]
 673 000a 1B68     	 ldr r3,[r3]
 674 000c 1B6A     	 ldr r3,[r3,#32]
 675 000e 7868     	 ldr r0,[r7,#4]
 676 0010 9847     	 blx r3
 106:../cleanflight/src/main/drivers/display.c **** }
 677              	 .loc 1 106 0
 678 0012 0837     	 adds r7,r7,#8
 679              	.LCFI65:
 680              	 .cfi_def_cfa_offset 8
 681 0014 BD46     	 mov sp,r7
 682              	.LCFI66:
 683              	 .cfi_def_cfa_register 13
 684              	 
 685 0016 80BD     	 pop {r7,pc}
 686              	 .cfi_endproc
 687              	.LFE533:
 689              	 .section .text.displayResync,"ax",%progbits
 690              	 .align 2
 691              	 .global displayResync
 692              	 .thumb
 693              	 .thumb_func
 695              	displayResync:
 696              	.LFB534:
 107:../cleanflight/src/main/drivers/display.c **** 
 108:../cleanflight/src/main/drivers/display.c **** void displayResync(displayPort_t *instance)
 109:../cleanflight/src/main/drivers/display.c **** {
 697              	 .loc 1 109 0
 698              	 .cfi_startproc
 699              	 
 700              	 
 701 0000 80B5     	 push {r7,lr}
 702              	.LCFI67:
 703              	 .cfi_def_cfa_offset 8
 704              	 .cfi_offset 7,-8
 705              	 .cfi_offset 14,-4
 706 0002 82B0     	 sub sp,sp,#8
 707              	.LCFI68:
 708              	 .cfi_def_cfa_offset 16
 709 0004 00AF     	 add r7,sp,#0
 710              	.LCFI69:
 711              	 .cfi_def_cfa_register 7
 712 0006 7860     	 str r0,[r7,#4]
 110:../cleanflight/src/main/drivers/display.c ****     instance->vTable->resync(instance);
 713              	 .loc 1 110 0
 714 0008 7B68     	 ldr r3,[r7,#4]
 715 000a 1B68     	 ldr r3,[r3]
 716 000c 5B6A     	 ldr r3,[r3,#36]
 717 000e 7868     	 ldr r0,[r7,#4]
 718 0010 9847     	 blx r3
 111:../cleanflight/src/main/drivers/display.c **** }
 719              	 .loc 1 111 0
 720 0012 0837     	 adds r7,r7,#8
 721              	.LCFI70:
 722              	 .cfi_def_cfa_offset 8
 723 0014 BD46     	 mov sp,r7
 724              	.LCFI71:
 725              	 .cfi_def_cfa_register 13
 726              	 
 727 0016 80BD     	 pop {r7,pc}
 728              	 .cfi_endproc
 729              	.LFE534:
 731              	 .section .text.displayTxBytesFree,"ax",%progbits
 732              	 .align 2
 733              	 .global displayTxBytesFree
 734              	 .thumb
 735              	 .thumb_func
 737              	displayTxBytesFree:
 738              	.LFB535:
 112:../cleanflight/src/main/drivers/display.c **** 
 113:../cleanflight/src/main/drivers/display.c **** uint16_t displayTxBytesFree(const displayPort_t *instance)
 114:../cleanflight/src/main/drivers/display.c **** {
 739              	 .loc 1 114 0
 740              	 .cfi_startproc
 741              	 
 742              	 
 743 0000 80B5     	 push {r7,lr}
 744              	.LCFI72:
 745              	 .cfi_def_cfa_offset 8
 746              	 .cfi_offset 7,-8
 747              	 .cfi_offset 14,-4
 748 0002 82B0     	 sub sp,sp,#8
 749              	.LCFI73:
 750              	 .cfi_def_cfa_offset 16
 751 0004 00AF     	 add r7,sp,#0
 752              	.LCFI74:
 753              	 .cfi_def_cfa_register 7
 754 0006 7860     	 str r0,[r7,#4]
 115:../cleanflight/src/main/drivers/display.c ****     return instance->vTable->txBytesFree(instance);
 755              	 .loc 1 115 0
 756 0008 7B68     	 ldr r3,[r7,#4]
 757 000a 1B68     	 ldr r3,[r3]
 758 000c DB6A     	 ldr r3,[r3,#44]
 759 000e 7868     	 ldr r0,[r7,#4]
 760 0010 9847     	 blx r3
 761 0012 0346     	 mov r3,r0
 762 0014 9BB2     	 uxth r3,r3
 116:../cleanflight/src/main/drivers/display.c **** }
 763              	 .loc 1 116 0
 764 0016 1846     	 mov r0,r3
 765 0018 0837     	 adds r7,r7,#8
 766              	.LCFI75:
 767              	 .cfi_def_cfa_offset 8
 768 001a BD46     	 mov sp,r7
 769              	.LCFI76:
 770              	 .cfi_def_cfa_register 13
 771              	 
 772 001c 80BD     	 pop {r7,pc}
 773              	 .cfi_endproc
 774              	.LFE535:
 776 001e 00BF     	 .section .text.displayInit,"ax",%progbits
 777              	 .align 2
 778              	 .global displayInit
 779              	 .thumb
 780              	 .thumb_func
 782              	displayInit:
 783              	.LFB536:
 117:../cleanflight/src/main/drivers/display.c **** 
 118:../cleanflight/src/main/drivers/display.c **** void displayInit(displayPort_t *instance, const displayPortVTable_t *vTable)
 119:../cleanflight/src/main/drivers/display.c **** {
 784              	 .loc 1 119 0
 785              	 .cfi_startproc
 786              	 
 787              	 
 788 0000 80B5     	 push {r7,lr}
 789              	.LCFI77:
 790              	 .cfi_def_cfa_offset 8
 791              	 .cfi_offset 7,-8
 792              	 .cfi_offset 14,-4
 793 0002 82B0     	 sub sp,sp,#8
 794              	.LCFI78:
 795              	 .cfi_def_cfa_offset 16
 796 0004 00AF     	 add r7,sp,#0
 797              	.LCFI79:
 798              	 .cfi_def_cfa_register 7
 799 0006 7860     	 str r0,[r7,#4]
 800 0008 3960     	 str r1,[r7]
 120:../cleanflight/src/main/drivers/display.c ****     instance->vTable = vTable;
 801              	 .loc 1 120 0
 802 000a 7B68     	 ldr r3,[r7,#4]
 803 000c 3A68     	 ldr r2,[r7]
 804 000e 1A60     	 str r2,[r3]
 121:../cleanflight/src/main/drivers/display.c ****     instance->vTable->clearScreen(instance);
 805              	 .loc 1 121 0
 806 0010 7B68     	 ldr r3,[r7,#4]
 807 0012 1B68     	 ldr r3,[r3]
 808 0014 9B68     	 ldr r3,[r3,#8]
 809 0016 7868     	 ldr r0,[r7,#4]
 810 0018 9847     	 blx r3
 122:../cleanflight/src/main/drivers/display.c ****     instance->cleared = true;
 811              	 .loc 1 122 0
 812 001a 7B68     	 ldr r3,[r7,#4]
 813 001c 0122     	 movs r2,#1
 814 001e 1A73     	 strb r2,[r3,#12]
 123:../cleanflight/src/main/drivers/display.c ****     instance->grabCount = 0;
 815              	 .loc 1 123 0
 816 0020 7B68     	 ldr r3,[r7,#4]
 817 0022 0022     	 movs r2,#0
 818 0024 9A73     	 strb r2,[r3,#14]
 124:../cleanflight/src/main/drivers/display.c ****     instance->cursorRow = -1;
 819              	 .loc 1 124 0
 820 0026 7B68     	 ldr r3,[r7,#4]
 821 0028 FF22     	 movs r2,#255
 822 002a 5A73     	 strb r2,[r3,#13]
 125:../cleanflight/src/main/drivers/display.c **** }
 823              	 .loc 1 125 0
 824 002c 0837     	 adds r7,r7,#8
 825              	.LCFI80:
 826              	 .cfi_def_cfa_offset 8
 827 002e BD46     	 mov sp,r7
 828              	.LCFI81:
 829              	 .cfi_def_cfa_register 13
 830              	 
 831 0030 80BD     	 pop {r7,pc}
 832              	 .cfi_endproc
 833              	.LFE536:
 835 0032 00BF     	 .text
 836              	.Letext0:
 837              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 838              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 839              	 .file 4 "../cleanflight/src/main/drivers/display.h"
 840              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 841              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 display.c
    {standard input}:20     .text.displayClearScreen:00000000 $t
    {standard input}:25     .text.displayClearScreen:00000000 displayClearScreen
    {standard input}:71     .text.displayDrawScreen:00000000 $t
    {standard input}:76     .text.displayDrawScreen:00000000 displayDrawScreen
    {standard input}:113    .text.displayScreenSize:00000000 $t
    {standard input}:118    .text.displayScreenSize:00000000 displayScreenSize
    {standard input}:157    .text.displayGrab:00000000 $t
    {standard input}:162    .text.displayGrab:00000000 displayGrab
    {standard input}:214    .text.displayRelease:00000000 $t
    {standard input}:219    .text.displayRelease:00000000 displayRelease
    {standard input}:265    .text.displayReleaseAll:00000000 $t
    {standard input}:270    .text.displayReleaseAll:00000000 displayReleaseAll
    {standard input}:311    .text.displayIsGrabbed:00000000 $t
    {standard input}:316    .text.displayIsGrabbed:00000000 displayIsGrabbed
    {standard input}:372    .text.displaySetXY:00000000 $t
    {standard input}:377    .text.displaySetXY:00000000 displaySetXY
    {standard input}:424    .text.displayWrite:00000000 $t
    {standard input}:429    .text.displayWrite:00000000 displayWrite
    {standard input}:493    .text.displayWriteChar:00000000 $t
    {standard input}:498    .text.displayWriteChar:00000000 displayWriteChar
    {standard input}:560    .text.displayIsTransferInProgress:00000000 $t
    {standard input}:565    .text.displayIsTransferInProgress:00000000 displayIsTransferInProgress
    {standard input}:604    .text.displayIsSynced:00000000 $t
    {standard input}:609    .text.displayIsSynced:00000000 displayIsSynced
    {standard input}:648    .text.displayHeartbeat:00000000 $t
    {standard input}:653    .text.displayHeartbeat:00000000 displayHeartbeat
    {standard input}:690    .text.displayResync:00000000 $t
    {standard input}:695    .text.displayResync:00000000 displayResync
    {standard input}:732    .text.displayTxBytesFree:00000000 $t
    {standard input}:737    .text.displayTxBytesFree:00000000 displayTxBytesFree
    {standard input}:777    .text.displayInit:00000000 $t
    {standard input}:782    .text.displayInit:00000000 displayInit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
strlen
