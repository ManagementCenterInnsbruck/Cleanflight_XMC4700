   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "sdcard.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.sdcard,"aw",%nobits
  20              	 .align 2
  23              	sdcard:
  24 0000 00000000 	 .space 90
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25 005a 0000     	 .section .text.sdcardInsertionDetectDeinit,"ax",%progbits
  26              	 .align 2
  27              	 .global sdcardInsertionDetectDeinit
  28              	 .thumb
  29              	 .thumb_func
  31              	sdcardInsertionDetectDeinit:
  32              	.LFB529:
  33              	 .file 1 "../cleanflight/src/main/drivers/sdcard.c"
   1:../cleanflight/src/main/drivers/sdcard.c **** /*
   2:../cleanflight/src/main/drivers/sdcard.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/sdcard.c ****  *
   4:../cleanflight/src/main/drivers/sdcard.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/sdcard.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/sdcard.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/sdcard.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/sdcard.c ****  * any later version.
   9:../cleanflight/src/main/drivers/sdcard.c ****  *
  10:../cleanflight/src/main/drivers/sdcard.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/sdcard.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/sdcard.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/sdcard.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/sdcard.c ****  *
  15:../cleanflight/src/main/drivers/sdcard.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/sdcard.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/sdcard.c ****  *
  18:../cleanflight/src/main/drivers/sdcard.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/sdcard.c ****  */
  20:../cleanflight/src/main/drivers/sdcard.c **** 
  21:../cleanflight/src/main/drivers/sdcard.c **** #include <stdbool.h>
  22:../cleanflight/src/main/drivers/sdcard.c **** #include <stdint.h>
  23:../cleanflight/src/main/drivers/sdcard.c **** 
  24:../cleanflight/src/main/drivers/sdcard.c **** #include "platform.h"
  25:../cleanflight/src/main/drivers/sdcard.c **** 
  26:../cleanflight/src/main/drivers/sdcard.c **** #ifdef USE_SDCARD
  27:../cleanflight/src/main/drivers/sdcard.c **** 
  28:../cleanflight/src/main/drivers/sdcard.c **** #include "drivers/nvic.h"
  29:../cleanflight/src/main/drivers/sdcard.c **** #include "drivers/io.h"
  30:../cleanflight/src/main/drivers/sdcard.c **** #include "dma.h"
  31:../cleanflight/src/main/drivers/sdcard.c **** 
  32:../cleanflight/src/main/drivers/sdcard.c **** #include "drivers/bus_spi.h"
  33:../cleanflight/src/main/drivers/sdcard.c **** #include "drivers/time.h"
  34:../cleanflight/src/main/drivers/sdcard.c **** 
  35:../cleanflight/src/main/drivers/sdcard.c **** #include "sdcard.h"
  36:../cleanflight/src/main/drivers/sdcard.c **** #include "sdcard_standard.h"
  37:../cleanflight/src/main/drivers/sdcard.c **** 
  38:../cleanflight/src/main/drivers/sdcard.c **** #ifdef AFATFS_USE_INTROSPECTIVE_LOGGING
  39:../cleanflight/src/main/drivers/sdcard.c ****     #define SDCARD_PROFILING
  40:../cleanflight/src/main/drivers/sdcard.c **** #endif
  41:../cleanflight/src/main/drivers/sdcard.c **** 
  42:../cleanflight/src/main/drivers/sdcard.c **** #define SET_CS_HIGH                                 IOHi(sdcard.chipSelectPin)
  43:../cleanflight/src/main/drivers/sdcard.c **** #define SET_CS_LOW                                  IOLo(sdcard.chipSelectPin)
  44:../cleanflight/src/main/drivers/sdcard.c **** 
  45:../cleanflight/src/main/drivers/sdcard.c **** #define SDCARD_INIT_NUM_DUMMY_BYTES                 10
  46:../cleanflight/src/main/drivers/sdcard.c **** #define SDCARD_MAXIMUM_BYTE_DELAY_FOR_CMD_REPLY     8
  47:../cleanflight/src/main/drivers/sdcard.c **** // Chosen so that CMD8 will have the same CRC as CMD0:
  48:../cleanflight/src/main/drivers/sdcard.c **** #define SDCARD_IF_COND_CHECK_PATTERN                0xAB
  49:../cleanflight/src/main/drivers/sdcard.c **** 
  50:../cleanflight/src/main/drivers/sdcard.c **** #define SDCARD_TIMEOUT_INIT_MILLIS                  200
  51:../cleanflight/src/main/drivers/sdcard.c **** #define SDCARD_MAX_CONSECUTIVE_FAILURES             8
  52:../cleanflight/src/main/drivers/sdcard.c **** 
  53:../cleanflight/src/main/drivers/sdcard.c **** /* Break up 512-byte SD card sectors into chunks of this size when writing without DMA to reduce th
  54:../cleanflight/src/main/drivers/sdcard.c ****  * per call to sdcard_poll().
  55:../cleanflight/src/main/drivers/sdcard.c ****  */
  56:../cleanflight/src/main/drivers/sdcard.c **** #define SDCARD_NON_DMA_CHUNK_SIZE                   256
  57:../cleanflight/src/main/drivers/sdcard.c **** 
  58:../cleanflight/src/main/drivers/sdcard.c **** typedef enum {
  59:../cleanflight/src/main/drivers/sdcard.c ****     // In these states we run at the initialization 400kHz clockspeed:
  60:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_NOT_PRESENT = 0,
  61:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_RESET,
  62:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_CARD_INIT_IN_PROGRESS,
  63:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_INITIALIZATION_RECEIVE_CID,
  64:../cleanflight/src/main/drivers/sdcard.c **** 
  65:../cleanflight/src/main/drivers/sdcard.c ****     // In these states we run at full clock speed
  66:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_READY,
  67:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_READING,
  68:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_SENDING_WRITE,
  69:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_WAITING_FOR_WRITE,
  70:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_WRITING_MULTIPLE_BLOCKS,
  71:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_STATE_STOPPING_MULTIPLE_BLOCK_WRITE
  72:../cleanflight/src/main/drivers/sdcard.c **** } sdcardState_e;
  73:../cleanflight/src/main/drivers/sdcard.c **** 
  74:../cleanflight/src/main/drivers/sdcard.c **** typedef struct sdcard_t {
  75:../cleanflight/src/main/drivers/sdcard.c ****     struct {
  76:../cleanflight/src/main/drivers/sdcard.c ****         uint8_t *buffer;
  77:../cleanflight/src/main/drivers/sdcard.c ****         uint32_t blockIndex;
  78:../cleanflight/src/main/drivers/sdcard.c ****         uint8_t chunkIndex;
  79:../cleanflight/src/main/drivers/sdcard.c **** 
  80:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_operationCompleteCallback_c callback;
  81:../cleanflight/src/main/drivers/sdcard.c ****         uint32_t callbackData;
  82:../cleanflight/src/main/drivers/sdcard.c **** 
  83:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
  84:../cleanflight/src/main/drivers/sdcard.c ****         uint32_t profileStartTime;
  85:../cleanflight/src/main/drivers/sdcard.c **** #endif
  86:../cleanflight/src/main/drivers/sdcard.c ****     } pendingOperation;
  87:../cleanflight/src/main/drivers/sdcard.c **** 
  88:../cleanflight/src/main/drivers/sdcard.c ****     uint32_t operationStartTime;
  89:../cleanflight/src/main/drivers/sdcard.c **** 
  90:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t failureCount;
  91:../cleanflight/src/main/drivers/sdcard.c **** 
  92:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t version;
  93:../cleanflight/src/main/drivers/sdcard.c ****     bool highCapacity;
  94:../cleanflight/src/main/drivers/sdcard.c **** 
  95:../cleanflight/src/main/drivers/sdcard.c ****     uint32_t multiWriteNextBlock;
  96:../cleanflight/src/main/drivers/sdcard.c ****     uint32_t multiWriteBlocksRemain;
  97:../cleanflight/src/main/drivers/sdcard.c **** 
  98:../cleanflight/src/main/drivers/sdcard.c ****     sdcardState_e state;
  99:../cleanflight/src/main/drivers/sdcard.c **** 
 100:../cleanflight/src/main/drivers/sdcard.c ****     sdcardMetadata_t metadata;
 101:../cleanflight/src/main/drivers/sdcard.c ****     sdcardCSD_t csd;
 102:../cleanflight/src/main/drivers/sdcard.c **** 
 103:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
 104:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_profilerCallback_c profiler;
 105:../cleanflight/src/main/drivers/sdcard.c **** #endif
 106:../cleanflight/src/main/drivers/sdcard.c ****     SPI_TypeDef *instance;
 107:../cleanflight/src/main/drivers/sdcard.c ****     bool enabled;
 108:../cleanflight/src/main/drivers/sdcard.c ****     bool detectionInverted;
 109:../cleanflight/src/main/drivers/sdcard.c ****     bool useDMAForTx;
 110:../cleanflight/src/main/drivers/sdcard.c ****     IO_t cardDetectPin;
 111:../cleanflight/src/main/drivers/sdcard.c ****     IO_t chipSelectPin;
 112:../cleanflight/src/main/drivers/sdcard.c ****     dmaChannelDescriptor_t * dma;
 113:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t dmaChannel;
 114:../cleanflight/src/main/drivers/sdcard.c **** } sdcard_t;
 115:../cleanflight/src/main/drivers/sdcard.c **** 
 116:../cleanflight/src/main/drivers/sdcard.c **** static sdcard_t sdcard;
 117:../cleanflight/src/main/drivers/sdcard.c **** 
 118:../cleanflight/src/main/drivers/sdcard.c **** STATIC_ASSERT(sizeof(sdcardCSD_t) == 16, sdcard_csd_bitfields_didnt_pack_properly);
 119:../cleanflight/src/main/drivers/sdcard.c **** 
 120:../cleanflight/src/main/drivers/sdcard.c **** void sdcardInsertionDetectDeinit(void)
 121:../cleanflight/src/main/drivers/sdcard.c **** {
  34              	 .loc 1 121 0
  35              	 .cfi_startproc
  36              	 
  37              	 
  38 0000 80B5     	 push {r7,lr}
  39              	.LCFI0:
  40              	 .cfi_def_cfa_offset 8
  41              	 .cfi_offset 7,-8
  42              	 .cfi_offset 14,-4
  43 0002 00AF     	 add r7,sp,#0
  44              	.LCFI1:
  45              	 .cfi_def_cfa_register 7
 122:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.cardDetectPin) {
  46              	 .loc 1 122 0
  47 0004 0A4B     	 ldr r3,.L3
  48 0006 D3F84D30 	 ldr r3,[r3,#77]
  49 000a 002B     	 cmp r3,#0
  50 000c 0ED0     	 beq .L1
 123:../cleanflight/src/main/drivers/sdcard.c ****         IOInit(sdcard.cardDetectPin, OWNER_FREE, 0);
  51              	 .loc 1 123 0
  52 000e 084B     	 ldr r3,.L3
  53 0010 D3F84D30 	 ldr r3,[r3,#77]
  54 0014 1846     	 mov r0,r3
  55 0016 0021     	 movs r1,#0
  56 0018 0022     	 movs r2,#0
  57 001a FFF7FEFF 	 bl IOInit
 124:../cleanflight/src/main/drivers/sdcard.c ****         IOConfigGPIO(sdcard.cardDetectPin, IOCFG_IN_FLOATING);
  58              	 .loc 1 124 0
  59 001e 044B     	 ldr r3,.L3
  60 0020 D3F84D30 	 ldr r3,[r3,#77]
  61 0024 1846     	 mov r0,r3
  62 0026 0021     	 movs r1,#0
  63 0028 FFF7FEFF 	 bl IOConfigGPIO
  64              	.L1:
 125:../cleanflight/src/main/drivers/sdcard.c ****     }
 126:../cleanflight/src/main/drivers/sdcard.c **** }
  65              	 .loc 1 126 0
  66 002c 80BD     	 pop {r7,pc}
  67              	.L4:
  68 002e 00BF     	 .align 2
  69              	.L3:
  70 0030 00000000 	 .word sdcard
  71              	 .cfi_endproc
  72              	.LFE529:
  74              	 .section .text.sdcardInsertionDetectInit,"ax",%progbits
  75              	 .align 2
  76              	 .global sdcardInsertionDetectInit
  77              	 .thumb
  78              	 .thumb_func
  80              	sdcardInsertionDetectInit:
  81              	.LFB530:
 127:../cleanflight/src/main/drivers/sdcard.c **** 
 128:../cleanflight/src/main/drivers/sdcard.c **** void sdcardInsertionDetectInit(void)
 129:../cleanflight/src/main/drivers/sdcard.c **** {
  82              	 .loc 1 129 0
  83              	 .cfi_startproc
  84              	 
  85              	 
  86 0000 80B5     	 push {r7,lr}
  87              	.LCFI2:
  88              	 .cfi_def_cfa_offset 8
  89              	 .cfi_offset 7,-8
  90              	 .cfi_offset 14,-4
  91 0002 00AF     	 add r7,sp,#0
  92              	.LCFI3:
  93              	 .cfi_def_cfa_register 7
 130:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.cardDetectPin) {
  94              	 .loc 1 130 0
  95 0004 0A4B     	 ldr r3,.L7
  96 0006 D3F84D30 	 ldr r3,[r3,#77]
  97 000a 002B     	 cmp r3,#0
  98 000c 0ED0     	 beq .L5
 131:../cleanflight/src/main/drivers/sdcard.c ****         IOInit(sdcard.cardDetectPin, OWNER_SDCARD_DETECT, 0);
  99              	 .loc 1 131 0
 100 000e 084B     	 ldr r3,.L7
 101 0010 D3F84D30 	 ldr r3,[r3,#77]
 102 0014 1846     	 mov r0,r3
 103 0016 1921     	 movs r1,#25
 104 0018 0022     	 movs r2,#0
 105 001a FFF7FEFF 	 bl IOInit
 132:../cleanflight/src/main/drivers/sdcard.c ****         IOConfigGPIO(sdcard.cardDetectPin, IOCFG_IPU);
 106              	 .loc 1 132 0
 107 001e 044B     	 ldr r3,.L7
 108 0020 D3F84D30 	 ldr r3,[r3,#77]
 109 0024 1846     	 mov r0,r3
 110 0026 1021     	 movs r1,#16
 111 0028 FFF7FEFF 	 bl IOConfigGPIO
 112              	.L5:
 133:../cleanflight/src/main/drivers/sdcard.c ****     }
 134:../cleanflight/src/main/drivers/sdcard.c **** }
 113              	 .loc 1 134 0
 114 002c 80BD     	 pop {r7,pc}
 115              	.L8:
 116 002e 00BF     	 .align 2
 117              	.L7:
 118 0030 00000000 	 .word sdcard
 119              	 .cfi_endproc
 120              	.LFE530:
 122              	 .section .text.sdcard_isInserted,"ax",%progbits
 123              	 .align 2
 124              	 .global sdcard_isInserted
 125              	 .thumb
 126              	 .thumb_func
 128              	sdcard_isInserted:
 129              	.LFB531:
 135:../cleanflight/src/main/drivers/sdcard.c **** 
 136:../cleanflight/src/main/drivers/sdcard.c **** /**
 137:../cleanflight/src/main/drivers/sdcard.c ****  * Detect if a SD card is physically present in the memory slot.
 138:../cleanflight/src/main/drivers/sdcard.c ****  */
 139:../cleanflight/src/main/drivers/sdcard.c **** bool sdcard_isInserted(void)
 140:../cleanflight/src/main/drivers/sdcard.c **** {
 130              	 .loc 1 140 0
 131              	 .cfi_startproc
 132              	 
 133              	 
 134 0000 80B5     	 push {r7,lr}
 135              	.LCFI4:
 136              	 .cfi_def_cfa_offset 8
 137              	 .cfi_offset 7,-8
 138              	 .cfi_offset 14,-4
 139 0002 82B0     	 sub sp,sp,#8
 140              	.LCFI5:
 141              	 .cfi_def_cfa_offset 16
 142 0004 00AF     	 add r7,sp,#0
 143              	.LCFI6:
 144              	 .cfi_def_cfa_register 7
 141:../cleanflight/src/main/drivers/sdcard.c ****     bool result = true;
 145              	 .loc 1 141 0
 146 0006 0123     	 movs r3,#1
 147 0008 FB71     	 strb r3,[r7,#7]
 142:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.cardDetectPin) {
 148              	 .loc 1 142 0
 149 000a 144B     	 ldr r3,.L12
 150 000c D3F84D30 	 ldr r3,[r3,#77]
 151 0010 002B     	 cmp r3,#0
 152 0012 1ED0     	 beq .L10
 143:../cleanflight/src/main/drivers/sdcard.c ****         result = IORead(sdcard.cardDetectPin) != 0;
 153              	 .loc 1 143 0
 154 0014 114B     	 ldr r3,.L12
 155 0016 D3F84D30 	 ldr r3,[r3,#77]
 156 001a 1846     	 mov r0,r3
 157 001c FFF7FEFF 	 bl IORead
 158 0020 0346     	 mov r3,r0
 159 0022 002B     	 cmp r3,#0
 160 0024 14BF     	 ite ne
 161 0026 0123     	 movne r3,#1
 162 0028 0023     	 moveq r3,#0
 163 002a FB71     	 strb r3,[r7,#7]
 144:../cleanflight/src/main/drivers/sdcard.c ****         if (sdcard.detectionInverted) {
 164              	 .loc 1 144 0
 165 002c 0B4B     	 ldr r3,.L12
 166 002e 93F84B30 	 ldrb r3,[r3,#75]
 167 0032 002B     	 cmp r3,#0
 168 0034 0DD0     	 beq .L10
 145:../cleanflight/src/main/drivers/sdcard.c ****             result = !result;
 169              	 .loc 1 145 0
 170 0036 FB79     	 ldrb r3,[r7,#7]
 171 0038 002B     	 cmp r3,#0
 172 003a 14BF     	 ite ne
 173 003c 0123     	 movne r3,#1
 174 003e 0023     	 moveq r3,#0
 175 0040 DBB2     	 uxtb r3,r3
 176 0042 83F00103 	 eor r3,r3,#1
 177 0046 DBB2     	 uxtb r3,r3
 178 0048 FB71     	 strb r3,[r7,#7]
 179 004a FB79     	 ldrb r3,[r7,#7]
 180 004c 03F00103 	 and r3,r3,#1
 181 0050 FB71     	 strb r3,[r7,#7]
 182              	.L10:
 146:../cleanflight/src/main/drivers/sdcard.c ****         }
 147:../cleanflight/src/main/drivers/sdcard.c ****     }
 148:../cleanflight/src/main/drivers/sdcard.c ****     return result;
 183              	 .loc 1 148 0
 184 0052 FB79     	 ldrb r3,[r7,#7]
 149:../cleanflight/src/main/drivers/sdcard.c **** }
 185              	 .loc 1 149 0
 186 0054 1846     	 mov r0,r3
 187 0056 0837     	 adds r7,r7,#8
 188              	.LCFI7:
 189              	 .cfi_def_cfa_offset 8
 190 0058 BD46     	 mov sp,r7
 191              	.LCFI8:
 192              	 .cfi_def_cfa_register 13
 193              	 
 194 005a 80BD     	 pop {r7,pc}
 195              	.L13:
 196              	 .align 2
 197              	.L12:
 198 005c 00000000 	 .word sdcard
 199              	 .cfi_endproc
 200              	.LFE531:
 202              	 .section .text.sdcard_isFunctional,"ax",%progbits
 203              	 .align 2
 204              	 .global sdcard_isFunctional
 205              	 .thumb
 206              	 .thumb_func
 208              	sdcard_isFunctional:
 209              	.LFB532:
 150:../cleanflight/src/main/drivers/sdcard.c **** 
 151:../cleanflight/src/main/drivers/sdcard.c **** /**
 152:../cleanflight/src/main/drivers/sdcard.c ****  * Returns true if the card has already been, or is currently, initializing and hasn't encountered 
 153:../cleanflight/src/main/drivers/sdcard.c ****  * trip our error threshold and be disabled (i.e. our card is in and working!)
 154:../cleanflight/src/main/drivers/sdcard.c ****  */
 155:../cleanflight/src/main/drivers/sdcard.c **** bool sdcard_isFunctional(void)
 156:../cleanflight/src/main/drivers/sdcard.c **** {
 210              	 .loc 1 156 0
 211              	 .cfi_startproc
 212              	 
 213              	 
 214              	 
 215 0000 80B4     	 push {r7}
 216              	.LCFI9:
 217              	 .cfi_def_cfa_offset 4
 218              	 .cfi_offset 7,-4
 219 0002 00AF     	 add r7,sp,#0
 220              	.LCFI10:
 221              	 .cfi_def_cfa_register 7
 157:../cleanflight/src/main/drivers/sdcard.c ****     return sdcard.state != SDCARD_STATE_NOT_PRESENT;
 222              	 .loc 1 157 0
 223 0004 064B     	 ldr r3,.L16
 224 0006 93F82030 	 ldrb r3,[r3,#32]
 225 000a 002B     	 cmp r3,#0
 226 000c 14BF     	 ite ne
 227 000e 0123     	 movne r3,#1
 228 0010 0023     	 moveq r3,#0
 229 0012 DBB2     	 uxtb r3,r3
 158:../cleanflight/src/main/drivers/sdcard.c **** }
 230              	 .loc 1 158 0
 231 0014 1846     	 mov r0,r3
 232 0016 BD46     	 mov sp,r7
 233              	.LCFI11:
 234              	 .cfi_def_cfa_register 13
 235              	 
 236 0018 5DF8047B 	 ldr r7,[sp],#4
 237              	.LCFI12:
 238              	 .cfi_restore 7
 239              	 .cfi_def_cfa_offset 0
 240 001c 7047     	 bx lr
 241              	.L17:
 242 001e 00BF     	 .align 2
 243              	.L16:
 244 0020 00000000 	 .word sdcard
 245              	 .cfi_endproc
 246              	.LFE532:
 248              	 .section .text.sdcard_select,"ax",%progbits
 249              	 .align 2
 250              	 .thumb
 251              	 .thumb_func
 253              	sdcard_select:
 254              	.LFB533:
 159:../cleanflight/src/main/drivers/sdcard.c **** 
 160:../cleanflight/src/main/drivers/sdcard.c **** static void sdcard_select(void)
 161:../cleanflight/src/main/drivers/sdcard.c **** {
 255              	 .loc 1 161 0
 256              	 .cfi_startproc
 257              	 
 258              	 
 259 0000 80B5     	 push {r7,lr}
 260              	.LCFI13:
 261              	 .cfi_def_cfa_offset 8
 262              	 .cfi_offset 7,-8
 263              	 .cfi_offset 14,-4
 264 0002 00AF     	 add r7,sp,#0
 265              	.LCFI14:
 266              	 .cfi_def_cfa_register 7
 162:../cleanflight/src/main/drivers/sdcard.c ****     SET_CS_LOW;
 267              	 .loc 1 162 0
 268 0004 034B     	 ldr r3,.L19
 269 0006 D3F85130 	 ldr r3,[r3,#81]
 270 000a 1846     	 mov r0,r3
 271 000c FFF7FEFF 	 bl IOLo
 163:../cleanflight/src/main/drivers/sdcard.c **** }
 272              	 .loc 1 163 0
 273 0010 80BD     	 pop {r7,pc}
 274              	.L20:
 275 0012 00BF     	 .align 2
 276              	.L19:
 277 0014 00000000 	 .word sdcard
 278              	 .cfi_endproc
 279              	.LFE533:
 281              	 .section .text.sdcard_deselect,"ax",%progbits
 282              	 .align 2
 283              	 .thumb
 284              	 .thumb_func
 286              	sdcard_deselect:
 287              	.LFB534:
 164:../cleanflight/src/main/drivers/sdcard.c **** 
 165:../cleanflight/src/main/drivers/sdcard.c **** static void sdcard_deselect(void)
 166:../cleanflight/src/main/drivers/sdcard.c **** {
 288              	 .loc 1 166 0
 289              	 .cfi_startproc
 290              	 
 291              	 
 292 0000 80B5     	 push {r7,lr}
 293              	.LCFI15:
 294              	 .cfi_def_cfa_offset 8
 295              	 .cfi_offset 7,-8
 296              	 .cfi_offset 14,-4
 297 0002 00AF     	 add r7,sp,#0
 298              	.LCFI16:
 299              	 .cfi_def_cfa_register 7
 167:../cleanflight/src/main/drivers/sdcard.c ****     // As per the SD-card spec, give the card 8 dummy clocks so it can finish its operation
 168:../cleanflight/src/main/drivers/sdcard.c ****     //spiTransferByte(sdcard.instance, 0xFF);
 169:../cleanflight/src/main/drivers/sdcard.c **** 
 170:../cleanflight/src/main/drivers/sdcard.c ****     while (spiIsBusBusy(sdcard.instance)) {
 300              	 .loc 1 170 0
 301 0004 00BF     	 nop
 302              	.L22:
 303              	 .loc 1 170 0 is_stmt 0 discriminator 1
 304 0006 084B     	 ldr r3,.L23
 305 0008 D3F84630 	 ldr r3,[r3,#70]
 306 000c 1846     	 mov r0,r3
 307 000e FFF7FEFF 	 bl spiIsBusBusy
 308 0012 0346     	 mov r3,r0
 309 0014 002B     	 cmp r3,#0
 310 0016 F6D1     	 bne .L22
 171:../cleanflight/src/main/drivers/sdcard.c ****     }
 172:../cleanflight/src/main/drivers/sdcard.c **** 
 173:../cleanflight/src/main/drivers/sdcard.c ****     SET_CS_HIGH;
 311              	 .loc 1 173 0 is_stmt 1
 312 0018 034B     	 ldr r3,.L23
 313 001a D3F85130 	 ldr r3,[r3,#81]
 314 001e 1846     	 mov r0,r3
 315 0020 FFF7FEFF 	 bl IOHi
 174:../cleanflight/src/main/drivers/sdcard.c **** }
 316              	 .loc 1 174 0
 317 0024 80BD     	 pop {r7,pc}
 318              	.L24:
 319 0026 00BF     	 .align 2
 320              	.L23:
 321 0028 00000000 	 .word sdcard
 322              	 .cfi_endproc
 323              	.LFE534:
 325              	 .section .text.sdcard_reset,"ax",%progbits
 326              	 .align 2
 327              	 .thumb
 328              	 .thumb_func
 330              	sdcard_reset:
 331              	.LFB535:
 175:../cleanflight/src/main/drivers/sdcard.c **** 
 176:../cleanflight/src/main/drivers/sdcard.c **** /**
 177:../cleanflight/src/main/drivers/sdcard.c ****  * Handle a failure of an SD card operation by resetting the card back to its initialization phase.
 178:../cleanflight/src/main/drivers/sdcard.c ****  *
 179:../cleanflight/src/main/drivers/sdcard.c ****  * Increments the failure counter, and when the failure threshold is reached, disables the card unt
 180:../cleanflight/src/main/drivers/sdcard.c ****  * the next call to sdcard_init().
 181:../cleanflight/src/main/drivers/sdcard.c ****  */
 182:../cleanflight/src/main/drivers/sdcard.c **** static void sdcard_reset(void)
 183:../cleanflight/src/main/drivers/sdcard.c **** {
 332              	 .loc 1 183 0
 333              	 .cfi_startproc
 334              	 
 335              	 
 336 0000 80B5     	 push {r7,lr}
 337              	.LCFI17:
 338              	 .cfi_def_cfa_offset 8
 339              	 .cfi_offset 7,-8
 340              	 .cfi_offset 14,-4
 341 0002 00AF     	 add r7,sp,#0
 342              	.LCFI18:
 343              	 .cfi_def_cfa_register 7
 184:../cleanflight/src/main/drivers/sdcard.c ****     if (!sdcard_isInserted()) {
 344              	 .loc 1 184 0
 345 0004 FFF7FEFF 	 bl sdcard_isInserted
 346 0008 0346     	 mov r3,r0
 347 000a 83F00103 	 eor r3,r3,#1
 348 000e DBB2     	 uxtb r3,r3
 349 0010 002B     	 cmp r3,#0
 350 0012 04D0     	 beq .L26
 185:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.state = SDCARD_STATE_NOT_PRESENT;
 351              	 .loc 1 185 0
 352 0014 154B     	 ldr r3,.L30
 353 0016 0022     	 movs r2,#0
 354 0018 83F82020 	 strb r2,[r3,#32]
 186:../cleanflight/src/main/drivers/sdcard.c ****         return;
 355              	 .loc 1 186 0
 356 001c 25E0     	 b .L25
 357              	.L26:
 187:../cleanflight/src/main/drivers/sdcard.c ****     }
 188:../cleanflight/src/main/drivers/sdcard.c **** 
 189:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.state >= SDCARD_STATE_READY) {
 358              	 .loc 1 189 0
 359 001e 134B     	 ldr r3,.L30
 360 0020 93F82030 	 ldrb r3,[r3,#32]
 361 0024 032B     	 cmp r3,#3
 362 0026 07D9     	 bls .L28
 190:../cleanflight/src/main/drivers/sdcard.c ****         spiSetDivisor(sdcard.instance, SDCARD_SPI_INITIALIZATION_CLOCK_DIVIDER);
 363              	 .loc 1 190 0
 364 0028 104B     	 ldr r3,.L30
 365 002a D3F84630 	 ldr r3,[r3,#70]
 366 002e 1846     	 mov r0,r3
 367 0030 4FF40071 	 mov r1,#512
 368 0034 FFF7FEFF 	 bl spiSetDivisor
 369              	.L28:
 191:../cleanflight/src/main/drivers/sdcard.c ****     }
 192:../cleanflight/src/main/drivers/sdcard.c **** 
 193:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.failureCount++;
 370              	 .loc 1 193 0
 371 0038 0C4B     	 ldr r3,.L30
 372 003a 5B7D     	 ldrb r3,[r3,#21]
 373 003c 0133     	 adds r3,r3,#1
 374 003e DAB2     	 uxtb r2,r3
 375 0040 0A4B     	 ldr r3,.L30
 376 0042 5A75     	 strb r2,[r3,#21]
 194:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.failureCount >= SDCARD_MAX_CONSECUTIVE_FAILURES) {
 377              	 .loc 1 194 0
 378 0044 094B     	 ldr r3,.L30
 379 0046 5B7D     	 ldrb r3,[r3,#21]
 380 0048 072B     	 cmp r3,#7
 381 004a 04D9     	 bls .L29
 195:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.state = SDCARD_STATE_NOT_PRESENT;
 382              	 .loc 1 195 0
 383 004c 074B     	 ldr r3,.L30
 384 004e 0022     	 movs r2,#0
 385 0050 83F82020 	 strb r2,[r3,#32]
 386 0054 09E0     	 b .L25
 387              	.L29:
 196:../cleanflight/src/main/drivers/sdcard.c ****     } else {
 197:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.operationStartTime = millis();
 388              	 .loc 1 197 0
 389 0056 FFF7FEFF 	 bl millis
 390 005a 0246     	 mov r2,r0
 391 005c 034B     	 ldr r3,.L30
 392 005e C3F81120 	 str r2,[r3,#17]
 198:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.state = SDCARD_STATE_RESET;
 393              	 .loc 1 198 0
 394 0062 024B     	 ldr r3,.L30
 395 0064 0122     	 movs r2,#1
 396 0066 83F82020 	 strb r2,[r3,#32]
 397              	.L25:
 199:../cleanflight/src/main/drivers/sdcard.c ****     }
 200:../cleanflight/src/main/drivers/sdcard.c **** }
 398              	 .loc 1 200 0
 399 006a 80BD     	 pop {r7,pc}
 400              	.L31:
 401              	 .align 2
 402              	.L30:
 403 006c 00000000 	 .word sdcard
 404              	 .cfi_endproc
 405              	.LFE535:
 407              	 .section .text.sdcard_waitForIdle,"ax",%progbits
 408              	 .align 2
 409              	 .thumb
 410              	 .thumb_func
 412              	sdcard_waitForIdle:
 413              	.LFB536:
 201:../cleanflight/src/main/drivers/sdcard.c **** 
 202:../cleanflight/src/main/drivers/sdcard.c **** /**
 203:../cleanflight/src/main/drivers/sdcard.c ****  * The SD card spec requires 8 clock cycles to be sent by us on the bus after most commands so it c
 204:../cleanflight/src/main/drivers/sdcard.c ****  * processing of that command. The easiest way for us to do this is to just wait for the bus to bec
 205:../cleanflight/src/main/drivers/sdcard.c ****  * we transmit a command, sending at least 8-bits onto the bus when we do so.
 206:../cleanflight/src/main/drivers/sdcard.c ****  */
 207:../cleanflight/src/main/drivers/sdcard.c **** static bool sdcard_waitForIdle(int maxBytesToWait)
 208:../cleanflight/src/main/drivers/sdcard.c **** {
 414              	 .loc 1 208 0
 415              	 .cfi_startproc
 416              	 
 417              	 
 418 0000 80B5     	 push {r7,lr}
 419              	.LCFI19:
 420              	 .cfi_def_cfa_offset 8
 421              	 .cfi_offset 7,-8
 422              	 .cfi_offset 14,-4
 423 0002 84B0     	 sub sp,sp,#16
 424              	.LCFI20:
 425              	 .cfi_def_cfa_offset 24
 426 0004 00AF     	 add r7,sp,#0
 427              	.LCFI21:
 428              	 .cfi_def_cfa_register 7
 429 0006 7860     	 str r0,[r7,#4]
 209:../cleanflight/src/main/drivers/sdcard.c ****     while (maxBytesToWait > 0) {
 430              	 .loc 1 209 0
 431 0008 10E0     	 b .L33
 432              	.L36:
 433              	.LBB2:
 210:../cleanflight/src/main/drivers/sdcard.c ****         uint8_t b = spiTransferByte(sdcard.instance, 0xFF);
 434              	 .loc 1 210 0
 435 000a 0C4B     	 ldr r3,.L37
 436 000c D3F84630 	 ldr r3,[r3,#70]
 437 0010 1846     	 mov r0,r3
 438 0012 FF21     	 movs r1,#255
 439 0014 FFF7FEFF 	 bl spiTransferByte
 440 0018 0346     	 mov r3,r0
 441 001a FB73     	 strb r3,[r7,#15]
 211:../cleanflight/src/main/drivers/sdcard.c ****         if (b == 0xFF) {
 442              	 .loc 1 211 0
 443 001c FB7B     	 ldrb r3,[r7,#15]
 444 001e FF2B     	 cmp r3,#255
 445 0020 01D1     	 bne .L34
 212:../cleanflight/src/main/drivers/sdcard.c ****             return true;
 446              	 .loc 1 212 0
 447 0022 0123     	 movs r3,#1
 448 0024 06E0     	 b .L35
 449              	.L34:
 213:../cleanflight/src/main/drivers/sdcard.c ****         }
 214:../cleanflight/src/main/drivers/sdcard.c ****         maxBytesToWait--;
 450              	 .loc 1 214 0
 451 0026 7B68     	 ldr r3,[r7,#4]
 452 0028 013B     	 subs r3,r3,#1
 453 002a 7B60     	 str r3,[r7,#4]
 454              	.L33:
 455              	.LBE2:
 209:../cleanflight/src/main/drivers/sdcard.c ****         uint8_t b = spiTransferByte(sdcard.instance, 0xFF);
 456              	 .loc 1 209 0
 457 002c 7B68     	 ldr r3,[r7,#4]
 458 002e 002B     	 cmp r3,#0
 459 0030 EBDC     	 bgt .L36
 215:../cleanflight/src/main/drivers/sdcard.c ****     }
 216:../cleanflight/src/main/drivers/sdcard.c **** 
 217:../cleanflight/src/main/drivers/sdcard.c ****     return false;
 460              	 .loc 1 217 0
 461 0032 0023     	 movs r3,#0
 462              	.L35:
 218:../cleanflight/src/main/drivers/sdcard.c **** }
 463              	 .loc 1 218 0
 464 0034 1846     	 mov r0,r3
 465 0036 1037     	 adds r7,r7,#16
 466              	.LCFI22:
 467              	 .cfi_def_cfa_offset 8
 468 0038 BD46     	 mov sp,r7
 469              	.LCFI23:
 470              	 .cfi_def_cfa_register 13
 471              	 
 472 003a 80BD     	 pop {r7,pc}
 473              	.L38:
 474              	 .align 2
 475              	.L37:
 476 003c 00000000 	 .word sdcard
 477              	 .cfi_endproc
 478              	.LFE536:
 480              	 .section .text.sdcard_waitForNonIdleByte,"ax",%progbits
 481              	 .align 2
 482              	 .thumb
 483              	 .thumb_func
 485              	sdcard_waitForNonIdleByte:
 486              	.LFB537:
 219:../cleanflight/src/main/drivers/sdcard.c **** 
 220:../cleanflight/src/main/drivers/sdcard.c **** /**
 221:../cleanflight/src/main/drivers/sdcard.c ****  * Wait for up to maxDelay 0xFF idle bytes to arrive from the card, returning the first non-idle by
 222:../cleanflight/src/main/drivers/sdcard.c ****  *
 223:../cleanflight/src/main/drivers/sdcard.c ****  * Returns 0xFF on failure.
 224:../cleanflight/src/main/drivers/sdcard.c ****  */
 225:../cleanflight/src/main/drivers/sdcard.c **** static uint8_t sdcard_waitForNonIdleByte(int maxDelay)
 226:../cleanflight/src/main/drivers/sdcard.c **** {
 487              	 .loc 1 226 0
 488              	 .cfi_startproc
 489              	 
 490              	 
 491 0000 80B5     	 push {r7,lr}
 492              	.LCFI24:
 493              	 .cfi_def_cfa_offset 8
 494              	 .cfi_offset 7,-8
 495              	 .cfi_offset 14,-4
 496 0002 84B0     	 sub sp,sp,#16
 497              	.LCFI25:
 498              	 .cfi_def_cfa_offset 24
 499 0004 00AF     	 add r7,sp,#0
 500              	.LCFI26:
 501              	 .cfi_def_cfa_register 7
 502 0006 7860     	 str r0,[r7,#4]
 503              	.LBB3:
 227:../cleanflight/src/main/drivers/sdcard.c ****     for (int i = 0; i < maxDelay + 1; i++) { // + 1 so we can wait for maxDelay '0xFF' bytes before
 504              	 .loc 1 227 0
 505 0008 0023     	 movs r3,#0
 506 000a FB60     	 str r3,[r7,#12]
 507 000c 10E0     	 b .L40
 508              	.L43:
 509              	.LBB4:
 228:../cleanflight/src/main/drivers/sdcard.c ****         uint8_t response = spiTransferByte(sdcard.instance, 0xFF);
 510              	 .loc 1 228 0
 511 000e 0D4B     	 ldr r3,.L44
 512 0010 D3F84630 	 ldr r3,[r3,#70]
 513 0014 1846     	 mov r0,r3
 514 0016 FF21     	 movs r1,#255
 515 0018 FFF7FEFF 	 bl spiTransferByte
 516 001c 0346     	 mov r3,r0
 517 001e FB72     	 strb r3,[r7,#11]
 229:../cleanflight/src/main/drivers/sdcard.c **** 
 230:../cleanflight/src/main/drivers/sdcard.c ****         if (response != 0xFF) {
 518              	 .loc 1 230 0
 519 0020 FB7A     	 ldrb r3,[r7,#11]
 520 0022 FF2B     	 cmp r3,#255
 521 0024 01D0     	 beq .L41
 231:../cleanflight/src/main/drivers/sdcard.c ****             return response;
 522              	 .loc 1 231 0
 523 0026 FB7A     	 ldrb r3,[r7,#11]
 524 0028 08E0     	 b .L42
 525              	.L41:
 526              	.LBE4:
 227:../cleanflight/src/main/drivers/sdcard.c ****         uint8_t response = spiTransferByte(sdcard.instance, 0xFF);
 527              	 .loc 1 227 0 discriminator 2
 528 002a FB68     	 ldr r3,[r7,#12]
 529 002c 0133     	 adds r3,r3,#1
 530 002e FB60     	 str r3,[r7,#12]
 531              	.L40:
 227:../cleanflight/src/main/drivers/sdcard.c ****         uint8_t response = spiTransferByte(sdcard.instance, 0xFF);
 532              	 .loc 1 227 0 is_stmt 0 discriminator 1
 533 0030 7B68     	 ldr r3,[r7,#4]
 534 0032 5A1C     	 adds r2,r3,#1
 535 0034 FB68     	 ldr r3,[r7,#12]
 536 0036 9A42     	 cmp r2,r3
 537 0038 E9DC     	 bgt .L43
 538              	.LBE3:
 232:../cleanflight/src/main/drivers/sdcard.c ****         }
 233:../cleanflight/src/main/drivers/sdcard.c ****     }
 234:../cleanflight/src/main/drivers/sdcard.c **** 
 235:../cleanflight/src/main/drivers/sdcard.c ****     return 0xFF;
 539              	 .loc 1 235 0 is_stmt 1
 540 003a FF23     	 movs r3,#255
 541              	.L42:
 236:../cleanflight/src/main/drivers/sdcard.c **** }
 542              	 .loc 1 236 0
 543 003c 1846     	 mov r0,r3
 544 003e 1037     	 adds r7,r7,#16
 545              	.LCFI27:
 546              	 .cfi_def_cfa_offset 8
 547 0040 BD46     	 mov sp,r7
 548              	.LCFI28:
 549              	 .cfi_def_cfa_register 13
 550              	 
 551 0042 80BD     	 pop {r7,pc}
 552              	.L45:
 553              	 .align 2
 554              	.L44:
 555 0044 00000000 	 .word sdcard
 556              	 .cfi_endproc
 557              	.LFE537:
 559              	 .section .text.sdcard_sendCommand,"ax",%progbits
 560              	 .align 2
 561              	 .thumb
 562              	 .thumb_func
 564              	sdcard_sendCommand:
 565              	.LFB538:
 237:../cleanflight/src/main/drivers/sdcard.c **** 
 238:../cleanflight/src/main/drivers/sdcard.c **** /**
 239:../cleanflight/src/main/drivers/sdcard.c ****  * Waits up to SDCARD_MAXIMUM_BYTE_DELAY_FOR_CMD_REPLY bytes for the card to become ready, send a c
 240:../cleanflight/src/main/drivers/sdcard.c ****  * with the given argument, waits up to SDCARD_MAXIMUM_BYTE_DELAY_FOR_CMD_REPLY bytes for a reply, 
 241:../cleanflight/src/main/drivers/sdcard.c ****  * first non-0xFF byte of the reply.
 242:../cleanflight/src/main/drivers/sdcard.c ****  *
 243:../cleanflight/src/main/drivers/sdcard.c ****  * You must select the card first with sdcard_select() and deselect it afterwards with sdcard_desel
 244:../cleanflight/src/main/drivers/sdcard.c ****  *
 245:../cleanflight/src/main/drivers/sdcard.c ****  * Upon failure, 0xFF is returned.
 246:../cleanflight/src/main/drivers/sdcard.c ****  */
 247:../cleanflight/src/main/drivers/sdcard.c **** static uint8_t sdcard_sendCommand(uint8_t commandCode, uint32_t commandArgument)
 248:../cleanflight/src/main/drivers/sdcard.c **** {
 566              	 .loc 1 248 0
 567              	 .cfi_startproc
 568              	 
 569              	 
 570 0000 80B5     	 push {r7,lr}
 571              	.LCFI29:
 572              	 .cfi_def_cfa_offset 8
 573              	 .cfi_offset 7,-8
 574              	 .cfi_offset 14,-4
 575 0002 84B0     	 sub sp,sp,#16
 576              	.LCFI30:
 577              	 .cfi_def_cfa_offset 24
 578 0004 00AF     	 add r7,sp,#0
 579              	.LCFI31:
 580              	 .cfi_def_cfa_register 7
 581 0006 0346     	 mov r3,r0
 582 0008 3960     	 str r1,[r7]
 583 000a FB71     	 strb r3,[r7,#7]
 249:../cleanflight/src/main/drivers/sdcard.c ****     const uint8_t command[6] = {
 584              	 .loc 1 249 0
 585 000c FB79     	 ldrb r3,[r7,#7]
 586 000e 43F04003 	 orr r3,r3,#64
 587 0012 DBB2     	 uxtb r3,r3
 588 0014 3B72     	 strb r3,[r7,#8]
 250:../cleanflight/src/main/drivers/sdcard.c ****         0x40 | commandCode,
 251:../cleanflight/src/main/drivers/sdcard.c ****         commandArgument >> 24,
 589              	 .loc 1 251 0
 590 0016 3B68     	 ldr r3,[r7]
 591 0018 1B0E     	 lsrs r3,r3,#24
 249:../cleanflight/src/main/drivers/sdcard.c ****     const uint8_t command[6] = {
 592              	 .loc 1 249 0
 593 001a DBB2     	 uxtb r3,r3
 594 001c 7B72     	 strb r3,[r7,#9]
 252:../cleanflight/src/main/drivers/sdcard.c ****         commandArgument >> 16,
 595              	 .loc 1 252 0
 596 001e 3B68     	 ldr r3,[r7]
 597 0020 1B0C     	 lsrs r3,r3,#16
 249:../cleanflight/src/main/drivers/sdcard.c ****     const uint8_t command[6] = {
 598              	 .loc 1 249 0
 599 0022 DBB2     	 uxtb r3,r3
 600 0024 BB72     	 strb r3,[r7,#10]
 253:../cleanflight/src/main/drivers/sdcard.c ****         commandArgument >> 8,
 601              	 .loc 1 253 0
 602 0026 3B68     	 ldr r3,[r7]
 603 0028 1B0A     	 lsrs r3,r3,#8
 249:../cleanflight/src/main/drivers/sdcard.c ****         0x40 | commandCode,
 604              	 .loc 1 249 0
 605 002a DBB2     	 uxtb r3,r3
 606 002c FB72     	 strb r3,[r7,#11]
 607 002e 3B68     	 ldr r3,[r7]
 608 0030 DBB2     	 uxtb r3,r3
 609 0032 3B73     	 strb r3,[r7,#12]
 610 0034 9523     	 movs r3,#149
 611 0036 7B73     	 strb r3,[r7,#13]
 254:../cleanflight/src/main/drivers/sdcard.c ****         commandArgument,
 255:../cleanflight/src/main/drivers/sdcard.c ****         0x95 /* Static CRC. This CRC is valid for CMD0 with a 0 argument, and CMD8 with 0x1AB argum
 256:../cleanflight/src/main/drivers/sdcard.c ****         commands that require a CRC */
 257:../cleanflight/src/main/drivers/sdcard.c ****     };
 258:../cleanflight/src/main/drivers/sdcard.c **** 
 259:../cleanflight/src/main/drivers/sdcard.c ****     // Go ahead and send the command even if the card isn't idle if this is the reset command
 260:../cleanflight/src/main/drivers/sdcard.c ****     if (!sdcard_waitForIdle(SDCARD_MAXIMUM_BYTE_DELAY_FOR_CMD_REPLY) && commandCode != SDCARD_COMMA
 612              	 .loc 1 260 0
 613 0038 0820     	 movs r0,#8
 614 003a FFF7FEFF 	 bl sdcard_waitForIdle
 615 003e 0346     	 mov r3,r0
 616 0040 83F00103 	 eor r3,r3,#1
 617 0044 DBB2     	 uxtb r3,r3
 618 0046 002B     	 cmp r3,#0
 619 0048 04D0     	 beq .L47
 620              	 .loc 1 260 0 is_stmt 0 discriminator 1
 621 004a FB79     	 ldrb r3,[r7,#7]
 622 004c 002B     	 cmp r3,#0
 623 004e 01D0     	 beq .L47
 261:../cleanflight/src/main/drivers/sdcard.c ****         return 0xFF;
 624              	 .loc 1 261 0 is_stmt 1
 625 0050 FF23     	 movs r3,#255
 626 0052 0EE0     	 b .L49
 627              	.L47:
 262:../cleanflight/src/main/drivers/sdcard.c **** 
 263:../cleanflight/src/main/drivers/sdcard.c ****     spiTransfer(sdcard.instance, command, NULL, sizeof(command));
 628              	 .loc 1 263 0
 629 0054 094B     	 ldr r3,.L50
 630 0056 D3F84620 	 ldr r2,[r3,#70]
 631 005a 07F10803 	 add r3,r7,#8
 632 005e 1046     	 mov r0,r2
 633 0060 1946     	 mov r1,r3
 634 0062 0022     	 movs r2,#0
 635 0064 0623     	 movs r3,#6
 636 0066 FFF7FEFF 	 bl spiTransfer
 264:../cleanflight/src/main/drivers/sdcard.c **** 
 265:../cleanflight/src/main/drivers/sdcard.c ****     /*
 266:../cleanflight/src/main/drivers/sdcard.c ****      * The card can take up to SDCARD_MAXIMUM_BYTE_DELAY_FOR_CMD_REPLY bytes to send the response, 
 267:../cleanflight/src/main/drivers/sdcard.c ****      * it'll transmit 0xFF filler bytes.
 268:../cleanflight/src/main/drivers/sdcard.c ****      */
 269:../cleanflight/src/main/drivers/sdcard.c ****     return sdcard_waitForNonIdleByte(SDCARD_MAXIMUM_BYTE_DELAY_FOR_CMD_REPLY);
 637              	 .loc 1 269 0
 638 006a 0820     	 movs r0,#8
 639 006c FFF7FEFF 	 bl sdcard_waitForNonIdleByte
 640 0070 0346     	 mov r3,r0
 641              	.L49:
 270:../cleanflight/src/main/drivers/sdcard.c **** }
 642              	 .loc 1 270 0 discriminator 1
 643 0072 1846     	 mov r0,r3
 644 0074 1037     	 adds r7,r7,#16
 645              	.LCFI32:
 646              	 .cfi_def_cfa_offset 8
 647 0076 BD46     	 mov sp,r7
 648              	.LCFI33:
 649              	 .cfi_def_cfa_register 13
 650              	 
 651 0078 80BD     	 pop {r7,pc}
 652              	.L51:
 653 007a 00BF     	 .align 2
 654              	.L50:
 655 007c 00000000 	 .word sdcard
 656              	 .cfi_endproc
 657              	.LFE538:
 659              	 .section .text.sdcard_sendAppCommand,"ax",%progbits
 660              	 .align 2
 661              	 .thumb
 662              	 .thumb_func
 664              	sdcard_sendAppCommand:
 665              	.LFB539:
 271:../cleanflight/src/main/drivers/sdcard.c **** 
 272:../cleanflight/src/main/drivers/sdcard.c **** static uint8_t sdcard_sendAppCommand(uint8_t commandCode, uint32_t commandArgument)
 273:../cleanflight/src/main/drivers/sdcard.c **** {
 666              	 .loc 1 273 0
 667              	 .cfi_startproc
 668              	 
 669              	 
 670 0000 80B5     	 push {r7,lr}
 671              	.LCFI34:
 672              	 .cfi_def_cfa_offset 8
 673              	 .cfi_offset 7,-8
 674              	 .cfi_offset 14,-4
 675 0002 82B0     	 sub sp,sp,#8
 676              	.LCFI35:
 677              	 .cfi_def_cfa_offset 16
 678 0004 00AF     	 add r7,sp,#0
 679              	.LCFI36:
 680              	 .cfi_def_cfa_register 7
 681 0006 0346     	 mov r3,r0
 682 0008 3960     	 str r1,[r7]
 683 000a FB71     	 strb r3,[r7,#7]
 274:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_sendCommand(SDCARD_COMMAND_APP_CMD, 0);
 684              	 .loc 1 274 0
 685 000c 3720     	 movs r0,#55
 686 000e 0021     	 movs r1,#0
 687 0010 FFF7FEFF 	 bl sdcard_sendCommand
 275:../cleanflight/src/main/drivers/sdcard.c **** 
 276:../cleanflight/src/main/drivers/sdcard.c ****     return sdcard_sendCommand(commandCode, commandArgument);
 688              	 .loc 1 276 0
 689 0014 FB79     	 ldrb r3,[r7,#7]
 690 0016 1846     	 mov r0,r3
 691 0018 3968     	 ldr r1,[r7]
 692 001a FFF7FEFF 	 bl sdcard_sendCommand
 693 001e 0346     	 mov r3,r0
 277:../cleanflight/src/main/drivers/sdcard.c **** }
 694              	 .loc 1 277 0
 695 0020 1846     	 mov r0,r3
 696 0022 0837     	 adds r7,r7,#8
 697              	.LCFI37:
 698              	 .cfi_def_cfa_offset 8
 699 0024 BD46     	 mov sp,r7
 700              	.LCFI38:
 701              	 .cfi_def_cfa_register 13
 702              	 
 703 0026 80BD     	 pop {r7,pc}
 704              	 .cfi_endproc
 705              	.LFE539:
 707              	 .section .text.sdcard_validateInterfaceCondition,"ax",%progbits
 708              	 .align 2
 709              	 .thumb
 710              	 .thumb_func
 712              	sdcard_validateInterfaceCondition:
 713              	.LFB540:
 278:../cleanflight/src/main/drivers/sdcard.c **** 
 279:../cleanflight/src/main/drivers/sdcard.c **** /**
 280:../cleanflight/src/main/drivers/sdcard.c ****  * Sends an IF_COND message to the card to check its version and validate its voltage requirements.
 281:../cleanflight/src/main/drivers/sdcard.c ****  * sdCardVersion with the detected version (0, 1, or 2) and returns true if the card is compatible.
 282:../cleanflight/src/main/drivers/sdcard.c ****  */
 283:../cleanflight/src/main/drivers/sdcard.c **** static bool sdcard_validateInterfaceCondition(void)
 284:../cleanflight/src/main/drivers/sdcard.c **** {
 714              	 .loc 1 284 0
 715              	 .cfi_startproc
 716              	 
 717              	 
 718 0000 80B5     	 push {r7,lr}
 719              	.LCFI39:
 720              	 .cfi_def_cfa_offset 8
 721              	 .cfi_offset 7,-8
 722              	 .cfi_offset 14,-4
 723 0002 82B0     	 sub sp,sp,#8
 724              	.LCFI40:
 725              	 .cfi_def_cfa_offset 16
 726 0004 00AF     	 add r7,sp,#0
 727              	.LCFI41:
 728              	 .cfi_def_cfa_register 7
 285:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t ifCondReply[4];
 286:../cleanflight/src/main/drivers/sdcard.c **** 
 287:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.version = 0;
 729              	 .loc 1 287 0
 730 0006 194B     	 ldr r3,.L58
 731 0008 0022     	 movs r2,#0
 732 000a 9A75     	 strb r2,[r3,#22]
 288:../cleanflight/src/main/drivers/sdcard.c **** 
 289:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_select();
 733              	 .loc 1 289 0
 734 000c FFF7FEFF 	 bl sdcard_select
 290:../cleanflight/src/main/drivers/sdcard.c **** 
 291:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t status = sdcard_sendCommand(SDCARD_COMMAND_SEND_IF_COND, (SDCARD_VOLTAGE_ACCEPTED_2_7_t
 735              	 .loc 1 291 0
 736 0010 0820     	 movs r0,#8
 737 0012 40F2AB11 	 movw r1,#427
 738 0016 FFF7FEFF 	 bl sdcard_sendCommand
 739 001a 0346     	 mov r3,r0
 740 001c FB71     	 strb r3,[r7,#7]
 292:../cleanflight/src/main/drivers/sdcard.c **** 
 293:../cleanflight/src/main/drivers/sdcard.c ****     // Don't deselect the card right away, because we'll want to read the rest of its reply if it's
 294:../cleanflight/src/main/drivers/sdcard.c **** 
 295:../cleanflight/src/main/drivers/sdcard.c ****     if (status == (SDCARD_R1_STATUS_BIT_ILLEGAL_COMMAND | SDCARD_R1_STATUS_BIT_IDLE)) {
 741              	 .loc 1 295 0
 742 001e FB79     	 ldrb r3,[r7,#7]
 743 0020 052B     	 cmp r3,#5
 744 0022 03D1     	 bne .L55
 296:../cleanflight/src/main/drivers/sdcard.c ****         // V1 cards don't support this command
 297:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.version = 1;
 745              	 .loc 1 297 0
 746 0024 114B     	 ldr r3,.L58
 747 0026 0122     	 movs r2,#1
 748 0028 9A75     	 strb r2,[r3,#22]
 749 002a 12E0     	 b .L56
 750              	.L55:
 298:../cleanflight/src/main/drivers/sdcard.c ****     } else if (status == SDCARD_R1_STATUS_BIT_IDLE) {
 751              	 .loc 1 298 0
 752 002c FB79     	 ldrb r3,[r7,#7]
 753 002e 012B     	 cmp r3,#1
 754 0030 0FD1     	 bne .L56
 299:../cleanflight/src/main/drivers/sdcard.c ****         spiTransfer(sdcard.instance, NULL, ifCondReply, sizeof(ifCondReply));
 755              	 .loc 1 299 0
 756 0032 0E4B     	 ldr r3,.L58
 757 0034 D3F84620 	 ldr r2,[r3,#70]
 758 0038 3B46     	 mov r3,r7
 759 003a 1046     	 mov r0,r2
 760 003c 0021     	 movs r1,#0
 761 003e 1A46     	 mov r2,r3
 762 0040 0423     	 movs r3,#4
 763 0042 FFF7FEFF 	 bl spiTransfer
 300:../cleanflight/src/main/drivers/sdcard.c **** 
 301:../cleanflight/src/main/drivers/sdcard.c ****         /*
 302:../cleanflight/src/main/drivers/sdcard.c ****          * We don't bother to validate the SDCard's operating voltage range since the spec requires
 303:../cleanflight/src/main/drivers/sdcard.c ****          * 3.3V, but do check that it echoed back our check pattern properly.
 304:../cleanflight/src/main/drivers/sdcard.c ****          */
 305:../cleanflight/src/main/drivers/sdcard.c ****         if (ifCondReply[3] == SDCARD_IF_COND_CHECK_PATTERN) {
 764              	 .loc 1 305 0
 765 0046 FB78     	 ldrb r3,[r7,#3]
 766 0048 AB2B     	 cmp r3,#171
 767 004a 02D1     	 bne .L56
 306:../cleanflight/src/main/drivers/sdcard.c ****             sdcard.version = 2;
 768              	 .loc 1 306 0
 769 004c 074B     	 ldr r3,.L58
 770 004e 0222     	 movs r2,#2
 771 0050 9A75     	 strb r2,[r3,#22]
 772              	.L56:
 307:../cleanflight/src/main/drivers/sdcard.c ****         }
 308:../cleanflight/src/main/drivers/sdcard.c ****     }
 309:../cleanflight/src/main/drivers/sdcard.c **** 
 310:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_deselect();
 773              	 .loc 1 310 0
 774 0052 FFF7FEFF 	 bl sdcard_deselect
 311:../cleanflight/src/main/drivers/sdcard.c **** 
 312:../cleanflight/src/main/drivers/sdcard.c ****     return sdcard.version > 0;
 775              	 .loc 1 312 0
 776 0056 054B     	 ldr r3,.L58
 777 0058 9B7D     	 ldrb r3,[r3,#22]
 778 005a 002B     	 cmp r3,#0
 779 005c 14BF     	 ite ne
 780 005e 0123     	 movne r3,#1
 781 0060 0023     	 moveq r3,#0
 782 0062 DBB2     	 uxtb r3,r3
 313:../cleanflight/src/main/drivers/sdcard.c **** }
 783              	 .loc 1 313 0
 784 0064 1846     	 mov r0,r3
 785 0066 0837     	 adds r7,r7,#8
 786              	.LCFI42:
 787              	 .cfi_def_cfa_offset 8
 788 0068 BD46     	 mov sp,r7
 789              	.LCFI43:
 790              	 .cfi_def_cfa_register 13
 791              	 
 792 006a 80BD     	 pop {r7,pc}
 793              	.L59:
 794              	 .align 2
 795              	.L58:
 796 006c 00000000 	 .word sdcard
 797              	 .cfi_endproc
 798              	.LFE540:
 800              	 .section .text.sdcard_readOCRRegister,"ax",%progbits
 801              	 .align 2
 802              	 .thumb
 803              	 .thumb_func
 805              	sdcard_readOCRRegister:
 806              	.LFB541:
 314:../cleanflight/src/main/drivers/sdcard.c **** 
 315:../cleanflight/src/main/drivers/sdcard.c **** static bool sdcard_readOCRRegister(uint32_t *result)
 316:../cleanflight/src/main/drivers/sdcard.c **** {
 807              	 .loc 1 316 0
 808              	 .cfi_startproc
 809              	 
 810              	 
 811 0000 80B5     	 push {r7,lr}
 812              	.LCFI44:
 813              	 .cfi_def_cfa_offset 8
 814              	 .cfi_offset 7,-8
 815              	 .cfi_offset 14,-4
 816 0002 84B0     	 sub sp,sp,#16
 817              	.LCFI45:
 818              	 .cfi_def_cfa_offset 24
 819 0004 00AF     	 add r7,sp,#0
 820              	.LCFI46:
 821              	 .cfi_def_cfa_register 7
 822 0006 7860     	 str r0,[r7,#4]
 317:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_select();
 823              	 .loc 1 317 0
 824 0008 FFF7FEFF 	 bl sdcard_select
 318:../cleanflight/src/main/drivers/sdcard.c **** 
 319:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t status = sdcard_sendCommand(SDCARD_COMMAND_READ_OCR, 0);
 825              	 .loc 1 319 0
 826 000c 3A20     	 movs r0,#58
 827 000e 0021     	 movs r1,#0
 828 0010 FFF7FEFF 	 bl sdcard_sendCommand
 829 0014 0346     	 mov r3,r0
 830 0016 FB73     	 strb r3,[r7,#15]
 320:../cleanflight/src/main/drivers/sdcard.c **** 
 321:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t response[4];
 322:../cleanflight/src/main/drivers/sdcard.c **** 
 323:../cleanflight/src/main/drivers/sdcard.c ****     spiTransfer(sdcard.instance, NULL, response, sizeof(response));
 831              	 .loc 1 323 0
 832 0018 124B     	 ldr r3,.L64
 833 001a D3F84620 	 ldr r2,[r3,#70]
 834 001e 07F10803 	 add r3,r7,#8
 835 0022 1046     	 mov r0,r2
 836 0024 0021     	 movs r1,#0
 837 0026 1A46     	 mov r2,r3
 838 0028 0423     	 movs r3,#4
 839 002a FFF7FEFF 	 bl spiTransfer
 324:../cleanflight/src/main/drivers/sdcard.c **** 
 325:../cleanflight/src/main/drivers/sdcard.c ****     if (status == 0) {
 840              	 .loc 1 325 0
 841 002e FB7B     	 ldrb r3,[r7,#15]
 842 0030 002B     	 cmp r3,#0
 843 0032 10D1     	 bne .L61
 326:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_deselect();
 844              	 .loc 1 326 0
 845 0034 FFF7FEFF 	 bl sdcard_deselect
 327:../cleanflight/src/main/drivers/sdcard.c **** 
 328:../cleanflight/src/main/drivers/sdcard.c ****         *result = (response[0] << 24) | (response[1] << 16) | (response[2] << 8) | response[3];
 846              	 .loc 1 328 0
 847 0038 3B7A     	 ldrb r3,[r7,#8]
 848 003a 1A06     	 lsls r2,r3,#24
 849 003c 7B7A     	 ldrb r3,[r7,#9]
 850 003e 1B04     	 lsls r3,r3,#16
 851 0040 1A43     	 orrs r2,r2,r3
 852 0042 BB7A     	 ldrb r3,[r7,#10]
 853 0044 1B02     	 lsls r3,r3,#8
 854 0046 1343     	 orrs r3,r3,r2
 855 0048 FA7A     	 ldrb r2,[r7,#11]
 856 004a 1343     	 orrs r3,r3,r2
 857 004c 1A46     	 mov r2,r3
 858 004e 7B68     	 ldr r3,[r7,#4]
 859 0050 1A60     	 str r2,[r3]
 329:../cleanflight/src/main/drivers/sdcard.c **** 
 330:../cleanflight/src/main/drivers/sdcard.c ****         return true;
 860              	 .loc 1 330 0
 861 0052 0123     	 movs r3,#1
 862 0054 02E0     	 b .L63
 863              	.L61:
 331:../cleanflight/src/main/drivers/sdcard.c ****     } else {
 332:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_deselect();
 864              	 .loc 1 332 0
 865 0056 FFF7FEFF 	 bl sdcard_deselect
 333:../cleanflight/src/main/drivers/sdcard.c **** 
 334:../cleanflight/src/main/drivers/sdcard.c ****         return false;
 866              	 .loc 1 334 0
 867 005a 0023     	 movs r3,#0
 868              	.L63:
 335:../cleanflight/src/main/drivers/sdcard.c ****     }
 336:../cleanflight/src/main/drivers/sdcard.c **** }
 869              	 .loc 1 336 0 discriminator 1
 870 005c 1846     	 mov r0,r3
 871 005e 1037     	 adds r7,r7,#16
 872              	.LCFI47:
 873              	 .cfi_def_cfa_offset 8
 874 0060 BD46     	 mov sp,r7
 875              	.LCFI48:
 876              	 .cfi_def_cfa_register 13
 877              	 
 878 0062 80BD     	 pop {r7,pc}
 879              	.L65:
 880              	 .align 2
 881              	.L64:
 882 0064 00000000 	 .word sdcard
 883              	 .cfi_endproc
 884              	.LFE541:
 886              	 .section .text.sdcard_receiveDataBlock,"ax",%progbits
 887              	 .align 2
 888              	 .thumb
 889              	 .thumb_func
 891              	sdcard_receiveDataBlock:
 892              	.LFB542:
 337:../cleanflight/src/main/drivers/sdcard.c **** 
 338:../cleanflight/src/main/drivers/sdcard.c **** typedef enum {
 339:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_RECEIVE_SUCCESS,
 340:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_RECEIVE_BLOCK_IN_PROGRESS,
 341:../cleanflight/src/main/drivers/sdcard.c ****     SDCARD_RECEIVE_ERROR
 342:../cleanflight/src/main/drivers/sdcard.c **** } sdcardReceiveBlockStatus_e;
 343:../cleanflight/src/main/drivers/sdcard.c **** 
 344:../cleanflight/src/main/drivers/sdcard.c **** /**
 345:../cleanflight/src/main/drivers/sdcard.c ****  * Attempt to receive a data block from the SD card.
 346:../cleanflight/src/main/drivers/sdcard.c ****  *
 347:../cleanflight/src/main/drivers/sdcard.c ****  * Return true on success, otherwise the card has not responded yet and you should retry later.
 348:../cleanflight/src/main/drivers/sdcard.c ****  */
 349:../cleanflight/src/main/drivers/sdcard.c **** static sdcardReceiveBlockStatus_e sdcard_receiveDataBlock(uint8_t *buffer, int count)
 350:../cleanflight/src/main/drivers/sdcard.c **** {
 893              	 .loc 1 350 0
 894              	 .cfi_startproc
 895              	 
 896              	 
 897 0000 80B5     	 push {r7,lr}
 898              	.LCFI49:
 899              	 .cfi_def_cfa_offset 8
 900              	 .cfi_offset 7,-8
 901              	 .cfi_offset 14,-4
 902 0002 84B0     	 sub sp,sp,#16
 903              	.LCFI50:
 904              	 .cfi_def_cfa_offset 24
 905 0004 00AF     	 add r7,sp,#0
 906              	.LCFI51:
 907              	 .cfi_def_cfa_register 7
 908 0006 7860     	 str r0,[r7,#4]
 909 0008 3960     	 str r1,[r7]
 351:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t dataToken = sdcard_waitForNonIdleByte(8);
 910              	 .loc 1 351 0
 911 000a 0820     	 movs r0,#8
 912 000c FFF7FEFF 	 bl sdcard_waitForNonIdleByte
 913 0010 0346     	 mov r3,r0
 914 0012 FB73     	 strb r3,[r7,#15]
 352:../cleanflight/src/main/drivers/sdcard.c **** 
 353:../cleanflight/src/main/drivers/sdcard.c ****     if (dataToken == 0xFF) {
 915              	 .loc 1 353 0
 916 0014 FB7B     	 ldrb r3,[r7,#15]
 917 0016 FF2B     	 cmp r3,#255
 918 0018 01D1     	 bne .L67
 354:../cleanflight/src/main/drivers/sdcard.c ****         return SDCARD_RECEIVE_BLOCK_IN_PROGRESS;
 919              	 .loc 1 354 0
 920 001a 0123     	 movs r3,#1
 921 001c 1CE0     	 b .L68
 922              	.L67:
 355:../cleanflight/src/main/drivers/sdcard.c ****     }
 356:../cleanflight/src/main/drivers/sdcard.c **** 
 357:../cleanflight/src/main/drivers/sdcard.c ****     if (dataToken != SDCARD_SINGLE_BLOCK_READ_START_TOKEN) {
 923              	 .loc 1 357 0
 924 001e FB7B     	 ldrb r3,[r7,#15]
 925 0020 FE2B     	 cmp r3,#254
 926 0022 01D0     	 beq .L69
 358:../cleanflight/src/main/drivers/sdcard.c ****         return SDCARD_RECEIVE_ERROR;
 927              	 .loc 1 358 0
 928 0024 0223     	 movs r3,#2
 929 0026 17E0     	 b .L68
 930              	.L69:
 359:../cleanflight/src/main/drivers/sdcard.c ****     }
 360:../cleanflight/src/main/drivers/sdcard.c **** 
 361:../cleanflight/src/main/drivers/sdcard.c ****     spiTransfer(sdcard.instance, NULL, buffer, count);
 931              	 .loc 1 361 0
 932 0028 0D4B     	 ldr r3,.L70
 933 002a D3F84630 	 ldr r3,[r3,#70]
 934 002e 1846     	 mov r0,r3
 935 0030 0021     	 movs r1,#0
 936 0032 7A68     	 ldr r2,[r7,#4]
 937 0034 3B68     	 ldr r3,[r7]
 938 0036 FFF7FEFF 	 bl spiTransfer
 362:../cleanflight/src/main/drivers/sdcard.c **** 
 363:../cleanflight/src/main/drivers/sdcard.c ****     // Discard trailing CRC, we don't care
 364:../cleanflight/src/main/drivers/sdcard.c ****     spiTransferByte(sdcard.instance, 0xFF);
 939              	 .loc 1 364 0
 940 003a 094B     	 ldr r3,.L70
 941 003c D3F84630 	 ldr r3,[r3,#70]
 942 0040 1846     	 mov r0,r3
 943 0042 FF21     	 movs r1,#255
 944 0044 FFF7FEFF 	 bl spiTransferByte
 365:../cleanflight/src/main/drivers/sdcard.c ****     spiTransferByte(sdcard.instance, 0xFF);
 945              	 .loc 1 365 0
 946 0048 054B     	 ldr r3,.L70
 947 004a D3F84630 	 ldr r3,[r3,#70]
 948 004e 1846     	 mov r0,r3
 949 0050 FF21     	 movs r1,#255
 950 0052 FFF7FEFF 	 bl spiTransferByte
 366:../cleanflight/src/main/drivers/sdcard.c **** 
 367:../cleanflight/src/main/drivers/sdcard.c ****     return SDCARD_RECEIVE_SUCCESS;
 951              	 .loc 1 367 0
 952 0056 0023     	 movs r3,#0
 953              	.L68:
 368:../cleanflight/src/main/drivers/sdcard.c **** }
 954              	 .loc 1 368 0
 955 0058 1846     	 mov r0,r3
 956 005a 1037     	 adds r7,r7,#16
 957              	.LCFI52:
 958              	 .cfi_def_cfa_offset 8
 959 005c BD46     	 mov sp,r7
 960              	.LCFI53:
 961              	 .cfi_def_cfa_register 13
 962              	 
 963 005e 80BD     	 pop {r7,pc}
 964              	.L71:
 965              	 .align 2
 966              	.L70:
 967 0060 00000000 	 .word sdcard
 968              	 .cfi_endproc
 969              	.LFE542:
 971              	 .section .text.sdcard_sendDataBlockFinish,"ax",%progbits
 972              	 .align 2
 973              	 .thumb
 974              	 .thumb_func
 976              	sdcard_sendDataBlockFinish:
 977              	.LFB543:
 369:../cleanflight/src/main/drivers/sdcard.c **** 
 370:../cleanflight/src/main/drivers/sdcard.c **** static bool sdcard_sendDataBlockFinish(void)
 371:../cleanflight/src/main/drivers/sdcard.c **** {
 978              	 .loc 1 371 0
 979              	 .cfi_startproc
 980              	 
 981              	 
 982 0000 80B5     	 push {r7,lr}
 983              	.LCFI54:
 984              	 .cfi_def_cfa_offset 8
 985              	 .cfi_offset 7,-8
 986              	 .cfi_offset 14,-4
 987 0002 82B0     	 sub sp,sp,#8
 988              	.LCFI55:
 989              	 .cfi_def_cfa_offset 16
 990 0004 00AF     	 add r7,sp,#0
 991              	.LCFI56:
 992              	 .cfi_def_cfa_register 7
 372:../cleanflight/src/main/drivers/sdcard.c **** #ifdef USE_HAL_DRIVER
 373:../cleanflight/src/main/drivers/sdcard.c ****     // Drain anything left in the Rx FIFO (we didn't read it during the write)
 374:../cleanflight/src/main/drivers/sdcard.c ****     //This is necessary here as when using msc there is timing issue
 375:../cleanflight/src/main/drivers/sdcard.c ****     while (LL_SPI_IsActiveFlag_RXNE(sdcard.instance)) {
 376:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.instance->DR;
 377:../cleanflight/src/main/drivers/sdcard.c ****     }
 378:../cleanflight/src/main/drivers/sdcard.c **** #endif
 379:../cleanflight/src/main/drivers/sdcard.c **** 
 380:../cleanflight/src/main/drivers/sdcard.c ****     // Send a dummy CRC
 381:../cleanflight/src/main/drivers/sdcard.c ****     spiTransferByte(sdcard.instance, 0x00);
 993              	 .loc 1 381 0
 994 0006 114B     	 ldr r3,.L74
 995 0008 D3F84630 	 ldr r3,[r3,#70]
 996 000c 1846     	 mov r0,r3
 997 000e 0021     	 movs r1,#0
 998 0010 FFF7FEFF 	 bl spiTransferByte
 382:../cleanflight/src/main/drivers/sdcard.c ****     spiTransferByte(sdcard.instance, 0x00);
 999              	 .loc 1 382 0
 1000 0014 0D4B     	 ldr r3,.L74
 1001 0016 D3F84630 	 ldr r3,[r3,#70]
 1002 001a 1846     	 mov r0,r3
 1003 001c 0021     	 movs r1,#0
 1004 001e FFF7FEFF 	 bl spiTransferByte
 383:../cleanflight/src/main/drivers/sdcard.c **** 
 384:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t dataResponseToken = spiTransferByte(sdcard.instance, 0xFF);
 1005              	 .loc 1 384 0
 1006 0022 0A4B     	 ldr r3,.L74
 1007 0024 D3F84630 	 ldr r3,[r3,#70]
 1008 0028 1846     	 mov r0,r3
 1009 002a FF21     	 movs r1,#255
 1010 002c FFF7FEFF 	 bl spiTransferByte
 1011 0030 0346     	 mov r3,r0
 1012 0032 FB71     	 strb r3,[r7,#7]
 385:../cleanflight/src/main/drivers/sdcard.c **** 
 386:../cleanflight/src/main/drivers/sdcard.c ****     /*
 387:../cleanflight/src/main/drivers/sdcard.c ****      * Check if the card accepted the write (no CRC error / no address error)
 388:../cleanflight/src/main/drivers/sdcard.c ****      *
 389:../cleanflight/src/main/drivers/sdcard.c ****      * The lower 5 bits are structured as follows:
 390:../cleanflight/src/main/drivers/sdcard.c ****      * | 0 | Status  | 1 |
 391:../cleanflight/src/main/drivers/sdcard.c ****      * | 0 | x  x  x | 1 |
 392:../cleanflight/src/main/drivers/sdcard.c ****      *
 393:../cleanflight/src/main/drivers/sdcard.c ****      * Statuses:
 394:../cleanflight/src/main/drivers/sdcard.c ****      * 010 - Data accepted
 395:../cleanflight/src/main/drivers/sdcard.c ****      * 101 - CRC error
 396:../cleanflight/src/main/drivers/sdcard.c ****      * 110 - Write error
 397:../cleanflight/src/main/drivers/sdcard.c ****      */
 398:../cleanflight/src/main/drivers/sdcard.c ****     return (dataResponseToken & 0x1F) == 0x05;
 1013              	 .loc 1 398 0
 1014 0034 FB79     	 ldrb r3,[r7,#7]
 1015 0036 03F01F03 	 and r3,r3,#31
 1016 003a 052B     	 cmp r3,#5
 1017 003c 0CBF     	 ite eq
 1018 003e 0123     	 moveq r3,#1
 1019 0040 0023     	 movne r3,#0
 1020 0042 DBB2     	 uxtb r3,r3
 399:../cleanflight/src/main/drivers/sdcard.c **** }
 1021              	 .loc 1 399 0
 1022 0044 1846     	 mov r0,r3
 1023 0046 0837     	 adds r7,r7,#8
 1024              	.LCFI57:
 1025              	 .cfi_def_cfa_offset 8
 1026 0048 BD46     	 mov sp,r7
 1027              	.LCFI58:
 1028              	 .cfi_def_cfa_register 13
 1029              	 
 1030 004a 80BD     	 pop {r7,pc}
 1031              	.L75:
 1032              	 .align 2
 1033              	.L74:
 1034 004c 00000000 	 .word sdcard
 1035              	 .cfi_endproc
 1036              	.LFE543:
 1038              	 .section .text.sdcard_sendDataBlockBegin,"ax",%progbits
 1039              	 .align 2
 1040              	 .thumb
 1041              	 .thumb_func
 1043              	sdcard_sendDataBlockBegin:
 1044              	.LFB544:
 400:../cleanflight/src/main/drivers/sdcard.c **** 
 401:../cleanflight/src/main/drivers/sdcard.c **** /**
 402:../cleanflight/src/main/drivers/sdcard.c ****  * Begin sending a buffer of SDCARD_BLOCK_SIZE bytes to the SD card.
 403:../cleanflight/src/main/drivers/sdcard.c ****  */
 404:../cleanflight/src/main/drivers/sdcard.c **** static void sdcard_sendDataBlockBegin(const uint8_t *buffer, bool multiBlockWrite)
 405:../cleanflight/src/main/drivers/sdcard.c **** {
 1045              	 .loc 1 405 0
 1046              	 .cfi_startproc
 1047              	 
 1048              	 
 1049 0000 80B5     	 push {r7,lr}
 1050              	.LCFI59:
 1051              	 .cfi_def_cfa_offset 8
 1052              	 .cfi_offset 7,-8
 1053              	 .cfi_offset 14,-4
 1054 0002 82B0     	 sub sp,sp,#8
 1055              	.LCFI60:
 1056              	 .cfi_def_cfa_offset 16
 1057 0004 00AF     	 add r7,sp,#0
 1058              	.LCFI61:
 1059              	 .cfi_def_cfa_register 7
 1060 0006 7860     	 str r0,[r7,#4]
 1061 0008 0B46     	 mov r3,r1
 1062 000a FB70     	 strb r3,[r7,#3]
 406:../cleanflight/src/main/drivers/sdcard.c ****     // Card wants 8 dummy clock cycles between the write command's response and a data block beginn
 407:../cleanflight/src/main/drivers/sdcard.c ****     spiTransferByte(sdcard.instance, 0xFF);
 1063              	 .loc 1 407 0
 1064 000c 124B     	 ldr r3,.L80
 1065 000e D3F84630 	 ldr r3,[r3,#70]
 1066 0012 1846     	 mov r0,r3
 1067 0014 FF21     	 movs r1,#255
 1068 0016 FFF7FEFF 	 bl spiTransferByte
 408:../cleanflight/src/main/drivers/sdcard.c **** 
 409:../cleanflight/src/main/drivers/sdcard.c ****     spiTransferByte(sdcard.instance, multiBlockWrite ? SDCARD_MULTIPLE_BLOCK_WRITE_START_TOKEN : SD
 1069              	 .loc 1 409 0
 1070 001a 0F4B     	 ldr r3,.L80
 1071 001c D3F84620 	 ldr r2,[r3,#70]
 1072 0020 FB78     	 ldrb r3,[r7,#3]
 1073 0022 002B     	 cmp r3,#0
 1074 0024 01D0     	 beq .L77
 1075              	 .loc 1 409 0 is_stmt 0 discriminator 1
 1076 0026 FC23     	 movs r3,#252
 1077 0028 00E0     	 b .L78
 1078              	.L77:
 1079              	 .loc 1 409 0 discriminator 2
 1080 002a FE23     	 movs r3,#254
 1081              	.L78:
 1082              	 .loc 1 409 0 discriminator 4
 1083 002c 1046     	 mov r0,r2
 1084 002e 1946     	 mov r1,r3
 1085 0030 FFF7FEFF 	 bl spiTransferByte
 410:../cleanflight/src/main/drivers/sdcard.c **** 
 411:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.useDMAForTx) {
 1086              	 .loc 1 411 0 is_stmt 1 discriminator 4
 1087 0034 084B     	 ldr r3,.L80
 1088 0036 93F84C30 	 ldrb r3,[r3,#76]
 1089 003a 002B     	 cmp r3,#0
 1090 003c 09D1     	 bne .L76
 412:../cleanflight/src/main/drivers/sdcard.c **** #ifndef XMC4700_F100x2048
 413:../cleanflight/src/main/drivers/sdcard.c **** #if defined(USE_HAL_DRIVER)
 414:../cleanflight/src/main/drivers/sdcard.c ****         LL_DMA_InitTypeDef init;
 415:../cleanflight/src/main/drivers/sdcard.c **** 
 416:../cleanflight/src/main/drivers/sdcard.c ****         LL_DMA_StructInit(&init);
 417:../cleanflight/src/main/drivers/sdcard.c **** 
 418:../cleanflight/src/main/drivers/sdcard.c ****         init.Channel = dmaGetChannel(sdcard.dmaChannel);
 419:../cleanflight/src/main/drivers/sdcard.c ****         init.Mode = LL_DMA_MODE_NORMAL;
 420:../cleanflight/src/main/drivers/sdcard.c ****         init.Direction = LL_DMA_DIRECTION_MEMORY_TO_PERIPH;
 421:../cleanflight/src/main/drivers/sdcard.c **** 
 422:../cleanflight/src/main/drivers/sdcard.c ****         init.PeriphOrM2MSrcAddress = (uint32_t)&sdcard.instance->DR;
 423:../cleanflight/src/main/drivers/sdcard.c ****         init.Priority = LL_DMA_PRIORITY_LOW;
 424:../cleanflight/src/main/drivers/sdcard.c ****         init.PeriphOrM2MSrcIncMode  = LL_DMA_PERIPH_NOINCREMENT;
 425:../cleanflight/src/main/drivers/sdcard.c ****         init.PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_BYTE;
 426:../cleanflight/src/main/drivers/sdcard.c **** 
 427:../cleanflight/src/main/drivers/sdcard.c ****         init.MemoryOrM2MDstAddress = (uint32_t)buffer;
 428:../cleanflight/src/main/drivers/sdcard.c ****         init.MemoryOrM2MDstIncMode = LL_DMA_MEMORY_INCREMENT;
 429:../cleanflight/src/main/drivers/sdcard.c ****         init.MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_BYTE;
 430:../cleanflight/src/main/drivers/sdcard.c **** 
 431:../cleanflight/src/main/drivers/sdcard.c ****         init.NbData = SDCARD_BLOCK_SIZE;
 432:../cleanflight/src/main/drivers/sdcard.c **** 
 433:../cleanflight/src/main/drivers/sdcard.c ****         LL_DMA_DeInit(sdcard.dma->dma, sdcard.dma->stream);
 434:../cleanflight/src/main/drivers/sdcard.c ****         LL_DMA_Init(sdcard.dma->dma, sdcard.dma->stream, &init);
 435:../cleanflight/src/main/drivers/sdcard.c **** 
 436:../cleanflight/src/main/drivers/sdcard.c ****         LL_DMA_EnableStream(sdcard.dma->dma, sdcard.dma->stream);
 437:../cleanflight/src/main/drivers/sdcard.c **** 
 438:../cleanflight/src/main/drivers/sdcard.c ****         LL_SPI_EnableDMAReq_TX(sdcard.instance);
 439:../cleanflight/src/main/drivers/sdcard.c **** 
 440:../cleanflight/src/main/drivers/sdcard.c **** #else
 441:../cleanflight/src/main/drivers/sdcard.c **** 
 442:../cleanflight/src/main/drivers/sdcard.c ****         DMA_InitTypeDef init;
 443:../cleanflight/src/main/drivers/sdcard.c **** 
 444:../cleanflight/src/main/drivers/sdcard.c ****         DMA_StructInit(&init);
 445:../cleanflight/src/main/drivers/sdcard.c **** #ifdef STM32F4
 446:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_Channel = dmaGetChannel(sdcard.dmaChannel);
 447:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_Memory0BaseAddr = (uint32_t) buffer;
 448:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_DIR = DMA_DIR_MemoryToPeripheral;
 449:../cleanflight/src/main/drivers/sdcard.c **** #else
 450:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_M2M = DMA_M2M_Disable;
 451:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_MemoryBaseAddr = (uint32_t) buffer;
 452:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_DIR = DMA_DIR_PeripheralDST;
 453:../cleanflight/src/main/drivers/sdcard.c **** #endif
 454:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_PeripheralBaseAddr = (uint32_t) &sdcard.instance->DR;
 455:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_Priority = DMA_Priority_Low;
 456:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
 457:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_PeripheralDataSize = DMA_PeripheralDataSize_Byte;
 458:../cleanflight/src/main/drivers/sdcard.c **** 
 459:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_MemoryInc = DMA_MemoryInc_Enable;
 460:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_MemoryDataSize = DMA_MemoryDataSize_Byte;
 461:../cleanflight/src/main/drivers/sdcard.c **** 
 462:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_BufferSize = SDCARD_BLOCK_SIZE;
 463:../cleanflight/src/main/drivers/sdcard.c ****         init.DMA_Mode = DMA_Mode_Normal;
 464:../cleanflight/src/main/drivers/sdcard.c **** 
 465:../cleanflight/src/main/drivers/sdcard.c ****         DMA_DeInit(sdcard.dma->ref);
 466:../cleanflight/src/main/drivers/sdcard.c ****         DMA_Init(sdcard.dma->ref, &init);
 467:../cleanflight/src/main/drivers/sdcard.c **** 
 468:../cleanflight/src/main/drivers/sdcard.c ****         DMA_Cmd(sdcard.dma->ref, ENABLE);
 469:../cleanflight/src/main/drivers/sdcard.c **** 
 470:../cleanflight/src/main/drivers/sdcard.c ****         SPI_I2S_DMACmd(sdcard.instance, SPI_I2S_DMAReq_Tx, ENABLE);
 471:../cleanflight/src/main/drivers/sdcard.c **** #endif
 472:../cleanflight/src/main/drivers/sdcard.c **** #endif
 473:../cleanflight/src/main/drivers/sdcard.c ****     } else {
 474:../cleanflight/src/main/drivers/sdcard.c ****         // Send the first chunk now
 475:../cleanflight/src/main/drivers/sdcard.c ****         spiTransfer(sdcard.instance, buffer, NULL, SDCARD_NON_DMA_CHUNK_SIZE);
 1091              	 .loc 1 475 0
 1092 003e 064B     	 ldr r3,.L80
 1093 0040 D3F84630 	 ldr r3,[r3,#70]
 1094 0044 1846     	 mov r0,r3
 1095 0046 7968     	 ldr r1,[r7,#4]
 1096 0048 0022     	 movs r2,#0
 1097 004a 4FF48073 	 mov r3,#256
 1098 004e FFF7FEFF 	 bl spiTransfer
 1099              	.L76:
 476:../cleanflight/src/main/drivers/sdcard.c ****     }
 477:../cleanflight/src/main/drivers/sdcard.c **** }
 1100              	 .loc 1 477 0
 1101 0052 0837     	 adds r7,r7,#8
 1102              	.LCFI62:
 1103              	 .cfi_def_cfa_offset 8
 1104 0054 BD46     	 mov sp,r7
 1105              	.LCFI63:
 1106              	 .cfi_def_cfa_register 13
 1107              	 
 1108 0056 80BD     	 pop {r7,pc}
 1109              	.L81:
 1110              	 .align 2
 1111              	.L80:
 1112 0058 00000000 	 .word sdcard
 1113              	 .cfi_endproc
 1114              	.LFE544:
 1116              	 .section .text.sdcard_receiveCID,"ax",%progbits
 1117              	 .align 2
 1118              	 .thumb
 1119              	 .thumb_func
 1121              	sdcard_receiveCID:
 1122              	.LFB545:
 478:../cleanflight/src/main/drivers/sdcard.c **** 
 479:../cleanflight/src/main/drivers/sdcard.c **** static bool sdcard_receiveCID(void)
 480:../cleanflight/src/main/drivers/sdcard.c **** {
 1123              	 .loc 1 480 0
 1124              	 .cfi_startproc
 1125              	 
 1126              	 
 1127 0000 80B5     	 push {r7,lr}
 1128              	.LCFI64:
 1129              	 .cfi_def_cfa_offset 8
 1130              	 .cfi_offset 7,-8
 1131              	 .cfi_offset 14,-4
 1132 0002 84B0     	 sub sp,sp,#16
 1133              	.LCFI65:
 1134              	 .cfi_def_cfa_offset 24
 1135 0004 00AF     	 add r7,sp,#0
 1136              	.LCFI66:
 1137              	 .cfi_def_cfa_register 7
 481:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t cid[16];
 482:../cleanflight/src/main/drivers/sdcard.c **** 
 483:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard_receiveDataBlock(cid, sizeof(cid)) != SDCARD_RECEIVE_SUCCESS) {
 1138              	 .loc 1 483 0
 1139 0006 3B46     	 mov r3,r7
 1140 0008 1846     	 mov r0,r3
 1141 000a 1021     	 movs r1,#16
 1142 000c FFF7FEFF 	 bl sdcard_receiveDataBlock
 1143 0010 0346     	 mov r3,r0
 1144 0012 002B     	 cmp r3,#0
 1145 0014 01D0     	 beq .L83
 484:../cleanflight/src/main/drivers/sdcard.c ****         return false;
 1146              	 .loc 1 484 0
 1147 0016 0023     	 movs r3,#0
 1148 0018 57E0     	 b .L85
 1149              	.L83:
 485:../cleanflight/src/main/drivers/sdcard.c ****     }
 486:../cleanflight/src/main/drivers/sdcard.c **** 
 487:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.manufacturerID = cid[0];
 1150              	 .loc 1 487 0
 1151 001a 3A78     	 ldrb r2,[r7]
 1152 001c 2D4B     	 ldr r3,.L86
 1153 001e 83F82720 	 strb r2,[r3,#39]
 488:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.oemID = (cid[1] << 8) | cid[2];
 1154              	 .loc 1 488 0
 1155 0022 7B78     	 ldrb r3,[r7,#1]
 1156 0024 1B02     	 lsls r3,r3,#8
 1157 0026 9AB2     	 uxth r2,r3
 1158 0028 BB78     	 ldrb r3,[r7,#2]
 1159 002a 9BB2     	 uxth r3,r3
 1160 002c 1343     	 orrs r3,r3,r2
 1161 002e 9BB2     	 uxth r3,r3
 1162 0030 9AB2     	 uxth r2,r3
 1163 0032 284B     	 ldr r3,.L86
 1164 0034 A3F82520 	 strh r2,[r3,#37]
 489:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productName[0] = cid[3];
 1165              	 .loc 1 489 0
 1166 0038 FA78     	 ldrb r2,[r7,#3]
 1167 003a 264B     	 ldr r3,.L86
 1168 003c 83F82820 	 strb r2,[r3,#40]
 490:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productName[1] = cid[4];
 1169              	 .loc 1 490 0
 1170 0040 3A79     	 ldrb r2,[r7,#4]
 1171 0042 244B     	 ldr r3,.L86
 1172 0044 83F82920 	 strb r2,[r3,#41]
 491:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productName[2] = cid[5];
 1173              	 .loc 1 491 0
 1174 0048 7A79     	 ldrb r2,[r7,#5]
 1175 004a 224B     	 ldr r3,.L86
 1176 004c 83F82A20 	 strb r2,[r3,#42]
 492:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productName[3] = cid[6];
 1177              	 .loc 1 492 0
 1178 0050 BA79     	 ldrb r2,[r7,#6]
 1179 0052 204B     	 ldr r3,.L86
 1180 0054 83F82B20 	 strb r2,[r3,#43]
 493:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productName[4] = cid[7];
 1181              	 .loc 1 493 0
 1182 0058 FA79     	 ldrb r2,[r7,#7]
 1183 005a 1E4B     	 ldr r3,.L86
 1184 005c 83F82C20 	 strb r2,[r3,#44]
 494:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productRevisionMajor = cid[8] >> 4;
 1185              	 .loc 1 494 0
 1186 0060 3B7A     	 ldrb r3,[r7,#8]
 1187 0062 1B09     	 lsrs r3,r3,#4
 1188 0064 DAB2     	 uxtb r2,r3
 1189 0066 1B4B     	 ldr r3,.L86
 1190 0068 83F83120 	 strb r2,[r3,#49]
 495:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productRevisionMinor = cid[8] & 0x0F;
 1191              	 .loc 1 495 0
 1192 006c 3B7A     	 ldrb r3,[r7,#8]
 1193 006e 03F00F03 	 and r3,r3,#15
 1194 0072 DAB2     	 uxtb r2,r3
 1195 0074 174B     	 ldr r3,.L86
 1196 0076 83F83220 	 strb r2,[r3,#50]
 496:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productSerial = (cid[9] << 24) | (cid[10] << 16) | (cid[11] << 8) | cid[12];
 1197              	 .loc 1 496 0
 1198 007a 7B7A     	 ldrb r3,[r7,#9]
 1199 007c 1A06     	 lsls r2,r3,#24
 1200 007e BB7A     	 ldrb r3,[r7,#10]
 1201 0080 1B04     	 lsls r3,r3,#16
 1202 0082 1A43     	 orrs r2,r2,r3
 1203 0084 FB7A     	 ldrb r3,[r7,#11]
 1204 0086 1B02     	 lsls r3,r3,#8
 1205 0088 1343     	 orrs r3,r3,r2
 1206 008a 3A7B     	 ldrb r2,[r7,#12]
 1207 008c 1343     	 orrs r3,r3,r2
 1208 008e 1A46     	 mov r2,r3
 1209 0090 104B     	 ldr r3,.L86
 1210 0092 C3F82D20 	 str r2,[r3,#45]
 497:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productionYear = (((cid[13] & 0x0F) << 4) | (cid[14] >> 4)) + 2000;
 1211              	 .loc 1 497 0
 1212 0096 7B7B     	 ldrb r3,[r7,#13]
 1213 0098 1B01     	 lsls r3,r3,#4
 1214 009a 9BB2     	 uxth r3,r3
 1215 009c DBB2     	 uxtb r3,r3
 1216 009e 9AB2     	 uxth r2,r3
 1217 00a0 BB7B     	 ldrb r3,[r7,#14]
 1218 00a2 1B09     	 lsrs r3,r3,#4
 1219 00a4 DBB2     	 uxtb r3,r3
 1220 00a6 9BB2     	 uxth r3,r3
 1221 00a8 1343     	 orrs r3,r3,r2
 1222 00aa 9BB2     	 uxth r3,r3
 1223 00ac 9BB2     	 uxth r3,r3
 1224 00ae 03F5FA63 	 add r3,r3,#2000
 1225 00b2 9AB2     	 uxth r2,r3
 1226 00b4 074B     	 ldr r3,.L86
 1227 00b6 A3F83320 	 strh r2,[r3,#51]
 498:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.metadata.productionMonth = cid[14] & 0x0F;
 1228              	 .loc 1 498 0
 1229 00ba BB7B     	 ldrb r3,[r7,#14]
 1230 00bc 03F00F03 	 and r3,r3,#15
 1231 00c0 DAB2     	 uxtb r2,r3
 1232 00c2 044B     	 ldr r3,.L86
 1233 00c4 83F83520 	 strb r2,[r3,#53]
 499:../cleanflight/src/main/drivers/sdcard.c **** 
 500:../cleanflight/src/main/drivers/sdcard.c ****     return true;
 1234              	 .loc 1 500 0
 1235 00c8 0123     	 movs r3,#1
 1236              	.L85:
 501:../cleanflight/src/main/drivers/sdcard.c **** }
 1237              	 .loc 1 501 0 discriminator 1
 1238 00ca 1846     	 mov r0,r3
 1239 00cc 1037     	 adds r7,r7,#16
 1240              	.LCFI67:
 1241              	 .cfi_def_cfa_offset 8
 1242 00ce BD46     	 mov sp,r7
 1243              	.LCFI68:
 1244              	 .cfi_def_cfa_register 13
 1245              	 
 1246 00d0 80BD     	 pop {r7,pc}
 1247              	.L87:
 1248 00d2 00BF     	 .align 2
 1249              	.L86:
 1250 00d4 00000000 	 .word sdcard
 1251              	 .cfi_endproc
 1252              	.LFE545:
 1254              	 .section .text.sdcard_fetchCSD,"ax",%progbits
 1255              	 .align 2
 1256              	 .thumb
 1257              	 .thumb_func
 1259              	sdcard_fetchCSD:
 1260              	.LFB546:
 502:../cleanflight/src/main/drivers/sdcard.c **** 
 503:../cleanflight/src/main/drivers/sdcard.c **** static bool sdcard_fetchCSD(void)
 504:../cleanflight/src/main/drivers/sdcard.c **** {
 1261              	 .loc 1 504 0
 1262              	 .cfi_startproc
 1263              	 
 1264              	 
 1265 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 1266              	.LCFI69:
 1267              	 .cfi_def_cfa_offset 20
 1268              	 .cfi_offset 4,-20
 1269              	 .cfi_offset 5,-16
 1270              	 .cfi_offset 6,-12
 1271              	 .cfi_offset 7,-8
 1272              	 .cfi_offset 14,-4
 1273 0002 87B0     	 sub sp,sp,#28
 1274              	.LCFI70:
 1275              	 .cfi_def_cfa_offset 48
 1276 0004 00AF     	 add r7,sp,#0
 1277              	.LCFI71:
 1278              	 .cfi_def_cfa_register 7
 505:../cleanflight/src/main/drivers/sdcard.c ****     uint32_t readBlockLen, blockCount, blockCountMult;
 506:../cleanflight/src/main/drivers/sdcard.c ****     uint64_t capacityBytes;
 507:../cleanflight/src/main/drivers/sdcard.c **** 
 508:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_select();
 1279              	 .loc 1 508 0
 1280 0006 FFF7FEFF 	 bl sdcard_select
 509:../cleanflight/src/main/drivers/sdcard.c **** 
 510:../cleanflight/src/main/drivers/sdcard.c ****     /* The CSD command's data block should always arrive within 8 idle clock cycles (SD card spec).
 511:../cleanflight/src/main/drivers/sdcard.c ****      * the information about card latency is stored in the CSD register itself, so we can't use tha
 512:../cleanflight/src/main/drivers/sdcard.c ****      */
 513:../cleanflight/src/main/drivers/sdcard.c ****     bool success =
 514:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_sendCommand(SDCARD_COMMAND_SEND_CSD, 0) == 0
 1281              	 .loc 1 514 0
 1282 000a 0920     	 movs r0,#9
 1283 000c 0021     	 movs r1,#0
 1284 000e FFF7FEFF 	 bl sdcard_sendCommand
 1285 0012 0346     	 mov r3,r0
 515:../cleanflight/src/main/drivers/sdcard.c ****         && sdcard_receiveDataBlock((uint8_t*) &sdcard.csd, sizeof(sdcard.csd)) == SDCARD_RECEIVE_SU
 516:../cleanflight/src/main/drivers/sdcard.c ****         && SDCARD_GET_CSD_FIELD(sdcard.csd, 1, TRAILER) == 1;
 1286              	 .loc 1 516 0
 1287 0014 002B     	 cmp r3,#0
 1288 0016 10D1     	 bne .L89
 515:../cleanflight/src/main/drivers/sdcard.c ****         && sdcard_receiveDataBlock((uint8_t*) &sdcard.csd, sizeof(sdcard.csd)) == SDCARD_RECEIVE_SU
 1289              	 .loc 1 515 0
 1290 0018 3C48     	 ldr r0,.L97
 1291 001a 1021     	 movs r1,#16
 1292 001c FFF7FEFF 	 bl sdcard_receiveDataBlock
 1293 0020 0346     	 mov r3,r0
 1294 0022 002B     	 cmp r3,#0
 1295 0024 09D1     	 bne .L89
 1296              	 .loc 1 516 0 discriminator 3
 1297 0026 3948     	 ldr r0,.L97
 1298 0028 7F21     	 movs r1,#127
 1299 002a 0122     	 movs r2,#1
 1300 002c FFF7FEFF 	 bl readBitfield
 1301 0030 0346     	 mov r3,r0
 1302 0032 012B     	 cmp r3,#1
 1303 0034 01D1     	 bne .L89
 1304              	 .loc 1 516 0 is_stmt 0 discriminator 2
 1305 0036 0123     	 movs r3,#1
 1306 0038 00E0     	 b .L90
 1307              	.L89:
 1308              	 .loc 1 516 0 discriminator 1
 1309 003a 0023     	 movs r3,#0
 1310              	.L90:
 513:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_sendCommand(SDCARD_COMMAND_SEND_CSD, 0) == 0
 1311              	 .loc 1 513 0 is_stmt 1
 1312 003c FB75     	 strb r3,[r7,#23]
 1313 003e FB7D     	 ldrb r3,[r7,#23]
 1314 0040 03F00103 	 and r3,r3,#1
 1315 0044 FB75     	 strb r3,[r7,#23]
 517:../cleanflight/src/main/drivers/sdcard.c **** 
 518:../cleanflight/src/main/drivers/sdcard.c ****     if (success) {
 1316              	 .loc 1 518 0
 1317 0046 FB7D     	 ldrb r3,[r7,#23]
 1318 0048 002B     	 cmp r3,#0
 1319 004a 58D0     	 beq .L91
 519:../cleanflight/src/main/drivers/sdcard.c ****         switch (SDCARD_GET_CSD_FIELD(sdcard.csd, 1, CSD_STRUCTURE_VER)) {
 1320              	 .loc 1 519 0
 1321 004c 2F48     	 ldr r0,.L97
 1322 004e 0021     	 movs r1,#0
 1323 0050 0222     	 movs r2,#2
 1324 0052 FFF7FEFF 	 bl readBitfield
 1325 0056 0346     	 mov r3,r0
 1326 0058 002B     	 cmp r3,#0
 1327 005a 02D0     	 beq .L93
 1328 005c 012B     	 cmp r3,#1
 1329 005e 40D0     	 beq .L94
 1330 0060 4BE0     	 b .L96
 1331              	.L93:
 520:../cleanflight/src/main/drivers/sdcard.c ****             case SDCARD_CSD_STRUCTURE_VERSION_1:
 521:../cleanflight/src/main/drivers/sdcard.c ****                 // Block size in bytes (doesn't have to be 512)
 522:../cleanflight/src/main/drivers/sdcard.c ****                 readBlockLen = 1 << SDCARD_GET_CSD_FIELD(sdcard.csd, 1, READ_BLOCK_LEN);
 1332              	 .loc 1 522 0
 1333 0062 2A48     	 ldr r0,.L97
 1334 0064 2C21     	 movs r1,#44
 1335 0066 0422     	 movs r2,#4
 1336 0068 FFF7FEFF 	 bl readBitfield
 1337 006c 0346     	 mov r3,r0
 1338 006e 1A46     	 mov r2,r3
 1339 0070 0123     	 movs r3,#1
 1340 0072 9340     	 lsls r3,r3,r2
 1341 0074 3B61     	 str r3,[r7,#16]
 523:../cleanflight/src/main/drivers/sdcard.c ****                 blockCountMult = 1 << (SDCARD_GET_CSD_FIELD(sdcard.csd, 1, CSIZE_MULT) + 2);
 1342              	 .loc 1 523 0
 1343 0076 2548     	 ldr r0,.L97
 1344 0078 4E21     	 movs r1,#78
 1345 007a 0322     	 movs r2,#3
 1346 007c FFF7FEFF 	 bl readBitfield
 1347 0080 0346     	 mov r3,r0
 1348 0082 0233     	 adds r3,r3,#2
 1349 0084 1A46     	 mov r2,r3
 1350 0086 0123     	 movs r3,#1
 1351 0088 9340     	 lsls r3,r3,r2
 1352 008a FB60     	 str r3,[r7,#12]
 524:../cleanflight/src/main/drivers/sdcard.c ****                 blockCount = (SDCARD_GET_CSD_FIELD(sdcard.csd, 1, CSIZE) + 1) * blockCountMult;
 1353              	 .loc 1 524 0
 1354 008c 1F48     	 ldr r0,.L97
 1355 008e 3621     	 movs r1,#54
 1356 0090 0C22     	 movs r2,#12
 1357 0092 FFF7FEFF 	 bl readBitfield
 1358 0096 0346     	 mov r3,r0
 1359 0098 0133     	 adds r3,r3,#1
 1360 009a FA68     	 ldr r2,[r7,#12]
 1361 009c 02FB03F3 	 mul r3,r2,r3
 1362 00a0 BB60     	 str r3,[r7,#8]
 525:../cleanflight/src/main/drivers/sdcard.c **** 
 526:../cleanflight/src/main/drivers/sdcard.c ****                 // We could do this in 32 bits but it makes the 2GB case awkward
 527:../cleanflight/src/main/drivers/sdcard.c ****                 capacityBytes = (uint64_t) blockCount * readBlockLen;
 1363              	 .loc 1 527 0
 1364 00a2 BB68     	 ldr r3,[r7,#8]
 1365 00a4 1846     	 mov r0,r3
 1366 00a6 4FF00001 	 mov r1,#0
 1367 00aa 3B69     	 ldr r3,[r7,#16]
 1368 00ac 1A46     	 mov r2,r3
 1369 00ae 4FF00003 	 mov r3,#0
 1370 00b2 02FB01FE 	 mul lr,r2,r1
 1371 00b6 00FB03F6 	 mul r6,r0,r3
 1372 00ba 7644     	 add r6,r6,lr
 1373 00bc A0FB0223 	 umull r2,r3,r0,r2
 1374 00c0 F118     	 adds r1,r6,r3
 1375 00c2 0B46     	 mov r3,r1
 1376 00c4 C7E90023 	 strd r2,[r7]
 1377 00c8 C7E90023 	 strd r2,[r7]
 528:../cleanflight/src/main/drivers/sdcard.c **** 
 529:../cleanflight/src/main/drivers/sdcard.c ****                 // Re-express that capacity (max 2GB) in our standard 512-byte block size
 530:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard.metadata.numBlocks = capacityBytes / SDCARD_BLOCK_SIZE;
 1378              	 .loc 1 530 0
 1379 00cc D7E90023 	 ldrd r2,[r7]
 1380 00d0 540A     	 lsrs r4,r2,#9
 1381 00d2 44EAC354 	 orr r4,r4,r3,lsl#23
 1382 00d6 5D0A     	 lsrs r5,r3,#9
 1383 00d8 2246     	 mov r2,r4
 1384 00da 0D4B     	 ldr r3,.L97+4
 1385 00dc C3F82120 	 str r2,[r3,#33]
 531:../cleanflight/src/main/drivers/sdcard.c ****             break;
 1386              	 .loc 1 531 0
 1387 00e0 0DE0     	 b .L91
 1388              	.L94:
 532:../cleanflight/src/main/drivers/sdcard.c ****             case SDCARD_CSD_STRUCTURE_VERSION_2:
 533:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard.metadata.numBlocks = (SDCARD_GET_CSD_FIELD(sdcard.csd, 2, CSIZE) + 1) * 1024
 1389              	 .loc 1 533 0
 1390 00e2 0A48     	 ldr r0,.L97
 1391 00e4 3A21     	 movs r1,#58
 1392 00e6 1622     	 movs r2,#22
 1393 00e8 FFF7FEFF 	 bl readBitfield
 1394 00ec 0346     	 mov r3,r0
 1395 00ee 0133     	 adds r3,r3,#1
 1396 00f0 9B02     	 lsls r3,r3,#10
 1397 00f2 074A     	 ldr r2,.L97+4
 1398 00f4 C2F82130 	 str r3,[r2,#33]
 534:../cleanflight/src/main/drivers/sdcard.c ****             break;
 1399              	 .loc 1 534 0
 1400 00f8 01E0     	 b .L91
 1401              	.L96:
 535:../cleanflight/src/main/drivers/sdcard.c ****             default:
 536:../cleanflight/src/main/drivers/sdcard.c ****                 success = false;
 1402              	 .loc 1 536 0
 1403 00fa 0023     	 movs r3,#0
 1404 00fc FB75     	 strb r3,[r7,#23]
 1405              	.L91:
 537:../cleanflight/src/main/drivers/sdcard.c ****         }
 538:../cleanflight/src/main/drivers/sdcard.c ****     }
 539:../cleanflight/src/main/drivers/sdcard.c **** 
 540:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_deselect();
 1406              	 .loc 1 540 0
 1407 00fe FFF7FEFF 	 bl sdcard_deselect
 541:../cleanflight/src/main/drivers/sdcard.c **** 
 542:../cleanflight/src/main/drivers/sdcard.c ****     return success;
 1408              	 .loc 1 542 0
 1409 0102 FB7D     	 ldrb r3,[r7,#23]
 543:../cleanflight/src/main/drivers/sdcard.c **** }
 1410              	 .loc 1 543 0
 1411 0104 1846     	 mov r0,r3
 1412 0106 1C37     	 adds r7,r7,#28
 1413              	.LCFI72:
 1414              	 .cfi_def_cfa_offset 20
 1415 0108 BD46     	 mov sp,r7
 1416              	.LCFI73:
 1417              	 .cfi_def_cfa_register 13
 1418              	 
 1419 010a F0BD     	 pop {r4,r5,r6,r7,pc}
 1420              	.L98:
 1421              	 .align 2
 1422              	.L97:
 1423 010c 36000000 	 .word sdcard+54
 1424 0110 00000000 	 .word sdcard
 1425              	 .cfi_endproc
 1426              	.LFE546:
 1428              	 .section .text.sdcard_checkInitDone,"ax",%progbits
 1429              	 .align 2
 1430              	 .thumb
 1431              	 .thumb_func
 1433              	sdcard_checkInitDone:
 1434              	.LFB547:
 544:../cleanflight/src/main/drivers/sdcard.c **** 
 545:../cleanflight/src/main/drivers/sdcard.c **** /**
 546:../cleanflight/src/main/drivers/sdcard.c ****  * Check if the SD Card has completed its startup sequence. Must be called with sdcard.state == SDC
 547:../cleanflight/src/main/drivers/sdcard.c ****  *
 548:../cleanflight/src/main/drivers/sdcard.c ****  * Returns true if the card has finished its init process.
 549:../cleanflight/src/main/drivers/sdcard.c ****  */
 550:../cleanflight/src/main/drivers/sdcard.c **** static bool sdcard_checkInitDone(void)
 551:../cleanflight/src/main/drivers/sdcard.c **** {
 1435              	 .loc 1 551 0
 1436              	 .cfi_startproc
 1437              	 
 1438              	 
 1439 0000 80B5     	 push {r7,lr}
 1440              	.LCFI74:
 1441              	 .cfi_def_cfa_offset 8
 1442              	 .cfi_offset 7,-8
 1443              	 .cfi_offset 14,-4
 1444 0002 82B0     	 sub sp,sp,#8
 1445              	.LCFI75:
 1446              	 .cfi_def_cfa_offset 16
 1447 0004 00AF     	 add r7,sp,#0
 1448              	.LCFI76:
 1449              	 .cfi_def_cfa_register 7
 552:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_select();
 1450              	 .loc 1 552 0
 1451 0006 FFF7FEFF 	 bl sdcard_select
 553:../cleanflight/src/main/drivers/sdcard.c **** 
 554:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t status = sdcard_sendAppCommand(SDCARD_ACOMMAND_SEND_OP_COND, sdcard.version == 2 ? 1 <<
 1452              	 .loc 1 554 0
 1453 000a 0D4B     	 ldr r3,.L103
 1454 000c 9B7D     	 ldrb r3,[r3,#22]
 1455 000e 022B     	 cmp r3,#2
 1456 0010 02D1     	 bne .L100
 1457              	 .loc 1 554 0 is_stmt 0 discriminator 1
 1458 0012 4FF08043 	 mov r3,#1073741824
 1459 0016 00E0     	 b .L101
 1460              	.L100:
 1461              	 .loc 1 554 0 discriminator 2
 1462 0018 0023     	 movs r3,#0
 1463              	.L101:
 1464              	 .loc 1 554 0 discriminator 4
 1465 001a 2920     	 movs r0,#41
 1466 001c 1946     	 mov r1,r3
 1467 001e FFF7FEFF 	 bl sdcard_sendAppCommand
 1468 0022 0346     	 mov r3,r0
 1469 0024 FB71     	 strb r3,[r7,#7]
 555:../cleanflight/src/main/drivers/sdcard.c **** 
 556:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_deselect();
 1470              	 .loc 1 556 0 is_stmt 1 discriminator 4
 1471 0026 FFF7FEFF 	 bl sdcard_deselect
 557:../cleanflight/src/main/drivers/sdcard.c **** 
 558:../cleanflight/src/main/drivers/sdcard.c ****     // When card init is complete, the idle bit in the response becomes zero.
 559:../cleanflight/src/main/drivers/sdcard.c ****     return status == 0x00;
 1472              	 .loc 1 559 0 discriminator 4
 1473 002a FB79     	 ldrb r3,[r7,#7]
 1474 002c 002B     	 cmp r3,#0
 1475 002e 0CBF     	 ite eq
 1476 0030 0123     	 moveq r3,#1
 1477 0032 0023     	 movne r3,#0
 1478 0034 DBB2     	 uxtb r3,r3
 560:../cleanflight/src/main/drivers/sdcard.c **** }
 1479              	 .loc 1 560 0 discriminator 4
 1480 0036 1846     	 mov r0,r3
 1481 0038 0837     	 adds r7,r7,#8
 1482              	.LCFI77:
 1483              	 .cfi_def_cfa_offset 8
 1484 003a BD46     	 mov sp,r7
 1485              	.LCFI78:
 1486              	 .cfi_def_cfa_register 13
 1487              	 
 1488 003c 80BD     	 pop {r7,pc}
 1489              	.L104:
 1490 003e 00BF     	 .align 2
 1491              	.L103:
 1492 0040 00000000 	 .word sdcard
 1493              	 .cfi_endproc
 1494              	.LFE547:
 1496              	 .section .text.sdcard_init,"ax",%progbits
 1497              	 .align 2
 1498              	 .global sdcard_init
 1499              	 .thumb
 1500              	 .thumb_func
 1502              	sdcard_init:
 1503              	.LFB548:
 561:../cleanflight/src/main/drivers/sdcard.c **** 
 562:../cleanflight/src/main/drivers/sdcard.c **** /**
 563:../cleanflight/src/main/drivers/sdcard.c ****  * Begin the initialization process for the SD card. This must be called first before any other sdc
 564:../cleanflight/src/main/drivers/sdcard.c ****  */
 565:../cleanflight/src/main/drivers/sdcard.c **** void sdcard_init(const sdcardConfig_t *config)
 566:../cleanflight/src/main/drivers/sdcard.c **** {
 1504              	 .loc 1 566 0
 1505              	 .cfi_startproc
 1506              	 
 1507              	 
 1508 0000 80B5     	 push {r7,lr}
 1509              	.LCFI79:
 1510              	 .cfi_def_cfa_offset 8
 1511              	 .cfi_offset 7,-8
 1512              	 .cfi_offset 14,-4
 1513 0002 84B0     	 sub sp,sp,#16
 1514              	.LCFI80:
 1515              	 .cfi_def_cfa_offset 24
 1516 0004 00AF     	 add r7,sp,#0
 1517              	.LCFI81:
 1518              	 .cfi_def_cfa_register 7
 1519 0006 7860     	 str r0,[r7,#4]
 567:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.enabled = config->enabled;
 1520              	 .loc 1 567 0
 1521 0008 7B68     	 ldr r3,[r7,#4]
 1522 000a 5B78     	 ldrb r3,[r3,#1]
 1523 000c 002B     	 cmp r3,#0
 1524 000e 14BF     	 ite ne
 1525 0010 0123     	 movne r3,#1
 1526 0012 0023     	 moveq r3,#0
 1527 0014 DAB2     	 uxtb r2,r3
 1528 0016 5F4B     	 ldr r3,.L114
 1529 0018 83F84A20 	 strb r2,[r3,#74]
 568:../cleanflight/src/main/drivers/sdcard.c ****     if (!sdcard.enabled) {
 1530              	 .loc 1 568 0
 1531 001c 5D4B     	 ldr r3,.L114
 1532 001e 93F84A30 	 ldrb r3,[r3,#74]
 1533 0022 83F00103 	 eor r3,r3,#1
 1534 0026 DBB2     	 uxtb r3,r3
 1535 0028 002B     	 cmp r3,#0
 1536 002a 04D0     	 beq .L106
 569:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.state = SDCARD_STATE_NOT_PRESENT;
 1537              	 .loc 1 569 0
 1538 002c 594B     	 ldr r3,.L114
 1539 002e 0022     	 movs r2,#0
 1540 0030 83F82020 	 strb r2,[r3,#32]
 570:../cleanflight/src/main/drivers/sdcard.c ****         return;
 1541              	 .loc 1 570 0
 1542 0034 ABE0     	 b .L105
 1543              	.L106:
 571:../cleanflight/src/main/drivers/sdcard.c ****     }
 572:../cleanflight/src/main/drivers/sdcard.c **** 
 573:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.instance = spiInstanceByDevice(config->device);
 1544              	 .loc 1 573 0
 1545 0036 7B68     	 ldr r3,[r7,#4]
 1546 0038 9B78     	 ldrb r3,[r3,#2]
 1547 003a DBB2     	 uxtb r3,r3
 1548 003c 5BB2     	 sxtb r3,r3
 1549 003e 1846     	 mov r0,r3
 1550 0040 FFF7FEFF 	 bl spiInstanceByDevice
 1551 0044 0246     	 mov r2,r0
 1552 0046 534B     	 ldr r3,.L114
 1553 0048 C3F84620 	 str r2,[r3,#70]
 574:../cleanflight/src/main/drivers/sdcard.c **** 
 575:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.useDMAForTx = config->useDma;
 1554              	 .loc 1 575 0
 1555 004c 7B68     	 ldr r3,[r7,#4]
 1556 004e 1B78     	 ldrb r3,[r3]
 1557 0050 002B     	 cmp r3,#0
 1558 0052 14BF     	 ite ne
 1559 0054 0123     	 movne r3,#1
 1560 0056 0023     	 moveq r3,#0
 1561 0058 DAB2     	 uxtb r2,r3
 1562 005a 4E4B     	 ldr r3,.L114
 1563 005c 83F84C20 	 strb r2,[r3,#76]
 576:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.useDMAForTx) {
 577:../cleanflight/src/main/drivers/sdcard.c **** #ifndef XMC4700_F100x2048
 578:../cleanflight/src/main/drivers/sdcard.c **** #if defined(STM32F4) || defined(STM32F7)
 579:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.dmaChannel = config->dmaChannel;
 580:../cleanflight/src/main/drivers/sdcard.c **** #endif
 581:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.dma = dmaGetDescriptorByIdentifier(config->dmaIdentifier);
 582:../cleanflight/src/main/drivers/sdcard.c ****         dmaInit(config->dmaIdentifier, OWNER_SDCARD, 0);
 583:../cleanflight/src/main/drivers/sdcard.c **** #endif
 584:../cleanflight/src/main/drivers/sdcard.c ****     }
 585:../cleanflight/src/main/drivers/sdcard.c **** 
 586:../cleanflight/src/main/drivers/sdcard.c ****     if (config->chipSelectTag) {
 1564              	 .loc 1 586 0
 1565 0060 7B68     	 ldr r3,[r7,#4]
 1566 0062 1B79     	 ldrb r3,[r3,#4]
 1567 0064 002B     	 cmp r3,#0
 1568 0066 18D0     	 beq .L108
 587:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.chipSelectPin = IOGetByTag(config->chipSelectTag);
 1569              	 .loc 1 587 0
 1570 0068 7B68     	 ldr r3,[r7,#4]
 1571 006a 1B79     	 ldrb r3,[r3,#4]
 1572 006c 1846     	 mov r0,r3
 1573 006e FFF7FEFF 	 bl IOGetByTag
 1574 0072 0246     	 mov r2,r0
 1575 0074 474B     	 ldr r3,.L114
 1576 0076 C3F85120 	 str r2,[r3,#81]
 588:../cleanflight/src/main/drivers/sdcard.c ****         IOInit(sdcard.chipSelectPin, OWNER_SDCARD_CS, 0);
 1577              	 .loc 1 588 0
 1578 007a 464B     	 ldr r3,.L114
 1579 007c D3F85130 	 ldr r3,[r3,#81]
 1580 0080 1846     	 mov r0,r3
 1581 0082 1821     	 movs r1,#24
 1582 0084 0022     	 movs r2,#0
 1583 0086 FFF7FEFF 	 bl IOInit
 589:../cleanflight/src/main/drivers/sdcard.c ****         IOConfigGPIO(sdcard.chipSelectPin, SPI_IO_CS_CFG);
 1584              	 .loc 1 589 0
 1585 008a 424B     	 ldr r3,.L114
 1586 008c D3F85130 	 ldr r3,[r3,#81]
 1587 0090 1846     	 mov r0,r3
 1588 0092 8121     	 movs r1,#129
 1589 0094 FFF7FEFF 	 bl IOConfigGPIO
 1590 0098 0CE0     	 b .L109
 1591              	.L108:
 590:../cleanflight/src/main/drivers/sdcard.c ****     } else {
 591:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.chipSelectPin = IO_NONE;
 1592              	 .loc 1 591 0
 1593 009a 3E4B     	 ldr r3,.L114
 1594 009c 0022     	 movs r2,#0
 1595 009e 83F85120 	 strb r2,[r3,#81]
 1596 00a2 0022     	 movs r2,#0
 1597 00a4 83F85220 	 strb r2,[r3,#82]
 1598 00a8 0022     	 movs r2,#0
 1599 00aa 83F85320 	 strb r2,[r3,#83]
 1600 00ae 0022     	 movs r2,#0
 1601 00b0 83F85420 	 strb r2,[r3,#84]
 1602              	.L109:
 592:../cleanflight/src/main/drivers/sdcard.c ****     }
 593:../cleanflight/src/main/drivers/sdcard.c **** 
 594:../cleanflight/src/main/drivers/sdcard.c ****     if (config->cardDetectTag) {
 1603              	 .loc 1 594 0
 1604 00b4 7B68     	 ldr r3,[r7,#4]
 1605 00b6 DB78     	 ldrb r3,[r3,#3]
 1606 00b8 002B     	 cmp r3,#0
 1607 00ba 13D0     	 beq .L110
 595:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.cardDetectPin = IOGetByTag(config->cardDetectTag);
 1608              	 .loc 1 595 0
 1609 00bc 7B68     	 ldr r3,[r7,#4]
 1610 00be DB78     	 ldrb r3,[r3,#3]
 1611 00c0 1846     	 mov r0,r3
 1612 00c2 FFF7FEFF 	 bl IOGetByTag
 1613 00c6 0246     	 mov r2,r0
 1614 00c8 324B     	 ldr r3,.L114
 1615 00ca C3F84D20 	 str r2,[r3,#77]
 596:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.detectionInverted = config->cardDetectInverted;
 1616              	 .loc 1 596 0
 1617 00ce 7B68     	 ldr r3,[r7,#4]
 1618 00d0 5B79     	 ldrb r3,[r3,#5]
 1619 00d2 002B     	 cmp r3,#0
 1620 00d4 14BF     	 ite ne
 1621 00d6 0123     	 movne r3,#1
 1622 00d8 0023     	 moveq r3,#0
 1623 00da DAB2     	 uxtb r2,r3
 1624 00dc 2D4B     	 ldr r3,.L114
 1625 00de 83F84B20 	 strb r2,[r3,#75]
 1626 00e2 10E0     	 b .L111
 1627              	.L110:
 597:../cleanflight/src/main/drivers/sdcard.c ****     } else {
 598:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.cardDetectPin = IO_NONE;
 1628              	 .loc 1 598 0
 1629 00e4 2B4B     	 ldr r3,.L114
 1630 00e6 0022     	 movs r2,#0
 1631 00e8 83F84D20 	 strb r2,[r3,#77]
 1632 00ec 0022     	 movs r2,#0
 1633 00ee 83F84E20 	 strb r2,[r3,#78]
 1634 00f2 0022     	 movs r2,#0
 1635 00f4 83F84F20 	 strb r2,[r3,#79]
 1636 00f8 0022     	 movs r2,#0
 1637 00fa 83F85020 	 strb r2,[r3,#80]
 599:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.detectionInverted = false;
 1638              	 .loc 1 599 0
 1639 00fe 254B     	 ldr r3,.L114
 1640 0100 0022     	 movs r2,#0
 1641 0102 83F84B20 	 strb r2,[r3,#75]
 1642              	.L111:
 600:../cleanflight/src/main/drivers/sdcard.c ****     }
 601:../cleanflight/src/main/drivers/sdcard.c **** 
 602:../cleanflight/src/main/drivers/sdcard.c ****     // Max frequency is initially 400kHz
 603:../cleanflight/src/main/drivers/sdcard.c ****     spiSetDivisor(sdcard.instance, SDCARD_SPI_INITIALIZATION_CLOCK_DIVIDER);
 1643              	 .loc 1 603 0
 1644 0106 234B     	 ldr r3,.L114
 1645 0108 D3F84630 	 ldr r3,[r3,#70]
 1646 010c 1846     	 mov r0,r3
 1647 010e 4FF40071 	 mov r1,#512
 1648 0112 FFF7FEFF 	 bl spiSetDivisor
 604:../cleanflight/src/main/drivers/sdcard.c **** 
 605:../cleanflight/src/main/drivers/sdcard.c ****     // SDCard wants 1ms minimum delay after power is applied to it
 606:../cleanflight/src/main/drivers/sdcard.c ****     delay(1000);
 1649              	 .loc 1 606 0
 1650 0116 4FF47A70 	 mov r0,#1000
 1651 011a FFF7FEFF 	 bl delay
 607:../cleanflight/src/main/drivers/sdcard.c **** 
 608:../cleanflight/src/main/drivers/sdcard.c ****     // Transmit at least 74 dummy clock cycles with CS high so the SD card can start up
 609:../cleanflight/src/main/drivers/sdcard.c ****     SET_CS_HIGH;
 1652              	 .loc 1 609 0
 1653 011e 1D4B     	 ldr r3,.L114
 1654 0120 D3F85130 	 ldr r3,[r3,#81]
 1655 0124 1846     	 mov r0,r3
 1656 0126 FFF7FEFF 	 bl IOHi
 610:../cleanflight/src/main/drivers/sdcard.c **** 
 611:../cleanflight/src/main/drivers/sdcard.c ****     spiTransfer(sdcard.instance, NULL, NULL, SDCARD_INIT_NUM_DUMMY_BYTES);
 1657              	 .loc 1 611 0
 1658 012a 1A4B     	 ldr r3,.L114
 1659 012c D3F84630 	 ldr r3,[r3,#70]
 1660 0130 1846     	 mov r0,r3
 1661 0132 0021     	 movs r1,#0
 1662 0134 0022     	 movs r2,#0
 1663 0136 0A23     	 movs r3,#10
 1664 0138 FFF7FEFF 	 bl spiTransfer
 612:../cleanflight/src/main/drivers/sdcard.c **** 
 613:../cleanflight/src/main/drivers/sdcard.c ****     // Wait for that transmission to finish before we enable the SDCard, so it receives the require
 614:../cleanflight/src/main/drivers/sdcard.c ****     int time = 100000;
 1665              	 .loc 1 614 0
 1666 013c 164B     	 ldr r3,.L114+4
 1667 013e FB60     	 str r3,[r7,#12]
 615:../cleanflight/src/main/drivers/sdcard.c ****     while (spiIsBusBusy(sdcard.instance)) {
 1668              	 .loc 1 615 0
 1669 0140 0FE0     	 b .L112
 1670              	.L113:
 616:../cleanflight/src/main/drivers/sdcard.c ****         if (time-- == 0) {
 1671              	 .loc 1 616 0
 1672 0142 FB68     	 ldr r3,[r7,#12]
 1673 0144 5A1E     	 subs r2,r3,#1
 1674 0146 FA60     	 str r2,[r7,#12]
 1675 0148 002B     	 cmp r3,#0
 1676 014a 0AD1     	 bne .L112
 617:../cleanflight/src/main/drivers/sdcard.c ****             sdcard.state = SDCARD_STATE_NOT_PRESENT;
 1677              	 .loc 1 617 0
 1678 014c 114B     	 ldr r3,.L114
 1679 014e 0022     	 movs r2,#0
 1680 0150 83F82020 	 strb r2,[r3,#32]
 618:../cleanflight/src/main/drivers/sdcard.c ****             sdcard.failureCount++;
 1681              	 .loc 1 618 0
 1682 0154 0F4B     	 ldr r3,.L114
 1683 0156 5B7D     	 ldrb r3,[r3,#21]
 1684 0158 0133     	 adds r3,r3,#1
 1685 015a DAB2     	 uxtb r2,r3
 1686 015c 0D4B     	 ldr r3,.L114
 1687 015e 5A75     	 strb r2,[r3,#21]
 619:../cleanflight/src/main/drivers/sdcard.c ****             return;
 1688              	 .loc 1 619 0
 1689 0160 15E0     	 b .L105
 1690              	.L112:
 615:../cleanflight/src/main/drivers/sdcard.c ****         if (time-- == 0) {
 1691              	 .loc 1 615 0
 1692 0162 0C4B     	 ldr r3,.L114
 1693 0164 D3F84630 	 ldr r3,[r3,#70]
 1694 0168 1846     	 mov r0,r3
 1695 016a FFF7FEFF 	 bl spiIsBusBusy
 1696 016e 0346     	 mov r3,r0
 1697 0170 002B     	 cmp r3,#0
 1698 0172 E6D1     	 bne .L113
 620:../cleanflight/src/main/drivers/sdcard.c ****         }
 621:../cleanflight/src/main/drivers/sdcard.c ****     }
 622:../cleanflight/src/main/drivers/sdcard.c **** 
 623:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.operationStartTime = millis();
 1699              	 .loc 1 623 0
 1700 0174 FFF7FEFF 	 bl millis
 1701 0178 0246     	 mov r2,r0
 1702 017a 064B     	 ldr r3,.L114
 1703 017c C3F81120 	 str r2,[r3,#17]
 624:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.state = SDCARD_STATE_RESET;
 1704              	 .loc 1 624 0
 1705 0180 044B     	 ldr r3,.L114
 1706 0182 0122     	 movs r2,#1
 1707 0184 83F82020 	 strb r2,[r3,#32]
 625:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.failureCount = 0;
 1708              	 .loc 1 625 0
 1709 0188 024B     	 ldr r3,.L114
 1710 018a 0022     	 movs r2,#0
 1711 018c 5A75     	 strb r2,[r3,#21]
 1712              	.L105:
 626:../cleanflight/src/main/drivers/sdcard.c **** }
 1713              	 .loc 1 626 0
 1714 018e 1037     	 adds r7,r7,#16
 1715              	.LCFI82:
 1716              	 .cfi_def_cfa_offset 8
 1717 0190 BD46     	 mov sp,r7
 1718              	.LCFI83:
 1719              	 .cfi_def_cfa_register 13
 1720              	 
 1721 0192 80BD     	 pop {r7,pc}
 1722              	.L115:
 1723              	 .align 2
 1724              	.L114:
 1725 0194 00000000 	 .word sdcard
 1726 0198 A0860100 	 .word 100000
 1727              	 .cfi_endproc
 1728              	.LFE548:
 1730              	 .section .text.sdcard_setBlockLength,"ax",%progbits
 1731              	 .align 2
 1732              	 .thumb
 1733              	 .thumb_func
 1735              	sdcard_setBlockLength:
 1736              	.LFB549:
 627:../cleanflight/src/main/drivers/sdcard.c **** 
 628:../cleanflight/src/main/drivers/sdcard.c **** static bool sdcard_setBlockLength(uint32_t blockLen)
 629:../cleanflight/src/main/drivers/sdcard.c **** {
 1737              	 .loc 1 629 0
 1738              	 .cfi_startproc
 1739              	 
 1740              	 
 1741 0000 80B5     	 push {r7,lr}
 1742              	.LCFI84:
 1743              	 .cfi_def_cfa_offset 8
 1744              	 .cfi_offset 7,-8
 1745              	 .cfi_offset 14,-4
 1746 0002 84B0     	 sub sp,sp,#16
 1747              	.LCFI85:
 1748              	 .cfi_def_cfa_offset 24
 1749 0004 00AF     	 add r7,sp,#0
 1750              	.LCFI86:
 1751              	 .cfi_def_cfa_register 7
 1752 0006 7860     	 str r0,[r7,#4]
 630:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_select();
 1753              	 .loc 1 630 0
 1754 0008 FFF7FEFF 	 bl sdcard_select
 631:../cleanflight/src/main/drivers/sdcard.c **** 
 632:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t status = sdcard_sendCommand(SDCARD_COMMAND_SET_BLOCKLEN, blockLen);
 1755              	 .loc 1 632 0
 1756 000c 1020     	 movs r0,#16
 1757 000e 7968     	 ldr r1,[r7,#4]
 1758 0010 FFF7FEFF 	 bl sdcard_sendCommand
 1759 0014 0346     	 mov r3,r0
 1760 0016 FB73     	 strb r3,[r7,#15]
 633:../cleanflight/src/main/drivers/sdcard.c **** 
 634:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_deselect();
 1761              	 .loc 1 634 0
 1762 0018 FFF7FEFF 	 bl sdcard_deselect
 635:../cleanflight/src/main/drivers/sdcard.c **** 
 636:../cleanflight/src/main/drivers/sdcard.c ****     return status == 0;
 1763              	 .loc 1 636 0
 1764 001c FB7B     	 ldrb r3,[r7,#15]
 1765 001e 002B     	 cmp r3,#0
 1766 0020 0CBF     	 ite eq
 1767 0022 0123     	 moveq r3,#1
 1768 0024 0023     	 movne r3,#0
 1769 0026 DBB2     	 uxtb r3,r3
 637:../cleanflight/src/main/drivers/sdcard.c **** }
 1770              	 .loc 1 637 0
 1771 0028 1846     	 mov r0,r3
 1772 002a 1037     	 adds r7,r7,#16
 1773              	.LCFI87:
 1774              	 .cfi_def_cfa_offset 8
 1775 002c BD46     	 mov sp,r7
 1776              	.LCFI88:
 1777              	 .cfi_def_cfa_register 13
 1778              	 
 1779 002e 80BD     	 pop {r7,pc}
 1780              	 .cfi_endproc
 1781              	.LFE549:
 1783              	 .section .text.sdcard_isReady,"ax",%progbits
 1784              	 .align 2
 1785              	 .thumb
 1786              	 .thumb_func
 1788              	sdcard_isReady:
 1789              	.LFB550:
 638:../cleanflight/src/main/drivers/sdcard.c **** 
 639:../cleanflight/src/main/drivers/sdcard.c **** /*
 640:../cleanflight/src/main/drivers/sdcard.c ****  * Returns true if the card is ready to accept read/write commands.
 641:../cleanflight/src/main/drivers/sdcard.c ****  */
 642:../cleanflight/src/main/drivers/sdcard.c **** static bool sdcard_isReady(void)
 643:../cleanflight/src/main/drivers/sdcard.c **** {
 1790              	 .loc 1 643 0
 1791              	 .cfi_startproc
 1792              	 
 1793              	 
 1794              	 
 1795 0000 80B4     	 push {r7}
 1796              	.LCFI89:
 1797              	 .cfi_def_cfa_offset 4
 1798              	 .cfi_offset 7,-4
 1799 0002 00AF     	 add r7,sp,#0
 1800              	.LCFI90:
 1801              	 .cfi_def_cfa_register 7
 644:../cleanflight/src/main/drivers/sdcard.c ****     return sdcard.state == SDCARD_STATE_READY || sdcard.state == SDCARD_STATE_WRITING_MULTIPLE_BLOC
 1802              	 .loc 1 644 0
 1803 0004 0A4B     	 ldr r3,.L123
 1804 0006 93F82030 	 ldrb r3,[r3,#32]
 1805 000a 042B     	 cmp r3,#4
 1806 000c 04D0     	 beq .L119
 1807              	 .loc 1 644 0 is_stmt 0 discriminator 2
 1808 000e 084B     	 ldr r3,.L123
 1809 0010 93F82030 	 ldrb r3,[r3,#32]
 1810 0014 082B     	 cmp r3,#8
 1811 0016 01D1     	 bne .L120
 1812              	.L119:
 1813              	 .loc 1 644 0 discriminator 3
 1814 0018 0123     	 movs r3,#1
 1815 001a 00E0     	 b .L121
 1816              	.L120:
 1817              	 .loc 1 644 0 discriminator 4
 1818 001c 0023     	 movs r3,#0
 1819              	.L121:
 1820              	 .loc 1 644 0 discriminator 6
 1821 001e 03F00103 	 and r3,r3,#1
 1822 0022 DBB2     	 uxtb r3,r3
 645:../cleanflight/src/main/drivers/sdcard.c **** }
 1823              	 .loc 1 645 0 is_stmt 1 discriminator 6
 1824 0024 1846     	 mov r0,r3
 1825 0026 BD46     	 mov sp,r7
 1826              	.LCFI91:
 1827              	 .cfi_def_cfa_register 13
 1828              	 
 1829 0028 5DF8047B 	 ldr r7,[sp],#4
 1830              	.LCFI92:
 1831              	 .cfi_restore 7
 1832              	 .cfi_def_cfa_offset 0
 1833 002c 7047     	 bx lr
 1834              	.L124:
 1835 002e 00BF     	 .align 2
 1836              	.L123:
 1837 0030 00000000 	 .word sdcard
 1838              	 .cfi_endproc
 1839              	.LFE550:
 1841              	 .section .text.sdcard_endWriteBlocks,"ax",%progbits
 1842              	 .align 2
 1843              	 .thumb
 1844              	 .thumb_func
 1846              	sdcard_endWriteBlocks:
 1847              	.LFB551:
 646:../cleanflight/src/main/drivers/sdcard.c **** 
 647:../cleanflight/src/main/drivers/sdcard.c **** /**
 648:../cleanflight/src/main/drivers/sdcard.c ****  * Send the stop-transmission token to complete a multi-block write.
 649:../cleanflight/src/main/drivers/sdcard.c ****  *
 650:../cleanflight/src/main/drivers/sdcard.c ****  * Returns:
 651:../cleanflight/src/main/drivers/sdcard.c ****  *     SDCARD_OPERATION_IN_PROGRESS - We're now waiting for that stop to complete, the card will en
 652:../cleanflight/src/main/drivers/sdcard.c ****  *                                    the SDCARD_STATE_STOPPING_MULTIPLE_BLOCK_WRITE state.
 653:../cleanflight/src/main/drivers/sdcard.c ****  *     SDCARD_OPERATION_SUCCESS     - The multi-block write finished immediately, the card will ent
 654:../cleanflight/src/main/drivers/sdcard.c ****  *                                    the SDCARD_READY state.
 655:../cleanflight/src/main/drivers/sdcard.c ****  *
 656:../cleanflight/src/main/drivers/sdcard.c ****  */
 657:../cleanflight/src/main/drivers/sdcard.c **** static sdcardOperationStatus_e sdcard_endWriteBlocks(void)
 658:../cleanflight/src/main/drivers/sdcard.c **** {
 1848              	 .loc 1 658 0
 1849              	 .cfi_startproc
 1850              	 
 1851              	 
 1852 0000 80B5     	 push {r7,lr}
 1853              	.LCFI93:
 1854              	 .cfi_def_cfa_offset 8
 1855              	 .cfi_offset 7,-8
 1856              	 .cfi_offset 14,-4
 1857 0002 00AF     	 add r7,sp,#0
 1858              	.LCFI94:
 1859              	 .cfi_def_cfa_register 7
 659:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.multiWriteBlocksRemain = 0;
 1860              	 .loc 1 659 0
 1861 0004 144B     	 ldr r3,.L128
 1862 0006 0022     	 movs r2,#0
 1863 0008 DA61     	 str r2,[r3,#28]
 660:../cleanflight/src/main/drivers/sdcard.c **** 
 661:../cleanflight/src/main/drivers/sdcard.c ****     // 8 dummy clocks to guarantee N_WR clocks between the last card response and this token
 662:../cleanflight/src/main/drivers/sdcard.c ****     spiTransferByte(sdcard.instance, 0xFF);
 1864              	 .loc 1 662 0
 1865 000a 134B     	 ldr r3,.L128
 1866 000c D3F84630 	 ldr r3,[r3,#70]
 1867 0010 1846     	 mov r0,r3
 1868 0012 FF21     	 movs r1,#255
 1869 0014 FFF7FEFF 	 bl spiTransferByte
 663:../cleanflight/src/main/drivers/sdcard.c **** 
 664:../cleanflight/src/main/drivers/sdcard.c ****     spiTransferByte(sdcard.instance, SDCARD_MULTIPLE_BLOCK_WRITE_STOP_TOKEN);
 1870              	 .loc 1 664 0
 1871 0018 0F4B     	 ldr r3,.L128
 1872 001a D3F84630 	 ldr r3,[r3,#70]
 1873 001e 1846     	 mov r0,r3
 1874 0020 FD21     	 movs r1,#253
 1875 0022 FFF7FEFF 	 bl spiTransferByte
 665:../cleanflight/src/main/drivers/sdcard.c **** 
 666:../cleanflight/src/main/drivers/sdcard.c ****     // Card may choose to raise a busy (non-0xFF) signal after at most N_BR (1 byte) delay
 667:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard_waitForNonIdleByte(1) == 0xFF) {
 1876              	 .loc 1 667 0
 1877 0026 0120     	 movs r0,#1
 1878 0028 FFF7FEFF 	 bl sdcard_waitForNonIdleByte
 1879 002c 0346     	 mov r3,r0
 1880 002e FF2B     	 cmp r3,#255
 1881 0030 05D1     	 bne .L126
 668:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.state = SDCARD_STATE_READY;
 1882              	 .loc 1 668 0
 1883 0032 094B     	 ldr r3,.L128
 1884 0034 0422     	 movs r2,#4
 1885 0036 83F82020 	 strb r2,[r3,#32]
 669:../cleanflight/src/main/drivers/sdcard.c ****         return SDCARD_OPERATION_SUCCESS;
 1886              	 .loc 1 669 0
 1887 003a 0223     	 movs r3,#2
 1888 003c 0AE0     	 b .L127
 1889              	.L126:
 670:../cleanflight/src/main/drivers/sdcard.c ****     } else {
 671:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.state = SDCARD_STATE_STOPPING_MULTIPLE_BLOCK_WRITE;
 1890              	 .loc 1 671 0
 1891 003e 064B     	 ldr r3,.L128
 1892 0040 0922     	 movs r2,#9
 1893 0042 83F82020 	 strb r2,[r3,#32]
 672:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.operationStartTime = millis();
 1894              	 .loc 1 672 0
 1895 0046 FFF7FEFF 	 bl millis
 1896 004a 0246     	 mov r2,r0
 1897 004c 024B     	 ldr r3,.L128
 1898 004e C3F81120 	 str r2,[r3,#17]
 673:../cleanflight/src/main/drivers/sdcard.c **** 
 674:../cleanflight/src/main/drivers/sdcard.c ****         return SDCARD_OPERATION_IN_PROGRESS;
 1899              	 .loc 1 674 0
 1900 0052 0023     	 movs r3,#0
 1901              	.L127:
 675:../cleanflight/src/main/drivers/sdcard.c ****     }
 676:../cleanflight/src/main/drivers/sdcard.c **** }
 1902              	 .loc 1 676 0
 1903 0054 1846     	 mov r0,r3
 1904 0056 80BD     	 pop {r7,pc}
 1905              	.L129:
 1906              	 .align 2
 1907              	.L128:
 1908 0058 00000000 	 .word sdcard
 1909              	 .cfi_endproc
 1910              	.LFE551:
 1912              	 .section .text.sdcard_poll,"ax",%progbits
 1913              	 .align 2
 1914              	 .global sdcard_poll
 1915              	 .thumb
 1916              	 .thumb_func
 1918              	sdcard_poll:
 1919              	.LFB552:
 677:../cleanflight/src/main/drivers/sdcard.c **** 
 678:../cleanflight/src/main/drivers/sdcard.c **** /**
 679:../cleanflight/src/main/drivers/sdcard.c ****  * Call periodically for the SD card to perform in-progress transfers.
 680:../cleanflight/src/main/drivers/sdcard.c ****  *
 681:../cleanflight/src/main/drivers/sdcard.c ****  * Returns true if the card is ready to accept commands.
 682:../cleanflight/src/main/drivers/sdcard.c ****  */
 683:../cleanflight/src/main/drivers/sdcard.c **** bool sdcard_poll(void)
 684:../cleanflight/src/main/drivers/sdcard.c **** {
 1920              	 .loc 1 684 0
 1921              	 .cfi_startproc
 1922              	 
 1923              	 
 1924 0000 90B5     	 push {r4,r7,lr}
 1925              	.LCFI95:
 1926              	 .cfi_def_cfa_offset 12
 1927              	 .cfi_offset 4,-12
 1928              	 .cfi_offset 7,-8
 1929              	 .cfi_offset 14,-4
 1930 0002 83B0     	 sub sp,sp,#12
 1931              	.LCFI96:
 1932              	 .cfi_def_cfa_offset 24
 1933 0004 00AF     	 add r7,sp,#0
 1934              	.LCFI97:
 1935              	 .cfi_def_cfa_register 7
 685:../cleanflight/src/main/drivers/sdcard.c ****     if (!sdcard.enabled) {
 1936              	 .loc 1 685 0
 1937 0006 AE4B     	 ldr r3,.L170
 1938 0008 93F84A30 	 ldrb r3,[r3,#74]
 1939 000c 83F00103 	 eor r3,r3,#1
 1940 0010 DBB2     	 uxtb r3,r3
 1941 0012 002B     	 cmp r3,#0
 1942 0014 05D0     	 beq .L131
 686:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.state = SDCARD_STATE_NOT_PRESENT;
 1943              	 .loc 1 686 0
 1944 0016 AA4B     	 ldr r3,.L170
 1945 0018 0022     	 movs r2,#0
 1946 001a 83F82020 	 strb r2,[r3,#32]
 687:../cleanflight/src/main/drivers/sdcard.c ****         return false;
 1947              	 .loc 1 687 0
 1948 001e 0023     	 movs r3,#0
 1949 0020 BFE1     	 b .L132
 1950              	.L131:
 688:../cleanflight/src/main/drivers/sdcard.c ****     }
 689:../cleanflight/src/main/drivers/sdcard.c **** 
 690:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t initStatus;
 691:../cleanflight/src/main/drivers/sdcard.c ****     bool sendComplete;
 692:../cleanflight/src/main/drivers/sdcard.c **** 
 693:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
 694:../cleanflight/src/main/drivers/sdcard.c ****     bool profilingComplete;
 695:../cleanflight/src/main/drivers/sdcard.c **** #endif
 696:../cleanflight/src/main/drivers/sdcard.c **** 
 697:../cleanflight/src/main/drivers/sdcard.c ****     doMore:
 698:../cleanflight/src/main/drivers/sdcard.c ****     switch (sdcard.state) {
 1951              	 .loc 1 698 0
 1952 0022 A74B     	 ldr r3,.L170
 1953 0024 93F82030 	 ldrb r3,[r3,#32]
 1954 0028 013B     	 subs r3,r3,#1
 1955 002a 082B     	 cmp r3,#8
 1956 002c 00F2A181 	 bhi .L133
 1957 0030 01A2     	 adr r2,.L135
 1958 0032 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1959 0036 00BF     	 .p2align 2
 1960              	.L135:
 1961 0038 5D000000 	 .word .L134+1
 1962 003c 97000000 	 .word .L136+1
 1963 0040 15010000 	 .word .L137+1
 1964 0044 73030000 	 .word .L133+1
 1965 0048 A3020000 	 .word .L138+1
 1966 004c 6B010000 	 .word .L139+1
 1967 0050 2B020000 	 .word .L140+1
 1968 0054 73030000 	 .word .L133+1
 1969 0058 3F030000 	 .word .L141+1
 1970              	 .p2align 1
 1971              	.L134:
 699:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_RESET:
 700:../cleanflight/src/main/drivers/sdcard.c ****             sdcard_select();
 1972              	 .loc 1 700 0
 1973 005c FFF7FEFF 	 bl sdcard_select
 701:../cleanflight/src/main/drivers/sdcard.c **** 
 702:../cleanflight/src/main/drivers/sdcard.c ****             initStatus = sdcard_sendCommand(SDCARD_COMMAND_GO_IDLE_STATE, 0);
 1974              	 .loc 1 702 0
 1975 0060 0020     	 movs r0,#0
 1976 0062 0021     	 movs r1,#0
 1977 0064 FFF7FEFF 	 bl sdcard_sendCommand
 1978 0068 0346     	 mov r3,r0
 1979 006a BB71     	 strb r3,[r7,#6]
 703:../cleanflight/src/main/drivers/sdcard.c **** 
 704:../cleanflight/src/main/drivers/sdcard.c ****             sdcard_deselect();
 1980              	 .loc 1 704 0
 1981 006c FFF7FEFF 	 bl sdcard_deselect
 705:../cleanflight/src/main/drivers/sdcard.c **** 
 706:../cleanflight/src/main/drivers/sdcard.c ****             if (initStatus == SDCARD_R1_STATUS_BIT_IDLE) {
 1982              	 .loc 1 706 0
 1983 0070 BB79     	 ldrb r3,[r7,#6]
 1984 0072 012B     	 cmp r3,#1
 1985 0074 0ED1     	 bne .L142
 707:../cleanflight/src/main/drivers/sdcard.c ****                 // Check card voltage and version
 708:../cleanflight/src/main/drivers/sdcard.c ****                 if (sdcard_validateInterfaceCondition()) {
 1986              	 .loc 1 708 0
 1987 0076 FFF7FEFF 	 bl sdcard_validateInterfaceCondition
 1988 007a 0346     	 mov r3,r0
 1989 007c 002B     	 cmp r3,#0
 1990 007e 04D0     	 beq .L143
 709:../cleanflight/src/main/drivers/sdcard.c **** 
 710:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.state = SDCARD_STATE_CARD_INIT_IN_PROGRESS;
 1991              	 .loc 1 710 0
 1992 0080 8F4B     	 ldr r3,.L170
 1993 0082 0222     	 movs r2,#2
 1994 0084 83F82020 	 strb r2,[r3,#32]
 711:../cleanflight/src/main/drivers/sdcard.c ****                     goto doMore;
 1995              	 .loc 1 711 0
 1996 0088 CBE7     	 b .L131
 1997              	.L143:
 712:../cleanflight/src/main/drivers/sdcard.c ****                 } else {
 713:../cleanflight/src/main/drivers/sdcard.c ****                     // Bad reply/voltage, we ought to refrain from accessing the card.
 714:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.state = SDCARD_STATE_NOT_PRESENT;
 1998              	 .loc 1 714 0
 1999 008a 8D4B     	 ldr r3,.L170
 2000 008c 0022     	 movs r2,#0
 2001 008e 83F82020 	 strb r2,[r3,#32]
 715:../cleanflight/src/main/drivers/sdcard.c ****                 }
 716:../cleanflight/src/main/drivers/sdcard.c ****             }
 717:../cleanflight/src/main/drivers/sdcard.c ****         break;
 2002              	 .loc 1 717 0
 2003 0092 6EE1     	 b .L133
 2004              	.L142:
 2005 0094 6DE1     	 b .L133
 2006              	.L136:
 718:../cleanflight/src/main/drivers/sdcard.c **** 
 719:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_CARD_INIT_IN_PROGRESS:
 720:../cleanflight/src/main/drivers/sdcard.c ****             if (sdcard_checkInitDone()) {
 2007              	 .loc 1 720 0
 2008 0096 FFF7FEFF 	 bl sdcard_checkInitDone
 2009 009a 0346     	 mov r3,r0
 2010 009c 002B     	 cmp r3,#0
 2011 009e 38D0     	 beq .L144
 721:../cleanflight/src/main/drivers/sdcard.c ****                 if (sdcard.version == 2) {
 2012              	 .loc 1 721 0
 2013 00a0 874B     	 ldr r3,.L170
 2014 00a2 9B7D     	 ldrb r3,[r3,#22]
 2015 00a4 022B     	 cmp r3,#2
 2016 00a6 17D1     	 bne .L145
 2017              	.LBB5:
 722:../cleanflight/src/main/drivers/sdcard.c ****                     // Check for high capacity card
 723:../cleanflight/src/main/drivers/sdcard.c ****                     uint32_t ocr;
 724:../cleanflight/src/main/drivers/sdcard.c **** 
 725:../cleanflight/src/main/drivers/sdcard.c ****                     if (!sdcard_readOCRRegister(&ocr)) {
 2018              	 .loc 1 725 0
 2019 00a8 3B46     	 mov r3,r7
 2020 00aa 1846     	 mov r0,r3
 2021 00ac FFF7FEFF 	 bl sdcard_readOCRRegister
 2022 00b0 0346     	 mov r3,r0
 2023 00b2 83F00103 	 eor r3,r3,#1
 2024 00b6 DBB2     	 uxtb r3,r3
 2025 00b8 002B     	 cmp r3,#0
 2026 00ba 02D0     	 beq .L146
 726:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard_reset();
 2027              	 .loc 1 726 0
 2028 00bc FFF7FEFF 	 bl sdcard_reset
 2029 00c0 AFE7     	 b .L131
 2030              	.L146:
 727:../cleanflight/src/main/drivers/sdcard.c ****                         goto doMore;
 728:../cleanflight/src/main/drivers/sdcard.c ****                     }
 729:../cleanflight/src/main/drivers/sdcard.c **** 
 730:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.highCapacity = (ocr & (1 << 30)) != 0;
 2031              	 .loc 1 730 0
 2032 00c2 3B68     	 ldr r3,[r7]
 2033 00c4 03F08043 	 and r3,r3,#1073741824
 2034 00c8 002B     	 cmp r3,#0
 2035 00ca 14BF     	 ite ne
 2036 00cc 0123     	 movne r3,#1
 2037 00ce 0023     	 moveq r3,#0
 2038 00d0 DAB2     	 uxtb r2,r3
 2039 00d2 7B4B     	 ldr r3,.L170
 2040 00d4 DA75     	 strb r2,[r3,#23]
 2041              	.LBE5:
 2042 00d6 02E0     	 b .L147
 2043              	.L145:
 731:../cleanflight/src/main/drivers/sdcard.c ****                 } else {
 732:../cleanflight/src/main/drivers/sdcard.c ****                     // Version 1 cards are always low-capacity
 733:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.highCapacity = false;
 2044              	 .loc 1 733 0
 2045 00d8 794B     	 ldr r3,.L170
 2046 00da 0022     	 movs r2,#0
 2047 00dc DA75     	 strb r2,[r3,#23]
 2048              	.L147:
 734:../cleanflight/src/main/drivers/sdcard.c ****                 }
 735:../cleanflight/src/main/drivers/sdcard.c **** 
 736:../cleanflight/src/main/drivers/sdcard.c ****                 // Now fetch the CSD and CID registers
 737:../cleanflight/src/main/drivers/sdcard.c ****                 if (sdcard_fetchCSD()) {
 2049              	 .loc 1 737 0
 2050 00de FFF7FEFF 	 bl sdcard_fetchCSD
 2051 00e2 0346     	 mov r3,r0
 2052 00e4 002B     	 cmp r3,#0
 2053 00e6 14D0     	 beq .L144
 2054              	.LBB6:
 738:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard_select();
 2055              	 .loc 1 738 0
 2056 00e8 FFF7FEFF 	 bl sdcard_select
 739:../cleanflight/src/main/drivers/sdcard.c **** 
 740:../cleanflight/src/main/drivers/sdcard.c ****                     uint8_t status = sdcard_sendCommand(SDCARD_COMMAND_SEND_CID, 0);
 2057              	 .loc 1 740 0
 2058 00ec 0A20     	 movs r0,#10
 2059 00ee 0021     	 movs r1,#0
 2060 00f0 FFF7FEFF 	 bl sdcard_sendCommand
 2061 00f4 0346     	 mov r3,r0
 2062 00f6 7B71     	 strb r3,[r7,#5]
 741:../cleanflight/src/main/drivers/sdcard.c **** 
 742:../cleanflight/src/main/drivers/sdcard.c ****                     if (status == 0) {
 2063              	 .loc 1 742 0
 2064 00f8 7B79     	 ldrb r3,[r7,#5]
 2065 00fa 002B     	 cmp r3,#0
 2066 00fc 04D1     	 bne .L148
 743:../cleanflight/src/main/drivers/sdcard.c ****                         // Keep the card selected to receive the response block
 744:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard.state = SDCARD_STATE_INITIALIZATION_RECEIVE_CID;
 2067              	 .loc 1 744 0
 2068 00fe 704B     	 ldr r3,.L170
 2069 0100 0322     	 movs r2,#3
 2070 0102 83F82020 	 strb r2,[r3,#32]
 745:../cleanflight/src/main/drivers/sdcard.c ****                         goto doMore;
 2071              	 .loc 1 745 0
 2072 0106 8CE7     	 b .L131
 2073              	.L148:
 746:../cleanflight/src/main/drivers/sdcard.c ****                     } else {
 747:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard_deselect();
 2074              	 .loc 1 747 0
 2075 0108 FFF7FEFF 	 bl sdcard_deselect
 748:../cleanflight/src/main/drivers/sdcard.c **** 
 749:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard_reset();
 2076              	 .loc 1 749 0
 2077 010c FFF7FEFF 	 bl sdcard_reset
 750:../cleanflight/src/main/drivers/sdcard.c ****                         goto doMore;
 2078              	 .loc 1 750 0
 2079 0110 87E7     	 b .L131
 2080              	.L144:
 2081              	.LBE6:
 751:../cleanflight/src/main/drivers/sdcard.c ****                     }
 752:../cleanflight/src/main/drivers/sdcard.c ****                 }
 753:../cleanflight/src/main/drivers/sdcard.c ****             }
 754:../cleanflight/src/main/drivers/sdcard.c ****         break;
 2082              	 .loc 1 754 0
 2083 0112 2EE1     	 b .L133
 2084              	.L137:
 755:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_INITIALIZATION_RECEIVE_CID:
 756:../cleanflight/src/main/drivers/sdcard.c ****             if (sdcard_receiveCID()) {
 2085              	 .loc 1 756 0
 2086 0114 FFF7FEFF 	 bl sdcard_receiveCID
 2087 0118 0346     	 mov r3,r0
 2088 011a 002B     	 cmp r3,#0
 2089 011c 24D0     	 beq .L149
 757:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard_deselect();
 2090              	 .loc 1 757 0
 2091 011e FFF7FEFF 	 bl sdcard_deselect
 758:../cleanflight/src/main/drivers/sdcard.c **** 
 759:../cleanflight/src/main/drivers/sdcard.c ****                 /* The spec is a little iffy on what the default block size is for Standard Size ca
 760:../cleanflight/src/main/drivers/sdcard.c ****                  * standard size cards) so let's just set it to 512 explicitly so we don't have a p
 761:../cleanflight/src/main/drivers/sdcard.c ****                  */
 762:../cleanflight/src/main/drivers/sdcard.c ****                 if (!sdcard.highCapacity && !sdcard_setBlockLength(SDCARD_BLOCK_SIZE)) {
 2092              	 .loc 1 762 0
 2093 0122 674B     	 ldr r3,.L170
 2094 0124 DB7D     	 ldrb r3,[r3,#23]
 2095 0126 83F00103 	 eor r3,r3,#1
 2096 012a DBB2     	 uxtb r3,r3
 2097 012c 002B     	 cmp r3,#0
 2098 012e 0CD0     	 beq .L150
 2099              	 .loc 1 762 0 is_stmt 0 discriminator 1
 2100 0130 4FF40070 	 mov r0,#512
 2101 0134 FFF7FEFF 	 bl sdcard_setBlockLength
 2102 0138 0346     	 mov r3,r0
 2103 013a 83F00103 	 eor r3,r3,#1
 2104 013e DBB2     	 uxtb r3,r3
 2105 0140 002B     	 cmp r3,#0
 2106 0142 02D0     	 beq .L150
 763:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard_reset();
 2107              	 .loc 1 763 0 is_stmt 1
 2108 0144 FFF7FEFF 	 bl sdcard_reset
 764:../cleanflight/src/main/drivers/sdcard.c ****                     goto doMore;
 2109              	 .loc 1 764 0
 2110 0148 6BE7     	 b .L131
 2111              	.L150:
 765:../cleanflight/src/main/drivers/sdcard.c ****                 }
 766:../cleanflight/src/main/drivers/sdcard.c **** 
 767:../cleanflight/src/main/drivers/sdcard.c ****                 // Now we're done with init and we can switch to the full speed clock (<25MHz)
 768:../cleanflight/src/main/drivers/sdcard.c ****                 spiSetDivisor(sdcard.instance, SDCARD_SPI_FULL_SPEED_CLOCK_DIVIDER);
 2112              	 .loc 1 768 0
 2113 014a 5D4B     	 ldr r3,.L170
 2114 014c D3F84630 	 ldr r3,[r3,#70]
 2115 0150 1846     	 mov r0,r3
 2116 0152 0821     	 movs r1,#8
 2117 0154 FFF7FEFF 	 bl spiSetDivisor
 769:../cleanflight/src/main/drivers/sdcard.c **** 
 770:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard.multiWriteBlocksRemain = 0;
 2118              	 .loc 1 770 0
 2119 0158 594B     	 ldr r3,.L170
 2120 015a 0022     	 movs r2,#0
 2121 015c DA61     	 str r2,[r3,#28]
 771:../cleanflight/src/main/drivers/sdcard.c **** 
 772:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard.state = SDCARD_STATE_READY;
 2122              	 .loc 1 772 0
 2123 015e 584B     	 ldr r3,.L170
 2124 0160 0422     	 movs r2,#4
 2125 0162 83F82020 	 strb r2,[r3,#32]
 773:../cleanflight/src/main/drivers/sdcard.c ****                 goto doMore;
 2126              	 .loc 1 773 0
 2127 0166 5CE7     	 b .L131
 2128              	.L149:
 774:../cleanflight/src/main/drivers/sdcard.c ****             } // else keep waiting for the CID to arrive
 775:../cleanflight/src/main/drivers/sdcard.c ****         break;
 2129              	 .loc 1 775 0
 2130 0168 03E1     	 b .L133
 2131              	.L139:
 776:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_SENDING_WRITE:
 777:../cleanflight/src/main/drivers/sdcard.c ****             // Have we finished sending the write yet?
 778:../cleanflight/src/main/drivers/sdcard.c ****             sendComplete = false;
 2132              	 .loc 1 778 0
 2133 016a 0023     	 movs r3,#0
 2134 016c FB71     	 strb r3,[r7,#7]
 779:../cleanflight/src/main/drivers/sdcard.c **** 
 780:../cleanflight/src/main/drivers/sdcard.c **** #if defined(USE_HAL_DRIVER)
 781:../cleanflight/src/main/drivers/sdcard.c ****             if (sdcard.useDMAForTx && DMA_GET_FLAG_STATUS(sdcard.dma, DMA_IT_TCIF)) {
 782:../cleanflight/src/main/drivers/sdcard.c ****                 //Clear both flags after transfer
 783:../cleanflight/src/main/drivers/sdcard.c ****                 DMA_CLEAR_FLAG(sdcard.dma, DMA_IT_TCIF);
 784:../cleanflight/src/main/drivers/sdcard.c ****                 DMA_CLEAR_FLAG(sdcard.dma, DMA_IT_HTIF);
 785:../cleanflight/src/main/drivers/sdcard.c ****                 // Drain anything left in the Rx FIFO (we didn't read it during the write)
 786:../cleanflight/src/main/drivers/sdcard.c ****                 while (LL_SPI_IsActiveFlag_RXNE(sdcard.instance)) {
 787:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.instance->DR;
 788:../cleanflight/src/main/drivers/sdcard.c ****                 }
 789:../cleanflight/src/main/drivers/sdcard.c **** 
 790:../cleanflight/src/main/drivers/sdcard.c ****                 // Wait for the final bit to be transmitted
 791:../cleanflight/src/main/drivers/sdcard.c ****                 while (spiIsBusBusy(sdcard.instance)) {
 792:../cleanflight/src/main/drivers/sdcard.c ****                 }
 793:../cleanflight/src/main/drivers/sdcard.c **** 
 794:../cleanflight/src/main/drivers/sdcard.c ****                 LL_SPI_DisableDMAReq_TX(sdcard.instance);
 795:../cleanflight/src/main/drivers/sdcard.c **** 
 796:../cleanflight/src/main/drivers/sdcard.c ****                 sendComplete = true;
 797:../cleanflight/src/main/drivers/sdcard.c ****             }
 798:../cleanflight/src/main/drivers/sdcard.c **** #else
 799:../cleanflight/src/main/drivers/sdcard.c **** #ifdef XMC4700_F100x2048
 800:../cleanflight/src/main/drivers/sdcard.c **** #else
 801:../cleanflight/src/main/drivers/sdcard.c **** #ifdef STM32F4
 802:../cleanflight/src/main/drivers/sdcard.c ****             if (sdcard.useDMAForTx && DMA_GetFlagStatus(sdcard.dma->ref, sdcard.dma->completeFlag) 
 803:../cleanflight/src/main/drivers/sdcard.c ****                 DMA_ClearFlag(sdcard.dma->ref, sdcard.dma->completeFlag);
 804:../cleanflight/src/main/drivers/sdcard.c **** #else
 805:../cleanflight/src/main/drivers/sdcard.c ****             if (sdcard.useDMAForTx && DMA_GetFlagStatus(sdcard.dma->completeFlag) == SET) {
 806:../cleanflight/src/main/drivers/sdcard.c ****                 DMA_ClearFlag(sdcard.dma->completeFlag);
 807:../cleanflight/src/main/drivers/sdcard.c **** #endif
 808:../cleanflight/src/main/drivers/sdcard.c **** 
 809:../cleanflight/src/main/drivers/sdcard.c ****                 DMA_Cmd(sdcard.dma->ref, DISABLE);
 810:../cleanflight/src/main/drivers/sdcard.c **** 
 811:../cleanflight/src/main/drivers/sdcard.c ****                 // Drain anything left in the Rx FIFO (we didn't read it during the write)
 812:../cleanflight/src/main/drivers/sdcard.c ****                 while (SPI_I2S_GetFlagStatus(sdcard.instance, SPI_I2S_FLAG_RXNE) == SET) {
 813:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.instance->DR;
 814:../cleanflight/src/main/drivers/sdcard.c ****                 }
 815:../cleanflight/src/main/drivers/sdcard.c **** 
 816:../cleanflight/src/main/drivers/sdcard.c ****                 // Wait for the final bit to be transmitted
 817:../cleanflight/src/main/drivers/sdcard.c ****                 while (spiIsBusBusy(sdcard.instance)) {
 818:../cleanflight/src/main/drivers/sdcard.c ****                 }
 819:../cleanflight/src/main/drivers/sdcard.c **** 
 820:../cleanflight/src/main/drivers/sdcard.c ****                 SPI_I2S_DMACmd(sdcard.instance, SPI_I2S_DMAReq_Tx, DISABLE);
 821:../cleanflight/src/main/drivers/sdcard.c **** 
 822:../cleanflight/src/main/drivers/sdcard.c ****                 sendComplete = true;
 823:../cleanflight/src/main/drivers/sdcard.c ****             }
 824:../cleanflight/src/main/drivers/sdcard.c **** #endif
 825:../cleanflight/src/main/drivers/sdcard.c **** #endif
 826:../cleanflight/src/main/drivers/sdcard.c ****             if (!sdcard.useDMAForTx) {
 2135              	 .loc 1 826 0
 2136 016e 544B     	 ldr r3,.L170
 2137 0170 93F84C30 	 ldrb r3,[r3,#76]
 2138 0174 83F00103 	 eor r3,r3,#1
 2139 0178 DBB2     	 uxtb r3,r3
 2140 017a 002B     	 cmp r3,#0
 2141 017c 1CD0     	 beq .L151
 827:../cleanflight/src/main/drivers/sdcard.c ****                 // Send another chunk
 828:../cleanflight/src/main/drivers/sdcard.c ****                 spiTransfer(sdcard.instance, sdcard.pendingOperation.buffer + SDCARD_NON_DMA_CHUNK_
 2142              	 .loc 1 828 0
 2143 017e 504B     	 ldr r3,.L170
 2144 0180 D3F84610 	 ldr r1,[r3,#70]
 2145 0184 4E4B     	 ldr r3,.L170
 2146 0186 1B68     	 ldr r3,[r3]
 2147 0188 4D4A     	 ldr r2,.L170
 2148 018a 127A     	 ldrb r2,[r2,#8]
 2149 018c 1202     	 lsls r2,r2,#8
 2150 018e 1344     	 add r3,r3,r2
 2151 0190 0846     	 mov r0,r1
 2152 0192 1946     	 mov r1,r3
 2153 0194 0022     	 movs r2,#0
 2154 0196 4FF48073 	 mov r3,#256
 2155 019a FFF7FEFF 	 bl spiTransfer
 829:../cleanflight/src/main/drivers/sdcard.c **** 
 830:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard.pendingOperation.chunkIndex++;
 2156              	 .loc 1 830 0
 2157 019e 484B     	 ldr r3,.L170
 2158 01a0 1B7A     	 ldrb r3,[r3,#8]
 2159 01a2 0133     	 adds r3,r3,#1
 2160 01a4 DAB2     	 uxtb r2,r3
 2161 01a6 464B     	 ldr r3,.L170
 2162 01a8 1A72     	 strb r2,[r3,#8]
 831:../cleanflight/src/main/drivers/sdcard.c **** 
 832:../cleanflight/src/main/drivers/sdcard.c ****                 sendComplete = sdcard.pendingOperation.chunkIndex == SDCARD_BLOCK_SIZE / SDCARD_NON
 2163              	 .loc 1 832 0
 2164 01aa 454B     	 ldr r3,.L170
 2165 01ac 1B7A     	 ldrb r3,[r3,#8]
 2166 01ae 022B     	 cmp r3,#2
 2167 01b0 0CBF     	 ite eq
 2168 01b2 0123     	 moveq r3,#1
 2169 01b4 0023     	 movne r3,#0
 2170 01b6 FB71     	 strb r3,[r7,#7]
 2171              	.L151:
 833:../cleanflight/src/main/drivers/sdcard.c ****             }
 834:../cleanflight/src/main/drivers/sdcard.c **** 
 835:../cleanflight/src/main/drivers/sdcard.c ****             if (sendComplete) {
 2172              	 .loc 1 835 0
 2173 01b8 FB79     	 ldrb r3,[r7,#7]
 2174 01ba 002B     	 cmp r3,#0
 2175 01bc 34D0     	 beq .L152
 836:../cleanflight/src/main/drivers/sdcard.c ****                 // Finish up by sending the CRC and checking the SD-card's acceptance/rejectance
 837:../cleanflight/src/main/drivers/sdcard.c ****                 if (sdcard_sendDataBlockFinish()) {
 2176              	 .loc 1 837 0
 2177 01be FFF7FEFF 	 bl sdcard_sendDataBlockFinish
 2178 01c2 0346     	 mov r3,r0
 2179 01c4 002B     	 cmp r3,#0
 2180 01c6 1BD0     	 beq .L153
 838:../cleanflight/src/main/drivers/sdcard.c ****                     // The SD card is now busy committing that write to the card
 839:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.state = SDCARD_STATE_WAITING_FOR_WRITE;
 2181              	 .loc 1 839 0
 2182 01c8 3D4B     	 ldr r3,.L170
 2183 01ca 0722     	 movs r2,#7
 2184 01cc 83F82020 	 strb r2,[r3,#32]
 840:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.operationStartTime = millis();
 2185              	 .loc 1 840 0
 2186 01d0 FFF7FEFF 	 bl millis
 2187 01d4 0246     	 mov r2,r0
 2188 01d6 3A4B     	 ldr r3,.L170
 2189 01d8 C3F81120 	 str r2,[r3,#17]
 841:../cleanflight/src/main/drivers/sdcard.c **** 
 842:../cleanflight/src/main/drivers/sdcard.c ****                     // Since we've transmitted the buffer we can go ahead and tell the caller their
 843:../cleanflight/src/main/drivers/sdcard.c ****                     if (sdcard.pendingOperation.callback) {
 2190              	 .loc 1 843 0
 2191 01dc 384B     	 ldr r3,.L170
 2192 01de D3F80930 	 ldr r3,[r3,#9]
 2193 01e2 002B     	 cmp r3,#0
 2194 01e4 20D0     	 beq .L152
 844:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard.pendingOperation.callback(SDCARD_BLOCK_OPERATION_WRITE, sdcard.pendi
 2195              	 .loc 1 844 0
 2196 01e6 364B     	 ldr r3,.L170
 2197 01e8 D3F80940 	 ldr r4,[r3,#9]
 2198 01ec 344B     	 ldr r3,.L170
 2199 01ee 5968     	 ldr r1,[r3,#4]
 2200 01f0 334B     	 ldr r3,.L170
 2201 01f2 1A68     	 ldr r2,[r3]
 2202 01f4 324B     	 ldr r3,.L170
 2203 01f6 D3F80D30 	 ldr r3,[r3,#13]
 2204 01fa 0120     	 movs r0,#1
 2205 01fc A047     	 blx r4
 845:../cleanflight/src/main/drivers/sdcard.c ****                     }
 846:../cleanflight/src/main/drivers/sdcard.c ****                 } else {
 847:../cleanflight/src/main/drivers/sdcard.c ****                     /* Our write was rejected! This could be due to a bad address but we hope not t
 848:../cleanflight/src/main/drivers/sdcard.c ****                      * the card is broken and needs reset.
 849:../cleanflight/src/main/drivers/sdcard.c ****                      */
 850:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard_reset();
 851:../cleanflight/src/main/drivers/sdcard.c **** 
 852:../cleanflight/src/main/drivers/sdcard.c ****                     // Announce write failure:
 853:../cleanflight/src/main/drivers/sdcard.c ****                     if (sdcard.pendingOperation.callback) {
 854:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard.pendingOperation.callback(SDCARD_BLOCK_OPERATION_WRITE, sdcard.pendi
 855:../cleanflight/src/main/drivers/sdcard.c ****                     }
 856:../cleanflight/src/main/drivers/sdcard.c **** 
 857:../cleanflight/src/main/drivers/sdcard.c ****                     goto doMore;
 858:../cleanflight/src/main/drivers/sdcard.c ****                 }
 859:../cleanflight/src/main/drivers/sdcard.c ****             }
 860:../cleanflight/src/main/drivers/sdcard.c ****         break;
 2206              	 .loc 1 860 0
 2207 01fe B8E0     	 b .L133
 2208              	.L153:
 850:../cleanflight/src/main/drivers/sdcard.c **** 
 2209              	 .loc 1 850 0
 2210 0200 FFF7FEFF 	 bl sdcard_reset
 853:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard.pendingOperation.callback(SDCARD_BLOCK_OPERATION_WRITE, sdcard.pendi
 2211              	 .loc 1 853 0
 2212 0204 2E4B     	 ldr r3,.L170
 2213 0206 D3F80930 	 ldr r3,[r3,#9]
 2214 020a 002B     	 cmp r3,#0
 2215 020c 0BD0     	 beq .L155
 854:../cleanflight/src/main/drivers/sdcard.c ****                     }
 2216              	 .loc 1 854 0
 2217 020e 2C4B     	 ldr r3,.L170
 2218 0210 D3F80940 	 ldr r4,[r3,#9]
 2219 0214 2A4B     	 ldr r3,.L170
 2220 0216 5A68     	 ldr r2,[r3,#4]
 2221 0218 294B     	 ldr r3,.L170
 2222 021a D3F80D30 	 ldr r3,[r3,#13]
 2223 021e 0120     	 movs r0,#1
 2224 0220 1146     	 mov r1,r2
 2225 0222 0022     	 movs r2,#0
 2226 0224 A047     	 blx r4
 2227              	.L155:
 857:../cleanflight/src/main/drivers/sdcard.c ****                 }
 2228              	 .loc 1 857 0
 2229 0226 FCE6     	 b .L131
 2230              	.L152:
 2231              	 .loc 1 860 0 discriminator 2
 2232 0228 A3E0     	 b .L133
 2233              	.L140:
 861:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_WAITING_FOR_WRITE:
 862:../cleanflight/src/main/drivers/sdcard.c ****             if (sdcard_waitForIdle(SDCARD_MAXIMUM_BYTE_DELAY_FOR_CMD_REPLY)) {
 2234              	 .loc 1 862 0
 2235 022a 0820     	 movs r0,#8
 2236 022c FFF7FEFF 	 bl sdcard_waitForIdle
 2237 0230 0346     	 mov r3,r0
 2238 0232 002B     	 cmp r3,#0
 2239 0234 28D0     	 beq .L156
 863:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
 864:../cleanflight/src/main/drivers/sdcard.c ****                 profilingComplete = true;
 865:../cleanflight/src/main/drivers/sdcard.c **** #endif
 866:../cleanflight/src/main/drivers/sdcard.c **** 
 867:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard.failureCount = 0; // Assume the card is good if it can complete a write
 2240              	 .loc 1 867 0
 2241 0236 224B     	 ldr r3,.L170
 2242 0238 0022     	 movs r2,#0
 2243 023a 5A75     	 strb r2,[r3,#21]
 868:../cleanflight/src/main/drivers/sdcard.c **** 
 869:../cleanflight/src/main/drivers/sdcard.c ****                 // Still more blocks left to write in a multi-block chain?
 870:../cleanflight/src/main/drivers/sdcard.c ****                 if (sdcard.multiWriteBlocksRemain > 1) {
 2244              	 .loc 1 870 0
 2245 023c 204B     	 ldr r3,.L170
 2246 023e DB69     	 ldr r3,[r3,#28]
 2247 0240 012B     	 cmp r3,#1
 2248 0242 0ED9     	 bls .L157
 871:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.multiWriteBlocksRemain--;
 2249              	 .loc 1 871 0
 2250 0244 1E4B     	 ldr r3,.L170
 2251 0246 DB69     	 ldr r3,[r3,#28]
 2252 0248 013B     	 subs r3,r3,#1
 2253 024a 1D4A     	 ldr r2,.L170
 2254 024c D361     	 str r3,[r2,#28]
 872:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.multiWriteNextBlock++;
 2255              	 .loc 1 872 0
 2256 024e 1C4B     	 ldr r3,.L170
 2257 0250 9B69     	 ldr r3,[r3,#24]
 2258 0252 0133     	 adds r3,r3,#1
 2259 0254 1A4A     	 ldr r2,.L170
 2260 0256 9361     	 str r3,[r2,#24]
 873:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.state = SDCARD_STATE_WRITING_MULTIPLE_BLOCKS;
 2261              	 .loc 1 873 0
 2262 0258 194B     	 ldr r3,.L170
 2263 025a 0822     	 movs r2,#8
 2264 025c 83F82020 	 strb r2,[r3,#32]
 2265 0260 1EE0     	 b .L160
 2266              	.L157:
 874:../cleanflight/src/main/drivers/sdcard.c ****                 } else if (sdcard.multiWriteBlocksRemain == 1) {
 2267              	 .loc 1 874 0
 2268 0262 174B     	 ldr r3,.L170
 2269 0264 DB69     	 ldr r3,[r3,#28]
 2270 0266 012B     	 cmp r3,#1
 2271 0268 07D1     	 bne .L159
 875:../cleanflight/src/main/drivers/sdcard.c ****                     // This function changes the sd card state for us whether immediately succesful
 876:../cleanflight/src/main/drivers/sdcard.c ****                     if (sdcard_endWriteBlocks() == SDCARD_OPERATION_SUCCESS) {
 2272              	 .loc 1 876 0
 2273 026a FFF7FEFF 	 bl sdcard_endWriteBlocks
 2274 026e 0346     	 mov r3,r0
 2275 0270 022B     	 cmp r3,#2
 2276 0272 15D1     	 bne .L160
 877:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard_deselect();
 2277              	 .loc 1 877 0
 2278 0274 FFF7FEFF 	 bl sdcard_deselect
 2279 0278 12E0     	 b .L160
 2280              	.L159:
 878:../cleanflight/src/main/drivers/sdcard.c ****                     } else {
 879:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
 880:../cleanflight/src/main/drivers/sdcard.c ****                         // Wait for the multi-block write to be terminated before finishing timing
 881:../cleanflight/src/main/drivers/sdcard.c ****                         profilingComplete = false;
 882:../cleanflight/src/main/drivers/sdcard.c **** #endif
 883:../cleanflight/src/main/drivers/sdcard.c ****                     }
 884:../cleanflight/src/main/drivers/sdcard.c ****                 } else {
 885:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.state = SDCARD_STATE_READY;
 2281              	 .loc 1 885 0
 2282 027a 114B     	 ldr r3,.L170
 2283 027c 0422     	 movs r2,#4
 2284 027e 83F82020 	 strb r2,[r3,#32]
 886:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard_deselect();
 2285              	 .loc 1 886 0
 2286 0282 FFF7FEFF 	 bl sdcard_deselect
 887:../cleanflight/src/main/drivers/sdcard.c ****                 }
 888:../cleanflight/src/main/drivers/sdcard.c **** 
 889:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
 890:../cleanflight/src/main/drivers/sdcard.c ****                 if (profilingComplete && sdcard.profiler) {
 891:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.profiler(SDCARD_BLOCK_OPERATION_WRITE, sdcard.pendingOperation.blockInde
 892:../cleanflight/src/main/drivers/sdcard.c ****                 }
 893:../cleanflight/src/main/drivers/sdcard.c **** #endif
 894:../cleanflight/src/main/drivers/sdcard.c ****             } else if (millis() > sdcard.operationStartTime + SDCARD_TIMEOUT_WRITE_MSEC) {
 895:../cleanflight/src/main/drivers/sdcard.c ****                 /*
 896:../cleanflight/src/main/drivers/sdcard.c ****                  * The caller has already been told that their write has completed, so they will ha
 897:../cleanflight/src/main/drivers/sdcard.c ****                  * their buffer and have no hope of retrying the operation. But this should be very
 898:../cleanflight/src/main/drivers/sdcard.c ****                  * them to reuse their buffer milliseconds faster than they otherwise would.
 899:../cleanflight/src/main/drivers/sdcard.c ****                  */
 900:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard_reset();
 901:../cleanflight/src/main/drivers/sdcard.c ****                 goto doMore;
 902:../cleanflight/src/main/drivers/sdcard.c ****             }
 903:../cleanflight/src/main/drivers/sdcard.c ****         break;
 2287              	 .loc 1 903 0
 2288 0286 74E0     	 b .L133
 2289              	.L156:
 894:../cleanflight/src/main/drivers/sdcard.c ****                 /*
 2290              	 .loc 1 894 0
 2291 0288 FFF7FEFF 	 bl millis
 2292 028c 0246     	 mov r2,r0
 2293 028e 0C4B     	 ldr r3,.L170
 2294 0290 D3F81130 	 ldr r3,[r3,#17]
 2295 0294 FA33     	 adds r3,r3,#250
 2296 0296 9A42     	 cmp r2,r3
 2297 0298 02D9     	 bls .L160
 900:../cleanflight/src/main/drivers/sdcard.c ****                 goto doMore;
 2298              	 .loc 1 900 0
 2299 029a FFF7FEFF 	 bl sdcard_reset
 901:../cleanflight/src/main/drivers/sdcard.c ****             }
 2300              	 .loc 1 901 0
 2301 029e C0E6     	 b .L131
 2302              	.L160:
 2303              	 .loc 1 903 0 discriminator 4
 2304 02a0 67E0     	 b .L133
 2305              	.L138:
 904:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_READING:
 905:../cleanflight/src/main/drivers/sdcard.c ****             switch (sdcard_receiveDataBlock(sdcard.pendingOperation.buffer, SDCARD_BLOCK_SIZE)) {
 2306              	 .loc 1 905 0
 2307 02a2 074B     	 ldr r3,.L170
 2308 02a4 1B68     	 ldr r3,[r3]
 2309 02a6 1846     	 mov r0,r3
 2310 02a8 4FF40071 	 mov r1,#512
 2311 02ac FFF7FEFF 	 bl sdcard_receiveDataBlock
 2312 02b0 0346     	 mov r3,r0
 2313 02b2 012B     	 cmp r3,#1
 2314 02b4 22D0     	 beq .L162
 2315 02b6 022B     	 cmp r3,#2
 2316 02b8 2AD0     	 beq .L163
 2317 02ba 002B     	 cmp r3,#0
 2318 02bc 02D0     	 beq .L164
 906:../cleanflight/src/main/drivers/sdcard.c ****                 case SDCARD_RECEIVE_SUCCESS:
 907:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard_deselect();
 908:../cleanflight/src/main/drivers/sdcard.c **** 
 909:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.state = SDCARD_STATE_READY;
 910:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.failureCount = 0; // Assume the card is good if it can complete a read
 911:../cleanflight/src/main/drivers/sdcard.c **** 
 912:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
 913:../cleanflight/src/main/drivers/sdcard.c ****                     if (sdcard.profiler) {
 914:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard.profiler(SDCARD_BLOCK_OPERATION_READ, sdcard.pendingOperation.blockI
 915:../cleanflight/src/main/drivers/sdcard.c ****                     }
 916:../cleanflight/src/main/drivers/sdcard.c **** #endif
 917:../cleanflight/src/main/drivers/sdcard.c **** 
 918:../cleanflight/src/main/drivers/sdcard.c ****                     if (sdcard.pendingOperation.callback) {
 919:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard.pendingOperation.callback(
 920:../cleanflight/src/main/drivers/sdcard.c ****                             SDCARD_BLOCK_OPERATION_READ,
 921:../cleanflight/src/main/drivers/sdcard.c ****                             sdcard.pendingOperation.blockIndex,
 922:../cleanflight/src/main/drivers/sdcard.c ****                             sdcard.pendingOperation.buffer,
 923:../cleanflight/src/main/drivers/sdcard.c ****                             sdcard.pendingOperation.callbackData
 924:../cleanflight/src/main/drivers/sdcard.c ****                         );
 925:../cleanflight/src/main/drivers/sdcard.c ****                     }
 926:../cleanflight/src/main/drivers/sdcard.c ****                 break;
 927:../cleanflight/src/main/drivers/sdcard.c ****                 case SDCARD_RECEIVE_BLOCK_IN_PROGRESS:
 928:../cleanflight/src/main/drivers/sdcard.c ****                     if (millis() <= sdcard.operationStartTime + SDCARD_TIMEOUT_READ_MSEC) {
 929:../cleanflight/src/main/drivers/sdcard.c ****                         break; // Timeout not reached yet so keep waiting
 930:../cleanflight/src/main/drivers/sdcard.c ****                     }
 931:../cleanflight/src/main/drivers/sdcard.c ****                     // Timeout has expired, so fall through to convert to a fatal error
 932:../cleanflight/src/main/drivers/sdcard.c ****                     FALLTHROUGH;
 933:../cleanflight/src/main/drivers/sdcard.c **** 
 934:../cleanflight/src/main/drivers/sdcard.c ****                 case SDCARD_RECEIVE_ERROR:
 935:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard_deselect();
 936:../cleanflight/src/main/drivers/sdcard.c **** 
 937:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard_reset();
 938:../cleanflight/src/main/drivers/sdcard.c **** 
 939:../cleanflight/src/main/drivers/sdcard.c ****                     if (sdcard.pendingOperation.callback) {
 940:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard.pendingOperation.callback(
 941:../cleanflight/src/main/drivers/sdcard.c ****                             SDCARD_BLOCK_OPERATION_READ,
 942:../cleanflight/src/main/drivers/sdcard.c ****                             sdcard.pendingOperation.blockIndex,
 943:../cleanflight/src/main/drivers/sdcard.c ****                             NULL,
 944:../cleanflight/src/main/drivers/sdcard.c ****                             sdcard.pendingOperation.callbackData
 945:../cleanflight/src/main/drivers/sdcard.c ****                         );
 946:../cleanflight/src/main/drivers/sdcard.c ****                     }
 947:../cleanflight/src/main/drivers/sdcard.c **** 
 948:../cleanflight/src/main/drivers/sdcard.c ****                     goto doMore;
 949:../cleanflight/src/main/drivers/sdcard.c ****                 break;
 950:../cleanflight/src/main/drivers/sdcard.c ****             }
 951:../cleanflight/src/main/drivers/sdcard.c ****         break;
 2319              	 .loc 1 951 0
 2320 02be 58E0     	 b .L133
 2321              	.L171:
 2322              	 .align 2
 2323              	.L170:
 2324 02c0 00000000 	 .word sdcard
 2325              	.L164:
 907:../cleanflight/src/main/drivers/sdcard.c **** 
 2326              	 .loc 1 907 0
 2327 02c4 FFF7FEFF 	 bl sdcard_deselect
 909:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.failureCount = 0; // Assume the card is good if it can complete a read
 2328              	 .loc 1 909 0
 2329 02c8 384B     	 ldr r3,.L172
 2330 02ca 0422     	 movs r2,#4
 2331 02cc 83F82020 	 strb r2,[r3,#32]
 910:../cleanflight/src/main/drivers/sdcard.c **** 
 2332              	 .loc 1 910 0
 2333 02d0 364B     	 ldr r3,.L172
 2334 02d2 0022     	 movs r2,#0
 2335 02d4 5A75     	 strb r2,[r3,#21]
 918:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard.pendingOperation.callback(
 2336              	 .loc 1 918 0
 2337 02d6 354B     	 ldr r3,.L172
 2338 02d8 D3F80930 	 ldr r3,[r3,#9]
 2339 02dc 002B     	 cmp r3,#0
 2340 02de 0CD0     	 beq .L165
 919:../cleanflight/src/main/drivers/sdcard.c ****                             SDCARD_BLOCK_OPERATION_READ,
 2341              	 .loc 1 919 0
 2342 02e0 324B     	 ldr r3,.L172
 2343 02e2 D3F80940 	 ldr r4,[r3,#9]
 2344 02e6 314B     	 ldr r3,.L172
 2345 02e8 5968     	 ldr r1,[r3,#4]
 2346 02ea 304B     	 ldr r3,.L172
 2347 02ec 1A68     	 ldr r2,[r3]
 2348 02ee 2F4B     	 ldr r3,.L172
 2349 02f0 D3F80D30 	 ldr r3,[r3,#13]
 2350 02f4 0020     	 movs r0,#0
 2351 02f6 A047     	 blx r4
 926:../cleanflight/src/main/drivers/sdcard.c ****                 case SDCARD_RECEIVE_BLOCK_IN_PROGRESS:
 2352              	 .loc 1 926 0
 2353 02f8 20E0     	 b .L161
 2354              	.L165:
 2355 02fa 1FE0     	 b .L161
 2356              	.L162:
 928:../cleanflight/src/main/drivers/sdcard.c ****                         break; // Timeout not reached yet so keep waiting
 2357              	 .loc 1 928 0
 2358 02fc FFF7FEFF 	 bl millis
 2359 0300 0246     	 mov r2,r0
 2360 0302 2A4B     	 ldr r3,.L172
 2361 0304 D3F81130 	 ldr r3,[r3,#17]
 2362 0308 6433     	 adds r3,r3,#100
 2363 030a 9A42     	 cmp r2,r3
 2364 030c 00D8     	 bhi .L163
 929:../cleanflight/src/main/drivers/sdcard.c ****                     }
 2365              	 .loc 1 929 0 discriminator 6
 2366 030e 15E0     	 b .L161
 2367              	.L163:
 935:../cleanflight/src/main/drivers/sdcard.c **** 
 2368              	 .loc 1 935 0
 2369 0310 FFF7FEFF 	 bl sdcard_deselect
 937:../cleanflight/src/main/drivers/sdcard.c **** 
 2370              	 .loc 1 937 0
 2371 0314 FFF7FEFF 	 bl sdcard_reset
 939:../cleanflight/src/main/drivers/sdcard.c ****                         sdcard.pendingOperation.callback(
 2372              	 .loc 1 939 0
 2373 0318 244B     	 ldr r3,.L172
 2374 031a D3F80930 	 ldr r3,[r3,#9]
 2375 031e 002B     	 cmp r3,#0
 2376 0320 0BD0     	 beq .L166
 940:../cleanflight/src/main/drivers/sdcard.c ****                             SDCARD_BLOCK_OPERATION_READ,
 2377              	 .loc 1 940 0
 2378 0322 224B     	 ldr r3,.L172
 2379 0324 D3F80940 	 ldr r4,[r3,#9]
 2380 0328 204B     	 ldr r3,.L172
 2381 032a 5A68     	 ldr r2,[r3,#4]
 2382 032c 1F4B     	 ldr r3,.L172
 2383 032e D3F80D30 	 ldr r3,[r3,#13]
 2384 0332 0020     	 movs r0,#0
 2385 0334 1146     	 mov r1,r2
 2386 0336 0022     	 movs r2,#0
 2387 0338 A047     	 blx r4
 2388              	.L166:
 948:../cleanflight/src/main/drivers/sdcard.c ****                 break;
 2389              	 .loc 1 948 0
 2390 033a 72E6     	 b .L131
 2391              	.L161:
 2392              	 .loc 1 951 0 discriminator 5
 2393 033c 19E0     	 b .L133
 2394              	.L141:
 952:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_STOPPING_MULTIPLE_BLOCK_WRITE:
 953:../cleanflight/src/main/drivers/sdcard.c ****             if (sdcard_waitForIdle(SDCARD_MAXIMUM_BYTE_DELAY_FOR_CMD_REPLY)) {
 2395              	 .loc 1 953 0
 2396 033e 0820     	 movs r0,#8
 2397 0340 FFF7FEFF 	 bl sdcard_waitForIdle
 2398 0344 0346     	 mov r3,r0
 2399 0346 002B     	 cmp r3,#0
 2400 0348 06D0     	 beq .L167
 954:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard_deselect();
 2401              	 .loc 1 954 0
 2402 034a FFF7FEFF 	 bl sdcard_deselect
 955:../cleanflight/src/main/drivers/sdcard.c **** 
 956:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard.state = SDCARD_STATE_READY;
 2403              	 .loc 1 956 0
 2404 034e 174B     	 ldr r3,.L172
 2405 0350 0422     	 movs r2,#4
 2406 0352 83F82020 	 strb r2,[r3,#32]
 2407 0356 0BE0     	 b .L168
 2408              	.L167:
 957:../cleanflight/src/main/drivers/sdcard.c **** 
 958:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
 959:../cleanflight/src/main/drivers/sdcard.c ****                 if (sdcard.profiler) {
 960:../cleanflight/src/main/drivers/sdcard.c ****                     sdcard.profiler(SDCARD_BLOCK_OPERATION_WRITE, sdcard.pendingOperation.blockInde
 961:../cleanflight/src/main/drivers/sdcard.c ****                 }
 962:../cleanflight/src/main/drivers/sdcard.c **** #endif
 963:../cleanflight/src/main/drivers/sdcard.c ****             } else if (millis() > sdcard.operationStartTime + SDCARD_TIMEOUT_WRITE_MSEC) {
 2409              	 .loc 1 963 0
 2410 0358 FFF7FEFF 	 bl millis
 2411 035c 0246     	 mov r2,r0
 2412 035e 134B     	 ldr r3,.L172
 2413 0360 D3F81130 	 ldr r3,[r3,#17]
 2414 0364 FA33     	 adds r3,r3,#250
 2415 0366 9A42     	 cmp r2,r3
 2416 0368 02D9     	 bls .L168
 964:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard_reset();
 2417              	 .loc 1 964 0
 2418 036a FFF7FEFF 	 bl sdcard_reset
 965:../cleanflight/src/main/drivers/sdcard.c ****                 goto doMore;
 2419              	 .loc 1 965 0
 2420 036e 58E6     	 b .L131
 2421              	.L168:
 966:../cleanflight/src/main/drivers/sdcard.c ****             }
 967:../cleanflight/src/main/drivers/sdcard.c ****         break;
 2422              	 .loc 1 967 0
 2423 0370 00BF     	 nop
 2424              	.L133:
 968:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_NOT_PRESENT:
 969:../cleanflight/src/main/drivers/sdcard.c ****         default:
 970:../cleanflight/src/main/drivers/sdcard.c ****             ;
 971:../cleanflight/src/main/drivers/sdcard.c ****     }
 972:../cleanflight/src/main/drivers/sdcard.c **** 
 973:../cleanflight/src/main/drivers/sdcard.c ****     // Is the card's initialization taking too long?
 974:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.state >= SDCARD_STATE_RESET && sdcard.state < SDCARD_STATE_READY
 2425              	 .loc 1 974 0
 2426 0372 0E4B     	 ldr r3,.L172
 2427 0374 93F82030 	 ldrb r3,[r3,#32]
 2428 0378 002B     	 cmp r3,#0
 2429 037a 0FD0     	 beq .L169
 2430              	 .loc 1 974 0 is_stmt 0 discriminator 1
 2431 037c 0B4B     	 ldr r3,.L172
 2432 037e 93F82030 	 ldrb r3,[r3,#32]
 2433 0382 032B     	 cmp r3,#3
 2434 0384 0AD8     	 bhi .L169
 975:../cleanflight/src/main/drivers/sdcard.c ****             && millis() - sdcard.operationStartTime > SDCARD_TIMEOUT_INIT_MILLIS) {
 2435              	 .loc 1 975 0 is_stmt 1
 2436 0386 FFF7FEFF 	 bl millis
 2437 038a 0246     	 mov r2,r0
 2438 038c 074B     	 ldr r3,.L172
 2439 038e D3F81130 	 ldr r3,[r3,#17]
 2440 0392 D31A     	 subs r3,r2,r3
 2441 0394 C82B     	 cmp r3,#200
 2442 0396 01D9     	 bls .L169
 976:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_reset();
 2443              	 .loc 1 976 0
 2444 0398 FFF7FEFF 	 bl sdcard_reset
 2445              	.L169:
 977:../cleanflight/src/main/drivers/sdcard.c ****     }
 978:../cleanflight/src/main/drivers/sdcard.c **** 
 979:../cleanflight/src/main/drivers/sdcard.c ****     return sdcard_isReady();
 2446              	 .loc 1 979 0
 2447 039c FFF7FEFF 	 bl sdcard_isReady
 2448 03a0 0346     	 mov r3,r0
 2449              	.L132:
 980:../cleanflight/src/main/drivers/sdcard.c **** }
 2450              	 .loc 1 980 0
 2451 03a2 1846     	 mov r0,r3
 2452 03a4 0C37     	 adds r7,r7,#12
 2453              	.LCFI98:
 2454              	 .cfi_def_cfa_offset 12
 2455 03a6 BD46     	 mov sp,r7
 2456              	.LCFI99:
 2457              	 .cfi_def_cfa_register 13
 2458              	 
 2459 03a8 90BD     	 pop {r4,r7,pc}
 2460              	.L173:
 2461 03aa 00BF     	 .align 2
 2462              	.L172:
 2463 03ac 00000000 	 .word sdcard
 2464              	 .cfi_endproc
 2465              	.LFE552:
 2467              	 .section .text.sdcard_writeBlock,"ax",%progbits
 2468              	 .align 2
 2469              	 .global sdcard_writeBlock
 2470              	 .thumb
 2471              	 .thumb_func
 2473              	sdcard_writeBlock:
 2474              	.LFB553:
 981:../cleanflight/src/main/drivers/sdcard.c **** 
 982:../cleanflight/src/main/drivers/sdcard.c **** /**
 983:../cleanflight/src/main/drivers/sdcard.c ****  * Write the 512-byte block from the given buffer into the block with the given index.
 984:../cleanflight/src/main/drivers/sdcard.c ****  *
 985:../cleanflight/src/main/drivers/sdcard.c ****  * If the write does not complete immediately, your callback will be called later. If the write was
 986:../cleanflight/src/main/drivers/sdcard.c ****  * buffer pointer will be the same buffer you originally passed in, otherwise the buffer will be se
 987:../cleanflight/src/main/drivers/sdcard.c ****  *
 988:../cleanflight/src/main/drivers/sdcard.c ****  * Returns:
 989:../cleanflight/src/main/drivers/sdcard.c ****  *     SDCARD_OPERATION_IN_PROGRESS - Your buffer is currently being transmitted to the card and yo
 990:../cleanflight/src/main/drivers/sdcard.c ****  *                                    called later to report the completion. The buffer pointer mus
 991:../cleanflight/src/main/drivers/sdcard.c ****  *                                    that time.
 992:../cleanflight/src/main/drivers/sdcard.c ****  *     SDCARD_OPERATION_SUCCESS     - Your buffer has been transmitted to the card now.
 993:../cleanflight/src/main/drivers/sdcard.c ****  *     SDCARD_OPERATION_BUSY        - The card is already busy and cannot accept your write
 994:../cleanflight/src/main/drivers/sdcard.c ****  *     SDCARD_OPERATION_FAILURE     - Your write was rejected by the card, card will be reset
 995:../cleanflight/src/main/drivers/sdcard.c ****  */
 996:../cleanflight/src/main/drivers/sdcard.c **** sdcardOperationStatus_e sdcard_writeBlock(uint32_t blockIndex, uint8_t *buffer, sdcard_operationCom
 997:../cleanflight/src/main/drivers/sdcard.c **** {
 2475              	 .loc 1 997 0
 2476              	 .cfi_startproc
 2477              	 
 2478              	 
 2479 0000 80B5     	 push {r7,lr}
 2480              	.LCFI100:
 2481              	 .cfi_def_cfa_offset 8
 2482              	 .cfi_offset 7,-8
 2483              	 .cfi_offset 14,-4
 2484 0002 86B0     	 sub sp,sp,#24
 2485              	.LCFI101:
 2486              	 .cfi_def_cfa_offset 32
 2487 0004 00AF     	 add r7,sp,#0
 2488              	.LCFI102:
 2489              	 .cfi_def_cfa_register 7
 2490 0006 F860     	 str r0,[r7,#12]
 2491 0008 B960     	 str r1,[r7,#8]
 2492 000a 7A60     	 str r2,[r7,#4]
 2493 000c 3B60     	 str r3,[r7]
 2494              	.L175:
 998:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t status;
 999:../cleanflight/src/main/drivers/sdcard.c **** 
1000:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
1001:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.pendingOperation.profileStartTime = micros();
1002:../cleanflight/src/main/drivers/sdcard.c **** #endif
1003:../cleanflight/src/main/drivers/sdcard.c **** 
1004:../cleanflight/src/main/drivers/sdcard.c ****     doMore:
1005:../cleanflight/src/main/drivers/sdcard.c ****     switch (sdcard.state) {
 2495              	 .loc 1 1005 0
 2496 000e 2B4B     	 ldr r3,.L187
 2497 0010 93F82030 	 ldrb r3,[r3,#32]
 2498 0014 042B     	 cmp r3,#4
 2499 0016 0FD0     	 beq .L177
 2500 0018 082B     	 cmp r3,#8
 2501 001a 27D1     	 bne .L186
1006:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_WRITING_MULTIPLE_BLOCKS:
1007:../cleanflight/src/main/drivers/sdcard.c ****             // Do we need to cancel the previous multi-block write?
1008:../cleanflight/src/main/drivers/sdcard.c ****             if (blockIndex != sdcard.multiWriteNextBlock) {
 2502              	 .loc 1 1008 0
 2503 001c 274B     	 ldr r3,.L187
 2504 001e 9A69     	 ldr r2,[r3,#24]
 2505 0020 FB68     	 ldr r3,[r7,#12]
 2506 0022 9A42     	 cmp r2,r3
 2507 0024 07D0     	 beq .L179
1009:../cleanflight/src/main/drivers/sdcard.c ****                 if (sdcard_endWriteBlocks() == SDCARD_OPERATION_SUCCESS) {
 2508              	 .loc 1 1009 0
 2509 0026 FFF7FEFF 	 bl sdcard_endWriteBlocks
 2510 002a 0346     	 mov r3,r0
 2511 002c 022B     	 cmp r3,#2
 2512 002e 00D1     	 bne .L180
1010:../cleanflight/src/main/drivers/sdcard.c ****                     // Now we've entered the ready state, we can try again
1011:../cleanflight/src/main/drivers/sdcard.c ****                     goto doMore;
 2513              	 .loc 1 1011 0
 2514 0030 EDE7     	 b .L175
 2515              	.L180:
1012:../cleanflight/src/main/drivers/sdcard.c ****                 } else {
1013:../cleanflight/src/main/drivers/sdcard.c ****                     return SDCARD_OPERATION_BUSY;
 2516              	 .loc 1 1013 0
 2517 0032 0123     	 movs r3,#1
 2518 0034 3EE0     	 b .L181
 2519              	.L179:
1014:../cleanflight/src/main/drivers/sdcard.c ****                 }
1015:../cleanflight/src/main/drivers/sdcard.c ****             }
1016:../cleanflight/src/main/drivers/sdcard.c **** 
1017:../cleanflight/src/main/drivers/sdcard.c ****             // We're continuing a multi-block write
1018:../cleanflight/src/main/drivers/sdcard.c ****         break;
 2520              	 .loc 1 1018 0
 2521 0036 1BE0     	 b .L182
 2522              	.L177:
1019:../cleanflight/src/main/drivers/sdcard.c ****         case SDCARD_STATE_READY:
1020:../cleanflight/src/main/drivers/sdcard.c ****             // We're not continuing a multi-block write so we need to send a single-block write com
1021:../cleanflight/src/main/drivers/sdcard.c ****             sdcard_select();
 2523              	 .loc 1 1021 0
 2524 0038 FFF7FEFF 	 bl sdcard_select
1022:../cleanflight/src/main/drivers/sdcard.c **** 
1023:../cleanflight/src/main/drivers/sdcard.c ****             // Standard size cards use byte addressing, high capacity cards use block addressing
1024:../cleanflight/src/main/drivers/sdcard.c ****             status = sdcard_sendCommand(SDCARD_COMMAND_WRITE_BLOCK, sdcard.highCapacity ? blockInde
 2525              	 .loc 1 1024 0
 2526 003c 1F4B     	 ldr r3,.L187
 2527 003e DB7D     	 ldrb r3,[r3,#23]
 2528 0040 002B     	 cmp r3,#0
 2529 0042 01D0     	 beq .L183
 2530              	 .loc 1 1024 0 is_stmt 0 discriminator 1
 2531 0044 FB68     	 ldr r3,[r7,#12]
 2532 0046 01E0     	 b .L184
 2533              	.L183:
 2534              	 .loc 1 1024 0 discriminator 2
 2535 0048 FB68     	 ldr r3,[r7,#12]
 2536 004a 5B02     	 lsls r3,r3,#9
 2537              	.L184:
 2538              	 .loc 1 1024 0 discriminator 4
 2539 004c 1820     	 movs r0,#24
 2540 004e 1946     	 mov r1,r3
 2541 0050 FFF7FEFF 	 bl sdcard_sendCommand
 2542 0054 0346     	 mov r3,r0
 2543 0056 FB75     	 strb r3,[r7,#23]
1025:../cleanflight/src/main/drivers/sdcard.c **** 
1026:../cleanflight/src/main/drivers/sdcard.c ****             if (status != 0) {
 2544              	 .loc 1 1026 0 is_stmt 1 discriminator 4
 2545 0058 FB7D     	 ldrb r3,[r7,#23]
 2546 005a 002B     	 cmp r3,#0
 2547 005c 05D0     	 beq .L185
1027:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard_deselect();
 2548              	 .loc 1 1027 0
 2549 005e FFF7FEFF 	 bl sdcard_deselect
1028:../cleanflight/src/main/drivers/sdcard.c **** 
1029:../cleanflight/src/main/drivers/sdcard.c ****                 sdcard_reset();
 2550              	 .loc 1 1029 0
 2551 0062 FFF7FEFF 	 bl sdcard_reset
1030:../cleanflight/src/main/drivers/sdcard.c **** 
1031:../cleanflight/src/main/drivers/sdcard.c ****                 return SDCARD_OPERATION_FAILURE;
 2552              	 .loc 1 1031 0
 2553 0066 0323     	 movs r3,#3
 2554 0068 24E0     	 b .L181
 2555              	.L185:
1032:../cleanflight/src/main/drivers/sdcard.c ****             }
1033:../cleanflight/src/main/drivers/sdcard.c ****         break;
 2556              	 .loc 1 1033 0
 2557 006a 01E0     	 b .L182
 2558              	.L186:
1034:../cleanflight/src/main/drivers/sdcard.c ****         default:
1035:../cleanflight/src/main/drivers/sdcard.c ****             return SDCARD_OPERATION_BUSY;
 2559              	 .loc 1 1035 0
 2560 006c 0123     	 movs r3,#1
 2561 006e 21E0     	 b .L181
 2562              	.L182:
1036:../cleanflight/src/main/drivers/sdcard.c ****     }
1037:../cleanflight/src/main/drivers/sdcard.c **** 
1038:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_sendDataBlockBegin(buffer, sdcard.state == SDCARD_STATE_WRITING_MULTIPLE_BLOCKS);
 2563              	 .loc 1 1038 0
 2564 0070 124B     	 ldr r3,.L187
 2565 0072 93F82030 	 ldrb r3,[r3,#32]
 2566 0076 082B     	 cmp r3,#8
 2567 0078 0CBF     	 ite eq
 2568 007a 0123     	 moveq r3,#1
 2569 007c 0023     	 movne r3,#0
 2570 007e DBB2     	 uxtb r3,r3
 2571 0080 B868     	 ldr r0,[r7,#8]
 2572 0082 1946     	 mov r1,r3
 2573 0084 FFF7FEFF 	 bl sdcard_sendDataBlockBegin
1039:../cleanflight/src/main/drivers/sdcard.c **** 
1040:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.pendingOperation.buffer = buffer;
 2574              	 .loc 1 1040 0
 2575 0088 0C4A     	 ldr r2,.L187
 2576 008a BB68     	 ldr r3,[r7,#8]
 2577 008c 1360     	 str r3,[r2]
1041:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.pendingOperation.blockIndex = blockIndex;
 2578              	 .loc 1 1041 0
 2579 008e 0B4A     	 ldr r2,.L187
 2580 0090 FB68     	 ldr r3,[r7,#12]
 2581 0092 5360     	 str r3,[r2,#4]
1042:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.pendingOperation.callback = callback;
 2582              	 .loc 1 1042 0
 2583 0094 094A     	 ldr r2,.L187
 2584 0096 7B68     	 ldr r3,[r7,#4]
 2585 0098 C2F80930 	 str r3,[r2,#9]
1043:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.pendingOperation.callbackData = callbackData;
 2586              	 .loc 1 1043 0
 2587 009c 074A     	 ldr r2,.L187
 2588 009e 3B68     	 ldr r3,[r7]
 2589 00a0 C2F80D30 	 str r3,[r2,#13]
1044:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.pendingOperation.chunkIndex = 1; // (for non-DMA transfers) we've sent chunk #0 already
 2590              	 .loc 1 1044 0
 2591 00a4 054B     	 ldr r3,.L187
 2592 00a6 0122     	 movs r2,#1
 2593 00a8 1A72     	 strb r2,[r3,#8]
1045:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.state = SDCARD_STATE_SENDING_WRITE;
 2594              	 .loc 1 1045 0
 2595 00aa 044B     	 ldr r3,.L187
 2596 00ac 0622     	 movs r2,#6
 2597 00ae 83F82020 	 strb r2,[r3,#32]
1046:../cleanflight/src/main/drivers/sdcard.c **** 
1047:../cleanflight/src/main/drivers/sdcard.c ****     return SDCARD_OPERATION_IN_PROGRESS;
 2598              	 .loc 1 1047 0
 2599 00b2 0023     	 movs r3,#0
 2600              	.L181:
1048:../cleanflight/src/main/drivers/sdcard.c **** }
 2601              	 .loc 1 1048 0
 2602 00b4 1846     	 mov r0,r3
 2603 00b6 1837     	 adds r7,r7,#24
 2604              	.LCFI103:
 2605              	 .cfi_def_cfa_offset 8
 2606 00b8 BD46     	 mov sp,r7
 2607              	.LCFI104:
 2608              	 .cfi_def_cfa_register 13
 2609              	 
 2610 00ba 80BD     	 pop {r7,pc}
 2611              	.L188:
 2612              	 .align 2
 2613              	.L187:
 2614 00bc 00000000 	 .word sdcard
 2615              	 .cfi_endproc
 2616              	.LFE553:
 2618              	 .section .text.sdcard_beginWriteBlocks,"ax",%progbits
 2619              	 .align 2
 2620              	 .global sdcard_beginWriteBlocks
 2621              	 .thumb
 2622              	 .thumb_func
 2624              	sdcard_beginWriteBlocks:
 2625              	.LFB554:
1049:../cleanflight/src/main/drivers/sdcard.c **** 
1050:../cleanflight/src/main/drivers/sdcard.c **** /**
1051:../cleanflight/src/main/drivers/sdcard.c ****  * Begin writing a series of consecutive blocks beginning at the given block index. This will allow
1052:../cleanflight/src/main/drivers/sdcard.c ****  * the SD card to pre-erase the number of blocks you specifiy, which can allow the writes to comple
1053:../cleanflight/src/main/drivers/sdcard.c ****  *
1054:../cleanflight/src/main/drivers/sdcard.c ****  * Afterwards, just call sdcard_writeBlock() as normal to write those blocks consecutively.
1055:../cleanflight/src/main/drivers/sdcard.c ****  *
1056:../cleanflight/src/main/drivers/sdcard.c ****  * It's okay to abort the multi-block write at any time by writing to a non-consecutive address, or
1057:../cleanflight/src/main/drivers/sdcard.c ****  *
1058:../cleanflight/src/main/drivers/sdcard.c ****  * Returns:
1059:../cleanflight/src/main/drivers/sdcard.c ****  *     SDCARD_OPERATION_SUCCESS     - Multi-block write has been queued
1060:../cleanflight/src/main/drivers/sdcard.c ****  *     SDCARD_OPERATION_BUSY        - The card is already busy and cannot accept your write
1061:../cleanflight/src/main/drivers/sdcard.c ****  *     SDCARD_OPERATION_FAILURE     - A fatal error occured, card will be reset
1062:../cleanflight/src/main/drivers/sdcard.c ****  */
1063:../cleanflight/src/main/drivers/sdcard.c **** sdcardOperationStatus_e sdcard_beginWriteBlocks(uint32_t blockIndex, uint32_t blockCount)
1064:../cleanflight/src/main/drivers/sdcard.c **** {
 2626              	 .loc 1 1064 0
 2627              	 .cfi_startproc
 2628              	 
 2629              	 
 2630 0000 80B5     	 push {r7,lr}
 2631              	.LCFI105:
 2632              	 .cfi_def_cfa_offset 8
 2633              	 .cfi_offset 7,-8
 2634              	 .cfi_offset 14,-4
 2635 0002 82B0     	 sub sp,sp,#8
 2636              	.LCFI106:
 2637              	 .cfi_def_cfa_offset 16
 2638 0004 00AF     	 add r7,sp,#0
 2639              	.LCFI107:
 2640              	 .cfi_def_cfa_register 7
 2641 0006 7860     	 str r0,[r7,#4]
 2642 0008 3960     	 str r1,[r7]
1065:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.state != SDCARD_STATE_READY) {
 2643              	 .loc 1 1065 0
 2644 000a 234B     	 ldr r3,.L197
 2645 000c 93F82030 	 ldrb r3,[r3,#32]
 2646 0010 042B     	 cmp r3,#4
 2647 0012 14D0     	 beq .L190
1066:../cleanflight/src/main/drivers/sdcard.c ****         if (sdcard.state == SDCARD_STATE_WRITING_MULTIPLE_BLOCKS) {
 2648              	 .loc 1 1066 0
 2649 0014 204B     	 ldr r3,.L197
 2650 0016 93F82030 	 ldrb r3,[r3,#32]
 2651 001a 082B     	 cmp r3,#8
 2652 001c 0DD1     	 bne .L191
1067:../cleanflight/src/main/drivers/sdcard.c ****             if (blockIndex == sdcard.multiWriteNextBlock) {
 2653              	 .loc 1 1067 0
 2654 001e 1E4B     	 ldr r3,.L197
 2655 0020 9A69     	 ldr r2,[r3,#24]
 2656 0022 7B68     	 ldr r3,[r7,#4]
 2657 0024 9A42     	 cmp r2,r3
 2658 0026 01D1     	 bne .L192
1068:../cleanflight/src/main/drivers/sdcard.c ****                 // Assume that the caller wants to continue the multi-block write they already have
1069:../cleanflight/src/main/drivers/sdcard.c ****                 return SDCARD_OPERATION_SUCCESS;
 2659              	 .loc 1 1069 0
 2660 0028 0223     	 movs r3,#2
 2661 002a 31E0     	 b .L193
 2662              	.L192:
1070:../cleanflight/src/main/drivers/sdcard.c ****             } else if (sdcard_endWriteBlocks() != SDCARD_OPERATION_SUCCESS) {
 2663              	 .loc 1 1070 0
 2664 002c FFF7FEFF 	 bl sdcard_endWriteBlocks
 2665 0030 0346     	 mov r3,r0
 2666 0032 022B     	 cmp r3,#2
 2667 0034 03D0     	 beq .L190
1071:../cleanflight/src/main/drivers/sdcard.c ****                 return SDCARD_OPERATION_BUSY;
 2668              	 .loc 1 1071 0
 2669 0036 0123     	 movs r3,#1
 2670 0038 2AE0     	 b .L193
 2671              	.L191:
1072:../cleanflight/src/main/drivers/sdcard.c ****             } // Else we've completed the previous multi-block write and can fall through to start 
1073:../cleanflight/src/main/drivers/sdcard.c ****         } else {
1074:../cleanflight/src/main/drivers/sdcard.c ****             return SDCARD_OPERATION_BUSY;
 2672              	 .loc 1 1074 0
 2673 003a 0123     	 movs r3,#1
 2674 003c 28E0     	 b .L193
 2675              	.L190:
1075:../cleanflight/src/main/drivers/sdcard.c ****         }
1076:../cleanflight/src/main/drivers/sdcard.c ****     }
1077:../cleanflight/src/main/drivers/sdcard.c **** 
1078:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_select();
 2676              	 .loc 1 1078 0
 2677 003e FFF7FEFF 	 bl sdcard_select
1079:../cleanflight/src/main/drivers/sdcard.c **** 
1080:../cleanflight/src/main/drivers/sdcard.c ****     if (
1081:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_sendAppCommand(SDCARD_ACOMMAND_SET_WR_BLOCK_ERASE_COUNT, blockCount) == 0
 2678              	 .loc 1 1081 0
 2679 0042 1720     	 movs r0,#23
 2680 0044 3968     	 ldr r1,[r7]
 2681 0046 FFF7FEFF 	 bl sdcard_sendAppCommand
 2682 004a 0346     	 mov r3,r0
1080:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_sendAppCommand(SDCARD_ACOMMAND_SET_WR_BLOCK_ERASE_COUNT, blockCount) == 0
 2683              	 .loc 1 1080 0
 2684 004c 002B     	 cmp r3,#0
 2685 004e 1AD1     	 bne .L194
1082:../cleanflight/src/main/drivers/sdcard.c ****         && sdcard_sendCommand(SDCARD_COMMAND_WRITE_MULTIPLE_BLOCK, sdcard.highCapacity ? blockIndex
 2686              	 .loc 1 1082 0
 2687 0050 114B     	 ldr r3,.L197
 2688 0052 DB7D     	 ldrb r3,[r3,#23]
 2689 0054 002B     	 cmp r3,#0
 2690 0056 01D0     	 beq .L195
 2691              	 .loc 1 1082 0 is_stmt 0 discriminator 1
 2692 0058 7B68     	 ldr r3,[r7,#4]
 2693 005a 01E0     	 b .L196
 2694              	.L195:
 2695              	 .loc 1 1082 0 discriminator 2
 2696 005c 7B68     	 ldr r3,[r7,#4]
 2697 005e 5B02     	 lsls r3,r3,#9
 2698              	.L196:
 2699              	 .loc 1 1082 0 discriminator 4
 2700 0060 1920     	 movs r0,#25
 2701 0062 1946     	 mov r1,r3
 2702 0064 FFF7FEFF 	 bl sdcard_sendCommand
 2703 0068 0346     	 mov r3,r0
 2704 006a 002B     	 cmp r3,#0
 2705 006c 0BD1     	 bne .L194
1083:../cleanflight/src/main/drivers/sdcard.c ****     ) {
1084:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.state = SDCARD_STATE_WRITING_MULTIPLE_BLOCKS;
 2706              	 .loc 1 1084 0 is_stmt 1
 2707 006e 0A4B     	 ldr r3,.L197
 2708 0070 0822     	 movs r2,#8
 2709 0072 83F82020 	 strb r2,[r3,#32]
1085:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.multiWriteBlocksRemain = blockCount;
 2710              	 .loc 1 1085 0
 2711 0076 084A     	 ldr r2,.L197
 2712 0078 3B68     	 ldr r3,[r7]
 2713 007a D361     	 str r3,[r2,#28]
1086:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.multiWriteNextBlock = blockIndex;
 2714              	 .loc 1 1086 0
 2715 007c 064A     	 ldr r2,.L197
 2716 007e 7B68     	 ldr r3,[r7,#4]
 2717 0080 9361     	 str r3,[r2,#24]
1087:../cleanflight/src/main/drivers/sdcard.c **** 
1088:../cleanflight/src/main/drivers/sdcard.c ****         // Leave the card selected
1089:../cleanflight/src/main/drivers/sdcard.c ****         return SDCARD_OPERATION_SUCCESS;
 2718              	 .loc 1 1089 0
 2719 0082 0223     	 movs r3,#2
 2720 0084 04E0     	 b .L193
 2721              	.L194:
1090:../cleanflight/src/main/drivers/sdcard.c ****     } else {
1091:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_deselect();
 2722              	 .loc 1 1091 0
 2723 0086 FFF7FEFF 	 bl sdcard_deselect
1092:../cleanflight/src/main/drivers/sdcard.c **** 
1093:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_reset();
 2724              	 .loc 1 1093 0
 2725 008a FFF7FEFF 	 bl sdcard_reset
1094:../cleanflight/src/main/drivers/sdcard.c **** 
1095:../cleanflight/src/main/drivers/sdcard.c ****         return SDCARD_OPERATION_FAILURE;
 2726              	 .loc 1 1095 0
 2727 008e 0323     	 movs r3,#3
 2728              	.L193:
1096:../cleanflight/src/main/drivers/sdcard.c ****     }
1097:../cleanflight/src/main/drivers/sdcard.c **** }
 2729              	 .loc 1 1097 0
 2730 0090 1846     	 mov r0,r3
 2731 0092 0837     	 adds r7,r7,#8
 2732              	.LCFI108:
 2733              	 .cfi_def_cfa_offset 8
 2734 0094 BD46     	 mov sp,r7
 2735              	.LCFI109:
 2736              	 .cfi_def_cfa_register 13
 2737              	 
 2738 0096 80BD     	 pop {r7,pc}
 2739              	.L198:
 2740              	 .align 2
 2741              	.L197:
 2742 0098 00000000 	 .word sdcard
 2743              	 .cfi_endproc
 2744              	.LFE554:
 2746              	 .section .text.sdcard_readBlock,"ax",%progbits
 2747              	 .align 2
 2748              	 .global sdcard_readBlock
 2749              	 .thumb
 2750              	 .thumb_func
 2752              	sdcard_readBlock:
 2753              	.LFB555:
1098:../cleanflight/src/main/drivers/sdcard.c **** 
1099:../cleanflight/src/main/drivers/sdcard.c **** /**
1100:../cleanflight/src/main/drivers/sdcard.c ****  * Read the 512-byte block with the given index into the given 512-byte buffer.
1101:../cleanflight/src/main/drivers/sdcard.c ****  *
1102:../cleanflight/src/main/drivers/sdcard.c ****  * When the read completes, your callback will be called. If the read was successful, the buffer po
1103:../cleanflight/src/main/drivers/sdcard.c ****  * same buffer you originally passed in, otherwise the buffer will be set to NULL.
1104:../cleanflight/src/main/drivers/sdcard.c ****  *
1105:../cleanflight/src/main/drivers/sdcard.c ****  * You must keep the pointer to the buffer valid until the operation completes!
1106:../cleanflight/src/main/drivers/sdcard.c ****  *
1107:../cleanflight/src/main/drivers/sdcard.c ****  * Returns:
1108:../cleanflight/src/main/drivers/sdcard.c ****  *     true - The operation was successfully queued for later completion, your callback will be cal
1109:../cleanflight/src/main/drivers/sdcard.c ****  *     false - The operation could not be started due to the card being busy (try again later).
1110:../cleanflight/src/main/drivers/sdcard.c ****  */
1111:../cleanflight/src/main/drivers/sdcard.c **** bool sdcard_readBlock(uint32_t blockIndex, uint8_t *buffer, sdcard_operationCompleteCallback_c call
1112:../cleanflight/src/main/drivers/sdcard.c **** {
 2754              	 .loc 1 1112 0
 2755              	 .cfi_startproc
 2756              	 
 2757              	 
 2758 0000 80B5     	 push {r7,lr}
 2759              	.LCFI110:
 2760              	 .cfi_def_cfa_offset 8
 2761              	 .cfi_offset 7,-8
 2762              	 .cfi_offset 14,-4
 2763 0002 86B0     	 sub sp,sp,#24
 2764              	.LCFI111:
 2765              	 .cfi_def_cfa_offset 32
 2766 0004 00AF     	 add r7,sp,#0
 2767              	.LCFI112:
 2768              	 .cfi_def_cfa_register 7
 2769 0006 F860     	 str r0,[r7,#12]
 2770 0008 B960     	 str r1,[r7,#8]
 2771 000a 7A60     	 str r2,[r7,#4]
 2772 000c 3B60     	 str r3,[r7]
1113:../cleanflight/src/main/drivers/sdcard.c ****     if (sdcard.state != SDCARD_STATE_READY) {
 2773              	 .loc 1 1113 0
 2774 000e 234B     	 ldr r3,.L206
 2775 0010 93F82030 	 ldrb r3,[r3,#32]
 2776 0014 042B     	 cmp r3,#4
 2777 0016 0DD0     	 beq .L200
1114:../cleanflight/src/main/drivers/sdcard.c ****         if (sdcard.state == SDCARD_STATE_WRITING_MULTIPLE_BLOCKS) {
 2778              	 .loc 1 1114 0
 2779 0018 204B     	 ldr r3,.L206
 2780 001a 93F82030 	 ldrb r3,[r3,#32]
 2781 001e 082B     	 cmp r3,#8
 2782 0020 06D1     	 bne .L201
1115:../cleanflight/src/main/drivers/sdcard.c ****             if (sdcard_endWriteBlocks() != SDCARD_OPERATION_SUCCESS) {
 2783              	 .loc 1 1115 0
 2784 0022 FFF7FEFF 	 bl sdcard_endWriteBlocks
 2785 0026 0346     	 mov r3,r0
 2786 0028 022B     	 cmp r3,#2
 2787 002a 03D0     	 beq .L200
1116:../cleanflight/src/main/drivers/sdcard.c ****                 return false;
 2788              	 .loc 1 1116 0
 2789 002c 0023     	 movs r3,#0
 2790 002e 31E0     	 b .L202
 2791              	.L201:
1117:../cleanflight/src/main/drivers/sdcard.c ****             }
1118:../cleanflight/src/main/drivers/sdcard.c ****         } else {
1119:../cleanflight/src/main/drivers/sdcard.c ****             return false;
 2792              	 .loc 1 1119 0
 2793 0030 0023     	 movs r3,#0
 2794 0032 2FE0     	 b .L202
 2795              	.L200:
1120:../cleanflight/src/main/drivers/sdcard.c ****         }
1121:../cleanflight/src/main/drivers/sdcard.c ****     }
1122:../cleanflight/src/main/drivers/sdcard.c **** 
1123:../cleanflight/src/main/drivers/sdcard.c **** #ifdef SDCARD_PROFILING
1124:../cleanflight/src/main/drivers/sdcard.c ****     sdcard.pendingOperation.profileStartTime = micros();
1125:../cleanflight/src/main/drivers/sdcard.c **** #endif
1126:../cleanflight/src/main/drivers/sdcard.c **** 
1127:../cleanflight/src/main/drivers/sdcard.c ****     sdcard_select();
 2796              	 .loc 1 1127 0
 2797 0034 FFF7FEFF 	 bl sdcard_select
1128:../cleanflight/src/main/drivers/sdcard.c **** 
1129:../cleanflight/src/main/drivers/sdcard.c ****     // Standard size cards use byte addressing, high capacity cards use block addressing
1130:../cleanflight/src/main/drivers/sdcard.c ****     uint8_t status = sdcard_sendCommand(SDCARD_COMMAND_READ_SINGLE_BLOCK, sdcard.highCapacity ? blo
 2798              	 .loc 1 1130 0
 2799 0038 184B     	 ldr r3,.L206
 2800 003a DB7D     	 ldrb r3,[r3,#23]
 2801 003c 002B     	 cmp r3,#0
 2802 003e 01D0     	 beq .L203
 2803              	 .loc 1 1130 0 is_stmt 0 discriminator 1
 2804 0040 FB68     	 ldr r3,[r7,#12]
 2805 0042 01E0     	 b .L204
 2806              	.L203:
 2807              	 .loc 1 1130 0 discriminator 2
 2808 0044 FB68     	 ldr r3,[r7,#12]
 2809 0046 5B02     	 lsls r3,r3,#9
 2810              	.L204:
 2811              	 .loc 1 1130 0 discriminator 4
 2812 0048 1120     	 movs r0,#17
 2813 004a 1946     	 mov r1,r3
 2814 004c FFF7FEFF 	 bl sdcard_sendCommand
 2815 0050 0346     	 mov r3,r0
 2816 0052 FB75     	 strb r3,[r7,#23]
1131:../cleanflight/src/main/drivers/sdcard.c **** 
1132:../cleanflight/src/main/drivers/sdcard.c ****     if (status == 0) {
 2817              	 .loc 1 1132 0 is_stmt 1 discriminator 4
 2818 0054 FB7D     	 ldrb r3,[r7,#23]
 2819 0056 002B     	 cmp r3,#0
 2820 0058 19D1     	 bne .L205
1133:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.pendingOperation.buffer = buffer;
 2821              	 .loc 1 1133 0
 2822 005a 104A     	 ldr r2,.L206
 2823 005c BB68     	 ldr r3,[r7,#8]
 2824 005e 1360     	 str r3,[r2]
1134:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.pendingOperation.blockIndex = blockIndex;
 2825              	 .loc 1 1134 0
 2826 0060 0E4A     	 ldr r2,.L206
 2827 0062 FB68     	 ldr r3,[r7,#12]
 2828 0064 5360     	 str r3,[r2,#4]
1135:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.pendingOperation.callback = callback;
 2829              	 .loc 1 1135 0
 2830 0066 0D4A     	 ldr r2,.L206
 2831 0068 7B68     	 ldr r3,[r7,#4]
 2832 006a C2F80930 	 str r3,[r2,#9]
1136:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.pendingOperation.callbackData = callbackData;
 2833              	 .loc 1 1136 0
 2834 006e 0B4A     	 ldr r2,.L206
 2835 0070 3B68     	 ldr r3,[r7]
 2836 0072 C2F80D30 	 str r3,[r2,#13]
1137:../cleanflight/src/main/drivers/sdcard.c **** 
1138:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.state = SDCARD_STATE_READING;
 2837              	 .loc 1 1138 0
 2838 0076 094B     	 ldr r3,.L206
 2839 0078 0522     	 movs r2,#5
 2840 007a 83F82020 	 strb r2,[r3,#32]
1139:../cleanflight/src/main/drivers/sdcard.c **** 
1140:../cleanflight/src/main/drivers/sdcard.c ****         sdcard.operationStartTime = millis();
 2841              	 .loc 1 1140 0
 2842 007e FFF7FEFF 	 bl millis
 2843 0082 0246     	 mov r2,r0
 2844 0084 054B     	 ldr r3,.L206
 2845 0086 C3F81120 	 str r2,[r3,#17]
1141:../cleanflight/src/main/drivers/sdcard.c **** 
1142:../cleanflight/src/main/drivers/sdcard.c ****         // Leave the card selected for the whole transaction
1143:../cleanflight/src/main/drivers/sdcard.c **** 
1144:../cleanflight/src/main/drivers/sdcard.c ****         return true;
 2846              	 .loc 1 1144 0
 2847 008a 0123     	 movs r3,#1
 2848 008c 02E0     	 b .L202
 2849              	.L205:
1145:../cleanflight/src/main/drivers/sdcard.c ****     } else {
1146:../cleanflight/src/main/drivers/sdcard.c ****         sdcard_deselect();
 2850              	 .loc 1 1146 0
 2851 008e FFF7FEFF 	 bl sdcard_deselect
1147:../cleanflight/src/main/drivers/sdcard.c **** 
1148:../cleanflight/src/main/drivers/sdcard.c ****         return false;
 2852              	 .loc 1 1148 0
 2853 0092 0023     	 movs r3,#0
 2854              	.L202:
1149:../cleanflight/src/main/drivers/sdcard.c ****     }
1150:../cleanflight/src/main/drivers/sdcard.c **** }
 2855              	 .loc 1 1150 0
 2856 0094 1846     	 mov r0,r3
 2857 0096 1837     	 adds r7,r7,#24
 2858              	.LCFI113:
 2859              	 .cfi_def_cfa_offset 8
 2860 0098 BD46     	 mov sp,r7
 2861              	.LCFI114:
 2862              	 .cfi_def_cfa_register 13
 2863              	 
 2864 009a 80BD     	 pop {r7,pc}
 2865              	.L207:
 2866              	 .align 2
 2867              	.L206:
 2868 009c 00000000 	 .word sdcard
 2869              	 .cfi_endproc
 2870              	.LFE555:
 2872              	 .section .text.sdcard_isInitialized,"ax",%progbits
 2873              	 .align 2
 2874              	 .global sdcard_isInitialized
 2875              	 .thumb
 2876              	 .thumb_func
 2878              	sdcard_isInitialized:
 2879              	.LFB556:
1151:../cleanflight/src/main/drivers/sdcard.c **** 
1152:../cleanflight/src/main/drivers/sdcard.c **** /**
1153:../cleanflight/src/main/drivers/sdcard.c ****  * Returns true if the SD card has successfully completed its startup procedures.
1154:../cleanflight/src/main/drivers/sdcard.c ****  */
1155:../cleanflight/src/main/drivers/sdcard.c **** bool sdcard_isInitialized(void)
1156:../cleanflight/src/main/drivers/sdcard.c **** {
 2880              	 .loc 1 1156 0
 2881              	 .cfi_startproc
 2882              	 
 2883              	 
 2884              	 
 2885 0000 80B4     	 push {r7}
 2886              	.LCFI115:
 2887              	 .cfi_def_cfa_offset 4
 2888              	 .cfi_offset 7,-4
 2889 0002 00AF     	 add r7,sp,#0
 2890              	.LCFI116:
 2891              	 .cfi_def_cfa_register 7
1157:../cleanflight/src/main/drivers/sdcard.c ****     return sdcard.state >= SDCARD_STATE_READY;
 2892              	 .loc 1 1157 0
 2893 0004 064B     	 ldr r3,.L210
 2894 0006 93F82030 	 ldrb r3,[r3,#32]
 2895 000a 032B     	 cmp r3,#3
 2896 000c 8CBF     	 ite hi
 2897 000e 0123     	 movhi r3,#1
 2898 0010 0023     	 movls r3,#0
 2899 0012 DBB2     	 uxtb r3,r3
1158:../cleanflight/src/main/drivers/sdcard.c **** }
 2900              	 .loc 1 1158 0
 2901 0014 1846     	 mov r0,r3
 2902 0016 BD46     	 mov sp,r7
 2903              	.LCFI117:
 2904              	 .cfi_def_cfa_register 13
 2905              	 
 2906 0018 5DF8047B 	 ldr r7,[sp],#4
 2907              	.LCFI118:
 2908              	 .cfi_restore 7
 2909              	 .cfi_def_cfa_offset 0
 2910 001c 7047     	 bx lr
 2911              	.L211:
 2912 001e 00BF     	 .align 2
 2913              	.L210:
 2914 0020 00000000 	 .word sdcard
 2915              	 .cfi_endproc
 2916              	.LFE556:
 2918              	 .section .text.sdcard_getMetadata,"ax",%progbits
 2919              	 .align 2
 2920              	 .global sdcard_getMetadata
 2921              	 .thumb
 2922              	 .thumb_func
 2924              	sdcard_getMetadata:
 2925              	.LFB557:
1159:../cleanflight/src/main/drivers/sdcard.c **** 
1160:../cleanflight/src/main/drivers/sdcard.c **** const sdcardMetadata_t* sdcard_getMetadata(void)
1161:../cleanflight/src/main/drivers/sdcard.c **** {
 2926              	 .loc 1 1161 0
 2927              	 .cfi_startproc
 2928              	 
 2929              	 
 2930              	 
 2931 0000 80B4     	 push {r7}
 2932              	.LCFI119:
 2933              	 .cfi_def_cfa_offset 4
 2934              	 .cfi_offset 7,-4
 2935 0002 00AF     	 add r7,sp,#0
 2936              	.LCFI120:
 2937              	 .cfi_def_cfa_register 7
1162:../cleanflight/src/main/drivers/sdcard.c ****     return &sdcard.metadata;
 2938              	 .loc 1 1162 0
 2939 0004 024B     	 ldr r3,.L214
1163:../cleanflight/src/main/drivers/sdcard.c **** }
 2940              	 .loc 1 1163 0
 2941 0006 1846     	 mov r0,r3
 2942 0008 BD46     	 mov sp,r7
 2943              	.LCFI121:
 2944              	 .cfi_def_cfa_register 13
 2945              	 
 2946 000a 5DF8047B 	 ldr r7,[sp],#4
 2947              	.LCFI122:
 2948              	 .cfi_restore 7
 2949              	 .cfi_def_cfa_offset 0
 2950 000e 7047     	 bx lr
 2951              	.L215:
 2952              	 .align 2
 2953              	.L214:
 2954 0010 21000000 	 .word sdcard+33
 2955              	 .cfi_endproc
 2956              	.LFE557:
 2958              	 .text
 2959              	.Letext0:
 2960              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2961              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2962              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 2963              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc4_gpio.h"
 2964              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 2965              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 2966              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 2967              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 2968              	 .file 10 "../cleanflight/src/main/drivers/dma.h"
 2969              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 2970              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/sdcard.h"
 2971              	 .file 13 "../cleanflight/src/main/drivers/sdcard.h"
 2972              	 .file 14 "../cleanflight/src/main/drivers/sdcard_standard.h"
 2973              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 2974              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sdcard.c
    {standard input}:20     .bss.sdcard:00000000 $d
    {standard input}:23     .bss.sdcard:00000000 sdcard
    {standard input}:26     .text.sdcardInsertionDetectDeinit:00000000 $t
    {standard input}:31     .text.sdcardInsertionDetectDeinit:00000000 sdcardInsertionDetectDeinit
    {standard input}:70     .text.sdcardInsertionDetectDeinit:00000030 $d
    {standard input}:75     .text.sdcardInsertionDetectInit:00000000 $t
    {standard input}:80     .text.sdcardInsertionDetectInit:00000000 sdcardInsertionDetectInit
    {standard input}:118    .text.sdcardInsertionDetectInit:00000030 $d
    {standard input}:123    .text.sdcard_isInserted:00000000 $t
    {standard input}:128    .text.sdcard_isInserted:00000000 sdcard_isInserted
    {standard input}:198    .text.sdcard_isInserted:0000005c $d
    {standard input}:203    .text.sdcard_isFunctional:00000000 $t
    {standard input}:208    .text.sdcard_isFunctional:00000000 sdcard_isFunctional
    {standard input}:244    .text.sdcard_isFunctional:00000020 $d
    {standard input}:249    .text.sdcard_select:00000000 $t
    {standard input}:253    .text.sdcard_select:00000000 sdcard_select
    {standard input}:277    .text.sdcard_select:00000014 $d
    {standard input}:282    .text.sdcard_deselect:00000000 $t
    {standard input}:286    .text.sdcard_deselect:00000000 sdcard_deselect
    {standard input}:321    .text.sdcard_deselect:00000028 $d
    {standard input}:326    .text.sdcard_reset:00000000 $t
    {standard input}:330    .text.sdcard_reset:00000000 sdcard_reset
    {standard input}:403    .text.sdcard_reset:0000006c $d
    {standard input}:408    .text.sdcard_waitForIdle:00000000 $t
    {standard input}:412    .text.sdcard_waitForIdle:00000000 sdcard_waitForIdle
    {standard input}:476    .text.sdcard_waitForIdle:0000003c $d
    {standard input}:481    .text.sdcard_waitForNonIdleByte:00000000 $t
    {standard input}:485    .text.sdcard_waitForNonIdleByte:00000000 sdcard_waitForNonIdleByte
    {standard input}:555    .text.sdcard_waitForNonIdleByte:00000044 $d
    {standard input}:560    .text.sdcard_sendCommand:00000000 $t
    {standard input}:564    .text.sdcard_sendCommand:00000000 sdcard_sendCommand
    {standard input}:655    .text.sdcard_sendCommand:0000007c $d
    {standard input}:660    .text.sdcard_sendAppCommand:00000000 $t
    {standard input}:664    .text.sdcard_sendAppCommand:00000000 sdcard_sendAppCommand
    {standard input}:708    .text.sdcard_validateInterfaceCondition:00000000 $t
    {standard input}:712    .text.sdcard_validateInterfaceCondition:00000000 sdcard_validateInterfaceCondition
    {standard input}:796    .text.sdcard_validateInterfaceCondition:0000006c $d
    {standard input}:801    .text.sdcard_readOCRRegister:00000000 $t
    {standard input}:805    .text.sdcard_readOCRRegister:00000000 sdcard_readOCRRegister
    {standard input}:882    .text.sdcard_readOCRRegister:00000064 $d
    {standard input}:887    .text.sdcard_receiveDataBlock:00000000 $t
    {standard input}:891    .text.sdcard_receiveDataBlock:00000000 sdcard_receiveDataBlock
    {standard input}:967    .text.sdcard_receiveDataBlock:00000060 $d
    {standard input}:972    .text.sdcard_sendDataBlockFinish:00000000 $t
    {standard input}:976    .text.sdcard_sendDataBlockFinish:00000000 sdcard_sendDataBlockFinish
    {standard input}:1034   .text.sdcard_sendDataBlockFinish:0000004c $d
    {standard input}:1039   .text.sdcard_sendDataBlockBegin:00000000 $t
    {standard input}:1043   .text.sdcard_sendDataBlockBegin:00000000 sdcard_sendDataBlockBegin
    {standard input}:1112   .text.sdcard_sendDataBlockBegin:00000058 $d
    {standard input}:1117   .text.sdcard_receiveCID:00000000 $t
    {standard input}:1121   .text.sdcard_receiveCID:00000000 sdcard_receiveCID
    {standard input}:1250   .text.sdcard_receiveCID:000000d4 $d
    {standard input}:1255   .text.sdcard_fetchCSD:00000000 $t
    {standard input}:1259   .text.sdcard_fetchCSD:00000000 sdcard_fetchCSD
    {standard input}:1423   .text.sdcard_fetchCSD:0000010c $d
    {standard input}:1429   .text.sdcard_checkInitDone:00000000 $t
    {standard input}:1433   .text.sdcard_checkInitDone:00000000 sdcard_checkInitDone
    {standard input}:1492   .text.sdcard_checkInitDone:00000040 $d
    {standard input}:1497   .text.sdcard_init:00000000 $t
    {standard input}:1502   .text.sdcard_init:00000000 sdcard_init
    {standard input}:1725   .text.sdcard_init:00000194 $d
    {standard input}:1731   .text.sdcard_setBlockLength:00000000 $t
    {standard input}:1735   .text.sdcard_setBlockLength:00000000 sdcard_setBlockLength
    {standard input}:1784   .text.sdcard_isReady:00000000 $t
    {standard input}:1788   .text.sdcard_isReady:00000000 sdcard_isReady
    {standard input}:1837   .text.sdcard_isReady:00000030 $d
    {standard input}:1842   .text.sdcard_endWriteBlocks:00000000 $t
    {standard input}:1846   .text.sdcard_endWriteBlocks:00000000 sdcard_endWriteBlocks
    {standard input}:1908   .text.sdcard_endWriteBlocks:00000058 $d
    {standard input}:1913   .text.sdcard_poll:00000000 $t
    {standard input}:1918   .text.sdcard_poll:00000000 sdcard_poll
    {standard input}:1961   .text.sdcard_poll:00000038 $d
    {standard input}:1970   .text.sdcard_poll:0000005c $t
    {standard input}:2324   .text.sdcard_poll:000002c0 $d
    {standard input}:2327   .text.sdcard_poll:000002c4 $t
    {standard input}:2463   .text.sdcard_poll:000003ac $d
    {standard input}:2468   .text.sdcard_writeBlock:00000000 $t
    {standard input}:2473   .text.sdcard_writeBlock:00000000 sdcard_writeBlock
    {standard input}:2614   .text.sdcard_writeBlock:000000bc $d
    {standard input}:2619   .text.sdcard_beginWriteBlocks:00000000 $t
    {standard input}:2624   .text.sdcard_beginWriteBlocks:00000000 sdcard_beginWriteBlocks
    {standard input}:2742   .text.sdcard_beginWriteBlocks:00000098 $d
    {standard input}:2747   .text.sdcard_readBlock:00000000 $t
    {standard input}:2752   .text.sdcard_readBlock:00000000 sdcard_readBlock
    {standard input}:2868   .text.sdcard_readBlock:0000009c $d
    {standard input}:2873   .text.sdcard_isInitialized:00000000 $t
    {standard input}:2878   .text.sdcard_isInitialized:00000000 sdcard_isInitialized
    {standard input}:2914   .text.sdcard_isInitialized:00000020 $d
    {standard input}:2919   .text.sdcard_getMetadata:00000000 $t
    {standard input}:2924   .text.sdcard_getMetadata:00000000 sdcard_getMetadata
    {standard input}:2954   .text.sdcard_getMetadata:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
IOInit
IOConfigGPIO
IORead
IOLo
spiIsBusBusy
IOHi
spiSetDivisor
millis
spiTransferByte
spiTransfer
readBitfield
spiInstanceByDevice
IOGetByTag
delay
