   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "serial_uart_pinconfig.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm uartDevice,1431,4
  20              	 .comm uartDevmap,32,4
  21              	 .section .text.uartPinConfigure,"ax",%progbits
  22              	 .align 2
  23              	 .global uartPinConfigure
  24              	 .thumb
  25              	 .thumb_func
  27              	uartPinConfigure:
  28              	.LFB526:
  29              	 .file 1 "../cleanflight/src/main/drivers/serial_uart_pinconfig.c"
   1:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** /*
   2:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  *
   4:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * any later version.
   9:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  *
  10:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  *
  15:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  *
  18:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  */
  20:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  21:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** /*
  22:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * UART pin configuration common to all MCUs.
  23:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  */
  24:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  25:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** /*
  26:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * Authors:
  27:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****  * jflyper - Created as a part of configurable UART/refactoring.
  28:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** */
  29:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  30:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #include <stdbool.h>
  31:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #include <stdint.h>
  32:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  33:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #include "platform.h"
  34:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  35:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #include "build/build_config.h"
  36:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  37:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #include "drivers/rcc.h"
  38:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #include "drivers/serial.h"
  39:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #include "drivers/serial_uart.h"
  40:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #include "drivers/serial_uart_impl.h"
  41:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  42:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** FAST_RAM_ZERO_INIT uartDevice_t uartDevice[UARTDEV_COUNT];      // Only those configured in target.
  43:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** FAST_RAM_ZERO_INIT uartDevice_t *uartDevmap[UARTDEV_COUNT_MAX]; // Full array
  44:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  45:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** void uartPinConfigure(const serialPinConfig_t *pSerialPinConfig)
  46:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** {
  30              	 .loc 1 46 0
  31              	 .cfi_startproc
  32              	 
  33              	 
  34              	 
  35 0000 80B4     	 push {r7}
  36              	.LCFI0:
  37              	 .cfi_def_cfa_offset 4
  38              	 .cfi_offset 7,-4
  39 0002 89B0     	 sub sp,sp,#36
  40              	.LCFI1:
  41              	 .cfi_def_cfa_offset 40
  42 0004 00AF     	 add r7,sp,#0
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 7
  45 0006 7860     	 str r0,[r7,#4]
  47:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****     uartDevice_t *uartdev = uartDevice;
  46              	 .loc 1 47 0
  47 0008 454B     	 ldr r3,.L10
  48 000a FB61     	 str r3,[r7,#28]
  49              	.LBB2:
  48:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  49:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****     for (size_t hindex = 0; hindex < UARTDEV_COUNT; hindex++) {
  50              	 .loc 1 49 0
  51 000c 0023     	 movs r3,#0
  52 000e BB61     	 str r3,[r7,#24]
  53 0010 7CE0     	 b .L2
  54              	.L9:
  55              	.LBB3:
  50:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  51:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****         const uartHardware_t *hardware = &uartHardware[hindex];
  56              	 .loc 1 51 0
  57 0012 BA69     	 ldr r2,[r7,#24]
  58 0014 1346     	 mov r3,r2
  59 0016 5B00     	 lsls r3,r3,#1
  60 0018 1344     	 add r3,r3,r2
  61 001a DA00     	 lsls r2,r3,#3
  62 001c 1344     	 add r3,r3,r2
  63 001e 414A     	 ldr r2,.L10+4
  64 0020 1344     	 add r3,r3,r2
  65 0022 3B61     	 str r3,[r7,#16]
  52:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****         const UARTDevice_e device = hardware->device;
  66              	 .loc 1 52 0
  67 0024 3B69     	 ldr r3,[r7,#16]
  68 0026 1B78     	 ldrb r3,[r3]
  69 0028 FB73     	 strb r3,[r7,#15]
  70              	.LBB4:
  53:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  54:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****         for (int pindex = 0 ; pindex < UARTHARDWARE_MAX_PINS ; pindex++) {
  71              	 .loc 1 54 0
  72 002a 0023     	 movs r3,#0
  73 002c 7B61     	 str r3,[r7,#20]
  74 002e 51E0     	 b .L3
  75              	.L6:
  55:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             if (hardware->rxPins[pindex].ioTag && (hardware->rxPins[pindex].ioTag == pSerialPinConf
  76              	 .loc 1 55 0
  77 0030 3969     	 ldr r1,[r7,#16]
  78 0032 7A69     	 ldr r2,[r7,#20]
  79 0034 1346     	 mov r3,r2
  80 0036 5B00     	 lsls r3,r3,#1
  81 0038 1344     	 add r3,r3,r2
  82 003a 0B44     	 add r3,r3,r1
  83 003c 5B79     	 ldrb r3,[r3,#5]
  84 003e 002B     	 cmp r3,#0
  85 0040 1DD0     	 beq .L4
  86              	 .loc 1 55 0 is_stmt 0 discriminator 1
  87 0042 3969     	 ldr r1,[r7,#16]
  88 0044 7A69     	 ldr r2,[r7,#20]
  89 0046 1346     	 mov r3,r2
  90 0048 5B00     	 lsls r3,r3,#1
  91 004a 1344     	 add r3,r3,r2
  92 004c 0B44     	 add r3,r3,r1
  93 004e 5A79     	 ldrb r2,[r3,#5]
  94 0050 FB7B     	 ldrb r3,[r7,#15]
  95 0052 7968     	 ldr r1,[r7,#4]
  96 0054 0B44     	 add r3,r3,r1
  97 0056 9B7A     	 ldrb r3,[r3,#10]
  98 0058 9A42     	 cmp r2,r3
  99 005a 10D1     	 bne .L4
  56:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             {
  57:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****                 uartdev->rx = pSerialPinConfig->ioTagRx[device];
 100              	 .loc 1 57 0 is_stmt 1
 101 005c FB7B     	 ldrb r3,[r7,#15]
 102 005e 7A68     	 ldr r2,[r7,#4]
 103 0060 1344     	 add r3,r3,r2
 104 0062 9A7A     	 ldrb r2,[r3,#10]
 105 0064 FB69     	 ldr r3,[r7,#28]
 106 0066 83F85920 	 strb r2,[r3,#89]
  58:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #ifdef XMC4700_F100x2048
  59:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****                 uartdev->rxSrc = hardware->rxPins[pindex].src;
 107              	 .loc 1 59 0
 108 006a 3969     	 ldr r1,[r7,#16]
 109 006c 7A69     	 ldr r2,[r7,#20]
 110 006e 1346     	 mov r3,r2
 111 0070 5B00     	 lsls r3,r3,#1
 112 0072 1344     	 add r3,r3,r2
 113 0074 0B44     	 add r3,r3,r1
 114 0076 DA79     	 ldrb r2,[r3,#7]
 115 0078 FB69     	 ldr r3,[r7,#28]
 116 007a 83F8DC21 	 strb r2,[r3,#476]
 117              	.L4:
  60:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #endif
  61:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             }
  62:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  63:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             if (hardware->txPins[pindex].ioTag && (hardware->txPins[pindex].ioTag == pSerialPinConf
 118              	 .loc 1 63 0
 119 007e 3969     	 ldr r1,[r7,#16]
 120 0080 7A69     	 ldr r2,[r7,#20]
 121 0082 1346     	 mov r3,r2
 122 0084 5B00     	 lsls r3,r3,#1
 123 0086 1344     	 add r3,r3,r2
 124 0088 0B44     	 add r3,r3,r1
 125 008a 0833     	 adds r3,r3,#8
 126 008c 9B79     	 ldrb r3,[r3,#6]
 127 008e 002B     	 cmp r3,#0
 128 0090 1DD0     	 beq .L5
 129              	 .loc 1 63 0 is_stmt 0 discriminator 1
 130 0092 3969     	 ldr r1,[r7,#16]
 131 0094 7A69     	 ldr r2,[r7,#20]
 132 0096 1346     	 mov r3,r2
 133 0098 5B00     	 lsls r3,r3,#1
 134 009a 1344     	 add r3,r3,r2
 135 009c 0B44     	 add r3,r3,r1
 136 009e 0833     	 adds r3,r3,#8
 137 00a0 9A79     	 ldrb r2,[r3,#6]
 138 00a2 FB7B     	 ldrb r3,[r7,#15]
 139 00a4 7968     	 ldr r1,[r7,#4]
 140 00a6 CB5C     	 ldrb r3,[r1,r3]
 141 00a8 9A42     	 cmp r2,r3
 142 00aa 10D1     	 bne .L5
  64:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             {
  65:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****                 uartdev->tx = pSerialPinConfig->ioTagTx[device];
 143              	 .loc 1 65 0 is_stmt 1
 144 00ac FB7B     	 ldrb r3,[r7,#15]
 145 00ae 7A68     	 ldr r2,[r7,#4]
 146 00b0 D25C     	 ldrb r2,[r2,r3]
 147 00b2 FB69     	 ldr r3,[r7,#28]
 148 00b4 83F85A20 	 strb r2,[r3,#90]
  66:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #ifdef XMC4700_F100x2048
  67:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****                 uartdev->txAF = hardware->txPins[pindex].af;
 149              	 .loc 1 67 0
 150 00b8 3969     	 ldr r1,[r7,#16]
 151 00ba 7A69     	 ldr r2,[r7,#20]
 152 00bc 1346     	 mov r3,r2
 153 00be 5B00     	 lsls r3,r3,#1
 154 00c0 1344     	 add r3,r3,r2
 155 00c2 0B44     	 add r3,r3,r1
 156 00c4 0833     	 adds r3,r3,#8
 157 00c6 DA79     	 ldrb r2,[r3,#7]
 158 00c8 FB69     	 ldr r3,[r7,#28]
 159 00ca 83F8DB21 	 strb r2,[r3,#475]
 160              	.L5:
  54:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             if (hardware->rxPins[pindex].ioTag && (hardware->rxPins[pindex].ioTag == pSerialPinConf
 161              	 .loc 1 54 0 discriminator 2
 162 00ce 7B69     	 ldr r3,[r7,#20]
 163 00d0 0133     	 adds r3,r3,#1
 164 00d2 7B61     	 str r3,[r7,#20]
 165              	.L3:
  54:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             if (hardware->rxPins[pindex].ioTag && (hardware->rxPins[pindex].ioTag == pSerialPinConf
 166              	 .loc 1 54 0 is_stmt 0 discriminator 1
 167 00d4 7B69     	 ldr r3,[r7,#20]
 168 00d6 022B     	 cmp r3,#2
 169 00d8 AADD     	 ble .L6
 170              	.LBE4:
  68:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** #endif
  69:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             }
  70:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****         }
  71:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
  72:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****         if (uartdev->rx || uartdev->tx) {
 171              	 .loc 1 72 0 is_stmt 1
 172 00da FB69     	 ldr r3,[r7,#28]
 173 00dc 93F85930 	 ldrb r3,[r3,#89]
 174 00e0 002B     	 cmp r3,#0
 175 00e2 04D1     	 bne .L7
 176              	 .loc 1 72 0 is_stmt 0 discriminator 1
 177 00e4 FB69     	 ldr r3,[r7,#28]
 178 00e6 93F85A30 	 ldrb r3,[r3,#90]
 179 00ea 002B     	 cmp r3,#0
 180 00ec 0BD0     	 beq .L8
 181              	.L7:
  73:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             uartdev->hardware = hardware;
 182              	 .loc 1 73 0 is_stmt 1
 183 00ee FB69     	 ldr r3,[r7,#28]
 184 00f0 3A69     	 ldr r2,[r7,#16]
 185 00f2 C3F85520 	 str r2,[r3,#85]
  74:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****             uartDevmap[device] = uartdev++;
 186              	 .loc 1 74 0
 187 00f6 FA7B     	 ldrb r2,[r7,#15]
 188 00f8 FB69     	 ldr r3,[r7,#28]
 189 00fa 03F2DD11 	 addw r1,r3,#477
 190 00fe F961     	 str r1,[r7,#28]
 191 0100 0949     	 ldr r1,.L10+8
 192 0102 41F82230 	 str r3,[r1,r2,lsl#2]
 193              	.L8:
 194              	.LBE3:
  49:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
 195              	 .loc 1 49 0 discriminator 2
 196 0106 BB69     	 ldr r3,[r7,#24]
 197 0108 0133     	 adds r3,r3,#1
 198 010a BB61     	 str r3,[r7,#24]
 199              	.L2:
  49:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** 
 200              	 .loc 1 49 0 is_stmt 0 discriminator 1
 201 010c BB69     	 ldr r3,[r7,#24]
 202 010e 022B     	 cmp r3,#2
 203 0110 7FF67FAF 	 bls .L9
 204              	.LBE2:
  75:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****         }
  76:../cleanflight/src/main/drivers/serial_uart_pinconfig.c ****     }
  77:../cleanflight/src/main/drivers/serial_uart_pinconfig.c **** }
 205              	 .loc 1 77 0 is_stmt 1
 206 0114 2437     	 adds r7,r7,#36
 207              	.LCFI3:
 208              	 .cfi_def_cfa_offset 4
 209 0116 BD46     	 mov sp,r7
 210              	.LCFI4:
 211              	 .cfi_def_cfa_register 13
 212              	 
 213 0118 5DF8047B 	 ldr r7,[sp],#4
 214              	.LCFI5:
 215              	 .cfi_restore 7
 216              	 .cfi_def_cfa_offset 0
 217 011c 7047     	 bx lr
 218              	.L11:
 219 011e 00BF     	 .align 2
 220              	.L10:
 221 0120 00000000 	 .word uartDevice
 222 0124 00000000 	 .word uartHardware
 223 0128 00000000 	 .word uartDevmap
 224              	 .cfi_endproc
 225              	.LFE526:
 227              	 .text
 228              	.Letext0:
 229              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 230              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 231              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 232              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 233              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 234              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 235              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 236              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 237              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
 238              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial_uart.h"
 239              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial_uart_impl.h"
 240              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 241              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 serial_uart_pinconfig.c
                            *COM*:00000597 uartDevice
                            *COM*:00000020 uartDevmap
    {standard input}:22     .text.uartPinConfigure:00000000 $t
    {standard input}:27     .text.uartPinConfigure:00000000 uartPinConfigure
    {standard input}:221    .text.uartPinConfigure:00000120 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
uartHardware
