   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "timer.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_SLICE_ClearTimer,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU4_SLICE_ClearTimer:
  25              	.LFB344:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_ccu4.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @date 2017-09-15
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @cond
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                             
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * following conditions are met:   
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * disclaimer.                        
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                                                              
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Change History
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * --------------
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-02-20:
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Initial <br>
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-06-20:
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-07-22:
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-08-17:
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-09-29:
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *       settings.
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2015-10-07:
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2016-03-09:
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Optimization of write only registers 
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2016-05-20:
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Added XMC_CCU4_SLICE_StopClearTimer()
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Changed implementation of XMC_CCU4_SLICE_StopTimer() and XMC_CCU4_SLICE_ClearTimer() to av
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2017-04-27:
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU4_SLICE_PRESCALER_t
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2017-09-15:
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *     - Fix XMC_CCU4_SLICE_SetShadowTransferMode()
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @endcond
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_H
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * HEADER FILES
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #include "xmc_common.h"
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40)
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @{
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @addtogroup CCU4
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Note:
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Capture configuration:
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It can be used to:
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @{
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * MACROS
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * ENUMS
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Return Value of an API
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  CCU4 module clock
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                      only for slice
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                      and hardware f
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                       only for slic
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                       and hardware 
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Capture mode register sets
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Prescaler mode
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Timer output passive level
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Timer clock Divider
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Function list
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                      generation */
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Event list
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 trigger */
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Trap exit mode
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Timer clear on capture
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 request */
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual registers for S
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           shadow register values to
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           to actual register for SL
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                 One match. */
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Con
 553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                            Config
 559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Wri
 561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                 Val
 562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 	                                                                                                  
 587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                                                                    
 589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * DATA STRUCTURES
 606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma push
 626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma anon_unions
 627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma warning 586
 629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   union
 638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   {
 639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     struct
 640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     {
 641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 10;
 647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 1;
 650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 8;
 653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 6;
 655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     };
 656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   };
 658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */ 
 671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   union
 674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   {
 675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     struct
 676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     {
 677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 4;
 682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 3;
 685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****       uint32_t : 15;
 687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     };
 688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****     uint32_t tc;
 689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   };
 690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma pop
 697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   #pragma warning restore
 699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**************************************************************************************************
 701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * API Prototypes
 702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  **************************************************************************************************
 703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #ifdef __cplusplus
 705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** extern "C" {
 706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41) 
 715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)
 719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)
 723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } 
 728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   bool tmp = false;
 732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41)  
 744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif 
 755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42)  
 756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43)  
 768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
 778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif 
 779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return tmp;  
 781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** } 
 782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * None.<BR>
 814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
 867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 883:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 884:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 885:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 886:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 887:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 888:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 889:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 890:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 891:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 892:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 893:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 894:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 895:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 896:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 897:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * module then returns as true.
 898:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 899:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 900:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 901:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 902:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 903:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 904:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 905:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 906:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 907:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 908:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 909:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 910:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 911:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 912:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 913:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 914:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 915:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 916:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 917:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 918:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 919:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 920:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 921:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 922:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 923:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 924:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 925:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 926:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 927:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 928:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 929:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   
 930:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 931:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 932:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 933:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 934:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 935:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 936:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 937:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 938:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 939:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 940:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 941:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 942:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 943:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 944:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 945:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 946:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 947:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 948:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 949:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 950:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 951:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 952:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 953:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 954:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
 955:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 956:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 957:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 958:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 959:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 960:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 961:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 962:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 963:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
 964:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 965:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 966:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 967:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 968:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 969:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 970:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 971:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 972:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 973:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 974:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 975:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 976:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 977:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 978:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 979:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
 980:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 981:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
 982:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
 983:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 984:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 985:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
 986:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
 987:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 988:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 989:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 990:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 991:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 992:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 993:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 994:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
 995:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 996:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * None.
 997:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
 998:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 999:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
1000:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1001:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1002:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1003:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
1004:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1005:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1006:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1007:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1008:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
1009:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
1010:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
1011:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * with appropriate mask.
1012:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1013:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1014:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1015:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1016:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1017:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1018:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1019:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1020:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1021:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1022:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1023:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1024:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1025:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1026:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1027:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1028:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1029:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1030:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1031:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1032:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1033:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1034:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1035:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1036:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1037:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1038:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1039:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1040:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1041:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1042:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1043:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1044:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1045:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1046:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1047:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1048:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1049:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1050:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1051:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1052:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1053:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1054:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1055:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1056:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1057:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1058:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1059:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1060:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1061:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1062:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1063:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1064:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1065:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1066:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1067:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1068:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1069:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1070:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1071:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1072:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1073:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1074:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1075:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1076:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1077:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1078:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1079:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1080:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1081:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1082:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1083:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1084:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1085:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1086:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1087:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1088:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1089:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1090:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1091:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1092:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1093:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1094:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1095:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1096:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1097:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1098:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1099:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #else
1206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** #endif
1227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * 
1333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
1404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  None.
1418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
1442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
1460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
  27              	 .loc 1 1476 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
  43              	 .loc 1 1478 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1A69     	 ldr r2,[r3,#16]
  46 000c 0022     	 movs r2,#0
  47 000e 42F00202 	 orr r2,r2,#2
  48 0012 1A61     	 str r2,[r3,#16]
1479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
  49              	 .loc 1 1479 0
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE344:
  65 001e 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerPeriodMatch,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_CCU4_SLICE_SetTimerPeriodMatch:
  71              	.LFB349:
1480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Stops and resets the timer count to zero, by setting CC4yTCCLR.TCC and CC4yTCCLR.TRBC bit.\n\n
1488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopClearTimer(XMC_CCU4_SLICE_t *const slice)
1493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->TCCLR = CCU4_CC4_TCCLR_TRBC_Msk | CCU4_CC4_TCCLR_TCC_Msk;
1496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * invalid.
1509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  None.
1512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * reaching the terminal count.
1529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * greater than the compare value.
1569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <br>
1578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param period_val Timer period value
1596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
  72              	 .loc 1 1611 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
  88 0008 0B46     	 mov r3,r1
  89 000a 7B80     	 strh r3,[r7,#2]
1612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
  90              	 .loc 1 1613 0
  91 000c 7A88     	 ldrh r2,[r7,#2]
  92 000e 7B68     	 ldr r3,[r7,#4]
  93 0010 596B     	 ldr r1,[r3,#52]
  94 0012 0021     	 movs r1,#0
  95 0014 0A43     	 orrs r2,r2,r1
  96 0016 5A63     	 str r2,[r3,#52]
1614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
  97              	 .loc 1 1614 0
  98 0018 0C37     	 adds r7,r7,#12
  99              	.LCFI9:
 100              	 .cfi_def_cfa_offset 4
 101 001a BD46     	 mov sp,r7
 102              	.LCFI10:
 103              	 .cfi_def_cfa_register 13
 104              	 
 105 001c 5DF8047B 	 ldr r7,[sp],#4
 106              	.LCFI11:
 107              	 .cfi_restore 7
 108              	 .cfi_def_cfa_offset 0
 109 0020 7047     	 bx lr
 110              	 .cfi_endproc
 111              	.LFE349:
 113 0022 00BF     	 .section .text.XMC_CCU4_EnableShadowTransfer,"ax",%progbits
 114              	 .align 2
 115              	 .thumb
 116              	 .thumb_func
 118              	XMC_CCU4_EnableShadowTransfer:
 119              	.LFB353:
1615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
1662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
1686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
1689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** 
1690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** /**
1691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * @return <BR>
1696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *    None<BR>
1697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * must be succeeded by this API.
1707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *
1709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  *  None.
1711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****  */
1712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** {
 120              	 .loc 1 1713 0
 121              	 .cfi_startproc
 122              	 
 123              	 
 124              	 
 125 0000 80B4     	 push {r7}
 126              	.LCFI12:
 127              	 .cfi_def_cfa_offset 4
 128              	 .cfi_offset 7,-4
 129 0002 83B0     	 sub sp,sp,#12
 130              	.LCFI13:
 131              	 .cfi_def_cfa_offset 16
 132 0004 00AF     	 add r7,sp,#0
 133              	.LCFI14:
 134              	 .cfi_def_cfa_register 7
 135 0006 7860     	 str r0,[r7,#4]
 136 0008 3960     	 str r1,[r7]
1714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
 137              	 .loc 1 1715 0
 138 000a 7B68     	 ldr r3,[r7,#4]
 139 000c 1A69     	 ldr r2,[r3,#16]
 140 000e 0021     	 movs r1,#0
 141 0010 3A68     	 ldr r2,[r7]
 142 0012 0A43     	 orrs r2,r2,r1
 143 0014 1A61     	 str r2,[r3,#16]
1716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc\xmc_ccu4.h **** }
 144              	 .loc 1 1716 0
 145 0016 0C37     	 adds r7,r7,#12
 146              	.LCFI15:
 147              	 .cfi_def_cfa_offset 4
 148 0018 BD46     	 mov sp,r7
 149              	.LCFI16:
 150              	 .cfi_def_cfa_register 13
 151              	 
 152 001a 5DF8047B 	 ldr r7,[sp],#4
 153              	.LCFI17:
 154              	 .cfi_restore 7
 155              	 .cfi_def_cfa_offset 0
 156 001e 7047     	 bx lr
 157              	 .cfi_endproc
 158              	.LFE353:
 160              	 .section .text.__basepriRestoreMem,"ax",%progbits
 161              	 .align 2
 162              	 .thumb
 163              	 .thumb_func
 165              	__basepriRestoreMem:
 166              	.LFB523:
 167              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build/atomic.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** #include "cmsis_gcc.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** #if !defined(UNIT_TEST)
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // BASEPRI manipulation functions
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // only set_BASEPRI is implemented in device library. It does always create memory barrier
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // missing versions are implemented here
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // set BASEPRI register, do not create memory barrier
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** __attribute__( ( always_inline ) ) static inline void __set_BASEPRI_nb(uint32_t basePri)
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** {
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 	__asm volatile ("\tMSR basepri, %0\n" : : "r" (basePri) );
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** }
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // set BASEPRI_MAX register, do not create memory barrier
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** __attribute__( ( always_inline ) ) static inline void __set_BASEPRI_MAX_nb(uint32_t basePri)
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** {
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 	__asm volatile ("\tMSR basepri_max, %0\n" : : "r" (basePri) );
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** }
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** #endif
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** #if defined(UNIT_TEST)
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // atomic related functions for unittest.
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** extern uint8_t atomic_BASEPRI;
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** static inline uint8_t __get_BASEPRI(void)
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** {
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     return atomic_BASEPRI;
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** }
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // restore BASEPRI (called as cleanup function), with global memory barrier
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** static inline void __basepriRestoreMem(uint8_t *val)
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** {
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     atomic_BASEPRI = *val;
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     asm volatile ("": : :"memory"); // compiler memory barrier
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** }
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // increase BASEPRI, with global memory barrier, returns true
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** static inline uint8_t __basepriSetMemRetVal(uint8_t prio)
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** {
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     if(prio && (atomic_BASEPRI == 0 || atomic_BASEPRI > prio)) {
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****         atomic_BASEPRI = prio;
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     }
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     asm volatile ("": : :"memory"); // compiler memory barrier
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     return 1;
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** }
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // restore BASEPRI (called as cleanup function), no memory barrier
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** static inline void __basepriRestore(uint8_t *val)
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** {
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     atomic_BASEPRI = *val;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** }
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // increase BASEPRI, no memory barrier, returns true
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** static inline uint8_t __basepriSetRetVal(uint8_t prio)
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** {
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     if(prio && (atomic_BASEPRI == 0 || atomic_BASEPRI > prio)) {
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****         atomic_BASEPRI = prio;
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     }
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     return 1;
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** }
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** #else
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // ARM BASEPRI manipulation
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // restore BASEPRI (called as cleanup function), with global memory barrier
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** static inline void __basepriRestoreMem(uint8_t *val)
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** {
 168              	 .loc 2 92 0
 169              	 .cfi_startproc
 170              	 
 171              	 
 172              	 
 173 0000 80B4     	 push {r7}
 174              	.LCFI18:
 175              	 .cfi_def_cfa_offset 4
 176              	 .cfi_offset 7,-4
 177 0002 85B0     	 sub sp,sp,#20
 178              	.LCFI19:
 179              	 .cfi_def_cfa_offset 24
 180 0004 00AF     	 add r7,sp,#0
 181              	.LCFI20:
 182              	 .cfi_def_cfa_register 7
 183 0006 7860     	 str r0,[r7,#4]
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     __set_BASEPRI(*val);
 184              	 .loc 2 93 0
 185 0008 7B68     	 ldr r3,[r7,#4]
 186 000a 1B78     	 ldrb r3,[r3]
 187 000c FB60     	 str r3,[r7,#12]
 188              	.LBB10:
 189              	.LBB11:
 190              	 .file 3 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/cmsis_gcc.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * @version  V5.0.3
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * @date     16. January 2018
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /*
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  *
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  *
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * limitations under the License.
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif                                           
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __USED
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   @{
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Control Register
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Control Register value
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Control Register
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               IPSR Register value
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               APSR Register value
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               xPSR Register value
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               PSP Register value
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               PSP Register value
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               MSP Register value
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               MSP Register value
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               SP Register value
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Priority Mask value
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Priority Mask value
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Base Priority register value
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Base Priority register value
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 191              	 .loc 3 493 0
 192 000e FB68     	 ldr r3,[r7,#12]
 193              	
 194 0010 83F31188 	 MSR basepri,r3
 195              	
 196              	 .thumb
 197              	.LBE11:
 198              	.LBE10:
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** }
 199              	 .loc 2 94 0
 200 0014 1437     	 adds r7,r7,#20
 201              	.LCFI21:
 202              	 .cfi_def_cfa_offset 4
 203 0016 BD46     	 mov sp,r7
 204              	.LCFI22:
 205              	 .cfi_def_cfa_register 13
 206              	 
 207 0018 5DF8047B 	 ldr r7,[sp],#4
 208              	.LCFI23:
 209              	 .cfi_restore 7
 210              	 .cfi_def_cfa_offset 0
 211 001c 7047     	 bx lr
 212              	 .cfi_endproc
 213              	.LFE523:
 215 001e 00BF     	 .section .text.__basepriSetMemRetVal,"ax",%progbits
 216              	 .align 2
 217              	 .thumb
 218              	 .thumb_func
 220              	__basepriSetMemRetVal:
 221              	.LFB524:
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** 
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** // set BASEPRI_MAX, with global memory barrier, returns true
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** static inline uint8_t __basepriSetMemRetVal(uint8_t prio)
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** {
 222              	 .loc 2 98 0
 223              	 .cfi_startproc
 224              	 
 225              	 
 226              	 
 227 0000 80B4     	 push {r7}
 228              	.LCFI24:
 229              	 .cfi_def_cfa_offset 4
 230              	 .cfi_offset 7,-4
 231 0002 85B0     	 sub sp,sp,#20
 232              	.LCFI25:
 233              	 .cfi_def_cfa_offset 24
 234 0004 00AF     	 add r7,sp,#0
 235              	.LCFI26:
 236              	 .cfi_def_cfa_register 7
 237 0006 0346     	 mov r3,r0
 238 0008 FB71     	 strb r3,[r7,#7]
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     __set_BASEPRI_MAX(prio);
 239              	 .loc 2 99 0
 240 000a FB79     	 ldrb r3,[r7,#7]
 241 000c FB60     	 str r3,[r7,#12]
 242              	.LBB12:
 243              	.LBB13:
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 244              	 .loc 3 518 0
 245 000e FB68     	 ldr r3,[r7,#12]
 246              	
 247 0010 83F31288 	 MSR basepri_max,r3
 248              	
 249              	 .thumb
 250              	.LBE13:
 251              	.LBE12:
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h ****     return 1;
 252              	 .loc 2 100 0
 253 0014 0123     	 movs r3,#1
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build\atomic.h **** }
 254              	 .loc 2 101 0
 255 0016 1846     	 mov r0,r3
 256 0018 1437     	 adds r7,r7,#20
 257              	.LCFI27:
 258              	 .cfi_def_cfa_offset 4
 259 001a BD46     	 mov sp,r7
 260              	.LCFI28:
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 001c 5DF8047B 	 ldr r7,[sp],#4
 264              	.LCFI29:
 265              	 .cfi_restore 7
 266              	 .cfi_def_cfa_offset 0
 267 0020 7047     	 bx lr
 268              	 .cfi_endproc
 269              	.LFE524:
 271              	 .comm timerConfig,40,4
 272              	 .comm timerChannelInfo,13,4
 273              	 .comm timerInfo,1,4
 274 0022 00BF     	 .section .text.lookupTimerIndex,"ax",%progbits
 275              	 .align 2
 276              	 .thumb
 277              	 .thumb_func
 279              	lookupTimerIndex:
 280              	.LFB527:
 281              	 .file 4 "../cleanflight/src/main/drivers/timer.c"
   1:../cleanflight/src/main/drivers/timer.c **** /*
   2:../cleanflight/src/main/drivers/timer.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/timer.c ****  *
   4:../cleanflight/src/main/drivers/timer.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/timer.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/timer.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/timer.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/timer.c ****  * any later version.
   9:../cleanflight/src/main/drivers/timer.c ****  *
  10:../cleanflight/src/main/drivers/timer.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/timer.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/timer.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/timer.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/timer.c ****  *
  15:../cleanflight/src/main/drivers/timer.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/timer.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/timer.c ****  *
  18:../cleanflight/src/main/drivers/timer.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/timer.c ****  */
  20:../cleanflight/src/main/drivers/timer.c **** 
  21:../cleanflight/src/main/drivers/timer.c **** #include <stdbool.h>
  22:../cleanflight/src/main/drivers/timer.c **** #include <stdint.h>
  23:../cleanflight/src/main/drivers/timer.c **** #include <string.h>
  24:../cleanflight/src/main/drivers/timer.c **** #include <math.h>
  25:../cleanflight/src/main/drivers/timer.c **** 
  26:../cleanflight/src/main/drivers/timer.c **** #include "platform.h"
  27:../cleanflight/src/main/drivers/timer.c **** 
  28:../cleanflight/src/main/drivers/timer.c **** #include "build/atomic.h"
  29:../cleanflight/src/main/drivers/timer.c **** 
  30:../cleanflight/src/main/drivers/timer.c **** #include "common/utils.h"
  31:../cleanflight/src/main/drivers/timer.c **** 
  32:../cleanflight/src/main/drivers/timer.c **** #include "drivers/nvic.h"
  33:../cleanflight/src/main/drivers/timer.c **** 
  34:../cleanflight/src/main/drivers/timer.c **** #include "drivers/io.h"
  35:../cleanflight/src/main/drivers/timer.c **** #include "rcc.h"
  36:../cleanflight/src/main/drivers/timer.c **** #include "drivers/system.h"
  37:../cleanflight/src/main/drivers/timer.c **** 
  38:../cleanflight/src/main/drivers/timer.c **** #include "timer.h"
  39:../cleanflight/src/main/drivers/timer.c **** #include "timer_impl.h"
  40:../cleanflight/src/main/drivers/timer.c **** 
  41:../cleanflight/src/main/drivers/timer.c **** #define TIM_N(n) (1 << (n))
  42:../cleanflight/src/main/drivers/timer.c **** 
  43:../cleanflight/src/main/drivers/timer.c **** /*
  44:../cleanflight/src/main/drivers/timer.c ****     Groups that allow running different period (ex 50Hz servos + 400Hz throttle + etc):
  45:../cleanflight/src/main/drivers/timer.c ****     TIM1 2 channels
  46:../cleanflight/src/main/drivers/timer.c ****     TIM2 4 channels
  47:../cleanflight/src/main/drivers/timer.c ****     TIM3 4 channels
  48:../cleanflight/src/main/drivers/timer.c ****     TIM4 4 channels
  49:../cleanflight/src/main/drivers/timer.c **** */
  50:../cleanflight/src/main/drivers/timer.c **** 
  51:../cleanflight/src/main/drivers/timer.c **** #define USED_TIMER_COUNT BITCOUNT(USED_TIMERS)
  52:../cleanflight/src/main/drivers/timer.c **** #define CC_CHANNELS_PER_TIMER 4              // TIM_Channel_1..4
  53:../cleanflight/src/main/drivers/timer.c **** 
  54:../cleanflight/src/main/drivers/timer.c **** #define TIM_IT_CCx(ch) (TIM_IT_CC1 << ((ch) / 4))
  55:../cleanflight/src/main/drivers/timer.c **** 
  56:../cleanflight/src/main/drivers/timer.c **** typedef struct timerConfig_s {
  57:../cleanflight/src/main/drivers/timer.c ****     timerCCHandlerRec_t *edgeCallback[CC_CHANNELS_PER_TIMER];
  58:../cleanflight/src/main/drivers/timer.c ****     timerOvrHandlerRec_t *overflowCallback[CC_CHANNELS_PER_TIMER];
  59:../cleanflight/src/main/drivers/timer.c ****     timerOvrHandlerRec_t *overflowCallbackActive; // null-terminated linkded list of active overflo
  60:../cleanflight/src/main/drivers/timer.c ****     uint32_t forcedOverflowTimerValue;
  61:../cleanflight/src/main/drivers/timer.c **** } timerConfig_t;
  62:../cleanflight/src/main/drivers/timer.c **** timerConfig_t timerConfig[USED_TIMER_COUNT];
  63:../cleanflight/src/main/drivers/timer.c **** 
  64:../cleanflight/src/main/drivers/timer.c **** typedef struct {
  65:../cleanflight/src/main/drivers/timer.c ****     channelType_t type;
  66:../cleanflight/src/main/drivers/timer.c **** } timerChannelInfo_t;
  67:../cleanflight/src/main/drivers/timer.c **** timerChannelInfo_t timerChannelInfo[USABLE_TIMER_CHANNEL_COUNT];
  68:../cleanflight/src/main/drivers/timer.c **** 
  69:../cleanflight/src/main/drivers/timer.c **** typedef struct {
  70:../cleanflight/src/main/drivers/timer.c ****     uint8_t priority;
  71:../cleanflight/src/main/drivers/timer.c **** } timerInfo_t;
  72:../cleanflight/src/main/drivers/timer.c **** timerInfo_t timerInfo[USED_TIMER_COUNT];
  73:../cleanflight/src/main/drivers/timer.c **** 
  74:../cleanflight/src/main/drivers/timer.c **** // return index of timer in timer table. Lowest timer has index 0
  75:../cleanflight/src/main/drivers/timer.c **** #define TIMER_INDEX(i) BITCOUNT((TIM_N(i) - 1) & USED_TIMERS)
  76:../cleanflight/src/main/drivers/timer.c **** 
  77:../cleanflight/src/main/drivers/timer.c **** static uint8_t lookupTimerIndex(const TIM_TypeDef *tim)
  78:../cleanflight/src/main/drivers/timer.c **** {
 282              	 .loc 4 78 0
 283              	 .cfi_startproc
 284              	 
 285              	 
 286              	 
 287 0000 80B4     	 push {r7}
 288              	.LCFI30:
 289              	 .cfi_def_cfa_offset 4
 290              	 .cfi_offset 7,-4
 291 0002 83B0     	 sub sp,sp,#12
 292              	.LCFI31:
 293              	 .cfi_def_cfa_offset 16
 294 0004 00AF     	 add r7,sp,#0
 295              	.LCFI32:
 296              	 .cfi_def_cfa_register 7
 297 0006 7860     	 str r0,[r7,#4]
  79:../cleanflight/src/main/drivers/timer.c **** #define _CASE_SHF 10           // amount we can safely shift timer address to the right. gcc will t
  80:../cleanflight/src/main/drivers/timer.c **** #define _CASE_(tim, index) case ((unsigned)tim >> _CASE_SHF): return index; break
  81:../cleanflight/src/main/drivers/timer.c **** #ifdef XMC4700_F100x2048
  82:../cleanflight/src/main/drivers/timer.c **** #define _CASE(i) _CASE_(CCU4##i##_BASE, TIMER_INDEX(i))
  83:../cleanflight/src/main/drivers/timer.c **** #else
  84:../cleanflight/src/main/drivers/timer.c **** #define _CASE(i) _CASE_(TIM##i##_BASE, TIMER_INDEX(i))
  85:../cleanflight/src/main/drivers/timer.c **** #endif
  86:../cleanflight/src/main/drivers/timer.c **** 
  87:../cleanflight/src/main/drivers/timer.c **** // let gcc do the work, switch should be quite optimized
  88:../cleanflight/src/main/drivers/timer.c ****     switch ((unsigned)tim >> _CASE_SHF) {
 298              	 .loc 4 88 0
 299 0008 7B68     	 ldr r3,[r7,#4]
 300 000a 9B0A     	 lsrs r3,r3,#10
 301 000c 054A     	 ldr r2,.L12
 302 000e 9342     	 cmp r3,r2
 303 0010 01D1     	 bne .L11
  89:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(1)
  90:../cleanflight/src/main/drivers/timer.c ****         _CASE(1);
 304              	 .loc 4 90 0
 305 0012 0023     	 movs r3,#0
 306 0014 00E0     	 b .L10
 307              	.L11:
  91:../cleanflight/src/main/drivers/timer.c **** #endif
  92:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(2)
  93:../cleanflight/src/main/drivers/timer.c ****         _CASE(2);
  94:../cleanflight/src/main/drivers/timer.c **** #endif
  95:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(3)
  96:../cleanflight/src/main/drivers/timer.c ****         _CASE(3);
  97:../cleanflight/src/main/drivers/timer.c **** #endif
  98:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(4)
  99:../cleanflight/src/main/drivers/timer.c ****         _CASE(4);
 100:../cleanflight/src/main/drivers/timer.c **** #endif
 101:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(5)
 102:../cleanflight/src/main/drivers/timer.c ****         _CASE(5);
 103:../cleanflight/src/main/drivers/timer.c **** #endif
 104:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(6)
 105:../cleanflight/src/main/drivers/timer.c ****         _CASE(6);
 106:../cleanflight/src/main/drivers/timer.c **** #endif
 107:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(7)
 108:../cleanflight/src/main/drivers/timer.c ****         _CASE(7);
 109:../cleanflight/src/main/drivers/timer.c **** #endif
 110:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(8)
 111:../cleanflight/src/main/drivers/timer.c ****         _CASE(8);
 112:../cleanflight/src/main/drivers/timer.c **** #endif
 113:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(9)
 114:../cleanflight/src/main/drivers/timer.c ****         _CASE(9);
 115:../cleanflight/src/main/drivers/timer.c **** #endif
 116:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(10)
 117:../cleanflight/src/main/drivers/timer.c ****         _CASE(10);
 118:../cleanflight/src/main/drivers/timer.c **** #endif
 119:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(11)
 120:../cleanflight/src/main/drivers/timer.c ****         _CASE(11);
 121:../cleanflight/src/main/drivers/timer.c **** #endif
 122:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(12)
 123:../cleanflight/src/main/drivers/timer.c ****         _CASE(12);
 124:../cleanflight/src/main/drivers/timer.c **** #endif
 125:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(13)
 126:../cleanflight/src/main/drivers/timer.c ****         _CASE(13);
 127:../cleanflight/src/main/drivers/timer.c **** #endif
 128:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(14)
 129:../cleanflight/src/main/drivers/timer.c ****         _CASE(14);
 130:../cleanflight/src/main/drivers/timer.c **** #endif
 131:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(15)
 132:../cleanflight/src/main/drivers/timer.c ****         _CASE(15);
 133:../cleanflight/src/main/drivers/timer.c **** #endif
 134:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(16)
 135:../cleanflight/src/main/drivers/timer.c ****         _CASE(16);
 136:../cleanflight/src/main/drivers/timer.c **** #endif
 137:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(17)
 138:../cleanflight/src/main/drivers/timer.c ****         _CASE(17);
 139:../cleanflight/src/main/drivers/timer.c **** #endif
 140:../cleanflight/src/main/drivers/timer.c ****     default:  return ~1;  // make sure final index is out of range
 308              	 .loc 4 140 0
 309 0016 FE23     	 movs r3,#254
 310              	.L10:
 141:../cleanflight/src/main/drivers/timer.c ****     }
 142:../cleanflight/src/main/drivers/timer.c **** #undef _CASE
 143:../cleanflight/src/main/drivers/timer.c **** #undef _CASE_
 144:../cleanflight/src/main/drivers/timer.c **** }
 311              	 .loc 4 144 0
 312 0018 1846     	 mov r0,r3
 313 001a 0C37     	 adds r7,r7,#12
 314              	.LCFI33:
 315              	 .cfi_def_cfa_offset 4
 316 001c BD46     	 mov sp,r7
 317              	.LCFI34:
 318              	 .cfi_def_cfa_register 13
 319              	 
 320 001e 5DF8047B 	 ldr r7,[sp],#4
 321              	.LCFI35:
 322              	 .cfi_restore 7
 323              	 .cfi_def_cfa_offset 0
 324 0022 7047     	 bx lr
 325              	.L13:
 326              	 .align 2
 327              	.L12:
 328 0024 40001000 	 .word 1048640
 329              	 .cfi_endproc
 330              	.LFE527:
 332              	 .global usedTimers
 333              	 .section .rodata.usedTimers,"a",%progbits
 334              	 .align 2
 337              	usedTimers:
 338 0000 00000140 	 .word 1073807360
 339              	 .global timerNumbers
 340              	 .section .rodata.timerNumbers,"a",%progbits
 341              	 .align 2
 344              	timerNumbers:
 345 0000 01       	 .byte 1
 346 0001 000000   	 .section .text.timerGetTIMNumber,"ax",%progbits
 347              	 .align 2
 348              	 .global timerGetTIMNumber
 349              	 .thumb
 350              	 .thumb_func
 352              	timerGetTIMNumber:
 353              	.LFB528:
 145:../cleanflight/src/main/drivers/timer.c **** 
 146:../cleanflight/src/main/drivers/timer.c **** TIM_TypeDef * const usedTimers[USED_TIMER_COUNT] = {
 147:../cleanflight/src/main/drivers/timer.c **** #ifdef XMC4700_F100x2048
 148:../cleanflight/src/main/drivers/timer.c **** #define _DEF(i) (TIM_TypeDef*)CCU4##i
 149:../cleanflight/src/main/drivers/timer.c **** #else
 150:../cleanflight/src/main/drivers/timer.c **** #define _DEF(i) TIM##i
 151:../cleanflight/src/main/drivers/timer.c **** #endif
 152:../cleanflight/src/main/drivers/timer.c **** 
 153:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(1)
 154:../cleanflight/src/main/drivers/timer.c ****     _DEF(1),
 155:../cleanflight/src/main/drivers/timer.c **** #endif
 156:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(2)
 157:../cleanflight/src/main/drivers/timer.c ****     _DEF(2),
 158:../cleanflight/src/main/drivers/timer.c **** #endif
 159:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(3)
 160:../cleanflight/src/main/drivers/timer.c ****     _DEF(3),
 161:../cleanflight/src/main/drivers/timer.c **** #endif
 162:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(4)
 163:../cleanflight/src/main/drivers/timer.c ****     _DEF(4),
 164:../cleanflight/src/main/drivers/timer.c **** #endif
 165:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(5)
 166:../cleanflight/src/main/drivers/timer.c ****     _DEF(5),
 167:../cleanflight/src/main/drivers/timer.c **** #endif
 168:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(6)
 169:../cleanflight/src/main/drivers/timer.c ****     _DEF(6),
 170:../cleanflight/src/main/drivers/timer.c **** #endif
 171:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(7)
 172:../cleanflight/src/main/drivers/timer.c ****     _DEF(7),
 173:../cleanflight/src/main/drivers/timer.c **** #endif
 174:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(8)
 175:../cleanflight/src/main/drivers/timer.c ****     _DEF(8),
 176:../cleanflight/src/main/drivers/timer.c **** #endif
 177:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(9)
 178:../cleanflight/src/main/drivers/timer.c ****     _DEF(9),
 179:../cleanflight/src/main/drivers/timer.c **** #endif
 180:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(10)
 181:../cleanflight/src/main/drivers/timer.c ****     _DEF(10),
 182:../cleanflight/src/main/drivers/timer.c **** #endif
 183:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(11)
 184:../cleanflight/src/main/drivers/timer.c ****     _DEF(11),
 185:../cleanflight/src/main/drivers/timer.c **** #endif
 186:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(12)
 187:../cleanflight/src/main/drivers/timer.c ****     _DEF(12),
 188:../cleanflight/src/main/drivers/timer.c **** #endif
 189:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(13)
 190:../cleanflight/src/main/drivers/timer.c ****     _DEF(13),
 191:../cleanflight/src/main/drivers/timer.c **** #endif
 192:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(14)
 193:../cleanflight/src/main/drivers/timer.c ****     _DEF(14),
 194:../cleanflight/src/main/drivers/timer.c **** #endif
 195:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(15)
 196:../cleanflight/src/main/drivers/timer.c ****     _DEF(15),
 197:../cleanflight/src/main/drivers/timer.c **** #endif
 198:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(16)
 199:../cleanflight/src/main/drivers/timer.c ****     _DEF(16),
 200:../cleanflight/src/main/drivers/timer.c **** #endif
 201:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(17)
 202:../cleanflight/src/main/drivers/timer.c ****     _DEF(17),
 203:../cleanflight/src/main/drivers/timer.c **** #endif
 204:../cleanflight/src/main/drivers/timer.c **** #undef _DEF
 205:../cleanflight/src/main/drivers/timer.c **** };
 206:../cleanflight/src/main/drivers/timer.c **** 
 207:../cleanflight/src/main/drivers/timer.c **** // Map timer index to timer number (Straight copy of usedTimers array)
 208:../cleanflight/src/main/drivers/timer.c **** const int8_t timerNumbers[USED_TIMER_COUNT] = {
 209:../cleanflight/src/main/drivers/timer.c **** #define _DEF(i) i
 210:../cleanflight/src/main/drivers/timer.c **** 
 211:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(1)
 212:../cleanflight/src/main/drivers/timer.c ****     _DEF(1),
 213:../cleanflight/src/main/drivers/timer.c **** #endif
 214:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(2)
 215:../cleanflight/src/main/drivers/timer.c ****     _DEF(2),
 216:../cleanflight/src/main/drivers/timer.c **** #endif
 217:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(3)
 218:../cleanflight/src/main/drivers/timer.c ****     _DEF(3),
 219:../cleanflight/src/main/drivers/timer.c **** #endif
 220:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(4)
 221:../cleanflight/src/main/drivers/timer.c ****     _DEF(4),
 222:../cleanflight/src/main/drivers/timer.c **** #endif
 223:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(5)
 224:../cleanflight/src/main/drivers/timer.c ****     _DEF(5),
 225:../cleanflight/src/main/drivers/timer.c **** #endif
 226:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(6)
 227:../cleanflight/src/main/drivers/timer.c ****     _DEF(6),
 228:../cleanflight/src/main/drivers/timer.c **** #endif
 229:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(7)
 230:../cleanflight/src/main/drivers/timer.c ****     _DEF(7),
 231:../cleanflight/src/main/drivers/timer.c **** #endif
 232:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(8)
 233:../cleanflight/src/main/drivers/timer.c ****     _DEF(8),
 234:../cleanflight/src/main/drivers/timer.c **** #endif
 235:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(9)
 236:../cleanflight/src/main/drivers/timer.c ****     _DEF(9),
 237:../cleanflight/src/main/drivers/timer.c **** #endif
 238:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(10)
 239:../cleanflight/src/main/drivers/timer.c ****     _DEF(10),
 240:../cleanflight/src/main/drivers/timer.c **** #endif
 241:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(11)
 242:../cleanflight/src/main/drivers/timer.c ****     _DEF(11),
 243:../cleanflight/src/main/drivers/timer.c **** #endif
 244:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(12)
 245:../cleanflight/src/main/drivers/timer.c ****     _DEF(12),
 246:../cleanflight/src/main/drivers/timer.c **** #endif
 247:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(13)
 248:../cleanflight/src/main/drivers/timer.c ****     _DEF(13),
 249:../cleanflight/src/main/drivers/timer.c **** #endif
 250:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(14)
 251:../cleanflight/src/main/drivers/timer.c ****     _DEF(14),
 252:../cleanflight/src/main/drivers/timer.c **** #endif
 253:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(15)
 254:../cleanflight/src/main/drivers/timer.c ****     _DEF(15),
 255:../cleanflight/src/main/drivers/timer.c **** #endif
 256:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(16)
 257:../cleanflight/src/main/drivers/timer.c ****     _DEF(16),
 258:../cleanflight/src/main/drivers/timer.c **** #endif
 259:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(17)
 260:../cleanflight/src/main/drivers/timer.c ****     _DEF(17),
 261:../cleanflight/src/main/drivers/timer.c **** #endif
 262:../cleanflight/src/main/drivers/timer.c **** #undef _DEF
 263:../cleanflight/src/main/drivers/timer.c **** };
 264:../cleanflight/src/main/drivers/timer.c **** 
 265:../cleanflight/src/main/drivers/timer.c **** int8_t timerGetTIMNumber(const TIM_TypeDef *tim)
 266:../cleanflight/src/main/drivers/timer.c **** {
 354              	 .loc 4 266 0
 355              	 .cfi_startproc
 356              	 
 357              	 
 358 0000 80B5     	 push {r7,lr}
 359              	.LCFI36:
 360              	 .cfi_def_cfa_offset 8
 361              	 .cfi_offset 7,-8
 362              	 .cfi_offset 14,-4
 363 0002 84B0     	 sub sp,sp,#16
 364              	.LCFI37:
 365              	 .cfi_def_cfa_offset 24
 366 0004 00AF     	 add r7,sp,#0
 367              	.LCFI38:
 368              	 .cfi_def_cfa_register 7
 369 0006 7860     	 str r0,[r7,#4]
 267:../cleanflight/src/main/drivers/timer.c ****     uint8_t index = lookupTimerIndex(tim);
 370              	 .loc 4 267 0
 371 0008 7868     	 ldr r0,[r7,#4]
 372 000a FFF7FEFF 	 bl lookupTimerIndex
 373 000e 0346     	 mov r3,r0
 374 0010 FB73     	 strb r3,[r7,#15]
 268:../cleanflight/src/main/drivers/timer.c **** 
 269:../cleanflight/src/main/drivers/timer.c ****     if (index < USED_TIMER_COUNT) {
 375              	 .loc 4 269 0
 376 0012 FB7B     	 ldrb r3,[r7,#15]
 377 0014 002B     	 cmp r3,#0
 378 0016 01D1     	 bne .L15
 270:../cleanflight/src/main/drivers/timer.c ****         return timerNumbers[index];
 379              	 .loc 4 270 0
 380 0018 0123     	 movs r3,#1
 381 001a 00E0     	 b .L16
 382              	.L15:
 271:../cleanflight/src/main/drivers/timer.c ****     } else {
 272:../cleanflight/src/main/drivers/timer.c ****         return 0;
 383              	 .loc 4 272 0
 384 001c 0023     	 movs r3,#0
 385              	.L16:
 386 001e 5BB2     	 sxtb r3,r3
 273:../cleanflight/src/main/drivers/timer.c ****     }
 274:../cleanflight/src/main/drivers/timer.c **** }
 387              	 .loc 4 274 0
 388 0020 1846     	 mov r0,r3
 389 0022 1037     	 adds r7,r7,#16
 390              	.LCFI39:
 391              	 .cfi_def_cfa_offset 8
 392 0024 BD46     	 mov sp,r7
 393              	.LCFI40:
 394              	 .cfi_def_cfa_register 13
 395              	 
 396 0026 80BD     	 pop {r7,pc}
 397              	 .cfi_endproc
 398              	.LFE528:
 400              	 .section .text.lookupChannelIndex,"ax",%progbits
 401              	 .align 2
 402              	 .thumb
 403              	 .thumb_func
 405              	lookupChannelIndex:
 406              	.LFB529:
 275:../cleanflight/src/main/drivers/timer.c **** 
 276:../cleanflight/src/main/drivers/timer.c **** static inline uint8_t lookupChannelIndex(const uint16_t channel)
 277:../cleanflight/src/main/drivers/timer.c **** {
 407              	 .loc 4 277 0
 408              	 .cfi_startproc
 409              	 
 410              	 
 411              	 
 412 0000 80B4     	 push {r7}
 413              	.LCFI41:
 414              	 .cfi_def_cfa_offset 4
 415              	 .cfi_offset 7,-4
 416 0002 83B0     	 sub sp,sp,#12
 417              	.LCFI42:
 418              	 .cfi_def_cfa_offset 16
 419 0004 00AF     	 add r7,sp,#0
 420              	.LCFI43:
 421              	 .cfi_def_cfa_register 7
 422 0006 0346     	 mov r3,r0
 423 0008 FB80     	 strh r3,[r7,#6]
 278:../cleanflight/src/main/drivers/timer.c ****     return channel >> 2;
 424              	 .loc 4 278 0
 425 000a FB88     	 ldrh r3,[r7,#6]
 426 000c 9B08     	 lsrs r3,r3,#2
 427 000e 9BB2     	 uxth r3,r3
 428 0010 DBB2     	 uxtb r3,r3
 279:../cleanflight/src/main/drivers/timer.c **** }
 429              	 .loc 4 279 0
 430 0012 1846     	 mov r0,r3
 431 0014 0C37     	 adds r7,r7,#12
 432              	.LCFI44:
 433              	 .cfi_def_cfa_offset 4
 434 0016 BD46     	 mov sp,r7
 435              	.LCFI45:
 436              	 .cfi_def_cfa_register 13
 437              	 
 438 0018 5DF8047B 	 ldr r7,[sp],#4
 439              	.LCFI46:
 440              	 .cfi_restore 7
 441              	 .cfi_def_cfa_offset 0
 442 001c 7047     	 bx lr
 443              	 .cfi_endproc
 444              	.LFE529:
 446 001e 00BF     	 .section .text.timerLookupChannelIndex,"ax",%progbits
 447              	 .align 2
 448              	 .global timerLookupChannelIndex
 449              	 .thumb
 450              	 .thumb_func
 452              	timerLookupChannelIndex:
 453              	.LFB530:
 280:../cleanflight/src/main/drivers/timer.c **** 
 281:../cleanflight/src/main/drivers/timer.c **** uint8_t timerLookupChannelIndex(const uint16_t channel)
 282:../cleanflight/src/main/drivers/timer.c **** {
 454              	 .loc 4 282 0
 455              	 .cfi_startproc
 456              	 
 457              	 
 458 0000 80B5     	 push {r7,lr}
 459              	.LCFI47:
 460              	 .cfi_def_cfa_offset 8
 461              	 .cfi_offset 7,-8
 462              	 .cfi_offset 14,-4
 463 0002 82B0     	 sub sp,sp,#8
 464              	.LCFI48:
 465              	 .cfi_def_cfa_offset 16
 466 0004 00AF     	 add r7,sp,#0
 467              	.LCFI49:
 468              	 .cfi_def_cfa_register 7
 469 0006 0346     	 mov r3,r0
 470 0008 FB80     	 strh r3,[r7,#6]
 283:../cleanflight/src/main/drivers/timer.c ****     return lookupChannelIndex(channel);
 471              	 .loc 4 283 0
 472 000a FB88     	 ldrh r3,[r7,#6]
 473 000c 1846     	 mov r0,r3
 474 000e FFF7FEFF 	 bl lookupChannelIndex
 475 0012 0346     	 mov r3,r0
 284:../cleanflight/src/main/drivers/timer.c **** }
 476              	 .loc 4 284 0
 477 0014 1846     	 mov r0,r3
 478 0016 0837     	 adds r7,r7,#8
 479              	.LCFI50:
 480              	 .cfi_def_cfa_offset 8
 481 0018 BD46     	 mov sp,r7
 482              	.LCFI51:
 483              	 .cfi_def_cfa_register 13
 484              	 
 485 001a 80BD     	 pop {r7,pc}
 486              	 .cfi_endproc
 487              	.LFE530:
 489              	 .section .text.timerRCC,"ax",%progbits
 490              	 .align 2
 491              	 .global timerRCC
 492              	 .thumb
 493              	 .thumb_func
 495              	timerRCC:
 496              	.LFB531:
 285:../cleanflight/src/main/drivers/timer.c **** 
 286:../cleanflight/src/main/drivers/timer.c **** rccPeriphTag_t timerRCC(TIM_TypeDef *tim)
 287:../cleanflight/src/main/drivers/timer.c **** {
 497              	 .loc 4 287 0
 498              	 .cfi_startproc
 499              	 
 500              	 
 501              	 
 502 0000 80B4     	 push {r7}
 503              	.LCFI52:
 504              	 .cfi_def_cfa_offset 4
 505              	 .cfi_offset 7,-4
 506 0002 85B0     	 sub sp,sp,#20
 507              	.LCFI53:
 508              	 .cfi_def_cfa_offset 24
 509 0004 00AF     	 add r7,sp,#0
 510              	.LCFI54:
 511              	 .cfi_def_cfa_register 7
 512 0006 7860     	 str r0,[r7,#4]
 513              	.LBB14:
 288:../cleanflight/src/main/drivers/timer.c ****     for (int i = 0; i < HARDWARE_TIMER_DEFINITION_COUNT; i++) {
 514              	 .loc 4 288 0
 515 0008 0023     	 movs r3,#0
 516 000a FB60     	 str r3,[r7,#12]
 517 000c 16E0     	 b .L22
 518              	.L25:
 289:../cleanflight/src/main/drivers/timer.c ****         if (timerDefinitions[i].TIMx == tim) {
 519              	 .loc 4 289 0
 520 000e 1049     	 ldr r1,.L26
 521 0010 FA68     	 ldr r2,[r7,#12]
 522 0012 1346     	 mov r3,r2
 523 0014 5B00     	 lsls r3,r3,#1
 524 0016 1344     	 add r3,r3,r2
 525 0018 5B00     	 lsls r3,r3,#1
 526 001a 0B44     	 add r3,r3,r1
 527 001c 1A68     	 ldr r2,[r3]
 528 001e 7B68     	 ldr r3,[r7,#4]
 529 0020 9A42     	 cmp r2,r3
 530 0022 08D1     	 bne .L23
 290:../cleanflight/src/main/drivers/timer.c ****             return timerDefinitions[i].rcc;
 531              	 .loc 4 290 0
 532 0024 0A49     	 ldr r1,.L26
 533 0026 FA68     	 ldr r2,[r7,#12]
 534 0028 1346     	 mov r3,r2
 535 002a 5B00     	 lsls r3,r3,#1
 536 002c 1344     	 add r3,r3,r2
 537 002e 5B00     	 lsls r3,r3,#1
 538 0030 0B44     	 add r3,r3,r1
 539 0032 1B79     	 ldrb r3,[r3,#4]
 540 0034 06E0     	 b .L24
 541              	.L23:
 288:../cleanflight/src/main/drivers/timer.c ****     for (int i = 0; i < HARDWARE_TIMER_DEFINITION_COUNT; i++) {
 542              	 .loc 4 288 0 discriminator 2
 543 0036 FB68     	 ldr r3,[r7,#12]
 544 0038 0133     	 adds r3,r3,#1
 545 003a FB60     	 str r3,[r7,#12]
 546              	.L22:
 288:../cleanflight/src/main/drivers/timer.c ****     for (int i = 0; i < HARDWARE_TIMER_DEFINITION_COUNT; i++) {
 547              	 .loc 4 288 0 is_stmt 0 discriminator 1
 548 003c FB68     	 ldr r3,[r7,#12]
 549 003e 032B     	 cmp r3,#3
 550 0040 E5DD     	 ble .L25
 551              	.LBE14:
 291:../cleanflight/src/main/drivers/timer.c ****         }
 292:../cleanflight/src/main/drivers/timer.c ****     }
 293:../cleanflight/src/main/drivers/timer.c ****     return 0;
 552              	 .loc 4 293 0 is_stmt 1
 553 0042 0023     	 movs r3,#0
 554              	.L24:
 294:../cleanflight/src/main/drivers/timer.c **** }
 555              	 .loc 4 294 0
 556 0044 1846     	 mov r0,r3
 557 0046 1437     	 adds r7,r7,#20
 558              	.LCFI55:
 559              	 .cfi_def_cfa_offset 4
 560 0048 BD46     	 mov sp,r7
 561              	.LCFI56:
 562              	 .cfi_def_cfa_register 13
 563              	 
 564 004a 5DF8047B 	 ldr r7,[sp],#4
 565              	.LCFI57:
 566              	 .cfi_restore 7
 567              	 .cfi_def_cfa_offset 0
 568 004e 7047     	 bx lr
 569              	.L27:
 570              	 .align 2
 571              	.L26:
 572 0050 00000000 	 .word timerDefinitions
 573              	 .cfi_endproc
 574              	.LFE531:
 576              	 .section .text.timerInputIrq,"ax",%progbits
 577              	 .align 2
 578              	 .global timerInputIrq
 579              	 .thumb
 580              	 .thumb_func
 582              	timerInputIrq:
 583              	.LFB532:
 295:../cleanflight/src/main/drivers/timer.c **** 
 296:../cleanflight/src/main/drivers/timer.c **** uint8_t timerInputIrq(TIM_TypeDef *tim)
 297:../cleanflight/src/main/drivers/timer.c **** {
 584              	 .loc 4 297 0
 585              	 .cfi_startproc
 586              	 
 587              	 
 588              	 
 589 0000 80B4     	 push {r7}
 590              	.LCFI58:
 591              	 .cfi_def_cfa_offset 4
 592              	 .cfi_offset 7,-4
 593 0002 85B0     	 sub sp,sp,#20
 594              	.LCFI59:
 595              	 .cfi_def_cfa_offset 24
 596 0004 00AF     	 add r7,sp,#0
 597              	.LCFI60:
 598              	 .cfi_def_cfa_register 7
 599 0006 7860     	 str r0,[r7,#4]
 600              	.LBB15:
 298:../cleanflight/src/main/drivers/timer.c ****     for (int i = 0; i < HARDWARE_TIMER_DEFINITION_COUNT; i++) {
 601              	 .loc 4 298 0
 602 0008 0023     	 movs r3,#0
 603 000a FB60     	 str r3,[r7,#12]
 604 000c 16E0     	 b .L29
 605              	.L32:
 299:../cleanflight/src/main/drivers/timer.c ****         if (timerDefinitions[i].TIMx == tim) {
 606              	 .loc 4 299 0
 607 000e 1049     	 ldr r1,.L33
 608 0010 FA68     	 ldr r2,[r7,#12]
 609 0012 1346     	 mov r3,r2
 610 0014 5B00     	 lsls r3,r3,#1
 611 0016 1344     	 add r3,r3,r2
 612 0018 5B00     	 lsls r3,r3,#1
 613 001a 0B44     	 add r3,r3,r1
 614 001c 1A68     	 ldr r2,[r3]
 615 001e 7B68     	 ldr r3,[r7,#4]
 616 0020 9A42     	 cmp r2,r3
 617 0022 08D1     	 bne .L30
 300:../cleanflight/src/main/drivers/timer.c ****             return timerDefinitions[i].inputIrq;
 618              	 .loc 4 300 0
 619 0024 0A49     	 ldr r1,.L33
 620 0026 FA68     	 ldr r2,[r7,#12]
 621 0028 1346     	 mov r3,r2
 622 002a 5B00     	 lsls r3,r3,#1
 623 002c 1344     	 add r3,r3,r2
 624 002e 5B00     	 lsls r3,r3,#1
 625 0030 0B44     	 add r3,r3,r1
 626 0032 5B79     	 ldrb r3,[r3,#5]
 627 0034 06E0     	 b .L31
 628              	.L30:
 298:../cleanflight/src/main/drivers/timer.c ****     for (int i = 0; i < HARDWARE_TIMER_DEFINITION_COUNT; i++) {
 629              	 .loc 4 298 0 discriminator 2
 630 0036 FB68     	 ldr r3,[r7,#12]
 631 0038 0133     	 adds r3,r3,#1
 632 003a FB60     	 str r3,[r7,#12]
 633              	.L29:
 298:../cleanflight/src/main/drivers/timer.c ****     for (int i = 0; i < HARDWARE_TIMER_DEFINITION_COUNT; i++) {
 634              	 .loc 4 298 0 is_stmt 0 discriminator 1
 635 003c FB68     	 ldr r3,[r7,#12]
 636 003e 032B     	 cmp r3,#3
 637 0040 E5DD     	 ble .L32
 638              	.LBE15:
 301:../cleanflight/src/main/drivers/timer.c ****         }
 302:../cleanflight/src/main/drivers/timer.c ****     }
 303:../cleanflight/src/main/drivers/timer.c ****     return 0;
 639              	 .loc 4 303 0 is_stmt 1
 640 0042 0023     	 movs r3,#0
 641              	.L31:
 304:../cleanflight/src/main/drivers/timer.c **** }
 642              	 .loc 4 304 0
 643 0044 1846     	 mov r0,r3
 644 0046 1437     	 adds r7,r7,#20
 645              	.LCFI61:
 646              	 .cfi_def_cfa_offset 4
 647 0048 BD46     	 mov sp,r7
 648              	.LCFI62:
 649              	 .cfi_def_cfa_register 13
 650              	 
 651 004a 5DF8047B 	 ldr r7,[sp],#4
 652              	.LCFI63:
 653              	 .cfi_restore 7
 654              	 .cfi_def_cfa_offset 0
 655 004e 7047     	 bx lr
 656              	.L34:
 657              	 .align 2
 658              	.L33:
 659 0050 00000000 	 .word timerDefinitions
 660              	 .cfi_endproc
 661              	.LFE532:
 663              	 .section .text.timerNVICConfigure,"ax",%progbits
 664              	 .align 2
 665              	 .global timerNVICConfigure
 666              	 .thumb
 667              	 .thumb_func
 669              	timerNVICConfigure:
 670              	.LFB533:
 305:../cleanflight/src/main/drivers/timer.c **** 
 306:../cleanflight/src/main/drivers/timer.c **** void timerNVICConfigure(uint8_t irq)
 307:../cleanflight/src/main/drivers/timer.c **** {
 671              	 .loc 4 307 0
 672              	 .cfi_startproc
 673              	 
 674              	 
 675 0000 80B5     	 push {r7,lr}
 676              	.LCFI64:
 677              	 .cfi_def_cfa_offset 8
 678              	 .cfi_offset 7,-8
 679              	 .cfi_offset 14,-4
 680 0002 84B0     	 sub sp,sp,#16
 681              	.LCFI65:
 682              	 .cfi_def_cfa_offset 24
 683 0004 00AF     	 add r7,sp,#0
 684              	.LCFI66:
 685              	 .cfi_def_cfa_register 7
 686 0006 0346     	 mov r3,r0
 687 0008 FB71     	 strb r3,[r7,#7]
 308:../cleanflight/src/main/drivers/timer.c ****     NVIC_InitTypeDef NVIC_InitStructure;
 309:../cleanflight/src/main/drivers/timer.c **** 
 310:../cleanflight/src/main/drivers/timer.c ****     NVIC_InitStructure.NVIC_IRQChannel = irq;
 688              	 .loc 4 310 0
 689 000a FB79     	 ldrb r3,[r7,#7]
 690 000c 3B73     	 strb r3,[r7,#12]
 311:../cleanflight/src/main/drivers/timer.c ****     NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = NVIC_PRIORITY_BASE(NVIC_PRIO_TIMER);
 691              	 .loc 4 311 0
 692 000e 0123     	 movs r3,#1
 693 0010 7B73     	 strb r3,[r7,#13]
 312:../cleanflight/src/main/drivers/timer.c ****     NVIC_InitStructure.NVIC_IRQChannelSubPriority = NVIC_PRIORITY_SUB(NVIC_PRIO_TIMER);
 694              	 .loc 4 312 0
 695 0012 0023     	 movs r3,#0
 696 0014 BB73     	 strb r3,[r7,#14]
 313:../cleanflight/src/main/drivers/timer.c ****     NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 697              	 .loc 4 313 0
 698 0016 0123     	 movs r3,#1
 699 0018 FB73     	 strb r3,[r7,#15]
 314:../cleanflight/src/main/drivers/timer.c ****     NVIC_Init(&NVIC_InitStructure);
 700              	 .loc 4 314 0
 701 001a 07F10C03 	 add r3,r7,#12
 702 001e 1846     	 mov r0,r3
 703 0020 FFF7FEFF 	 bl NVIC_Init
 315:../cleanflight/src/main/drivers/timer.c **** }
 704              	 .loc 4 315 0
 705 0024 1037     	 adds r7,r7,#16
 706              	.LCFI67:
 707              	 .cfi_def_cfa_offset 8
 708 0026 BD46     	 mov sp,r7
 709              	.LCFI68:
 710              	 .cfi_def_cfa_register 13
 711              	 
 712 0028 80BD     	 pop {r7,pc}
 713              	 .cfi_endproc
 714              	.LFE533:
 716 002a 00BF     	 .section .text.configTimeBase,"ax",%progbits
 717              	 .align 2
 718              	 .global configTimeBase
 719              	 .thumb
 720              	 .thumb_func
 722              	configTimeBase:
 723              	.LFB534:
 316:../cleanflight/src/main/drivers/timer.c **** 
 317:../cleanflight/src/main/drivers/timer.c **** void configTimeBase(TIM_TypeDef *tim, uint16_t period, uint32_t hz)
 318:../cleanflight/src/main/drivers/timer.c **** {
 724              	 .loc 4 318 0
 725              	 .cfi_startproc
 726              	 
 727              	 
 728 0000 80B5     	 push {r7,lr}
 729              	.LCFI69:
 730              	 .cfi_def_cfa_offset 8
 731              	 .cfi_offset 7,-8
 732              	 .cfi_offset 14,-4
 733 0002 86B0     	 sub sp,sp,#24
 734              	.LCFI70:
 735              	 .cfi_def_cfa_offset 32
 736 0004 00AF     	 add r7,sp,#0
 737              	.LCFI71:
 738              	 .cfi_def_cfa_register 7
 739 0006 F860     	 str r0,[r7,#12]
 740 0008 0B46     	 mov r3,r1
 741 000a 7A60     	 str r2,[r7,#4]
 742 000c 7B81     	 strh r3,[r7,#10]
 319:../cleanflight/src/main/drivers/timer.c **** #ifdef XMC4700_F100x2048
 320:../cleanflight/src/main/drivers/timer.c **** 
 321:../cleanflight/src/main/drivers/timer.c **** 	XMC_CCU4_Init(TIM_MODULE(tim), XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR);
 743              	 .loc 4 321 0
 744 000e FB68     	 ldr r3,[r7,#12]
 745 0010 1B0C     	 lsrs r3,r3,#16
 746 0012 1B04     	 lsls r3,r3,#16
 747 0014 1846     	 mov r0,r3
 748 0016 0021     	 movs r1,#0
 749 0018 FFF7FEFF 	 bl XMC_CCU4_Init
 322:../cleanflight/src/main/drivers/timer.c **** 
 323:../cleanflight/src/main/drivers/timer.c **** 	uint8_t prescaler = log2f(timerClock(tim) / hz);
 750              	 .loc 4 323 0
 751 001c F868     	 ldr r0,[r7,#12]
 752 001e FFF7FEFF 	 bl timerClock
 753 0022 0246     	 mov r2,r0
 754 0024 7B68     	 ldr r3,[r7,#4]
 755 0026 B2FBF3F3 	 udiv r3,r2,r3
 756 002a 07EE903A 	 fmsr s15,r3
 757 002e F8EE677A 	 fuitos s15,s15
 758 0032 17EE900A 	 fmrs r0,s15
 759 0036 FFF7FEFF 	 bl log2f
 760 003a 07EE900A 	 fmsr s15,r0
 761 003e FCEEE77A 	 ftouizs s15,s15
 762 0042 C7ED007A 	 fsts s15,[r7]
 763 0046 3B78     	 ldrb r3,[r7]
 764 0048 FB75     	 strb r3,[r7,#23]
 324:../cleanflight/src/main/drivers/timer.c **** 
 325:../cleanflight/src/main/drivers/timer.c **** 	XMC_CCU4_SLICE_COMPARE_CONFIG_t slice_config;
 326:../cleanflight/src/main/drivers/timer.c **** 	memset(&slice_config, 0, sizeof(slice_config));
 765              	 .loc 4 326 0
 766 004a 07F11003 	 add r3,r7,#16
 767 004e 1846     	 mov r0,r3
 768 0050 0021     	 movs r1,#0
 769 0052 0622     	 movs r2,#6
 770 0054 FFF7FEFF 	 bl memset
 327:../cleanflight/src/main/drivers/timer.c **** 	slice_config.prescaler_initval = prescaler;
 771              	 .loc 4 327 0
 772 0058 FB7D     	 ldrb r3,[r7,#23]
 773 005a 03F00F03 	 and r3,r3,#15
 774 005e DAB2     	 uxtb r2,r3
 775 0060 3B7D     	 ldrb r3,[r7,#20]
 776 0062 62F30303 	 bfi r3,r2,#0,#4
 777 0066 3B75     	 strb r3,[r7,#20]
 328:../cleanflight/src/main/drivers/timer.c **** 	slice_config.shadow_xfer_clear = 1;
 778              	 .loc 4 328 0
 779 0068 3B7C     	 ldrb r3,[r7,#16]
 780 006a 43F00403 	 orr r3,r3,#4
 781 006e 3B74     	 strb r3,[r7,#16]
 329:../cleanflight/src/main/drivers/timer.c **** 	XMC_CCU4_SLICE_CompareInit(tim, &slice_config);
 782              	 .loc 4 329 0
 783 0070 07F11003 	 add r3,r7,#16
 784 0074 F868     	 ldr r0,[r7,#12]
 785 0076 1946     	 mov r1,r3
 786 0078 FFF7FEFF 	 bl XMC_CCU4_SLICE_CompareInit
 330:../cleanflight/src/main/drivers/timer.c **** 	XMC_CCU4_SLICE_SetTimerPeriodMatch(tim, period);
 787              	 .loc 4 330 0
 788 007c 7B89     	 ldrh r3,[r7,#10]
 789 007e F868     	 ldr r0,[r7,#12]
 790 0080 1946     	 mov r1,r3
 791 0082 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetTimerPeriodMatch
 331:../cleanflight/src/main/drivers/timer.c **** 	XMC_CCU4_EnableShadowTransfer(TIM_MODULE(tim), 1 << 4  *TIM_SLICE_NO(tim));
 792              	 .loc 4 331 0
 793 0086 FB68     	 ldr r3,[r7,#12]
 794 0088 1B0C     	 lsrs r3,r3,#16
 795 008a 1B04     	 lsls r3,r3,#16
 796 008c 1946     	 mov r1,r3
 797 008e FB68     	 ldr r3,[r7,#12]
 798 0090 03F47063 	 and r3,r3,#3840
 799 0094 1B0A     	 lsrs r3,r3,#8
 800 0096 03F18043 	 add r3,r3,#1073741824
 801 009a 013B     	 subs r3,r3,#1
 802 009c 9B00     	 lsls r3,r3,#2
 803 009e 1A46     	 mov r2,r3
 804 00a0 0123     	 movs r3,#1
 805 00a2 9340     	 lsls r3,r3,r2
 806 00a4 0846     	 mov r0,r1
 807 00a6 1946     	 mov r1,r3
 808 00a8 FFF7FEFF 	 bl XMC_CCU4_EnableShadowTransfer
 332:../cleanflight/src/main/drivers/timer.c **** 
 333:../cleanflight/src/main/drivers/timer.c **** #else
 334:../cleanflight/src/main/drivers/timer.c ****     TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
 335:../cleanflight/src/main/drivers/timer.c **** 
 336:../cleanflight/src/main/drivers/timer.c ****     TIM_TimeBaseStructInit(&TIM_TimeBaseStructure);
 337:../cleanflight/src/main/drivers/timer.c ****     TIM_TimeBaseStructure.TIM_Period = (period - 1) & 0xFFFF; // AKA TIMx_ARR
 338:../cleanflight/src/main/drivers/timer.c **** 
 339:../cleanflight/src/main/drivers/timer.c ****     // "The counter clock frequency (CK_CNT) is equal to f CK_PSC / (PSC[15:0] + 1)." - STM32F10x R
 340:../cleanflight/src/main/drivers/timer.c ****     // Thus for 1Mhz: 72000000 / 1000000 = 72, 72 - 1 = 71 = TIM_Prescaler
 341:../cleanflight/src/main/drivers/timer.c ****     TIM_TimeBaseStructure.TIM_Prescaler = (timerClock(tim) / hz) - 1;
 342:../cleanflight/src/main/drivers/timer.c **** 
 343:../cleanflight/src/main/drivers/timer.c ****     TIM_TimeBaseStructure.TIM_ClockDivision = 0;
 344:../cleanflight/src/main/drivers/timer.c ****     TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
 345:../cleanflight/src/main/drivers/timer.c ****     TIM_TimeBaseInit(tim, &TIM_TimeBaseStructure);
 346:../cleanflight/src/main/drivers/timer.c **** #endif
 347:../cleanflight/src/main/drivers/timer.c **** }
 809              	 .loc 4 347 0
 810 00ac 1837     	 adds r7,r7,#24
 811              	.LCFI72:
 812              	 .cfi_def_cfa_offset 8
 813 00ae BD46     	 mov sp,r7
 814              	.LCFI73:
 815              	 .cfi_def_cfa_register 13
 816              	 
 817 00b0 80BD     	 pop {r7,pc}
 818              	 .cfi_endproc
 819              	.LFE534:
 821 00b2 00BF     	 .section .text.timerConfigure,"ax",%progbits
 822              	 .align 2
 823              	 .global timerConfigure
 824              	 .thumb
 825              	 .thumb_func
 827              	timerConfigure:
 828              	.LFB535:
 348:../cleanflight/src/main/drivers/timer.c **** 
 349:../cleanflight/src/main/drivers/timer.c **** // old interface for PWM inputs. It should be replaced
 350:../cleanflight/src/main/drivers/timer.c **** void timerConfigure(const timerHardware_t *timerHardwarePtr, uint16_t period, uint32_t hz)
 351:../cleanflight/src/main/drivers/timer.c **** {
 829              	 .loc 4 351 0
 830              	 .cfi_startproc
 831              	 
 832              	 
 833 0000 80B5     	 push {r7,lr}
 834              	.LCFI74:
 835              	 .cfi_def_cfa_offset 8
 836              	 .cfi_offset 7,-8
 837              	 .cfi_offset 14,-4
 838 0002 86B0     	 sub sp,sp,#24
 839              	.LCFI75:
 840              	 .cfi_def_cfa_offset 32
 841 0004 00AF     	 add r7,sp,#0
 842              	.LCFI76:
 843              	 .cfi_def_cfa_register 7
 844 0006 F860     	 str r0,[r7,#12]
 845 0008 0B46     	 mov r3,r1
 846 000a 7A60     	 str r2,[r7,#4]
 847 000c 7B81     	 strh r3,[r7,#10]
 352:../cleanflight/src/main/drivers/timer.c ****     configTimeBase(timerHardwarePtr->tim, period, hz);
 848              	 .loc 4 352 0
 849 000e FB68     	 ldr r3,[r7,#12]
 850 0010 1A68     	 ldr r2,[r3]
 851 0012 7B89     	 ldrh r3,[r7,#10]
 852 0014 1046     	 mov r0,r2
 853 0016 1946     	 mov r1,r3
 854 0018 7A68     	 ldr r2,[r7,#4]
 855 001a FFF7FEFF 	 bl configTimeBase
 353:../cleanflight/src/main/drivers/timer.c **** #ifndef XMC4700_F100x2048
 354:../cleanflight/src/main/drivers/timer.c ****     TIM_Cmd(timerHardwarePtr->tim, ENABLE);
 355:../cleanflight/src/main/drivers/timer.c **** #endif
 356:../cleanflight/src/main/drivers/timer.c **** 
 357:../cleanflight/src/main/drivers/timer.c ****     uint8_t irq = timerInputIrq(timerHardwarePtr->tim);
 856              	 .loc 4 357 0
 857 001e FB68     	 ldr r3,[r7,#12]
 858 0020 1B68     	 ldr r3,[r3]
 859 0022 1846     	 mov r0,r3
 860 0024 FFF7FEFF 	 bl timerInputIrq
 861 0028 0346     	 mov r3,r0
 862 002a FB75     	 strb r3,[r7,#23]
 358:../cleanflight/src/main/drivers/timer.c ****     timerNVICConfigure(irq);
 863              	 .loc 4 358 0
 864 002c FB7D     	 ldrb r3,[r7,#23]
 865 002e 1846     	 mov r0,r3
 866 0030 FFF7FEFF 	 bl timerNVICConfigure
 359:../cleanflight/src/main/drivers/timer.c ****     // HACK - enable second IRQ on timers that need it
 360:../cleanflight/src/main/drivers/timer.c ****     switch (irq) {
 361:../cleanflight/src/main/drivers/timer.c **** #if defined(STM32F10X)
 362:../cleanflight/src/main/drivers/timer.c ****     case TIM1_CC_IRQn:
 363:../cleanflight/src/main/drivers/timer.c ****         timerNVICConfigure(TIM1_UP_IRQn);
 364:../cleanflight/src/main/drivers/timer.c ****         break;
 365:../cleanflight/src/main/drivers/timer.c **** #endif
 366:../cleanflight/src/main/drivers/timer.c **** #if defined (STM32F40_41xxx) || defined(STM32F411xE)
 367:../cleanflight/src/main/drivers/timer.c ****     case TIM1_CC_IRQn:
 368:../cleanflight/src/main/drivers/timer.c ****         timerNVICConfigure(TIM1_UP_TIM10_IRQn);
 369:../cleanflight/src/main/drivers/timer.c ****         break;
 370:../cleanflight/src/main/drivers/timer.c **** #endif
 371:../cleanflight/src/main/drivers/timer.c **** #if defined (STM32F40_41xxx)
 372:../cleanflight/src/main/drivers/timer.c ****     case TIM8_CC_IRQn:
 373:../cleanflight/src/main/drivers/timer.c ****         timerNVICConfigure(TIM8_UP_TIM13_IRQn);
 374:../cleanflight/src/main/drivers/timer.c ****         break;
 375:../cleanflight/src/main/drivers/timer.c **** #endif
 376:../cleanflight/src/main/drivers/timer.c **** #ifdef STM32F303xC
 377:../cleanflight/src/main/drivers/timer.c ****     case TIM1_CC_IRQn:
 378:../cleanflight/src/main/drivers/timer.c ****         timerNVICConfigure(TIM1_UP_TIM16_IRQn);
 379:../cleanflight/src/main/drivers/timer.c ****         break;
 380:../cleanflight/src/main/drivers/timer.c **** #endif
 381:../cleanflight/src/main/drivers/timer.c **** #if defined(STM32F10X_XL)
 382:../cleanflight/src/main/drivers/timer.c ****     case TIM8_CC_IRQn:
 383:../cleanflight/src/main/drivers/timer.c ****         timerNVICConfigure(TIM8_UP_IRQn);
 384:../cleanflight/src/main/drivers/timer.c ****         break;
 385:../cleanflight/src/main/drivers/timer.c **** #endif
 386:../cleanflight/src/main/drivers/timer.c ****     }
 387:../cleanflight/src/main/drivers/timer.c **** }
 867              	 .loc 4 387 0
 868 0034 1837     	 adds r7,r7,#24
 869              	.LCFI77:
 870              	 .cfi_def_cfa_offset 8
 871 0036 BD46     	 mov sp,r7
 872              	.LCFI78:
 873              	 .cfi_def_cfa_register 13
 874              	 
 875 0038 80BD     	 pop {r7,pc}
 876              	 .cfi_endproc
 877              	.LFE535:
 879 003a 00BF     	 .section .text.timerChInit,"ax",%progbits
 880              	 .align 2
 881              	 .global timerChInit
 882              	 .thumb
 883              	 .thumb_func
 885              	timerChInit:
 886              	.LFB536:
 388:../cleanflight/src/main/drivers/timer.c **** 
 389:../cleanflight/src/main/drivers/timer.c **** // allocate and configure timer channel. Timer priority is set to highest priority of its channels
 390:../cleanflight/src/main/drivers/timer.c **** void timerChInit(const timerHardware_t *timHw, channelType_t type, int irqPriority, uint8_t irq)
 391:../cleanflight/src/main/drivers/timer.c **** {
 887              	 .loc 4 391 0
 888              	 .cfi_startproc
 889              	 
 890              	 
 891 0000 80B5     	 push {r7,lr}
 892              	.LCFI79:
 893              	 .cfi_def_cfa_offset 8
 894              	 .cfi_offset 7,-8
 895              	 .cfi_offset 14,-4
 896 0002 88B0     	 sub sp,sp,#32
 897              	.LCFI80:
 898              	 .cfi_def_cfa_offset 40
 899 0004 00AF     	 add r7,sp,#0
 900              	.LCFI81:
 901              	 .cfi_def_cfa_register 7
 902 0006 F860     	 str r0,[r7,#12]
 903 0008 7A60     	 str r2,[r7,#4]
 904 000a 1A46     	 mov r2,r3
 905 000c 0B46     	 mov r3,r1
 906 000e FB72     	 strb r3,[r7,#11]
 907 0010 1346     	 mov r3,r2
 908 0012 BB72     	 strb r3,[r7,#10]
 392:../cleanflight/src/main/drivers/timer.c ****     unsigned channel = timHw - timerHardware;
 909              	 .loc 4 392 0
 910 0014 FB68     	 ldr r3,[r7,#12]
 911 0016 204A     	 ldr r2,.L42
 912 0018 9B1A     	 subs r3,r3,r2
 913 001a 204A     	 ldr r2,.L42+4
 914 001c 02FB03F3 	 mul r3,r2,r3
 915 0020 FB61     	 str r3,[r7,#28]
 393:../cleanflight/src/main/drivers/timer.c ****     if (channel >= USABLE_TIMER_CHANNEL_COUNT)
 916              	 .loc 4 393 0
 917 0022 FB69     	 ldr r3,[r7,#28]
 918 0024 0C2B     	 cmp r3,#12
 919 0026 00D9     	 bls .L39
 394:../cleanflight/src/main/drivers/timer.c ****         return;
 920              	 .loc 4 394 0
 921 0028 33E0     	 b .L38
 922              	.L39:
 395:../cleanflight/src/main/drivers/timer.c **** 
 396:../cleanflight/src/main/drivers/timer.c ****     timerChannelInfo[channel].type = type;
 923              	 .loc 4 396 0
 924 002a 1D4A     	 ldr r2,.L42+8
 925 002c FB69     	 ldr r3,[r7,#28]
 926 002e 1344     	 add r3,r3,r2
 927 0030 FA7A     	 ldrb r2,[r7,#11]
 928 0032 1A70     	 strb r2,[r3]
 397:../cleanflight/src/main/drivers/timer.c ****     unsigned timer = lookupTimerIndex(timHw->tim);
 929              	 .loc 4 397 0
 930 0034 FB68     	 ldr r3,[r7,#12]
 931 0036 1B68     	 ldr r3,[r3]
 932 0038 1846     	 mov r0,r3
 933 003a FFF7FEFF 	 bl lookupTimerIndex
 934 003e 0346     	 mov r3,r0
 935 0040 BB61     	 str r3,[r7,#24]
 398:../cleanflight/src/main/drivers/timer.c ****     if (timer >= USED_TIMER_COUNT)
 936              	 .loc 4 398 0
 937 0042 BB69     	 ldr r3,[r7,#24]
 938 0044 002B     	 cmp r3,#0
 939 0046 00D0     	 beq .L41
 399:../cleanflight/src/main/drivers/timer.c ****         return;
 940              	 .loc 4 399 0 discriminator 2
 941 0048 23E0     	 b .L38
 942              	.L41:
 400:../cleanflight/src/main/drivers/timer.c ****     if (irqPriority < timerInfo[timer].priority) {
 943              	 .loc 4 400 0
 944 004a 164A     	 ldr r2,.L42+12
 945 004c BB69     	 ldr r3,[r7,#24]
 946 004e 1344     	 add r3,r3,r2
 947 0050 1B78     	 ldrb r3,[r3]
 948 0052 1A46     	 mov r2,r3
 949 0054 7B68     	 ldr r3,[r7,#4]
 950 0056 9A42     	 cmp r2,r3
 951 0058 1BDD     	 ble .L38
 952              	.LBB16:
 401:../cleanflight/src/main/drivers/timer.c ****         // it would be better to set priority in the end, but current startup sequence is not ready
 402:../cleanflight/src/main/drivers/timer.c ****         configTimeBase(usedTimers[timer], 0, 1);
 953              	 .loc 4 402 0 discriminator 3
 954 005a 134B     	 ldr r3,.L42+16
 955 005c 1846     	 mov r0,r3
 956 005e 0021     	 movs r1,#0
 957 0060 0122     	 movs r2,#1
 958 0062 FFF7FEFF 	 bl configTimeBase
 403:../cleanflight/src/main/drivers/timer.c **** #ifndef XMC4700_F100x2048
 404:../cleanflight/src/main/drivers/timer.c ****         TIM_Cmd(usedTimers[timer],  ENABLE);
 405:../cleanflight/src/main/drivers/timer.c **** #endif
 406:../cleanflight/src/main/drivers/timer.c **** 
 407:../cleanflight/src/main/drivers/timer.c ****         NVIC_InitTypeDef NVIC_InitStructure;
 408:../cleanflight/src/main/drivers/timer.c **** 
 409:../cleanflight/src/main/drivers/timer.c ****         NVIC_InitStructure.NVIC_IRQChannel = irq;
 959              	 .loc 4 409 0 discriminator 3
 960 0066 BB7A     	 ldrb r3,[r7,#10]
 961 0068 3B75     	 strb r3,[r7,#20]
 410:../cleanflight/src/main/drivers/timer.c ****         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = NVIC_PRIORITY_BASE(irqPriority);
 962              	 .loc 4 410 0 discriminator 3
 963 006a 7B68     	 ldr r3,[r7,#4]
 964 006c 9B11     	 asrs r3,r3,#6
 965 006e DBB2     	 uxtb r3,r3
 966 0070 7B75     	 strb r3,[r7,#21]
 411:../cleanflight/src/main/drivers/timer.c ****         NVIC_InitStructure.NVIC_IRQChannelSubPriority = NVIC_PRIORITY_SUB(irqPriority);
 967              	 .loc 4 411 0 discriminator 3
 968 0072 0023     	 movs r3,#0
 969 0074 BB75     	 strb r3,[r7,#22]
 412:../cleanflight/src/main/drivers/timer.c ****         NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 970              	 .loc 4 412 0 discriminator 3
 971 0076 0123     	 movs r3,#1
 972 0078 FB75     	 strb r3,[r7,#23]
 413:../cleanflight/src/main/drivers/timer.c ****         NVIC_Init(&NVIC_InitStructure);
 973              	 .loc 4 413 0 discriminator 3
 974 007a 07F11403 	 add r3,r7,#20
 975 007e 1846     	 mov r0,r3
 976 0080 FFF7FEFF 	 bl NVIC_Init
 414:../cleanflight/src/main/drivers/timer.c **** 
 415:../cleanflight/src/main/drivers/timer.c ****         timerInfo[timer].priority = irqPriority;
 977              	 .loc 4 415 0 discriminator 3
 978 0084 7B68     	 ldr r3,[r7,#4]
 979 0086 D9B2     	 uxtb r1,r3
 980 0088 064A     	 ldr r2,.L42+12
 981 008a BB69     	 ldr r3,[r7,#24]
 982 008c 1344     	 add r3,r3,r2
 983 008e 0A46     	 mov r2,r1
 984 0090 1A70     	 strb r2,[r3]
 985              	.L38:
 986              	.LBE16:
 416:../cleanflight/src/main/drivers/timer.c ****     }
 417:../cleanflight/src/main/drivers/timer.c **** }
 987              	 .loc 4 417 0
 988 0092 2037     	 adds r7,r7,#32
 989              	.LCFI82:
 990              	 .cfi_def_cfa_offset 8
 991 0094 BD46     	 mov sp,r7
 992              	.LCFI83:
 993              	 .cfi_def_cfa_register 13
 994              	 
 995 0096 80BD     	 pop {r7,pc}
 996              	.L43:
 997              	 .align 2
 998              	.L42:
 999 0098 00000000 	 .word timerHardware
 1000 009c 398EE338 	 .word 954437177
 1001 00a0 00000000 	 .word timerChannelInfo
 1002 00a4 00000000 	 .word timerInfo
 1003 00a8 00000140 	 .word 1073807360
 1004              	 .cfi_endproc
 1005              	.LFE536:
 1007              	 .section .text.timerChCCHandlerInit,"ax",%progbits
 1008              	 .align 2
 1009              	 .global timerChCCHandlerInit
 1010              	 .thumb
 1011              	 .thumb_func
 1013              	timerChCCHandlerInit:
 1014              	.LFB537:
 418:../cleanflight/src/main/drivers/timer.c **** 
 419:../cleanflight/src/main/drivers/timer.c **** void timerChCCHandlerInit(timerCCHandlerRec_t *self, timerCCHandlerCallback *fn)
 420:../cleanflight/src/main/drivers/timer.c **** {
 1015              	 .loc 4 420 0
 1016              	 .cfi_startproc
 1017              	 
 1018              	 
 1019              	 
 1020 0000 80B4     	 push {r7}
 1021              	.LCFI84:
 1022              	 .cfi_def_cfa_offset 4
 1023              	 .cfi_offset 7,-4
 1024 0002 83B0     	 sub sp,sp,#12
 1025              	.LCFI85:
 1026              	 .cfi_def_cfa_offset 16
 1027 0004 00AF     	 add r7,sp,#0
 1028              	.LCFI86:
 1029              	 .cfi_def_cfa_register 7
 1030 0006 7860     	 str r0,[r7,#4]
 1031 0008 3960     	 str r1,[r7]
 421:../cleanflight/src/main/drivers/timer.c ****     self->fn = fn;
 1032              	 .loc 4 421 0
 1033 000a 7B68     	 ldr r3,[r7,#4]
 1034 000c 3A68     	 ldr r2,[r7]
 1035 000e 1A60     	 str r2,[r3]
 422:../cleanflight/src/main/drivers/timer.c **** }
 1036              	 .loc 4 422 0
 1037 0010 0C37     	 adds r7,r7,#12
 1038              	.LCFI87:
 1039              	 .cfi_def_cfa_offset 4
 1040 0012 BD46     	 mov sp,r7
 1041              	.LCFI88:
 1042              	 .cfi_def_cfa_register 13
 1043              	 
 1044 0014 5DF8047B 	 ldr r7,[sp],#4
 1045              	.LCFI89:
 1046              	 .cfi_restore 7
 1047              	 .cfi_def_cfa_offset 0
 1048 0018 7047     	 bx lr
 1049              	 .cfi_endproc
 1050              	.LFE537:
 1052 001a 00BF     	 .section .text.timerChOvrHandlerInit,"ax",%progbits
 1053              	 .align 2
 1054              	 .global timerChOvrHandlerInit
 1055              	 .thumb
 1056              	 .thumb_func
 1058              	timerChOvrHandlerInit:
 1059              	.LFB538:
 423:../cleanflight/src/main/drivers/timer.c **** 
 424:../cleanflight/src/main/drivers/timer.c **** void timerChOvrHandlerInit(timerOvrHandlerRec_t *self, timerOvrHandlerCallback *fn)
 425:../cleanflight/src/main/drivers/timer.c **** {
 1060              	 .loc 4 425 0
 1061              	 .cfi_startproc
 1062              	 
 1063              	 
 1064              	 
 1065 0000 80B4     	 push {r7}
 1066              	.LCFI90:
 1067              	 .cfi_def_cfa_offset 4
 1068              	 .cfi_offset 7,-4
 1069 0002 83B0     	 sub sp,sp,#12
 1070              	.LCFI91:
 1071              	 .cfi_def_cfa_offset 16
 1072 0004 00AF     	 add r7,sp,#0
 1073              	.LCFI92:
 1074              	 .cfi_def_cfa_register 7
 1075 0006 7860     	 str r0,[r7,#4]
 1076 0008 3960     	 str r1,[r7]
 426:../cleanflight/src/main/drivers/timer.c ****     self->fn = fn;
 1077              	 .loc 4 426 0
 1078 000a 7B68     	 ldr r3,[r7,#4]
 1079 000c 3A68     	 ldr r2,[r7]
 1080 000e 1A60     	 str r2,[r3]
 427:../cleanflight/src/main/drivers/timer.c ****     self->next = NULL;
 1081              	 .loc 4 427 0
 1082 0010 7B68     	 ldr r3,[r7,#4]
 1083 0012 0022     	 movs r2,#0
 1084 0014 1A71     	 strb r2,[r3,#4]
 1085 0016 0022     	 movs r2,#0
 1086 0018 5A71     	 strb r2,[r3,#5]
 1087 001a 0022     	 movs r2,#0
 1088 001c 9A71     	 strb r2,[r3,#6]
 1089 001e 0022     	 movs r2,#0
 1090 0020 DA71     	 strb r2,[r3,#7]
 428:../cleanflight/src/main/drivers/timer.c **** }
 1091              	 .loc 4 428 0
 1092 0022 0C37     	 adds r7,r7,#12
 1093              	.LCFI93:
 1094              	 .cfi_def_cfa_offset 4
 1095 0024 BD46     	 mov sp,r7
 1096              	.LCFI94:
 1097              	 .cfi_def_cfa_register 13
 1098              	 
 1099 0026 5DF8047B 	 ldr r7,[sp],#4
 1100              	.LCFI95:
 1101              	 .cfi_restore 7
 1102              	 .cfi_def_cfa_offset 0
 1103 002a 7047     	 bx lr
 1104              	 .cfi_endproc
 1105              	.LFE538:
 1107              	 .section .text.timerChConfig_UpdateOverflow,"ax",%progbits
 1108              	 .align 2
 1109              	 .thumb
 1110              	 .thumb_func
 1112              	timerChConfig_UpdateOverflow:
 1113              	.LFB539:
 429:../cleanflight/src/main/drivers/timer.c **** 
 430:../cleanflight/src/main/drivers/timer.c **** // update overflow callback list
 431:../cleanflight/src/main/drivers/timer.c **** // some synchronization mechanism is neccesary to avoid disturbing other channels (BASEPRI used now
 432:../cleanflight/src/main/drivers/timer.c **** static void timerChConfig_UpdateOverflow(timerConfig_t *cfg, TIM_TypeDef *tim) {
 1114              	 .loc 4 432 0
 1115              	 .cfi_startproc
 1116              	 
 1117              	 
 1118 0000 80B5     	 push {r7,lr}
 1119              	.LCFI96:
 1120              	 .cfi_def_cfa_offset 8
 1121              	 .cfi_offset 7,-8
 1122              	 .cfi_offset 14,-4
 1123 0002 88B0     	 sub sp,sp,#32
 1124              	.LCFI97:
 1125              	 .cfi_def_cfa_offset 40
 1126 0004 00AF     	 add r7,sp,#0
 1127              	.LCFI98:
 1128              	 .cfi_def_cfa_register 7
 1129 0006 7860     	 str r0,[r7,#4]
 1130 0008 3960     	 str r1,[r7]
 433:../cleanflight/src/main/drivers/timer.c ****     timerOvrHandlerRec_t **chain = &cfg->overflowCallbackActive;
 1131              	 .loc 4 433 0
 1132 000a 7B68     	 ldr r3,[r7,#4]
 1133 000c 2033     	 adds r3,r3,#32
 1134 000e FB61     	 str r3,[r7,#28]
 1135              	.LBB17:
 1136              	.LBB18:
 1137              	.LBB19:
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 1138              	 .loc 3 465 0
 1139              	
 1140 0010 EFF31183 	 MRS r3,basepri
 1141              	
 1142              	 .thumb
 1143 0014 3B61     	 str r3,[r7,#16]
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 1144              	 .loc 3 466 0
 1145 0016 3B69     	 ldr r3,[r7,#16]
 1146              	.LBE19:
 1147              	.LBE18:
 434:../cleanflight/src/main/drivers/timer.c ****     ATOMIC_BLOCK(NVIC_PRIO_TIMER) {
 1148              	 .loc 4 434 0
 1149 0018 DBB2     	 uxtb r3,r3
 1150 001a FB73     	 strb r3,[r7,#15]
 1151 001c 5020     	 movs r0,#80
 1152 001e FFF7FEFF 	 bl __basepriSetMemRetVal
 1153 0022 0346     	 mov r3,r0
 1154 0024 FB76     	 strb r3,[r7,#27]
 1155 0026 22E0     	 b .L48
 1156              	.L52:
 1157              	.LBB20:
 435:../cleanflight/src/main/drivers/timer.c ****         for (int i = 0; i < CC_CHANNELS_PER_TIMER; i++)
 1158              	 .loc 4 435 0
 1159 0028 0023     	 movs r3,#0
 1160 002a 7B61     	 str r3,[r7,#20]
 1161 002c 17E0     	 b .L49
 1162              	.L51:
 436:../cleanflight/src/main/drivers/timer.c ****             if (cfg->overflowCallback[i]) {
 1163              	 .loc 4 436 0
 1164 002e 7B68     	 ldr r3,[r7,#4]
 1165 0030 7A69     	 ldr r2,[r7,#20]
 1166 0032 0432     	 adds r2,r2,#4
 1167 0034 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1168 0038 002B     	 cmp r3,#0
 1169 003a 0DD0     	 beq .L50
 437:../cleanflight/src/main/drivers/timer.c ****                 *chain = cfg->overflowCallback[i];
 1170              	 .loc 4 437 0
 1171 003c 7B68     	 ldr r3,[r7,#4]
 1172 003e 7A69     	 ldr r2,[r7,#20]
 1173 0040 0432     	 adds r2,r2,#4
 1174 0042 53F82220 	 ldr r2,[r3,r2,lsl#2]
 1175 0046 FB69     	 ldr r3,[r7,#28]
 1176 0048 1A60     	 str r2,[r3]
 438:../cleanflight/src/main/drivers/timer.c ****                 chain = &cfg->overflowCallback[i]->next;
 1177              	 .loc 4 438 0
 1178 004a 7B68     	 ldr r3,[r7,#4]
 1179 004c 7A69     	 ldr r2,[r7,#20]
 1180 004e 0432     	 adds r2,r2,#4
 1181 0050 53F82230 	 ldr r3,[r3,r2,lsl#2]
 1182 0054 0433     	 adds r3,r3,#4
 1183 0056 FB61     	 str r3,[r7,#28]
 1184              	.L50:
 435:../cleanflight/src/main/drivers/timer.c ****             if (cfg->overflowCallback[i]) {
 1185              	 .loc 4 435 0 discriminator 2
 1186 0058 7B69     	 ldr r3,[r7,#20]
 1187 005a 0133     	 adds r3,r3,#1
 1188 005c 7B61     	 str r3,[r7,#20]
 1189              	.L49:
 435:../cleanflight/src/main/drivers/timer.c ****             if (cfg->overflowCallback[i]) {
 1190              	 .loc 4 435 0 is_stmt 0 discriminator 1
 1191 005e 7B69     	 ldr r3,[r7,#20]
 1192 0060 032B     	 cmp r3,#3
 1193 0062 E4DD     	 ble .L51
 1194              	.LBE20:
 439:../cleanflight/src/main/drivers/timer.c ****             }
 440:../cleanflight/src/main/drivers/timer.c ****         *chain = NULL;
 1195              	 .loc 4 440 0 is_stmt 1 discriminator 2
 1196 0064 FB69     	 ldr r3,[r7,#28]
 1197 0066 0022     	 movs r2,#0
 1198 0068 1A60     	 str r2,[r3]
 434:../cleanflight/src/main/drivers/timer.c ****         for (int i = 0; i < CC_CHANNELS_PER_TIMER; i++)
 1199              	 .loc 4 434 0 discriminator 2
 1200 006a 0023     	 movs r3,#0
 1201 006c FB76     	 strb r3,[r7,#27]
 1202              	.L48:
 434:../cleanflight/src/main/drivers/timer.c ****         for (int i = 0; i < CC_CHANNELS_PER_TIMER; i++)
 1203              	 .loc 4 434 0 is_stmt 0 discriminator 1
 1204 006e FB7E     	 ldrb r3,[r7,#27]
 1205 0070 002B     	 cmp r3,#0
 1206 0072 D9D1     	 bne .L52
 434:../cleanflight/src/main/drivers/timer.c ****         for (int i = 0; i < CC_CHANNELS_PER_TIMER; i++)
 1207              	 .loc 4 434 0 discriminator 3
 1208 0074 07F10F03 	 add r3,r7,#15
 1209 0078 1846     	 mov r0,r3
 1210 007a FFF7FEFF 	 bl __basepriRestoreMem
 1211              	.LBE17:
 441:../cleanflight/src/main/drivers/timer.c ****     }
 442:../cleanflight/src/main/drivers/timer.c ****     // enable or disable IRQ
 443:../cleanflight/src/main/drivers/timer.c **** #ifdef XMC4700_F100x2048
 444:../cleanflight/src/main/drivers/timer.c **** #else
 445:../cleanflight/src/main/drivers/timer.c ****     TIM_ITConfig(tim, TIM_IT_Update, cfg->overflowCallbackActive ? ENABLE : DISABLE);
 446:../cleanflight/src/main/drivers/timer.c **** #endif
 447:../cleanflight/src/main/drivers/timer.c **** }
 1212              	 .loc 4 447 0 is_stmt 1 discriminator 3
 1213 007e 2037     	 adds r7,r7,#32
 1214              	.LCFI99:
 1215              	 .cfi_def_cfa_offset 8
 1216 0080 BD46     	 mov sp,r7
 1217              	.LCFI100:
 1218              	 .cfi_def_cfa_register 13
 1219              	 
 1220 0082 80BD     	 pop {r7,pc}
 1221              	 .cfi_endproc
 1222              	.LFE539:
 1224              	 .section .text.timerChConfigCallbacks,"ax",%progbits
 1225              	 .align 2
 1226              	 .global timerChConfigCallbacks
 1227              	 .thumb
 1228              	 .thumb_func
 1230              	timerChConfigCallbacks:
 1231              	.LFB540:
 448:../cleanflight/src/main/drivers/timer.c **** 
 449:../cleanflight/src/main/drivers/timer.c **** // config edge and overflow callback for channel. Try to avoid overflowCallback, it is a bit expens
 450:../cleanflight/src/main/drivers/timer.c **** void timerChConfigCallbacks(const timerHardware_t *timHw, timerCCHandlerRec_t *edgeCallback, timerO
 451:../cleanflight/src/main/drivers/timer.c **** {
 1232              	 .loc 4 451 0
 1233              	 .cfi_startproc
 1234              	 
 1235              	 
 1236 0000 80B5     	 push {r7,lr}
 1237              	.LCFI101:
 1238              	 .cfi_def_cfa_offset 8
 1239              	 .cfi_offset 7,-8
 1240              	 .cfi_offset 14,-4
 1241 0002 86B0     	 sub sp,sp,#24
 1242              	.LCFI102:
 1243              	 .cfi_def_cfa_offset 32
 1244 0004 00AF     	 add r7,sp,#0
 1245              	.LCFI103:
 1246              	 .cfi_def_cfa_register 7
 1247 0006 F860     	 str r0,[r7,#12]
 1248 0008 B960     	 str r1,[r7,#8]
 1249 000a 7A60     	 str r2,[r7,#4]
 452:../cleanflight/src/main/drivers/timer.c ****     uint8_t timerIndex = lookupTimerIndex(timHw->tim);
 1250              	 .loc 4 452 0
 1251 000c FB68     	 ldr r3,[r7,#12]
 1252 000e 1B68     	 ldr r3,[r3]
 1253 0010 1846     	 mov r0,r3
 1254 0012 FFF7FEFF 	 bl lookupTimerIndex
 1255 0016 0346     	 mov r3,r0
 1256 0018 FB75     	 strb r3,[r7,#23]
 453:../cleanflight/src/main/drivers/timer.c ****     if (timerIndex >= USED_TIMER_COUNT) {
 1257              	 .loc 4 453 0
 1258 001a FB7D     	 ldrb r3,[r7,#23]
 1259 001c 002B     	 cmp r3,#0
 1260 001e 00D0     	 beq .L54
 454:../cleanflight/src/main/drivers/timer.c ****         return;
 1261              	 .loc 4 454 0
 1262 0020 2BE0     	 b .L53
 1263              	.L54:
 455:../cleanflight/src/main/drivers/timer.c ****     }
 456:../cleanflight/src/main/drivers/timer.c ****     uint8_t channelIndex = lookupChannelIndex(timHw->channel);
 1264              	 .loc 4 456 0
 1265 0022 FB68     	 ldr r3,[r7,#12]
 1266 0024 5B79     	 ldrb r3,[r3,#5]
 1267 0026 9BB2     	 uxth r3,r3
 1268 0028 1846     	 mov r0,r3
 1269 002a FFF7FEFF 	 bl lookupChannelIndex
 1270 002e 0346     	 mov r3,r0
 1271 0030 BB75     	 strb r3,[r7,#22]
 457:../cleanflight/src/main/drivers/timer.c **** #ifndef XMC4700_F100x2048
 458:../cleanflight/src/main/drivers/timer.c ****     if (edgeCallback == NULL)   // disable irq before changing callback to NULL
 459:../cleanflight/src/main/drivers/timer.c ****         TIM_ITConfig(timHw->tim, TIM_IT_CCx(timHw->channel), DISABLE);
 460:../cleanflight/src/main/drivers/timer.c **** #endif
 461:../cleanflight/src/main/drivers/timer.c ****     // setup callback info
 462:../cleanflight/src/main/drivers/timer.c ****     timerConfig[timerIndex].edgeCallback[channelIndex] = edgeCallback;
 1272              	 .loc 4 462 0
 1273 0032 FA7D     	 ldrb r2,[r7,#23]
 1274 0034 B97D     	 ldrb r1,[r7,#22]
 1275 0036 1248     	 ldr r0,.L56
 1276 0038 1346     	 mov r3,r2
 1277 003a 9B00     	 lsls r3,r3,#2
 1278 003c 1344     	 add r3,r3,r2
 1279 003e 5B00     	 lsls r3,r3,#1
 1280 0040 0B44     	 add r3,r3,r1
 1281 0042 BA68     	 ldr r2,[r7,#8]
 1282 0044 40F82320 	 str r2,[r0,r3,lsl#2]
 463:../cleanflight/src/main/drivers/timer.c ****     timerConfig[timerIndex].overflowCallback[channelIndex] = overflowCallback;
 1283              	 .loc 4 463 0
 1284 0048 FA7D     	 ldrb r2,[r7,#23]
 1285 004a B97D     	 ldrb r1,[r7,#22]
 1286 004c 0C48     	 ldr r0,.L56
 1287 004e 1346     	 mov r3,r2
 1288 0050 9B00     	 lsls r3,r3,#2
 1289 0052 1344     	 add r3,r3,r2
 1290 0054 5B00     	 lsls r3,r3,#1
 1291 0056 0B44     	 add r3,r3,r1
 1292 0058 0433     	 adds r3,r3,#4
 1293 005a 7A68     	 ldr r2,[r7,#4]
 1294 005c 40F82320 	 str r2,[r0,r3,lsl#2]
 464:../cleanflight/src/main/drivers/timer.c ****     // enable channel IRQ
 465:../cleanflight/src/main/drivers/timer.c **** #ifndef XMC4700_F100x2048
 466:../cleanflight/src/main/drivers/timer.c ****     if (edgeCallback)
 467:../cleanflight/src/main/drivers/timer.c ****         TIM_ITConfig(timHw->tim, TIM_IT_CCx(timHw->channel), ENABLE);
 468:../cleanflight/src/main/drivers/timer.c **** #endif
 469:../cleanflight/src/main/drivers/timer.c **** 
 470:../cleanflight/src/main/drivers/timer.c ****     timerChConfig_UpdateOverflow(&timerConfig[timerIndex], timHw->tim);
 1295              	 .loc 4 470 0
 1296 0060 FA7D     	 ldrb r2,[r7,#23]
 1297 0062 1346     	 mov r3,r2
 1298 0064 9B00     	 lsls r3,r3,#2
 1299 0066 1344     	 add r3,r3,r2
 1300 0068 DB00     	 lsls r3,r3,#3
 1301 006a 054A     	 ldr r2,.L56
 1302 006c 1A44     	 add r2,r2,r3
 1303 006e FB68     	 ldr r3,[r7,#12]
 1304 0070 1B68     	 ldr r3,[r3]
 1305 0072 1046     	 mov r0,r2
 1306 0074 1946     	 mov r1,r3
 1307 0076 FFF7FEFF 	 bl timerChConfig_UpdateOverflow
 1308              	.L53:
 471:../cleanflight/src/main/drivers/timer.c **** }
 1309              	 .loc 4 471 0
 1310 007a 1837     	 adds r7,r7,#24
 1311              	.LCFI104:
 1312              	 .cfi_def_cfa_offset 8
 1313 007c BD46     	 mov sp,r7
 1314              	.LCFI105:
 1315              	 .cfi_def_cfa_register 13
 1316              	 
 1317 007e 80BD     	 pop {r7,pc}
 1318              	.L57:
 1319              	 .align 2
 1320              	.L56:
 1321 0080 00000000 	 .word timerConfig
 1322              	 .cfi_endproc
 1323              	.LFE540:
 1325              	 .section .text.timerChCCR,"ax",%progbits
 1326              	 .align 2
 1327              	 .global timerChCCR
 1328              	 .thumb
 1329              	 .thumb_func
 1331              	timerChCCR:
 1332              	.LFB541:
 472:../cleanflight/src/main/drivers/timer.c **** 
 473:../cleanflight/src/main/drivers/timer.c **** #ifndef XMC4700_F100x2048
 474:../cleanflight/src/main/drivers/timer.c **** 
 475:../cleanflight/src/main/drivers/timer.c **** // configure callbacks for pair of channels (1+2 or 3+4).
 476:../cleanflight/src/main/drivers/timer.c **** // Hi(2,4) and Lo(1,3) callbacks are specified, it is not important which timHw channel is used.
 477:../cleanflight/src/main/drivers/timer.c **** // This is intended for dual capture mode (each channel handles one transition)
 478:../cleanflight/src/main/drivers/timer.c **** void timerChConfigCallbacksDual(const timerHardware_t *timHw, timerCCHandlerRec_t *edgeCallbackLo, 
 479:../cleanflight/src/main/drivers/timer.c **** {
 480:../cleanflight/src/main/drivers/timer.c ****     uint8_t timerIndex = lookupTimerIndex(timHw->tim);
 481:../cleanflight/src/main/drivers/timer.c ****     if (timerIndex >= USED_TIMER_COUNT) {
 482:../cleanflight/src/main/drivers/timer.c ****         return;
 483:../cleanflight/src/main/drivers/timer.c ****     }
 484:../cleanflight/src/main/drivers/timer.c ****     uint16_t chLo = timHw->channel & ~TIM_Channel_2;   // lower channel
 485:../cleanflight/src/main/drivers/timer.c ****     uint16_t chHi = timHw->channel | TIM_Channel_2;    // upper channel
 486:../cleanflight/src/main/drivers/timer.c ****     uint8_t channelIndex = lookupChannelIndex(chLo);   // get index of lower channel
 487:../cleanflight/src/main/drivers/timer.c **** 
 488:../cleanflight/src/main/drivers/timer.c ****     if (edgeCallbackLo == NULL)   // disable irq before changing setting callback to NULL
 489:../cleanflight/src/main/drivers/timer.c ****         TIM_ITConfig(timHw->tim, TIM_IT_CCx(chLo), DISABLE);
 490:../cleanflight/src/main/drivers/timer.c ****     if (edgeCallbackHi == NULL)   // disable irq before changing setting callback to NULL
 491:../cleanflight/src/main/drivers/timer.c ****         TIM_ITConfig(timHw->tim, TIM_IT_CCx(chHi), DISABLE);
 492:../cleanflight/src/main/drivers/timer.c **** 
 493:../cleanflight/src/main/drivers/timer.c ****     // setup callback info
 494:../cleanflight/src/main/drivers/timer.c ****     timerConfig[timerIndex].edgeCallback[channelIndex] = edgeCallbackLo;
 495:../cleanflight/src/main/drivers/timer.c ****     timerConfig[timerIndex].edgeCallback[channelIndex + 1] = edgeCallbackHi;
 496:../cleanflight/src/main/drivers/timer.c ****     timerConfig[timerIndex].overflowCallback[channelIndex] = overflowCallback;
 497:../cleanflight/src/main/drivers/timer.c ****     timerConfig[timerIndex].overflowCallback[channelIndex + 1] = NULL;
 498:../cleanflight/src/main/drivers/timer.c **** 
 499:../cleanflight/src/main/drivers/timer.c ****     // enable channel IRQs
 500:../cleanflight/src/main/drivers/timer.c ****     if (edgeCallbackLo) {
 501:../cleanflight/src/main/drivers/timer.c ****         TIM_ClearFlag(timHw->tim, TIM_IT_CCx(chLo));
 502:../cleanflight/src/main/drivers/timer.c ****         TIM_ITConfig(timHw->tim, TIM_IT_CCx(chLo), ENABLE);
 503:../cleanflight/src/main/drivers/timer.c ****     }
 504:../cleanflight/src/main/drivers/timer.c ****     if (edgeCallbackHi) {
 505:../cleanflight/src/main/drivers/timer.c ****         TIM_ClearFlag(timHw->tim, TIM_IT_CCx(chHi));
 506:../cleanflight/src/main/drivers/timer.c ****         TIM_ITConfig(timHw->tim, TIM_IT_CCx(chHi), ENABLE);
 507:../cleanflight/src/main/drivers/timer.c ****     }
 508:../cleanflight/src/main/drivers/timer.c **** 
 509:../cleanflight/src/main/drivers/timer.c ****     timerChConfig_UpdateOverflow(&timerConfig[timerIndex], timHw->tim);
 510:../cleanflight/src/main/drivers/timer.c **** }
 511:../cleanflight/src/main/drivers/timer.c **** 
 512:../cleanflight/src/main/drivers/timer.c **** // enable/disable IRQ for low channel in dual configuration
 513:../cleanflight/src/main/drivers/timer.c **** void timerChITConfigDualLo(const timerHardware_t *timHw, FunctionalState newState) {
 514:../cleanflight/src/main/drivers/timer.c ****     TIM_ITConfig(timHw->tim, TIM_IT_CCx(timHw->channel&~TIM_Channel_2), newState);
 515:../cleanflight/src/main/drivers/timer.c **** }
 516:../cleanflight/src/main/drivers/timer.c **** 
 517:../cleanflight/src/main/drivers/timer.c **** // enable or disable IRQ
 518:../cleanflight/src/main/drivers/timer.c **** void timerChITConfig(const timerHardware_t *timHw, FunctionalState newState)
 519:../cleanflight/src/main/drivers/timer.c **** {
 520:../cleanflight/src/main/drivers/timer.c ****     TIM_ITConfig(timHw->tim, TIM_IT_CCx(timHw->channel), newState);
 521:../cleanflight/src/main/drivers/timer.c **** }
 522:../cleanflight/src/main/drivers/timer.c **** 
 523:../cleanflight/src/main/drivers/timer.c **** // clear Compare/Capture flag for channel
 524:../cleanflight/src/main/drivers/timer.c **** void timerChClearCCFlag(const timerHardware_t *timHw)
 525:../cleanflight/src/main/drivers/timer.c **** {
 526:../cleanflight/src/main/drivers/timer.c ****     TIM_ClearFlag(timHw->tim, TIM_IT_CCx(timHw->channel));
 527:../cleanflight/src/main/drivers/timer.c **** }
 528:../cleanflight/src/main/drivers/timer.c **** 
 529:../cleanflight/src/main/drivers/timer.c **** // configure timer channel GPIO mode
 530:../cleanflight/src/main/drivers/timer.c **** void timerChConfigGPIO(const timerHardware_t* timHw, ioConfig_t mode)
 531:../cleanflight/src/main/drivers/timer.c **** {
 532:../cleanflight/src/main/drivers/timer.c ****     IOInit(IOGetByTag(timHw->tag), OWNER_TIMER, 0);
 533:../cleanflight/src/main/drivers/timer.c ****     IOConfigGPIO(IOGetByTag(timHw->tag), mode);
 534:../cleanflight/src/main/drivers/timer.c **** }
 535:../cleanflight/src/main/drivers/timer.c **** 
 536:../cleanflight/src/main/drivers/timer.c **** // calculate input filter constant
 537:../cleanflight/src/main/drivers/timer.c **** // TODO - we should probably setup DTS to higher value to allow reasonable input filtering
 538:../cleanflight/src/main/drivers/timer.c **** //   - notice that prescaler[0] does use DTS for sampling - the sequence won't be monotonous anymor
 539:../cleanflight/src/main/drivers/timer.c **** static unsigned getFilter(unsigned ticks)
 540:../cleanflight/src/main/drivers/timer.c **** {
 541:../cleanflight/src/main/drivers/timer.c ****     static const unsigned ftab[16] = {
 542:../cleanflight/src/main/drivers/timer.c ****         1*1,                 // fDTS !
 543:../cleanflight/src/main/drivers/timer.c ****         1*2, 1*4, 1*8,       // fCK_INT
 544:../cleanflight/src/main/drivers/timer.c ****         2*6, 2*8,            // fDTS/2
 545:../cleanflight/src/main/drivers/timer.c ****         4*6, 4*8,
 546:../cleanflight/src/main/drivers/timer.c ****         8*6, 8*8,
 547:../cleanflight/src/main/drivers/timer.c ****         16*5, 16*6, 16*8,
 548:../cleanflight/src/main/drivers/timer.c ****         32*5, 32*6, 32*8
 549:../cleanflight/src/main/drivers/timer.c ****     };
 550:../cleanflight/src/main/drivers/timer.c ****     for (unsigned i = 1; i < ARRAYLEN(ftab); i++)
 551:../cleanflight/src/main/drivers/timer.c ****         if (ftab[i] > ticks)
 552:../cleanflight/src/main/drivers/timer.c ****             return i - 1;
 553:../cleanflight/src/main/drivers/timer.c ****     return 0x0f;
 554:../cleanflight/src/main/drivers/timer.c **** }
 555:../cleanflight/src/main/drivers/timer.c **** 
 556:../cleanflight/src/main/drivers/timer.c **** // Configure input captupre
 557:../cleanflight/src/main/drivers/timer.c **** void timerChConfigIC(const timerHardware_t *timHw, bool polarityRising, unsigned inputFilterTicks)
 558:../cleanflight/src/main/drivers/timer.c **** {
 559:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitTypeDef TIM_ICInitStructure;
 560:../cleanflight/src/main/drivers/timer.c **** 
 561:../cleanflight/src/main/drivers/timer.c ****     TIM_ICStructInit(&TIM_ICInitStructure);
 562:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_Channel = timHw->channel;
 563:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICPolarity = polarityRising ? TIM_ICPolarity_Rising : TIM_ICPolarity_Fa
 564:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 565:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
 566:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICFilter = getFilter(inputFilterTicks);
 567:../cleanflight/src/main/drivers/timer.c **** 
 568:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInit(timHw->tim, &TIM_ICInitStructure);
 569:../cleanflight/src/main/drivers/timer.c **** }
 570:../cleanflight/src/main/drivers/timer.c **** 
 571:../cleanflight/src/main/drivers/timer.c **** // configure dual channel input channel for capture
 572:../cleanflight/src/main/drivers/timer.c **** // polarity is for Low channel (capture order is always Lo - Hi)
 573:../cleanflight/src/main/drivers/timer.c **** void timerChConfigICDual(const timerHardware_t *timHw, bool polarityRising, unsigned inputFilterTic
 574:../cleanflight/src/main/drivers/timer.c **** {
 575:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitTypeDef TIM_ICInitStructure;
 576:../cleanflight/src/main/drivers/timer.c ****     bool directRising = (timHw->channel & TIM_Channel_2) ? !polarityRising : polarityRising;
 577:../cleanflight/src/main/drivers/timer.c ****     // configure direct channel
 578:../cleanflight/src/main/drivers/timer.c ****     TIM_ICStructInit(&TIM_ICInitStructure);
 579:../cleanflight/src/main/drivers/timer.c **** 
 580:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_Channel = timHw->channel;
 581:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICPolarity = directRising ? TIM_ICPolarity_Rising : TIM_ICPolarity_Fall
 582:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
 583:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
 584:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICFilter = getFilter(inputFilterTicks);
 585:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInit(timHw->tim, &TIM_ICInitStructure);
 586:../cleanflight/src/main/drivers/timer.c ****     // configure indirect channel
 587:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_Channel = timHw->channel ^ TIM_Channel_2;   // get opposite channel no
 588:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICPolarity = directRising ? TIM_ICPolarity_Falling : TIM_ICPolarity_Ris
 589:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_IndirectTI;
 590:../cleanflight/src/main/drivers/timer.c ****     TIM_ICInit(timHw->tim, &TIM_ICInitStructure);
 591:../cleanflight/src/main/drivers/timer.c **** }
 592:../cleanflight/src/main/drivers/timer.c **** 
 593:../cleanflight/src/main/drivers/timer.c **** void timerChICPolarity(const timerHardware_t *timHw, bool polarityRising)
 594:../cleanflight/src/main/drivers/timer.c **** {
 595:../cleanflight/src/main/drivers/timer.c ****     timCCER_t tmpccer = timHw->tim->CCER;
 596:../cleanflight/src/main/drivers/timer.c ****     tmpccer &= ~(TIM_CCER_CC1P << timHw->channel);
 597:../cleanflight/src/main/drivers/timer.c ****     tmpccer |= polarityRising ? (TIM_ICPolarity_Rising << timHw->channel) : (TIM_ICPolarity_Falling
 598:../cleanflight/src/main/drivers/timer.c ****     timHw->tim->CCER = tmpccer;
 599:../cleanflight/src/main/drivers/timer.c **** }
 600:../cleanflight/src/main/drivers/timer.c **** 
 601:../cleanflight/src/main/drivers/timer.c **** volatile timCCR_t* timerChCCRHi(const timerHardware_t *timHw)
 602:../cleanflight/src/main/drivers/timer.c **** {
 603:../cleanflight/src/main/drivers/timer.c ****     return (volatile timCCR_t*)((volatile char*)&timHw->tim->CCR1 + (timHw->channel | TIM_Channel_2
 604:../cleanflight/src/main/drivers/timer.c **** }
 605:../cleanflight/src/main/drivers/timer.c **** 
 606:../cleanflight/src/main/drivers/timer.c **** volatile timCCR_t* timerChCCRLo(const timerHardware_t *timHw)
 607:../cleanflight/src/main/drivers/timer.c **** {
 608:../cleanflight/src/main/drivers/timer.c ****     return (volatile timCCR_t*)((volatile char*)&timHw->tim->CCR1 + (timHw->channel & ~TIM_Channel_
 609:../cleanflight/src/main/drivers/timer.c **** }
 610:../cleanflight/src/main/drivers/timer.c **** 
 611:../cleanflight/src/main/drivers/timer.c **** #endif
 612:../cleanflight/src/main/drivers/timer.c **** 
 613:../cleanflight/src/main/drivers/timer.c **** volatile timCCR_t* timerChCCR(const timerHardware_t *timHw)
 614:../cleanflight/src/main/drivers/timer.c **** {
 1333              	 .loc 4 614 0
 1334              	 .cfi_startproc
 1335              	 
 1336              	 
 1337              	 
 1338 0000 80B4     	 push {r7}
 1339              	.LCFI106:
 1340              	 .cfi_def_cfa_offset 4
 1341              	 .cfi_offset 7,-4
 1342 0002 83B0     	 sub sp,sp,#12
 1343              	.LCFI107:
 1344              	 .cfi_def_cfa_offset 16
 1345 0004 00AF     	 add r7,sp,#0
 1346              	.LCFI108:
 1347              	 .cfi_def_cfa_register 7
 1348 0006 7860     	 str r0,[r7,#4]
 615:../cleanflight/src/main/drivers/timer.c **** #ifdef XMC4700_F100x2048
 616:../cleanflight/src/main/drivers/timer.c **** 	return (volatile timCCR_t*)((volatile char*)&timHw->tim->CRS);
 1349              	 .loc 4 616 0
 1350 0008 7B68     	 ldr r3,[r7,#4]
 1351 000a 1B68     	 ldr r3,[r3]
 1352 000c 3C33     	 adds r3,r3,#60
 617:../cleanflight/src/main/drivers/timer.c **** #else
 618:../cleanflight/src/main/drivers/timer.c ****     return (volatile timCCR_t*)((volatile char*)&timHw->tim->CCR1 + timHw->channel);
 619:../cleanflight/src/main/drivers/timer.c **** #endif
 620:../cleanflight/src/main/drivers/timer.c **** }
 1353              	 .loc 4 620 0
 1354 000e 1846     	 mov r0,r3
 1355 0010 0C37     	 adds r7,r7,#12
 1356              	.LCFI109:
 1357              	 .cfi_def_cfa_offset 4
 1358 0012 BD46     	 mov sp,r7
 1359              	.LCFI110:
 1360              	 .cfi_def_cfa_register 13
 1361              	 
 1362 0014 5DF8047B 	 ldr r7,[sp],#4
 1363              	.LCFI111:
 1364              	 .cfi_restore 7
 1365              	 .cfi_def_cfa_offset 0
 1366 0018 7047     	 bx lr
 1367              	 .cfi_endproc
 1368              	.LFE541:
 1370 001a 00BF     	 .section .text.timerInit,"ax",%progbits
 1371              	 .align 2
 1372              	 .global timerInit
 1373              	 .thumb
 1374              	 .thumb_func
 1376              	timerInit:
 1377              	.LFB542:
 621:../cleanflight/src/main/drivers/timer.c **** 
 622:../cleanflight/src/main/drivers/timer.c **** #ifndef XMC4700_F100x2048
 623:../cleanflight/src/main/drivers/timer.c **** 
 624:../cleanflight/src/main/drivers/timer.c **** void timerChConfigOC(const timerHardware_t* timHw, bool outEnable, bool stateHigh)
 625:../cleanflight/src/main/drivers/timer.c **** {
 626:../cleanflight/src/main/drivers/timer.c ****     TIM_OCInitTypeDef  TIM_OCInitStructure;
 627:../cleanflight/src/main/drivers/timer.c **** 
 628:../cleanflight/src/main/drivers/timer.c ****     TIM_OCStructInit(&TIM_OCInitStructure);
 629:../cleanflight/src/main/drivers/timer.c ****     if (outEnable) {
 630:../cleanflight/src/main/drivers/timer.c ****         TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Inactive;
 631:../cleanflight/src/main/drivers/timer.c ****         TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;
 632:../cleanflight/src/main/drivers/timer.c ****         if (timHw->output & TIMER_OUTPUT_INVERTED) {
 633:../cleanflight/src/main/drivers/timer.c ****             stateHigh = !stateHigh;
 634:../cleanflight/src/main/drivers/timer.c ****         }
 635:../cleanflight/src/main/drivers/timer.c ****         TIM_OCInitStructure.TIM_OCPolarity = stateHigh ? TIM_OCPolarity_High : TIM_OCPolarity_Low;
 636:../cleanflight/src/main/drivers/timer.c ****     } else {
 637:../cleanflight/src/main/drivers/timer.c ****         TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_Timing;
 638:../cleanflight/src/main/drivers/timer.c ****     }
 639:../cleanflight/src/main/drivers/timer.c **** 
 640:../cleanflight/src/main/drivers/timer.c ****     switch (timHw->channel) {
 641:../cleanflight/src/main/drivers/timer.c ****     case TIM_Channel_1:
 642:../cleanflight/src/main/drivers/timer.c ****         TIM_OC1Init(timHw->tim, &TIM_OCInitStructure);
 643:../cleanflight/src/main/drivers/timer.c ****         TIM_OC1PreloadConfig(timHw->tim, TIM_OCPreload_Disable);
 644:../cleanflight/src/main/drivers/timer.c ****         break;
 645:../cleanflight/src/main/drivers/timer.c ****     case TIM_Channel_2:
 646:../cleanflight/src/main/drivers/timer.c ****         TIM_OC2Init(timHw->tim, &TIM_OCInitStructure);
 647:../cleanflight/src/main/drivers/timer.c ****         TIM_OC2PreloadConfig(timHw->tim, TIM_OCPreload_Disable);
 648:../cleanflight/src/main/drivers/timer.c ****         break;
 649:../cleanflight/src/main/drivers/timer.c ****     case TIM_Channel_3:
 650:../cleanflight/src/main/drivers/timer.c ****         TIM_OC3Init(timHw->tim, &TIM_OCInitStructure);
 651:../cleanflight/src/main/drivers/timer.c ****         TIM_OC3PreloadConfig(timHw->tim, TIM_OCPreload_Disable);
 652:../cleanflight/src/main/drivers/timer.c ****         break;
 653:../cleanflight/src/main/drivers/timer.c ****     case TIM_Channel_4:
 654:../cleanflight/src/main/drivers/timer.c ****         TIM_OC4Init(timHw->tim, &TIM_OCInitStructure);
 655:../cleanflight/src/main/drivers/timer.c ****         TIM_OC4PreloadConfig(timHw->tim, TIM_OCPreload_Disable);
 656:../cleanflight/src/main/drivers/timer.c ****         break;
 657:../cleanflight/src/main/drivers/timer.c ****     }
 658:../cleanflight/src/main/drivers/timer.c **** }
 659:../cleanflight/src/main/drivers/timer.c **** 
 660:../cleanflight/src/main/drivers/timer.c **** static void timCCxHandler(TIM_TypeDef *tim, timerConfig_t *timerConfig)
 661:../cleanflight/src/main/drivers/timer.c **** {
 662:../cleanflight/src/main/drivers/timer.c ****     uint16_t capture;
 663:../cleanflight/src/main/drivers/timer.c ****     unsigned tim_status;
 664:../cleanflight/src/main/drivers/timer.c ****     tim_status = tim->SR & tim->DIER;
 665:../cleanflight/src/main/drivers/timer.c **** #if 1
 666:../cleanflight/src/main/drivers/timer.c ****     while (tim_status) {
 667:../cleanflight/src/main/drivers/timer.c ****         // flags will be cleared by reading CCR in dual capture, make sure we call handler correctl
 668:../cleanflight/src/main/drivers/timer.c ****         // currrent order is highest bit first. Code should not rely on specific order (it will int
 669:../cleanflight/src/main/drivers/timer.c ****         unsigned bit = __builtin_clz(tim_status);
 670:../cleanflight/src/main/drivers/timer.c ****         unsigned mask = ~(0x80000000 >> bit);
 671:../cleanflight/src/main/drivers/timer.c ****         tim->SR = mask;
 672:../cleanflight/src/main/drivers/timer.c ****         tim_status &= mask;
 673:../cleanflight/src/main/drivers/timer.c ****         switch (bit) {
 674:../cleanflight/src/main/drivers/timer.c ****             case __builtin_clz(TIM_IT_Update): {
 675:../cleanflight/src/main/drivers/timer.c **** 
 676:../cleanflight/src/main/drivers/timer.c ****                 if (timerConfig->forcedOverflowTimerValue != 0) {
 677:../cleanflight/src/main/drivers/timer.c ****                     capture = timerConfig->forcedOverflowTimerValue - 1;
 678:../cleanflight/src/main/drivers/timer.c ****                     timerConfig->forcedOverflowTimerValue = 0;
 679:../cleanflight/src/main/drivers/timer.c ****                 } else {
 680:../cleanflight/src/main/drivers/timer.c ****                     capture = tim->ARR;
 681:../cleanflight/src/main/drivers/timer.c ****                 }
 682:../cleanflight/src/main/drivers/timer.c **** 
 683:../cleanflight/src/main/drivers/timer.c ****                 timerOvrHandlerRec_t *cb = timerConfig->overflowCallbackActive;
 684:../cleanflight/src/main/drivers/timer.c ****                 while (cb) {
 685:../cleanflight/src/main/drivers/timer.c ****                     cb->fn(cb, capture);
 686:../cleanflight/src/main/drivers/timer.c ****                     cb = cb->next;
 687:../cleanflight/src/main/drivers/timer.c ****                 }
 688:../cleanflight/src/main/drivers/timer.c ****                 break;
 689:../cleanflight/src/main/drivers/timer.c ****             }
 690:../cleanflight/src/main/drivers/timer.c ****             case __builtin_clz(TIM_IT_CC1):
 691:../cleanflight/src/main/drivers/timer.c ****                 timerConfig->edgeCallback[0]->fn(timerConfig->edgeCallback[0], tim->CCR1);
 692:../cleanflight/src/main/drivers/timer.c ****                 break;
 693:../cleanflight/src/main/drivers/timer.c ****             case __builtin_clz(TIM_IT_CC2):
 694:../cleanflight/src/main/drivers/timer.c ****                 timerConfig->edgeCallback[1]->fn(timerConfig->edgeCallback[1], tim->CCR2);
 695:../cleanflight/src/main/drivers/timer.c ****                 break;
 696:../cleanflight/src/main/drivers/timer.c ****             case __builtin_clz(TIM_IT_CC3):
 697:../cleanflight/src/main/drivers/timer.c ****                 timerConfig->edgeCallback[2]->fn(timerConfig->edgeCallback[2], tim->CCR3);
 698:../cleanflight/src/main/drivers/timer.c ****                 break;
 699:../cleanflight/src/main/drivers/timer.c ****             case __builtin_clz(TIM_IT_CC4):
 700:../cleanflight/src/main/drivers/timer.c ****                 timerConfig->edgeCallback[3]->fn(timerConfig->edgeCallback[3], tim->CCR4);
 701:../cleanflight/src/main/drivers/timer.c ****                 break;
 702:../cleanflight/src/main/drivers/timer.c ****         }
 703:../cleanflight/src/main/drivers/timer.c ****     }
 704:../cleanflight/src/main/drivers/timer.c **** #else
 705:../cleanflight/src/main/drivers/timer.c ****     if (tim_status & (int)TIM_IT_Update) {
 706:../cleanflight/src/main/drivers/timer.c ****         tim->SR = ~TIM_IT_Update;
 707:../cleanflight/src/main/drivers/timer.c ****         capture = tim->ARR;
 708:../cleanflight/src/main/drivers/timer.c ****         timerOvrHandlerRec_t *cb = timerConfig->overflowCallbackActive;
 709:../cleanflight/src/main/drivers/timer.c ****         while (cb) {
 710:../cleanflight/src/main/drivers/timer.c ****             cb->fn(cb, capture);
 711:../cleanflight/src/main/drivers/timer.c ****             cb = cb->next;
 712:../cleanflight/src/main/drivers/timer.c ****         }
 713:../cleanflight/src/main/drivers/timer.c ****     }
 714:../cleanflight/src/main/drivers/timer.c ****     if (tim_status & (int)TIM_IT_CC1) {
 715:../cleanflight/src/main/drivers/timer.c ****         tim->SR = ~TIM_IT_CC1;
 716:../cleanflight/src/main/drivers/timer.c ****         timerConfig->edgeCallback[0]->fn(timerConfig->edgeCallback[0], tim->CCR1);
 717:../cleanflight/src/main/drivers/timer.c ****     }
 718:../cleanflight/src/main/drivers/timer.c ****     if (tim_status & (int)TIM_IT_CC2) {
 719:../cleanflight/src/main/drivers/timer.c ****         tim->SR = ~TIM_IT_CC2;
 720:../cleanflight/src/main/drivers/timer.c ****         timerConfig->edgeCallback[1]->fn(timerConfig->edgeCallback[1], tim->CCR2);
 721:../cleanflight/src/main/drivers/timer.c ****     }
 722:../cleanflight/src/main/drivers/timer.c ****     if (tim_status & (int)TIM_IT_CC3) {
 723:../cleanflight/src/main/drivers/timer.c ****         tim->SR = ~TIM_IT_CC3;
 724:../cleanflight/src/main/drivers/timer.c ****         timerConfig->edgeCallback[2]->fn(timerConfig->edgeCallback[2], tim->CCR3);
 725:../cleanflight/src/main/drivers/timer.c ****     }
 726:../cleanflight/src/main/drivers/timer.c ****     if (tim_status & (int)TIM_IT_CC4) {
 727:../cleanflight/src/main/drivers/timer.c ****         tim->SR = ~TIM_IT_CC4;
 728:../cleanflight/src/main/drivers/timer.c ****         timerConfig->edgeCallback[3]->fn(timerConfig->edgeCallback[3], tim->CCR4);
 729:../cleanflight/src/main/drivers/timer.c ****     }
 730:../cleanflight/src/main/drivers/timer.c **** #endif
 731:../cleanflight/src/main/drivers/timer.c **** }
 732:../cleanflight/src/main/drivers/timer.c **** 
 733:../cleanflight/src/main/drivers/timer.c **** // handler for shared interrupts when both timers need to check status bits
 734:../cleanflight/src/main/drivers/timer.c **** #define _TIM_IRQ_HANDLER2(name, i, j)                                   \
 735:../cleanflight/src/main/drivers/timer.c ****     void name(void)                                                     \
 736:../cleanflight/src/main/drivers/timer.c ****     {                                                                   \
 737:../cleanflight/src/main/drivers/timer.c ****         timCCxHandler(TIM ## i, &timerConfig[TIMER_INDEX(i)]);          \
 738:../cleanflight/src/main/drivers/timer.c ****         timCCxHandler(TIM ## j, &timerConfig[TIMER_INDEX(j)]);          \
 739:../cleanflight/src/main/drivers/timer.c ****     } struct dummy
 740:../cleanflight/src/main/drivers/timer.c **** 
 741:../cleanflight/src/main/drivers/timer.c **** #define _TIM_IRQ_HANDLER(name, i)                                       \
 742:../cleanflight/src/main/drivers/timer.c ****     void name(void)                                                     \
 743:../cleanflight/src/main/drivers/timer.c ****     {                                                                   \
 744:../cleanflight/src/main/drivers/timer.c ****         timCCxHandler(TIM ## i, &timerConfig[TIMER_INDEX(i)]);          \
 745:../cleanflight/src/main/drivers/timer.c ****     } struct dummy
 746:../cleanflight/src/main/drivers/timer.c **** 
 747:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(1)
 748:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM1_CC_IRQHandler, 1);
 749:../cleanflight/src/main/drivers/timer.c **** # if defined(STM32F10X)
 750:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM1_UP_IRQHandler, 1);       // timer can't be shared
 751:../cleanflight/src/main/drivers/timer.c **** # endif
 752:../cleanflight/src/main/drivers/timer.c **** # if defined(STM32F40_41xxx) || defined (STM32F411xE)
 753:../cleanflight/src/main/drivers/timer.c **** #  if USED_TIMERS & TIM_N(10)
 754:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER2(TIM1_UP_TIM10_IRQHandler, 1, 10);  // both timers are in use
 755:../cleanflight/src/main/drivers/timer.c **** #  else
 756:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM1_UP_TIM10_IRQHandler, 1);     // timer10 is not used
 757:../cleanflight/src/main/drivers/timer.c **** #  endif
 758:../cleanflight/src/main/drivers/timer.c **** # endif
 759:../cleanflight/src/main/drivers/timer.c **** # ifdef STM32F303xC
 760:../cleanflight/src/main/drivers/timer.c **** #  if USED_TIMERS & TIM_N(16)
 761:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER2(TIM1_UP_TIM16_IRQHandler, 1, 16);  // both timers are in use
 762:../cleanflight/src/main/drivers/timer.c **** #  else
 763:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM1_UP_TIM16_IRQHandler, 1);       // timer16 is not used
 764:../cleanflight/src/main/drivers/timer.c **** #  endif
 765:../cleanflight/src/main/drivers/timer.c **** # endif
 766:../cleanflight/src/main/drivers/timer.c **** #endif
 767:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(2)
 768:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM2_IRQHandler, 2);
 769:../cleanflight/src/main/drivers/timer.c **** #endif
 770:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(3)
 771:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM3_IRQHandler, 3);
 772:../cleanflight/src/main/drivers/timer.c **** #endif
 773:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(4)
 774:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM4_IRQHandler, 4);
 775:../cleanflight/src/main/drivers/timer.c **** #endif
 776:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(5)
 777:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM5_IRQHandler, 5);
 778:../cleanflight/src/main/drivers/timer.c **** #endif
 779:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(8)
 780:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM8_CC_IRQHandler, 8);
 781:../cleanflight/src/main/drivers/timer.c **** # if defined(STM32F10X_XL)
 782:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM8_UP_TIM13_IRQHandler, 8);
 783:../cleanflight/src/main/drivers/timer.c **** # else  // f10x_hd, f30x
 784:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM8_UP_IRQHandler, 8);
 785:../cleanflight/src/main/drivers/timer.c **** # endif
 786:../cleanflight/src/main/drivers/timer.c **** # if defined(STM32F40_41xxx)
 787:../cleanflight/src/main/drivers/timer.c **** #  if USED_TIMERS & TIM_N(13)
 788:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER2(TIM8_UP_TIM13_IRQHandler, 8, 13);  // both timers are in use
 789:../cleanflight/src/main/drivers/timer.c **** #  else
 790:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM8_UP_TIM13_IRQHandler, 8);     // timer13 is not used
 791:../cleanflight/src/main/drivers/timer.c **** #  endif
 792:../cleanflight/src/main/drivers/timer.c **** # endif
 793:../cleanflight/src/main/drivers/timer.c **** # if defined (STM32F411xE)
 794:../cleanflight/src/main/drivers/timer.c **** # endif
 795:../cleanflight/src/main/drivers/timer.c **** #endif
 796:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(9)
 797:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM1_BRK_TIM9_IRQHandler, 9);
 798:../cleanflight/src/main/drivers/timer.c **** #endif
 799:../cleanflight/src/main/drivers/timer.c **** #  if USED_TIMERS & TIM_N(11)
 800:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM1_TRG_COM_TIM11_IRQHandler, 11);
 801:../cleanflight/src/main/drivers/timer.c **** #  endif
 802:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(12)
 803:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM8_BRK_TIM12_IRQHandler, 12);
 804:../cleanflight/src/main/drivers/timer.c **** #endif
 805:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(14)
 806:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM8_TRG_COM_TIM14_IRQHandler, 14);
 807:../cleanflight/src/main/drivers/timer.c **** #endif
 808:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(15)
 809:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM1_BRK_TIM15_IRQHandler, 15);
 810:../cleanflight/src/main/drivers/timer.c **** #endif
 811:../cleanflight/src/main/drivers/timer.c **** #if defined(STM32F303xC) && ((USED_TIMERS & (TIM_N(1)|TIM_N(16))) == (TIM_N(16)))
 812:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM1_UP_TIM16_IRQHandler, 16);    // only timer16 is used, not timer1
 813:../cleanflight/src/main/drivers/timer.c **** #endif
 814:../cleanflight/src/main/drivers/timer.c **** #if USED_TIMERS & TIM_N(17)
 815:../cleanflight/src/main/drivers/timer.c **** _TIM_IRQ_HANDLER(TIM1_TRG_COM_TIM17_IRQHandler, 17);
 816:../cleanflight/src/main/drivers/timer.c **** #endif
 817:../cleanflight/src/main/drivers/timer.c **** 
 818:../cleanflight/src/main/drivers/timer.c **** #endif
 819:../cleanflight/src/main/drivers/timer.c **** 
 820:../cleanflight/src/main/drivers/timer.c **** void timerInit(void)
 821:../cleanflight/src/main/drivers/timer.c **** {
 1378              	 .loc 4 821 0
 1379              	 .cfi_startproc
 1380              	 
 1381              	 
 1382 0000 80B5     	 push {r7,lr}
 1383              	.LCFI112:
 1384              	 .cfi_def_cfa_offset 8
 1385              	 .cfi_offset 7,-8
 1386              	 .cfi_offset 14,-4
 1387 0002 82B0     	 sub sp,sp,#8
 1388              	.LCFI113:
 1389              	 .cfi_def_cfa_offset 16
 1390 0004 00AF     	 add r7,sp,#0
 1391              	.LCFI114:
 1392              	 .cfi_def_cfa_register 7
 822:../cleanflight/src/main/drivers/timer.c ****     memset(timerConfig, 0, sizeof (timerConfig));
 1393              	 .loc 4 822 0
 1394 0006 1248     	 ldr r0,.L65
 1395 0008 0021     	 movs r1,#0
 1396 000a 2822     	 movs r2,#40
 1397 000c FFF7FEFF 	 bl memset
 1398              	.LBB21:
 823:../cleanflight/src/main/drivers/timer.c **** 
 824:../cleanflight/src/main/drivers/timer.c **** #if defined(PARTIAL_REMAP_TIM3)
 825:../cleanflight/src/main/drivers/timer.c ****     GPIO_PinRemapConfig(GPIO_PartialRemap_TIM3, ENABLE);
 826:../cleanflight/src/main/drivers/timer.c **** #endif
 827:../cleanflight/src/main/drivers/timer.c **** 
 828:../cleanflight/src/main/drivers/timer.c **** #ifndef XMC4700_F100x2048
 829:../cleanflight/src/main/drivers/timer.c ****     /* enable the timer peripherals */
 830:../cleanflight/src/main/drivers/timer.c ****     for (unsigned i = 0; i < USABLE_TIMER_CHANNEL_COUNT; i++) {
 831:../cleanflight/src/main/drivers/timer.c ****         RCC_ClockCmd(timerRCC(timerHardware[i].tim), ENABLE);
 832:../cleanflight/src/main/drivers/timer.c ****     }
 833:../cleanflight/src/main/drivers/timer.c **** #endif
 834:../cleanflight/src/main/drivers/timer.c **** 
 835:../cleanflight/src/main/drivers/timer.c **** #if defined(STM32F3) || defined(STM32F4)
 836:../cleanflight/src/main/drivers/timer.c ****     for (unsigned timerIndex = 0; timerIndex < USABLE_TIMER_CHANNEL_COUNT; timerIndex++) {
 837:../cleanflight/src/main/drivers/timer.c ****         const timerHardware_t *timerHardwarePtr = &timerHardware[timerIndex];
 838:../cleanflight/src/main/drivers/timer.c ****         if (timerHardwarePtr->usageFlags == TIM_USE_NONE) {
 839:../cleanflight/src/main/drivers/timer.c ****             continue;
 840:../cleanflight/src/main/drivers/timer.c ****         }
 841:../cleanflight/src/main/drivers/timer.c ****         // XXX IOConfigGPIOAF in timerInit should eventually go away.
 842:../cleanflight/src/main/drivers/timer.c ****         IOConfigGPIOAF(IOGetByTag(timerHardwarePtr->tag), IOCFG_AF_PP, timerHardwarePtr->alternateF
 843:../cleanflight/src/main/drivers/timer.c ****     }
 844:../cleanflight/src/main/drivers/timer.c **** #endif
 845:../cleanflight/src/main/drivers/timer.c **** 
 846:../cleanflight/src/main/drivers/timer.c ****     // initialize timer channel structures
 847:../cleanflight/src/main/drivers/timer.c ****     for (unsigned i = 0; i < USABLE_TIMER_CHANNEL_COUNT; i++) {
 1399              	 .loc 4 847 0
 1400 0010 0023     	 movs r3,#0
 1401 0012 7B60     	 str r3,[r7,#4]
 1402 0014 07E0     	 b .L61
 1403              	.L62:
 848:../cleanflight/src/main/drivers/timer.c ****         timerChannelInfo[i].type = TYPE_FREE;
 1404              	 .loc 4 848 0 discriminator 3
 1405 0016 0F4A     	 ldr r2,.L65+4
 1406 0018 7B68     	 ldr r3,[r7,#4]
 1407 001a 1344     	 add r3,r3,r2
 1408 001c 0022     	 movs r2,#0
 1409 001e 1A70     	 strb r2,[r3]
 847:../cleanflight/src/main/drivers/timer.c ****         timerChannelInfo[i].type = TYPE_FREE;
 1410              	 .loc 4 847 0 discriminator 3
 1411 0020 7B68     	 ldr r3,[r7,#4]
 1412 0022 0133     	 adds r3,r3,#1
 1413 0024 7B60     	 str r3,[r7,#4]
 1414              	.L61:
 847:../cleanflight/src/main/drivers/timer.c ****         timerChannelInfo[i].type = TYPE_FREE;
 1415              	 .loc 4 847 0 is_stmt 0 discriminator 1
 1416 0026 7B68     	 ldr r3,[r7,#4]
 1417 0028 0C2B     	 cmp r3,#12
 1418 002a F4D9     	 bls .L62
 1419              	.LBE21:
 1420              	.LBB22:
 849:../cleanflight/src/main/drivers/timer.c ****     }
 850:../cleanflight/src/main/drivers/timer.c **** 
 851:../cleanflight/src/main/drivers/timer.c ****     for (unsigned i = 0; i < USED_TIMER_COUNT; i++) {
 1421              	 .loc 4 851 0 is_stmt 1
 1422 002c 0023     	 movs r3,#0
 1423 002e 3B60     	 str r3,[r7]
 1424 0030 07E0     	 b .L63
 1425              	.L64:
 852:../cleanflight/src/main/drivers/timer.c ****         timerInfo[i].priority = ~0;
 1426              	 .loc 4 852 0 discriminator 3
 1427 0032 094A     	 ldr r2,.L65+8
 1428 0034 3B68     	 ldr r3,[r7]
 1429 0036 1344     	 add r3,r3,r2
 1430 0038 FF22     	 movs r2,#255
 1431 003a 1A70     	 strb r2,[r3]
 851:../cleanflight/src/main/drivers/timer.c ****         timerInfo[i].priority = ~0;
 1432              	 .loc 4 851 0 discriminator 3
 1433 003c 3B68     	 ldr r3,[r7]
 1434 003e 0133     	 adds r3,r3,#1
 1435 0040 3B60     	 str r3,[r7]
 1436              	.L63:
 851:../cleanflight/src/main/drivers/timer.c ****         timerInfo[i].priority = ~0;
 1437              	 .loc 4 851 0 is_stmt 0 discriminator 1
 1438 0042 3B68     	 ldr r3,[r7]
 1439 0044 002B     	 cmp r3,#0
 1440 0046 F4D0     	 beq .L64
 1441              	.LBE22:
 853:../cleanflight/src/main/drivers/timer.c ****     }
 854:../cleanflight/src/main/drivers/timer.c **** }
 1442              	 .loc 4 854 0 is_stmt 1
 1443 0048 0837     	 adds r7,r7,#8
 1444              	.LCFI115:
 1445              	 .cfi_def_cfa_offset 8
 1446 004a BD46     	 mov sp,r7
 1447              	.LCFI116:
 1448              	 .cfi_def_cfa_register 13
 1449              	 
 1450 004c 80BD     	 pop {r7,pc}
 1451              	.L66:
 1452 004e 00BF     	 .align 2
 1453              	.L65:
 1454 0050 00000000 	 .word timerConfig
 1455 0054 00000000 	 .word timerChannelInfo
 1456 0058 00000000 	 .word timerInfo
 1457              	 .cfi_endproc
 1458              	.LFE542:
 1460              	 .section .text.timerStart,"ax",%progbits
 1461              	 .align 2
 1462              	 .global timerStart
 1463              	 .thumb
 1464              	 .thumb_func
 1466              	timerStart:
 1467              	.LFB543:
 855:../cleanflight/src/main/drivers/timer.c **** 
 856:../cleanflight/src/main/drivers/timer.c **** // finish configuring timers after allocation phase
 857:../cleanflight/src/main/drivers/timer.c **** // start timers
 858:../cleanflight/src/main/drivers/timer.c **** // TODO - Work in progress - initialization routine must be modified/verified to start correctly wi
 859:../cleanflight/src/main/drivers/timer.c **** void timerStart(void)
 860:../cleanflight/src/main/drivers/timer.c **** {
 1468              	 .loc 4 860 0
 1469              	 .cfi_startproc
 1470              	 
 1471              	 
 1472              	 
 1473 0000 80B4     	 push {r7}
 1474              	.LCFI117:
 1475              	 .cfi_def_cfa_offset 4
 1476              	 .cfi_offset 7,-4
 1477 0002 00AF     	 add r7,sp,#0
 1478              	.LCFI118:
 1479              	 .cfi_def_cfa_register 7
 861:../cleanflight/src/main/drivers/timer.c **** #if 0
 862:../cleanflight/src/main/drivers/timer.c ****     for (unsigned timer = 0; timer < USED_TIMER_COUNT; timer++) {
 863:../cleanflight/src/main/drivers/timer.c ****         int priority = -1;
 864:../cleanflight/src/main/drivers/timer.c ****         int irq = -1;
 865:../cleanflight/src/main/drivers/timer.c ****         for (unsigned hwc = 0; hwc < USABLE_TIMER_CHANNEL_COUNT; hwc++)
 866:../cleanflight/src/main/drivers/timer.c ****             if ((timerChannelInfo[hwc].type != TYPE_FREE) && (timerHardware[hwc].tim == usedTimers[
 867:../cleanflight/src/main/drivers/timer.c ****                 // TODO - move IRQ to timer info
 868:../cleanflight/src/main/drivers/timer.c ****                 irq = timerHardware[hwc].irq;
 869:../cleanflight/src/main/drivers/timer.c ****             }
 870:../cleanflight/src/main/drivers/timer.c ****         // TODO - aggregate required timer paramaters
 871:../cleanflight/src/main/drivers/timer.c ****         configTimeBase(usedTimers[timer], 0, 1);
 872:../cleanflight/src/main/drivers/timer.c ****         TIM_Cmd(usedTimers[timer],  ENABLE);
 873:../cleanflight/src/main/drivers/timer.c ****         if (priority >= 0) {  // maybe none of the channels was configured
 874:../cleanflight/src/main/drivers/timer.c ****             NVIC_InitTypeDef NVIC_InitStructure;
 875:../cleanflight/src/main/drivers/timer.c **** 
 876:../cleanflight/src/main/drivers/timer.c ****             NVIC_InitStructure.NVIC_IRQChannel = irq;
 877:../cleanflight/src/main/drivers/timer.c ****             NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = NVIC_SPLIT_PRIORITY_BASE(priorit
 878:../cleanflight/src/main/drivers/timer.c ****             NVIC_InitStructure.NVIC_IRQChannelSubPriority = NVIC_SPLIT_PRIORITY_SUB(priority);
 879:../cleanflight/src/main/drivers/timer.c ****             NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 880:../cleanflight/src/main/drivers/timer.c ****             NVIC_Init(&NVIC_InitStructure);
 881:../cleanflight/src/main/drivers/timer.c ****         }
 882:../cleanflight/src/main/drivers/timer.c ****     }
 883:../cleanflight/src/main/drivers/timer.c **** #endif
 884:../cleanflight/src/main/drivers/timer.c **** }
 1480              	 .loc 4 884 0
 1481 0004 BD46     	 mov sp,r7
 1482              	.LCFI119:
 1483              	 .cfi_def_cfa_register 13
 1484              	 
 1485 0006 5DF8047B 	 ldr r7,[sp],#4
 1486              	.LCFI120:
 1487              	 .cfi_restore 7
 1488              	 .cfi_def_cfa_offset 0
 1489 000a 7047     	 bx lr
 1490              	 .cfi_endproc
 1491              	.LFE543:
 1493              	 .section .text.timerForceOverflow,"ax",%progbits
 1494              	 .align 2
 1495              	 .global timerForceOverflow
 1496              	 .thumb
 1497              	 .thumb_func
 1499              	timerForceOverflow:
 1500              	.LFB544:
 885:../cleanflight/src/main/drivers/timer.c **** 
 886:../cleanflight/src/main/drivers/timer.c **** /**
 887:../cleanflight/src/main/drivers/timer.c ****  * Force an overflow for a given timer.
 888:../cleanflight/src/main/drivers/timer.c ****  * Saves the current value of the counter in the relevant timerConfig's forcedOverflowTimerValue va
 889:../cleanflight/src/main/drivers/timer.c ****  * @param TIM_Typedef *tim The timer to overflow
 890:../cleanflight/src/main/drivers/timer.c ****  * @return void
 891:../cleanflight/src/main/drivers/timer.c ****  **/
 892:../cleanflight/src/main/drivers/timer.c **** void timerForceOverflow(TIM_TypeDef *tim)
 893:../cleanflight/src/main/drivers/timer.c **** {
 1501              	 .loc 4 893 0
 1502              	 .cfi_startproc
 1503              	 
 1504              	 
 1505 0000 80B5     	 push {r7,lr}
 1506              	.LCFI121:
 1507              	 .cfi_def_cfa_offset 8
 1508              	 .cfi_offset 7,-8
 1509              	 .cfi_offset 14,-4
 1510 0002 82B0     	 sub sp,sp,#8
 1511              	.LCFI122:
 1512              	 .cfi_def_cfa_offset 16
 1513 0004 00AF     	 add r7,sp,#0
 1514              	.LCFI123:
 1515              	 .cfi_def_cfa_register 7
 1516 0006 7860     	 str r0,[r7,#4]
 894:../cleanflight/src/main/drivers/timer.c **** #ifdef XMC4700_F100x2048
 895:../cleanflight/src/main/drivers/timer.c **** 	///TODO: correct implementation for ppm
 896:../cleanflight/src/main/drivers/timer.c **** 	XMC_CCU4_SLICE_ClearTimer(tim);
 1517              	 .loc 4 896 0
 1518 0008 7868     	 ldr r0,[r7,#4]
 1519 000a FFF7FEFF 	 bl XMC_CCU4_SLICE_ClearTimer
 897:../cleanflight/src/main/drivers/timer.c **** #else
 898:../cleanflight/src/main/drivers/timer.c ****     uint8_t timerIndex = lookupTimerIndex((const TIM_TypeDef *)tim);
 899:../cleanflight/src/main/drivers/timer.c **** 
 900:../cleanflight/src/main/drivers/timer.c ****     ATOMIC_BLOCK(NVIC_PRIO_TIMER) {
 901:../cleanflight/src/main/drivers/timer.c ****         // Save the current count so that PPM reading will work on the same timer that was forced t
 902:../cleanflight/src/main/drivers/timer.c ****         timerConfig[timerIndex].forcedOverflowTimerValue = tim->CNT + 1;
 903:../cleanflight/src/main/drivers/timer.c **** 
 904:../cleanflight/src/main/drivers/timer.c ****         // Force an overflow by setting the UG bit
 905:../cleanflight/src/main/drivers/timer.c ****         tim->EGR |= TIM_EGR_UG;
 906:../cleanflight/src/main/drivers/timer.c ****     }
 907:../cleanflight/src/main/drivers/timer.c **** #endif
 908:../cleanflight/src/main/drivers/timer.c **** }
 1520              	 .loc 4 908 0
 1521 000e 0837     	 adds r7,r7,#8
 1522              	.LCFI124:
 1523              	 .cfi_def_cfa_offset 8
 1524 0010 BD46     	 mov sp,r7
 1525              	.LCFI125:
 1526              	 .cfi_def_cfa_register 13
 1527              	 
 1528 0012 80BD     	 pop {r7,pc}
 1529              	 .cfi_endproc
 1530              	.LFE544:
 1532              	 .text
 1533              	.Letext0:
 1534              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1535              	 .file 6 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1536              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 1537              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4000_misc.h"
 1538              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 1539              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 1540              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 1541              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 1542              	 .file 13 "../cleanflight/src/main/drivers/rcc_types.h"
 1543              	 .file 14 "../cleanflight/src/main/drivers/timer.h"
 1544              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 1545              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 timer.c
    {standard input}:20     .text.XMC_CCU4_SLICE_ClearTimer:00000000 $t
    {standard input}:24     .text.XMC_CCU4_SLICE_ClearTimer:00000000 XMC_CCU4_SLICE_ClearTimer
    {standard input}:66     .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:70     .text.XMC_CCU4_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU4_SLICE_SetTimerPeriodMatch
    {standard input}:114    .text.XMC_CCU4_EnableShadowTransfer:00000000 $t
    {standard input}:118    .text.XMC_CCU4_EnableShadowTransfer:00000000 XMC_CCU4_EnableShadowTransfer
    {standard input}:161    .text.__basepriRestoreMem:00000000 $t
    {standard input}:165    .text.__basepriRestoreMem:00000000 __basepriRestoreMem
    {standard input}:216    .text.__basepriSetMemRetVal:00000000 $t
    {standard input}:220    .text.__basepriSetMemRetVal:00000000 __basepriSetMemRetVal
                            *COM*:00000028 timerConfig
                            *COM*:0000000d timerChannelInfo
                            *COM*:00000001 timerInfo
    {standard input}:275    .text.lookupTimerIndex:00000000 $t
    {standard input}:279    .text.lookupTimerIndex:00000000 lookupTimerIndex
    {standard input}:328    .text.lookupTimerIndex:00000024 $d
    {standard input}:337    .rodata.usedTimers:00000000 usedTimers
    {standard input}:334    .rodata.usedTimers:00000000 $d
    {standard input}:344    .rodata.timerNumbers:00000000 timerNumbers
    {standard input}:341    .rodata.timerNumbers:00000000 $d
    {standard input}:347    .text.timerGetTIMNumber:00000000 $t
    {standard input}:352    .text.timerGetTIMNumber:00000000 timerGetTIMNumber
    {standard input}:401    .text.lookupChannelIndex:00000000 $t
    {standard input}:405    .text.lookupChannelIndex:00000000 lookupChannelIndex
    {standard input}:447    .text.timerLookupChannelIndex:00000000 $t
    {standard input}:452    .text.timerLookupChannelIndex:00000000 timerLookupChannelIndex
    {standard input}:490    .text.timerRCC:00000000 $t
    {standard input}:495    .text.timerRCC:00000000 timerRCC
    {standard input}:572    .text.timerRCC:00000050 $d
    {standard input}:577    .text.timerInputIrq:00000000 $t
    {standard input}:582    .text.timerInputIrq:00000000 timerInputIrq
    {standard input}:659    .text.timerInputIrq:00000050 $d
    {standard input}:664    .text.timerNVICConfigure:00000000 $t
    {standard input}:669    .text.timerNVICConfigure:00000000 timerNVICConfigure
    {standard input}:717    .text.configTimeBase:00000000 $t
    {standard input}:722    .text.configTimeBase:00000000 configTimeBase
    {standard input}:822    .text.timerConfigure:00000000 $t
    {standard input}:827    .text.timerConfigure:00000000 timerConfigure
    {standard input}:880    .text.timerChInit:00000000 $t
    {standard input}:885    .text.timerChInit:00000000 timerChInit
    {standard input}:999    .text.timerChInit:00000098 $d
    {standard input}:1008   .text.timerChCCHandlerInit:00000000 $t
    {standard input}:1013   .text.timerChCCHandlerInit:00000000 timerChCCHandlerInit
    {standard input}:1053   .text.timerChOvrHandlerInit:00000000 $t
    {standard input}:1058   .text.timerChOvrHandlerInit:00000000 timerChOvrHandlerInit
    {standard input}:1108   .text.timerChConfig_UpdateOverflow:00000000 $t
    {standard input}:1112   .text.timerChConfig_UpdateOverflow:00000000 timerChConfig_UpdateOverflow
    {standard input}:1225   .text.timerChConfigCallbacks:00000000 $t
    {standard input}:1230   .text.timerChConfigCallbacks:00000000 timerChConfigCallbacks
    {standard input}:1321   .text.timerChConfigCallbacks:00000080 $d
    {standard input}:1326   .text.timerChCCR:00000000 $t
    {standard input}:1331   .text.timerChCCR:00000000 timerChCCR
    {standard input}:1371   .text.timerInit:00000000 $t
    {standard input}:1376   .text.timerInit:00000000 timerInit
    {standard input}:1454   .text.timerInit:00000050 $d
    {standard input}:1461   .text.timerStart:00000000 $t
    {standard input}:1466   .text.timerStart:00000000 timerStart
    {standard input}:1494   .text.timerForceOverflow:00000000 $t
    {standard input}:1499   .text.timerForceOverflow:00000000 timerForceOverflow
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timerDefinitions
NVIC_Init
XMC_CCU4_Init
timerClock
log2f
memset
XMC_CCU4_SLICE_CompareInit
timerHardware
