   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "timer_common.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.timerIndexByTag,"ax",%progbits
  20              	 .align 2
  21              	 .global timerIndexByTag
  22              	 .thumb
  23              	 .thumb_func
  25              	timerIndexByTag:
  26              	.LFB521:
  27              	 .file 1 "../cleanflight/src/main/drivers/timer_common.c"
   1:../cleanflight/src/main/drivers/timer_common.c **** /*
   2:../cleanflight/src/main/drivers/timer_common.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/drivers/timer_common.c ****  *
   4:../cleanflight/src/main/drivers/timer_common.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/drivers/timer_common.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/drivers/timer_common.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/drivers/timer_common.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/drivers/timer_common.c ****  * any later version.
   9:../cleanflight/src/main/drivers/timer_common.c ****  *
  10:../cleanflight/src/main/drivers/timer_common.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/drivers/timer_common.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/drivers/timer_common.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/drivers/timer_common.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/drivers/timer_common.c ****  *
  15:../cleanflight/src/main/drivers/timer_common.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/drivers/timer_common.c ****  * along with this software.
  17:../cleanflight/src/main/drivers/timer_common.c ****  *
  18:../cleanflight/src/main/drivers/timer_common.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/drivers/timer_common.c ****  */
  20:../cleanflight/src/main/drivers/timer_common.c **** 
  21:../cleanflight/src/main/drivers/timer_common.c **** #include "drivers/io.h"
  22:../cleanflight/src/main/drivers/timer_common.c **** #include "timer.h"
  23:../cleanflight/src/main/drivers/timer_common.c **** #ifdef USE_TIMER_MGMT
  24:../cleanflight/src/main/drivers/timer_common.c **** #include "pg/timerio.h"
  25:../cleanflight/src/main/drivers/timer_common.c **** #endif
  26:../cleanflight/src/main/drivers/timer_common.c **** 
  27:../cleanflight/src/main/drivers/timer_common.c **** uint8_t timerIndexByTag(ioTag_t ioTag)
  28:../cleanflight/src/main/drivers/timer_common.c **** {
  28              	 .loc 1 28 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 0346     	 mov r3,r0
  44 0008 FB71     	 strb r3,[r7,#7]
  29:../cleanflight/src/main/drivers/timer_common.c **** #ifdef USE_TIMER_MGMT
  30:../cleanflight/src/main/drivers/timer_common.c ****     for (unsigned i = 0; i < MAX_TIMER_PINMAP_COUNT; i++) {
  31:../cleanflight/src/main/drivers/timer_common.c ****         if (timerIOConfig(i)->ioTag == ioTag) {
  32:../cleanflight/src/main/drivers/timer_common.c ****             return timerIOConfig(i)->index;
  33:../cleanflight/src/main/drivers/timer_common.c ****         }
  34:../cleanflight/src/main/drivers/timer_common.c ****     }
  35:../cleanflight/src/main/drivers/timer_common.c **** #else
  36:../cleanflight/src/main/drivers/timer_common.c ****     UNUSED(ioTag);
  37:../cleanflight/src/main/drivers/timer_common.c **** #endif
  38:../cleanflight/src/main/drivers/timer_common.c ****     return 0;
  45              	 .loc 1 38 0
  46 000a 0023     	 movs r3,#0
  39:../cleanflight/src/main/drivers/timer_common.c **** }
  47              	 .loc 1 39 0
  48 000c 1846     	 mov r0,r3
  49 000e 0C37     	 adds r7,r7,#12
  50              	.LCFI3:
  51              	 .cfi_def_cfa_offset 4
  52 0010 BD46     	 mov sp,r7
  53              	.LCFI4:
  54              	 .cfi_def_cfa_register 13
  55              	 
  56 0012 5DF8047B 	 ldr r7,[sp],#4
  57              	.LCFI5:
  58              	 .cfi_restore 7
  59              	 .cfi_def_cfa_offset 0
  60 0016 7047     	 bx lr
  61              	 .cfi_endproc
  62              	.LFE521:
  64              	 .section .text.timerGetByTag,"ax",%progbits
  65              	 .align 2
  66              	 .global timerGetByTag
  67              	 .thumb
  68              	 .thumb_func
  70              	timerGetByTag:
  71              	.LFB522:
  40:../cleanflight/src/main/drivers/timer_common.c **** 
  41:../cleanflight/src/main/drivers/timer_common.c **** const timerHardware_t *timerGetByTag(ioTag_t ioTag)
  42:../cleanflight/src/main/drivers/timer_common.c **** {
  72              	 .loc 1 42 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76 0000 80B5     	 push {r7,lr}
  77              	.LCFI6:
  78              	 .cfi_def_cfa_offset 8
  79              	 .cfi_offset 7,-8
  80              	 .cfi_offset 14,-4
  81 0002 86B0     	 sub sp,sp,#24
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 32
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 0346     	 mov r3,r0
  88 0008 FB71     	 strb r3,[r7,#7]
  43:../cleanflight/src/main/drivers/timer_common.c ****     if (!ioTag) {
  89              	 .loc 1 43 0
  90 000a FB79     	 ldrb r3,[r7,#7]
  91 000c 002B     	 cmp r3,#0
  92 000e 01D1     	 bne .L4
  44:../cleanflight/src/main/drivers/timer_common.c ****         return NULL;
  93              	 .loc 1 44 0
  94 0010 0023     	 movs r3,#0
  95 0012 2CE0     	 b .L5
  96              	.L4:
  45:../cleanflight/src/main/drivers/timer_common.c ****     }
  46:../cleanflight/src/main/drivers/timer_common.c **** 
  47:../cleanflight/src/main/drivers/timer_common.c ****     uint8_t timerIndex = timerIndexByTag(ioTag);
  97              	 .loc 1 47 0
  98 0014 FB79     	 ldrb r3,[r7,#7]
  99 0016 1846     	 mov r0,r3
 100 0018 FFF7FEFF 	 bl timerIndexByTag
 101 001c 0346     	 mov r3,r0
 102 001e FB73     	 strb r3,[r7,#15]
  48:../cleanflight/src/main/drivers/timer_common.c ****     uint8_t index = 1;
 103              	 .loc 1 48 0
 104 0020 0123     	 movs r3,#1
 105 0022 FB75     	 strb r3,[r7,#23]
 106              	.LBB2:
  49:../cleanflight/src/main/drivers/timer_common.c **** 
  50:../cleanflight/src/main/drivers/timer_common.c ****     for (int i = 0; i < (int)USABLE_TIMER_CHANNEL_COUNT; i++) {
 107              	 .loc 1 50 0
 108 0024 0023     	 movs r3,#0
 109 0026 3B61     	 str r3,[r7,#16]
 110 0028 1DE0     	 b .L6
 111              	.L10:
  51:../cleanflight/src/main/drivers/timer_common.c ****         if (timerHardware[i].tag == ioTag) {
 112              	 .loc 1 51 0
 113 002a 1349     	 ldr r1,.L11
 114 002c 3A69     	 ldr r2,[r7,#16]
 115 002e 1346     	 mov r3,r2
 116 0030 DB00     	 lsls r3,r3,#3
 117 0032 1344     	 add r3,r3,r2
 118 0034 0B44     	 add r3,r3,r1
 119 0036 1B79     	 ldrb r3,[r3,#4]
 120 0038 FA79     	 ldrb r2,[r7,#7]
 121 003a 9A42     	 cmp r2,r3
 122 003c 10D1     	 bne .L7
  52:../cleanflight/src/main/drivers/timer_common.c ****             if (index == timerIndex || timerIndex == 0) {                
 123              	 .loc 1 52 0
 124 003e FA7D     	 ldrb r2,[r7,#23]
 125 0040 FB7B     	 ldrb r3,[r7,#15]
 126 0042 9A42     	 cmp r2,r3
 127 0044 02D0     	 beq .L8
 128              	 .loc 1 52 0 is_stmt 0 discriminator 1
 129 0046 FB7B     	 ldrb r3,[r7,#15]
 130 0048 002B     	 cmp r3,#0
 131 004a 06D1     	 bne .L9
 132              	.L8:
  53:../cleanflight/src/main/drivers/timer_common.c ****                 return &timerHardware[i];
 133              	 .loc 1 53 0 is_stmt 1
 134 004c 3A69     	 ldr r2,[r7,#16]
 135 004e 1346     	 mov r3,r2
 136 0050 DB00     	 lsls r3,r3,#3
 137 0052 1344     	 add r3,r3,r2
 138 0054 084A     	 ldr r2,.L11
 139 0056 1344     	 add r3,r3,r2
 140 0058 09E0     	 b .L5
 141              	.L9:
  54:../cleanflight/src/main/drivers/timer_common.c ****             }
  55:../cleanflight/src/main/drivers/timer_common.c ****             index++;
 142              	 .loc 1 55 0
 143 005a FB7D     	 ldrb r3,[r7,#23]
 144 005c 0133     	 adds r3,r3,#1
 145 005e FB75     	 strb r3,[r7,#23]
 146              	.L7:
  50:../cleanflight/src/main/drivers/timer_common.c ****         if (timerHardware[i].tag == ioTag) {
 147              	 .loc 1 50 0 discriminator 2
 148 0060 3B69     	 ldr r3,[r7,#16]
 149 0062 0133     	 adds r3,r3,#1
 150 0064 3B61     	 str r3,[r7,#16]
 151              	.L6:
  50:../cleanflight/src/main/drivers/timer_common.c ****         if (timerHardware[i].tag == ioTag) {
 152              	 .loc 1 50 0 is_stmt 0 discriminator 1
 153 0066 3B69     	 ldr r3,[r7,#16]
 154 0068 0C2B     	 cmp r3,#12
 155 006a DEDD     	 ble .L10
 156              	.LBE2:
  56:../cleanflight/src/main/drivers/timer_common.c ****         }
  57:../cleanflight/src/main/drivers/timer_common.c ****     }
  58:../cleanflight/src/main/drivers/timer_common.c ****     return NULL;
 157              	 .loc 1 58 0 is_stmt 1
 158 006c 0023     	 movs r3,#0
 159              	.L5:
  59:../cleanflight/src/main/drivers/timer_common.c **** }
 160              	 .loc 1 59 0
 161 006e 1846     	 mov r0,r3
 162 0070 1837     	 adds r7,r7,#24
 163              	.LCFI9:
 164              	 .cfi_def_cfa_offset 8
 165 0072 BD46     	 mov sp,r7
 166              	.LCFI10:
 167              	 .cfi_def_cfa_register 13
 168              	 
 169 0074 80BD     	 pop {r7,pc}
 170              	.L12:
 171 0076 00BF     	 .align 2
 172              	.L11:
 173 0078 00000000 	 .word timerHardware
 174              	 .cfi_endproc
 175              	.LFE522:
 177              	 .section .text.timerioTagGetByUsage,"ax",%progbits
 178              	 .align 2
 179              	 .global timerioTagGetByUsage
 180              	 .thumb
 181              	 .thumb_func
 183              	timerioTagGetByUsage:
 184              	.LFB523:
  60:../cleanflight/src/main/drivers/timer_common.c **** 
  61:../cleanflight/src/main/drivers/timer_common.c **** ioTag_t timerioTagGetByUsage(timerUsageFlag_e usageFlag, uint8_t index)
  62:../cleanflight/src/main/drivers/timer_common.c **** {
 185              	 .loc 1 62 0
 186              	 .cfi_startproc
 187              	 
 188              	 
 189              	 
 190 0000 80B4     	 push {r7}
 191              	.LCFI11:
 192              	 .cfi_def_cfa_offset 4
 193              	 .cfi_offset 7,-4
 194 0002 85B0     	 sub sp,sp,#20
 195              	.LCFI12:
 196              	 .cfi_def_cfa_offset 24
 197 0004 00AF     	 add r7,sp,#0
 198              	.LCFI13:
 199              	 .cfi_def_cfa_register 7
 200 0006 0346     	 mov r3,r0
 201 0008 0A46     	 mov r2,r1
 202 000a FB71     	 strb r3,[r7,#7]
 203 000c 1346     	 mov r3,r2
 204 000e BB71     	 strb r3,[r7,#6]
  63:../cleanflight/src/main/drivers/timer_common.c ****     uint8_t currentIndex = 0;
 205              	 .loc 1 63 0
 206 0010 0023     	 movs r3,#0
 207 0012 FB73     	 strb r3,[r7,#15]
 208              	.LBB3:
  64:../cleanflight/src/main/drivers/timer_common.c ****     for (int i = 0; i < (int)USABLE_TIMER_CHANNEL_COUNT; i++) {
 209              	 .loc 1 64 0
 210 0014 0023     	 movs r3,#0
 211 0016 BB60     	 str r3,[r7,#8]
 212 0018 1EE0     	 b .L14
 213              	.L18:
  65:../cleanflight/src/main/drivers/timer_common.c ****         if ((timerHardware[i].usageFlags & usageFlag) == usageFlag) {
 214              	 .loc 1 65 0
 215 001a 1449     	 ldr r1,.L19
 216 001c BA68     	 ldr r2,[r7,#8]
 217 001e 1346     	 mov r3,r2
 218 0020 DB00     	 lsls r3,r3,#3
 219 0022 1344     	 add r3,r3,r2
 220 0024 0B44     	 add r3,r3,r1
 221 0026 9A79     	 ldrb r2,[r3,#6]
 222 0028 FB79     	 ldrb r3,[r7,#7]
 223 002a 1340     	 ands r3,r3,r2
 224 002c DBB2     	 uxtb r3,r3
 225 002e FA79     	 ldrb r2,[r7,#7]
 226 0030 9A42     	 cmp r2,r3
 227 0032 0ED1     	 bne .L15
  66:../cleanflight/src/main/drivers/timer_common.c ****             if (currentIndex == index) {
 228              	 .loc 1 66 0
 229 0034 FA7B     	 ldrb r2,[r7,#15]
 230 0036 BB79     	 ldrb r3,[r7,#6]
 231 0038 9A42     	 cmp r2,r3
 232 003a 07D1     	 bne .L16
  67:../cleanflight/src/main/drivers/timer_common.c ****                 return timerHardware[i].tag;
 233              	 .loc 1 67 0
 234 003c 0B49     	 ldr r1,.L19
 235 003e BA68     	 ldr r2,[r7,#8]
 236 0040 1346     	 mov r3,r2
 237 0042 DB00     	 lsls r3,r3,#3
 238 0044 1344     	 add r3,r3,r2
 239 0046 0B44     	 add r3,r3,r1
 240 0048 1B79     	 ldrb r3,[r3,#4]
 241 004a 09E0     	 b .L17
 242              	.L16:
  68:../cleanflight/src/main/drivers/timer_common.c ****             }
  69:../cleanflight/src/main/drivers/timer_common.c ****             currentIndex++;
 243              	 .loc 1 69 0
 244 004c FB7B     	 ldrb r3,[r7,#15]
 245 004e 0133     	 adds r3,r3,#1
 246 0050 FB73     	 strb r3,[r7,#15]
 247              	.L15:
  64:../cleanflight/src/main/drivers/timer_common.c ****         if ((timerHardware[i].usageFlags & usageFlag) == usageFlag) {
 248              	 .loc 1 64 0 discriminator 2
 249 0052 BB68     	 ldr r3,[r7,#8]
 250 0054 0133     	 adds r3,r3,#1
 251 0056 BB60     	 str r3,[r7,#8]
 252              	.L14:
  64:../cleanflight/src/main/drivers/timer_common.c ****         if ((timerHardware[i].usageFlags & usageFlag) == usageFlag) {
 253              	 .loc 1 64 0 is_stmt 0 discriminator 1
 254 0058 BB68     	 ldr r3,[r7,#8]
 255 005a 0C2B     	 cmp r3,#12
 256 005c DDDD     	 ble .L18
 257              	.LBE3:
  70:../cleanflight/src/main/drivers/timer_common.c ****         }
  71:../cleanflight/src/main/drivers/timer_common.c ****     }
  72:../cleanflight/src/main/drivers/timer_common.c ****     return IO_TAG_NONE;
 258              	 .loc 1 72 0 is_stmt 1
 259 005e 0023     	 movs r3,#0
 260              	.L17:
  73:../cleanflight/src/main/drivers/timer_common.c **** }
 261              	 .loc 1 73 0
 262 0060 1846     	 mov r0,r3
 263 0062 1437     	 adds r7,r7,#20
 264              	.LCFI14:
 265              	 .cfi_def_cfa_offset 4
 266 0064 BD46     	 mov sp,r7
 267              	.LCFI15:
 268              	 .cfi_def_cfa_register 13
 269              	 
 270 0066 5DF8047B 	 ldr r7,[sp],#4
 271              	.LCFI16:
 272              	 .cfi_restore 7
 273              	 .cfi_def_cfa_offset 0
 274 006a 7047     	 bx lr
 275              	.L20:
 276              	 .align 2
 277              	.L19:
 278 006c 00000000 	 .word timerHardware
 279              	 .cfi_endproc
 280              	.LFE523:
 282              	 .text
 283              	.Letext0:
 284              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 285              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 286              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 287              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 288              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 289              	 .file 7 "../cleanflight/src/main/drivers/timer.h"
 290              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 291              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 timer_common.c
    {standard input}:20     .text.timerIndexByTag:00000000 $t
    {standard input}:25     .text.timerIndexByTag:00000000 timerIndexByTag
    {standard input}:65     .text.timerGetByTag:00000000 $t
    {standard input}:70     .text.timerGetByTag:00000000 timerGetByTag
    {standard input}:173    .text.timerGetByTag:00000078 $d
    {standard input}:178    .text.timerioTagGetByUsage:00000000 $t
    {standard input}:183    .text.timerioTagGetByUsage:00000000 timerioTagGetByUsage
    {standard input}:278    .text.timerioTagGetByUsage:0000006c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timerHardware
