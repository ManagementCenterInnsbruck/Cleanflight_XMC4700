   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "board_info.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.boardConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	boardConfig:
  25              	.LFB524:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/board.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** #define MAX_MANUFACTURER_ID_LENGTH 4
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** #define MAX_BOARD_NAME_LENGTH 20
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** #define SIGNATURE_LENGTH 32
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** // Warning: This configuration is meant to be applied when loading the initial
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** // configuration for a generic board, and stay fixed after this, to enable
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** // identification of the hardware that this is running on.
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** // Do not modify this parameter group directly, use 'fc/board_info.h' instead.
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** typedef struct boardConfig_s {
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****     uint8_t signature[SIGNATURE_LENGTH];
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****     char manufacturerId[MAX_MANUFACTURER_ID_LENGTH + 1];
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****     char boardName[MAX_BOARD_NAME_LENGTH + 1];
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****     uint8_t boardInformationSet;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h ****     uint8_t signatureSet;
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** } boardConfig_t;
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\board.h **** PG_DECLARE(boardConfig_t, boardConfig);
  27              	 .loc 1 42 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 42 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word boardConfig_System
  55              	 .cfi_endproc
  56              	.LFE524:
  58              	 .section .text.boardConfigMutable,"ax",%progbits
  59              	 .align 2
  60              	 .thumb
  61              	 .thumb_func
  63              	boardConfigMutable:
  64              	.LFB525:
  65              	 .loc 1 42 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69              	 
  70 0000 80B4     	 push {r7}
  71              	.LCFI4:
  72              	 .cfi_def_cfa_offset 4
  73              	 .cfi_offset 7,-4
  74 0002 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77              	 .loc 1 42 0
  78 0004 024B     	 ldr r3,.L7
  79 0006 1846     	 mov r0,r3
  80 0008 BD46     	 mov sp,r7
  81              	.LCFI6:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 000a 5DF8047B 	 ldr r7,[sp],#4
  85              	.LCFI7:
  86              	 .cfi_restore 7
  87              	 .cfi_def_cfa_offset 0
  88 000e 7047     	 bx lr
  89              	.L8:
  90              	 .align 2
  91              	.L7:
  92 0010 00000000 	 .word boardConfig_System
  93              	 .cfi_endproc
  94              	.LFE525:
  96              	 .section .bss.boardInformationSet,"aw",%nobits
  99              	boardInformationSet:
 100 0000 00       	 .space 1
 101              	 .section .bss.manufacturerId,"aw",%nobits
 102              	 .align 2
 105              	manufacturerId:
 106 0000 00000000 	 .space 5
 106      00
 107 0005 000000   	 .section .bss.boardName,"aw",%nobits
 108              	 .align 2
 111              	boardName:
 112 0000 00000000 	 .space 21
 112      00000000 
 112      00000000 
 112      00000000 
 112      00000000 
 113 0015 000000   	 .section .bss.signatureSet,"aw",%nobits
 116              	signatureSet:
 117 0000 00       	 .space 1
 118              	 .section .bss.signature,"aw",%nobits
 119              	 .align 2
 122              	signature:
 123 0000 00000000 	 .space 32
 123      00000000 
 123      00000000 
 123      00000000 
 123      00000000 
 124              	 .section .text.initBoardInformation,"ax",%progbits
 125              	 .align 2
 126              	 .global initBoardInformation
 127              	 .thumb
 128              	 .thumb_func
 130              	initBoardInformation:
 131              	.LFB526:
 132              	 .file 2 "../cleanflight/src/main/fc/board_info.c"
   1:../cleanflight/src/main/fc/board_info.c **** /*
   2:../cleanflight/src/main/fc/board_info.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/fc/board_info.c ****  *
   4:../cleanflight/src/main/fc/board_info.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/fc/board_info.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/fc/board_info.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/fc/board_info.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/fc/board_info.c ****  * any later version.
   9:../cleanflight/src/main/fc/board_info.c ****  *
  10:../cleanflight/src/main/fc/board_info.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/fc/board_info.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/fc/board_info.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/fc/board_info.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/fc/board_info.c ****  *
  15:../cleanflight/src/main/fc/board_info.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/fc/board_info.c ****  * along with this software.
  17:../cleanflight/src/main/fc/board_info.c ****  *
  18:../cleanflight/src/main/fc/board_info.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/fc/board_info.c ****  */
  20:../cleanflight/src/main/fc/board_info.c **** 
  21:../cleanflight/src/main/fc/board_info.c **** #include <stdbool.h>
  22:../cleanflight/src/main/fc/board_info.c **** #include <string.h>
  23:../cleanflight/src/main/fc/board_info.c **** 
  24:../cleanflight/src/main/fc/board_info.c **** #include "platform.h"
  25:../cleanflight/src/main/fc/board_info.c **** 
  26:../cleanflight/src/main/fc/board_info.c **** #if defined(USE_BOARD_INFO)
  27:../cleanflight/src/main/fc/board_info.c **** #include "pg/board.h"
  28:../cleanflight/src/main/fc/board_info.c **** 
  29:../cleanflight/src/main/fc/board_info.c **** static bool boardInformationSet = false;
  30:../cleanflight/src/main/fc/board_info.c **** static char manufacturerId[MAX_MANUFACTURER_ID_LENGTH + 1];
  31:../cleanflight/src/main/fc/board_info.c **** static char boardName[MAX_BOARD_NAME_LENGTH + 1];
  32:../cleanflight/src/main/fc/board_info.c **** 
  33:../cleanflight/src/main/fc/board_info.c **** static bool signatureSet = false;
  34:../cleanflight/src/main/fc/board_info.c **** static uint8_t signature[SIGNATURE_LENGTH];
  35:../cleanflight/src/main/fc/board_info.c **** 
  36:../cleanflight/src/main/fc/board_info.c **** void initBoardInformation(void)
  37:../cleanflight/src/main/fc/board_info.c **** {
 133              	 .loc 2 37 0
 134              	 .cfi_startproc
 135              	 
 136              	 
 137 0000 B0B5     	 push {r4,r5,r7,lr}
 138              	.LCFI8:
 139              	 .cfi_def_cfa_offset 16
 140              	 .cfi_offset 4,-16
 141              	 .cfi_offset 5,-12
 142              	 .cfi_offset 7,-8
 143              	 .cfi_offset 14,-4
 144 0002 00AF     	 add r7,sp,#0
 145              	.LCFI9:
 146              	 .cfi_def_cfa_register 7
  38:../cleanflight/src/main/fc/board_info.c ****     boardInformationSet = boardConfig()->boardInformationSet;
 147              	 .loc 2 38 0
 148 0004 FFF7FEFF 	 bl boardConfig
 149 0008 0346     	 mov r3,r0
 150 000a 93F83A30 	 ldrb r3,[r3,#58]
 151 000e 002B     	 cmp r3,#0
 152 0010 14BF     	 ite ne
 153 0012 0123     	 movne r3,#1
 154 0014 0023     	 moveq r3,#0
 155 0016 DAB2     	 uxtb r2,r3
 156 0018 1C4B     	 ldr r3,.L12
 157 001a 1A70     	 strb r2,[r3]
  39:../cleanflight/src/main/fc/board_info.c ****     if (boardInformationSet) {
 158              	 .loc 2 39 0
 159 001c 1B4B     	 ldr r3,.L12
 160 001e 1B78     	 ldrb r3,[r3]
 161 0020 002B     	 cmp r3,#0
 162 0022 11D0     	 beq .L10
  40:../cleanflight/src/main/fc/board_info.c ****         strncpy(manufacturerId, boardConfig()->manufacturerId, MAX_MANUFACTURER_ID_LENGTH);
 163              	 .loc 2 40 0
 164 0024 FFF7FEFF 	 bl boardConfig
 165 0028 0346     	 mov r3,r0
 166 002a 2033     	 adds r3,r3,#32
 167 002c 1848     	 ldr r0,.L12+4
 168 002e 1946     	 mov r1,r3
 169 0030 0422     	 movs r2,#4
 170 0032 FFF7FEFF 	 bl strncpy
  41:../cleanflight/src/main/fc/board_info.c ****         strncpy(boardName, boardConfig()->boardName, MAX_BOARD_NAME_LENGTH);
 171              	 .loc 2 41 0
 172 0036 FFF7FEFF 	 bl boardConfig
 173 003a 0346     	 mov r3,r0
 174 003c 2533     	 adds r3,r3,#37
 175 003e 1548     	 ldr r0,.L12+8
 176 0040 1946     	 mov r1,r3
 177 0042 1422     	 movs r2,#20
 178 0044 FFF7FEFF 	 bl strncpy
 179              	.L10:
  42:../cleanflight/src/main/fc/board_info.c ****     }
  43:../cleanflight/src/main/fc/board_info.c **** 
  44:../cleanflight/src/main/fc/board_info.c ****     signatureSet = boardConfig()->signatureSet;
 180              	 .loc 2 44 0
 181 0048 FFF7FEFF 	 bl boardConfig
 182 004c 0346     	 mov r3,r0
 183 004e 93F83B30 	 ldrb r3,[r3,#59]
 184 0052 002B     	 cmp r3,#0
 185 0054 14BF     	 ite ne
 186 0056 0123     	 movne r3,#1
 187 0058 0023     	 moveq r3,#0
 188 005a DAB2     	 uxtb r2,r3
 189 005c 0E4B     	 ldr r3,.L12+12
 190 005e 1A70     	 strb r2,[r3]
  45:../cleanflight/src/main/fc/board_info.c ****     if (signatureSet) {
 191              	 .loc 2 45 0
 192 0060 0D4B     	 ldr r3,.L12+12
 193 0062 1B78     	 ldrb r3,[r3]
 194 0064 002B     	 cmp r3,#0
 195 0066 0FD0     	 beq .L9
  46:../cleanflight/src/main/fc/board_info.c ****         memcpy(signature, boardConfig()->signature, SIGNATURE_LENGTH);
 196              	 .loc 2 46 0
 197 0068 FFF7FEFF 	 bl boardConfig
 198 006c 0246     	 mov r2,r0
 199 006e 0B4B     	 ldr r3,.L12+16
 200 0070 1C46     	 mov r4,r3
 201 0072 1546     	 mov r5,r2
 202 0074 2868     	 ldr r0,[r5]
 203 0076 6968     	 ldr r1,[r5,#4]
 204 0078 AA68     	 ldr r2,[r5,#8]
 205 007a EB68     	 ldr r3,[r5,#12]
 206 007c 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 207 007e 2869     	 ldr r0,[r5,#16]
 208 0080 6969     	 ldr r1,[r5,#20]
 209 0082 AA69     	 ldr r2,[r5,#24]
 210 0084 EB69     	 ldr r3,[r5,#28]
 211 0086 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 212              	.L9:
  47:../cleanflight/src/main/fc/board_info.c ****     }
  48:../cleanflight/src/main/fc/board_info.c **** }
 213              	 .loc 2 48 0
 214 0088 B0BD     	 pop {r4,r5,r7,pc}
 215              	.L13:
 216 008a 00BF     	 .align 2
 217              	.L12:
 218 008c 00000000 	 .word boardInformationSet
 219 0090 00000000 	 .word manufacturerId
 220 0094 00000000 	 .word boardName
 221 0098 00000000 	 .word signatureSet
 222 009c 00000000 	 .word signature
 223              	 .cfi_endproc
 224              	.LFE526:
 226              	 .section .text.getManufacturerId,"ax",%progbits
 227              	 .align 2
 228              	 .global getManufacturerId
 229              	 .thumb
 230              	 .thumb_func
 232              	getManufacturerId:
 233              	.LFB527:
  49:../cleanflight/src/main/fc/board_info.c **** 
  50:../cleanflight/src/main/fc/board_info.c **** const char *getManufacturerId(void)
  51:../cleanflight/src/main/fc/board_info.c **** {
 234              	 .loc 2 51 0
 235              	 .cfi_startproc
 236              	 
 237              	 
 238              	 
 239 0000 80B4     	 push {r7}
 240              	.LCFI10:
 241              	 .cfi_def_cfa_offset 4
 242              	 .cfi_offset 7,-4
 243 0002 00AF     	 add r7,sp,#0
 244              	.LCFI11:
 245              	 .cfi_def_cfa_register 7
  52:../cleanflight/src/main/fc/board_info.c ****     return manufacturerId;
 246              	 .loc 2 52 0
 247 0004 024B     	 ldr r3,.L16
  53:../cleanflight/src/main/fc/board_info.c **** }
 248              	 .loc 2 53 0
 249 0006 1846     	 mov r0,r3
 250 0008 BD46     	 mov sp,r7
 251              	.LCFI12:
 252              	 .cfi_def_cfa_register 13
 253              	 
 254 000a 5DF8047B 	 ldr r7,[sp],#4
 255              	.LCFI13:
 256              	 .cfi_restore 7
 257              	 .cfi_def_cfa_offset 0
 258 000e 7047     	 bx lr
 259              	.L17:
 260              	 .align 2
 261              	.L16:
 262 0010 00000000 	 .word manufacturerId
 263              	 .cfi_endproc
 264              	.LFE527:
 266              	 .section .text.getBoardName,"ax",%progbits
 267              	 .align 2
 268              	 .global getBoardName
 269              	 .thumb
 270              	 .thumb_func
 272              	getBoardName:
 273              	.LFB528:
  54:../cleanflight/src/main/fc/board_info.c **** 
  55:../cleanflight/src/main/fc/board_info.c **** const char *getBoardName(void)
  56:../cleanflight/src/main/fc/board_info.c **** {
 274              	 .loc 2 56 0
 275              	 .cfi_startproc
 276              	 
 277              	 
 278              	 
 279 0000 80B4     	 push {r7}
 280              	.LCFI14:
 281              	 .cfi_def_cfa_offset 4
 282              	 .cfi_offset 7,-4
 283 0002 00AF     	 add r7,sp,#0
 284              	.LCFI15:
 285              	 .cfi_def_cfa_register 7
  57:../cleanflight/src/main/fc/board_info.c ****     return boardName;
 286              	 .loc 2 57 0
 287 0004 024B     	 ldr r3,.L20
  58:../cleanflight/src/main/fc/board_info.c **** }
 288              	 .loc 2 58 0
 289 0006 1846     	 mov r0,r3
 290 0008 BD46     	 mov sp,r7
 291              	.LCFI16:
 292              	 .cfi_def_cfa_register 13
 293              	 
 294 000a 5DF8047B 	 ldr r7,[sp],#4
 295              	.LCFI17:
 296              	 .cfi_restore 7
 297              	 .cfi_def_cfa_offset 0
 298 000e 7047     	 bx lr
 299              	.L21:
 300              	 .align 2
 301              	.L20:
 302 0010 00000000 	 .word boardName
 303              	 .cfi_endproc
 304              	.LFE528:
 306              	 .section .text.boardInformationIsSet,"ax",%progbits
 307              	 .align 2
 308              	 .global boardInformationIsSet
 309              	 .thumb
 310              	 .thumb_func
 312              	boardInformationIsSet:
 313              	.LFB529:
  59:../cleanflight/src/main/fc/board_info.c **** 
  60:../cleanflight/src/main/fc/board_info.c **** bool boardInformationIsSet(void)
  61:../cleanflight/src/main/fc/board_info.c **** {
 314              	 .loc 2 61 0
 315              	 .cfi_startproc
 316              	 
 317              	 
 318              	 
 319 0000 80B4     	 push {r7}
 320              	.LCFI18:
 321              	 .cfi_def_cfa_offset 4
 322              	 .cfi_offset 7,-4
 323 0002 00AF     	 add r7,sp,#0
 324              	.LCFI19:
 325              	 .cfi_def_cfa_register 7
  62:../cleanflight/src/main/fc/board_info.c ****     return boardInformationSet;
 326              	 .loc 2 62 0
 327 0004 034B     	 ldr r3,.L24
 328 0006 1B78     	 ldrb r3,[r3]
  63:../cleanflight/src/main/fc/board_info.c **** }
 329              	 .loc 2 63 0
 330 0008 1846     	 mov r0,r3
 331 000a BD46     	 mov sp,r7
 332              	.LCFI20:
 333              	 .cfi_def_cfa_register 13
 334              	 
 335 000c 5DF8047B 	 ldr r7,[sp],#4
 336              	.LCFI21:
 337              	 .cfi_restore 7
 338              	 .cfi_def_cfa_offset 0
 339 0010 7047     	 bx lr
 340              	.L25:
 341 0012 00BF     	 .align 2
 342              	.L24:
 343 0014 00000000 	 .word boardInformationSet
 344              	 .cfi_endproc
 345              	.LFE529:
 347              	 .section .text.setManufacturerId,"ax",%progbits
 348              	 .align 2
 349              	 .global setManufacturerId
 350              	 .thumb
 351              	 .thumb_func
 353              	setManufacturerId:
 354              	.LFB530:
  64:../cleanflight/src/main/fc/board_info.c **** 
  65:../cleanflight/src/main/fc/board_info.c **** bool setManufacturerId(const char *newManufacturerId)
  66:../cleanflight/src/main/fc/board_info.c **** {
 355              	 .loc 2 66 0
 356              	 .cfi_startproc
 357              	 
 358              	 
 359 0000 80B5     	 push {r7,lr}
 360              	.LCFI22:
 361              	 .cfi_def_cfa_offset 8
 362              	 .cfi_offset 7,-8
 363              	 .cfi_offset 14,-4
 364 0002 82B0     	 sub sp,sp,#8
 365              	.LCFI23:
 366              	 .cfi_def_cfa_offset 16
 367 0004 00AF     	 add r7,sp,#0
 368              	.LCFI24:
 369              	 .cfi_def_cfa_register 7
 370 0006 7860     	 str r0,[r7,#4]
  67:../cleanflight/src/main/fc/board_info.c ****     if (!boardInformationSet) {
 371              	 .loc 2 67 0
 372 0008 094B     	 ldr r3,.L29
 373 000a 1B78     	 ldrb r3,[r3]
 374 000c 83F00103 	 eor r3,r3,#1
 375 0010 DBB2     	 uxtb r3,r3
 376 0012 002B     	 cmp r3,#0
 377 0014 06D0     	 beq .L27
  68:../cleanflight/src/main/fc/board_info.c ****         strncpy(manufacturerId, newManufacturerId, MAX_MANUFACTURER_ID_LENGTH);
 378              	 .loc 2 68 0
 379 0016 0748     	 ldr r0,.L29+4
 380 0018 7968     	 ldr r1,[r7,#4]
 381 001a 0422     	 movs r2,#4
 382 001c FFF7FEFF 	 bl strncpy
  69:../cleanflight/src/main/fc/board_info.c **** 
  70:../cleanflight/src/main/fc/board_info.c ****         return true;
 383              	 .loc 2 70 0
 384 0020 0123     	 movs r3,#1
 385 0022 00E0     	 b .L28
 386              	.L27:
  71:../cleanflight/src/main/fc/board_info.c ****     } else {
  72:../cleanflight/src/main/fc/board_info.c ****         return false;
 387              	 .loc 2 72 0
 388 0024 0023     	 movs r3,#0
 389              	.L28:
  73:../cleanflight/src/main/fc/board_info.c ****     }
  74:../cleanflight/src/main/fc/board_info.c **** }
 390              	 .loc 2 74 0
 391 0026 1846     	 mov r0,r3
 392 0028 0837     	 adds r7,r7,#8
 393              	.LCFI25:
 394              	 .cfi_def_cfa_offset 8
 395 002a BD46     	 mov sp,r7
 396              	.LCFI26:
 397              	 .cfi_def_cfa_register 13
 398              	 
 399 002c 80BD     	 pop {r7,pc}
 400              	.L30:
 401 002e 00BF     	 .align 2
 402              	.L29:
 403 0030 00000000 	 .word boardInformationSet
 404 0034 00000000 	 .word manufacturerId
 405              	 .cfi_endproc
 406              	.LFE530:
 408              	 .section .text.setBoardName,"ax",%progbits
 409              	 .align 2
 410              	 .global setBoardName
 411              	 .thumb
 412              	 .thumb_func
 414              	setBoardName:
 415              	.LFB531:
  75:../cleanflight/src/main/fc/board_info.c **** 
  76:../cleanflight/src/main/fc/board_info.c **** bool setBoardName(const char *newBoardName)
  77:../cleanflight/src/main/fc/board_info.c **** {
 416              	 .loc 2 77 0
 417              	 .cfi_startproc
 418              	 
 419              	 
 420 0000 80B5     	 push {r7,lr}
 421              	.LCFI27:
 422              	 .cfi_def_cfa_offset 8
 423              	 .cfi_offset 7,-8
 424              	 .cfi_offset 14,-4
 425 0002 82B0     	 sub sp,sp,#8
 426              	.LCFI28:
 427              	 .cfi_def_cfa_offset 16
 428 0004 00AF     	 add r7,sp,#0
 429              	.LCFI29:
 430              	 .cfi_def_cfa_register 7
 431 0006 7860     	 str r0,[r7,#4]
  78:../cleanflight/src/main/fc/board_info.c ****     if (!boardInformationSet) {
 432              	 .loc 2 78 0
 433 0008 094B     	 ldr r3,.L34
 434 000a 1B78     	 ldrb r3,[r3]
 435 000c 83F00103 	 eor r3,r3,#1
 436 0010 DBB2     	 uxtb r3,r3
 437 0012 002B     	 cmp r3,#0
 438 0014 06D0     	 beq .L32
  79:../cleanflight/src/main/fc/board_info.c ****         strncpy(boardName, newBoardName, MAX_BOARD_NAME_LENGTH);
 439              	 .loc 2 79 0
 440 0016 0748     	 ldr r0,.L34+4
 441 0018 7968     	 ldr r1,[r7,#4]
 442 001a 1422     	 movs r2,#20
 443 001c FFF7FEFF 	 bl strncpy
  80:../cleanflight/src/main/fc/board_info.c **** 
  81:../cleanflight/src/main/fc/board_info.c ****         return true;
 444              	 .loc 2 81 0
 445 0020 0123     	 movs r3,#1
 446 0022 00E0     	 b .L33
 447              	.L32:
  82:../cleanflight/src/main/fc/board_info.c ****     } else {
  83:../cleanflight/src/main/fc/board_info.c ****         return false;
 448              	 .loc 2 83 0
 449 0024 0023     	 movs r3,#0
 450              	.L33:
  84:../cleanflight/src/main/fc/board_info.c ****     }
  85:../cleanflight/src/main/fc/board_info.c **** }
 451              	 .loc 2 85 0
 452 0026 1846     	 mov r0,r3
 453 0028 0837     	 adds r7,r7,#8
 454              	.LCFI30:
 455              	 .cfi_def_cfa_offset 8
 456 002a BD46     	 mov sp,r7
 457              	.LCFI31:
 458              	 .cfi_def_cfa_register 13
 459              	 
 460 002c 80BD     	 pop {r7,pc}
 461              	.L35:
 462 002e 00BF     	 .align 2
 463              	.L34:
 464 0030 00000000 	 .word boardInformationSet
 465 0034 00000000 	 .word boardName
 466              	 .cfi_endproc
 467              	.LFE531:
 469              	 .section .text.persistBoardInformation,"ax",%progbits
 470              	 .align 2
 471              	 .global persistBoardInformation
 472              	 .thumb
 473              	 .thumb_func
 475              	persistBoardInformation:
 476              	.LFB532:
  86:../cleanflight/src/main/fc/board_info.c **** 
  87:../cleanflight/src/main/fc/board_info.c **** bool persistBoardInformation(void)
  88:../cleanflight/src/main/fc/board_info.c **** {
 477              	 .loc 2 88 0
 478              	 .cfi_startproc
 479              	 
 480              	 
 481 0000 80B5     	 push {r7,lr}
 482              	.LCFI32:
 483              	 .cfi_def_cfa_offset 8
 484              	 .cfi_offset 7,-8
 485              	 .cfi_offset 14,-4
 486 0002 00AF     	 add r7,sp,#0
 487              	.LCFI33:
 488              	 .cfi_def_cfa_register 7
  89:../cleanflight/src/main/fc/board_info.c ****     if (!boardInformationSet) {
 489              	 .loc 2 89 0
 490 0004 124B     	 ldr r3,.L39
 491 0006 1B78     	 ldrb r3,[r3]
 492 0008 83F00103 	 eor r3,r3,#1
 493 000c DBB2     	 uxtb r3,r3
 494 000e 002B     	 cmp r3,#0
 495 0010 1BD0     	 beq .L37
  90:../cleanflight/src/main/fc/board_info.c ****         strncpy(boardConfigMutable()->manufacturerId, manufacturerId, MAX_MANUFACTURER_ID_LENGTH);
 496              	 .loc 2 90 0
 497 0012 FFF7FEFF 	 bl boardConfigMutable
 498 0016 0346     	 mov r3,r0
 499 0018 2033     	 adds r3,r3,#32
 500 001a 1846     	 mov r0,r3
 501 001c 0D49     	 ldr r1,.L39+4
 502 001e 0422     	 movs r2,#4
 503 0020 FFF7FEFF 	 bl strncpy
  91:../cleanflight/src/main/fc/board_info.c ****         strncpy(boardConfigMutable()->boardName, boardName, MAX_BOARD_NAME_LENGTH);
 504              	 .loc 2 91 0
 505 0024 FFF7FEFF 	 bl boardConfigMutable
 506 0028 0346     	 mov r3,r0
 507 002a 2533     	 adds r3,r3,#37
 508 002c 1846     	 mov r0,r3
 509 002e 0A49     	 ldr r1,.L39+8
 510 0030 1422     	 movs r2,#20
 511 0032 FFF7FEFF 	 bl strncpy
  92:../cleanflight/src/main/fc/board_info.c ****         boardConfigMutable()->boardInformationSet = true;
 512              	 .loc 2 92 0
 513 0036 FFF7FEFF 	 bl boardConfigMutable
 514 003a 0346     	 mov r3,r0
 515 003c 0122     	 movs r2,#1
 516 003e 83F83A20 	 strb r2,[r3,#58]
  93:../cleanflight/src/main/fc/board_info.c **** 
  94:../cleanflight/src/main/fc/board_info.c ****         initBoardInformation();
 517              	 .loc 2 94 0
 518 0042 FFF7FEFF 	 bl initBoardInformation
  95:../cleanflight/src/main/fc/board_info.c **** 
  96:../cleanflight/src/main/fc/board_info.c ****         return true;
 519              	 .loc 2 96 0
 520 0046 0123     	 movs r3,#1
 521 0048 00E0     	 b .L38
 522              	.L37:
  97:../cleanflight/src/main/fc/board_info.c ****     } else {
  98:../cleanflight/src/main/fc/board_info.c ****         return false;
 523              	 .loc 2 98 0
 524 004a 0023     	 movs r3,#0
 525              	.L38:
  99:../cleanflight/src/main/fc/board_info.c ****     }
 100:../cleanflight/src/main/fc/board_info.c **** }
 526              	 .loc 2 100 0
 527 004c 1846     	 mov r0,r3
 528 004e 80BD     	 pop {r7,pc}
 529              	.L40:
 530              	 .align 2
 531              	.L39:
 532 0050 00000000 	 .word boardInformationSet
 533 0054 00000000 	 .word manufacturerId
 534 0058 00000000 	 .word boardName
 535              	 .cfi_endproc
 536              	.LFE532:
 538              	 .section .text.getSignature,"ax",%progbits
 539              	 .align 2
 540              	 .global getSignature
 541              	 .thumb
 542              	 .thumb_func
 544              	getSignature:
 545              	.LFB533:
 101:../cleanflight/src/main/fc/board_info.c **** 
 102:../cleanflight/src/main/fc/board_info.c **** #if defined(USE_SIGNATURE)
 103:../cleanflight/src/main/fc/board_info.c **** const uint8_t *getSignature(void)
 104:../cleanflight/src/main/fc/board_info.c **** {
 546              	 .loc 2 104 0
 547              	 .cfi_startproc
 548              	 
 549              	 
 550              	 
 551 0000 80B4     	 push {r7}
 552              	.LCFI34:
 553              	 .cfi_def_cfa_offset 4
 554              	 .cfi_offset 7,-4
 555 0002 00AF     	 add r7,sp,#0
 556              	.LCFI35:
 557              	 .cfi_def_cfa_register 7
 105:../cleanflight/src/main/fc/board_info.c ****     return signature;
 558              	 .loc 2 105 0
 559 0004 024B     	 ldr r3,.L43
 106:../cleanflight/src/main/fc/board_info.c **** }
 560              	 .loc 2 106 0
 561 0006 1846     	 mov r0,r3
 562 0008 BD46     	 mov sp,r7
 563              	.LCFI36:
 564              	 .cfi_def_cfa_register 13
 565              	 
 566 000a 5DF8047B 	 ldr r7,[sp],#4
 567              	.LCFI37:
 568              	 .cfi_restore 7
 569              	 .cfi_def_cfa_offset 0
 570 000e 7047     	 bx lr
 571              	.L44:
 572              	 .align 2
 573              	.L43:
 574 0010 00000000 	 .word signature
 575              	 .cfi_endproc
 576              	.LFE533:
 578              	 .section .text.signatureIsSet,"ax",%progbits
 579              	 .align 2
 580              	 .global signatureIsSet
 581              	 .thumb
 582              	 .thumb_func
 584              	signatureIsSet:
 585              	.LFB534:
 107:../cleanflight/src/main/fc/board_info.c **** 
 108:../cleanflight/src/main/fc/board_info.c **** bool signatureIsSet(void)
 109:../cleanflight/src/main/fc/board_info.c **** {
 586              	 .loc 2 109 0
 587              	 .cfi_startproc
 588              	 
 589              	 
 590              	 
 591 0000 80B4     	 push {r7}
 592              	.LCFI38:
 593              	 .cfi_def_cfa_offset 4
 594              	 .cfi_offset 7,-4
 595 0002 00AF     	 add r7,sp,#0
 596              	.LCFI39:
 597              	 .cfi_def_cfa_register 7
 110:../cleanflight/src/main/fc/board_info.c ****     return signatureSet;
 598              	 .loc 2 110 0
 599 0004 034B     	 ldr r3,.L47
 600 0006 1B78     	 ldrb r3,[r3]
 111:../cleanflight/src/main/fc/board_info.c **** }
 601              	 .loc 2 111 0
 602 0008 1846     	 mov r0,r3
 603 000a BD46     	 mov sp,r7
 604              	.LCFI40:
 605              	 .cfi_def_cfa_register 13
 606              	 
 607 000c 5DF8047B 	 ldr r7,[sp],#4
 608              	.LCFI41:
 609              	 .cfi_restore 7
 610              	 .cfi_def_cfa_offset 0
 611 0010 7047     	 bx lr
 612              	.L48:
 613 0012 00BF     	 .align 2
 614              	.L47:
 615 0014 00000000 	 .word signatureSet
 616              	 .cfi_endproc
 617              	.LFE534:
 619              	 .section .text.setSignature,"ax",%progbits
 620              	 .align 2
 621              	 .global setSignature
 622              	 .thumb
 623              	 .thumb_func
 625              	setSignature:
 626              	.LFB535:
 112:../cleanflight/src/main/fc/board_info.c **** 
 113:../cleanflight/src/main/fc/board_info.c **** bool setSignature(const uint8_t *newSignature)
 114:../cleanflight/src/main/fc/board_info.c **** {
 627              	 .loc 2 114 0
 628              	 .cfi_startproc
 629              	 
 630              	 
 631              	 
 632 0000 B0B4     	 push {r4,r5,r7}
 633              	.LCFI42:
 634              	 .cfi_def_cfa_offset 12
 635              	 .cfi_offset 4,-12
 636              	 .cfi_offset 5,-8
 637              	 .cfi_offset 7,-4
 638 0002 83B0     	 sub sp,sp,#12
 639              	.LCFI43:
 640              	 .cfi_def_cfa_offset 24
 641 0004 00AF     	 add r7,sp,#0
 642              	.LCFI44:
 643              	 .cfi_def_cfa_register 7
 644 0006 7860     	 str r0,[r7,#4]
 115:../cleanflight/src/main/fc/board_info.c ****     if (!signatureSet) {
 645              	 .loc 2 115 0
 646 0008 0E4B     	 ldr r3,.L52
 647 000a 1B78     	 ldrb r3,[r3]
 648 000c 83F00103 	 eor r3,r3,#1
 649 0010 DBB2     	 uxtb r3,r3
 650 0012 002B     	 cmp r3,#0
 651 0014 0FD0     	 beq .L50
 116:../cleanflight/src/main/fc/board_info.c ****         memcpy(signature, newSignature, SIGNATURE_LENGTH);
 652              	 .loc 2 116 0
 653 0016 0C4A     	 ldr r2,.L52+4
 654 0018 7B68     	 ldr r3,[r7,#4]
 655 001a 1446     	 mov r4,r2
 656 001c 1D46     	 mov r5,r3
 657 001e 2868     	 ldr r0,[r5]
 658 0020 6968     	 ldr r1,[r5,#4]
 659 0022 AA68     	 ldr r2,[r5,#8]
 660 0024 EB68     	 ldr r3,[r5,#12]
 661 0026 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 662 0028 2869     	 ldr r0,[r5,#16]
 663 002a 6969     	 ldr r1,[r5,#20]
 664 002c AA69     	 ldr r2,[r5,#24]
 665 002e EB69     	 ldr r3,[r5,#28]
 666 0030 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 117:../cleanflight/src/main/fc/board_info.c **** 
 118:../cleanflight/src/main/fc/board_info.c ****         return true;
 667              	 .loc 2 118 0
 668 0032 0123     	 movs r3,#1
 669 0034 00E0     	 b .L51
 670              	.L50:
 119:../cleanflight/src/main/fc/board_info.c ****     } else {
 120:../cleanflight/src/main/fc/board_info.c ****         return false;
 671              	 .loc 2 120 0
 672 0036 0023     	 movs r3,#0
 673              	.L51:
 121:../cleanflight/src/main/fc/board_info.c ****     }
 122:../cleanflight/src/main/fc/board_info.c **** }
 674              	 .loc 2 122 0
 675 0038 1846     	 mov r0,r3
 676 003a 0C37     	 adds r7,r7,#12
 677              	.LCFI45:
 678              	 .cfi_def_cfa_offset 12
 679 003c BD46     	 mov sp,r7
 680              	.LCFI46:
 681              	 .cfi_def_cfa_register 13
 682              	 
 683 003e B0BC     	 pop {r4,r5,r7}
 684              	.LCFI47:
 685              	 .cfi_restore 7
 686              	 .cfi_restore 5
 687              	 .cfi_restore 4
 688              	 .cfi_def_cfa_offset 0
 689 0040 7047     	 bx lr
 690              	.L53:
 691 0042 00BF     	 .align 2
 692              	.L52:
 693 0044 00000000 	 .word signatureSet
 694 0048 00000000 	 .word signature
 695              	 .cfi_endproc
 696              	.LFE535:
 698              	 .section .text.persistSignature,"ax",%progbits
 699              	 .align 2
 700              	 .global persistSignature
 701              	 .thumb
 702              	 .thumb_func
 704              	persistSignature:
 705              	.LFB536:
 123:../cleanflight/src/main/fc/board_info.c **** 
 124:../cleanflight/src/main/fc/board_info.c **** bool persistSignature(void)
 125:../cleanflight/src/main/fc/board_info.c **** {
 706              	 .loc 2 125 0
 707              	 .cfi_startproc
 708              	 
 709              	 
 710 0000 B0B5     	 push {r4,r5,r7,lr}
 711              	.LCFI48:
 712              	 .cfi_def_cfa_offset 16
 713              	 .cfi_offset 4,-16
 714              	 .cfi_offset 5,-12
 715              	 .cfi_offset 7,-8
 716              	 .cfi_offset 14,-4
 717 0002 00AF     	 add r7,sp,#0
 718              	.LCFI49:
 719              	 .cfi_def_cfa_register 7
 126:../cleanflight/src/main/fc/board_info.c ****     if (!signatureSet) {
 720              	 .loc 2 126 0
 721 0004 124B     	 ldr r3,.L57
 722 0006 1B78     	 ldrb r3,[r3]
 723 0008 83F00103 	 eor r3,r3,#1
 724 000c DBB2     	 uxtb r3,r3
 725 000e 002B     	 cmp r3,#0
 726 0010 1AD0     	 beq .L55
 127:../cleanflight/src/main/fc/board_info.c ****         memcpy(boardConfigMutable()->signature, signature, SIGNATURE_LENGTH);
 727              	 .loc 2 127 0
 728 0012 FFF7FEFF 	 bl boardConfigMutable
 729 0016 0346     	 mov r3,r0
 730 0018 1A46     	 mov r2,r3
 731 001a 0E4B     	 ldr r3,.L57+4
 732 001c 1446     	 mov r4,r2
 733 001e 1D46     	 mov r5,r3
 734 0020 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 735 0022 2060     	 str r0,[r4]
 736 0024 6160     	 str r1,[r4,#4]
 737 0026 A260     	 str r2,[r4,#8]
 738 0028 E360     	 str r3,[r4,#12]
 739 002a 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 740 002c 2061     	 str r0,[r4,#16]
 741 002e 6161     	 str r1,[r4,#20]
 742 0030 A261     	 str r2,[r4,#24]
 743 0032 E361     	 str r3,[r4,#28]
 128:../cleanflight/src/main/fc/board_info.c ****         boardConfigMutable()->signatureSet = true;
 744              	 .loc 2 128 0
 745 0034 FFF7FEFF 	 bl boardConfigMutable
 746 0038 0346     	 mov r3,r0
 747 003a 0122     	 movs r2,#1
 748 003c 83F83B20 	 strb r2,[r3,#59]
 129:../cleanflight/src/main/fc/board_info.c **** 
 130:../cleanflight/src/main/fc/board_info.c ****         initBoardInformation();
 749              	 .loc 2 130 0
 750 0040 FFF7FEFF 	 bl initBoardInformation
 131:../cleanflight/src/main/fc/board_info.c **** 
 132:../cleanflight/src/main/fc/board_info.c ****         return true;
 751              	 .loc 2 132 0
 752 0044 0123     	 movs r3,#1
 753 0046 00E0     	 b .L56
 754              	.L55:
 133:../cleanflight/src/main/fc/board_info.c ****     } else {
 134:../cleanflight/src/main/fc/board_info.c ****         return false;
 755              	 .loc 2 134 0
 756 0048 0023     	 movs r3,#0
 757              	.L56:
 135:../cleanflight/src/main/fc/board_info.c ****     }
 136:../cleanflight/src/main/fc/board_info.c **** }
 758              	 .loc 2 136 0
 759 004a 1846     	 mov r0,r3
 760 004c B0BD     	 pop {r4,r5,r7,pc}
 761              	.L58:
 762 004e 00BF     	 .align 2
 763              	.L57:
 764 0050 00000000 	 .word signatureSet
 765 0054 00000000 	 .word signature
 766              	 .cfi_endproc
 767              	.LFE536:
 769              	 .text
 770              	.Letext0:
 771              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 772              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 773              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 774              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 775              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 board_info.c
    {standard input}:20     .text.boardConfig:00000000 $t
    {standard input}:24     .text.boardConfig:00000000 boardConfig
    {standard input}:54     .text.boardConfig:00000010 $d
    {standard input}:59     .text.boardConfigMutable:00000000 $t
    {standard input}:63     .text.boardConfigMutable:00000000 boardConfigMutable
    {standard input}:92     .text.boardConfigMutable:00000010 $d
    {standard input}:99     .bss.boardInformationSet:00000000 boardInformationSet
    {standard input}:100    .bss.boardInformationSet:00000000 $d
    {standard input}:102    .bss.manufacturerId:00000000 $d
    {standard input}:105    .bss.manufacturerId:00000000 manufacturerId
    {standard input}:108    .bss.boardName:00000000 $d
    {standard input}:111    .bss.boardName:00000000 boardName
    {standard input}:116    .bss.signatureSet:00000000 signatureSet
    {standard input}:117    .bss.signatureSet:00000000 $d
    {standard input}:119    .bss.signature:00000000 $d
    {standard input}:122    .bss.signature:00000000 signature
    {standard input}:125    .text.initBoardInformation:00000000 $t
    {standard input}:130    .text.initBoardInformation:00000000 initBoardInformation
    {standard input}:218    .text.initBoardInformation:0000008c $d
    {standard input}:227    .text.getManufacturerId:00000000 $t
    {standard input}:232    .text.getManufacturerId:00000000 getManufacturerId
    {standard input}:262    .text.getManufacturerId:00000010 $d
    {standard input}:267    .text.getBoardName:00000000 $t
    {standard input}:272    .text.getBoardName:00000000 getBoardName
    {standard input}:302    .text.getBoardName:00000010 $d
    {standard input}:307    .text.boardInformationIsSet:00000000 $t
    {standard input}:312    .text.boardInformationIsSet:00000000 boardInformationIsSet
    {standard input}:343    .text.boardInformationIsSet:00000014 $d
    {standard input}:348    .text.setManufacturerId:00000000 $t
    {standard input}:353    .text.setManufacturerId:00000000 setManufacturerId
    {standard input}:403    .text.setManufacturerId:00000030 $d
    {standard input}:409    .text.setBoardName:00000000 $t
    {standard input}:414    .text.setBoardName:00000000 setBoardName
    {standard input}:464    .text.setBoardName:00000030 $d
    {standard input}:470    .text.persistBoardInformation:00000000 $t
    {standard input}:475    .text.persistBoardInformation:00000000 persistBoardInformation
    {standard input}:532    .text.persistBoardInformation:00000050 $d
    {standard input}:539    .text.getSignature:00000000 $t
    {standard input}:544    .text.getSignature:00000000 getSignature
    {standard input}:574    .text.getSignature:00000010 $d
    {standard input}:579    .text.signatureIsSet:00000000 $t
    {standard input}:584    .text.signatureIsSet:00000000 signatureIsSet
    {standard input}:615    .text.signatureIsSet:00000014 $d
    {standard input}:620    .text.setSignature:00000000 $t
    {standard input}:625    .text.setSignature:00000000 setSignature
    {standard input}:693    .text.setSignature:00000044 $d
    {standard input}:699    .text.persistSignature:00000000 $t
    {standard input}:704    .text.persistSignature:00000000 persistSignature
    {standard input}:764    .text.persistSignature:00000050 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
boardConfig_System
strncpy
