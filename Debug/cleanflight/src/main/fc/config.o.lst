   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "config.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.systemConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	systemConfig:
  25              	.LFB528:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #define MAX_NAME_LENGTH 16u
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct pilotConfig_s {
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char name[MAX_NAME_LENGTH + 1];
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } pilotConfig_t;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(pilotConfig_t, pilotConfig);
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct systemConfig_s {
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t pidProfileIndex;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t activeRateProfile;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t debug_mode;
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t task_statistics;
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t rateProfile6PosSwitch;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t cpu_overclock;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t powerOnArmingGraceTime; // in seconds
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char boardIdentifier[sizeof(TARGET_BOARD_IDENTIFIER) + 1];
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } systemConfig_t;
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(systemConfig_t, systemConfig);
  27              	 .loc 1 47 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 47 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word systemConfig_System
  55              	 .cfi_endproc
  56              	.LFE528:
  58              	 .section .text.systemConfigMutable,"ax",%progbits
  59              	 .align 2
  60              	 .thumb
  61              	 .thumb_func
  63              	systemConfigMutable:
  64              	.LFB529:
  65              	 .loc 1 47 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69              	 
  70 0000 80B4     	 push {r7}
  71              	.LCFI4:
  72              	 .cfi_def_cfa_offset 4
  73              	 .cfi_offset 7,-4
  74 0002 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77              	 .loc 1 47 0
  78 0004 024B     	 ldr r3,.L7
  79 0006 1846     	 mov r0,r3
  80 0008 BD46     	 mov sp,r7
  81              	.LCFI6:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 000a 5DF8047B 	 ldr r7,[sp],#4
  85              	.LCFI7:
  86              	 .cfi_restore 7
  87              	 .cfi_def_cfa_offset 0
  88 000e 7047     	 bx lr
  89              	.L8:
  90              	 .align 2
  91              	.L7:
  92 0010 00000000 	 .word systemConfig_System
  93              	 .cfi_endproc
  94              	.LFE529:
  96              	 .section .text.throttleCorrectionConfig,"ax",%progbits
  97              	 .align 2
  98              	 .thumb
  99              	 .thumb_func
 101              	throttleCorrectionConfig:
 102              	.LFB536:
 103              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/fc_core.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** #include "common/time.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** #include "pg/pg.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** #if defined(USE_GPS) || defined(USE_MAG)
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** extern int16_t magHold;
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** #endif
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** extern bool isRXDataNew;
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** 
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** typedef struct throttleCorrectionConfig_s {
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****     uint16_t throttle_correction_angle;     // the angle when the throttle correction is maximal. i
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h ****     uint8_t throttle_correction_value;      // the correction that will be applied at throttle_corr
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** } throttleCorrectionConfig_t;
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\fc_core.h **** PG_DECLARE(throttleCorrectionConfig_t, throttleCorrectionConfig);
 104              	 .loc 2 37 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108              	 
 109 0000 80B4     	 push {r7}
 110              	.LCFI8:
 111              	 .cfi_def_cfa_offset 4
 112              	 .cfi_offset 7,-4
 113 0002 00AF     	 add r7,sp,#0
 114              	.LCFI9:
 115              	 .cfi_def_cfa_register 7
 116              	 .loc 2 37 0
 117 0004 024B     	 ldr r3,.L11
 118 0006 1846     	 mov r0,r3
 119 0008 BD46     	 mov sp,r7
 120              	.LCFI10:
 121              	 .cfi_def_cfa_register 13
 122              	 
 123 000a 5DF8047B 	 ldr r7,[sp],#4
 124              	.LCFI11:
 125              	 .cfi_restore 7
 126              	 .cfi_def_cfa_offset 0
 127 000e 7047     	 bx lr
 128              	.L12:
 129              	 .align 2
 130              	.L11:
 131 0010 00000000 	 .word throttleCorrectionConfig_System
 132              	 .cfi_endproc
 133              	.LFE536:
 135              	 .section .text.failsafeConfig,"ax",%progbits
 136              	 .align 2
 137              	 .thumb
 138              	 .thumb_func
 140              	failsafeConfig:
 141              	.LFB550:
 142              	 .file 3 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/failsafe.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #define FAILSAFE_POWER_ON_DELAY_US (1000 * 1000 * 5)
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #define MILLIS_PER_TENTH_SECOND      100
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #define MILLIS_PER_SECOND           1000
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #define PERIOD_OF_1_SECONDS            1 * MILLIS_PER_SECOND
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #define PERIOD_OF_3_SECONDS            3 * MILLIS_PER_SECOND
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #define PERIOD_OF_30_SECONDS          30 * MILLIS_PER_SECOND
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #define PERIOD_RXDATA_FAILURE        200    // millis
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** #define PERIOD_RXDATA_RECOVERY       200    // millis
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** 
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** typedef struct failsafeConfig_s {
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****     uint16_t failsafe_throttle;             // Throttle level used for landing - specify value betw
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****     uint16_t failsafe_throttle_low_delay;   // Time throttle stick must have been below 'min_check'
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****     uint8_t failsafe_delay;                 // Guard time for failsafe activation after signal lost
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****     uint8_t failsafe_off_delay;             // Time for Landing before motors stop in 0.1sec. 1 ste
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****     uint8_t failsafe_switch_mode;           // failsafe switch action is 0: stage1 (identical to rc
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h ****     uint8_t failsafe_procedure;             // selected full failsafe procedure is 0: auto-landing,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** } failsafeConfig_t;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** 
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\failsafe.h **** PG_DECLARE(failsafeConfig_t, failsafeConfig);
 143              	 .loc 3 44 0
 144              	 .cfi_startproc
 145              	 
 146              	 
 147              	 
 148 0000 80B4     	 push {r7}
 149              	.LCFI12:
 150              	 .cfi_def_cfa_offset 4
 151              	 .cfi_offset 7,-4
 152 0002 00AF     	 add r7,sp,#0
 153              	.LCFI13:
 154              	 .cfi_def_cfa_register 7
 155              	 .loc 3 44 0
 156 0004 024B     	 ldr r3,.L15
 157 0006 1846     	 mov r0,r3
 158 0008 BD46     	 mov sp,r7
 159              	.LCFI14:
 160              	 .cfi_def_cfa_register 13
 161              	 
 162 000a 5DF8047B 	 ldr r7,[sp],#4
 163              	.LCFI15:
 164              	 .cfi_restore 7
 165              	 .cfi_def_cfa_offset 0
 166 000e 7047     	 bx lr
 167              	.L16:
 168              	 .align 2
 169              	.L15:
 170 0010 00000000 	 .word failsafeConfig_System
 171              	 .cfi_endproc
 172              	.LFE550:
 174              	 .section .text.failsafeConfigMutable,"ax",%progbits
 175              	 .align 2
 176              	 .thumb
 177              	 .thumb_func
 179              	failsafeConfigMutable:
 180              	.LFB551:
 181              	 .loc 3 44 0
 182              	 .cfi_startproc
 183              	 
 184              	 
 185              	 
 186 0000 80B4     	 push {r7}
 187              	.LCFI16:
 188              	 .cfi_def_cfa_offset 4
 189              	 .cfi_offset 7,-4
 190 0002 00AF     	 add r7,sp,#0
 191              	.LCFI17:
 192              	 .cfi_def_cfa_register 7
 193              	 .loc 3 44 0
 194 0004 024B     	 ldr r3,.L19
 195 0006 1846     	 mov r0,r3
 196 0008 BD46     	 mov sp,r7
 197              	.LCFI18:
 198              	 .cfi_def_cfa_register 13
 199              	 
 200 000a 5DF8047B 	 ldr r7,[sp],#4
 201              	.LCFI19:
 202              	 .cfi_restore 7
 203              	 .cfi_def_cfa_offset 0
 204 000e 7047     	 bx lr
 205              	.L20:
 206              	 .align 2
 207              	.L19:
 208 0010 00000000 	 .word failsafeConfig_System
 209              	 .cfi_endproc
 210              	.LFE551:
 212              	 .section .text.constrain,"ax",%progbits
 213              	 .align 2
 214              	 .thumb
 215              	 .thumb_func
 217              	constrain:
 218              	.LFB552:
 219              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/maths.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #ifndef sq
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define sq(x) ((x)*(x))
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #endif
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define power3(x) ((x)*(x)*(x))
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Undefine this for use libc sinf/cosf. Keep this defined to use fast sin/cos approximations
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define FAST_MATH             // order 9 approximation
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define VERY_FAST_MATH      // order 7 approximation
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Use floating point M_PI instead explicitly.
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define M_PIf       3.14159265358979323846f
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define RAD    (M_PIf / 180.0f)
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define DEGREES_TO_DECIDEGREES(angle) ((angle) * 10)
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define DECIDEGREES_TO_DEGREES(angle) ((angle) / 10)
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define DECIDEGREES_TO_RADIANS(angle) ((angle) / 10.0f * 0.0174532925f)
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define DEGREES_TO_RADIANS(angle) ((angle) * 0.0174532925f)
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define CM_S_TO_KM_H(centimetersPerSecond) ((centimetersPerSecond) * 36 / 1000)
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define CM_S_TO_MPH(centimetersPerSecond) ((centimetersPerSecond) * 10000 / 5080 / 88)
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define MIN(a,b) \
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __extension__ ({ __typeof__ (a) _a = (a); \
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __typeof__ (b) _b = (b); \
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   _a < _b ? _a : _b; })
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define MAX(a,b) \
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __extension__ ({ __typeof__ (a) _a = (a); \
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __typeof__ (b) _b = (b); \
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   _a > _b ? _a : _b; })
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define ABS(x) \
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __extension__ ({ __typeof__ (x) _x = (x); \
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   _x > 0 ? _x : -_x; })
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define Q12 (1 << 12)
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define HZ_TO_INTERVAL_US(x) (1000000 / (x))
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef int32_t fix12_t;
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef struct stdev_s
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** {
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float m_oldM, m_newM, m_oldS, m_newS;
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     int m_n;
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } stdev_t;
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Floating point 3 vector.
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef struct fp_vector {
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float X;
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float Y;
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float Z;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } t_fp_vector_def;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef union u_fp_vector {
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float A[3];
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     t_fp_vector_def V;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } t_fp_vector;
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Floating point Euler angles.
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Be carefull, could be either of degrees or radians.
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef struct fp_angles {
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float roll;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float pitch;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float yaw;
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } fp_angles_def;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef union {
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float raw[3];
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     fp_angles_def angles;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } fp_angles_t;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int gcd(int num, int denom);
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float powerf(float base, int exp);
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t applyDeadband(int32_t value, int32_t deadband);
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float fapplyDeadband(float value, float deadband);
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void devClear(stdev_t *dev);
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void devPush(stdev_t *dev, float x);
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float devVariance(stdev_t *dev);
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float devStandardDeviation(stdev_t *dev);
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float degreesToRadians(int16_t degrees);
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int scaleRange(int x, int srcFrom, int srcTo, int destFrom, int destTo);
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float scaleRangef(float x, float srcFrom, float srcTo, float destFrom, float destTo);
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void normalizeV(struct fp_vector *src, struct fp_vector *dest);
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void rotateV(struct fp_vector *v, fp_angles_t *delta);
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void buildRotationMatrix(fp_angles_t *delta, float matrix[3][3]);
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t quickMedianFilter3(int32_t * v);
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t quickMedianFilter5(int32_t * v);
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t quickMedianFilter7(int32_t * v);
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t quickMedianFilter9(int32_t * v);
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float quickMedianFilter3f(float * v);
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float quickMedianFilter5f(float * v);
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float quickMedianFilter7f(float * v);
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float quickMedianFilter9f(float * v);
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #if defined(FAST_MATH) || defined(VERY_FAST_MATH)
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float sin_approx(float x);
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float cos_approx(float x);
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float atan2_approx(float y, float x);
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float acos_approx(float x);
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define tan_approx(x)       (sin_approx(x) / cos_approx(x))
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float exp_approx(float val);
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float log_approx(float val);
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float pow_approx(float a, float b);
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #else
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define sin_approx(x)   sinf(x)
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define cos_approx(x)   cosf(x)
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define atan2_approx(y,x)   atan2f(y,x)
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define acos_approx(x)      acosf(x)
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define tan_approx(x)       tanf(x)
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define exp_approx(x)       expf(x)
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define log_approx(x)       logf(x)
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define pow_approx(a, b)    powf(b, a)
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #endif
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void arraySubInt32(int32_t *dest, int32_t *array1, int32_t *array2, int count);
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int16_t qPercent(fix12_t q);
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int16_t qMultiply(fix12_t q, int16_t input);
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** fix12_t qConstruct(int16_t num, int16_t den);
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** static inline int constrain(int amt, int low, int high)
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** {
 220              	 .loc 4 151 0
 221              	 .cfi_startproc
 222              	 
 223              	 
 224              	 
 225 0000 80B4     	 push {r7}
 226              	.LCFI20:
 227              	 .cfi_def_cfa_offset 4
 228              	 .cfi_offset 7,-4
 229 0002 85B0     	 sub sp,sp,#20
 230              	.LCFI21:
 231              	 .cfi_def_cfa_offset 24
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI22:
 234              	 .cfi_def_cfa_register 7
 235 0006 F860     	 str r0,[r7,#12]
 236 0008 B960     	 str r1,[r7,#8]
 237 000a 7A60     	 str r2,[r7,#4]
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     if (amt < low)
 238              	 .loc 4 152 0
 239 000c FA68     	 ldr r2,[r7,#12]
 240 000e BB68     	 ldr r3,[r7,#8]
 241 0010 9A42     	 cmp r2,r3
 242 0012 01DA     	 bge .L22
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****         return low;
 243              	 .loc 4 153 0
 244 0014 BB68     	 ldr r3,[r7,#8]
 245 0016 06E0     	 b .L23
 246              	.L22:
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     else if (amt > high)
 247              	 .loc 4 154 0
 248 0018 FA68     	 ldr r2,[r7,#12]
 249 001a 7B68     	 ldr r3,[r7,#4]
 250 001c 9A42     	 cmp r2,r3
 251 001e 01DD     	 ble .L24
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****         return high;
 252              	 .loc 4 155 0
 253 0020 7B68     	 ldr r3,[r7,#4]
 254 0022 00E0     	 b .L23
 255              	.L24:
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     else
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****         return amt;
 256              	 .loc 4 157 0
 257 0024 FB68     	 ldr r3,[r7,#12]
 258              	.L23:
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** }
 259              	 .loc 4 158 0
 260 0026 1846     	 mov r0,r3
 261 0028 1437     	 adds r7,r7,#20
 262              	.LCFI23:
 263              	 .cfi_def_cfa_offset 4
 264 002a BD46     	 mov sp,r7
 265              	.LCFI24:
 266              	 .cfi_def_cfa_register 13
 267              	 
 268 002c 5DF8047B 	 ldr r7,[sp],#4
 269              	.LCFI25:
 270              	 .cfi_restore 7
 271              	 .cfi_def_cfa_offset 0
 272 0030 7047     	 bx lr
 273              	 .cfi_endproc
 274              	.LFE552:
 276 0032 00BF     	 .section .text.mixerConfigMutable,"ax",%progbits
 277              	 .align 2
 278              	 .thumb
 279              	 .thumb_func
 281              	mixerConfigMutable:
 282              	.LFB560:
 283              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/mixer.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "platform.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "common/time.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/pwm_output_counts.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/io_types.h"
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/pwm_output.h"
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define QUAD_MOTOR_COUNT 4
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define BRUSHED_MOTORS_PWM_RATE 16000
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define BRUSHLESS_MOTORS_PWM_RATE 480
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Digital protocol has fixed values
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_DISARM_COMMAND      0
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_MIN_THROTTLE       48
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_MAX_THROTTLE     2047
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_3D_DEADBAND_LOW  1047
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_3D_DEADBAND_HIGH 1048
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Note: this is called MultiType/MULTITYPE_* in baseflight.
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef enum mixerMode
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** {
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_TRI = 1,
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADP = 2,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADX = 3,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_BICOPTER = 4,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_GIMBAL = 5,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_Y6 = 6,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6 = 7,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_FLYING_WING = 8,
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_Y4 = 9,
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6X = 10,
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOX8 = 11,
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOFLATP = 12,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOFLATX = 13,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_AIRPLANE = 14,        // airplane / singlecopter / dualcopter (not yet properly supported
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HELI_120_CCPM = 15,
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HELI_90_DEG = 16,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_VTAIL4 = 17,
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6H = 18,
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_RX_TO_SERVO = 19,    // PPM -> servo relay
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_DUALCOPTER = 20,
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_SINGLECOPTER = 21,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_ATAIL4 = 22,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM = 23,
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM_AIRPLANE = 24,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM_TRI = 25,
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADX_1234 = 26
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixerMode_e;
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Custom mixer data per motor
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct motorMixer_s {
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float throttle;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float roll;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float pitch;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float yaw;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } motorMixer_t;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE_ARRAY(motorMixer_t, MAX_SUPPORTED_MOTORS, customMotorMixer);
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Custom mixer configuration
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct mixer_s {
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t motorCount;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t useServo;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     const motorMixer_t *motor;
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixer_t;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct mixerConfig_s {
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t mixerMode;
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     bool yaw_motors_reversed;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t crashflip_motor_percent;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixerConfig_t;
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE(mixerConfig_t, mixerConfig);
 284              	 .loc 5 96 0
 285              	 .cfi_startproc
 286              	 
 287              	 
 288              	 
 289 0000 80B4     	 push {r7}
 290              	.LCFI26:
 291              	 .cfi_def_cfa_offset 4
 292              	 .cfi_offset 7,-4
 293 0002 00AF     	 add r7,sp,#0
 294              	.LCFI27:
 295              	 .cfi_def_cfa_register 7
 296              	 .loc 5 96 0
 297 0004 024B     	 ldr r3,.L27
 298 0006 1846     	 mov r0,r3
 299 0008 BD46     	 mov sp,r7
 300              	.LCFI28:
 301              	 .cfi_def_cfa_register 13
 302              	 
 303 000a 5DF8047B 	 ldr r7,[sp],#4
 304              	.LCFI29:
 305              	 .cfi_restore 7
 306              	 .cfi_def_cfa_offset 0
 307 000e 7047     	 bx lr
 308              	.L28:
 309              	 .align 2
 310              	.L27:
 311 0010 00000000 	 .word mixerConfig_System
 312              	 .cfi_endproc
 313              	.LFE560:
 315              	 .section .text.motorConfig,"ax",%progbits
 316              	 .align 2
 317              	 .thumb
 318              	 .thumb_func
 320              	motorConfig:
 321              	.LFB561:
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct motorConfig_s {
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     motorDevConfig_t dev;
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t digitalIdleOffsetValue;        // Idle value for DShot protocol, full motor output = 1
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t minthrottle;                   // Set the minimum throttle command sent to the ESC (El
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t maxthrottle;                   // This is the maximum value for the ESCs at full power
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t mincommand;                    // This is the value for the ESCs when they are not arm
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t motorPoleCount;                // Magnetic poles in the motors for calculating actual R
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } motorConfig_t;
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE(motorConfig_t, motorConfig);
 322              	 .loc 5 107 0
 323              	 .cfi_startproc
 324              	 
 325              	 
 326              	 
 327 0000 80B4     	 push {r7}
 328              	.LCFI30:
 329              	 .cfi_def_cfa_offset 4
 330              	 .cfi_offset 7,-4
 331 0002 00AF     	 add r7,sp,#0
 332              	.LCFI31:
 333              	 .cfi_def_cfa_register 7
 334              	 .loc 5 107 0
 335 0004 024B     	 ldr r3,.L31
 336 0006 1846     	 mov r0,r3
 337 0008 BD46     	 mov sp,r7
 338              	.LCFI32:
 339              	 .cfi_def_cfa_register 13
 340              	 
 341 000a 5DF8047B 	 ldr r7,[sp],#4
 342              	.LCFI33:
 343              	 .cfi_restore 7
 344              	 .cfi_def_cfa_offset 0
 345 000e 7047     	 bx lr
 346              	.L32:
 347              	 .align 2
 348              	.L31:
 349 0010 00000000 	 .word motorConfig_System
 350              	 .cfi_endproc
 351              	.LFE561:
 353              	 .section .text.motorConfigMutable,"ax",%progbits
 354              	 .align 2
 355              	 .thumb
 356              	 .thumb_func
 358              	motorConfigMutable:
 359              	.LFB562:
 360              	 .loc 5 107 0
 361              	 .cfi_startproc
 362              	 
 363              	 
 364              	 
 365 0000 80B4     	 push {r7}
 366              	.LCFI34:
 367              	 .cfi_def_cfa_offset 4
 368              	 .cfi_offset 7,-4
 369 0002 00AF     	 add r7,sp,#0
 370              	.LCFI35:
 371              	 .cfi_def_cfa_register 7
 372              	 .loc 5 107 0
 373 0004 024B     	 ldr r3,.L35
 374 0006 1846     	 mov r0,r3
 375 0008 BD46     	 mov sp,r7
 376              	.LCFI36:
 377              	 .cfi_def_cfa_register 13
 378              	 
 379 000a 5DF8047B 	 ldr r7,[sp],#4
 380              	.LCFI37:
 381              	 .cfi_restore 7
 382              	 .cfi_def_cfa_offset 0
 383 000e 7047     	 bx lr
 384              	.L36:
 385              	 .align 2
 386              	.L35:
 387 0010 00000000 	 .word motorConfig_System
 388              	 .cfi_endproc
 389              	.LFE562:
 391              	 .section .text.pidProfilesMutable,"ax",%progbits
 392              	 .align 2
 393              	 .thumb
 394              	 .thumb_func
 396              	pidProfilesMutable:
 397              	.LFB564:
 398              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/pid.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #include <stdbool.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #include "common/time.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #include "common/filter.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define MAX_PID_PROCESS_DENOM       16
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PID_CONTROLLER_BETAFLIGHT   1
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PID_MIXER_SCALING           1000.0f
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PID_SERVO_MIXER_SCALING     0.7f
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PIDSUM_LIMIT                500
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PIDSUM_LIMIT_YAW            400
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PIDSUM_LIMIT_MIN            100
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PIDSUM_LIMIT_MAX            1000
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** // Scaling factors for Pids for better tunable range in configurator for betaflight pid controller.
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define PTERM_SCALE 0.032029f
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define ITERM_SCALE 0.244381f
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define DTERM_SCALE 0.000529f
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** // The constant scale factor to replace the Kd component of the feedforward calculation.
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** // This value gives the same "feel" as the previous Kd default of 26 (26 * DTERM_SCALE)
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #define FEEDFORWARD_SCALE 0.013754f
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_ROLL,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_PITCH,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_YAW,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_LEVEL,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_MAG,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_ITEM_COUNT
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidIndex_e;
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     SUPEREXPO_YAW_OFF = 0,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     SUPEREXPO_YAW_ON,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     SUPEREXPO_YAW_ALWAYS
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidSuperExpoYaw_e;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_STABILISATION_OFF = 0,
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_STABILISATION_ON
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidStabilisationState_e;
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_CRASH_RECOVERY_OFF = 0,
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_CRASH_RECOVERY_ON,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     PID_CRASH_RECOVERY_BEEP
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidCrashRecovery_e;
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef struct pidf_s {
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t P;
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t I;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t D;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t F;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidf_t;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ANTI_GRAVITY_SMOOTH,
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ANTI_GRAVITY_STEP
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } antiGravityMode_e;
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_OFF,
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_RP,
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_RPY,
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_RP_INC,
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_RPY_INC
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } itermRelax_e;
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef enum {
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_GYRO,
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     ITERM_RELAX_SETPOINT
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } itermRelaxType_e;
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef struct pidProfile_s {
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t yaw_lowpass_hz;                // Additional yaw filter when yaw axis too noisy
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t dterm_lowpass_hz;              // Delta Filter in hz
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t dterm_notch_hz;                // Biquad dterm notch hz
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t dterm_notch_cutoff;            // Biquad dterm notch low cutoff
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     pidf_t  pid[PID_ITEM_COUNT];
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t dterm_filter_type;              // Filter selection for dterm
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t itermWindupPointPercent;        // Experimental ITerm windup threshold, percent motor s
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t pidSumLimit;
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t pidSumLimitYaw;
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t pidAtMinThrottle;               // Disable/Enable pids on zero throttle. Normally even 
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t levelAngleLimit;                // Max angle in degrees in level mode
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t horizon_tilt_effect;            // inclination factor for Horizon mode
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t horizon_tilt_expert_mode;       // OFF or ON
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     // Betaflight PID controller parameters
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t  antiGravityMode;             // type of anti gravity method
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t itermThrottleThreshold;        // max allowed throttle delta before iterm accelerated 
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t itermAcceleratorGain;          // Iterm Accelerator Gain when itermThrottlethreshold i
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t yawRateAccelLimit;             // yaw accel limiter for deg/sec/ms
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t rateAccelLimit;                // accel limiter roll/pitch deg/sec/ms
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_dthreshold;              // dterm crash value
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_gthreshold;              // gyro crash value
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_setpoint_threshold;      // setpoint must be below this value to detect crash, s
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_time;                    // ms
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_delay;                   // ms
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t crash_recovery_angle;           // degrees
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t crash_recovery_rate;            // degree/second
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t vbatPidCompensation;            // Scale PIDsum to battery voltage
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t feedForwardTransition;          // Feed forward weight transition
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t crash_limit_yaw;               // limits yaw errorRate, so crashes don't cause huge th
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t itermLimit;
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t dterm_lowpass2_hz;             // Extra PT1 Filter on D in hz
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t crash_recovery;                 // off, on, on and beeps when it is in crash recovery m
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t throttle_boost;                 // how much should throttle be boosted during transient
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t throttle_boost_cutoff;          // Which cutoff frequency to use for throttle boost. hi
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t iterm_rotation;                 // rotates iterm to translate world errors to local coo
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t smart_feedforward;              // takes only the larger of P and the D weight feed for
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t iterm_relax_type;               // Specifies type of relax algorithm
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t iterm_relax_cutoff;             // This cutoff frequency specifies a low pass filter wh
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t iterm_relax;                    // Enable iterm suppression during stick input
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t acro_trainer_angle_limit;       // Acro trainer roll/pitch angle limit in degrees
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t acro_trainer_debug_axis;        // The axis for which record debugging values are captu
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t acro_trainer_gain;              // The strength of the limiting. Raising may reduce ove
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t acro_trainer_lookahead_ms;     // The lookahead window in milliseconds used to reduce 
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t abs_control_gain;               // How strongly should the absolute accumulated error b
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t abs_control_limit;              // Limit to the correction
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t abs_control_error_limit;        // Limit to the accumulated error
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidProfile_t;
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #ifndef USE_OSD_SLAVE
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** PG_DECLARE_ARRAY(pidProfile_t, MAX_PROFILE_COUNT, pidProfiles);
 399              	 .loc 6 151 0
 400              	 .cfi_startproc
 401              	 
 402              	 
 403              	 
 404 0000 80B4     	 push {r7}
 405              	.LCFI38:
 406              	 .cfi_def_cfa_offset 4
 407              	 .cfi_offset 7,-4
 408 0002 83B0     	 sub sp,sp,#12
 409              	.LCFI39:
 410              	 .cfi_def_cfa_offset 16
 411 0004 00AF     	 add r7,sp,#0
 412              	.LCFI40:
 413              	 .cfi_def_cfa_register 7
 414 0006 7860     	 str r0,[r7,#4]
 415              	 .loc 6 151 0
 416 0008 7B68     	 ldr r3,[r7,#4]
 417 000a 5822     	 movs r2,#88
 418 000c 02FB03F3 	 mul r3,r2,r3
 419 0010 034A     	 ldr r2,.L39
 420 0012 1344     	 add r3,r3,r2
 421 0014 1846     	 mov r0,r3
 422 0016 0C37     	 adds r7,r7,#12
 423              	.LCFI41:
 424              	 .cfi_def_cfa_offset 4
 425 0018 BD46     	 mov sp,r7
 426              	.LCFI42:
 427              	 .cfi_def_cfa_register 13
 428              	 
 429 001a 5DF8047B 	 ldr r7,[sp],#4
 430              	.LCFI43:
 431              	 .cfi_restore 7
 432              	 .cfi_def_cfa_offset 0
 433 001e 7047     	 bx lr
 434              	.L40:
 435              	 .align 2
 436              	.L39:
 437 0020 00000000 	 .word pidProfiles_SystemArray
 438              	 .cfi_endproc
 439              	.LFE564:
 441              	 .section .text.pidConfig,"ax",%progbits
 442              	 .align 2
 443              	 .thumb
 444              	 .thumb_func
 446              	pidConfig:
 447              	.LFB566:
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** #endif
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** typedef struct pidConfig_s {
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t pid_process_denom;              // Processing denominator for PID controller vs gyro sa
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t runaway_takeoff_prevention;          // off, on - enables pidsum runaway disarm logic
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint16_t runaway_takeoff_deactivate_delay;   // delay in ms for "in-flight" conditions before d
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h ****     uint8_t runaway_takeoff_deactivate_throttle; // minimum throttle percent required during deacti
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** } pidConfig_t;
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** 
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\pid.h **** PG_DECLARE(pidConfig_t, pidConfig);
 448              	 .loc 6 161 0
 449              	 .cfi_startproc
 450              	 
 451              	 
 452              	 
 453 0000 80B4     	 push {r7}
 454              	.LCFI44:
 455              	 .cfi_def_cfa_offset 4
 456              	 .cfi_offset 7,-4
 457 0002 00AF     	 add r7,sp,#0
 458              	.LCFI45:
 459              	 .cfi_def_cfa_register 7
 460              	 .loc 6 161 0
 461 0004 024B     	 ldr r3,.L43
 462 0006 1846     	 mov r0,r3
 463 0008 BD46     	 mov sp,r7
 464              	.LCFI46:
 465              	 .cfi_def_cfa_register 13
 466              	 
 467 000a 5DF8047B 	 ldr r7,[sp],#4
 468              	.LCFI47:
 469              	 .cfi_restore 7
 470              	 .cfi_def_cfa_offset 0
 471 000e 7047     	 bx lr
 472              	.L44:
 473              	 .align 2
 474              	.L43:
 475 0010 00000000 	 .word pidConfig_System
 476              	 .cfi_endproc
 477              	.LFE566:
 479              	 .section .text.pidConfigMutable,"ax",%progbits
 480              	 .align 2
 481              	 .thumb
 482              	 .thumb_func
 484              	pidConfigMutable:
 485              	.LFB567:
 486              	 .loc 6 161 0
 487              	 .cfi_startproc
 488              	 
 489              	 
 490              	 
 491 0000 80B4     	 push {r7}
 492              	.LCFI48:
 493              	 .cfi_def_cfa_offset 4
 494              	 .cfi_offset 7,-4
 495 0002 00AF     	 add r7,sp,#0
 496              	.LCFI49:
 497              	 .cfi_def_cfa_register 7
 498              	 .loc 6 161 0
 499 0004 024B     	 ldr r3,.L47
 500 0006 1846     	 mov r0,r3
 501 0008 BD46     	 mov sp,r7
 502              	.LCFI50:
 503              	 .cfi_def_cfa_register 13
 504              	 
 505 000a 5DF8047B 	 ldr r7,[sp],#4
 506              	.LCFI51:
 507              	 .cfi_restore 7
 508              	 .cfi_def_cfa_offset 0
 509 000e 7047     	 bx lr
 510              	.L48:
 511              	 .align 2
 512              	.L47:
 513 0010 00000000 	 .word pidConfig_System
 514              	 .cfi_endproc
 515              	.LFE567:
 517              	 .comm inputSource_e,1,1
 518              	 .comm colors,4,4
 519              	 .comm modeColors,4,4
 520              	 .comm specialColors,11,4
 521              	 .section .text.serialConfig,"ax",%progbits
 522              	 .align 2
 523              	 .thumb
 524              	 .thumb_func
 526              	serialConfig:
 527              	.LFB590:
 528              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/serial.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include "drivers/serial.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     PORTSHARING_UNUSED = 0,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     PORTSHARING_NOT_SHARED,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     PORTSHARING_SHARED
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } portSharing_e;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_NONE                = 0,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_MSP                 = (1 << 0),  // 1
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_GPS                 = (1 << 1),  // 2
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_FRSKY_HUB = (1 << 2),  // 4
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_HOTT      = (1 << 3),  // 8
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_LTM       = (1 << 4),  // 16
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_SMARTPORT = (1 << 5),  // 32
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_RX_SERIAL           = (1 << 6),  // 64
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_BLACKBOX            = (1 << 7),  // 128
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_MAVLINK   = (1 << 9),  // 512
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_ESC_SENSOR          = (1 << 10), // 1024
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_VTX_SMARTAUDIO      = (1 << 11), // 2048
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_IBUS      = (1 << 12), // 4096
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_VTX_TRAMP           = (1 << 13), // 8192
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_RCDEVICE            = (1 << 14), // 16384
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_LIDAR_TF            = (1 << 15), // 32768
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortFunction_e;
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define TELEMETRY_SHAREABLE_PORT_FUNCTIONS_MASK (FUNCTION_TELEMETRY_FRSKY_HUB | FUNCTION_TELEMETRY_
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define TELEMETRY_PORT_FUNCTIONS_MASK (TELEMETRY_SHAREABLE_PORT_FUNCTIONS_MASK | FUNCTION_TELEMETRY
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_AUTO = 0,
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_9600,
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_19200,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_38400,
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_57600,
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_115200,
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_230400,
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_250000,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_400000,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_460800,
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_500000,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_921600,
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_1000000,
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_1500000,
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_2000000,
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_2470000
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } baudRate_e;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** extern const uint32_t baudRates[];
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** // serial port identifiers are now fixed, these values are used by MSP commands.
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_NONE = -1,
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART1 = 0,
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART2,
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART3,
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_UART4,
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_UART5,
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART6,
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART7,
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART8,
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USB_VCP = 20,
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_SOFTSERIAL1 = 30,
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_SOFTSERIAL2,
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS1 = 40,
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS2,
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS3,
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS4,
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS5,
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS6,
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortIdentifier_e;
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** extern const serialPortIdentifier_e serialPortIdentifiers[SERIAL_PORT_COUNT];
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define SERIAL_PORT_IDENTIFIER_TO_INDEX(x) (((x) <= SERIAL_PORT_USART8) ? (x) : (RESOURCE_SOFT_OFFS
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define SERIAL_PORT_IDENTIFIER_TO_UARTDEV(x) ((x) - SERIAL_PORT_USART1 + UARTDEV_1)
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** // runtime
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef struct serialPortUsage_s {
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPort_t *serialPort;
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortFunction_e function;
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortIdentifier_e identifier;
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortUsage_t;
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** serialPort_t *findSharedSerialPort(uint16_t functionMask, serialPortFunction_e sharedWithFunction);
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** // configuration
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef struct serialPortConfig_s {
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint16_t functionMask;
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortIdentifier_e identifier;
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t msp_baudrateIndex;
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t gps_baudrateIndex;
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t blackbox_baudrateIndex;
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t telemetry_baudrateIndex; // not used for all telemetry systems, e.g. HoTT only works at
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortConfig_t;
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef struct serialConfig_s {
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortConfig_t portConfigs[SERIAL_PORT_COUNT];
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint16_t serial_update_rate_hz;
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t reboot_character;               // which byte is used to reboot. Default 'R', could be 
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialConfig_t;
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** PG_DECLARE(serialConfig_t, serialConfig);
 529              	 .loc 7 135 0
 530              	 .cfi_startproc
 531              	 
 532              	 
 533              	 
 534 0000 80B4     	 push {r7}
 535              	.LCFI52:
 536              	 .cfi_def_cfa_offset 4
 537              	 .cfi_offset 7,-4
 538 0002 00AF     	 add r7,sp,#0
 539              	.LCFI53:
 540              	 .cfi_def_cfa_register 7
 541              	 .loc 7 135 0
 542 0004 024B     	 ldr r3,.L51
 543 0006 1846     	 mov r0,r3
 544 0008 BD46     	 mov sp,r7
 545              	.LCFI54:
 546              	 .cfi_def_cfa_register 13
 547              	 
 548 000a 5DF8047B 	 ldr r7,[sp],#4
 549              	.LCFI55:
 550              	 .cfi_restore 7
 551              	 .cfi_def_cfa_offset 0
 552 000e 7047     	 bx lr
 553              	.L52:
 554              	 .align 2
 555              	.L51:
 556 0010 00000000 	 .word serialConfig_System
 557              	 .cfi_endproc
 558              	.LFE590:
 560              	 .section .text.serialConfigMutable,"ax",%progbits
 561              	 .align 2
 562              	 .thumb
 563              	 .thumb_func
 565              	serialConfigMutable:
 566              	.LFB591:
 567              	 .loc 7 135 0
 568              	 .cfi_startproc
 569              	 
 570              	 
 571              	 
 572 0000 80B4     	 push {r7}
 573              	.LCFI56:
 574              	 .cfi_def_cfa_offset 4
 575              	 .cfi_offset 7,-4
 576 0002 00AF     	 add r7,sp,#0
 577              	.LCFI57:
 578              	 .cfi_def_cfa_register 7
 579              	 .loc 7 135 0
 580 0004 024B     	 ldr r3,.L55
 581 0006 1846     	 mov r0,r3
 582 0008 BD46     	 mov sp,r7
 583              	.LCFI58:
 584              	 .cfi_def_cfa_register 13
 585              	 
 586 000a 5DF8047B 	 ldr r7,[sp],#4
 587              	.LCFI59:
 588              	 .cfi_restore 7
 589              	 .cfi_def_cfa_offset 0
 590 000e 7047     	 bx lr
 591              	.L56:
 592              	 .align 2
 593              	.L55:
 594 0010 00000000 	 .word serialConfig_System
 595              	 .cfi_endproc
 596              	.LFE591:
 598              	 .section .text.rxConfig,"ax",%progbits
 599              	 .align 2
 600              	 .thumb
 601              	 .thumb_func
 603              	rxConfig:
 604              	.LFB596:
 605              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #include "drivers/io_types.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** typedef struct rxConfig_s {
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcmap[RX_MAPPABLE_CHANNEL_COUNT];  // mapping of radio channels to internal RPYTA+ orde
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t serialrx_provider;              // type of UART-based receiver (0 = spek 10, 1 = spek 1
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t serialrx_inverted;              // invert the serial RX protocol compared to it's defau
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t halfDuplex;                     // allow rx to operate in half duplex mode on F4, ignor
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     ioTag_t spektrum_bind_pin_override_ioTag;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     ioTag_t spektrum_bind_plug_ioTag;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t spektrum_sat_bind;              // number of bind pulses for Spektrum satellite receive
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t spektrum_sat_bind_autoreset;    // whenever we will reset (exit) binding mode after har
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_channel;
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_scale;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_invert;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t midrc;                         // Some radios have not a neutral point centered on 150
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t mincheck;                      // minimum rc end
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t maxcheck;                      // maximum rc end
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolation;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolationChannels;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolationInterval;
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t fpvCamAngleDegrees;             // Camera angle to be scaled into rc commands
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t airModeActivateThreshold;       // Throttle setpoint percent where airmode gets activat
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t rx_min_usec;
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t rx_max_usec;
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t max_aux_channel;
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_src_frame_errors;          // true to use frame drop flags in the rx protocol
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     int8_t rssi_offset;                     // offset applied to the RSSI value before it is return
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_type;              // Determines the smoothing algorithm to use: INTERPOLA
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_input_cutoff;      // Filter cutoff frequency for the input filter (0 = au
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_derivative_cutoff; // Filter cutoff frequency for the setpoint weight deri
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_debug_axis;        // Axis to log as debug values when debug_mode = RC_SMO
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_input_type;        // Input filter type (0 = PT1, 1 = BIQUAD)
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_derivative_type;   // Derivative filter type (0 = OFF, 1 = PT1, 2 = BIQUAD
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** } rxConfig_t;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** PG_DECLARE(rxConfig_t, rxConfig);
 606              	 .loc 8 61 0
 607              	 .cfi_startproc
 608              	 
 609              	 
 610              	 
 611 0000 80B4     	 push {r7}
 612              	.LCFI60:
 613              	 .cfi_def_cfa_offset 4
 614              	 .cfi_offset 7,-4
 615 0002 00AF     	 add r7,sp,#0
 616              	.LCFI61:
 617              	 .cfi_def_cfa_register 7
 618              	 .loc 8 61 0
 619 0004 024B     	 ldr r3,.L59
 620 0006 1846     	 mov r0,r3
 621 0008 BD46     	 mov sp,r7
 622              	.LCFI62:
 623              	 .cfi_def_cfa_register 13
 624              	 
 625 000a 5DF8047B 	 ldr r7,[sp],#4
 626              	.LCFI63:
 627              	 .cfi_restore 7
 628              	 .cfi_def_cfa_offset 0
 629 000e 7047     	 bx lr
 630              	.L60:
 631              	 .align 2
 632              	.L59:
 633 0010 00000000 	 .word rxConfig_System
 634              	 .cfi_endproc
 635              	.LFE596:
 637              	 .section .text.rxConfigMutable,"ax",%progbits
 638              	 .align 2
 639              	 .thumb
 640              	 .thumb_func
 642              	rxConfigMutable:
 643              	.LFB597:
 644              	 .loc 8 61 0
 645              	 .cfi_startproc
 646              	 
 647              	 
 648              	 
 649 0000 80B4     	 push {r7}
 650              	.LCFI64:
 651              	 .cfi_def_cfa_offset 4
 652              	 .cfi_offset 7,-4
 653 0002 00AF     	 add r7,sp,#0
 654              	.LCFI65:
 655              	 .cfi_def_cfa_register 7
 656              	 .loc 8 61 0
 657 0004 024B     	 ldr r3,.L63
 658 0006 1846     	 mov r0,r3
 659 0008 BD46     	 mov sp,r7
 660              	.LCFI66:
 661              	 .cfi_def_cfa_register 13
 662              	 
 663 000a 5DF8047B 	 ldr r7,[sp],#4
 664              	.LCFI67:
 665              	 .cfi_restore 7
 666              	 .cfi_def_cfa_offset 0
 667 000e 7047     	 bx lr
 668              	.L64:
 669              	 .align 2
 670              	.L63:
 671 0010 00000000 	 .word rxConfig_System
 672              	 .cfi_endproc
 673              	.LFE597:
 675              	 .section .text.gyroConfig,"ax",%progbits
 676              	 .align 2
 677              	 .thumb
 678              	 .thumb_func
 680              	gyroConfig:
 681              	.LFB604:
 682              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/gyro.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "common/axis.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "common/time.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "drivers/bus.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "drivers/sensor.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_NONE = 0,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_DEFAULT,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU6050,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_L3G4200D,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU3050,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_L3GD20,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU6000,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU6500,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU9250,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20601,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20602,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20608G,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20649,
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20689,
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_BMI160,
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_FAKE
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyroSensor_e;
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef struct gyro_s {
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint32_t targetLooptime;
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     float gyroADCf[XYZ_AXIS_COUNT];
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyro_t;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** extern gyro_t gyro;
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef enum {
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_OVERFLOW_CHECK_NONE = 0,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_OVERFLOW_CHECK_YAW,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_OVERFLOW_CHECK_ALL_AXES
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyroOverflowCheck_e;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #define GYRO_CONFIG_USE_GYRO_1      0
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #define GYRO_CONFIG_USE_GYRO_2      1
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #define GYRO_CONFIG_USE_GYRO_BOTH   2
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef enum {
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     FILTER_LOWPASS = 0,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     FILTER_LOWPASS2
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } filterSlots;
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef struct gyroConfig_s {
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_align;                       // gyro alignment
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyroMovementCalibrationThreshold; // people keep forgetting that moving model while in
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_sync_denom;                  // Gyro sample divider
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_hardware_lpf;                // gyro DLPF setting
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_32khz_hardware_lpf;          // gyro 32khz DLPF setting
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_high_fsr;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_use_32khz;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_to_use;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_lowpass_hz;
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_lowpass2_hz;
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_hz_1;
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_cutoff_1;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_hz_2;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_cutoff_2;
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     int16_t  gyro_offset_yaw;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  checkOverflow;
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     // Lowpass primary/secondary
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_lowpass_type;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_lowpass2_type;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  yaw_spin_recovery;
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     int16_t  yaw_spin_threshold;
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyroCalibrationDuration;  // Gyro calibration duration in 1/100 second
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t dyn_notch_quality; // bandpass quality factor, 100 for steep sided bandpass
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t dyn_notch_width_percent;
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyroConfig_t;
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** PG_DECLARE(gyroConfig_t, gyroConfig);
 683              	 .loc 9 103 0
 684              	 .cfi_startproc
 685              	 
 686              	 
 687              	 
 688 0000 80B4     	 push {r7}
 689              	.LCFI68:
 690              	 .cfi_def_cfa_offset 4
 691              	 .cfi_offset 7,-4
 692 0002 00AF     	 add r7,sp,#0
 693              	.LCFI69:
 694              	 .cfi_def_cfa_register 7
 695              	 .loc 9 103 0
 696 0004 024B     	 ldr r3,.L67
 697 0006 1846     	 mov r0,r3
 698 0008 BD46     	 mov sp,r7
 699              	.LCFI70:
 700              	 .cfi_def_cfa_register 13
 701              	 
 702 000a 5DF8047B 	 ldr r7,[sp],#4
 703              	.LCFI71:
 704              	 .cfi_restore 7
 705              	 .cfi_def_cfa_offset 0
 706 000e 7047     	 bx lr
 707              	.L68:
 708              	 .align 2
 709              	.L67:
 710 0010 00000000 	 .word gyroConfig_System
 711              	 .cfi_endproc
 712              	.LFE604:
 714              	 .section .text.gyroConfigMutable,"ax",%progbits
 715              	 .align 2
 716              	 .thumb
 717              	 .thumb_func
 719              	gyroConfigMutable:
 720              	.LFB605:
 721              	 .loc 9 103 0
 722              	 .cfi_startproc
 723              	 
 724              	 
 725              	 
 726 0000 80B4     	 push {r7}
 727              	.LCFI72:
 728              	 .cfi_def_cfa_offset 4
 729              	 .cfi_offset 7,-4
 730 0002 00AF     	 add r7,sp,#0
 731              	.LCFI73:
 732              	 .cfi_def_cfa_register 7
 733              	 .loc 9 103 0
 734 0004 024B     	 ldr r3,.L71
 735 0006 1846     	 mov r0,r3
 736 0008 BD46     	 mov sp,r7
 737              	.LCFI74:
 738              	 .cfi_def_cfa_register 13
 739              	 
 740 000a 5DF8047B 	 ldr r7,[sp],#4
 741              	.LCFI75:
 742              	 .cfi_restore 7
 743              	 .cfi_def_cfa_offset 0
 744 000e 7047     	 bx lr
 745              	.L72:
 746              	 .align 2
 747              	.L71:
 748 0010 00000000 	 .word gyroConfig_System
 749              	 .cfi_endproc
 750              	.LFE605:
 752              	 .section .text.accelerometerConfigMutable,"ax",%progbits
 753              	 .align 2
 754              	 .thumb
 755              	 .thumb_func
 757              	accelerometerConfigMutable:
 758              	.LFB611:
 759              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/acceleration.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #include "common/time.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #include "pg/pg.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #include "drivers/accgyro/accgyro.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #include "sensors/sensors.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** // Type of accelerometer used/detected
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_DEFAULT,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_NONE,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ADXL345,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MPU6050,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MMA8452,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_BMA280,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_LSM303DLHC,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MPU6000,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MPU6500,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MPU9250,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20601,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20602,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20608G,
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20649,
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20689,
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_BMI160,
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_FAKE
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } accelerationSensor_e;
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef struct acc_s {
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     accDev_t dev;
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     uint32_t accSamplingInterval;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     float accADC[XYZ_AXIS_COUNT];
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     bool isAccelUpdatedAtLeastOnce;
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } acc_t;
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** extern acc_t acc;
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef struct rollAndPitchTrims_s {
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     int16_t roll;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     int16_t pitch;
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } rollAndPitchTrims_t_def;
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef union rollAndPitchTrims_u {
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     int16_t raw[2];
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     rollAndPitchTrims_t_def values;
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } rollAndPitchTrims_t;
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef struct accelerometerConfig_s {
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     uint16_t acc_lpf_hz;                    // cutoff frequency for the low pass filter used on the
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     sensor_align_e acc_align;               // acc alignment
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     uint8_t acc_hardware;                   // Which acc hardware to use on boards with more than o
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     bool acc_high_fsr;
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     flightDynamicsTrims_t accZero;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     rollAndPitchTrims_t accelerometerTrims;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } accelerometerConfig_t;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** PG_DECLARE(accelerometerConfig_t, accelerometerConfig);
 760              	 .loc 10 78 0
 761              	 .cfi_startproc
 762              	 
 763              	 
 764              	 
 765 0000 80B4     	 push {r7}
 766              	.LCFI76:
 767              	 .cfi_def_cfa_offset 4
 768              	 .cfi_offset 7,-4
 769 0002 00AF     	 add r7,sp,#0
 770              	.LCFI77:
 771              	 .cfi_def_cfa_register 7
 772              	 .loc 10 78 0
 773 0004 024B     	 ldr r3,.L75
 774 0006 1846     	 mov r0,r3
 775 0008 BD46     	 mov sp,r7
 776              	.LCFI78:
 777              	 .cfi_def_cfa_register 13
 778              	 
 779 000a 5DF8047B 	 ldr r7,[sp],#4
 780              	.LCFI79:
 781              	 .cfi_restore 7
 782              	 .cfi_def_cfa_offset 0
 783 000e 7047     	 bx lr
 784              	.L76:
 785              	 .align 2
 786              	.L75:
 787 0010 00000000 	 .word accelerometerConfig_System
 788              	 .cfi_endproc
 789              	.LFE611:
 791              	 .comm currentPidProfile,4,4
 792              	 .comm pilotConfig_System,17,4
 793              	 .comm pilotConfig_Copy,17,4
 794              	 .global pilotConfig_Registry
 795              	 .section .pg_registry,"a",%progbits
 796              	 .align 2
 799              	pilotConfig_Registry:
 800 0000 2F00     	 .short 47
 801 0002 1100     	 .short 17
 802 0004 00000000 	 .word pilotConfig_System
 803 0008 00000000 	 .word pilotConfig_Copy
 804 000c 00000000 	 .word 0
 805 0010 00000000 	 .word pgResetTemplate_pilotConfig
 806              	 .global pgResetTemplate_pilotConfig
 807              	 .section .pg_resetdata,"a",%progbits
 808              	 .align 1
 811              	pgResetTemplate_pilotConfig:
 812 0000 00000000 	 .space 17
 812      00000000 
 812      00000000 
 812      00000000 
 812      00
 813              	 .comm systemConfig_System,13,4
 814              	 .comm systemConfig_Copy,13,4
 815              	 .global systemConfig_Registry
 816              	 .section .pg_registry
 817              	 .align 2
 820              	systemConfig_Registry:
 821 0014 1220     	 .short 8210
 822 0016 0D00     	 .short 13
 823 0018 00000000 	 .word systemConfig_System
 824 001c 00000000 	 .word systemConfig_Copy
 825 0020 00000000 	 .word 0
 826 0024 00000000 	 .word pgResetTemplate_systemConfig
 827              	 .global pgResetTemplate_systemConfig
 828              	 .section .pg_resetdata
 829 0011 00       	 .align 1
 832              	pgResetTemplate_systemConfig:
 833 0012 00       	 .byte 0
 834 0013 00       	 .byte 0
 835 0014 00       	 .byte 0
 836 0015 01       	 .byte 1
 837 0016 00       	 .space 1
 838 0017 00       	 .byte 0
 839 0018 05       	 .byte 5
 840 0019 4C454455 	 .ascii "LEDU\000"
 840      00
 841 001e 00       	 .space 1
 842 001f 00       	 .section .text.getCurrentPidProfileIndex,"ax",%progbits
 843              	 .align 2
 844              	 .global getCurrentPidProfileIndex
 845              	 .thumb
 846              	 .thumb_func
 848              	getCurrentPidProfileIndex:
 849              	.LFB621:
 850              	 .file 11 "../cleanflight/src/main/fc/config.c"
   1:../cleanflight/src/main/fc/config.c **** /*
   2:../cleanflight/src/main/fc/config.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/fc/config.c ****  *
   4:../cleanflight/src/main/fc/config.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/fc/config.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/fc/config.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/fc/config.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/fc/config.c ****  * any later version.
   9:../cleanflight/src/main/fc/config.c ****  *
  10:../cleanflight/src/main/fc/config.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/fc/config.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/fc/config.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/fc/config.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/fc/config.c ****  *
  15:../cleanflight/src/main/fc/config.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/fc/config.c ****  * along with this software.
  17:../cleanflight/src/main/fc/config.c ****  *
  18:../cleanflight/src/main/fc/config.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/fc/config.c ****  */
  20:../cleanflight/src/main/fc/config.c **** 
  21:../cleanflight/src/main/fc/config.c **** #include <stdbool.h>
  22:../cleanflight/src/main/fc/config.c **** #include <stdint.h>
  23:../cleanflight/src/main/fc/config.c **** #include <string.h>
  24:../cleanflight/src/main/fc/config.c **** #include <math.h>
  25:../cleanflight/src/main/fc/config.c **** 
  26:../cleanflight/src/main/fc/config.c **** #include "platform.h"
  27:../cleanflight/src/main/fc/config.c **** 
  28:../cleanflight/src/main/fc/config.c **** #include "build/debug.h"
  29:../cleanflight/src/main/fc/config.c **** 
  30:../cleanflight/src/main/fc/config.c **** #include "config/config_eeprom.h"
  31:../cleanflight/src/main/fc/config.c **** #include "config/feature.h"
  32:../cleanflight/src/main/fc/config.c **** 
  33:../cleanflight/src/main/fc/config.c **** #include "drivers/system.h"
  34:../cleanflight/src/main/fc/config.c **** #include "drivers/timer.h"
  35:../cleanflight/src/main/fc/config.c **** #include "drivers/transponder_ir.h"
  36:../cleanflight/src/main/fc/config.c **** 
  37:../cleanflight/src/main/fc/config.c **** #include "fc/config.h"
  38:../cleanflight/src/main/fc/config.c **** #include "fc/controlrate_profile.h"
  39:../cleanflight/src/main/fc/config.c **** #include "fc/fc_core.h"
  40:../cleanflight/src/main/fc/config.c **** #include "fc/fc_rc.h"
  41:../cleanflight/src/main/fc/config.c **** #include "fc/rc_adjustments.h"
  42:../cleanflight/src/main/fc/config.c **** #include "fc/rc_controls.h"
  43:../cleanflight/src/main/fc/config.c **** 
  44:../cleanflight/src/main/fc/config.c **** #include "flight/failsafe.h"
  45:../cleanflight/src/main/fc/config.c **** #include "flight/imu.h"
  46:../cleanflight/src/main/fc/config.c **** #include "flight/mixer.h"
  47:../cleanflight/src/main/fc/config.c **** #include "flight/pid.h"
  48:../cleanflight/src/main/fc/config.c **** #include "flight/servos.h"
  49:../cleanflight/src/main/fc/config.c **** 
  50:../cleanflight/src/main/fc/config.c **** #include "io/beeper.h"
  51:../cleanflight/src/main/fc/config.c **** #include "io/ledstrip.h"
  52:../cleanflight/src/main/fc/config.c **** #include "io/serial.h"
  53:../cleanflight/src/main/fc/config.c **** 
  54:../cleanflight/src/main/fc/config.c **** #include "pg/beeper.h"
  55:../cleanflight/src/main/fc/config.c **** #include "pg/beeper_dev.h"
  56:../cleanflight/src/main/fc/config.c **** #include "pg/rx.h"
  57:../cleanflight/src/main/fc/config.c **** #include "pg/pg.h"
  58:../cleanflight/src/main/fc/config.c **** #include "pg/pg_ids.h"
  59:../cleanflight/src/main/fc/config.c **** 
  60:../cleanflight/src/main/fc/config.c **** #include "rx/rx.h"
  61:../cleanflight/src/main/fc/config.c **** 
  62:../cleanflight/src/main/fc/config.c **** #include "sensors/acceleration.h"
  63:../cleanflight/src/main/fc/config.c **** #include "sensors/battery.h"
  64:../cleanflight/src/main/fc/config.c **** #include "sensors/gyro.h"
  65:../cleanflight/src/main/fc/config.c **** 
  66:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
  67:../cleanflight/src/main/fc/config.c **** pidProfile_t *currentPidProfile;
  68:../cleanflight/src/main/fc/config.c **** #endif
  69:../cleanflight/src/main/fc/config.c **** 
  70:../cleanflight/src/main/fc/config.c **** #ifndef RX_SPI_DEFAULT_PROTOCOL
  71:../cleanflight/src/main/fc/config.c **** #define RX_SPI_DEFAULT_PROTOCOL 0
  72:../cleanflight/src/main/fc/config.c **** #endif
  73:../cleanflight/src/main/fc/config.c **** 
  74:../cleanflight/src/main/fc/config.c **** #define DYNAMIC_FILTER_MAX_SUPPORTED_LOOP_TIME HZ_TO_INTERVAL_US(2000)
  75:../cleanflight/src/main/fc/config.c **** 
  76:../cleanflight/src/main/fc/config.c **** PG_REGISTER_WITH_RESET_TEMPLATE(pilotConfig_t, pilotConfig, PG_PILOT_CONFIG, 0);
  77:../cleanflight/src/main/fc/config.c **** 
  78:../cleanflight/src/main/fc/config.c **** PG_RESET_TEMPLATE(pilotConfig_t, pilotConfig,
  79:../cleanflight/src/main/fc/config.c ****     .name = { 0 }
  80:../cleanflight/src/main/fc/config.c **** );
  81:../cleanflight/src/main/fc/config.c **** 
  82:../cleanflight/src/main/fc/config.c **** PG_REGISTER_WITH_RESET_TEMPLATE(systemConfig_t, systemConfig, PG_SYSTEM_CONFIG, 2);
  83:../cleanflight/src/main/fc/config.c **** 
  84:../cleanflight/src/main/fc/config.c **** PG_RESET_TEMPLATE(systemConfig_t, systemConfig,
  85:../cleanflight/src/main/fc/config.c ****     .pidProfileIndex = 0,
  86:../cleanflight/src/main/fc/config.c ****     .activeRateProfile = 0,
  87:../cleanflight/src/main/fc/config.c ****     .debug_mode = DEBUG_MODE,
  88:../cleanflight/src/main/fc/config.c ****     .task_statistics = true,
  89:../cleanflight/src/main/fc/config.c ****     .cpu_overclock = 0,
  90:../cleanflight/src/main/fc/config.c ****     .powerOnArmingGraceTime = 5,
  91:../cleanflight/src/main/fc/config.c ****     .boardIdentifier = TARGET_BOARD_IDENTIFIER
  92:../cleanflight/src/main/fc/config.c **** );
  93:../cleanflight/src/main/fc/config.c **** 
  94:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
  95:../cleanflight/src/main/fc/config.c **** uint8_t getCurrentPidProfileIndex(void)
  96:../cleanflight/src/main/fc/config.c **** {
 851              	 .loc 11 96 0
 852              	 .cfi_startproc
 853              	 
 854              	 
 855 0000 80B5     	 push {r7,lr}
 856              	.LCFI80:
 857              	 .cfi_def_cfa_offset 8
 858              	 .cfi_offset 7,-8
 859              	 .cfi_offset 14,-4
 860 0002 00AF     	 add r7,sp,#0
 861              	.LCFI81:
 862              	 .cfi_def_cfa_register 7
  97:../cleanflight/src/main/fc/config.c ****     return systemConfig()->pidProfileIndex;
 863              	 .loc 11 97 0
 864 0004 FFF7FEFF 	 bl systemConfig
 865 0008 0346     	 mov r3,r0
 866 000a 1B78     	 ldrb r3,[r3]
  98:../cleanflight/src/main/fc/config.c **** }
 867              	 .loc 11 98 0
 868 000c 1846     	 mov r0,r3
 869 000e 80BD     	 pop {r7,pc}
 870              	 .cfi_endproc
 871              	.LFE621:
 873              	 .section .text.loadPidProfile,"ax",%progbits
 874              	 .align 2
 875              	 .thumb
 876              	 .thumb_func
 878              	loadPidProfile:
 879              	.LFB622:
  99:../cleanflight/src/main/fc/config.c **** 
 100:../cleanflight/src/main/fc/config.c **** static void loadPidProfile(void)
 101:../cleanflight/src/main/fc/config.c **** {
 880              	 .loc 11 101 0
 881              	 .cfi_startproc
 882              	 
 883              	 
 884 0000 80B5     	 push {r7,lr}
 885              	.LCFI82:
 886              	 .cfi_def_cfa_offset 8
 887              	 .cfi_offset 7,-8
 888              	 .cfi_offset 14,-4
 889 0002 00AF     	 add r7,sp,#0
 890              	.LCFI83:
 891              	 .cfi_def_cfa_register 7
 102:../cleanflight/src/main/fc/config.c ****     currentPidProfile = pidProfilesMutable(systemConfig()->pidProfileIndex);
 892              	 .loc 11 102 0
 893 0004 FFF7FEFF 	 bl systemConfig
 894 0008 0346     	 mov r3,r0
 895 000a 1B78     	 ldrb r3,[r3]
 896 000c 1846     	 mov r0,r3
 897 000e FFF7FEFF 	 bl pidProfilesMutable
 898 0012 0246     	 mov r2,r0
 899 0014 014B     	 ldr r3,.L80
 900 0016 1A60     	 str r2,[r3]
 103:../cleanflight/src/main/fc/config.c **** }
 901              	 .loc 11 103 0
 902 0018 80BD     	 pop {r7,pc}
 903              	.L81:
 904 001a 00BF     	 .align 2
 905              	.L80:
 906 001c 00000000 	 .word currentPidProfile
 907              	 .cfi_endproc
 908              	.LFE622:
 910              	 .section .text.getCurrentControlRateProfileIndex,"ax",%progbits
 911              	 .align 2
 912              	 .global getCurrentControlRateProfileIndex
 913              	 .thumb
 914              	 .thumb_func
 916              	getCurrentControlRateProfileIndex:
 917              	.LFB623:
 104:../cleanflight/src/main/fc/config.c **** 
 105:../cleanflight/src/main/fc/config.c **** uint8_t getCurrentControlRateProfileIndex(void)
 106:../cleanflight/src/main/fc/config.c **** {
 918              	 .loc 11 106 0
 919              	 .cfi_startproc
 920              	 
 921              	 
 922 0000 80B5     	 push {r7,lr}
 923              	.LCFI84:
 924              	 .cfi_def_cfa_offset 8
 925              	 .cfi_offset 7,-8
 926              	 .cfi_offset 14,-4
 927 0002 00AF     	 add r7,sp,#0
 928              	.LCFI85:
 929              	 .cfi_def_cfa_register 7
 107:../cleanflight/src/main/fc/config.c ****     return systemConfig()->activeRateProfile;
 930              	 .loc 11 107 0
 931 0004 FFF7FEFF 	 bl systemConfig
 932 0008 0346     	 mov r3,r0
 933 000a 5B78     	 ldrb r3,[r3,#1]
 108:../cleanflight/src/main/fc/config.c **** }
 934              	 .loc 11 108 0
 935 000c 1846     	 mov r0,r3
 936 000e 80BD     	 pop {r7,pc}
 937              	 .cfi_endproc
 938              	.LFE623:
 940              	 .section .text.getCurrentMinthrottle,"ax",%progbits
 941              	 .align 2
 942              	 .global getCurrentMinthrottle
 943              	 .thumb
 944              	 .thumb_func
 946              	getCurrentMinthrottle:
 947              	.LFB624:
 109:../cleanflight/src/main/fc/config.c **** 
 110:../cleanflight/src/main/fc/config.c **** uint16_t getCurrentMinthrottle(void)
 111:../cleanflight/src/main/fc/config.c **** {
 948              	 .loc 11 111 0
 949              	 .cfi_startproc
 950              	 
 951              	 
 952 0000 80B5     	 push {r7,lr}
 953              	.LCFI86:
 954              	 .cfi_def_cfa_offset 8
 955              	 .cfi_offset 7,-8
 956              	 .cfi_offset 14,-4
 957 0002 00AF     	 add r7,sp,#0
 958              	.LCFI87:
 959              	 .cfi_def_cfa_register 7
 112:../cleanflight/src/main/fc/config.c ****     return motorConfig()->minthrottle;
 960              	 .loc 11 112 0
 961 0004 FFF7FEFF 	 bl motorConfig
 962 0008 0346     	 mov r3,r0
 963 000a 1B8A     	 ldrh r3,[r3,#16]
 964 000c 9BB2     	 uxth r3,r3
 113:../cleanflight/src/main/fc/config.c **** }
 965              	 .loc 11 113 0
 966 000e 1846     	 mov r0,r3
 967 0010 80BD     	 pop {r7,pc}
 968              	 .cfi_endproc
 969              	.LFE624:
 971 0012 00BF     	 .section .text.resetConfigs,"ax",%progbits
 972              	 .align 2
 973              	 .global resetConfigs
 974              	 .thumb
 975              	 .thumb_func
 977              	resetConfigs:
 978              	.LFB625:
 114:../cleanflight/src/main/fc/config.c **** #endif // USE_OSD_SLAVE
 115:../cleanflight/src/main/fc/config.c **** 
 116:../cleanflight/src/main/fc/config.c **** void resetConfigs(void)
 117:../cleanflight/src/main/fc/config.c **** {
 979              	 .loc 11 117 0
 980              	 .cfi_startproc
 981              	 
 982              	 
 983 0000 80B5     	 push {r7,lr}
 984              	.LCFI88:
 985              	 .cfi_def_cfa_offset 8
 986              	 .cfi_offset 7,-8
 987              	 .cfi_offset 14,-4
 988 0002 00AF     	 add r7,sp,#0
 989              	.LCFI89:
 990              	 .cfi_def_cfa_register 7
 118:../cleanflight/src/main/fc/config.c ****     pgResetAll();
 991              	 .loc 11 118 0
 992 0004 FFF7FEFF 	 bl pgResetAll
 119:../cleanflight/src/main/fc/config.c **** 
 120:../cleanflight/src/main/fc/config.c **** #if defined(USE_TARGET_CONFIG)
 121:../cleanflight/src/main/fc/config.c ****     targetConfiguration();
 993              	 .loc 11 121 0
 994 0008 FFF7FEFF 	 bl targetConfiguration
 122:../cleanflight/src/main/fc/config.c **** #endif
 123:../cleanflight/src/main/fc/config.c **** }
 995              	 .loc 11 123 0
 996 000c 80BD     	 pop {r7,pc}
 997              	 .cfi_endproc
 998              	.LFE625:
 1000 000e 00BF     	 .section .text.activateConfig,"ax",%progbits
 1001              	 .align 2
 1002              	 .thumb
 1003              	 .thumb_func
 1005              	activateConfig:
 1006              	.LFB626:
 124:../cleanflight/src/main/fc/config.c **** 
 125:../cleanflight/src/main/fc/config.c **** static void activateConfig(void)
 126:../cleanflight/src/main/fc/config.c **** {
 1007              	 .loc 11 126 0
 1008              	 .cfi_startproc
 1009              	 
 1010              	 
 1011 0000 98B5     	 push {r3,r4,r7,lr}
 1012              	.LCFI90:
 1013              	 .cfi_def_cfa_offset 16
 1014              	 .cfi_offset 3,-16
 1015              	 .cfi_offset 4,-12
 1016              	 .cfi_offset 7,-8
 1017              	 .cfi_offset 14,-4
 1018 0002 00AF     	 add r7,sp,#0
 1019              	.LCFI91:
 1020              	 .cfi_def_cfa_register 7
 127:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
 128:../cleanflight/src/main/fc/config.c ****     loadPidProfile();
 1021              	 .loc 11 128 0
 1022 0004 FFF7FEFF 	 bl loadPidProfile
 129:../cleanflight/src/main/fc/config.c ****     loadControlRateProfile();
 1023              	 .loc 11 129 0
 1024 0008 FFF7FEFF 	 bl loadControlRateProfile
 130:../cleanflight/src/main/fc/config.c **** 
 131:../cleanflight/src/main/fc/config.c ****     initRcProcessing();
 1025              	 .loc 11 131 0
 1026 000c FFF7FEFF 	 bl initRcProcessing
 132:../cleanflight/src/main/fc/config.c **** 
 133:../cleanflight/src/main/fc/config.c ****     resetAdjustmentStates();
 1027              	 .loc 11 133 0
 1028 0010 FFF7FEFF 	 bl resetAdjustmentStates
 134:../cleanflight/src/main/fc/config.c **** 
 135:../cleanflight/src/main/fc/config.c ****     pidInit(currentPidProfile);
 1029              	 .loc 11 135 0
 1030 0014 134B     	 ldr r3,.L88
 1031 0016 1B68     	 ldr r3,[r3]
 1032 0018 1846     	 mov r0,r3
 1033 001a FFF7FEFF 	 bl pidInit
 136:../cleanflight/src/main/fc/config.c ****     useRcControlsConfig(currentPidProfile);
 1034              	 .loc 11 136 0
 1035 001e 114B     	 ldr r3,.L88
 1036 0020 1B68     	 ldr r3,[r3]
 1037 0022 1846     	 mov r0,r3
 1038 0024 FFF7FEFF 	 bl useRcControlsConfig
 137:../cleanflight/src/main/fc/config.c ****     useAdjustmentConfig(currentPidProfile);
 1039              	 .loc 11 137 0
 1040 0028 0E4B     	 ldr r3,.L88
 1041 002a 1B68     	 ldr r3,[r3]
 1042 002c 1846     	 mov r0,r3
 1043 002e FFF7FEFF 	 bl useAdjustmentConfig
 138:../cleanflight/src/main/fc/config.c **** 
 139:../cleanflight/src/main/fc/config.c ****     failsafeReset();
 1044              	 .loc 11 139 0
 1045 0032 FFF7FEFF 	 bl failsafeReset
 140:../cleanflight/src/main/fc/config.c ****     setAccelerationTrims(&accelerometerConfigMutable()->accZero);
 1046              	 .loc 11 140 0
 1047 0036 FFF7FEFF 	 bl accelerometerConfigMutable
 1048 003a 0346     	 mov r3,r0
 1049 003c 0533     	 adds r3,r3,#5
 1050 003e 1846     	 mov r0,r3
 1051 0040 FFF7FEFF 	 bl setAccelerationTrims
 141:../cleanflight/src/main/fc/config.c ****     accInitFilters();
 1052              	 .loc 11 141 0
 1053 0044 FFF7FEFF 	 bl accInitFilters
 142:../cleanflight/src/main/fc/config.c **** 
 143:../cleanflight/src/main/fc/config.c ****     imuConfigure(throttleCorrectionConfig()->throttle_correction_angle, throttleCorrectionConfig()-
 1054              	 .loc 11 143 0
 1055 0048 FFF7FEFF 	 bl throttleCorrectionConfig
 1056 004c 0346     	 mov r3,r0
 1057 004e 1B88     	 ldrh r3,[r3]
 1058 0050 9CB2     	 uxth r4,r3
 1059 0052 FFF7FEFF 	 bl throttleCorrectionConfig
 1060 0056 0346     	 mov r3,r0
 1061 0058 9B78     	 ldrb r3,[r3,#2]
 1062 005a 2046     	 mov r0,r4
 1063 005c 1946     	 mov r1,r3
 1064 005e FFF7FEFF 	 bl imuConfigure
 144:../cleanflight/src/main/fc/config.c **** #endif // USE_OSD_SLAVE
 145:../cleanflight/src/main/fc/config.c **** 
 146:../cleanflight/src/main/fc/config.c **** #ifdef USE_LED_STRIP
 147:../cleanflight/src/main/fc/config.c ****     reevaluateLedConfig();
 148:../cleanflight/src/main/fc/config.c **** #endif
 149:../cleanflight/src/main/fc/config.c **** }
 1065              	 .loc 11 149 0
 1066 0062 98BD     	 pop {r3,r4,r7,pc}
 1067              	.L89:
 1068              	 .align 2
 1069              	.L88:
 1070 0064 00000000 	 .word currentPidProfile
 1071              	 .cfi_endproc
 1072              	.LFE626:
 1074              	 .section .text.validateAndFixConfig,"ax",%progbits
 1075              	 .align 2
 1076              	 .thumb
 1077              	 .thumb_func
 1079              	validateAndFixConfig:
 1080              	.LFB627:
 150:../cleanflight/src/main/fc/config.c **** 
 151:../cleanflight/src/main/fc/config.c **** static void validateAndFixConfig(void)
 152:../cleanflight/src/main/fc/config.c **** {
 1081              	 .loc 11 152 0
 1082              	 .cfi_startproc
 1083              	 
 1084              	 
 1085 0000 80B5     	 push {r7,lr}
 1086              	.LCFI92:
 1087              	 .cfi_def_cfa_offset 8
 1088              	 .cfi_offset 7,-8
 1089              	 .cfi_offset 14,-4
 1090 0002 84B0     	 sub sp,sp,#16
 1091              	.LCFI93:
 1092              	 .cfi_def_cfa_offset 24
 1093 0004 00AF     	 add r7,sp,#0
 1094              	.LCFI94:
 1095              	 .cfi_def_cfa_register 7
 153:../cleanflight/src/main/fc/config.c **** #if !defined(USE_QUAD_MIXER_ONLY) && !defined(USE_OSD_SLAVE)
 154:../cleanflight/src/main/fc/config.c ****     // Reset unsupported mixer mode to default.
 155:../cleanflight/src/main/fc/config.c ****     // This check will be gone when motor/servo mixers are loaded dynamically
 156:../cleanflight/src/main/fc/config.c ****     // by configurator as a part of configuration procedure.
 157:../cleanflight/src/main/fc/config.c **** 
 158:../cleanflight/src/main/fc/config.c ****     mixerMode_e mixerMode = mixerConfigMutable()->mixerMode;
 1096              	 .loc 11 158 0
 1097 0006 FFF7FEFF 	 bl mixerConfigMutable
 1098 000a 0346     	 mov r3,r0
 1099 000c 1B78     	 ldrb r3,[r3]
 1100 000e FB70     	 strb r3,[r7,#3]
 159:../cleanflight/src/main/fc/config.c **** 
 160:../cleanflight/src/main/fc/config.c ****     if (!(mixerMode == MIXER_CUSTOM || mixerMode == MIXER_CUSTOM_AIRPLANE || mixerMode == MIXER_CUS
 1101              	 .loc 11 160 0
 1102 0010 FB78     	 ldrb r3,[r7,#3]
 1103 0012 172B     	 cmp r3,#23
 1104 0014 37D0     	 beq .L91
 1105              	 .loc 11 160 0 is_stmt 0 discriminator 1
 1106 0016 FB78     	 ldrb r3,[r7,#3]
 1107 0018 182B     	 cmp r3,#24
 1108 001a 34D0     	 beq .L91
 1109              	 .loc 11 160 0 discriminator 2
 1110 001c FB78     	 ldrb r3,[r7,#3]
 1111 001e 192B     	 cmp r3,#25
 1112 0020 31D0     	 beq .L91
 161:../cleanflight/src/main/fc/config.c ****         if (mixers[mixerMode].motorCount && mixers[mixerMode].motor == NULL)
 1113              	 .loc 11 161 0 is_stmt 1
 1114 0022 FA78     	 ldrb r2,[r7,#3]
 1115 0024 B949     	 ldr r1,.L123
 1116 0026 1346     	 mov r3,r2
 1117 0028 5B00     	 lsls r3,r3,#1
 1118 002a 1344     	 add r3,r3,r2
 1119 002c 5B00     	 lsls r3,r3,#1
 1120 002e 0B44     	 add r3,r3,r1
 1121 0030 1B78     	 ldrb r3,[r3]
 1122 0032 002B     	 cmp r3,#0
 1123 0034 0FD0     	 beq .L92
 1124              	 .loc 11 161 0 is_stmt 0 discriminator 1
 1125 0036 FA78     	 ldrb r2,[r7,#3]
 1126 0038 B449     	 ldr r1,.L123
 1127 003a 1346     	 mov r3,r2
 1128 003c 5B00     	 lsls r3,r3,#1
 1129 003e 1344     	 add r3,r3,r2
 1130 0040 5B00     	 lsls r3,r3,#1
 1131 0042 0B44     	 add r3,r3,r1
 1132 0044 D3F80230 	 ldr r3,[r3,#2]
 1133 0048 002B     	 cmp r3,#0
 1134 004a 04D1     	 bne .L92
 162:../cleanflight/src/main/fc/config.c ****             mixerConfigMutable()->mixerMode = MIXER_CUSTOM;
 1135              	 .loc 11 162 0 is_stmt 1
 1136 004c FFF7FEFF 	 bl mixerConfigMutable
 1137 0050 0346     	 mov r3,r0
 1138 0052 1722     	 movs r2,#23
 1139 0054 1A70     	 strb r2,[r3]
 1140              	.L92:
 163:../cleanflight/src/main/fc/config.c **** #ifdef USE_SERVOS
 164:../cleanflight/src/main/fc/config.c ****         if (mixers[mixerMode].useServo && servoMixers[mixerMode].servoRuleCount == 0)
 1141              	 .loc 11 164 0
 1142 0056 FA78     	 ldrb r2,[r7,#3]
 1143 0058 AC49     	 ldr r1,.L123
 1144 005a 1346     	 mov r3,r2
 1145 005c 5B00     	 lsls r3,r3,#1
 1146 005e 1344     	 add r3,r3,r2
 1147 0060 5B00     	 lsls r3,r3,#1
 1148 0062 0B44     	 add r3,r3,r1
 1149 0064 5B78     	 ldrb r3,[r3,#1]
 1150 0066 002B     	 cmp r3,#0
 1151 0068 0DD0     	 beq .L91
 1152              	 .loc 11 164 0 is_stmt 0 discriminator 1
 1153 006a FA78     	 ldrb r2,[r7,#3]
 1154 006c A849     	 ldr r1,.L123+4
 1155 006e 1346     	 mov r3,r2
 1156 0070 9B00     	 lsls r3,r3,#2
 1157 0072 1344     	 add r3,r3,r2
 1158 0074 0B44     	 add r3,r3,r1
 1159 0076 1B78     	 ldrb r3,[r3]
 1160 0078 002B     	 cmp r3,#0
 1161 007a 04D1     	 bne .L91
 165:../cleanflight/src/main/fc/config.c ****             mixerConfigMutable()->mixerMode = MIXER_CUSTOM_AIRPLANE;
 1162              	 .loc 11 165 0 is_stmt 1
 1163 007c FFF7FEFF 	 bl mixerConfigMutable
 1164 0080 0346     	 mov r3,r0
 1165 0082 1822     	 movs r2,#24
 1166 0084 1A70     	 strb r2,[r3]
 1167              	.L91:
 166:../cleanflight/src/main/fc/config.c **** #endif
 167:../cleanflight/src/main/fc/config.c ****     }
 168:../cleanflight/src/main/fc/config.c **** #endif
 169:../cleanflight/src/main/fc/config.c **** 
 170:../cleanflight/src/main/fc/config.c ****     if (!isSerialConfigValid(serialConfig())) {
 1168              	 .loc 11 170 0
 1169 0086 FFF7FEFF 	 bl serialConfig
 1170 008a 0346     	 mov r3,r0
 1171 008c 1846     	 mov r0,r3
 1172 008e FFF7FEFF 	 bl isSerialConfigValid
 1173 0092 0346     	 mov r3,r0
 1174 0094 83F00103 	 eor r3,r3,#1
 1175 0098 DBB2     	 uxtb r3,r3
 1176 009a 002B     	 cmp r3,#0
 1177 009c 05D0     	 beq .L93
 171:../cleanflight/src/main/fc/config.c ****         pgResetFn_serialConfig(serialConfigMutable());
 1178              	 .loc 11 171 0
 1179 009e FFF7FEFF 	 bl serialConfigMutable
 1180 00a2 0346     	 mov r3,r0
 1181 00a4 1846     	 mov r0,r3
 1182 00a6 FFF7FEFF 	 bl pgResetFn_serialConfig
 1183              	.L93:
 172:../cleanflight/src/main/fc/config.c ****     }
 173:../cleanflight/src/main/fc/config.c **** 
 174:../cleanflight/src/main/fc/config.c ****     if (
 175:../cleanflight/src/main/fc/config.c **** #if defined(USE_GPS)
 176:../cleanflight/src/main/fc/config.c ****         !findSerialPortConfig(FUNCTION_GPS) &&
 1184              	 .loc 11 176 0
 1185 00aa 0220     	 movs r0,#2
 1186 00ac FFF7FEFF 	 bl findSerialPortConfig
 1187 00b0 0346     	 mov r3,r0
 174:../cleanflight/src/main/fc/config.c **** #if defined(USE_GPS)
 1188              	 .loc 11 174 0
 1189 00b2 002B     	 cmp r3,#0
 1190 00b4 02D1     	 bne .L94
 177:../cleanflight/src/main/fc/config.c **** #endif
 178:../cleanflight/src/main/fc/config.c ****         true) {
 179:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_GPS);
 1191              	 .loc 11 179 0
 1192 00b6 8020     	 movs r0,#128
 1193 00b8 FFF7FEFF 	 bl featureClear
 1194              	.L94:
 180:../cleanflight/src/main/fc/config.c ****     }
 181:../cleanflight/src/main/fc/config.c **** 
 182:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
 183:../cleanflight/src/main/fc/config.c ****     if (systemConfig()->activeRateProfile >= CONTROL_RATE_PROFILE_COUNT) {
 1195              	 .loc 11 183 0
 1196 00bc FFF7FEFF 	 bl systemConfig
 1197 00c0 0346     	 mov r3,r0
 1198 00c2 5B78     	 ldrb r3,[r3,#1]
 1199 00c4 052B     	 cmp r3,#5
 1200 00c6 04D9     	 bls .L95
 184:../cleanflight/src/main/fc/config.c ****         systemConfigMutable()->activeRateProfile = 0;
 1201              	 .loc 11 184 0
 1202 00c8 FFF7FEFF 	 bl systemConfigMutable
 1203 00cc 0346     	 mov r3,r0
 1204 00ce 0022     	 movs r2,#0
 1205 00d0 5A70     	 strb r2,[r3,#1]
 1206              	.L95:
 185:../cleanflight/src/main/fc/config.c ****     }
 186:../cleanflight/src/main/fc/config.c ****     loadControlRateProfile();
 1207              	 .loc 11 186 0
 1208 00d2 FFF7FEFF 	 bl loadControlRateProfile
 187:../cleanflight/src/main/fc/config.c **** 
 188:../cleanflight/src/main/fc/config.c ****     if (systemConfig()->pidProfileIndex >= MAX_PROFILE_COUNT) {
 1209              	 .loc 11 188 0
 1210 00d6 FFF7FEFF 	 bl systemConfig
 1211 00da 0346     	 mov r3,r0
 1212 00dc 1B78     	 ldrb r3,[r3]
 1213 00de 022B     	 cmp r3,#2
 1214 00e0 04D9     	 bls .L96
 189:../cleanflight/src/main/fc/config.c ****         systemConfigMutable()->pidProfileIndex = 0;
 1215              	 .loc 11 189 0
 1216 00e2 FFF7FEFF 	 bl systemConfigMutable
 1217 00e6 0346     	 mov r3,r0
 1218 00e8 0022     	 movs r2,#0
 1219 00ea 1A70     	 strb r2,[r3]
 1220              	.L96:
 190:../cleanflight/src/main/fc/config.c ****     }
 191:../cleanflight/src/main/fc/config.c ****     loadPidProfile();
 1221              	 .loc 11 191 0
 1222 00ec FFF7FEFF 	 bl loadPidProfile
 192:../cleanflight/src/main/fc/config.c **** 
 193:../cleanflight/src/main/fc/config.c ****     // Prevent invalid notch cutoff
 194:../cleanflight/src/main/fc/config.c ****     if (currentPidProfile->dterm_notch_cutoff >= currentPidProfile->dterm_notch_hz) {
 1223              	 .loc 11 194 0
 1224 00f0 884B     	 ldr r3,.L123+8
 1225 00f2 1B68     	 ldr r3,[r3]
 1226 00f4 DB88     	 ldrh r3,[r3,#6]
 1227 00f6 9AB2     	 uxth r2,r3
 1228 00f8 864B     	 ldr r3,.L123+8
 1229 00fa 1B68     	 ldr r3,[r3]
 1230 00fc 9B88     	 ldrh r3,[r3,#4]
 1231 00fe 9BB2     	 uxth r3,r3
 1232 0100 9A42     	 cmp r2,r3
 1233 0102 05D3     	 bcc .L97
 195:../cleanflight/src/main/fc/config.c ****         currentPidProfile->dterm_notch_hz = 0;
 1234              	 .loc 11 195 0
 1235 0104 834B     	 ldr r3,.L123+8
 1236 0106 1B68     	 ldr r3,[r3]
 1237 0108 0022     	 movs r2,#0
 1238 010a 1A71     	 strb r2,[r3,#4]
 1239 010c 0022     	 movs r2,#0
 1240 010e 5A71     	 strb r2,[r3,#5]
 1241              	.L97:
 196:../cleanflight/src/main/fc/config.c ****     }
 197:../cleanflight/src/main/fc/config.c **** 
 198:../cleanflight/src/main/fc/config.c ****     if (motorConfig()->dev.motorPwmProtocol == PWM_TYPE_BRUSHED) {
 1242              	 .loc 11 198 0
 1243 0110 FFF7FEFF 	 bl motorConfig
 1244 0114 0346     	 mov r3,r0
 1245 0116 9B78     	 ldrb r3,[r3,#2]
 1246 0118 042B     	 cmp r3,#4
 1247 011a 16D1     	 bne .L98
 199:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_3D);
 1248              	 .loc 11 199 0
 1249 011c 4FF48050 	 mov r0,#4096
 1250 0120 FFF7FEFF 	 bl featureClear
 200:../cleanflight/src/main/fc/config.c **** 
 201:../cleanflight/src/main/fc/config.c ****         if (motorConfig()->mincommand < 1000) {
 1251              	 .loc 11 201 0
 1252 0124 FFF7FEFF 	 bl motorConfig
 1253 0128 0346     	 mov r3,r0
 1254 012a 9B8A     	 ldrh r3,[r3,#20]
 1255 012c 9BB2     	 uxth r3,r3
 1256 012e B3F57A7F 	 cmp r3,#1000
 1257 0132 0AD2     	 bcs .L98
 202:../cleanflight/src/main/fc/config.c ****             motorConfigMutable()->mincommand = 1000;
 1258              	 .loc 11 202 0
 1259 0134 FFF7FEFF 	 bl motorConfigMutable
 1260 0138 0346     	 mov r3,r0
 1261 013a 0022     	 movs r2,#0
 1262 013c 62F01702 	 orn r2,r2,#23
 1263 0140 1A75     	 strb r2,[r3,#20]
 1264 0142 0022     	 movs r2,#0
 1265 0144 42F00302 	 orr r2,r2,#3
 1266 0148 5A75     	 strb r2,[r3,#21]
 1267              	.L98:
 203:../cleanflight/src/main/fc/config.c ****         }
 204:../cleanflight/src/main/fc/config.c ****     }
 205:../cleanflight/src/main/fc/config.c **** 
 206:../cleanflight/src/main/fc/config.c ****     if ((motorConfig()->dev.motorPwmProtocol == PWM_TYPE_STANDARD) && (motorConfig()->dev.motorPwmR
 1268              	 .loc 11 206 0
 1269 014a FFF7FEFF 	 bl motorConfig
 1270 014e 0346     	 mov r3,r0
 1271 0150 9B78     	 ldrb r3,[r3,#2]
 1272 0152 002B     	 cmp r3,#0
 1273 0154 12D1     	 bne .L99
 1274              	 .loc 11 206 0 is_stmt 0 discriminator 1
 1275 0156 FFF7FEFF 	 bl motorConfig
 1276 015a 0346     	 mov r3,r0
 1277 015c 1B88     	 ldrh r3,[r3]
 1278 015e 9BB2     	 uxth r3,r3
 1279 0160 B3F5F07F 	 cmp r3,#480
 1280 0164 0AD9     	 bls .L99
 207:../cleanflight/src/main/fc/config.c ****         motorConfigMutable()->dev.motorPwmRate = BRUSHLESS_MOTORS_PWM_RATE;
 1281              	 .loc 11 207 0 is_stmt 1
 1282 0166 FFF7FEFF 	 bl motorConfigMutable
 1283 016a 0346     	 mov r3,r0
 1284 016c 0022     	 movs r2,#0
 1285 016e 62F01F02 	 orn r2,r2,#31
 1286 0172 1A70     	 strb r2,[r3]
 1287 0174 0022     	 movs r2,#0
 1288 0176 42F00102 	 orr r2,r2,#1
 1289 017a 5A70     	 strb r2,[r3,#1]
 1290              	.L99:
 208:../cleanflight/src/main/fc/config.c ****     }
 209:../cleanflight/src/main/fc/config.c **** 
 210:../cleanflight/src/main/fc/config.c ****     validateAndFixGyroConfig();
 1291              	 .loc 11 210 0
 1292 017c FFF7FEFF 	 bl validateAndFixGyroConfig
 211:../cleanflight/src/main/fc/config.c **** 
 212:../cleanflight/src/main/fc/config.c ****     if (!(featureConfigured(FEATURE_RX_PARALLEL_PWM) || featureConfigured(FEATURE_RX_PPM) || featur
 1293              	 .loc 11 212 0
 1294 0180 4FF40050 	 mov r0,#8192
 1295 0184 FFF7FEFF 	 bl featureConfigured
 1296 0188 0346     	 mov r3,r0
 1297 018a 83F00103 	 eor r3,r3,#1
 1298 018e DBB2     	 uxtb r3,r3
 1299 0190 002B     	 cmp r3,#0
 1300 0192 28D0     	 beq .L100
 1301              	 .loc 11 212 0 is_stmt 0 discriminator 1
 1302 0194 0120     	 movs r0,#1
 1303 0196 FFF7FEFF 	 bl featureConfigured
 1304 019a 0346     	 mov r3,r0
 1305 019c 83F00103 	 eor r3,r3,#1
 1306 01a0 DBB2     	 uxtb r3,r3
 1307 01a2 002B     	 cmp r3,#0
 1308 01a4 1FD0     	 beq .L100
 1309              	 .loc 11 212 0 discriminator 2
 1310 01a6 0820     	 movs r0,#8
 1311 01a8 FFF7FEFF 	 bl featureConfigured
 1312 01ac 0346     	 mov r3,r0
 1313 01ae 83F00103 	 eor r3,r3,#1
 1314 01b2 DBB2     	 uxtb r3,r3
 1315 01b4 002B     	 cmp r3,#0
 1316 01b6 16D0     	 beq .L100
 1317              	 .loc 11 212 0 discriminator 3
 1318 01b8 4FF48040 	 mov r0,#16384
 1319 01bc FFF7FEFF 	 bl featureConfigured
 1320 01c0 0346     	 mov r3,r0
 1321 01c2 83F00103 	 eor r3,r3,#1
 1322 01c6 DBB2     	 uxtb r3,r3
 1323 01c8 002B     	 cmp r3,#0
 1324 01ca 0CD0     	 beq .L100
 1325              	 .loc 11 212 0 discriminator 4
 1326 01cc 4FF00070 	 mov r0,#33554432
 1327 01d0 FFF7FEFF 	 bl featureConfigured
 1328 01d4 0346     	 mov r3,r0
 1329 01d6 83F00103 	 eor r3,r3,#1
 1330 01da DBB2     	 uxtb r3,r3
 1331 01dc 002B     	 cmp r3,#0
 1332 01de 02D0     	 beq .L100
 213:../cleanflight/src/main/fc/config.c ****         featureSet(DEFAULT_RX_FEATURE);
 1333              	 .loc 11 213 0 is_stmt 1
 1334 01e0 0820     	 movs r0,#8
 1335 01e2 FFF7FEFF 	 bl featureSet
 1336              	.L100:
 214:../cleanflight/src/main/fc/config.c ****     }
 215:../cleanflight/src/main/fc/config.c **** 
 216:../cleanflight/src/main/fc/config.c ****     if (featureConfigured(FEATURE_RX_PPM)) {
 1337              	 .loc 11 216 0
 1338 01e6 0120     	 movs r0,#1
 1339 01e8 FFF7FEFF 	 bl featureConfigured
 1340 01ec 0346     	 mov r3,r0
 1341 01ee 002B     	 cmp r3,#0
 1342 01f0 02D0     	 beq .L101
 217:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_RX_SERIAL | FEATURE_RX_PARALLEL_PWM | FEATURE_RX_MSP | FEATURE_RX_SPI)
 1343              	 .loc 11 217 0
 1344 01f2 4948     	 ldr r0,.L123+12
 1345 01f4 FFF7FEFF 	 bl featureClear
 1346              	.L101:
 218:../cleanflight/src/main/fc/config.c ****     }
 219:../cleanflight/src/main/fc/config.c **** 
 220:../cleanflight/src/main/fc/config.c ****     if (featureConfigured(FEATURE_RX_MSP)) {
 1347              	 .loc 11 220 0
 1348 01f8 4FF48040 	 mov r0,#16384
 1349 01fc FFF7FEFF 	 bl featureConfigured
 1350 0200 0346     	 mov r3,r0
 1351 0202 002B     	 cmp r3,#0
 1352 0204 02D0     	 beq .L102
 221:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_RX_SERIAL | FEATURE_RX_PARALLEL_PWM | FEATURE_RX_PPM | FEATURE_RX_SPI)
 1353              	 .loc 11 221 0
 1354 0206 4548     	 ldr r0,.L123+16
 1355 0208 FFF7FEFF 	 bl featureClear
 1356              	.L102:
 222:../cleanflight/src/main/fc/config.c ****     }
 223:../cleanflight/src/main/fc/config.c **** 
 224:../cleanflight/src/main/fc/config.c ****     if (featureConfigured(FEATURE_RX_SERIAL)) {
 1357              	 .loc 11 224 0
 1358 020c 0820     	 movs r0,#8
 1359 020e FFF7FEFF 	 bl featureConfigured
 1360 0212 0346     	 mov r3,r0
 1361 0214 002B     	 cmp r3,#0
 1362 0216 02D0     	 beq .L103
 225:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_RX_PARALLEL_PWM | FEATURE_RX_MSP | FEATURE_RX_PPM | FEATURE_RX_SPI);
 1363              	 .loc 11 225 0
 1364 0218 4148     	 ldr r0,.L123+20
 1365 021a FFF7FEFF 	 bl featureClear
 1366              	.L103:
 226:../cleanflight/src/main/fc/config.c ****     }
 227:../cleanflight/src/main/fc/config.c **** 
 228:../cleanflight/src/main/fc/config.c **** #ifdef USE_RX_SPI
 229:../cleanflight/src/main/fc/config.c ****     if (featureConfigured(FEATURE_RX_SPI)) {
 230:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_RX_SERIAL | FEATURE_RX_PARALLEL_PWM | FEATURE_RX_PPM | FEATURE_RX_MSP)
 231:../cleanflight/src/main/fc/config.c ****     }
 232:../cleanflight/src/main/fc/config.c **** #endif // USE_RX_SPI
 233:../cleanflight/src/main/fc/config.c **** 
 234:../cleanflight/src/main/fc/config.c ****     if (featureConfigured(FEATURE_RX_PARALLEL_PWM)) {
 1367              	 .loc 11 234 0
 1368 021e 4FF40050 	 mov r0,#8192
 1369 0222 FFF7FEFF 	 bl featureConfigured
 1370 0226 0346     	 mov r3,r0
 1371 0228 002B     	 cmp r3,#0
 1372 022a 02D0     	 beq .L104
 235:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_RX_SERIAL | FEATURE_RX_MSP | FEATURE_RX_PPM | FEATURE_RX_SPI);
 1373              	 .loc 11 235 0
 1374 022c 3D48     	 ldr r0,.L123+24
 1375 022e FFF7FEFF 	 bl featureClear
 1376              	.L104:
 236:../cleanflight/src/main/fc/config.c ****     }
 237:../cleanflight/src/main/fc/config.c **** 
 238:../cleanflight/src/main/fc/config.c **** #ifdef USE_SOFTSPI
 239:../cleanflight/src/main/fc/config.c ****     if (featureConfigured(FEATURE_SOFTSPI)) {
 240:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_RX_PPM | FEATURE_RX_PARALLEL_PWM | FEATURE_SOFTSERIAL);
 241:../cleanflight/src/main/fc/config.c ****         batteryConfigMutable()->voltageMeterSource = VOLTAGE_METER_NONE;
 242:../cleanflight/src/main/fc/config.c **** #if defined(STM32F10X)
 243:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_LED_STRIP);
 244:../cleanflight/src/main/fc/config.c ****         // rssi adc needs the same ports
 245:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_RSSI_ADC);
 246:../cleanflight/src/main/fc/config.c ****         // current meter needs the same ports
 247:../cleanflight/src/main/fc/config.c ****         if (batteryConfig()->currentMeterSource == CURRENT_METER_ADC) {
 248:../cleanflight/src/main/fc/config.c ****             batteryConfigMutable()->currentMeterSource = CURRENT_METER_NONE;
 249:../cleanflight/src/main/fc/config.c ****         }
 250:../cleanflight/src/main/fc/config.c **** #endif // STM32F10X
 251:../cleanflight/src/main/fc/config.c ****     }
 252:../cleanflight/src/main/fc/config.c **** #endif // USE_SOFTSPI
 253:../cleanflight/src/main/fc/config.c **** 
 254:../cleanflight/src/main/fc/config.c **** #if defined(USE_ADC)
 255:../cleanflight/src/main/fc/config.c ****     if (featureConfigured(FEATURE_RSSI_ADC)) {
 1377              	 .loc 11 255 0
 1378 0232 4FF40040 	 mov r0,#32768
 1379 0236 FFF7FEFF 	 bl featureConfigured
 1380 023a 0346     	 mov r3,r0
 1381 023c 002B     	 cmp r3,#0
 1382 023e 0BD0     	 beq .L105
 256:../cleanflight/src/main/fc/config.c ****         rxConfigMutable()->rssi_channel = 0;
 1383              	 .loc 11 256 0
 1384 0240 FFF7FEFF 	 bl rxConfigMutable
 1385 0244 0346     	 mov r3,r0
 1386 0246 0022     	 movs r2,#0
 1387 0248 DA73     	 strb r2,[r3,#15]
 257:../cleanflight/src/main/fc/config.c ****         rxConfigMutable()->rssi_src_frame_errors = false;
 1388              	 .loc 11 257 0
 1389 024a FFF7FEFF 	 bl rxConfigMutable
 1390 024e 0346     	 mov r3,r0
 1391 0250 0022     	 movs r2,#0
 1392 0252 83F82220 	 strb r2,[r3,#34]
 1393 0256 18E0     	 b .L106
 1394              	.L105:
 258:../cleanflight/src/main/fc/config.c ****     } else
 259:../cleanflight/src/main/fc/config.c **** #endif
 260:../cleanflight/src/main/fc/config.c ****     if (rxConfigMutable()->rssi_channel
 1395              	 .loc 11 260 0
 1396 0258 FFF7FEFF 	 bl rxConfigMutable
 1397 025c 0346     	 mov r3,r0
 1398 025e DB7B     	 ldrb r3,[r3,#15]
 1399 0260 002B     	 cmp r3,#0
 1400 0262 0CD1     	 bne .L107
 261:../cleanflight/src/main/fc/config.c **** #if defined(USE_PWM) || defined(USE_PPM)
 262:../cleanflight/src/main/fc/config.c ****         || featureConfigured(FEATURE_RX_PPM) || featureConfigured(FEATURE_RX_PARALLEL_PWM)
 1401              	 .loc 11 262 0
 1402 0264 0120     	 movs r0,#1
 1403 0266 FFF7FEFF 	 bl featureConfigured
 1404 026a 0346     	 mov r3,r0
 1405 026c 002B     	 cmp r3,#0
 1406 026e 06D1     	 bne .L107
 1407              	 .loc 11 262 0 is_stmt 0 discriminator 1
 1408 0270 4FF40050 	 mov r0,#8192
 1409 0274 FFF7FEFF 	 bl featureConfigured
 1410 0278 0346     	 mov r3,r0
 1411 027a 002B     	 cmp r3,#0
 1412 027c 05D0     	 beq .L106
 1413              	.L107:
 263:../cleanflight/src/main/fc/config.c **** #endif
 264:../cleanflight/src/main/fc/config.c ****         ) {
 265:../cleanflight/src/main/fc/config.c ****         rxConfigMutable()->rssi_src_frame_errors = false;
 1414              	 .loc 11 265 0 is_stmt 1
 1415 027e FFF7FEFF 	 bl rxConfigMutable
 1416 0282 0346     	 mov r3,r0
 1417 0284 0022     	 movs r2,#0
 1418 0286 83F82220 	 strb r2,[r3,#34]
 1419              	.L106:
 266:../cleanflight/src/main/fc/config.c ****     }
 267:../cleanflight/src/main/fc/config.c **** 
 268:../cleanflight/src/main/fc/config.c ****     if (!rcSmoothingIsEnabled() || rxConfig()->rcInterpolationChannels == INTERPOLATION_CHANNELS_T)
 1420              	 .loc 11 268 0
 1421 028a FFF7FEFF 	 bl rcSmoothingIsEnabled
 1422 028e 0346     	 mov r3,r0
 1423 0290 83F00103 	 eor r3,r3,#1
 1424 0294 DBB2     	 uxtb r3,r3
 1425 0296 002B     	 cmp r3,#0
 1426 0298 05D1     	 bne .L108
 1427              	 .loc 11 268 0 is_stmt 0 discriminator 1
 1428 029a FFF7FEFF 	 bl rxConfig
 1429 029e 0346     	 mov r3,r0
 1430 02a0 5B7E     	 ldrb r3,[r3,#25]
 1431 02a2 032B     	 cmp r3,#3
 1432 02a4 1AD1     	 bne .L109
 1433              	.L108:
 1434              	.LBB2:
 269:../cleanflight/src/main/fc/config.c ****         for (unsigned i = 0; i < MAX_PROFILE_COUNT; i++) {
 1435              	 .loc 11 269 0 is_stmt 1
 1436 02a6 0023     	 movs r3,#0
 1437 02a8 FB60     	 str r3,[r7,#12]
 1438 02aa 14E0     	 b .L110
 1439              	.L111:
 270:../cleanflight/src/main/fc/config.c ****             pidProfilesMutable(i)->pid[PID_ROLL].F = 0;
 1440              	 .loc 11 270 0 discriminator 3
 1441 02ac FB68     	 ldr r3,[r7,#12]
 1442 02ae 1846     	 mov r0,r3
 1443 02b0 FFF7FEFF 	 bl pidProfilesMutable
 1444 02b4 0346     	 mov r3,r0
 1445 02b6 0022     	 movs r2,#0
 1446 02b8 DA72     	 strb r2,[r3,#11]
 1447 02ba 0022     	 movs r2,#0
 1448 02bc 1A73     	 strb r2,[r3,#12]
 271:../cleanflight/src/main/fc/config.c ****             pidProfilesMutable(i)->pid[PID_PITCH].F = 0;
 1449              	 .loc 11 271 0 discriminator 3
 1450 02be FB68     	 ldr r3,[r7,#12]
 1451 02c0 1846     	 mov r0,r3
 1452 02c2 FFF7FEFF 	 bl pidProfilesMutable
 1453 02c6 0346     	 mov r3,r0
 1454 02c8 0022     	 movs r2,#0
 1455 02ca 1A74     	 strb r2,[r3,#16]
 1456 02cc 0022     	 movs r2,#0
 1457 02ce 5A74     	 strb r2,[r3,#17]
 269:../cleanflight/src/main/fc/config.c ****         for (unsigned i = 0; i < MAX_PROFILE_COUNT; i++) {
 1458              	 .loc 11 269 0 discriminator 3
 1459 02d0 FB68     	 ldr r3,[r7,#12]
 1460 02d2 0133     	 adds r3,r3,#1
 1461 02d4 FB60     	 str r3,[r7,#12]
 1462              	.L110:
 269:../cleanflight/src/main/fc/config.c ****         for (unsigned i = 0; i < MAX_PROFILE_COUNT; i++) {
 1463              	 .loc 11 269 0 is_stmt 0 discriminator 1
 1464 02d6 FB68     	 ldr r3,[r7,#12]
 1465 02d8 022B     	 cmp r3,#2
 1466 02da E7D9     	 bls .L111
 1467              	.L109:
 1468              	.LBE2:
 272:../cleanflight/src/main/fc/config.c ****         }
 273:../cleanflight/src/main/fc/config.c ****     }
 274:../cleanflight/src/main/fc/config.c **** 
 275:../cleanflight/src/main/fc/config.c ****     if (!rcSmoothingIsEnabled() ||
 1469              	 .loc 11 275 0 is_stmt 1
 1470 02dc FFF7FEFF 	 bl rcSmoothingIsEnabled
 1471 02e0 0346     	 mov r3,r0
 1472 02e2 83F00103 	 eor r3,r3,#1
 1473 02e6 DBB2     	 uxtb r3,r3
 1474 02e8 002B     	 cmp r3,#0
 1475 02ea 0BD1     	 bne .L112
 276:../cleanflight/src/main/fc/config.c ****         (rxConfig()->rcInterpolationChannels != INTERPOLATION_CHANNELS_RPY &&
 1476              	 .loc 11 276 0 discriminator 1
 1477 02ec FFF7FEFF 	 bl rxConfig
 1478 02f0 0346     	 mov r3,r0
 1479 02f2 5B7E     	 ldrb r3,[r3,#25]
 275:../cleanflight/src/main/fc/config.c ****         (rxConfig()->rcInterpolationChannels != INTERPOLATION_CHANNELS_RPY &&
 1480              	 .loc 11 275 0 discriminator 1
 1481 02f4 012B     	 cmp r3,#1
 1482 02f6 26D0     	 beq .L113
 277:../cleanflight/src/main/fc/config.c ****          rxConfig()->rcInterpolationChannels != INTERPOLATION_CHANNELS_RPYT)) {
 1483              	 .loc 11 277 0
 1484 02f8 FFF7FEFF 	 bl rxConfig
 1485 02fc 0346     	 mov r3,r0
 1486 02fe 5B7E     	 ldrb r3,[r3,#25]
 276:../cleanflight/src/main/fc/config.c ****         (rxConfig()->rcInterpolationChannels != INTERPOLATION_CHANNELS_RPY &&
 1487              	 .loc 11 276 0
 1488 0300 022B     	 cmp r3,#2
 1489 0302 20D0     	 beq .L113
 1490              	.L112:
 1491              	.LBB3:
 278:../cleanflight/src/main/fc/config.c **** 
 279:../cleanflight/src/main/fc/config.c ****         for (unsigned i = 0; i < MAX_PROFILE_COUNT; i++) {
 1492              	 .loc 11 279 0
 1493 0304 0023     	 movs r3,#0
 1494 0306 BB60     	 str r3,[r7,#8]
 1495 0308 1AE0     	 b .L114
 1496              	.L124:
 1497 030a 00BF     	 .align 2
 1498              	.L123:
 1499 030c 00000000 	 .word mixers
 1500 0310 00000000 	 .word servoMixers
 1501 0314 00000000 	 .word currentPidProfile
 1502 0318 08600002 	 .word 33579016
 1503 031c 09200002 	 .word 33562633
 1504 0320 01600002 	 .word 33579009
 1505 0324 09400002 	 .word 33570825
 1506              	.L115:
 280:../cleanflight/src/main/fc/config.c ****             pidProfilesMutable(i)->pid[PID_YAW].F = 0;
 1507              	 .loc 11 280 0 discriminator 3
 1508 0328 BB68     	 ldr r3,[r7,#8]
 1509 032a 1846     	 mov r0,r3
 1510 032c FFF7FEFF 	 bl pidProfilesMutable
 1511 0330 0346     	 mov r3,r0
 1512 0332 0022     	 movs r2,#0
 1513 0334 5A75     	 strb r2,[r3,#21]
 1514 0336 0022     	 movs r2,#0
 1515 0338 9A75     	 strb r2,[r3,#22]
 279:../cleanflight/src/main/fc/config.c ****             pidProfilesMutable(i)->pid[PID_YAW].F = 0;
 1516              	 .loc 11 279 0 discriminator 3
 1517 033a BB68     	 ldr r3,[r7,#8]
 1518 033c 0133     	 adds r3,r3,#1
 1519 033e BB60     	 str r3,[r7,#8]
 1520              	.L114:
 279:../cleanflight/src/main/fc/config.c ****             pidProfilesMutable(i)->pid[PID_YAW].F = 0;
 1521              	 .loc 11 279 0 is_stmt 0 discriminator 1
 1522 0340 BB68     	 ldr r3,[r7,#8]
 1523 0342 022B     	 cmp r3,#2
 1524 0344 F0D9     	 bls .L115
 1525              	.L113:
 1526              	.LBE3:
 281:../cleanflight/src/main/fc/config.c ****         }
 282:../cleanflight/src/main/fc/config.c ****     }
 283:../cleanflight/src/main/fc/config.c ****     
 284:../cleanflight/src/main/fc/config.c **** #if defined(USE_THROTTLE_BOOST)
 285:../cleanflight/src/main/fc/config.c ****     if (!rcSmoothingIsEnabled() ||
 1527              	 .loc 11 285 0 is_stmt 1
 1528 0346 FFF7FEFF 	 bl rcSmoothingIsEnabled
 1529 034a 0346     	 mov r3,r0
 1530 034c 83F00103 	 eor r3,r3,#1
 1531 0350 DBB2     	 uxtb r3,r3
 1532 0352 002B     	 cmp r3,#0
 1533 0354 11D1     	 bne .L116
 286:../cleanflight/src/main/fc/config.c ****         !(rxConfig()->rcInterpolationChannels == INTERPOLATION_CHANNELS_RPYT
 1534              	 .loc 11 286 0 discriminator 1
 1535 0356 FFF7FEFF 	 bl rxConfig
 1536 035a 0346     	 mov r3,r0
 1537 035c 5B7E     	 ldrb r3,[r3,#25]
 285:../cleanflight/src/main/fc/config.c ****         !(rxConfig()->rcInterpolationChannels == INTERPOLATION_CHANNELS_RPYT
 1538              	 .loc 11 285 0 discriminator 1
 1539 035e 022B     	 cmp r3,#2
 1540 0360 1CD0     	 beq .L117
 287:../cleanflight/src/main/fc/config.c ****         || rxConfig()->rcInterpolationChannels == INTERPOLATION_CHANNELS_T
 1541              	 .loc 11 287 0
 1542 0362 FFF7FEFF 	 bl rxConfig
 1543 0366 0346     	 mov r3,r0
 1544 0368 5B7E     	 ldrb r3,[r3,#25]
 1545 036a 032B     	 cmp r3,#3
 1546 036c 16D0     	 beq .L117
 288:../cleanflight/src/main/fc/config.c ****         || rxConfig()->rcInterpolationChannels == INTERPOLATION_CHANNELS_RPT)) {
 1547              	 .loc 11 288 0
 1548 036e FFF7FEFF 	 bl rxConfig
 1549 0372 0346     	 mov r3,r0
 1550 0374 5B7E     	 ldrb r3,[r3,#25]
 286:../cleanflight/src/main/fc/config.c ****         || rxConfig()->rcInterpolationChannels == INTERPOLATION_CHANNELS_T
 1551              	 .loc 11 286 0
 1552 0376 042B     	 cmp r3,#4
 1553 0378 10D0     	 beq .L117
 1554              	.L116:
 1555              	.LBB4:
 289:../cleanflight/src/main/fc/config.c ****         for (unsigned i = 0; i < MAX_PROFILE_COUNT; i++) {
 1556              	 .loc 11 289 0
 1557 037a 0023     	 movs r3,#0
 1558 037c 7B60     	 str r3,[r7,#4]
 1559 037e 0AE0     	 b .L118
 1560              	.L119:
 290:../cleanflight/src/main/fc/config.c ****             pidProfilesMutable(i)->throttle_boost = 0;
 1561              	 .loc 11 290 0 discriminator 3
 1562 0380 7B68     	 ldr r3,[r7,#4]
 1563 0382 1846     	 mov r0,r3
 1564 0384 FFF7FEFF 	 bl pidProfilesMutable
 1565 0388 0346     	 mov r3,r0
 1566 038a 0022     	 movs r2,#0
 1567 038c 83F84920 	 strb r2,[r3,#73]
 289:../cleanflight/src/main/fc/config.c ****         for (unsigned i = 0; i < MAX_PROFILE_COUNT; i++) {
 1568              	 .loc 11 289 0 discriminator 3
 1569 0390 7B68     	 ldr r3,[r7,#4]
 1570 0392 0133     	 adds r3,r3,#1
 1571 0394 7B60     	 str r3,[r7,#4]
 1572              	.L118:
 289:../cleanflight/src/main/fc/config.c ****         for (unsigned i = 0; i < MAX_PROFILE_COUNT; i++) {
 1573              	 .loc 11 289 0 is_stmt 0 discriminator 1
 1574 0396 7B68     	 ldr r3,[r7,#4]
 1575 0398 022B     	 cmp r3,#2
 1576 039a F1D9     	 bls .L119
 1577              	.L117:
 1578              	.LBE4:
 291:../cleanflight/src/main/fc/config.c ****         }
 292:../cleanflight/src/main/fc/config.c ****     }
 293:../cleanflight/src/main/fc/config.c **** #endif
 294:../cleanflight/src/main/fc/config.c **** 
 295:../cleanflight/src/main/fc/config.c ****     if (
 296:../cleanflight/src/main/fc/config.c ****         featureConfigured(FEATURE_3D) || !featureConfigured(FEATURE_GPS)
 1579              	 .loc 11 296 0 is_stmt 1
 1580 039c 4FF48050 	 mov r0,#4096
 1581 03a0 FFF7FEFF 	 bl featureConfigured
 1582 03a4 0346     	 mov r3,r0
 295:../cleanflight/src/main/fc/config.c ****         featureConfigured(FEATURE_3D) || !featureConfigured(FEATURE_GPS)
 1583              	 .loc 11 295 0
 1584 03a6 002B     	 cmp r3,#0
 1585 03a8 08D1     	 bne .L120
 1586              	 .loc 11 296 0
 1587 03aa 8020     	 movs r0,#128
 1588 03ac FFF7FEFF 	 bl featureConfigured
 1589 03b0 0346     	 mov r3,r0
 1590 03b2 83F00103 	 eor r3,r3,#1
 1591 03b6 DBB2     	 uxtb r3,r3
 1592 03b8 002B     	 cmp r3,#0
 1593 03ba 13D0     	 beq .L121
 1594              	.L120:
 297:../cleanflight/src/main/fc/config.c **** #if !defined(USE_GPS) || !defined(USE_GPS_RESCUE)
 298:../cleanflight/src/main/fc/config.c ****         || true
 299:../cleanflight/src/main/fc/config.c **** #endif
 300:../cleanflight/src/main/fc/config.c ****         ) {
 301:../cleanflight/src/main/fc/config.c ****         if (failsafeConfig()->failsafe_procedure == FAILSAFE_PROCEDURE_GPS_RESCUE) {
 1595              	 .loc 11 301 0
 1596 03bc FFF7FEFF 	 bl failsafeConfig
 1597 03c0 0346     	 mov r3,r0
 1598 03c2 DB79     	 ldrb r3,[r3,#7]
 1599 03c4 022B     	 cmp r3,#2
 1600 03c6 04D1     	 bne .L122
 302:../cleanflight/src/main/fc/config.c ****             failsafeConfigMutable()->failsafe_procedure = FAILSAFE_PROCEDURE_DROP_IT;
 1601              	 .loc 11 302 0
 1602 03c8 FFF7FEFF 	 bl failsafeConfigMutable
 1603 03cc 0346     	 mov r3,r0
 1604 03ce 0122     	 movs r2,#1
 1605 03d0 DA71     	 strb r2,[r3,#7]
 1606              	.L122:
 303:../cleanflight/src/main/fc/config.c ****         }
 304:../cleanflight/src/main/fc/config.c **** 
 305:../cleanflight/src/main/fc/config.c ****         if (isModeActivationConditionPresent(BOXGPSRESCUE)) {
 1607              	 .loc 11 305 0
 1608 03d2 0A20     	 movs r0,#10
 1609 03d4 FFF7FEFF 	 bl isModeActivationConditionPresent
 1610 03d8 0346     	 mov r3,r0
 1611 03da 002B     	 cmp r3,#0
 1612 03dc 02D0     	 beq .L121
 306:../cleanflight/src/main/fc/config.c ****             removeModeActivationCondition(BOXGPSRESCUE);
 1613              	 .loc 11 306 0
 1614 03de 0A20     	 movs r0,#10
 1615 03e0 FFF7FEFF 	 bl removeModeActivationCondition
 1616              	.L121:
 307:../cleanflight/src/main/fc/config.c ****         }
 308:../cleanflight/src/main/fc/config.c ****     }
 309:../cleanflight/src/main/fc/config.c **** #endif // USE_OSD_SLAVE
 310:../cleanflight/src/main/fc/config.c **** 
 311:../cleanflight/src/main/fc/config.c **** #if defined(USE_ESC_SENSOR)
 312:../cleanflight/src/main/fc/config.c ****     if (!findSerialPortConfig(FUNCTION_ESC_SENSOR)) {
 313:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_ESC_SENSOR);
 314:../cleanflight/src/main/fc/config.c ****     }
 315:../cleanflight/src/main/fc/config.c **** #endif
 316:../cleanflight/src/main/fc/config.c **** 
 317:../cleanflight/src/main/fc/config.c **** // clear features that are not supported.
 318:../cleanflight/src/main/fc/config.c **** // I have kept them all here in one place, some could be moved to sections of code above.
 319:../cleanflight/src/main/fc/config.c **** 
 320:../cleanflight/src/main/fc/config.c **** #ifndef USE_PPM
 321:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_RX_PPM);
 322:../cleanflight/src/main/fc/config.c **** #endif
 323:../cleanflight/src/main/fc/config.c **** 
 324:../cleanflight/src/main/fc/config.c **** #ifndef USE_SERIAL_RX
 325:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_RX_SERIAL);
 326:../cleanflight/src/main/fc/config.c **** #endif
 327:../cleanflight/src/main/fc/config.c **** 
 328:../cleanflight/src/main/fc/config.c **** #if !defined(USE_SOFTSERIAL1) && !defined(USE_SOFTSERIAL2)
 329:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_SOFTSERIAL);
 1617              	 .loc 11 329 0
 1618 03e4 4020     	 movs r0,#64
 1619 03e6 FFF7FEFF 	 bl featureClear
 330:../cleanflight/src/main/fc/config.c **** #endif
 331:../cleanflight/src/main/fc/config.c **** 
 332:../cleanflight/src/main/fc/config.c **** #ifndef USE_RANGEFINDER
 333:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_RANGEFINDER);
 1620              	 .loc 11 333 0
 1621 03ea 4FF40070 	 mov r0,#512
 1622 03ee FFF7FEFF 	 bl featureClear
 334:../cleanflight/src/main/fc/config.c **** #endif
 335:../cleanflight/src/main/fc/config.c **** 
 336:../cleanflight/src/main/fc/config.c **** #ifndef USE_TELEMETRY
 337:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_TELEMETRY);
 1623              	 .loc 11 337 0
 1624 03f2 4FF48060 	 mov r0,#1024
 1625 03f6 FFF7FEFF 	 bl featureClear
 338:../cleanflight/src/main/fc/config.c **** #endif
 339:../cleanflight/src/main/fc/config.c **** 
 340:../cleanflight/src/main/fc/config.c **** #ifndef USE_PWM
 341:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_RX_PARALLEL_PWM);
 342:../cleanflight/src/main/fc/config.c **** #endif
 343:../cleanflight/src/main/fc/config.c **** 
 344:../cleanflight/src/main/fc/config.c **** #ifndef USE_RX_MSP
 345:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_RX_MSP);
 346:../cleanflight/src/main/fc/config.c **** #endif
 347:../cleanflight/src/main/fc/config.c **** 
 348:../cleanflight/src/main/fc/config.c **** #ifndef USE_LED_STRIP
 349:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_LED_STRIP);
 1626              	 .loc 11 349 0
 1627 03fa 4FF48030 	 mov r0,#65536
 1628 03fe FFF7FEFF 	 bl featureClear
 350:../cleanflight/src/main/fc/config.c **** #endif
 351:../cleanflight/src/main/fc/config.c **** 
 352:../cleanflight/src/main/fc/config.c **** #ifndef USE_DASHBOARD
 353:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_DASHBOARD);
 354:../cleanflight/src/main/fc/config.c **** #endif
 355:../cleanflight/src/main/fc/config.c **** 
 356:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD
 357:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_OSD);
 358:../cleanflight/src/main/fc/config.c **** #endif
 359:../cleanflight/src/main/fc/config.c **** 
 360:../cleanflight/src/main/fc/config.c **** #ifndef USE_SERVOS
 361:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_SERVO_TILT | FEATURE_CHANNEL_FORWARDING);
 362:../cleanflight/src/main/fc/config.c **** #endif
 363:../cleanflight/src/main/fc/config.c **** 
 364:../cleanflight/src/main/fc/config.c **** #ifndef USE_TRANSPONDER
 365:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_TRANSPONDER);
 1629              	 .loc 11 365 0
 1630 0402 4FF40010 	 mov r0,#2097152
 1631 0406 FFF7FEFF 	 bl featureClear
 366:../cleanflight/src/main/fc/config.c **** #endif
 367:../cleanflight/src/main/fc/config.c **** 
 368:../cleanflight/src/main/fc/config.c **** #ifndef USE_RX_SPI
 369:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_RX_SPI);
 1632              	 .loc 11 369 0
 1633 040a 4FF00070 	 mov r0,#33554432
 1634 040e FFF7FEFF 	 bl featureClear
 370:../cleanflight/src/main/fc/config.c **** #endif
 371:../cleanflight/src/main/fc/config.c **** 
 372:../cleanflight/src/main/fc/config.c **** #ifndef USE_SOFTSPI
 373:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_SOFTSPI);
 1635              	 .loc 11 373 0
 1636 0412 4FF08060 	 mov r0,#67108864
 1637 0416 FFF7FEFF 	 bl featureClear
 374:../cleanflight/src/main/fc/config.c **** #endif
 375:../cleanflight/src/main/fc/config.c **** 
 376:../cleanflight/src/main/fc/config.c **** #ifndef USE_ESC_SENSOR
 377:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_ESC_SENSOR);
 1638              	 .loc 11 377 0
 1639 041a 4FF00060 	 mov r0,#134217728
 1640 041e FFF7FEFF 	 bl featureClear
 378:../cleanflight/src/main/fc/config.c **** #endif
 379:../cleanflight/src/main/fc/config.c **** 
 380:../cleanflight/src/main/fc/config.c **** #ifndef USE_GYRO_DATA_ANALYSE
 381:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_DYNAMIC_FILTER);
 1641              	 .loc 11 381 0
 1642 0422 4FF00050 	 mov r0,#536870912
 1643 0426 FFF7FEFF 	 bl featureClear
 382:../cleanflight/src/main/fc/config.c **** #endif
 383:../cleanflight/src/main/fc/config.c **** 
 384:../cleanflight/src/main/fc/config.c **** #if !defined(USE_ADC)
 385:../cleanflight/src/main/fc/config.c ****     featureClear(FEATURE_RSSI_ADC);
 386:../cleanflight/src/main/fc/config.c **** #endif
 387:../cleanflight/src/main/fc/config.c **** 
 388:../cleanflight/src/main/fc/config.c **** #if defined(USE_BEEPER)
 389:../cleanflight/src/main/fc/config.c ****     if (beeperDevConfig()->frequency && !timerGetByTag(beeperDevConfig()->ioTag)) {
 390:../cleanflight/src/main/fc/config.c ****         beeperDevConfigMutable()->frequency = 0;
 391:../cleanflight/src/main/fc/config.c ****     }
 392:../cleanflight/src/main/fc/config.c **** 
 393:../cleanflight/src/main/fc/config.c ****     if (beeperConfig()->beeper_off_flags & ~BEEPER_ALLOWED_MODES) {
 394:../cleanflight/src/main/fc/config.c ****         beeperConfigMutable()->beeper_off_flags = 0;
 395:../cleanflight/src/main/fc/config.c ****     }
 396:../cleanflight/src/main/fc/config.c **** 
 397:../cleanflight/src/main/fc/config.c **** #ifdef USE_DSHOT
 398:../cleanflight/src/main/fc/config.c ****     if (beeperConfig()->dshotBeaconOffFlags & ~DSHOT_BEACON_ALLOWED_MODES) {
 399:../cleanflight/src/main/fc/config.c ****         beeperConfigMutable()->dshotBeaconOffFlags = 0;
 400:../cleanflight/src/main/fc/config.c ****     }
 401:../cleanflight/src/main/fc/config.c **** 
 402:../cleanflight/src/main/fc/config.c ****     if (beeperConfig()->dshotBeaconTone < DSHOT_CMD_BEACON1
 403:../cleanflight/src/main/fc/config.c ****         || beeperConfig()->dshotBeaconTone > DSHOT_CMD_BEACON5) {
 404:../cleanflight/src/main/fc/config.c ****         beeperConfigMutable()->dshotBeaconTone = DSHOT_CMD_BEACON1;
 405:../cleanflight/src/main/fc/config.c ****     }
 406:../cleanflight/src/main/fc/config.c **** #endif
 407:../cleanflight/src/main/fc/config.c **** #endif
 408:../cleanflight/src/main/fc/config.c **** 
 409:../cleanflight/src/main/fc/config.c **** #if defined(TARGET_VALIDATECONFIG)
 410:../cleanflight/src/main/fc/config.c ****     targetValidateConfiguration();
 411:../cleanflight/src/main/fc/config.c **** #endif
 412:../cleanflight/src/main/fc/config.c **** }
 1644              	 .loc 11 412 0
 1645 042a 1037     	 adds r7,r7,#16
 1646              	.LCFI95:
 1647              	 .cfi_def_cfa_offset 8
 1648 042c BD46     	 mov sp,r7
 1649              	.LCFI96:
 1650              	 .cfi_def_cfa_register 13
 1651              	 
 1652 042e 80BD     	 pop {r7,pc}
 1653              	 .cfi_endproc
 1654              	.LFE627:
 1656              	 .section .text.validateAndFixGyroConfig,"ax",%progbits
 1657              	 .align 2
 1658              	 .global validateAndFixGyroConfig
 1659              	 .thumb
 1660              	 .thumb_func
 1662              	validateAndFixGyroConfig:
 1663              	.LFB628:
 413:../cleanflight/src/main/fc/config.c **** 
 414:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
 415:../cleanflight/src/main/fc/config.c **** void validateAndFixGyroConfig(void)
 416:../cleanflight/src/main/fc/config.c **** {
 1664              	 .loc 11 416 0
 1665              	 .cfi_startproc
 1666              	 
 1667              	 
 1668 0000 90B5     	 push {r4,r7,lr}
 1669              	.LCFI97:
 1670              	 .cfi_def_cfa_offset 12
 1671              	 .cfi_offset 4,-12
 1672              	 .cfi_offset 7,-8
 1673              	 .cfi_offset 14,-4
 1674 0002 2DED028B 	 fstmfdd sp!,{d8}
 1675              	.LCFI98:
 1676              	 .cfi_def_cfa_offset 20
 1677              	 .cfi_offset 80,-20
 1678              	 .cfi_offset 81,-16
 1679 0006 89B0     	 sub sp,sp,#36
 1680              	.LCFI99:
 1681              	 .cfi_def_cfa_offset 56
 1682 0008 00AF     	 add r7,sp,#0
 1683              	.LCFI100:
 1684              	 .cfi_def_cfa_register 7
 417:../cleanflight/src/main/fc/config.c **** #ifdef USE_GYRO_DATA_ANALYSE
 418:../cleanflight/src/main/fc/config.c ****     // Disable dynamic filter if gyro loop is less than 2KHz
 419:../cleanflight/src/main/fc/config.c ****     if (gyro.targetLooptime > DYNAMIC_FILTER_MAX_SUPPORTED_LOOP_TIME) {
 420:../cleanflight/src/main/fc/config.c ****         featureClear(FEATURE_DYNAMIC_FILTER);
 421:../cleanflight/src/main/fc/config.c ****     }
 422:../cleanflight/src/main/fc/config.c **** #endif
 423:../cleanflight/src/main/fc/config.c ****     
 424:../cleanflight/src/main/fc/config.c ****     // Prevent invalid notch cutoff
 425:../cleanflight/src/main/fc/config.c ****     if (gyroConfig()->gyro_soft_notch_cutoff_1 >= gyroConfig()->gyro_soft_notch_hz_1) {
 1685              	 .loc 11 425 0
 1686 000a FFF7FEFF 	 bl gyroConfig
 1687 000e 0346     	 mov r3,r0
 1688 0010 DB89     	 ldrh r3,[r3,#14]
 1689 0012 9CB2     	 uxth r4,r3
 1690 0014 FFF7FEFF 	 bl gyroConfig
 1691 0018 0346     	 mov r3,r0
 1692 001a 9B89     	 ldrh r3,[r3,#12]
 1693 001c 9BB2     	 uxth r3,r3
 1694 001e 9C42     	 cmp r4,r3
 1695 0020 06D3     	 bcc .L126
 426:../cleanflight/src/main/fc/config.c ****         gyroConfigMutable()->gyro_soft_notch_hz_1 = 0;
 1696              	 .loc 11 426 0
 1697 0022 FFF7FEFF 	 bl gyroConfigMutable
 1698 0026 0346     	 mov r3,r0
 1699 0028 0022     	 movs r2,#0
 1700 002a 1A73     	 strb r2,[r3,#12]
 1701 002c 0022     	 movs r2,#0
 1702 002e 5A73     	 strb r2,[r3,#13]
 1703              	.L126:
 427:../cleanflight/src/main/fc/config.c ****     }
 428:../cleanflight/src/main/fc/config.c ****     if (gyroConfig()->gyro_soft_notch_cutoff_2 >= gyroConfig()->gyro_soft_notch_hz_2) {
 1704              	 .loc 11 428 0
 1705 0030 FFF7FEFF 	 bl gyroConfig
 1706 0034 0346     	 mov r3,r0
 1707 0036 5B8A     	 ldrh r3,[r3,#18]
 1708 0038 9CB2     	 uxth r4,r3
 1709 003a FFF7FEFF 	 bl gyroConfig
 1710 003e 0346     	 mov r3,r0
 1711 0040 1B8A     	 ldrh r3,[r3,#16]
 1712 0042 9BB2     	 uxth r3,r3
 1713 0044 9C42     	 cmp r4,r3
 1714 0046 06D3     	 bcc .L127
 429:../cleanflight/src/main/fc/config.c ****         gyroConfigMutable()->gyro_soft_notch_hz_2 = 0;
 1715              	 .loc 11 429 0
 1716 0048 FFF7FEFF 	 bl gyroConfigMutable
 1717 004c 0346     	 mov r3,r0
 1718 004e 0022     	 movs r2,#0
 1719 0050 1A74     	 strb r2,[r3,#16]
 1720 0052 0022     	 movs r2,#0
 1721 0054 5A74     	 strb r2,[r3,#17]
 1722              	.L127:
 430:../cleanflight/src/main/fc/config.c ****     }
 431:../cleanflight/src/main/fc/config.c **** 
 432:../cleanflight/src/main/fc/config.c ****     if (gyroConfig()->gyro_hardware_lpf != GYRO_HARDWARE_LPF_NORMAL && gyroConfig()->gyro_hardware_
 1723              	 .loc 11 432 0
 1724 0056 FFF7FEFF 	 bl gyroConfig
 1725 005a 0346     	 mov r3,r0
 1726 005c DB78     	 ldrb r3,[r3,#3]
 1727 005e 002B     	 cmp r3,#0
 1728 0060 14D0     	 beq .L128
 1729              	 .loc 11 432 0 is_stmt 0 discriminator 1
 1730 0062 FFF7FEFF 	 bl gyroConfig
 1731 0066 0346     	 mov r3,r0
 1732 0068 DB78     	 ldrb r3,[r3,#3]
 1733 006a 012B     	 cmp r3,#1
 1734 006c 0ED0     	 beq .L128
 433:../cleanflight/src/main/fc/config.c ****         pidConfigMutable()->pid_process_denom = 1; // When gyro set to 1khz always set pid speed 1:
 1735              	 .loc 11 433 0 is_stmt 1
 1736 006e FFF7FEFF 	 bl pidConfigMutable
 1737 0072 0346     	 mov r3,r0
 1738 0074 0122     	 movs r2,#1
 1739 0076 1A70     	 strb r2,[r3]
 434:../cleanflight/src/main/fc/config.c ****         gyroConfigMutable()->gyro_sync_denom = 1;
 1740              	 .loc 11 434 0
 1741 0078 FFF7FEFF 	 bl gyroConfigMutable
 1742 007c 0346     	 mov r3,r0
 1743 007e 0122     	 movs r2,#1
 1744 0080 9A70     	 strb r2,[r3,#2]
 435:../cleanflight/src/main/fc/config.c ****         gyroConfigMutable()->gyro_use_32khz = false;
 1745              	 .loc 11 435 0
 1746 0082 FFF7FEFF 	 bl gyroConfigMutable
 1747 0086 0346     	 mov r3,r0
 1748 0088 0022     	 movs r2,#0
 1749 008a 9A71     	 strb r2,[r3,#6]
 1750              	.L128:
 436:../cleanflight/src/main/fc/config.c ****     }
 437:../cleanflight/src/main/fc/config.c **** 
 438:../cleanflight/src/main/fc/config.c ****     if (gyroConfig()->gyro_use_32khz) {
 1751              	 .loc 11 438 0
 1752 008c FFF7FEFF 	 bl gyroConfig
 439:../cleanflight/src/main/fc/config.c ****         // F1 and F3 can't handle high sample speed.
 440:../cleanflight/src/main/fc/config.c **** #if defined(STM32F1)
 441:../cleanflight/src/main/fc/config.c ****         gyroConfigMutable()->gyro_sync_denom = MAX(gyroConfig()->gyro_sync_denom, 16);
 442:../cleanflight/src/main/fc/config.c **** #elif defined(STM32F3)
 443:../cleanflight/src/main/fc/config.c ****         gyroConfigMutable()->gyro_sync_denom = MAX(gyroConfig()->gyro_sync_denom, 4);
 444:../cleanflight/src/main/fc/config.c **** #endif
 445:../cleanflight/src/main/fc/config.c ****     } else {
 446:../cleanflight/src/main/fc/config.c **** #if defined(STM32F1)
 447:../cleanflight/src/main/fc/config.c ****         gyroConfigMutable()->gyro_sync_denom = MAX(gyroConfig()->gyro_sync_denom, 3);
 448:../cleanflight/src/main/fc/config.c **** #endif
 449:../cleanflight/src/main/fc/config.c ****     }
 450:../cleanflight/src/main/fc/config.c **** 
 451:../cleanflight/src/main/fc/config.c ****     float samplingTime;
 452:../cleanflight/src/main/fc/config.c ****     switch (gyroMpuDetectionResult()->sensor) {
 1753              	 .loc 11 452 0
 1754 0090 FFF7FEFF 	 bl gyroMpuDetectionResult
 1755 0094 0346     	 mov r3,r0
 1756 0096 1B78     	 ldrb r3,[r3]
 1757 0098 0A2B     	 cmp r3,#10
 1758 009a 02D0     	 beq .L130
 1759 009c 0C2B     	 cmp r3,#12
 1760 009e 03D0     	 beq .L131
 1761 00a0 05E0     	 b .L147
 1762              	.L130:
 453:../cleanflight/src/main/fc/config.c ****     case ICM_20649_SPI:
 454:../cleanflight/src/main/fc/config.c ****         samplingTime = 1.0f / 9000.0f;
 1763              	 .loc 11 454 0
 1764 00a2 624B     	 ldr r3,.L150
 1765 00a4 FB61     	 str r3,[r7,#28]
 455:../cleanflight/src/main/fc/config.c ****         break;
 1766              	 .loc 11 455 0
 1767 00a6 05E0     	 b .L132
 1768              	.L131:
 456:../cleanflight/src/main/fc/config.c ****     case BMI_160_SPI:
 457:../cleanflight/src/main/fc/config.c ****         samplingTime = 0.0003125f;
 1769              	 .loc 11 457 0
 1770 00a8 614B     	 ldr r3,.L150+4
 1771 00aa FB61     	 str r3,[r7,#28]
 458:../cleanflight/src/main/fc/config.c ****         break;
 1772              	 .loc 11 458 0
 1773 00ac 02E0     	 b .L132
 1774              	.L147:
 459:../cleanflight/src/main/fc/config.c ****     default:
 460:../cleanflight/src/main/fc/config.c ****         samplingTime = 0.000125f;
 1775              	 .loc 11 460 0
 1776 00ae 614B     	 ldr r3,.L150+8
 1777 00b0 FB61     	 str r3,[r7,#28]
 461:../cleanflight/src/main/fc/config.c ****         break;
 1778              	 .loc 11 461 0
 1779 00b2 00BF     	 nop
 1780              	.L132:
 462:../cleanflight/src/main/fc/config.c ****     }
 463:../cleanflight/src/main/fc/config.c ****     if (gyroConfig()->gyro_hardware_lpf != GYRO_HARDWARE_LPF_NORMAL && gyroConfig()->gyro_hardware_
 1781              	 .loc 11 463 0
 1782 00b4 FFF7FEFF 	 bl gyroConfig
 1783 00b8 0346     	 mov r3,r0
 1784 00ba DB78     	 ldrb r3,[r3,#3]
 1785 00bc 002B     	 cmp r3,#0
 1786 00be 11D0     	 beq .L133
 1787              	 .loc 11 463 0 is_stmt 0 discriminator 1
 1788 00c0 FFF7FEFF 	 bl gyroConfig
 1789 00c4 0346     	 mov r3,r0
 1790 00c6 DB78     	 ldrb r3,[r3,#3]
 1791 00c8 012B     	 cmp r3,#1
 1792 00ca 0BD0     	 beq .L133
 464:../cleanflight/src/main/fc/config.c ****         switch (gyroMpuDetectionResult()->sensor) {
 1793              	 .loc 11 464 0 is_stmt 1
 1794 00cc FFF7FEFF 	 bl gyroMpuDetectionResult
 1795 00d0 0346     	 mov r3,r0
 1796 00d2 1B78     	 ldrb r3,[r3]
 1797 00d4 0A2B     	 cmp r3,#10
 1798 00d6 02D1     	 bne .L148
 465:../cleanflight/src/main/fc/config.c ****         case ICM_20649_SPI:
 466:../cleanflight/src/main/fc/config.c ****             samplingTime = 1.0f / 1100.0f;
 1799              	 .loc 11 466 0
 1800 00d8 574B     	 ldr r3,.L150+12
 1801 00da FB61     	 str r3,[r7,#28]
 467:../cleanflight/src/main/fc/config.c ****             break;
 1802              	 .loc 11 467 0
 1803 00dc 02E0     	 b .L133
 1804              	.L148:
 468:../cleanflight/src/main/fc/config.c ****         default:
 469:../cleanflight/src/main/fc/config.c ****             samplingTime = 0.001f;
 1805              	 .loc 11 469 0
 1806 00de 574B     	 ldr r3,.L150+16
 1807 00e0 FB61     	 str r3,[r7,#28]
 470:../cleanflight/src/main/fc/config.c ****             break;
 1808              	 .loc 11 470 0
 1809 00e2 00BF     	 nop
 1810              	.L133:
 471:../cleanflight/src/main/fc/config.c ****         }
 472:../cleanflight/src/main/fc/config.c ****     }
 473:../cleanflight/src/main/fc/config.c ****     if (gyroConfig()->gyro_use_32khz) {
 1811              	 .loc 11 473 0
 1812 00e4 FFF7FEFF 	 bl gyroConfig
 1813 00e8 0346     	 mov r3,r0
 1814 00ea 9B79     	 ldrb r3,[r3,#6]
 1815 00ec 002B     	 cmp r3,#0
 1816 00ee 01D0     	 beq .L136
 474:../cleanflight/src/main/fc/config.c ****         samplingTime = 0.00003125;
 1817              	 .loc 11 474 0
 1818 00f0 534B     	 ldr r3,.L150+20
 1819 00f2 FB61     	 str r3,[r7,#28]
 1820              	.L136:
 475:../cleanflight/src/main/fc/config.c ****     }
 476:../cleanflight/src/main/fc/config.c **** 
 477:../cleanflight/src/main/fc/config.c ****     // check for looptime restrictions based on motor protocol. Motor times have safety margin
 478:../cleanflight/src/main/fc/config.c ****     float motorUpdateRestriction;
 479:../cleanflight/src/main/fc/config.c ****     switch (motorConfig()->dev.motorPwmProtocol) {
 1821              	 .loc 11 479 0
 1822 00f4 FFF7FEFF 	 bl motorConfig
 1823 00f8 0346     	 mov r3,r0
 1824 00fa 9B78     	 ldrb r3,[r3,#2]
 1825 00fc 012B     	 cmp r3,#1
 1826 00fe 06D0     	 beq .L138
 1827 0100 022B     	 cmp r3,#2
 1828 0102 07D0     	 beq .L139
 1829 0104 002B     	 cmp r3,#0
 1830 0106 08D1     	 bne .L149
 480:../cleanflight/src/main/fc/config.c ****     case PWM_TYPE_STANDARD:
 481:../cleanflight/src/main/fc/config.c ****             motorUpdateRestriction = 1.0f / BRUSHLESS_MOTORS_PWM_RATE;
 1831              	 .loc 11 481 0
 1832 0108 4E4B     	 ldr r3,.L150+24
 1833 010a BB61     	 str r3,[r7,#24]
 482:../cleanflight/src/main/fc/config.c ****             break;
 1834              	 .loc 11 482 0
 1835 010c 08E0     	 b .L141
 1836              	.L138:
 483:../cleanflight/src/main/fc/config.c ****     case PWM_TYPE_ONESHOT125:
 484:../cleanflight/src/main/fc/config.c ****             motorUpdateRestriction = 0.0005f;
 1837              	 .loc 11 484 0
 1838 010e 4E4B     	 ldr r3,.L150+28
 1839 0110 BB61     	 str r3,[r7,#24]
 485:../cleanflight/src/main/fc/config.c ****             break;
 1840              	 .loc 11 485 0
 1841 0112 05E0     	 b .L141
 1842              	.L139:
 486:../cleanflight/src/main/fc/config.c ****     case PWM_TYPE_ONESHOT42:
 487:../cleanflight/src/main/fc/config.c ****             motorUpdateRestriction = 0.0001f;
 1843              	 .loc 11 487 0
 1844 0114 4D4B     	 ldr r3,.L150+32
 1845 0116 BB61     	 str r3,[r7,#24]
 488:../cleanflight/src/main/fc/config.c ****             break;
 1846              	 .loc 11 488 0
 1847 0118 02E0     	 b .L141
 1848              	.L149:
 489:../cleanflight/src/main/fc/config.c **** #ifdef USE_DSHOT
 490:../cleanflight/src/main/fc/config.c ****     case PWM_TYPE_DSHOT150:
 491:../cleanflight/src/main/fc/config.c ****             motorUpdateRestriction = 0.000250f;
 492:../cleanflight/src/main/fc/config.c ****             break;
 493:../cleanflight/src/main/fc/config.c ****     case PWM_TYPE_DSHOT300:
 494:../cleanflight/src/main/fc/config.c ****             motorUpdateRestriction = 0.0001f;
 495:../cleanflight/src/main/fc/config.c ****             break;
 496:../cleanflight/src/main/fc/config.c **** #endif
 497:../cleanflight/src/main/fc/config.c ****     default:
 498:../cleanflight/src/main/fc/config.c ****         motorUpdateRestriction = 0.00003125f;
 1849              	 .loc 11 498 0
 1850 011a 494B     	 ldr r3,.L150+20
 1851 011c BB61     	 str r3,[r7,#24]
 499:../cleanflight/src/main/fc/config.c ****         break;
 1852              	 .loc 11 499 0
 1853 011e 00BF     	 nop
 1854              	.L141:
 500:../cleanflight/src/main/fc/config.c ****     }
 501:../cleanflight/src/main/fc/config.c **** 
 502:../cleanflight/src/main/fc/config.c ****     if (motorConfig()->dev.useUnsyncedPwm) {
 1855              	 .loc 11 502 0
 1856 0120 FFF7FEFF 	 bl motorConfig
 1857 0124 0346     	 mov r3,r0
 1858 0126 1B79     	 ldrb r3,[r3,#4]
 1859 0128 002B     	 cmp r3,#0
 1860 012a 2CD0     	 beq .L142
 503:../cleanflight/src/main/fc/config.c ****         // Prevent overriding the max rate of motors
 504:../cleanflight/src/main/fc/config.c ****         if ((motorConfig()->dev.motorPwmProtocol <= PWM_TYPE_BRUSHED) && (motorConfig()->dev.motorP
 1861              	 .loc 11 504 0
 1862 012c FFF7FEFF 	 bl motorConfig
 1863 0130 0346     	 mov r3,r0
 1864 0132 9B78     	 ldrb r3,[r3,#2]
 1865 0134 042B     	 cmp r3,#4
 1866 0136 73D8     	 bhi .L125
 1867              	 .loc 11 504 0 is_stmt 0 discriminator 1
 1868 0138 FFF7FEFF 	 bl motorConfig
 1869 013c 0346     	 mov r3,r0
 1870 013e 9B78     	 ldrb r3,[r3,#2]
 1871 0140 002B     	 cmp r3,#0
 1872 0142 6DD0     	 beq .L125
 1873              	.LBB5:
 505:../cleanflight/src/main/fc/config.c ****             const uint32_t maxEscRate = lrintf(1.0f / motorUpdateRestriction);
 1874              	 .loc 11 505 0 is_stmt 1
 1875 0144 B7EE007A 	 fconsts s14,#112
 1876 0148 D7ED067A 	 flds s15,[r7,#24]
 1877 014c C7EE277A 	 fdivs s15,s14,s15
 1878 0150 17EE900A 	 fmrs r0,s15
 1879 0154 FFF7FEFF 	 bl lrintf
 1880 0158 0346     	 mov r3,r0
 1881 015a 7B61     	 str r3,[r7,#20]
 506:../cleanflight/src/main/fc/config.c ****             motorConfigMutable()->dev.motorPwmRate = MIN(motorConfig()->dev.motorPwmRate, maxEscRat
 1882              	 .loc 11 506 0
 1883 015c FFF7FEFF 	 bl motorConfigMutable
 1884 0160 0446     	 mov r4,r0
 1885              	.LBB6:
 1886 0162 FFF7FEFF 	 bl motorConfig
 1887 0166 0346     	 mov r3,r0
 1888 0168 1A78     	 ldrb r2,[r3]
 1889 016a 5B78     	 ldrb r3,[r3,#1]
 1890 016c 1B02     	 lsls r3,r3,#8
 1891 016e 1343     	 orrs r3,r3,r2
 1892 0170 7B82     	 strh r3,[r7,#18]
 1893 0172 7B69     	 ldr r3,[r7,#20]
 1894 0174 FB60     	 str r3,[r7,#12]
 1895 0176 7A8A     	 ldrh r2,[r7,#18]
 1896 0178 FB68     	 ldr r3,[r7,#12]
 1897 017a 9342     	 cmp r3,r2
 1898 017c 28BF     	 it cs
 1899 017e 1346     	 movcs r3,r2
 1900              	.LBE6:
 1901 0180 9BB2     	 uxth r3,r3
 1902 0182 2380     	 strh r3,[r4]
 1903 0184 4CE0     	 b .L125
 1904              	.L142:
 1905              	.LBE5:
 1906              	.LBB7:
 507:../cleanflight/src/main/fc/config.c ****         }
 508:../cleanflight/src/main/fc/config.c ****     } else {
 509:../cleanflight/src/main/fc/config.c ****         const float pidLooptime = samplingTime * gyroConfig()->gyro_sync_denom * pidConfig()->pid_p
 1907              	 .loc 11 509 0
 1908 0186 FFF7FEFF 	 bl gyroConfig
 1909 018a 0346     	 mov r3,r0
 1910 018c 9B78     	 ldrb r3,[r3,#2]
 1911 018e 07EE903A 	 fmsr s15,r3
 1912 0192 B8EEE77A 	 fsitos s14,s15
 1913 0196 D7ED077A 	 flds s15,[r7,#28]
 1914 019a 27EE278A 	 fmuls s16,s14,s15
 1915 019e FFF7FEFF 	 bl pidConfig
 1916 01a2 0346     	 mov r3,r0
 1917 01a4 1B78     	 ldrb r3,[r3]
 1918 01a6 07EE903A 	 fmsr s15,r3
 1919 01aa F8EEE77A 	 fsitos s15,s15
 1920 01ae 68EE277A 	 fmuls s15,s16,s15
 1921 01b2 C7ED027A 	 fsts s15,[r7,#8]
 510:../cleanflight/src/main/fc/config.c ****         if (pidLooptime < motorUpdateRestriction) {
 1922              	 .loc 11 510 0
 1923 01b6 97ED027A 	 flds s14,[r7,#8]
 1924 01ba D7ED067A 	 flds s15,[r7,#24]
 1925 01be B4EEE77A 	 fcmpes s14,s15
 1926 01c2 F1EE10FA 	 fmstat
 1927 01c6 2BD5     	 bpl .L125
 1928              	.LBB8:
 511:../cleanflight/src/main/fc/config.c ****             const uint8_t minPidProcessDenom = constrain(motorUpdateRestriction / (samplingTime * g
 1929              	 .loc 11 511 0
 1930 01c8 FFF7FEFF 	 bl gyroConfig
 1931 01cc 0346     	 mov r3,r0
 1932 01ce 9B78     	 ldrb r3,[r3,#2]
 1933 01d0 07EE903A 	 fmsr s15,r3
 1934 01d4 B8EEE77A 	 fsitos s14,s15
 1935 01d8 D7ED077A 	 flds s15,[r7,#28]
 1936 01dc 67EE277A 	 fmuls s15,s14,s15
 1937 01e0 97ED067A 	 flds s14,[r7,#24]
 1938 01e4 C7EE277A 	 fdivs s15,s14,s15
 1939 01e8 FDEEE77A 	 ftosizs s15,s15
 1940 01ec 17EE900A 	 fmrs r0,s15
 1941 01f0 0121     	 movs r1,#1
 1942 01f2 1022     	 movs r2,#16
 1943 01f4 FFF7FEFF 	 bl constrain
 1944 01f8 0346     	 mov r3,r0
 1945 01fa FB71     	 strb r3,[r7,#7]
 512:../cleanflight/src/main/fc/config.c ****             pidConfigMutable()->pid_process_denom = MAX(pidConfigMutable()->pid_process_denom, minP
 1946              	 .loc 11 512 0
 1947 01fc FFF7FEFF 	 bl pidConfigMutable
 1948 0200 0446     	 mov r4,r0
 1949              	.LBB9:
 1950 0202 FFF7FEFF 	 bl pidConfigMutable
 1951 0206 0346     	 mov r3,r0
 1952 0208 1B78     	 ldrb r3,[r3]
 1953 020a BB71     	 strb r3,[r7,#6]
 1954 020c FB79     	 ldrb r3,[r7,#7]
 1955 020e 7B71     	 strb r3,[r7,#5]
 1956 0210 7A79     	 ldrb r2,[r7,#5]
 1957 0212 BB79     	 ldrb r3,[r7,#6]
 1958 0214 9342     	 cmp r3,r2
 1959 0216 38BF     	 it cc
 1960 0218 1346     	 movcc r3,r2
 1961 021a DBB2     	 uxtb r3,r3
 1962              	.LBE9:
 1963 021c DBB2     	 uxtb r3,r3
 1964 021e 2370     	 strb r3,[r4]
 1965              	.L125:
 1966              	.LBE8:
 1967              	.LBE7:
 513:../cleanflight/src/main/fc/config.c ****         }
 514:../cleanflight/src/main/fc/config.c ****     }
 515:../cleanflight/src/main/fc/config.c **** }
 1968              	 .loc 11 515 0
 1969 0220 2437     	 adds r7,r7,#36
 1970              	.LCFI101:
 1971              	 .cfi_def_cfa_offset 20
 1972 0222 BD46     	 mov sp,r7
 1973              	.LCFI102:
 1974              	 .cfi_def_cfa_register 13
 1975              	 
 1976 0224 BDEC028B 	 fldmfdd sp!,{d8}
 1977              	.LCFI103:
 1978              	 .cfi_restore 80
 1979              	 .cfi_restore 81
 1980              	 .cfi_def_cfa_offset 12
 1981 0228 90BD     	 pop {r4,r7,pc}
 1982              	.L151:
 1983 022a 00BF     	 .align 2
 1984              	.L150:
 1985 022c 5304E938 	 .word 954795091
 1986 0230 0AD7A339 	 .word 967038730
 1987 0234 6F120339 	 .word 956502639
 1988 0238 0F506E3A 	 .word 980307983
 1989 023c 6F12833A 	 .word 981668463
 1990 0240 6F120338 	 .word 939725423
 1991 0244 8988083B 	 .word 990414985
 1992 0248 6F12033A 	 .word 973279855
 1993 024c 17B7D138 	 .word 953267991
 1994              	 .cfi_endproc
 1995              	.LFE628:
 1997              	 .section .text.readEEPROM,"ax",%progbits
 1998              	 .align 2
 1999              	 .global readEEPROM
 2000              	 .thumb
 2001              	 .thumb_func
 2003              	readEEPROM:
 2004              	.LFB629:
 516:../cleanflight/src/main/fc/config.c **** #endif // USE_OSD_SLAVE
 517:../cleanflight/src/main/fc/config.c **** 
 518:../cleanflight/src/main/fc/config.c **** bool readEEPROM(void)
 519:../cleanflight/src/main/fc/config.c **** {
 2005              	 .loc 11 519 0
 2006              	 .cfi_startproc
 2007              	 
 2008              	 
 2009 0000 80B5     	 push {r7,lr}
 2010              	.LCFI104:
 2011              	 .cfi_def_cfa_offset 8
 2012              	 .cfi_offset 7,-8
 2013              	 .cfi_offset 14,-4
 2014 0002 82B0     	 sub sp,sp,#8
 2015              	.LCFI105:
 2016              	 .cfi_def_cfa_offset 16
 2017 0004 00AF     	 add r7,sp,#0
 2018              	.LCFI106:
 2019              	 .cfi_def_cfa_register 7
 520:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
 521:../cleanflight/src/main/fc/config.c ****     suspendRxSignal();
 2020              	 .loc 11 521 0
 2021 0006 FFF7FEFF 	 bl suspendRxSignal
 522:../cleanflight/src/main/fc/config.c **** #endif
 523:../cleanflight/src/main/fc/config.c **** 
 524:../cleanflight/src/main/fc/config.c ****     // Sanity check, read flash
 525:../cleanflight/src/main/fc/config.c ****     bool success = loadEEPROM();
 2022              	 .loc 11 525 0
 2023 000a FFF7FEFF 	 bl loadEEPROM
 2024 000e 0346     	 mov r3,r0
 2025 0010 FB71     	 strb r3,[r7,#7]
 526:../cleanflight/src/main/fc/config.c **** 
 527:../cleanflight/src/main/fc/config.c ****     validateAndFixConfig();
 2026              	 .loc 11 527 0
 2027 0012 FFF7FEFF 	 bl validateAndFixConfig
 528:../cleanflight/src/main/fc/config.c **** 
 529:../cleanflight/src/main/fc/config.c ****     activateConfig();
 2028              	 .loc 11 529 0
 2029 0016 FFF7FEFF 	 bl activateConfig
 530:../cleanflight/src/main/fc/config.c **** 
 531:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
 532:../cleanflight/src/main/fc/config.c ****     resumeRxSignal();
 2030              	 .loc 11 532 0
 2031 001a FFF7FEFF 	 bl resumeRxSignal
 533:../cleanflight/src/main/fc/config.c **** #endif
 534:../cleanflight/src/main/fc/config.c **** 
 535:../cleanflight/src/main/fc/config.c ****     return success;
 2032              	 .loc 11 535 0
 2033 001e FB79     	 ldrb r3,[r7,#7]
 536:../cleanflight/src/main/fc/config.c **** }
 2034              	 .loc 11 536 0
 2035 0020 1846     	 mov r0,r3
 2036 0022 0837     	 adds r7,r7,#8
 2037              	.LCFI107:
 2038              	 .cfi_def_cfa_offset 8
 2039 0024 BD46     	 mov sp,r7
 2040              	.LCFI108:
 2041              	 .cfi_def_cfa_register 13
 2042              	 
 2043 0026 80BD     	 pop {r7,pc}
 2044              	 .cfi_endproc
 2045              	.LFE629:
 2047              	 .section .text.writeEEPROM,"ax",%progbits
 2048              	 .align 2
 2049              	 .global writeEEPROM
 2050              	 .thumb
 2051              	 .thumb_func
 2053              	writeEEPROM:
 2054              	.LFB630:
 537:../cleanflight/src/main/fc/config.c **** 
 538:../cleanflight/src/main/fc/config.c **** void writeEEPROM(void)
 539:../cleanflight/src/main/fc/config.c **** {
 2055              	 .loc 11 539 0
 2056              	 .cfi_startproc
 2057              	 
 2058              	 
 2059 0000 80B5     	 push {r7,lr}
 2060              	.LCFI109:
 2061              	 .cfi_def_cfa_offset 8
 2062              	 .cfi_offset 7,-8
 2063              	 .cfi_offset 14,-4
 2064 0002 00AF     	 add r7,sp,#0
 2065              	.LCFI110:
 2066              	 .cfi_def_cfa_register 7
 540:../cleanflight/src/main/fc/config.c ****     validateAndFixConfig();
 2067              	 .loc 11 540 0
 2068 0004 FFF7FEFF 	 bl validateAndFixConfig
 541:../cleanflight/src/main/fc/config.c **** 
 542:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
 543:../cleanflight/src/main/fc/config.c ****     suspendRxSignal();
 2069              	 .loc 11 543 0
 2070 0008 FFF7FEFF 	 bl suspendRxSignal
 544:../cleanflight/src/main/fc/config.c **** #endif
 545:../cleanflight/src/main/fc/config.c **** 
 546:../cleanflight/src/main/fc/config.c ****     writeConfigToEEPROM();
 2071              	 .loc 11 546 0
 2072 000c FFF7FEFF 	 bl writeConfigToEEPROM
 547:../cleanflight/src/main/fc/config.c **** 
 548:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
 549:../cleanflight/src/main/fc/config.c ****     resumeRxSignal();
 2073              	 .loc 11 549 0
 2074 0010 FFF7FEFF 	 bl resumeRxSignal
 550:../cleanflight/src/main/fc/config.c **** #endif
 551:../cleanflight/src/main/fc/config.c **** }
 2075              	 .loc 11 551 0
 2076 0014 80BD     	 pop {r7,pc}
 2077              	 .cfi_endproc
 2078              	.LFE630:
 2080 0016 00BF     	 .section .text.resetEEPROM,"ax",%progbits
 2081              	 .align 2
 2082              	 .global resetEEPROM
 2083              	 .thumb
 2084              	 .thumb_func
 2086              	resetEEPROM:
 2087              	.LFB631:
 552:../cleanflight/src/main/fc/config.c **** 
 553:../cleanflight/src/main/fc/config.c **** void resetEEPROM(void)
 554:../cleanflight/src/main/fc/config.c **** {
 2088              	 .loc 11 554 0
 2089              	 .cfi_startproc
 2090              	 
 2091              	 
 2092 0000 80B5     	 push {r7,lr}
 2093              	.LCFI111:
 2094              	 .cfi_def_cfa_offset 8
 2095              	 .cfi_offset 7,-8
 2096              	 .cfi_offset 14,-4
 2097 0002 00AF     	 add r7,sp,#0
 2098              	.LCFI112:
 2099              	 .cfi_def_cfa_register 7
 555:../cleanflight/src/main/fc/config.c ****     resetConfigs();
 2100              	 .loc 11 555 0
 2101 0004 FFF7FEFF 	 bl resetConfigs
 556:../cleanflight/src/main/fc/config.c **** 
 557:../cleanflight/src/main/fc/config.c ****     writeEEPROM();
 2102              	 .loc 11 557 0
 2103 0008 FFF7FEFF 	 bl writeEEPROM
 558:../cleanflight/src/main/fc/config.c **** 
 559:../cleanflight/src/main/fc/config.c ****     activateConfig();
 2104              	 .loc 11 559 0
 2105 000c FFF7FEFF 	 bl activateConfig
 560:../cleanflight/src/main/fc/config.c **** }
 2106              	 .loc 11 560 0
 2107 0010 80BD     	 pop {r7,pc}
 2108              	 .cfi_endproc
 2109              	.LFE631:
 2111 0012 00BF     	 .section .text.ensureEEPROMStructureIsValid,"ax",%progbits
 2112              	 .align 2
 2113              	 .global ensureEEPROMStructureIsValid
 2114              	 .thumb
 2115              	 .thumb_func
 2117              	ensureEEPROMStructureIsValid:
 2118              	.LFB632:
 561:../cleanflight/src/main/fc/config.c **** 
 562:../cleanflight/src/main/fc/config.c **** void ensureEEPROMStructureIsValid(void)
 563:../cleanflight/src/main/fc/config.c **** {
 2119              	 .loc 11 563 0
 2120              	 .cfi_startproc
 2121              	 
 2122              	 
 2123 0000 80B5     	 push {r7,lr}
 2124              	.LCFI113:
 2125              	 .cfi_def_cfa_offset 8
 2126              	 .cfi_offset 7,-8
 2127              	 .cfi_offset 14,-4
 2128 0002 00AF     	 add r7,sp,#0
 2129              	.LCFI114:
 2130              	 .cfi_def_cfa_register 7
 564:../cleanflight/src/main/fc/config.c ****     if (isEEPROMStructureValid()) {
 2131              	 .loc 11 564 0
 2132 0004 FFF7FEFF 	 bl isEEPROMStructureValid
 2133 0008 0346     	 mov r3,r0
 2134 000a 002B     	 cmp r3,#0
 2135 000c 00D0     	 beq .L157
 565:../cleanflight/src/main/fc/config.c ****         return;
 2136              	 .loc 11 565 0
 2137 000e 01E0     	 b .L156
 2138              	.L157:
 566:../cleanflight/src/main/fc/config.c ****     }
 567:../cleanflight/src/main/fc/config.c ****     resetEEPROM();
 2139              	 .loc 11 567 0
 2140 0010 FFF7FEFF 	 bl resetEEPROM
 2141              	.L156:
 568:../cleanflight/src/main/fc/config.c **** }
 2142              	 .loc 11 568 0
 2143 0014 80BD     	 pop {r7,pc}
 2144              	 .cfi_endproc
 2145              	.LFE632:
 2147 0016 00BF     	 .section .text.saveConfigAndNotify,"ax",%progbits
 2148              	 .align 2
 2149              	 .global saveConfigAndNotify
 2150              	 .thumb
 2151              	 .thumb_func
 2153              	saveConfigAndNotify:
 2154              	.LFB633:
 569:../cleanflight/src/main/fc/config.c **** 
 570:../cleanflight/src/main/fc/config.c **** void saveConfigAndNotify(void)
 571:../cleanflight/src/main/fc/config.c **** {
 2155              	 .loc 11 571 0
 2156              	 .cfi_startproc
 2157              	 
 2158              	 
 2159 0000 80B5     	 push {r7,lr}
 2160              	.LCFI115:
 2161              	 .cfi_def_cfa_offset 8
 2162              	 .cfi_offset 7,-8
 2163              	 .cfi_offset 14,-4
 2164 0002 00AF     	 add r7,sp,#0
 2165              	.LCFI116:
 2166              	 .cfi_def_cfa_register 7
 572:../cleanflight/src/main/fc/config.c ****     writeEEPROM();
 2167              	 .loc 11 572 0
 2168 0004 FFF7FEFF 	 bl writeEEPROM
 573:../cleanflight/src/main/fc/config.c ****     readEEPROM();
 2169              	 .loc 11 573 0
 2170 0008 FFF7FEFF 	 bl readEEPROM
 574:../cleanflight/src/main/fc/config.c ****     beeperConfirmationBeeps(1);
 2171              	 .loc 11 574 0
 2172 000c 0120     	 movs r0,#1
 2173 000e FFF7FEFF 	 bl beeperConfirmationBeeps
 575:../cleanflight/src/main/fc/config.c **** }
 2174              	 .loc 11 575 0
 2175 0012 80BD     	 pop {r7,pc}
 2176              	 .cfi_endproc
 2177              	.LFE633:
 2179              	 .section .text.changePidProfile,"ax",%progbits
 2180              	 .align 2
 2181              	 .global changePidProfile
 2182              	 .thumb
 2183              	 .thumb_func
 2185              	changePidProfile:
 2186              	.LFB634:
 576:../cleanflight/src/main/fc/config.c **** 
 577:../cleanflight/src/main/fc/config.c **** #ifndef USE_OSD_SLAVE
 578:../cleanflight/src/main/fc/config.c **** void changePidProfile(uint8_t pidProfileIndex)
 579:../cleanflight/src/main/fc/config.c **** {
 2187              	 .loc 11 579 0
 2188              	 .cfi_startproc
 2189              	 
 2190              	 
 2191 0000 80B5     	 push {r7,lr}
 2192              	.LCFI117:
 2193              	 .cfi_def_cfa_offset 8
 2194              	 .cfi_offset 7,-8
 2195              	 .cfi_offset 14,-4
 2196 0002 82B0     	 sub sp,sp,#8
 2197              	.LCFI118:
 2198              	 .cfi_def_cfa_offset 16
 2199 0004 00AF     	 add r7,sp,#0
 2200              	.LCFI119:
 2201              	 .cfi_def_cfa_register 7
 2202 0006 0346     	 mov r3,r0
 2203 0008 FB71     	 strb r3,[r7,#7]
 580:../cleanflight/src/main/fc/config.c ****     if (pidProfileIndex < MAX_PROFILE_COUNT) {
 2204              	 .loc 11 580 0
 2205 000a FB79     	 ldrb r3,[r7,#7]
 2206 000c 022B     	 cmp r3,#2
 2207 000e 06D8     	 bhi .L161
 581:../cleanflight/src/main/fc/config.c ****         systemConfigMutable()->pidProfileIndex = pidProfileIndex;
 2208              	 .loc 11 581 0
 2209 0010 FFF7FEFF 	 bl systemConfigMutable
 2210 0014 0246     	 mov r2,r0
 2211 0016 FB79     	 ldrb r3,[r7,#7]
 2212 0018 1370     	 strb r3,[r2]
 582:../cleanflight/src/main/fc/config.c ****         loadPidProfile();
 2213              	 .loc 11 582 0
 2214 001a FFF7FEFF 	 bl loadPidProfile
 2215              	.L161:
 583:../cleanflight/src/main/fc/config.c ****     }
 584:../cleanflight/src/main/fc/config.c **** 
 585:../cleanflight/src/main/fc/config.c ****     beeperConfirmationBeeps(pidProfileIndex + 1);
 2216              	 .loc 11 585 0
 2217 001e FB79     	 ldrb r3,[r7,#7]
 2218 0020 0133     	 adds r3,r3,#1
 2219 0022 DBB2     	 uxtb r3,r3
 2220 0024 1846     	 mov r0,r3
 2221 0026 FFF7FEFF 	 bl beeperConfirmationBeeps
 586:../cleanflight/src/main/fc/config.c **** }
 2222              	 .loc 11 586 0
 2223 002a 0837     	 adds r7,r7,#8
 2224              	.LCFI120:
 2225              	 .cfi_def_cfa_offset 8
 2226 002c BD46     	 mov sp,r7
 2227              	.LCFI121:
 2228              	 .cfi_def_cfa_register 13
 2229              	 
 2230 002e 80BD     	 pop {r7,pc}
 2231              	 .cfi_endproc
 2232              	.LFE634:
 2234              	 .text
 2235              	.Letext0:
 2236              	 .file 12 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2237              	 .file 13 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2238              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 2239              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pg.h"
 2240              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build/debug.h"
 2241              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 2242              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 2243              	 .file 19 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/controlrate_profile.h"
 2244              	 .file 20 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 2245              	 .file 21 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/fc_rc.h"
 2246              	 .file 22 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_modes.h"
 2247              	 .file 23 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_adjustments.h"
 2248              	 .file 24 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_controls.h"
 2249              	 .file 25 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/imu.h"
 2250              	 .file 26 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/pwm_output.h"
 2251              	 .file 27 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/servos.h"
 2252              	 .file 28 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/color.h"
 2253              	 .file 29 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/ledstrip.h"
 2254              	 .file 30 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 2255              	 .file 31 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
 2256              	 .file 32 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/beeper.h"
 2257              	 .file 33 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/beeper_dev.h"
 2258              	 .file 34 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/rx/rx.h"
 2259              	 .file 35 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/sensor.h"
 2260              	 .file 36 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/accgyro/accgyro_mpu.h"
 2261              	 .file 37 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/sensors.h"
 2262              	 .file 38 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/current.h"
 2263              	 .file 39 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/voltage.h"
 2264              	 .file 40 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/battery.h"
 2265              	 .file 41 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 2266              	 .file 42 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 config.c
    {standard input}:20     .text.systemConfig:00000000 $t
    {standard input}:24     .text.systemConfig:00000000 systemConfig
    {standard input}:54     .text.systemConfig:00000010 $d
                            *COM*:0000000d systemConfig_System
    {standard input}:59     .text.systemConfigMutable:00000000 $t
    {standard input}:63     .text.systemConfigMutable:00000000 systemConfigMutable
    {standard input}:92     .text.systemConfigMutable:00000010 $d
    {standard input}:97     .text.throttleCorrectionConfig:00000000 $t
    {standard input}:101    .text.throttleCorrectionConfig:00000000 throttleCorrectionConfig
    {standard input}:131    .text.throttleCorrectionConfig:00000010 $d
    {standard input}:136    .text.failsafeConfig:00000000 $t
    {standard input}:140    .text.failsafeConfig:00000000 failsafeConfig
    {standard input}:170    .text.failsafeConfig:00000010 $d
    {standard input}:175    .text.failsafeConfigMutable:00000000 $t
    {standard input}:179    .text.failsafeConfigMutable:00000000 failsafeConfigMutable
    {standard input}:208    .text.failsafeConfigMutable:00000010 $d
    {standard input}:213    .text.constrain:00000000 $t
    {standard input}:217    .text.constrain:00000000 constrain
    {standard input}:277    .text.mixerConfigMutable:00000000 $t
    {standard input}:281    .text.mixerConfigMutable:00000000 mixerConfigMutable
    {standard input}:311    .text.mixerConfigMutable:00000010 $d
    {standard input}:316    .text.motorConfig:00000000 $t
    {standard input}:320    .text.motorConfig:00000000 motorConfig
    {standard input}:349    .text.motorConfig:00000010 $d
    {standard input}:354    .text.motorConfigMutable:00000000 $t
    {standard input}:358    .text.motorConfigMutable:00000000 motorConfigMutable
    {standard input}:387    .text.motorConfigMutable:00000010 $d
    {standard input}:392    .text.pidProfilesMutable:00000000 $t
    {standard input}:396    .text.pidProfilesMutable:00000000 pidProfilesMutable
    {standard input}:437    .text.pidProfilesMutable:00000020 $d
    {standard input}:442    .text.pidConfig:00000000 $t
    {standard input}:446    .text.pidConfig:00000000 pidConfig
    {standard input}:475    .text.pidConfig:00000010 $d
    {standard input}:480    .text.pidConfigMutable:00000000 $t
    {standard input}:484    .text.pidConfigMutable:00000000 pidConfigMutable
    {standard input}:513    .text.pidConfigMutable:00000010 $d
                            *COM*:00000001 inputSource_e
                            *COM*:00000004 colors
                            *COM*:00000004 modeColors
                            *COM*:0000000b specialColors
    {standard input}:522    .text.serialConfig:00000000 $t
    {standard input}:526    .text.serialConfig:00000000 serialConfig
    {standard input}:556    .text.serialConfig:00000010 $d
    {standard input}:561    .text.serialConfigMutable:00000000 $t
    {standard input}:565    .text.serialConfigMutable:00000000 serialConfigMutable
    {standard input}:594    .text.serialConfigMutable:00000010 $d
    {standard input}:599    .text.rxConfig:00000000 $t
    {standard input}:603    .text.rxConfig:00000000 rxConfig
    {standard input}:633    .text.rxConfig:00000010 $d
    {standard input}:638    .text.rxConfigMutable:00000000 $t
    {standard input}:642    .text.rxConfigMutable:00000000 rxConfigMutable
    {standard input}:671    .text.rxConfigMutable:00000010 $d
    {standard input}:676    .text.gyroConfig:00000000 $t
    {standard input}:680    .text.gyroConfig:00000000 gyroConfig
    {standard input}:710    .text.gyroConfig:00000010 $d
    {standard input}:715    .text.gyroConfigMutable:00000000 $t
    {standard input}:719    .text.gyroConfigMutable:00000000 gyroConfigMutable
    {standard input}:748    .text.gyroConfigMutable:00000010 $d
    {standard input}:753    .text.accelerometerConfigMutable:00000000 $t
    {standard input}:757    .text.accelerometerConfigMutable:00000000 accelerometerConfigMutable
    {standard input}:787    .text.accelerometerConfigMutable:00000010 $d
                            *COM*:00000004 currentPidProfile
                            *COM*:00000011 pilotConfig_System
                            *COM*:00000011 pilotConfig_Copy
    {standard input}:799    .pg_registry:00000000 pilotConfig_Registry
    {standard input}:796    .pg_registry:00000000 $d
    {standard input}:811    .pg_resetdata:00000000 pgResetTemplate_pilotConfig
    {standard input}:808    .pg_resetdata:00000000 $d
                            *COM*:0000000d systemConfig_Copy
    {standard input}:820    .pg_registry:00000014 systemConfig_Registry
    {standard input}:832    .pg_resetdata:00000012 pgResetTemplate_systemConfig
    {standard input}:843    .text.getCurrentPidProfileIndex:00000000 $t
    {standard input}:848    .text.getCurrentPidProfileIndex:00000000 getCurrentPidProfileIndex
    {standard input}:874    .text.loadPidProfile:00000000 $t
    {standard input}:878    .text.loadPidProfile:00000000 loadPidProfile
    {standard input}:906    .text.loadPidProfile:0000001c $d
    {standard input}:911    .text.getCurrentControlRateProfileIndex:00000000 $t
    {standard input}:916    .text.getCurrentControlRateProfileIndex:00000000 getCurrentControlRateProfileIndex
    {standard input}:941    .text.getCurrentMinthrottle:00000000 $t
    {standard input}:946    .text.getCurrentMinthrottle:00000000 getCurrentMinthrottle
    {standard input}:972    .text.resetConfigs:00000000 $t
    {standard input}:977    .text.resetConfigs:00000000 resetConfigs
    {standard input}:1001   .text.activateConfig:00000000 $t
    {standard input}:1005   .text.activateConfig:00000000 activateConfig
    {standard input}:1070   .text.activateConfig:00000064 $d
    {standard input}:1075   .text.validateAndFixConfig:00000000 $t
    {standard input}:1079   .text.validateAndFixConfig:00000000 validateAndFixConfig
    {standard input}:1662   .text.validateAndFixGyroConfig:00000000 validateAndFixGyroConfig
    {standard input}:1499   .text.validateAndFixConfig:0000030c $d
    {standard input}:1508   .text.validateAndFixConfig:00000328 $t
    {standard input}:1657   .text.validateAndFixGyroConfig:00000000 $t
    {standard input}:1985   .text.validateAndFixGyroConfig:0000022c $d
    {standard input}:1998   .text.readEEPROM:00000000 $t
    {standard input}:2003   .text.readEEPROM:00000000 readEEPROM
    {standard input}:2048   .text.writeEEPROM:00000000 $t
    {standard input}:2053   .text.writeEEPROM:00000000 writeEEPROM
    {standard input}:2081   .text.resetEEPROM:00000000 $t
    {standard input}:2086   .text.resetEEPROM:00000000 resetEEPROM
    {standard input}:2112   .text.ensureEEPROMStructureIsValid:00000000 $t
    {standard input}:2117   .text.ensureEEPROMStructureIsValid:00000000 ensureEEPROMStructureIsValid
    {standard input}:2148   .text.saveConfigAndNotify:00000000 $t
    {standard input}:2153   .text.saveConfigAndNotify:00000000 saveConfigAndNotify
    {standard input}:2180   .text.changePidProfile:00000000 $t
    {standard input}:2185   .text.changePidProfile:00000000 changePidProfile
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
throttleCorrectionConfig_System
failsafeConfig_System
mixerConfig_System
motorConfig_System
pidProfiles_SystemArray
pidConfig_System
serialConfig_System
rxConfig_System
gyroConfig_System
accelerometerConfig_System
pgResetAll
targetConfiguration
loadControlRateProfile
initRcProcessing
resetAdjustmentStates
pidInit
useRcControlsConfig
useAdjustmentConfig
failsafeReset
setAccelerationTrims
accInitFilters
imuConfigure
isSerialConfigValid
pgResetFn_serialConfig
findSerialPortConfig
featureClear
featureConfigured
featureSet
rcSmoothingIsEnabled
mixers
servoMixers
isModeActivationConditionPresent
removeModeActivationCondition
gyroMpuDetectionResult
lrintf
suspendRxSignal
loadEEPROM
resumeRxSignal
writeConfigToEEPROM
isEEPROMStructureValid
beeperConfirmationBeeps
