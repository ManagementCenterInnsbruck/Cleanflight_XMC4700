   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "controlrate_profile.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.systemConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	systemConfig:
  25              	.LFB526:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #define MAX_NAME_LENGTH 16u
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct pilotConfig_s {
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char name[MAX_NAME_LENGTH + 1];
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } pilotConfig_t;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(pilotConfig_t, pilotConfig);
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct systemConfig_s {
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t pidProfileIndex;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t activeRateProfile;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t debug_mode;
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t task_statistics;
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t rateProfile6PosSwitch;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t cpu_overclock;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t powerOnArmingGraceTime; // in seconds
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char boardIdentifier[sizeof(TARGET_BOARD_IDENTIFIER) + 1];
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } systemConfig_t;
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(systemConfig_t, systemConfig);
  27              	 .loc 1 47 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 47 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word systemConfig_System
  55              	 .cfi_endproc
  56              	.LFE526:
  58              	 .section .text.systemConfigMutable,"ax",%progbits
  59              	 .align 2
  60              	 .thumb
  61              	 .thumb_func
  63              	systemConfigMutable:
  64              	.LFB527:
  65              	 .loc 1 47 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69              	 
  70 0000 80B4     	 push {r7}
  71              	.LCFI4:
  72              	 .cfi_def_cfa_offset 4
  73              	 .cfi_offset 7,-4
  74 0002 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77              	 .loc 1 47 0
  78 0004 024B     	 ldr r3,.L7
  79 0006 1846     	 mov r0,r3
  80 0008 BD46     	 mov sp,r7
  81              	.LCFI6:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 000a 5DF8047B 	 ldr r7,[sp],#4
  85              	.LCFI7:
  86              	 .cfi_restore 7
  87              	 .cfi_def_cfa_offset 0
  88 000e 7047     	 bx lr
  89              	.L8:
  90              	 .align 2
  91              	.L7:
  92 0010 00000000 	 .word systemConfig_System
  93              	 .cfi_endproc
  94              	.LFE527:
  96              	 .section .text.controlRateProfilesMutable,"ax",%progbits
  97              	 .align 2
  98              	 .thumb
  99              	 .thumb_func
 101              	controlRateProfilesMutable:
 102              	.LFB529:
 103              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/controlrate_profile.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** #define CONTROL_RATE_PROFILE_COUNT  6
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     RATES_TYPE_BETAFLIGHT = 0,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     RATES_TYPE_RACEFLIGHT,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** } ratesType_e;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** typedef enum {
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     THROTTLE_LIMIT_TYPE_OFF = 0,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     THROTTLE_LIMIT_TYPE_SCALE,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     THROTTLE_LIMIT_TYPE_CLIP,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** } throttleLimitType_e;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** typedef struct controlRateConfig_s {
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t thrMid8;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t thrExpo8;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t rates_type;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t rcRates[3];
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t rcExpo[3];
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t rates[3];
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t dynThrPID;
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint16_t tpa_breakpoint;                // Breakpoint where TPA is activated
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t throttle_limit_type;            // Sets the throttle limiting type - off, scale or clip
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h ****     uint8_t throttle_limit_percent;         // Sets the maximum pilot commanded throttle limit
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** } controlRateConfig_t;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\controlrate_profile.h **** PG_DECLARE_ARRAY(controlRateConfig_t, CONTROL_RATE_PROFILE_COUNT, controlRateProfiles);
 104              	 .loc 2 53 0
 105              	 .cfi_startproc
 106              	 
 107              	 
 108              	 
 109 0000 80B4     	 push {r7}
 110              	.LCFI8:
 111              	 .cfi_def_cfa_offset 4
 112              	 .cfi_offset 7,-4
 113 0002 83B0     	 sub sp,sp,#12
 114              	.LCFI9:
 115              	 .cfi_def_cfa_offset 16
 116 0004 00AF     	 add r7,sp,#0
 117              	.LCFI10:
 118              	 .cfi_def_cfa_register 7
 119 0006 7860     	 str r0,[r7,#4]
 120              	 .loc 2 53 0
 121 0008 7A68     	 ldr r2,[r7,#4]
 122 000a 1346     	 mov r3,r2
 123 000c 1B01     	 lsls r3,r3,#4
 124 000e 1344     	 add r3,r3,r2
 125 0010 034A     	 ldr r2,.L11
 126 0012 1344     	 add r3,r3,r2
 127 0014 1846     	 mov r0,r3
 128 0016 0C37     	 adds r7,r7,#12
 129              	.LCFI11:
 130              	 .cfi_def_cfa_offset 4
 131 0018 BD46     	 mov sp,r7
 132              	.LCFI12:
 133              	 .cfi_def_cfa_register 13
 134              	 
 135 001a 5DF8047B 	 ldr r7,[sp],#4
 136              	.LCFI13:
 137              	 .cfi_restore 7
 138              	 .cfi_def_cfa_offset 0
 139 001e 7047     	 bx lr
 140              	.L12:
 141              	 .align 2
 142              	.L11:
 143 0020 00000000 	 .word controlRateProfiles_SystemArray
 144              	 .cfi_endproc
 145              	.LFE529:
 147              	 .comm currentControlRateProfile,4,4
 148              	 .comm controlRateProfiles_SystemArray,102,4
 149              	 .comm controlRateProfiles_CopyArray,102,4
 150              	 .global controlRateProfiles_Registry
 151              	 .section .pg_registry,"a",%progbits
 152              	 .align 2
 155              	controlRateProfiles_Registry:
 156 0000 0C10     	 .short 4108
 157 0002 6600     	 .short 102
 158 0004 00000000 	 .word controlRateProfiles_SystemArray
 159 0008 00000000 	 .word controlRateProfiles_CopyArray
 160 000c 00000000 	 .word 0
 161 0010 00000000 	 .word pgResetFn_controlRateProfiles
 162              	 .section .text.pgResetFn_controlRateProfiles,"ax",%progbits
 163              	 .align 2
 164              	 .global pgResetFn_controlRateProfiles
 165              	 .thumb
 166              	 .thumb_func
 168              	pgResetFn_controlRateProfiles:
 169              	.LFB531:
 170              	 .file 3 "../cleanflight/src/main/fc/controlrate_profile.c"
   1:../cleanflight/src/main/fc/controlrate_profile.c **** /*
   2:../cleanflight/src/main/fc/controlrate_profile.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/fc/controlrate_profile.c ****  *
   4:../cleanflight/src/main/fc/controlrate_profile.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/fc/controlrate_profile.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/fc/controlrate_profile.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/fc/controlrate_profile.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/fc/controlrate_profile.c ****  * any later version.
   9:../cleanflight/src/main/fc/controlrate_profile.c ****  *
  10:../cleanflight/src/main/fc/controlrate_profile.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/fc/controlrate_profile.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/fc/controlrate_profile.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/fc/controlrate_profile.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/fc/controlrate_profile.c ****  *
  15:../cleanflight/src/main/fc/controlrate_profile.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/fc/controlrate_profile.c ****  * along with this software.
  17:../cleanflight/src/main/fc/controlrate_profile.c ****  *
  18:../cleanflight/src/main/fc/controlrate_profile.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/fc/controlrate_profile.c ****  */
  20:../cleanflight/src/main/fc/controlrate_profile.c **** 
  21:../cleanflight/src/main/fc/controlrate_profile.c **** #include <stdbool.h>
  22:../cleanflight/src/main/fc/controlrate_profile.c **** #include <stdint.h>
  23:../cleanflight/src/main/fc/controlrate_profile.c **** #include <string.h>
  24:../cleanflight/src/main/fc/controlrate_profile.c **** 
  25:../cleanflight/src/main/fc/controlrate_profile.c **** #include "platform.h"
  26:../cleanflight/src/main/fc/controlrate_profile.c **** 
  27:../cleanflight/src/main/fc/controlrate_profile.c **** #include "common/axis.h"
  28:../cleanflight/src/main/fc/controlrate_profile.c **** 
  29:../cleanflight/src/main/fc/controlrate_profile.c **** #include "config/config_reset.h"
  30:../cleanflight/src/main/fc/controlrate_profile.c **** #include "pg/pg.h"
  31:../cleanflight/src/main/fc/controlrate_profile.c **** #include "pg/pg_ids.h"
  32:../cleanflight/src/main/fc/controlrate_profile.c **** 
  33:../cleanflight/src/main/fc/controlrate_profile.c **** #include "fc/config.h"
  34:../cleanflight/src/main/fc/controlrate_profile.c **** #include "fc/controlrate_profile.h"
  35:../cleanflight/src/main/fc/controlrate_profile.c **** #include "fc/fc_rc.h"
  36:../cleanflight/src/main/fc/controlrate_profile.c **** 
  37:../cleanflight/src/main/fc/controlrate_profile.c **** controlRateConfig_t *currentControlRateProfile;
  38:../cleanflight/src/main/fc/controlrate_profile.c **** 
  39:../cleanflight/src/main/fc/controlrate_profile.c **** PG_REGISTER_ARRAY_WITH_RESET_FN(controlRateConfig_t, CONTROL_RATE_PROFILE_COUNT, controlRateProfile
  40:../cleanflight/src/main/fc/controlrate_profile.c **** 
  41:../cleanflight/src/main/fc/controlrate_profile.c **** void pgResetFn_controlRateProfiles(controlRateConfig_t *controlRateConfig)
  42:../cleanflight/src/main/fc/controlrate_profile.c **** {
 171              	 .loc 3 42 0
 172              	 .cfi_startproc
 173              	 
 174              	 
 175              	 
 176 0000 B0B4     	 push {r4,r5,r7}
 177              	.LCFI14:
 178              	 .cfi_def_cfa_offset 12
 179              	 .cfi_offset 4,-12
 180              	 .cfi_offset 5,-8
 181              	 .cfi_offset 7,-4
 182 0002 85B0     	 sub sp,sp,#20
 183              	.LCFI15:
 184              	 .cfi_def_cfa_offset 32
 185 0004 00AF     	 add r7,sp,#0
 186              	.LCFI16:
 187              	 .cfi_def_cfa_register 7
 188 0006 7860     	 str r0,[r7,#4]
 189              	.LBB2:
  43:../cleanflight/src/main/fc/controlrate_profile.c ****     for (int i = 0; i < CONTROL_RATE_PROFILE_COUNT; i++) {
 190              	 .loc 3 43 0
 191 0008 0023     	 movs r3,#0
 192 000a FB60     	 str r3,[r7,#12]
 193 000c 12E0     	 b .L14
 194              	.L15:
 195              	.LBB3:
  44:../cleanflight/src/main/fc/controlrate_profile.c ****         RESET_CONFIG(controlRateConfig_t, &controlRateConfig[i],
 196              	 .loc 3 44 0 discriminator 3
 197 000e FA68     	 ldr r2,[r7,#12]
 198 0010 1346     	 mov r3,r2
 199 0012 1B01     	 lsls r3,r3,#4
 200 0014 1344     	 add r3,r3,r2
 201 0016 7A68     	 ldr r2,[r7,#4]
 202 0018 1344     	 add r3,r3,r2
 203 001a 0A4A     	 ldr r2,.L16
 204 001c 1D46     	 mov r5,r3
 205 001e 1446     	 mov r4,r2
 206 0020 0FCC     	 ldmia r4!,{r0,r1,r2,r3}
 207 0022 2860     	 str r0,[r5]
 208 0024 6960     	 str r1,[r5,#4]
 209 0026 AA60     	 str r2,[r5,#8]
 210 0028 EB60     	 str r3,[r5,#12]
 211 002a 2378     	 ldrb r3,[r4]
 212 002c 2B74     	 strb r3,[r5,#16]
 213              	.LBE3:
  43:../cleanflight/src/main/fc/controlrate_profile.c ****     for (int i = 0; i < CONTROL_RATE_PROFILE_COUNT; i++) {
 214              	 .loc 3 43 0 discriminator 3
 215 002e FB68     	 ldr r3,[r7,#12]
 216 0030 0133     	 adds r3,r3,#1
 217 0032 FB60     	 str r3,[r7,#12]
 218              	.L14:
  43:../cleanflight/src/main/fc/controlrate_profile.c ****     for (int i = 0; i < CONTROL_RATE_PROFILE_COUNT; i++) {
 219              	 .loc 3 43 0 is_stmt 0 discriminator 1
 220 0034 FB68     	 ldr r3,[r7,#12]
 221 0036 052B     	 cmp r3,#5
 222 0038 E9DD     	 ble .L15
 223              	.LBE2:
  45:../cleanflight/src/main/fc/controlrate_profile.c ****             .thrMid8 = 50,
  46:../cleanflight/src/main/fc/controlrate_profile.c ****             .thrExpo8 = 0,
  47:../cleanflight/src/main/fc/controlrate_profile.c ****             .dynThrPID = 10,
  48:../cleanflight/src/main/fc/controlrate_profile.c ****             .tpa_breakpoint = 1650,
  49:../cleanflight/src/main/fc/controlrate_profile.c ****             .rates_type = RATES_TYPE_BETAFLIGHT,
  50:../cleanflight/src/main/fc/controlrate_profile.c ****             .rcRates[FD_ROLL] = 100,
  51:../cleanflight/src/main/fc/controlrate_profile.c ****             .rcRates[FD_PITCH] = 100,
  52:../cleanflight/src/main/fc/controlrate_profile.c ****             .rcRates[FD_YAW] = 100,
  53:../cleanflight/src/main/fc/controlrate_profile.c ****             .rcExpo[FD_ROLL] = 0,
  54:../cleanflight/src/main/fc/controlrate_profile.c ****             .rcExpo[FD_PITCH] = 0,
  55:../cleanflight/src/main/fc/controlrate_profile.c ****             .rcExpo[FD_YAW] = 0,
  56:../cleanflight/src/main/fc/controlrate_profile.c ****             .rates[FD_ROLL] = 70,
  57:../cleanflight/src/main/fc/controlrate_profile.c ****             .rates[FD_PITCH] = 70,
  58:../cleanflight/src/main/fc/controlrate_profile.c ****             .rates[FD_YAW] = 70,
  59:../cleanflight/src/main/fc/controlrate_profile.c ****             .throttle_limit_type = THROTTLE_LIMIT_TYPE_OFF,
  60:../cleanflight/src/main/fc/controlrate_profile.c ****             .throttle_limit_percent = 100
  61:../cleanflight/src/main/fc/controlrate_profile.c ****         );
  62:../cleanflight/src/main/fc/controlrate_profile.c ****     }
  63:../cleanflight/src/main/fc/controlrate_profile.c **** }
 224              	 .loc 3 63 0 is_stmt 1
 225 003a 1437     	 adds r7,r7,#20
 226              	.LCFI17:
 227              	 .cfi_def_cfa_offset 12
 228 003c BD46     	 mov sp,r7
 229              	.LCFI18:
 230              	 .cfi_def_cfa_register 13
 231              	 
 232 003e B0BC     	 pop {r4,r5,r7}
 233              	.LCFI19:
 234              	 .cfi_restore 7
 235              	 .cfi_restore 5
 236              	 .cfi_restore 4
 237              	 .cfi_def_cfa_offset 0
 238 0040 7047     	 bx lr
 239              	.L17:
 240 0042 00BF     	 .align 2
 241              	.L16:
 242 0044 00000000 	 .word _reset_template_61.11649
 243              	 .cfi_endproc
 244              	.LFE531:
 246              	 .section .text.loadControlRateProfile,"ax",%progbits
 247              	 .align 2
 248              	 .global loadControlRateProfile
 249              	 .thumb
 250              	 .thumb_func
 252              	loadControlRateProfile:
 253              	.LFB532:
  64:../cleanflight/src/main/fc/controlrate_profile.c **** 
  65:../cleanflight/src/main/fc/controlrate_profile.c **** void loadControlRateProfile(void)
  66:../cleanflight/src/main/fc/controlrate_profile.c **** {
 254              	 .loc 3 66 0
 255              	 .cfi_startproc
 256              	 
 257              	 
 258 0000 80B5     	 push {r7,lr}
 259              	.LCFI20:
 260              	 .cfi_def_cfa_offset 8
 261              	 .cfi_offset 7,-8
 262              	 .cfi_offset 14,-4
 263 0002 00AF     	 add r7,sp,#0
 264              	.LCFI21:
 265              	 .cfi_def_cfa_register 7
  67:../cleanflight/src/main/fc/controlrate_profile.c ****     currentControlRateProfile = controlRateProfilesMutable(systemConfig()->activeRateProfile);
 266              	 .loc 3 67 0
 267 0004 FFF7FEFF 	 bl systemConfig
 268 0008 0346     	 mov r3,r0
 269 000a 5B78     	 ldrb r3,[r3,#1]
 270 000c 1846     	 mov r0,r3
 271 000e FFF7FEFF 	 bl controlRateProfilesMutable
 272 0012 0246     	 mov r2,r0
 273 0014 014B     	 ldr r3,.L19
 274 0016 1A60     	 str r2,[r3]
  68:../cleanflight/src/main/fc/controlrate_profile.c **** }
 275              	 .loc 3 68 0
 276 0018 80BD     	 pop {r7,pc}
 277              	.L20:
 278 001a 00BF     	 .align 2
 279              	.L19:
 280 001c 00000000 	 .word currentControlRateProfile
 281              	 .cfi_endproc
 282              	.LFE532:
 284              	 .section .text.changeControlRateProfile,"ax",%progbits
 285              	 .align 2
 286              	 .global changeControlRateProfile
 287              	 .thumb
 288              	 .thumb_func
 290              	changeControlRateProfile:
 291              	.LFB533:
  69:../cleanflight/src/main/fc/controlrate_profile.c **** 
  70:../cleanflight/src/main/fc/controlrate_profile.c **** void changeControlRateProfile(uint8_t controlRateProfileIndex)
  71:../cleanflight/src/main/fc/controlrate_profile.c **** {
 292              	 .loc 3 71 0
 293              	 .cfi_startproc
 294              	 
 295              	 
 296 0000 80B5     	 push {r7,lr}
 297              	.LCFI22:
 298              	 .cfi_def_cfa_offset 8
 299              	 .cfi_offset 7,-8
 300              	 .cfi_offset 14,-4
 301 0002 82B0     	 sub sp,sp,#8
 302              	.LCFI23:
 303              	 .cfi_def_cfa_offset 16
 304 0004 00AF     	 add r7,sp,#0
 305              	.LCFI24:
 306              	 .cfi_def_cfa_register 7
 307 0006 0346     	 mov r3,r0
 308 0008 FB71     	 strb r3,[r7,#7]
  72:../cleanflight/src/main/fc/controlrate_profile.c ****     if (controlRateProfileIndex < CONTROL_RATE_PROFILE_COUNT) {
 309              	 .loc 3 72 0
 310 000a FB79     	 ldrb r3,[r7,#7]
 311 000c 052B     	 cmp r3,#5
 312 000e 04D8     	 bhi .L22
  73:../cleanflight/src/main/fc/controlrate_profile.c ****         systemConfigMutable()->activeRateProfile = controlRateProfileIndex;
 313              	 .loc 3 73 0
 314 0010 FFF7FEFF 	 bl systemConfigMutable
 315 0014 0246     	 mov r2,r0
 316 0016 FB79     	 ldrb r3,[r7,#7]
 317 0018 5370     	 strb r3,[r2,#1]
 318              	.L22:
  74:../cleanflight/src/main/fc/controlrate_profile.c ****     }
  75:../cleanflight/src/main/fc/controlrate_profile.c **** 
  76:../cleanflight/src/main/fc/controlrate_profile.c ****     loadControlRateProfile();
 319              	 .loc 3 76 0
 320 001a FFF7FEFF 	 bl loadControlRateProfile
  77:../cleanflight/src/main/fc/controlrate_profile.c ****     initRcProcessing();
 321              	 .loc 3 77 0
 322 001e FFF7FEFF 	 bl initRcProcessing
  78:../cleanflight/src/main/fc/controlrate_profile.c **** }
 323              	 .loc 3 78 0
 324 0022 0837     	 adds r7,r7,#8
 325              	.LCFI25:
 326              	 .cfi_def_cfa_offset 8
 327 0024 BD46     	 mov sp,r7
 328              	.LCFI26:
 329              	 .cfi_def_cfa_register 13
 330              	 
 331 0026 80BD     	 pop {r7,pc}
 332              	 .cfi_endproc
 333              	.LFE533:
 335              	 .section .text.copyControlRateProfile,"ax",%progbits
 336              	 .align 2
 337              	 .global copyControlRateProfile
 338              	 .thumb
 339              	 .thumb_func
 341              	copyControlRateProfile:
 342              	.LFB534:
  79:../cleanflight/src/main/fc/controlrate_profile.c **** 
  80:../cleanflight/src/main/fc/controlrate_profile.c **** void copyControlRateProfile(const uint8_t dstControlRateProfileIndex, const uint8_t srcControlRateP
 343              	 .loc 3 80 0
 344              	 .cfi_startproc
 345              	 
 346              	 
 347 0000 90B5     	 push {r4,r7,lr}
 348              	.LCFI27:
 349              	 .cfi_def_cfa_offset 12
 350              	 .cfi_offset 4,-12
 351              	 .cfi_offset 7,-8
 352              	 .cfi_offset 14,-4
 353 0002 83B0     	 sub sp,sp,#12
 354              	.LCFI28:
 355              	 .cfi_def_cfa_offset 24
 356 0004 00AF     	 add r7,sp,#0
 357              	.LCFI29:
 358              	 .cfi_def_cfa_register 7
 359 0006 0346     	 mov r3,r0
 360 0008 0A46     	 mov r2,r1
 361 000a FB71     	 strb r3,[r7,#7]
 362 000c 1346     	 mov r3,r2
 363 000e BB71     	 strb r3,[r7,#6]
  81:../cleanflight/src/main/fc/controlrate_profile.c ****     if ((dstControlRateProfileIndex < CONTROL_RATE_PROFILE_COUNT-1 && srcControlRateProfileIndex < 
 364              	 .loc 3 81 0
 365 0010 FB79     	 ldrb r3,[r7,#7]
 366 0012 042B     	 cmp r3,#4
 367 0014 15D8     	 bhi .L23
 368              	 .loc 3 81 0 is_stmt 0 discriminator 1
 369 0016 BB79     	 ldrb r3,[r7,#6]
 370 0018 042B     	 cmp r3,#4
 371 001a 12D8     	 bhi .L23
  82:../cleanflight/src/main/fc/controlrate_profile.c ****         && dstControlRateProfileIndex != srcControlRateProfileIndex
 372              	 .loc 3 82 0 is_stmt 1
 373 001c FA79     	 ldrb r2,[r7,#7]
 374 001e BB79     	 ldrb r3,[r7,#6]
 375 0020 9A42     	 cmp r2,r3
 376 0022 0ED0     	 beq .L23
  83:../cleanflight/src/main/fc/controlrate_profile.c ****     ) {
  84:../cleanflight/src/main/fc/controlrate_profile.c ****         memcpy(controlRateProfilesMutable(dstControlRateProfileIndex), controlRateProfilesMutable(s
 377              	 .loc 3 84 0
 378 0024 FB79     	 ldrb r3,[r7,#7]
 379 0026 1846     	 mov r0,r3
 380 0028 FFF7FEFF 	 bl controlRateProfilesMutable
 381 002c 0446     	 mov r4,r0
 382 002e BB79     	 ldrb r3,[r7,#6]
 383 0030 1846     	 mov r0,r3
 384 0032 FFF7FEFF 	 bl controlRateProfilesMutable
 385 0036 0346     	 mov r3,r0
 386 0038 2046     	 mov r0,r4
 387 003a 1946     	 mov r1,r3
 388 003c 1122     	 movs r2,#17
 389 003e FFF7FEFF 	 bl memcpy
 390              	.L23:
  85:../cleanflight/src/main/fc/controlrate_profile.c ****     }
  86:../cleanflight/src/main/fc/controlrate_profile.c **** }
 391              	 .loc 3 86 0
 392 0042 0C37     	 adds r7,r7,#12
 393              	.LCFI30:
 394              	 .cfi_def_cfa_offset 12
 395 0044 BD46     	 mov sp,r7
 396              	.LCFI31:
 397              	 .cfi_def_cfa_register 13
 398              	 
 399 0046 90BD     	 pop {r4,r7,pc}
 400              	 .cfi_endproc
 401              	.LFE534:
 403              	 .section .rodata._reset_template_61.11649,"a",%progbits
 404              	 .align 2
 407              	_reset_template_61.11649:
 408 0000 32       	 .byte 50
 409 0001 00       	 .byte 0
 410 0002 00       	 .byte 0
 411 0003 64       	 .byte 100
 412 0004 64       	 .byte 100
 413 0005 64       	 .byte 100
 414 0006 00       	 .byte 0
 415 0007 00       	 .byte 0
 416 0008 00       	 .byte 0
 417 0009 46       	 .byte 70
 418 000a 46       	 .byte 70
 419 000b 46       	 .byte 70
 420 000c 0A       	 .byte 10
 421 000d 7206     	 .2byte 1650
 422 000f 00       	 .byte 0
 423 0010 64       	 .byte 100
 424 0011 000000   	 .text
 425              	.Letext0:
 426              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 427              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 428              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 429              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pg.h"
 430              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/axis.h"
 431              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 432              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 controlrate_profile.c
    {standard input}:20     .text.systemConfig:00000000 $t
    {standard input}:24     .text.systemConfig:00000000 systemConfig
    {standard input}:54     .text.systemConfig:00000010 $d
    {standard input}:59     .text.systemConfigMutable:00000000 $t
    {standard input}:63     .text.systemConfigMutable:00000000 systemConfigMutable
    {standard input}:92     .text.systemConfigMutable:00000010 $d
    {standard input}:97     .text.controlRateProfilesMutable:00000000 $t
    {standard input}:101    .text.controlRateProfilesMutable:00000000 controlRateProfilesMutable
    {standard input}:143    .text.controlRateProfilesMutable:00000020 $d
                            *COM*:00000066 controlRateProfiles_SystemArray
                            *COM*:00000004 currentControlRateProfile
                            *COM*:00000066 controlRateProfiles_CopyArray
    {standard input}:155    .pg_registry:00000000 controlRateProfiles_Registry
    {standard input}:152    .pg_registry:00000000 $d
    {standard input}:168    .text.pgResetFn_controlRateProfiles:00000000 pgResetFn_controlRateProfiles
    {standard input}:163    .text.pgResetFn_controlRateProfiles:00000000 $t
    {standard input}:242    .text.pgResetFn_controlRateProfiles:00000044 $d
    {standard input}:407    .rodata._reset_template_61.11649:00000000 _reset_template_61.11649
    {standard input}:247    .text.loadControlRateProfile:00000000 $t
    {standard input}:252    .text.loadControlRateProfile:00000000 loadControlRateProfile
    {standard input}:280    .text.loadControlRateProfile:0000001c $d
    {standard input}:285    .text.changeControlRateProfile:00000000 $t
    {standard input}:290    .text.changeControlRateProfile:00000000 changeControlRateProfile
    {standard input}:336    .text.copyControlRateProfile:00000000 $t
    {standard input}:341    .text.copyControlRateProfile:00000000 copyControlRateProfile
    {standard input}:404    .rodata._reset_template_61.11649:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
systemConfig_System
initRcProcessing
memcpy
