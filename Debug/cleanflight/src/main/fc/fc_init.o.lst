   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "fc_init.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.blackboxConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	blackboxConfig:
  25              	.LFB527:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox/blackbox.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "platform.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "build/build_config.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "common/time.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef enum BlackboxDevice {
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_NONE = 0,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #ifdef USE_FLASHFS
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_FLASH = 1,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #endif
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #ifdef USE_SDCARD
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_SDCARD = 2,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #endif
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_SERIAL = 3
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } BlackboxDevice_e;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef enum BlackboxMode {
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_MODE_NORMAL = 0,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_MODE_MOTOR_TEST,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_MODE_ALWAYS_ON
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } BlackboxMode;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef enum FlightLogEvent {
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_SYNC_BEEP = 0,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_INFLIGHT_ADJUSTMENT = 13,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_LOGGING_RESUME = 14,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_FLIGHTMODE = 30, // Add new event type for flight mode status.
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_LOG_END = 255
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } FlightLogEvent;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef struct blackboxConfig_s {
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint16_t p_ratio; // I-frame interval / P-frame interval
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint8_t device;
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint8_t record_acc;
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint8_t mode;
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } blackboxConfig_t;
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** PG_DECLARE(blackboxConfig_t, blackboxConfig);
  27              	 .loc 1 60 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 60 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word blackboxConfig_System
  55              	 .cfi_endproc
  56              	.LFE527:
  58              	 .section .text.blackboxConfigMutable,"ax",%progbits
  59              	 .align 2
  60              	 .thumb
  61              	 .thumb_func
  63              	blackboxConfigMutable:
  64              	.LFB528:
  65              	 .loc 1 60 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69              	 
  70 0000 80B4     	 push {r7}
  71              	.LCFI4:
  72              	 .cfi_def_cfa_offset 4
  73              	 .cfi_offset 7,-4
  74 0002 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77              	 .loc 1 60 0
  78 0004 024B     	 ldr r3,.L7
  79 0006 1846     	 mov r0,r3
  80 0008 BD46     	 mov sp,r7
  81              	.LCFI6:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 000a 5DF8047B 	 ldr r7,[sp],#4
  85              	.LCFI7:
  86              	 .cfi_restore 7
  87              	 .cfi_def_cfa_offset 0
  88 000e 7047     	 bx lr
  89              	.L8:
  90              	 .align 2
  91              	.L7:
  92 0010 00000000 	 .word blackboxConfig_System
  93              	 .cfi_endproc
  94              	.LFE528:
  96              	 .comm pCurrentDisplay,4,4
  97              	 .section .text.serialPinConfig,"ax",%progbits
  98              	 .align 2
  99              	 .thumb
 100              	 .thumb_func
 102              	serialPinConfig:
 103              	.LFB543:
 104              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #include "drivers/io.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #include "pg/pg.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** typedef enum {
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     MODE_RX = 1 << 0,
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     MODE_TX = 1 << 1,
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     MODE_RXTX = MODE_RX | MODE_TX
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** } portMode_e;
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** typedef enum {
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_NOT_INVERTED  = 0 << 0,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_INVERTED      = 1 << 0,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_STOPBITS_1    = 0 << 1,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_STOPBITS_2    = 1 << 1,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_PARITY_NO     = 0 << 2,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_PARITY_EVEN   = 1 << 2,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_UNIDIR        = 0 << 3,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_BIDIR         = 1 << 3,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     /*
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****      * Note on SERIAL_BIDIR_PP
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****      * With SERIAL_BIDIR_PP, the very first start bit of back-to-back bytes
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****      * is lost and the first data byte will be lost by a framing error.
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****      * To ensure the first start bit to be sent, prepend a zero byte (0x00)
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****      * to actual data bytes.
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****      */
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_BIDIR_OD        = 0 << 4,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_BIDIR_PP        = 1 << 4,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     SERIAL_BIDIR_NOPULL    = 1 << 5, // disable pulls in BIDIR RX mode
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** } portOptions_e;
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** // Define known line control states which may be passed up by underlying serial driver callback
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #define CTRL_LINE_STATE_DTR (1 << 0)
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #define CTRL_LINE_STATE_RTS (1 << 1)
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** typedef void (*serialReceiveCallbackPtr)(uint16_t data, void *rxCallbackData);   // used by serial 
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** typedef struct serialPort_s {
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     const struct serialPortVTable *vTable;
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     portMode_e mode;
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     portOptions_e options;
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     uint32_t baudRate;
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     uint32_t rxBufferSize;
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     uint32_t txBufferSize;
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     volatile uint8_t *rxBuffer;
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     volatile uint8_t *txBuffer;
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     uint32_t rxBufferHead;
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     uint32_t rxBufferTail;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     uint32_t txBufferHead;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     uint32_t txBufferTail;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     serialReceiveCallbackPtr rxCallback;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     void *rxCallbackData;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     uint8_t identifier;
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** } serialPort_t;
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #if defined(USE_SOFTSERIAL1) || defined(USE_SOFTSERIAL2)
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** # ifdef USE_SOFTSERIAL2
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #  define SERIAL_PORT_MAX_INDEX (RESOURCE_SOFT_OFFSET + 2)
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** # else
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #  define SERIAL_PORT_MAX_INDEX (RESOURCE_SOFT_OFFSET + 1)
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** # endif
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #else
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** # define SERIAL_PORT_MAX_INDEX RESOURCE_SOFT_OFFSET
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** #endif
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** typedef struct serialPinConfig_s {
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     ioTag_t ioTagTx[SERIAL_PORT_MAX_INDEX];
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     ioTag_t ioTagRx[SERIAL_PORT_MAX_INDEX];
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h ****     ioTag_t ioTagInverter[SERIAL_PORT_MAX_INDEX];
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** } serialPinConfig_t;
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** 
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\serial.h **** PG_DECLARE(serialPinConfig_t, serialPinConfig);
 105              	 .loc 2 100 0
 106              	 .cfi_startproc
 107              	 
 108              	 
 109              	 
 110 0000 80B4     	 push {r7}
 111              	.LCFI8:
 112              	 .cfi_def_cfa_offset 4
 113              	 .cfi_offset 7,-4
 114 0002 00AF     	 add r7,sp,#0
 115              	.LCFI9:
 116              	 .cfi_def_cfa_register 7
 117              	 .loc 2 100 0
 118 0004 024B     	 ldr r3,.L11
 119 0006 1846     	 mov r0,r3
 120 0008 BD46     	 mov sp,r7
 121              	.LCFI10:
 122              	 .cfi_def_cfa_register 13
 123              	 
 124 000a 5DF8047B 	 ldr r7,[sp],#4
 125              	.LCFI11:
 126              	 .cfi_restore 7
 127              	 .cfi_def_cfa_offset 0
 128 000e 7047     	 bx lr
 129              	.L12:
 130              	 .align 2
 131              	.L11:
 132 0010 00000000 	 .word serialPinConfig_System
 133              	 .cfi_endproc
 134              	.LFE543:
 136              	 .section .text.statusLedConfig,"ax",%progbits
 137              	 .align 2
 138              	 .thumb
 139              	 .thumb_func
 141              	statusLedConfig:
 142              	.LFB545:
 143              	 .file 3 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/light_led.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** #include "drivers/io_types.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** #include "common/utils.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** #define STATUS_LED_NUMBER 3
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** typedef struct statusLedConfig_s {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****     ioTag_t ioTags[STATUS_LED_NUMBER];
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h ****     uint8_t inversion;
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** } statusLedConfig_t;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers\light_led.h **** PG_DECLARE(statusLedConfig_t, statusLedConfig);
 144              	 .loc 3 34 0
 145              	 .cfi_startproc
 146              	 
 147              	 
 148              	 
 149 0000 80B4     	 push {r7}
 150              	.LCFI12:
 151              	 .cfi_def_cfa_offset 4
 152              	 .cfi_offset 7,-4
 153 0002 00AF     	 add r7,sp,#0
 154              	.LCFI13:
 155              	 .cfi_def_cfa_register 7
 156              	 .loc 3 34 0
 157 0004 024B     	 ldr r3,.L15
 158 0006 1846     	 mov r0,r3
 159 0008 BD46     	 mov sp,r7
 160              	.LCFI14:
 161              	 .cfi_def_cfa_register 13
 162              	 
 163 000a 5DF8047B 	 ldr r7,[sp],#4
 164              	.LCFI15:
 165              	 .cfi_restore 7
 166              	 .cfi_def_cfa_offset 0
 167 000e 7047     	 bx lr
 168              	.L16:
 169              	 .align 2
 170              	.L15:
 171 0010 00000000 	 .word statusLedConfig_System
 172              	 .cfi_endproc
 173              	.LFE545:
 175              	 .section .text.sdcardConfig,"ax",%progbits
 176              	 .align 2
 177              	 .thumb
 178              	 .thumb_func
 180              	sdcardConfig:
 181              	.LFB547:
 182              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/sdcard.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** #include "drivers/io.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** typedef struct sdcardConfig_s {
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****     uint8_t useDma;
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****     uint8_t enabled;
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****     uint8_t device;
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****     ioTag_t cardDetectTag;
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****     ioTag_t chipSelectTag;
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****     uint8_t cardDetectInverted;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****     uint8_t dmaIdentifier;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h ****     uint8_t dmaChannel;
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** } sdcardConfig_t;
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\sdcard.h **** PG_DECLARE(sdcardConfig_t, sdcardConfig);
 183              	 .loc 4 37 0
 184              	 .cfi_startproc
 185              	 
 186              	 
 187              	 
 188 0000 80B4     	 push {r7}
 189              	.LCFI16:
 190              	 .cfi_def_cfa_offset 4
 191              	 .cfi_offset 7,-4
 192 0002 00AF     	 add r7,sp,#0
 193              	.LCFI17:
 194              	 .cfi_def_cfa_register 7
 195              	 .loc 4 37 0
 196 0004 024B     	 ldr r3,.L19
 197 0006 1846     	 mov r0,r3
 198 0008 BD46     	 mov sp,r7
 199              	.LCFI18:
 200              	 .cfi_def_cfa_register 13
 201              	 
 202 000a 5DF8047B 	 ldr r7,[sp],#4
 203              	.LCFI19:
 204              	 .cfi_restore 7
 205              	 .cfi_def_cfa_offset 0
 206 000e 7047     	 bx lr
 207              	.L20:
 208              	 .align 2
 209              	.L19:
 210 0010 00000000 	 .word sdcardConfig_System
 211              	 .cfi_endproc
 212              	.LFE547:
 214              	 .section .text.systemConfig,"ax",%progbits
 215              	 .align 2
 216              	 .thumb
 217              	 .thumb_func
 219              	systemConfig:
 220              	.LFB551:
 221              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #define MAX_NAME_LENGTH 16u
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct pilotConfig_s {
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char name[MAX_NAME_LENGTH + 1];
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } pilotConfig_t;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(pilotConfig_t, pilotConfig);
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct systemConfig_s {
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t pidProfileIndex;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t activeRateProfile;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t debug_mode;
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t task_statistics;
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t rateProfile6PosSwitch;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t cpu_overclock;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t powerOnArmingGraceTime; // in seconds
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char boardIdentifier[sizeof(TARGET_BOARD_IDENTIFIER) + 1];
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } systemConfig_t;
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(systemConfig_t, systemConfig);
 222              	 .loc 5 47 0
 223              	 .cfi_startproc
 224              	 
 225              	 
 226              	 
 227 0000 80B4     	 push {r7}
 228              	.LCFI20:
 229              	 .cfi_def_cfa_offset 4
 230              	 .cfi_offset 7,-4
 231 0002 00AF     	 add r7,sp,#0
 232              	.LCFI21:
 233              	 .cfi_def_cfa_register 7
 234              	 .loc 5 47 0
 235 0004 024B     	 ldr r3,.L23
 236 0006 1846     	 mov r0,r3
 237 0008 BD46     	 mov sp,r7
 238              	.LCFI22:
 239              	 .cfi_def_cfa_register 13
 240              	 
 241 000a 5DF8047B 	 ldr r7,[sp],#4
 242              	.LCFI23:
 243              	 .cfi_restore 7
 244              	 .cfi_def_cfa_offset 0
 245 000e 7047     	 bx lr
 246              	.L24:
 247              	 .align 2
 248              	.L23:
 249 0010 00000000 	 .word systemConfig_System
 250              	 .cfi_endproc
 251              	.LFE551:
 253              	 .section .text.flight3DConfig,"ax",%progbits
 254              	 .align 2
 255              	 .thumb
 256              	 .thumb_func
 258              	flight3DConfig:
 259              	.LFB555:
 260              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_controls.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #include <stdbool.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #include "common/filter.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef enum rc_alias {
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     ROLL = 0,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     PITCH,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     YAW,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     THROTTLE,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     AUX1,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     AUX2,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     AUX3,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     AUX4,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     AUX5,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     AUX6,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     AUX7,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     AUX8
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rc_alias_e;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define PRIMARY_CHANNEL_COUNT (THROTTLE + 1)
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef enum {
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     THROTTLE_LOW = 0,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     THROTTLE_HIGH
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } throttleStatus_e;
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define AIRMODEDEADBAND 12
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef enum {
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     NOT_CENTERED = 0,
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     CENTERED
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rollPitchStatus_e;
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef enum {
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_OFF = 0,
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_DEFAULT,
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_AUTO,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_MANUAL
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rcSmoothing_t;
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef enum {
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_TYPE_INTERPOLATION,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_TYPE_FILTER
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rcSmoothingType_e;
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef enum {
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_INPUT_PT1,
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_INPUT_BIQUAD
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rcSmoothingInputFilter_e;
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef enum {
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_DERIVATIVE_OFF,
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_DERIVATIVE_PT1,
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_DERIVATIVE_BIQUAD
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rcSmoothingDerivativeFilter_e;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef enum {
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_VALUE_INPUT_ACTIVE,
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_VALUE_DERIVATIVE_ACTIVE,
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     RC_SMOOTHING_VALUE_AVERAGE_FRAME
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rcSmoothingInfoType_e;
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define ROL_LO (1 << (2 * ROLL))
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define ROL_CE (3 << (2 * ROLL))
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define ROL_HI (2 << (2 * ROLL))
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define PIT_LO (1 << (2 * PITCH))
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define PIT_CE (3 << (2 * PITCH))
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define PIT_HI (2 << (2 * PITCH))
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define YAW_LO (1 << (2 * YAW))
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define YAW_CE (3 << (2 * YAW))
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define YAW_HI (2 << (2 * YAW))
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define THR_LO (1 << (2 * THROTTLE))
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define THR_CE (3 << (2 * THROTTLE))
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define THR_HI (2 << (2 * THROTTLE))
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define CONTROL_RATE_CONFIG_RC_EXPO_MAX  100
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define CONTROL_RATE_CONFIG_RC_RATES_MAX  255
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** // (Super) rates are constrained to [0, 100] for Betaflight rates, so values higher than 100 won't 
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define CONTROL_RATE_CONFIG_RATE_MAX  255
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** #define CONTROL_RATE_CONFIG_TPA_MAX              100
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** extern float rcCommand[4];
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef struct rcSmoothingFilterTraining_s {
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     float sum;
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     int count;
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t min;
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t max;
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rcSmoothingFilterTraining_t;
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef union rcSmoothingFilterTypes_u {
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     pt1Filter_t pt1Filter;
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     biquadFilter_t biquadFilter;
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rcSmoothingFilterTypes_t;
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef struct rcSmoothingFilter_s {
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     bool filterInitialized;
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     rcSmoothingFilterTypes_t filter[4];
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t inputCutoffFrequency;
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t derivativeCutoffFrequency;
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     int averageFrameTimeUs;
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     rcSmoothingFilterTraining_t training;
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rcSmoothingFilter_t;
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef struct rcControlsConfig_s {
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint8_t deadband;                       // introduce a deadband around the stick center for pit
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint8_t yaw_deadband;                   // introduce a deadband around the stick center for yaw
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint8_t alt_hold_deadband;              // defines the neutral zone of throttle stick during al
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint8_t alt_hold_fast_change;           // when disabled, turn off the althold when throttle st
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     bool yaw_control_reversed;            // invert control direction of yaw
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } rcControlsConfig_t;
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** PG_DECLARE(rcControlsConfig_t, rcControlsConfig);
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** typedef struct flight3DConfig_s {
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t deadband3d_low;                // min 3d value
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t deadband3d_high;               // max 3d value
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t neutral3d;                     // center 3d value
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t deadband3d_throttle;           // default throttle deadband from MIDRC
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t limit3d_low;                   // pwm output value for max negative thrust
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint16_t limit3d_high;                  // pwm output value for max positive thrust
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h ****     uint8_t switched_mode3d;                // enable '3D Switched Mode'
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** } flight3DConfig_t;
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** 
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_controls.h **** PG_DECLARE(flight3DConfig_t, flight3DConfig);
 261              	 .loc 6 151 0
 262              	 .cfi_startproc
 263              	 
 264              	 
 265              	 
 266 0000 80B4     	 push {r7}
 267              	.LCFI24:
 268              	 .cfi_def_cfa_offset 4
 269              	 .cfi_offset 7,-4
 270 0002 00AF     	 add r7,sp,#0
 271              	.LCFI25:
 272              	 .cfi_def_cfa_register 7
 273              	 .loc 6 151 0
 274 0004 024B     	 ldr r3,.L27
 275 0006 1846     	 mov r0,r3
 276 0008 BD46     	 mov sp,r7
 277              	.LCFI26:
 278              	 .cfi_def_cfa_register 13
 279              	 
 280 000a 5DF8047B 	 ldr r7,[sp],#4
 281              	.LCFI27:
 282              	 .cfi_restore 7
 283              	 .cfi_def_cfa_offset 0
 284 000e 7047     	 bx lr
 285              	.L28:
 286              	 .align 2
 287              	.L27:
 288 0010 00000000 	 .word flight3DConfig_System
 289              	 .cfi_endproc
 290              	.LFE555:
 292              	 .section .text.adcConfig,"ax",%progbits
 293              	 .align 2
 294              	 .thumb
 295              	 .thumb_func
 297              	adcConfig:
 298              	.LFB559:
 299              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/adc.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** #include "drivers/io_types.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** typedef struct adcChannelConfig_t {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****     bool enabled;
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****     ioTag_t ioTag;
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** } adcChannelConfig_t;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** typedef struct adcConfig_s {
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****     adcChannelConfig_t vbat;
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****     adcChannelConfig_t rssi;
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****     adcChannelConfig_t current;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****     adcChannelConfig_t external1;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h ****     int8_t device; // ADCDevice
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** } adcConfig_t;
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\adc.h **** PG_DECLARE(adcConfig_t, adcConfig);
 300              	 .loc 7 42 0
 301              	 .cfi_startproc
 302              	 
 303              	 
 304              	 
 305 0000 80B4     	 push {r7}
 306              	.LCFI28:
 307              	 .cfi_def_cfa_offset 4
 308              	 .cfi_offset 7,-4
 309 0002 00AF     	 add r7,sp,#0
 310              	.LCFI29:
 311              	 .cfi_def_cfa_register 7
 312              	 .loc 7 42 0
 313 0004 024B     	 ldr r3,.L31
 314 0006 1846     	 mov r0,r3
 315 0008 BD46     	 mov sp,r7
 316              	.LCFI30:
 317              	 .cfi_def_cfa_register 13
 318              	 
 319 000a 5DF8047B 	 ldr r7,[sp],#4
 320              	.LCFI31:
 321              	 .cfi_restore 7
 322              	 .cfi_def_cfa_offset 0
 323 000e 7047     	 bx lr
 324              	.L32:
 325              	 .align 2
 326              	.L31:
 327 0010 00000000 	 .word adcConfig_System
 328              	 .cfi_endproc
 329              	.LFE559:
 331              	 .section .text.adcConfigMutable,"ax",%progbits
 332              	 .align 2
 333              	 .thumb
 334              	 .thumb_func
 336              	adcConfigMutable:
 337              	.LFB560:
 338              	 .loc 7 42 0
 339              	 .cfi_startproc
 340              	 
 341              	 
 342              	 
 343 0000 80B4     	 push {r7}
 344              	.LCFI32:
 345              	 .cfi_def_cfa_offset 4
 346              	 .cfi_offset 7,-4
 347 0002 00AF     	 add r7,sp,#0
 348              	.LCFI33:
 349              	 .cfi_def_cfa_register 7
 350              	 .loc 7 42 0
 351 0004 024B     	 ldr r3,.L35
 352 0006 1846     	 mov r0,r3
 353 0008 BD46     	 mov sp,r7
 354              	.LCFI34:
 355              	 .cfi_def_cfa_register 13
 356              	 
 357 000a 5DF8047B 	 ldr r7,[sp],#4
 358              	.LCFI35:
 359              	 .cfi_restore 7
 360              	 .cfi_def_cfa_offset 0
 361 000e 7047     	 bx lr
 362              	.L36:
 363              	 .align 2
 364              	.L35:
 365 0010 00000000 	 .word adcConfig_System
 366              	 .cfi_endproc
 367              	.LFE560:
 369              	 .section .text.i2cConfig,"ax",%progbits
 370              	 .align 2
 371              	 .thumb
 372              	 .thumb_func
 374              	i2cConfig:
 375              	.LFB565:
 376              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/bus_i2c.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** #include "drivers/bus_i2c.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** #include "drivers/io_types.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** #include "drivers/rcc_types.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** #include "pg/pg.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** typedef struct i2cConfig_s {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****     ioTag_t ioTagScl;
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****     ioTag_t ioTagSda;
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****     bool overClock;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h ****     bool pullUp;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** } i2cConfig_t;
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_i2c.h **** PG_DECLARE_ARRAY(i2cConfig_t, I2CDEV_COUNT, i2cConfig);
 377              	 .loc 8 36 0
 378              	 .cfi_startproc
 379              	 
 380              	 
 381              	 
 382 0000 80B4     	 push {r7}
 383              	.LCFI36:
 384              	 .cfi_def_cfa_offset 4
 385              	 .cfi_offset 7,-4
 386 0002 83B0     	 sub sp,sp,#12
 387              	.LCFI37:
 388              	 .cfi_def_cfa_offset 16
 389 0004 00AF     	 add r7,sp,#0
 390              	.LCFI38:
 391              	 .cfi_def_cfa_register 7
 392 0006 7860     	 str r0,[r7,#4]
 393              	 .loc 8 36 0
 394 0008 7B68     	 ldr r3,[r7,#4]
 395 000a 9B00     	 lsls r3,r3,#2
 396 000c 034A     	 ldr r2,.L39
 397 000e 1344     	 add r3,r3,r2
 398 0010 1846     	 mov r0,r3
 399 0012 0C37     	 adds r7,r7,#12
 400              	.LCFI39:
 401              	 .cfi_def_cfa_offset 4
 402 0014 BD46     	 mov sp,r7
 403              	.LCFI40:
 404              	 .cfi_def_cfa_register 13
 405              	 
 406 0016 5DF8047B 	 ldr r7,[sp],#4
 407              	.LCFI41:
 408              	 .cfi_restore 7
 409              	 .cfi_def_cfa_offset 0
 410 001a 7047     	 bx lr
 411              	.L40:
 412              	 .align 2
 413              	.L39:
 414 001c 00000000 	 .word i2cConfig_SystemArray
 415              	 .cfi_endproc
 416              	.LFE565:
 418              	 .section .text.spiPinConfig,"ax",%progbits
 419              	 .align 2
 420              	 .thumb
 421              	 .thumb_func
 423              	spiPinConfig:
 424              	.LFB568:
 425              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/bus_spi.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** #include "drivers/bus_spi.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** #include "drivers/io_types.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** typedef struct spiPinConfig_s {
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****     ioTag_t ioTagSck;
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****     ioTag_t ioTagMiso;
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****     ioTag_t ioTagMosi;
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** #ifdef XMC4700_F100x2048
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h ****     ioTag_t ioTagCs;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** #endif
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** } spiPinConfig_t;
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\bus_spi.h **** PG_DECLARE_ARRAY(spiPinConfig_t, SPIDEV_COUNT, spiPinConfig);
 426              	 .loc 9 37 0
 427              	 .cfi_startproc
 428              	 
 429              	 
 430              	 
 431 0000 80B4     	 push {r7}
 432              	.LCFI42:
 433              	 .cfi_def_cfa_offset 4
 434              	 .cfi_offset 7,-4
 435 0002 83B0     	 sub sp,sp,#12
 436              	.LCFI43:
 437              	 .cfi_def_cfa_offset 16
 438 0004 00AF     	 add r7,sp,#0
 439              	.LCFI44:
 440              	 .cfi_def_cfa_register 7
 441 0006 7860     	 str r0,[r7,#4]
 442              	 .loc 9 37 0
 443 0008 7B68     	 ldr r3,[r7,#4]
 444 000a 9B00     	 lsls r3,r3,#2
 445 000c 034A     	 ldr r2,.L43
 446 000e 1344     	 add r3,r3,r2
 447 0010 1846     	 mov r0,r3
 448 0012 0C37     	 adds r7,r7,#12
 449              	.LCFI45:
 450              	 .cfi_def_cfa_offset 4
 451 0014 BD46     	 mov sp,r7
 452              	.LCFI46:
 453              	 .cfi_def_cfa_register 13
 454              	 
 455 0016 5DF8047B 	 ldr r7,[sp],#4
 456              	.LCFI47:
 457              	 .cfi_restore 7
 458              	 .cfi_def_cfa_offset 0
 459 001a 7047     	 bx lr
 460              	.L44:
 461              	 .align 2
 462              	.L43:
 463 001c 00000000 	 .word spiPinConfig_SystemArray
 464              	 .cfi_endproc
 465              	.LFE568:
 467              	 .section .text.pinioConfig,"ax",%progbits
 468              	 .align 2
 469              	 .thumb
 470              	 .thumb_func
 472              	pinioConfig:
 473              	.LFB577:
 474              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pinio.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** #include "drivers/io_types.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** #include "drivers/pinio.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** typedef struct pinioConfig_s {
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****     ioTag_t ioTag[PINIO_COUNT];
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h ****     uint8_t config[PINIO_COUNT];
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** } pinioConfig_t;
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** 
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\pinio.h **** PG_DECLARE(pinioConfig_t, pinioConfig);
 475              	 .loc 10 32 0
 476              	 .cfi_startproc
 477              	 
 478              	 
 479              	 
 480 0000 80B4     	 push {r7}
 481              	.LCFI48:
 482              	 .cfi_def_cfa_offset 4
 483              	 .cfi_offset 7,-4
 484 0002 00AF     	 add r7,sp,#0
 485              	.LCFI49:
 486              	 .cfi_def_cfa_register 7
 487              	 .loc 10 32 0
 488 0004 024B     	 ldr r3,.L47
 489 0006 1846     	 mov r0,r3
 490 0008 BD46     	 mov sp,r7
 491              	.LCFI50:
 492              	 .cfi_def_cfa_register 13
 493              	 
 494 000a 5DF8047B 	 ldr r7,[sp],#4
 495              	.LCFI51:
 496              	 .cfi_restore 7
 497              	 .cfi_def_cfa_offset 0
 498 000e 7047     	 bx lr
 499              	.L48:
 500              	 .align 2
 501              	.L47:
 502 0010 00000000 	 .word pinioConfig_System
 503              	 .cfi_endproc
 504              	.LFE577:
 506              	 .section .text.pinioBoxConfig,"ax",%progbits
 507              	 .align 2
 508              	 .thumb
 509              	 .thumb_func
 511              	pinioBoxConfig:
 512              	.LFB582:
 513              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/piniobox.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** #include "drivers/pinio.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** #include "fc/rc_modes.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** typedef struct pinioBoxConfig_s {
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h ****     uint8_t permanentId[PINIO_COUNT];
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** } pinioBoxConfig_t;
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** 
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\piniobox.h **** PG_DECLARE(pinioBoxConfig_t, pinioBoxConfig);
 514              	 .loc 11 31 0
 515              	 .cfi_startproc
 516              	 
 517              	 
 518              	 
 519 0000 80B4     	 push {r7}
 520              	.LCFI52:
 521              	 .cfi_def_cfa_offset 4
 522              	 .cfi_offset 7,-4
 523 0002 00AF     	 add r7,sp,#0
 524              	.LCFI53:
 525              	 .cfi_def_cfa_register 7
 526              	 .loc 11 31 0
 527 0004 024B     	 ldr r3,.L51
 528 0006 1846     	 mov r0,r3
 529 0008 BD46     	 mov sp,r7
 530              	.LCFI54:
 531              	 .cfi_def_cfa_register 13
 532              	 
 533 000a 5DF8047B 	 ldr r7,[sp],#4
 534              	.LCFI55:
 535              	 .cfi_restore 7
 536              	 .cfi_def_cfa_offset 0
 537 000e 7047     	 bx lr
 538              	.L52:
 539              	 .align 2
 540              	.L51:
 541 0010 00000000 	 .word pinioBoxConfig_System
 542              	 .cfi_endproc
 543              	.LFE582:
 545              	 .section .text.rxConfig,"ax",%progbits
 546              	 .align 2
 547              	 .thumb
 548              	 .thumb_func
 550              	rxConfig:
 551              	.LFB584:
 552              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #include "drivers/io_types.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** typedef struct rxConfig_s {
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcmap[RX_MAPPABLE_CHANNEL_COUNT];  // mapping of radio channels to internal RPYTA+ orde
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t serialrx_provider;              // type of UART-based receiver (0 = spek 10, 1 = spek 1
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t serialrx_inverted;              // invert the serial RX protocol compared to it's defau
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t halfDuplex;                     // allow rx to operate in half duplex mode on F4, ignor
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     ioTag_t spektrum_bind_pin_override_ioTag;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     ioTag_t spektrum_bind_plug_ioTag;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t spektrum_sat_bind;              // number of bind pulses for Spektrum satellite receive
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t spektrum_sat_bind_autoreset;    // whenever we will reset (exit) binding mode after har
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_channel;
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_scale;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_invert;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t midrc;                         // Some radios have not a neutral point centered on 150
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t mincheck;                      // minimum rc end
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t maxcheck;                      // maximum rc end
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolation;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolationChannels;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolationInterval;
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t fpvCamAngleDegrees;             // Camera angle to be scaled into rc commands
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t airModeActivateThreshold;       // Throttle setpoint percent where airmode gets activat
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t rx_min_usec;
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t rx_max_usec;
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t max_aux_channel;
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_src_frame_errors;          // true to use frame drop flags in the rx protocol
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     int8_t rssi_offset;                     // offset applied to the RSSI value before it is return
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_type;              // Determines the smoothing algorithm to use: INTERPOLA
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_input_cutoff;      // Filter cutoff frequency for the input filter (0 = au
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_derivative_cutoff; // Filter cutoff frequency for the setpoint weight deri
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_debug_axis;        // Axis to log as debug values when debug_mode = RC_SMO
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_input_type;        // Input filter type (0 = PT1, 1 = BIQUAD)
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_derivative_type;   // Derivative filter type (0 = OFF, 1 = PT1, 2 = BIQUAD
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** } rxConfig_t;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** PG_DECLARE(rxConfig_t, rxConfig);
 553              	 .loc 12 61 0
 554              	 .cfi_startproc
 555              	 
 556              	 
 557              	 
 558 0000 80B4     	 push {r7}
 559              	.LCFI56:
 560              	 .cfi_def_cfa_offset 4
 561              	 .cfi_offset 7,-4
 562 0002 00AF     	 add r7,sp,#0
 563              	.LCFI57:
 564              	 .cfi_def_cfa_register 7
 565              	 .loc 12 61 0
 566 0004 024B     	 ldr r3,.L55
 567 0006 1846     	 mov r0,r3
 568 0008 BD46     	 mov sp,r7
 569              	.LCFI58:
 570              	 .cfi_def_cfa_register 13
 571              	 
 572 000a 5DF8047B 	 ldr r7,[sp],#4
 573              	.LCFI59:
 574              	 .cfi_restore 7
 575              	 .cfi_def_cfa_offset 0
 576 000e 7047     	 bx lr
 577              	.L56:
 578              	 .align 2
 579              	.L55:
 580 0010 00000000 	 .word rxConfig_System
 581              	 .cfi_endproc
 582              	.LFE584:
 584              	 .section .text.rxConfigMutable,"ax",%progbits
 585              	 .align 2
 586              	 .thumb
 587              	 .thumb_func
 589              	rxConfigMutable:
 590              	.LFB585:
 591              	 .loc 12 61 0
 592              	 .cfi_startproc
 593              	 
 594              	 
 595              	 
 596 0000 80B4     	 push {r7}
 597              	.LCFI60:
 598              	 .cfi_def_cfa_offset 4
 599              	 .cfi_offset 7,-4
 600 0002 00AF     	 add r7,sp,#0
 601              	.LCFI61:
 602              	 .cfi_def_cfa_register 7
 603              	 .loc 12 61 0
 604 0004 024B     	 ldr r3,.L59
 605 0006 1846     	 mov r0,r3
 606 0008 BD46     	 mov sp,r7
 607              	.LCFI62:
 608              	 .cfi_def_cfa_register 13
 609              	 
 610 000a 5DF8047B 	 ldr r7,[sp],#4
 611              	.LCFI63:
 612              	 .cfi_restore 7
 613              	 .cfi_def_cfa_offset 0
 614 000e 7047     	 bx lr
 615              	.L60:
 616              	 .align 2
 617              	.L59:
 618 0010 00000000 	 .word rxConfig_System
 619              	 .cfi_endproc
 620              	.LFE585:
 622              	 .section .text.ppmConfig,"ax",%progbits
 623              	 .align 2
 624              	 .thumb
 625              	 .thumb_func
 627              	ppmConfig:
 628              	.LFB588:
 629              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx_pwm.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** #include "drivers/io_types.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** #include "drivers/rx/rx_pwm.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** typedef struct ppmConfig_s {
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****     ioTag_t ioTag;
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** } ppmConfig_t;
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** 
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** PG_DECLARE(ppmConfig_t, ppmConfig);
 630              	 .loc 13 32 0
 631              	 .cfi_startproc
 632              	 
 633              	 
 634              	 
 635 0000 80B4     	 push {r7}
 636              	.LCFI64:
 637              	 .cfi_def_cfa_offset 4
 638              	 .cfi_offset 7,-4
 639 0002 00AF     	 add r7,sp,#0
 640              	.LCFI65:
 641              	 .cfi_def_cfa_register 7
 642              	 .loc 13 32 0
 643 0004 024B     	 ldr r3,.L63
 644 0006 1846     	 mov r0,r3
 645 0008 BD46     	 mov sp,r7
 646              	.LCFI66:
 647              	 .cfi_def_cfa_register 13
 648              	 
 649 000a 5DF8047B 	 ldr r7,[sp],#4
 650              	.LCFI67:
 651              	 .cfi_restore 7
 652              	 .cfi_def_cfa_offset 0
 653 000e 7047     	 bx lr
 654              	.L64:
 655              	 .align 2
 656              	.L63:
 657 0010 00000000 	 .word ppmConfig_System
 658              	 .cfi_endproc
 659              	.LFE588:
 661              	 .section .text.pwmConfig,"ax",%progbits
 662              	 .align 2
 663              	 .thumb
 664              	 .thumb_func
 666              	pwmConfig:
 667              	.LFB590:
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** typedef struct pwmConfig_s {
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****     ioTag_t ioTags[PWM_INPUT_PORT_COUNT];
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h ****     inputFilteringMode_e inputFilteringMode;
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** } pwmConfig_t;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx_pwm.h **** PG_DECLARE(pwmConfig_t, pwmConfig);
 668              	 .loc 13 39 0
 669              	 .cfi_startproc
 670              	 
 671              	 
 672              	 
 673 0000 80B4     	 push {r7}
 674              	.LCFI68:
 675              	 .cfi_def_cfa_offset 4
 676              	 .cfi_offset 7,-4
 677 0002 00AF     	 add r7,sp,#0
 678              	.LCFI69:
 679              	 .cfi_def_cfa_register 7
 680              	 .loc 13 39 0
 681 0004 024B     	 ldr r3,.L67
 682 0006 1846     	 mov r0,r3
 683 0008 BD46     	 mov sp,r7
 684              	.LCFI70:
 685              	 .cfi_def_cfa_register 13
 686              	 
 687 000a 5DF8047B 	 ldr r7,[sp],#4
 688              	.LCFI71:
 689              	 .cfi_restore 7
 690              	 .cfi_def_cfa_offset 0
 691 000e 7047     	 bx lr
 692              	.L68:
 693              	 .align 2
 694              	.L67:
 695 0010 00000000 	 .word pwmConfig_System
 696              	 .cfi_endproc
 697              	.LFE590:
 699              	 .comm srxlDisplayPort,15,4
 700              	 .section .text.serialConfig,"ax",%progbits
 701              	 .align 2
 702              	 .thumb
 703              	 .thumb_func
 705              	serialConfig:
 706              	.LFB602:
 707              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/serial.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include "drivers/serial.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     PORTSHARING_UNUSED = 0,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     PORTSHARING_NOT_SHARED,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     PORTSHARING_SHARED
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } portSharing_e;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_NONE                = 0,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_MSP                 = (1 << 0),  // 1
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_GPS                 = (1 << 1),  // 2
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_FRSKY_HUB = (1 << 2),  // 4
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_HOTT      = (1 << 3),  // 8
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_LTM       = (1 << 4),  // 16
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_SMARTPORT = (1 << 5),  // 32
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_RX_SERIAL           = (1 << 6),  // 64
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_BLACKBOX            = (1 << 7),  // 128
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_MAVLINK   = (1 << 9),  // 512
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_ESC_SENSOR          = (1 << 10), // 1024
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_VTX_SMARTAUDIO      = (1 << 11), // 2048
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_IBUS      = (1 << 12), // 4096
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_VTX_TRAMP           = (1 << 13), // 8192
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_RCDEVICE            = (1 << 14), // 16384
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_LIDAR_TF            = (1 << 15), // 32768
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortFunction_e;
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define TELEMETRY_SHAREABLE_PORT_FUNCTIONS_MASK (FUNCTION_TELEMETRY_FRSKY_HUB | FUNCTION_TELEMETRY_
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define TELEMETRY_PORT_FUNCTIONS_MASK (TELEMETRY_SHAREABLE_PORT_FUNCTIONS_MASK | FUNCTION_TELEMETRY
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_AUTO = 0,
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_9600,
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_19200,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_38400,
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_57600,
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_115200,
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_230400,
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_250000,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_400000,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_460800,
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_500000,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_921600,
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_1000000,
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_1500000,
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_2000000,
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_2470000
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } baudRate_e;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** extern const uint32_t baudRates[];
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** // serial port identifiers are now fixed, these values are used by MSP commands.
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_NONE = -1,
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART1 = 0,
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART2,
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART3,
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_UART4,
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_UART5,
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART6,
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART7,
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART8,
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USB_VCP = 20,
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_SOFTSERIAL1 = 30,
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_SOFTSERIAL2,
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS1 = 40,
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS2,
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS3,
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS4,
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS5,
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS6,
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortIdentifier_e;
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** extern const serialPortIdentifier_e serialPortIdentifiers[SERIAL_PORT_COUNT];
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define SERIAL_PORT_IDENTIFIER_TO_INDEX(x) (((x) <= SERIAL_PORT_USART8) ? (x) : (RESOURCE_SOFT_OFFS
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define SERIAL_PORT_IDENTIFIER_TO_UARTDEV(x) ((x) - SERIAL_PORT_USART1 + UARTDEV_1)
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** // runtime
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef struct serialPortUsage_s {
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPort_t *serialPort;
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortFunction_e function;
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortIdentifier_e identifier;
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortUsage_t;
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** serialPort_t *findSharedSerialPort(uint16_t functionMask, serialPortFunction_e sharedWithFunction);
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** // configuration
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef struct serialPortConfig_s {
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint16_t functionMask;
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortIdentifier_e identifier;
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t msp_baudrateIndex;
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t gps_baudrateIndex;
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t blackbox_baudrateIndex;
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t telemetry_baudrateIndex; // not used for all telemetry systems, e.g. HoTT only works at
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortConfig_t;
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef struct serialConfig_s {
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortConfig_t portConfigs[SERIAL_PORT_COUNT];
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint16_t serial_update_rate_hz;
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t reboot_character;               // which byte is used to reboot. Default 'R', could be 
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialConfig_t;
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** PG_DECLARE(serialConfig_t, serialConfig);
 708              	 .loc 14 135 0
 709              	 .cfi_startproc
 710              	 
 711              	 
 712              	 
 713 0000 80B4     	 push {r7}
 714              	.LCFI72:
 715              	 .cfi_def_cfa_offset 4
 716              	 .cfi_offset 7,-4
 717 0002 00AF     	 add r7,sp,#0
 718              	.LCFI73:
 719              	 .cfi_def_cfa_register 7
 720              	 .loc 14 135 0
 721 0004 024B     	 ldr r3,.L71
 722 0006 1846     	 mov r0,r3
 723 0008 BD46     	 mov sp,r7
 724              	.LCFI74:
 725              	 .cfi_def_cfa_register 13
 726              	 
 727 000a 5DF8047B 	 ldr r7,[sp],#4
 728              	.LCFI75:
 729              	 .cfi_restore 7
 730              	 .cfi_def_cfa_offset 0
 731 000e 7047     	 bx lr
 732              	.L72:
 733              	 .align 2
 734              	.L71:
 735 0010 00000000 	 .word serialConfig_System
 736              	 .cfi_endproc
 737              	.LFE602:
 739              	 .comm colors,4,4
 740              	 .comm modeColors,4,4
 741              	 .comm specialColors,11,4
 742              	 .section .text.batteryConfig,"ax",%progbits
 743              	 .align 2
 744              	 .thumb
 745              	 .thumb_func
 747              	batteryConfig:
 748              	.LFB641:
 749              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/battery.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "common/filter.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "common/time.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "sensors/current.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** #include "sensors/voltage.h"
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** typedef struct batteryConfig_s {
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     // voltage
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatmaxcellvoltage;             // maximum voltage per cell, used for auto-detecting ba
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatmincellvoltage;             // minimum voltage per cell, this triggers battery crit
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatwarningcellvoltage;         // warning voltage per cell, this triggers battery warn
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatnotpresentcellvoltage;      // Between vbatmaxcellvoltage and 2*this is considered 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t lvcPercentage;                  // Percentage of throttle when lvc is triggered
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     voltageMeterSource_e voltageMeterSource; // source of battery voltage meter used, either ADC or
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     // current
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     currentMeterSource_e currentMeterSource; // source of battery current meter used, either ADC, V
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint16_t batteryCapacity;               // mAh
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     // warnings / alerts
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     bool useVBatAlerts;                     // Issue alerts based on VBat readings
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     bool useConsumptionAlerts;              // Issue alerts based on total power consumption
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t consumptionWarningPercentage;   // Percentage of remaining capacity that should trigger
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbathysteresis;                 // hysteresis for alarm, default 1 = 0.1V
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t vbatfullcellvoltage;            // Cell voltage at which the battery is deemed to be "f
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** } batteryConfig_t;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** typedef struct lowVoltageCutoff_s {
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     bool enabled;
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     uint8_t percentage;
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h ****     timeUs_t startTime;
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** } lowVoltageCutoff_t;
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** 
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\battery.h **** PG_DECLARE(batteryConfig_t, batteryConfig);
 750              	 .loc 15 59 0
 751              	 .cfi_startproc
 752              	 
 753              	 
 754              	 
 755 0000 80B4     	 push {r7}
 756              	.LCFI76:
 757              	 .cfi_def_cfa_offset 4
 758              	 .cfi_offset 7,-4
 759 0002 00AF     	 add r7,sp,#0
 760              	.LCFI77:
 761              	 .cfi_def_cfa_register 7
 762              	 .loc 15 59 0
 763 0004 024B     	 ldr r3,.L75
 764 0006 1846     	 mov r0,r3
 765 0008 BD46     	 mov sp,r7
 766              	.LCFI78:
 767              	 .cfi_def_cfa_register 13
 768              	 
 769 000a 5DF8047B 	 ldr r7,[sp],#4
 770              	.LCFI79:
 771              	 .cfi_restore 7
 772              	 .cfi_def_cfa_offset 0
 773 000e 7047     	 bx lr
 774              	.L76:
 775              	 .align 2
 776              	.L75:
 777 0010 00000000 	 .word batteryConfig_System
 778              	 .cfi_endproc
 779              	.LFE641:
 781              	 .section .text.boardAlignment,"ax",%progbits
 782              	 .align 2
 783              	 .thumb
 784              	 .thumb_func
 786              	boardAlignment:
 787              	.LFB643:
 788              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/boardalignment.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** typedef struct boardAlignment_s {
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****     int32_t rollDegrees;
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****     int32_t pitchDegrees;
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h ****     int32_t yawDegrees;
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** } boardAlignment_t;
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** 
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\boardalignment.h **** PG_DECLARE(boardAlignment_t, boardAlignment);
 789              	 .loc 16 31 0
 790              	 .cfi_startproc
 791              	 
 792              	 
 793              	 
 794 0000 80B4     	 push {r7}
 795              	.LCFI80:
 796              	 .cfi_def_cfa_offset 4
 797              	 .cfi_offset 7,-4
 798 0002 00AF     	 add r7,sp,#0
 799              	.LCFI81:
 800              	 .cfi_def_cfa_register 7
 801              	 .loc 16 31 0
 802 0004 024B     	 ldr r3,.L79
 803 0006 1846     	 mov r0,r3
 804 0008 BD46     	 mov sp,r7
 805              	.LCFI82:
 806              	 .cfi_def_cfa_register 13
 807              	 
 808 000a 5DF8047B 	 ldr r7,[sp],#4
 809              	.LCFI83:
 810              	 .cfi_restore 7
 811              	 .cfi_def_cfa_offset 0
 812 000e 7047     	 bx lr
 813              	.L80:
 814              	 .align 2
 815              	.L79:
 816 0010 00000000 	 .word boardAlignment_System
 817              	 .cfi_endproc
 818              	.LFE643:
 820              	 .section .text.mixerConfig,"ax",%progbits
 821              	 .align 2
 822              	 .thumb
 823              	 .thumb_func
 825              	mixerConfig:
 826              	.LFB658:
 827              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/mixer.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "platform.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "common/time.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/pwm_output_counts.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/io_types.h"
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/pwm_output.h"
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define QUAD_MOTOR_COUNT 4
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define BRUSHED_MOTORS_PWM_RATE 16000
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define BRUSHLESS_MOTORS_PWM_RATE 480
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Digital protocol has fixed values
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_DISARM_COMMAND      0
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_MIN_THROTTLE       48
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_MAX_THROTTLE     2047
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_3D_DEADBAND_LOW  1047
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_3D_DEADBAND_HIGH 1048
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Note: this is called MultiType/MULTITYPE_* in baseflight.
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef enum mixerMode
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** {
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_TRI = 1,
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADP = 2,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADX = 3,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_BICOPTER = 4,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_GIMBAL = 5,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_Y6 = 6,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6 = 7,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_FLYING_WING = 8,
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_Y4 = 9,
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6X = 10,
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOX8 = 11,
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOFLATP = 12,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOFLATX = 13,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_AIRPLANE = 14,        // airplane / singlecopter / dualcopter (not yet properly supported
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HELI_120_CCPM = 15,
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HELI_90_DEG = 16,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_VTAIL4 = 17,
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6H = 18,
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_RX_TO_SERVO = 19,    // PPM -> servo relay
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_DUALCOPTER = 20,
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_SINGLECOPTER = 21,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_ATAIL4 = 22,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM = 23,
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM_AIRPLANE = 24,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM_TRI = 25,
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADX_1234 = 26
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixerMode_e;
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Custom mixer data per motor
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct motorMixer_s {
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float throttle;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float roll;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float pitch;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float yaw;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } motorMixer_t;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE_ARRAY(motorMixer_t, MAX_SUPPORTED_MOTORS, customMotorMixer);
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Custom mixer configuration
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct mixer_s {
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t motorCount;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t useServo;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     const motorMixer_t *motor;
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixer_t;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct mixerConfig_s {
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t mixerMode;
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     bool yaw_motors_reversed;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t crashflip_motor_percent;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixerConfig_t;
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE(mixerConfig_t, mixerConfig);
 828              	 .loc 17 96 0
 829              	 .cfi_startproc
 830              	 
 831              	 
 832              	 
 833 0000 80B4     	 push {r7}
 834              	.LCFI84:
 835              	 .cfi_def_cfa_offset 4
 836              	 .cfi_offset 7,-4
 837 0002 00AF     	 add r7,sp,#0
 838              	.LCFI85:
 839              	 .cfi_def_cfa_register 7
 840              	 .loc 17 96 0
 841 0004 024B     	 ldr r3,.L83
 842 0006 1846     	 mov r0,r3
 843 0008 BD46     	 mov sp,r7
 844              	.LCFI86:
 845              	 .cfi_def_cfa_register 13
 846              	 
 847 000a 5DF8047B 	 ldr r7,[sp],#4
 848              	.LCFI87:
 849              	 .cfi_restore 7
 850              	 .cfi_def_cfa_offset 0
 851 000e 7047     	 bx lr
 852              	.L84:
 853              	 .align 2
 854              	.L83:
 855 0010 00000000 	 .word mixerConfig_System
 856              	 .cfi_endproc
 857              	.LFE658:
 859              	 .section .text.motorConfig,"ax",%progbits
 860              	 .align 2
 861              	 .thumb
 862              	 .thumb_func
 864              	motorConfig:
 865              	.LFB660:
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct motorConfig_s {
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     motorDevConfig_t dev;
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t digitalIdleOffsetValue;        // Idle value for DShot protocol, full motor output = 1
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t minthrottle;                   // Set the minimum throttle command sent to the ESC (El
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t maxthrottle;                   // This is the maximum value for the ESCs at full power
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t mincommand;                    // This is the value for the ESCs when they are not arm
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t motorPoleCount;                // Magnetic poles in the motors for calculating actual R
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } motorConfig_t;
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE(motorConfig_t, motorConfig);
 866              	 .loc 17 107 0
 867              	 .cfi_startproc
 868              	 
 869              	 
 870              	 
 871 0000 80B4     	 push {r7}
 872              	.LCFI88:
 873              	 .cfi_def_cfa_offset 4
 874              	 .cfi_offset 7,-4
 875 0002 00AF     	 add r7,sp,#0
 876              	.LCFI89:
 877              	 .cfi_def_cfa_register 7
 878              	 .loc 17 107 0
 879 0004 024B     	 ldr r3,.L87
 880 0006 1846     	 mov r0,r3
 881 0008 BD46     	 mov sp,r7
 882              	.LCFI90:
 883              	 .cfi_def_cfa_register 13
 884              	 
 885 000a 5DF8047B 	 ldr r7,[sp],#4
 886              	.LCFI91:
 887              	 .cfi_restore 7
 888              	 .cfi_def_cfa_offset 0
 889 000e 7047     	 bx lr
 890              	.L88:
 891              	 .align 2
 892              	.L87:
 893 0010 00000000 	 .word motorConfig_System
 894              	 .cfi_endproc
 895              	.LFE660:
 897              	 .comm inputSource_e,1,1
 898              	 .section .text.servoConfig,"ax",%progbits
 899              	 .align 2
 900              	 .thumb
 901              	 .thumb_func
 903              	servoConfig:
 904              	.LFB673:
 905              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/servos.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #include "drivers/io_types.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #include "drivers/pwm_output.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** // These must be consecutive, see 'reversedSources'
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** enum {
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_STABILIZED_ROLL = 0,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_STABILIZED_PITCH,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_STABILIZED_YAW,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_STABILIZED_THROTTLE,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_ROLL,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_PITCH,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_YAW,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_THROTTLE,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_AUX1,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_AUX2,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_AUX3,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_AUX4,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_GIMBAL_PITCH,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_GIMBAL_ROLL,
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_SOURCE_COUNT
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } inputSource_e;
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** // target servo channels
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef enum {
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_GIMBAL_PITCH = 0,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_GIMBAL_ROLL = 1,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_FLAPS = 2,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_FLAPPERON_1 = 3,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_FLAPPERON_2 = 4,
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_RUDDER = 5,
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_ELEVATOR = 6,
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_THROTTLE = 7, // for internal combustion (IC) planes
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_BICOPTER_LEFT = 4,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_BICOPTER_RIGHT = 5,
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_DUALCOPTER_LEFT = 4,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_DUALCOPTER_RIGHT = 5,
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_SINGLECOPTER_1 = 3,
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_SINGLECOPTER_2 = 4,
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_SINGLECOPTER_3 = 5,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_SINGLECOPTER_4 = 6,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_HELI_LEFT = 0,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_HELI_RIGHT = 1,
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_HELI_TOP = 2,
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_HELI_RUD = 3
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } servoIndex_e; // FIXME rename to servoChannel_e
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_PLANE_INDEX_MIN SERVO_FLAPS
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_PLANE_INDEX_MAX SERVO_THROTTLE
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_DUALCOPTER_INDEX_MIN SERVO_DUALCOPTER_LEFT
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_DUALCOPTER_INDEX_MAX SERVO_DUALCOPTER_RIGHT
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_SINGLECOPTER_INDEX_MIN SERVO_SINGLECOPTER_1
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_SINGLECOPTER_INDEX_MAX SERVO_SINGLECOPTER_4
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_FLAPPERONS_MIN SERVO_FLAPPERON_1
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_FLAPPERONS_MAX SERVO_FLAPPERON_2
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define MAX_SERVO_RULES (2 * MAX_SUPPORTED_SERVOS)
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef struct servoMixer_s {
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t targetChannel;                  // servo that receives the output of the rule
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t inputSource;                    // input channel for this rule
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t rate;                            // range [-125;+125] ; can be used to adjust a rate 0-1
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t speed;                          // reduces the speed of the rule, 0=unlimited speed
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t min;                             // lower bound of rule range [0;100]% of servo max-min
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t max;                             // lower bound of rule range [0;100]% of servo max-min
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t box;                            // active rule if box is enabled, range [0;3], 0=no box
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } servoMixer_t;
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** PG_DECLARE_ARRAY(servoMixer_t, MAX_SERVO_RULES, customServoMixers);
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define MAX_SERVO_SPEED UINT8_MAX
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define MAX_SERVO_BOXES 3
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** // Custom mixer configuration
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef struct mixerRules_s {
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t servoRuleCount;
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     const servoMixer_t *rule;
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } mixerRules_t;
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** extern const mixerRules_t servoMixers[];
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef struct servoParam_s {
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint32_t reversedSources;               // the direction of servo movement for each input sourc
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int16_t min;                            // servo min
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int16_t max;                            // servo max
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int16_t middle;                         // servo middle
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t rate;                            // range [-125;+125] ; can be used to adjust a rate 0-1
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t forwardFromChannel;              // RX channel index, 0 based.  See CHANNEL_FORWARDING_D
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } servoParam_t;
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** PG_DECLARE_ARRAY(servoParam_t, MAX_SUPPORTED_SERVOS, servoParams);
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef struct servoConfig_s {
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     servoDevConfig_t dev;
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint16_t servo_lowpass_freq;            // lowpass servo filter frequency selection; 1/1000ths 
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t tri_unarmed_servo;              // send tail servo correction pulses even when unarmed
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t channelForwardingStartChannel;
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } servoConfig_t;
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** PG_DECLARE(servoConfig_t, servoConfig);
 906              	 .loc 18 130 0
 907              	 .cfi_startproc
 908              	 
 909              	 
 910              	 
 911 0000 80B4     	 push {r7}
 912              	.LCFI92:
 913              	 .cfi_def_cfa_offset 4
 914              	 .cfi_offset 7,-4
 915 0002 00AF     	 add r7,sp,#0
 916              	.LCFI93:
 917              	 .cfi_def_cfa_register 7
 918              	 .loc 18 130 0
 919 0004 024B     	 ldr r3,.L91
 920 0006 1846     	 mov r0,r3
 921 0008 BD46     	 mov sp,r7
 922              	.LCFI94:
 923              	 .cfi_def_cfa_register 13
 924              	 
 925 000a 5DF8047B 	 ldr r7,[sp],#4
 926              	.LCFI95:
 927              	 .cfi_restore 7
 928              	 .cfi_def_cfa_offset 0
 929 000e 7047     	 bx lr
 930              	.L92:
 931              	 .align 2
 932              	.L91:
 933 0010 00000000 	 .word servoConfig_System
 934              	 .cfi_endproc
 935              	.LFE673:
 937              	 .comm switchStates,3,4
 938              	 .global systemState
 939              	 .section .bss.systemState,"aw",%nobits
 942              	systemState:
 943 0000 00       	 .space 1
 944              	 .section .text.processLoopback,"ax",%progbits
 945              	 .align 2
 946              	 .global processLoopback
 947              	 .thumb
 948              	 .thumb_func
 950              	processLoopback:
 951              	.LFB675:
 952              	 .file 19 "../cleanflight/src/main/fc/fc_init.c"
   1:../cleanflight/src/main/fc/fc_init.c **** /*
   2:../cleanflight/src/main/fc/fc_init.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/fc/fc_init.c ****  *
   4:../cleanflight/src/main/fc/fc_init.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/fc/fc_init.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/fc/fc_init.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/fc/fc_init.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/fc/fc_init.c ****  * any later version.
   9:../cleanflight/src/main/fc/fc_init.c ****  *
  10:../cleanflight/src/main/fc/fc_init.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/fc/fc_init.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/fc/fc_init.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/fc/fc_init.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/fc/fc_init.c ****  *
  15:../cleanflight/src/main/fc/fc_init.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/fc/fc_init.c ****  * along with this software.
  17:../cleanflight/src/main/fc/fc_init.c ****  *
  18:../cleanflight/src/main/fc/fc_init.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/fc/fc_init.c ****  */
  20:../cleanflight/src/main/fc/fc_init.c **** 
  21:../cleanflight/src/main/fc/fc_init.c **** #include <stdbool.h>
  22:../cleanflight/src/main/fc/fc_init.c **** #include <stdint.h>
  23:../cleanflight/src/main/fc/fc_init.c **** #include <string.h>
  24:../cleanflight/src/main/fc/fc_init.c **** #include <math.h>
  25:../cleanflight/src/main/fc/fc_init.c **** 
  26:../cleanflight/src/main/fc/fc_init.c **** #include "platform.h"
  27:../cleanflight/src/main/fc/fc_init.c **** 
  28:../cleanflight/src/main/fc/fc_init.c **** #include "blackbox/blackbox.h"
  29:../cleanflight/src/main/fc/fc_init.c **** 
  30:../cleanflight/src/main/fc/fc_init.c **** #include "common/axis.h"
  31:../cleanflight/src/main/fc/fc_init.c **** #include "common/color.h"
  32:../cleanflight/src/main/fc/fc_init.c **** #include "common/maths.h"
  33:../cleanflight/src/main/fc/fc_init.c **** #include "common/printf.h"
  34:../cleanflight/src/main/fc/fc_init.c **** 
  35:../cleanflight/src/main/fc/fc_init.c **** #include "config/config_eeprom.h"
  36:../cleanflight/src/main/fc/fc_init.c **** #include "config/feature.h"
  37:../cleanflight/src/main/fc/fc_init.c **** 
  38:../cleanflight/src/main/fc/fc_init.c **** #include "cms/cms.h"
  39:../cleanflight/src/main/fc/fc_init.c **** #include "cms/cms_types.h"
  40:../cleanflight/src/main/fc/fc_init.c **** 
  41:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/accgyro/accgyro.h"
  42:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/camera_control.h"
  43:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/compass/compass.h"
  44:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/pwm_esc_detect.h"
  45:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/pwm_output.h"
  46:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/adc.h"
  47:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/bus.h"
  48:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/bus_i2c.h"
  49:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/bus_spi.h"
  50:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/buttons.h"
  51:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/camera_control.h"
  52:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/compass/compass.h"
  53:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/dma.h"
  54:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/exti.h"
  55:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/flash.h"
  56:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/inverter.h"
  57:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/io.h"
  58:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/light_led.h"
  59:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/nvic.h"
  60:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/pwm_esc_detect.h"
  61:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/pwm_output.h"
  62:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/rx/rx_pwm.h"
  63:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/sensor.h"
  64:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/serial.h"
  65:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/serial_softserial.h"
  66:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/serial_uart.h"
  67:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/sdcard.h"
  68:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/sound_beeper.h"
  69:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/system.h"
  70:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/time.h"
  71:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/timer.h"
  72:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/transponder_ir.h"
  73:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/exti.h"
  74:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/usb_io.h"
  75:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/vtx_rtc6705.h"
  76:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/vtx_common.h"
  77:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_USB_MSC
  78:../cleanflight/src/main/fc/fc_init.c **** #include "drivers/usb_msc.h"
  79:../cleanflight/src/main/fc/fc_init.c **** #endif
  80:../cleanflight/src/main/fc/fc_init.c **** 
  81:../cleanflight/src/main/fc/fc_init.c **** #include "fc/board_info.h"
  82:../cleanflight/src/main/fc/fc_init.c **** #include "fc/config.h"
  83:../cleanflight/src/main/fc/fc_init.c **** #include "fc/fc_init.h"
  84:../cleanflight/src/main/fc/fc_init.c **** #include "fc/fc_tasks.h"
  85:../cleanflight/src/main/fc/fc_init.c **** #include "fc/rc_controls.h"
  86:../cleanflight/src/main/fc/fc_init.c **** #include "fc/runtime_config.h"
  87:../cleanflight/src/main/fc/fc_init.c **** 
  88:../cleanflight/src/main/fc/fc_init.c **** #include "interface/cli.h"
  89:../cleanflight/src/main/fc/fc_init.c **** #include "interface/msp.h"
  90:../cleanflight/src/main/fc/fc_init.c **** 
  91:../cleanflight/src/main/fc/fc_init.c **** #include "msp/msp_serial.h"
  92:../cleanflight/src/main/fc/fc_init.c **** 
  93:../cleanflight/src/main/fc/fc_init.c **** #include "pg/adc.h"
  94:../cleanflight/src/main/fc/fc_init.c **** #include "pg/beeper.h"
  95:../cleanflight/src/main/fc/fc_init.c **** #include "pg/beeper_dev.h"
  96:../cleanflight/src/main/fc/fc_init.c **** #include "pg/bus_i2c.h"
  97:../cleanflight/src/main/fc/fc_init.c **** #include "pg/bus_spi.h"
  98:../cleanflight/src/main/fc/fc_init.c **** #include "pg/flash.h"
  99:../cleanflight/src/main/fc/fc_init.c **** #include "pg/pinio.h"
 100:../cleanflight/src/main/fc/fc_init.c **** #include "pg/piniobox.h"
 101:../cleanflight/src/main/fc/fc_init.c **** #include "pg/pg.h"
 102:../cleanflight/src/main/fc/fc_init.c **** #include "pg/rx.h"
 103:../cleanflight/src/main/fc/fc_init.c **** #include "pg/rx_spi.h"
 104:../cleanflight/src/main/fc/fc_init.c **** #include "pg/rx_pwm.h"
 105:../cleanflight/src/main/fc/fc_init.c **** #include "pg/sdcard.h"
 106:../cleanflight/src/main/fc/fc_init.c **** #include "pg/vcd.h"
 107:../cleanflight/src/main/fc/fc_init.c **** 
 108:../cleanflight/src/main/fc/fc_init.c **** #include "rx/rx.h"
 109:../cleanflight/src/main/fc/fc_init.c **** #include "rx/rx_spi.h"
 110:../cleanflight/src/main/fc/fc_init.c **** #include "rx/spektrum.h"
 111:../cleanflight/src/main/fc/fc_init.c **** 
 112:../cleanflight/src/main/fc/fc_init.c **** #include "io/beeper.h"
 113:../cleanflight/src/main/fc/fc_init.c **** #include "io/displayport_max7456.h"
 114:../cleanflight/src/main/fc/fc_init.c **** #include "io/displayport_srxl.h"
 115:../cleanflight/src/main/fc/fc_init.c **** #include "io/serial.h"
 116:../cleanflight/src/main/fc/fc_init.c **** #include "io/flashfs.h"
 117:../cleanflight/src/main/fc/fc_init.c **** #include "io/gps.h"
 118:../cleanflight/src/main/fc/fc_init.c **** #include "io/motors.h"
 119:../cleanflight/src/main/fc/fc_init.c **** #include "io/servos.h"
 120:../cleanflight/src/main/fc/fc_init.c **** #include "io/gimbal.h"
 121:../cleanflight/src/main/fc/fc_init.c **** #include "io/ledstrip.h"
 122:../cleanflight/src/main/fc/fc_init.c **** #include "io/dashboard.h"
 123:../cleanflight/src/main/fc/fc_init.c **** #include "io/asyncfatfs/asyncfatfs.h"
 124:../cleanflight/src/main/fc/fc_init.c **** #include "io/transponder_ir.h"
 125:../cleanflight/src/main/fc/fc_init.c **** #include "io/osd.h"
 126:../cleanflight/src/main/fc/fc_init.c **** #include "io/osd_slave.h"
 127:../cleanflight/src/main/fc/fc_init.c **** #include "io/pidaudio.h"
 128:../cleanflight/src/main/fc/fc_init.c **** #include "io/piniobox.h"
 129:../cleanflight/src/main/fc/fc_init.c **** #include "io/displayport_msp.h"
 130:../cleanflight/src/main/fc/fc_init.c **** #include "io/vtx.h"
 131:../cleanflight/src/main/fc/fc_init.c **** #include "io/vtx_rtc6705.h"
 132:../cleanflight/src/main/fc/fc_init.c **** #include "io/vtx_control.h"
 133:../cleanflight/src/main/fc/fc_init.c **** #include "io/vtx_smartaudio.h"
 134:../cleanflight/src/main/fc/fc_init.c **** #include "io/vtx_tramp.h"
 135:../cleanflight/src/main/fc/fc_init.c **** 
 136:../cleanflight/src/main/fc/fc_init.c **** #include "scheduler/scheduler.h"
 137:../cleanflight/src/main/fc/fc_init.c **** 
 138:../cleanflight/src/main/fc/fc_init.c **** #include "sensors/acceleration.h"
 139:../cleanflight/src/main/fc/fc_init.c **** #include "sensors/barometer.h"
 140:../cleanflight/src/main/fc/fc_init.c **** #include "sensors/battery.h"
 141:../cleanflight/src/main/fc/fc_init.c **** #include "sensors/boardalignment.h"
 142:../cleanflight/src/main/fc/fc_init.c **** #include "sensors/compass.h"
 143:../cleanflight/src/main/fc/fc_init.c **** #include "sensors/esc_sensor.h"
 144:../cleanflight/src/main/fc/fc_init.c **** #include "sensors/gyro.h"
 145:../cleanflight/src/main/fc/fc_init.c **** #include "sensors/initialisation.h"
 146:../cleanflight/src/main/fc/fc_init.c **** #include "sensors/sensors.h"
 147:../cleanflight/src/main/fc/fc_init.c **** 
 148:../cleanflight/src/main/fc/fc_init.c **** #include "telemetry/telemetry.h"
 149:../cleanflight/src/main/fc/fc_init.c **** 
 150:../cleanflight/src/main/fc/fc_init.c **** #include "flight/failsafe.h"
 151:../cleanflight/src/main/fc/fc_init.c **** #include "flight/imu.h"
 152:../cleanflight/src/main/fc/fc_init.c **** #include "flight/mixer.h"
 153:../cleanflight/src/main/fc/fc_init.c **** #include "flight/pid.h"
 154:../cleanflight/src/main/fc/fc_init.c **** #include "flight/servos.h"
 155:../cleanflight/src/main/fc/fc_init.c **** 
 156:../cleanflight/src/main/fc/fc_init.c **** #include "io/rcdevice_cam.h"
 157:../cleanflight/src/main/fc/fc_init.c **** 
 158:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_HARDWARE_REVISION_DETECTION
 159:../cleanflight/src/main/fc/fc_init.c **** #include "hardware_revision.h"
 160:../cleanflight/src/main/fc/fc_init.c **** #endif
 161:../cleanflight/src/main/fc/fc_init.c **** 
 162:../cleanflight/src/main/fc/fc_init.c **** #include "build/build_config.h"
 163:../cleanflight/src/main/fc/fc_init.c **** #include "build/debug.h"
 164:../cleanflight/src/main/fc/fc_init.c **** 
 165:../cleanflight/src/main/fc/fc_init.c **** #ifdef TARGET_PREINIT
 166:../cleanflight/src/main/fc/fc_init.c **** void targetPreInit(void);
 167:../cleanflight/src/main/fc/fc_init.c **** #endif
 168:../cleanflight/src/main/fc/fc_init.c **** 
 169:../cleanflight/src/main/fc/fc_init.c **** #ifdef SOFTSERIAL_LOOPBACK
 170:../cleanflight/src/main/fc/fc_init.c **** serialPort_t *loopbackPort;
 171:../cleanflight/src/main/fc/fc_init.c **** #endif
 172:../cleanflight/src/main/fc/fc_init.c **** 
 173:../cleanflight/src/main/fc/fc_init.c **** uint8_t systemState = SYSTEM_STATE_INITIALISING;
 174:../cleanflight/src/main/fc/fc_init.c **** 
 175:../cleanflight/src/main/fc/fc_init.c **** void processLoopback(void)
 176:../cleanflight/src/main/fc/fc_init.c **** {
 953              	 .loc 19 176 0
 954              	 .cfi_startproc
 955              	 
 956              	 
 957              	 
 958 0000 80B4     	 push {r7}
 959              	.LCFI96:
 960              	 .cfi_def_cfa_offset 4
 961              	 .cfi_offset 7,-4
 962 0002 00AF     	 add r7,sp,#0
 963              	.LCFI97:
 964              	 .cfi_def_cfa_register 7
 177:../cleanflight/src/main/fc/fc_init.c **** #ifdef SOFTSERIAL_LOOPBACK
 178:../cleanflight/src/main/fc/fc_init.c ****     if (loopbackPort) {
 179:../cleanflight/src/main/fc/fc_init.c ****         uint8_t bytesWaiting;
 180:../cleanflight/src/main/fc/fc_init.c ****         while ((bytesWaiting = serialRxBytesWaiting(loopbackPort))) {
 181:../cleanflight/src/main/fc/fc_init.c ****             uint8_t b = serialRead(loopbackPort);
 182:../cleanflight/src/main/fc/fc_init.c ****             serialWrite(loopbackPort, b);
 183:../cleanflight/src/main/fc/fc_init.c ****         };
 184:../cleanflight/src/main/fc/fc_init.c ****     }
 185:../cleanflight/src/main/fc/fc_init.c **** #endif
 186:../cleanflight/src/main/fc/fc_init.c **** }
 965              	 .loc 19 186 0
 966 0004 BD46     	 mov sp,r7
 967              	.LCFI98:
 968              	 .cfi_def_cfa_register 13
 969              	 
 970 0006 5DF8047B 	 ldr r7,[sp],#4
 971              	.LCFI99:
 972              	 .cfi_restore 7
 973              	 .cfi_def_cfa_offset 0
 974 000a 7047     	 bx lr
 975              	 .cfi_endproc
 976              	.LFE675:
 978              	 .section .rodata
 979              	 .align 2
 980              	.LC0:
 981 0000 4C454455 	 .ascii "LEDU\000"
 981      00
 982 0005 000000   	 .section .text.init,"ax",%progbits
 983              	 .align 2
 984              	 .global init
 985              	 .thumb
 986              	 .thumb_func
 988              	init:
 989              	.LFB676:
 187:../cleanflight/src/main/fc/fc_init.c **** 
 188:../cleanflight/src/main/fc/fc_init.c **** #ifdef BUS_SWITCH_PIN
 189:../cleanflight/src/main/fc/fc_init.c **** void busSwitchInit(void)
 190:../cleanflight/src/main/fc/fc_init.c **** {
 191:../cleanflight/src/main/fc/fc_init.c **** static IO_t busSwitchResetPin        = IO_NONE;
 192:../cleanflight/src/main/fc/fc_init.c **** 
 193:../cleanflight/src/main/fc/fc_init.c ****     busSwitchResetPin = IOGetByTag(IO_TAG(BUS_SWITCH_PIN));
 194:../cleanflight/src/main/fc/fc_init.c ****     IOInit(busSwitchResetPin, OWNER_SYSTEM, 0);
 195:../cleanflight/src/main/fc/fc_init.c ****     IOConfigGPIO(busSwitchResetPin, IOCFG_OUT_PP);
 196:../cleanflight/src/main/fc/fc_init.c **** 
 197:../cleanflight/src/main/fc/fc_init.c ****     // ENABLE
 198:../cleanflight/src/main/fc/fc_init.c ****     IOLo(busSwitchResetPin);
 199:../cleanflight/src/main/fc/fc_init.c **** }
 200:../cleanflight/src/main/fc/fc_init.c **** #endif
 201:../cleanflight/src/main/fc/fc_init.c **** 
 202:../cleanflight/src/main/fc/fc_init.c **** void init(void)
 203:../cleanflight/src/main/fc/fc_init.c **** {
 990              	 .loc 19 203 0
 991              	 .cfi_startproc
 992              	 
 993              	 
 994 0000 90B5     	 push {r4,r7,lr}
 995              	.LCFI100:
 996              	 .cfi_def_cfa_offset 12
 997              	 .cfi_offset 4,-12
 998              	 .cfi_offset 7,-8
 999              	 .cfi_offset 14,-4
 1000 0002 85B0     	 sub sp,sp,#20
 1001              	.LCFI101:
 1002              	 .cfi_def_cfa_offset 32
 1003 0004 00AF     	 add r7,sp,#0
 1004              	.LCFI102:
 1005              	 .cfi_def_cfa_register 7
 204:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_ITCM_RAM
 205:../cleanflight/src/main/fc/fc_init.c ****     /* Load functions into ITCM RAM */
 206:../cleanflight/src/main/fc/fc_init.c ****     extern uint8_t tcm_code_start;
 207:../cleanflight/src/main/fc/fc_init.c ****     extern uint8_t tcm_code_end;
 208:../cleanflight/src/main/fc/fc_init.c ****     extern uint8_t tcm_code;
 209:../cleanflight/src/main/fc/fc_init.c ****     memcpy(&tcm_code_start, &tcm_code, (size_t) (&tcm_code_end - &tcm_code_start));
 210:../cleanflight/src/main/fc/fc_init.c **** #endif
 211:../cleanflight/src/main/fc/fc_init.c **** 
 212:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_FAST_RAM
 213:../cleanflight/src/main/fc/fc_init.c ****     /* Load FAST_RAM variable intializers into DTCM RAM */
 214:../cleanflight/src/main/fc/fc_init.c ****     extern uint8_t _sfastram_data;
 215:../cleanflight/src/main/fc/fc_init.c ****     extern uint8_t _efastram_data;
 216:../cleanflight/src/main/fc/fc_init.c ****     extern uint8_t _sfastram_idata;
 217:../cleanflight/src/main/fc/fc_init.c ****     memcpy(&_sfastram_data, &_sfastram_idata, (size_t) (&_efastram_data - &_sfastram_data));
 218:../cleanflight/src/main/fc/fc_init.c **** #endif
 219:../cleanflight/src/main/fc/fc_init.c **** 
 220:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_HAL_DRIVER
 221:../cleanflight/src/main/fc/fc_init.c ****     HAL_Init();
 222:../cleanflight/src/main/fc/fc_init.c **** #endif
 223:../cleanflight/src/main/fc/fc_init.c **** 
 224:../cleanflight/src/main/fc/fc_init.c ****     printfSupportInit();
 1006              	 .loc 19 224 0
 1007 0006 FFF7FEFF 	 bl printfSupportInit
 225:../cleanflight/src/main/fc/fc_init.c **** 
 226:../cleanflight/src/main/fc/fc_init.c ****     systemInit();
 1008              	 .loc 19 226 0
 1009 000a FFF7FEFF 	 bl systemInit
 227:../cleanflight/src/main/fc/fc_init.c **** 
 228:../cleanflight/src/main/fc/fc_init.c ****     // initialize IO (needed for all IO operations)
 229:../cleanflight/src/main/fc/fc_init.c ****     IOInitGlobal();
 1010              	 .loc 19 229 0
 1011 000e FFF7FEFF 	 bl IOInitGlobal
 230:../cleanflight/src/main/fc/fc_init.c **** 
 231:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_HARDWARE_REVISION_DETECTION
 232:../cleanflight/src/main/fc/fc_init.c ****     detectHardwareRevision();
 233:../cleanflight/src/main/fc/fc_init.c **** #endif
 234:../cleanflight/src/main/fc/fc_init.c **** 
 235:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_BRUSHED_ESC_AUTODETECT
 236:../cleanflight/src/main/fc/fc_init.c ****     detectBrushedESC();
 237:../cleanflight/src/main/fc/fc_init.c **** #endif
 238:../cleanflight/src/main/fc/fc_init.c **** 
 239:../cleanflight/src/main/fc/fc_init.c ****     initEEPROM();
 1012              	 .loc 19 239 0
 1013 0012 FFF7FEFF 	 bl initEEPROM
 240:../cleanflight/src/main/fc/fc_init.c **** 
 241:../cleanflight/src/main/fc/fc_init.c ****     ensureEEPROMStructureIsValid();
 1014              	 .loc 19 241 0
 1015 0016 FFF7FEFF 	 bl ensureEEPROMStructureIsValid
 242:../cleanflight/src/main/fc/fc_init.c **** 
 243:../cleanflight/src/main/fc/fc_init.c ****     bool readSuccess = readEEPROM();
 1016              	 .loc 19 243 0
 1017 001a FFF7FEFF 	 bl readEEPROM
 1018 001e 0346     	 mov r3,r0
 1019 0020 FB71     	 strb r3,[r7,#7]
 244:../cleanflight/src/main/fc/fc_init.c **** 
 245:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_BOARD_INFO)
 246:../cleanflight/src/main/fc/fc_init.c ****     initBoardInformation();
 1020              	 .loc 19 246 0
 1021 0022 FFF7FEFF 	 bl initBoardInformation
 247:../cleanflight/src/main/fc/fc_init.c **** #endif
 248:../cleanflight/src/main/fc/fc_init.c **** 
 249:../cleanflight/src/main/fc/fc_init.c ****     if (!readSuccess || !isEEPROMVersionValid() || strncasecmp(systemConfig()->boardIdentifier, TAR
 1022              	 .loc 19 249 0
 1023 0026 FB79     	 ldrb r3,[r7,#7]
 1024 0028 83F00103 	 eor r3,r3,#1
 1025 002c DBB2     	 uxtb r3,r3
 1026 002e 002B     	 cmp r3,#0
 1027 0030 13D1     	 bne .L95
 1028              	 .loc 19 249 0 is_stmt 0 discriminator 1
 1029 0032 FFF7FEFF 	 bl isEEPROMVersionValid
 1030 0036 0346     	 mov r3,r0
 1031 0038 83F00103 	 eor r3,r3,#1
 1032 003c DBB2     	 uxtb r3,r3
 1033 003e 002B     	 cmp r3,#0
 1034 0040 0BD1     	 bne .L95
 1035              	 .loc 19 249 0 discriminator 2
 1036 0042 FFF7FEFF 	 bl systemConfig
 1037 0046 0346     	 mov r3,r0
 1038 0048 0733     	 adds r3,r3,#7
 1039 004a 1846     	 mov r0,r3
 1040 004c C949     	 ldr r1,.L114
 1041 004e 0522     	 movs r2,#5
 1042 0050 FFF7FEFF 	 bl strncasecmp
 1043 0054 0346     	 mov r3,r0
 1044 0056 002B     	 cmp r3,#0
 1045 0058 01D0     	 beq .L96
 1046              	.L95:
 250:../cleanflight/src/main/fc/fc_init.c ****         resetEEPROM();
 1047              	 .loc 19 250 0 is_stmt 1
 1048 005a FFF7FEFF 	 bl resetEEPROM
 1049              	.L96:
 251:../cleanflight/src/main/fc/fc_init.c ****     }
 252:../cleanflight/src/main/fc/fc_init.c **** 
 253:../cleanflight/src/main/fc/fc_init.c ****     systemState |= SYSTEM_STATE_CONFIG_LOADED;
 1050              	 .loc 19 253 0
 1051 005e C64B     	 ldr r3,.L114+4
 1052 0060 1B78     	 ldrb r3,[r3]
 1053 0062 43F00103 	 orr r3,r3,#1
 1054 0066 DAB2     	 uxtb r2,r3
 1055 0068 C34B     	 ldr r3,.L114+4
 1056 006a 1A70     	 strb r2,[r3]
 254:../cleanflight/src/main/fc/fc_init.c **** 
 255:../cleanflight/src/main/fc/fc_init.c ****     //i2cSetOverclock(masterConfig.i2c_overclock);
 256:../cleanflight/src/main/fc/fc_init.c **** 
 257:../cleanflight/src/main/fc/fc_init.c ****     debugMode = systemConfig()->debug_mode;
 1057              	 .loc 19 257 0
 1058 006c FFF7FEFF 	 bl systemConfig
 1059 0070 0346     	 mov r3,r0
 1060 0072 9A78     	 ldrb r2,[r3,#2]
 1061 0074 C14B     	 ldr r3,.L114+8
 1062 0076 1A70     	 strb r2,[r3]
 258:../cleanflight/src/main/fc/fc_init.c **** 
 259:../cleanflight/src/main/fc/fc_init.c ****     // Latch active features to be used for feature() in the remainder of init().
 260:../cleanflight/src/main/fc/fc_init.c ****     latchActiveFeatures();
 1063              	 .loc 19 260 0
 1064 0078 FFF7FEFF 	 bl latchActiveFeatures
 261:../cleanflight/src/main/fc/fc_init.c **** 
 262:../cleanflight/src/main/fc/fc_init.c **** #ifdef TARGET_PREINIT
 263:../cleanflight/src/main/fc/fc_init.c ****     targetPreInit();
 264:../cleanflight/src/main/fc/fc_init.c **** #endif
 265:../cleanflight/src/main/fc/fc_init.c **** 
 266:../cleanflight/src/main/fc/fc_init.c **** #if !defined(UNIT_TEST) && !defined(USE_FAKE_LED)
 267:../cleanflight/src/main/fc/fc_init.c ****     ledInit(statusLedConfig());
 1065              	 .loc 19 267 0
 1066 007c FFF7FEFF 	 bl statusLedConfig
 1067 0080 0346     	 mov r3,r0
 1068 0082 1846     	 mov r0,r3
 1069 0084 FFF7FEFF 	 bl ledInit
 268:../cleanflight/src/main/fc/fc_init.c **** #endif
 269:../cleanflight/src/main/fc/fc_init.c ****     LED2_ON;
 1070              	 .loc 19 269 0
 1071 0088 0220     	 movs r0,#2
 1072 008a 0121     	 movs r1,#1
 1073 008c FFF7FEFF 	 bl ledSet
 270:../cleanflight/src/main/fc/fc_init.c **** 
 271:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_EXTI
 272:../cleanflight/src/main/fc/fc_init.c ****     EXTIInit();
 273:../cleanflight/src/main/fc/fc_init.c **** #endif
 274:../cleanflight/src/main/fc/fc_init.c **** 
 275:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_BUTTONS)
 276:../cleanflight/src/main/fc/fc_init.c **** 
 277:../cleanflight/src/main/fc/fc_init.c ****     buttonsInit();
 278:../cleanflight/src/main/fc/fc_init.c **** 
 279:../cleanflight/src/main/fc/fc_init.c ****     // Check status of bind plug and exit if not active
 280:../cleanflight/src/main/fc/fc_init.c ****     delayMicroseconds(10);  // allow configuration to settle
 281:../cleanflight/src/main/fc/fc_init.c **** 
 282:../cleanflight/src/main/fc/fc_init.c ****     if (!isMPUSoftReset()) {
 283:../cleanflight/src/main/fc/fc_init.c **** #if defined(BUTTON_A_PIN) && defined(BUTTON_B_PIN)
 284:../cleanflight/src/main/fc/fc_init.c ****         // two buttons required
 285:../cleanflight/src/main/fc/fc_init.c ****         uint8_t secondsRemaining = 5;
 286:../cleanflight/src/main/fc/fc_init.c ****         bool bothButtonsHeld;
 287:../cleanflight/src/main/fc/fc_init.c ****         do {
 288:../cleanflight/src/main/fc/fc_init.c ****             bothButtonsHeld = buttonAPressed() && buttonBPressed();
 289:../cleanflight/src/main/fc/fc_init.c ****             if (bothButtonsHeld) {
 290:../cleanflight/src/main/fc/fc_init.c ****                 if (--secondsRemaining == 0) {
 291:../cleanflight/src/main/fc/fc_init.c ****                     resetEEPROM();
 292:../cleanflight/src/main/fc/fc_init.c ****                     systemReset();
 293:../cleanflight/src/main/fc/fc_init.c ****                 }
 294:../cleanflight/src/main/fc/fc_init.c ****                 delay(1000);
 295:../cleanflight/src/main/fc/fc_init.c ****                 LED0_TOGGLE;
 296:../cleanflight/src/main/fc/fc_init.c ****             }
 297:../cleanflight/src/main/fc/fc_init.c ****         } while (bothButtonsHeld);
 298:../cleanflight/src/main/fc/fc_init.c **** #endif
 299:../cleanflight/src/main/fc/fc_init.c ****     }
 300:../cleanflight/src/main/fc/fc_init.c **** #endif
 301:../cleanflight/src/main/fc/fc_init.c **** 
 302:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_SPEKTRUM_BIND)
 303:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_RX_SERIAL)) {
 1074              	 .loc 19 303 0
 1075 0090 0820     	 movs r0,#8
 1076 0092 FFF7FEFF 	 bl feature
 1077 0096 0346     	 mov r3,r0
 1078 0098 002B     	 cmp r3,#0
 1079 009a 10D0     	 beq .L97
 304:../cleanflight/src/main/fc/fc_init.c ****         switch (rxConfig()->serialrx_provider) {
 1080              	 .loc 19 304 0
 1081 009c FFF7FEFF 	 bl rxConfig
 1082 00a0 0346     	 mov r3,r0
 1083 00a2 1B7A     	 ldrb r3,[r3,#8]
 1084 00a4 002B     	 cmp r3,#0
 1085 00a6 0ADB     	 blt .L97
 1086 00a8 012B     	 cmp r3,#1
 1087 00aa 01DD     	 ble .L98
 1088 00ac 0A2B     	 cmp r3,#10
 1089 00ae 06D1     	 bne .L97
 1090              	.L98:
 305:../cleanflight/src/main/fc/fc_init.c ****         case SERIALRX_SPEKTRUM1024:
 306:../cleanflight/src/main/fc/fc_init.c ****         case SERIALRX_SPEKTRUM2048:
 307:../cleanflight/src/main/fc/fc_init.c ****         case SERIALRX_SRXL:
 308:../cleanflight/src/main/fc/fc_init.c ****             // Spektrum satellite binding if enabled on startup.
 309:../cleanflight/src/main/fc/fc_init.c ****             // Must be called before that 100ms sleep so that we don't lose satellite's binding win
 310:../cleanflight/src/main/fc/fc_init.c ****             // The rest of Spektrum initialization will happen later - via spektrumInit()
 311:../cleanflight/src/main/fc/fc_init.c ****             spektrumBind(rxConfigMutable());
 1091              	 .loc 19 311 0
 1092 00b0 FFF7FEFF 	 bl rxConfigMutable
 1093 00b4 0346     	 mov r3,r0
 1094 00b6 1846     	 mov r0,r3
 1095 00b8 FFF7FEFF 	 bl spektrumBind
 312:../cleanflight/src/main/fc/fc_init.c ****             break;
 1096              	 .loc 19 312 0
 1097 00bc 00BF     	 nop
 1098              	.L97:
 313:../cleanflight/src/main/fc/fc_init.c ****         }
 314:../cleanflight/src/main/fc/fc_init.c ****     }
 315:../cleanflight/src/main/fc/fc_init.c **** #endif
 316:../cleanflight/src/main/fc/fc_init.c **** 
 317:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_OVERCLOCK
 318:../cleanflight/src/main/fc/fc_init.c ****     OverclockRebootIfNecessary(systemConfig()->cpu_overclock);
 319:../cleanflight/src/main/fc/fc_init.c **** #endif
 320:../cleanflight/src/main/fc/fc_init.c **** 
 321:../cleanflight/src/main/fc/fc_init.c ****     delay(100);
 1099              	 .loc 19 321 0
 1100 00be 6420     	 movs r0,#100
 1101 00c0 FFF7FEFF 	 bl delay
 322:../cleanflight/src/main/fc/fc_init.c **** 
 323:../cleanflight/src/main/fc/fc_init.c ****     timerInit();  // timer must be initialized before any channel is allocated
 1102              	 .loc 19 323 0
 1103 00c4 FFF7FEFF 	 bl timerInit
 324:../cleanflight/src/main/fc/fc_init.c **** 
 325:../cleanflight/src/main/fc/fc_init.c **** #ifdef BUS_SWITCH_PIN
 326:../cleanflight/src/main/fc/fc_init.c ****     busSwitchInit();
 327:../cleanflight/src/main/fc/fc_init.c **** #endif
 328:../cleanflight/src/main/fc/fc_init.c **** 
 329:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_UART)
 330:../cleanflight/src/main/fc/fc_init.c ****     uartPinConfigure(serialPinConfig());
 1104              	 .loc 19 330 0
 1105 00c8 FFF7FEFF 	 bl serialPinConfig
 1106 00cc 0346     	 mov r3,r0
 1107 00ce 1846     	 mov r0,r3
 1108 00d0 FFF7FEFF 	 bl uartPinConfigure
 331:../cleanflight/src/main/fc/fc_init.c **** #endif
 332:../cleanflight/src/main/fc/fc_init.c **** 
 333:../cleanflight/src/main/fc/fc_init.c **** #if defined(AVOID_UART1_FOR_PWM_PPM)
 334:../cleanflight/src/main/fc/fc_init.c ****     serialInit(feature(FEATURE_SOFTSERIAL),
 335:../cleanflight/src/main/fc/fc_init.c ****             feature(FEATURE_RX_PPM) || feature(FEATURE_RX_PARALLEL_PWM) ? SERIAL_PORT_USART1 : SERI
 336:../cleanflight/src/main/fc/fc_init.c **** #elif defined(AVOID_UART2_FOR_PWM_PPM)
 337:../cleanflight/src/main/fc/fc_init.c ****     serialInit(feature(FEATURE_SOFTSERIAL),
 338:../cleanflight/src/main/fc/fc_init.c ****             feature(FEATURE_RX_PPM) || feature(FEATURE_RX_PARALLEL_PWM) ? SERIAL_PORT_USART2 : SERI
 339:../cleanflight/src/main/fc/fc_init.c **** #elif defined(AVOID_UART3_FOR_PWM_PPM)
 340:../cleanflight/src/main/fc/fc_init.c ****     serialInit(feature(FEATURE_SOFTSERIAL),
 341:../cleanflight/src/main/fc/fc_init.c ****             feature(FEATURE_RX_PPM) || feature(FEATURE_RX_PARALLEL_PWM) ? SERIAL_PORT_USART3 : SERI
 342:../cleanflight/src/main/fc/fc_init.c **** #else
 343:../cleanflight/src/main/fc/fc_init.c ****     serialInit(feature(FEATURE_SOFTSERIAL), SERIAL_PORT_NONE);
 1109              	 .loc 19 343 0
 1110 00d4 4020     	 movs r0,#64
 1111 00d6 FFF7FEFF 	 bl feature
 1112 00da 0346     	 mov r3,r0
 1113 00dc 1846     	 mov r0,r3
 1114 00de 4FF0FF31 	 mov r1,#-1
 1115 00e2 FFF7FEFF 	 bl serialInit
 344:../cleanflight/src/main/fc/fc_init.c **** #endif
 345:../cleanflight/src/main/fc/fc_init.c **** 
 346:../cleanflight/src/main/fc/fc_init.c ****     mixerInit(mixerConfig()->mixerMode);
 1116              	 .loc 19 346 0
 1117 00e6 FFF7FEFF 	 bl mixerConfig
 1118 00ea 0346     	 mov r3,r0
 1119 00ec 1B78     	 ldrb r3,[r3]
 1120 00ee 1846     	 mov r0,r3
 1121 00f0 FFF7FEFF 	 bl mixerInit
 347:../cleanflight/src/main/fc/fc_init.c ****     mixerConfigureOutput();
 1122              	 .loc 19 347 0
 1123 00f4 FFF7FEFF 	 bl mixerConfigureOutput
 348:../cleanflight/src/main/fc/fc_init.c **** 
 349:../cleanflight/src/main/fc/fc_init.c ****     uint16_t idlePulse = motorConfig()->mincommand;
 1124              	 .loc 19 349 0
 1125 00f8 FFF7FEFF 	 bl motorConfig
 1126 00fc 0346     	 mov r3,r0
 1127 00fe 1A7D     	 ldrb r2,[r3,#20]
 1128 0100 5B7D     	 ldrb r3,[r3,#21]
 1129 0102 1B02     	 lsls r3,r3,#8
 1130 0104 1343     	 orrs r3,r3,r2
 1131 0106 FB81     	 strh r3,[r7,#14]
 350:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_3D)) {
 1132              	 .loc 19 350 0
 1133 0108 4FF48050 	 mov r0,#4096
 1134 010c FFF7FEFF 	 bl feature
 1135 0110 0346     	 mov r3,r0
 1136 0112 002B     	 cmp r3,#0
 1137 0114 07D0     	 beq .L99
 351:../cleanflight/src/main/fc/fc_init.c ****         idlePulse = flight3DConfig()->neutral3d;
 1138              	 .loc 19 351 0
 1139 0116 FFF7FEFF 	 bl flight3DConfig
 1140 011a 0346     	 mov r3,r0
 1141 011c 1A79     	 ldrb r2,[r3,#4]
 1142 011e 5B79     	 ldrb r3,[r3,#5]
 1143 0120 1B02     	 lsls r3,r3,#8
 1144 0122 1343     	 orrs r3,r3,r2
 1145 0124 FB81     	 strh r3,[r7,#14]
 1146              	.L99:
 352:../cleanflight/src/main/fc/fc_init.c ****     }
 353:../cleanflight/src/main/fc/fc_init.c ****     if (motorConfig()->dev.motorPwmProtocol == PWM_TYPE_BRUSHED) {
 1147              	 .loc 19 353 0
 1148 0126 FFF7FEFF 	 bl motorConfig
 1149 012a 0346     	 mov r3,r0
 1150 012c 9B78     	 ldrb r3,[r3,#2]
 1151 012e 042B     	 cmp r3,#4
 1152 0130 01D1     	 bne .L100
 354:../cleanflight/src/main/fc/fc_init.c ****         idlePulse = 0; // brushed motors
 1153              	 .loc 19 354 0
 1154 0132 0023     	 movs r3,#0
 1155 0134 FB81     	 strh r3,[r7,#14]
 1156              	.L100:
 355:../cleanflight/src/main/fc/fc_init.c ****     }
 356:../cleanflight/src/main/fc/fc_init.c ****     /* Motors needs to be initialized soon as posible because hardware initialization
 357:../cleanflight/src/main/fc/fc_init.c ****      * may send spurious pulses to esc's causing their early initialization. Also ppm
 358:../cleanflight/src/main/fc/fc_init.c ****      * receiver may share timer with motors so motors MUST be initialized here. */
 359:../cleanflight/src/main/fc/fc_init.c ****     motorDevInit(&motorConfig()->dev, idlePulse, getMotorCount());
 1157              	 .loc 19 359 0
 1158 0136 FFF7FEFF 	 bl motorConfig
 1159 013a 0346     	 mov r3,r0
 1160 013c 1C46     	 mov r4,r3
 1161 013e FFF7FEFF 	 bl getMotorCount
 1162 0142 0346     	 mov r3,r0
 1163 0144 1A46     	 mov r2,r3
 1164 0146 FB89     	 ldrh r3,[r7,#14]
 1165 0148 2046     	 mov r0,r4
 1166 014a 1946     	 mov r1,r3
 1167 014c FFF7FEFF 	 bl motorDevInit
 360:../cleanflight/src/main/fc/fc_init.c ****     systemState |= SYSTEM_STATE_MOTORS_READY;
 1168              	 .loc 19 360 0
 1169 0150 894B     	 ldr r3,.L114+4
 1170 0152 1B78     	 ldrb r3,[r3]
 1171 0154 43F00403 	 orr r3,r3,#4
 1172 0158 DAB2     	 uxtb r2,r3
 1173 015a 874B     	 ldr r3,.L114+4
 1174 015c 1A70     	 strb r2,[r3]
 361:../cleanflight/src/main/fc/fc_init.c **** 
 362:../cleanflight/src/main/fc/fc_init.c ****     if (0) {}
 363:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_PPM)
 364:../cleanflight/src/main/fc/fc_init.c ****     else if (feature(FEATURE_RX_PPM)) {
 1175              	 .loc 19 364 0
 1176 015e 0120     	 movs r0,#1
 1177 0160 FFF7FEFF 	 bl feature
 1178 0164 0346     	 mov r3,r0
 1179 0166 002B     	 cmp r3,#0
 1180 0168 06D0     	 beq .L101
 365:../cleanflight/src/main/fc/fc_init.c ****         ppmRxInit(ppmConfig());
 1181              	 .loc 19 365 0
 1182 016a FFF7FEFF 	 bl ppmConfig
 1183 016e 0346     	 mov r3,r0
 1184 0170 1846     	 mov r0,r3
 1185 0172 FFF7FEFF 	 bl ppmRxInit
 1186 0176 0CE0     	 b .L102
 1187              	.L101:
 366:../cleanflight/src/main/fc/fc_init.c ****     }
 367:../cleanflight/src/main/fc/fc_init.c **** #endif
 368:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_PWM)
 369:../cleanflight/src/main/fc/fc_init.c ****     else if (feature(FEATURE_RX_PARALLEL_PWM)) {
 1188              	 .loc 19 369 0
 1189 0178 4FF40050 	 mov r0,#8192
 1190 017c FFF7FEFF 	 bl feature
 1191 0180 0346     	 mov r3,r0
 1192 0182 002B     	 cmp r3,#0
 1193 0184 05D0     	 beq .L102
 370:../cleanflight/src/main/fc/fc_init.c ****         pwmRxInit(pwmConfig());
 1194              	 .loc 19 370 0
 1195 0186 FFF7FEFF 	 bl pwmConfig
 1196 018a 0346     	 mov r3,r0
 1197 018c 1846     	 mov r0,r3
 1198 018e FFF7FEFF 	 bl pwmRxInit
 1199              	.L102:
 371:../cleanflight/src/main/fc/fc_init.c ****     }
 372:../cleanflight/src/main/fc/fc_init.c **** #endif
 373:../cleanflight/src/main/fc/fc_init.c **** 
 374:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_BEEPER
 375:../cleanflight/src/main/fc/fc_init.c ****     beeperInit(beeperDevConfig());
 376:../cleanflight/src/main/fc/fc_init.c **** #endif
 377:../cleanflight/src/main/fc/fc_init.c **** /* temp until PGs are implemented. */
 378:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_INVERTER) && !defined(SIMULATOR_BUILD)
 379:../cleanflight/src/main/fc/fc_init.c ****     initInverters(serialPinConfig());
 380:../cleanflight/src/main/fc/fc_init.c **** #endif
 381:../cleanflight/src/main/fc/fc_init.c **** 
 382:../cleanflight/src/main/fc/fc_init.c **** #ifdef TARGET_BUS_INIT
 383:../cleanflight/src/main/fc/fc_init.c ****     targetBusInit();
 384:../cleanflight/src/main/fc/fc_init.c **** #else
 385:../cleanflight/src/main/fc/fc_init.c **** 
 386:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_SPI
 387:../cleanflight/src/main/fc/fc_init.c ****     spiPinConfigure(spiPinConfig(0));
 1200              	 .loc 19 387 0
 1201 0192 0020     	 movs r0,#0
 1202 0194 FFF7FEFF 	 bl spiPinConfig
 1203 0198 0346     	 mov r3,r0
 1204 019a 1846     	 mov r0,r3
 1205 019c FFF7FEFF 	 bl spiPinConfigure
 388:../cleanflight/src/main/fc/fc_init.c **** 
 389:../cleanflight/src/main/fc/fc_init.c ****     // Initialize CS lines and keep them high
 390:../cleanflight/src/main/fc/fc_init.c ****     spiPreInit();
 1206              	 .loc 19 390 0
 1207 01a0 FFF7FEFF 	 bl spiPreInit
 391:../cleanflight/src/main/fc/fc_init.c **** 
 392:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_SPI_DEVICE_1) | defined(USE_SPIS_DEVICE_1)
 393:../cleanflight/src/main/fc/fc_init.c ****     spiInit(SPIDEV_1);
 394:../cleanflight/src/main/fc/fc_init.c **** #endif
 395:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_SPI_DEVICE_2) | defined(USE_SPIS_DEVICE_2)
 396:../cleanflight/src/main/fc/fc_init.c ****     spiInit(SPIDEV_2);
 1208              	 .loc 19 396 0
 1209 01a4 0120     	 movs r0,#1
 1210 01a6 FFF7FEFF 	 bl spiInit
 397:../cleanflight/src/main/fc/fc_init.c **** #endif
 398:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_SPI_DEVICE_3) | defined(USE_SPIS_DEVICE_3)
 399:../cleanflight/src/main/fc/fc_init.c ****     spiInit(SPIDEV_3);
 1211              	 .loc 19 399 0
 1212 01aa 0220     	 movs r0,#2
 1213 01ac FFF7FEFF 	 bl spiInit
 400:../cleanflight/src/main/fc/fc_init.c **** #endif
 401:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_SPI_DEVICE_4) | defined(USE_SPIS_DEVICE_4)
 402:../cleanflight/src/main/fc/fc_init.c ****     spiInit(SPIDEV_4);
 403:../cleanflight/src/main/fc/fc_init.c **** #endif
 404:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_SPI_DEVICE_5) | defined(USE_SPIS_DEVICE_5)
 405:../cleanflight/src/main/fc/fc_init.c ****     spiInit(SPIDEV_5);
 406:../cleanflight/src/main/fc/fc_init.c **** #endif
 407:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_SPI_DEVICE_6) | defined(USE_SPIS_DEVICE_6)
 408:../cleanflight/src/main/fc/fc_init.c ****     spiInit(SPIDEV_6);
 409:../cleanflight/src/main/fc/fc_init.c **** #endif
 410:../cleanflight/src/main/fc/fc_init.c **** #endif // USE_SPI
 411:../cleanflight/src/main/fc/fc_init.c **** 
 412:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_USB_MSC
 413:../cleanflight/src/main/fc/fc_init.c **** /* MSC mode will start after init, but will not allow scheduler to run,
 414:../cleanflight/src/main/fc/fc_init.c ****  *  so there is no bottleneck in reading and writing data */
 415:../cleanflight/src/main/fc/fc_init.c ****     mscInit();
 416:../cleanflight/src/main/fc/fc_init.c ****     if (mscCheckBoot() || mscCheckButton()) {
 417:../cleanflight/src/main/fc/fc_init.c ****         if (mscStart() == 0) {
 418:../cleanflight/src/main/fc/fc_init.c ****              mscWaitForButton();
 419:../cleanflight/src/main/fc/fc_init.c ****         } else {
 420:../cleanflight/src/main/fc/fc_init.c ****              NVIC_SystemReset();
 421:../cleanflight/src/main/fc/fc_init.c ****         }
 422:../cleanflight/src/main/fc/fc_init.c ****     }
 423:../cleanflight/src/main/fc/fc_init.c **** #endif
 424:../cleanflight/src/main/fc/fc_init.c **** 
 425:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_I2C
 426:../cleanflight/src/main/fc/fc_init.c ****     i2cHardwareConfigure(i2cConfig(0));
 1214              	 .loc 19 426 0
 1215 01b0 0020     	 movs r0,#0
 1216 01b2 FFF7FEFF 	 bl i2cConfig
 1217 01b6 0346     	 mov r3,r0
 1218 01b8 1846     	 mov r0,r3
 1219 01ba FFF7FEFF 	 bl i2cHardwareConfigure
 427:../cleanflight/src/main/fc/fc_init.c **** 
 428:../cleanflight/src/main/fc/fc_init.c ****     // Note: Unlike UARTs which are configured when client is present,
 429:../cleanflight/src/main/fc/fc_init.c ****     // I2C buses are initialized unconditionally if they are configured.
 430:../cleanflight/src/main/fc/fc_init.c **** 
 431:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_I2C_DEVICE_1
 432:../cleanflight/src/main/fc/fc_init.c ****     i2cInit(I2CDEV_1);
 433:../cleanflight/src/main/fc/fc_init.c **** #endif
 434:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_I2C_DEVICE_2
 435:../cleanflight/src/main/fc/fc_init.c ****     i2cInit(I2CDEV_2);
 436:../cleanflight/src/main/fc/fc_init.c **** #endif
 437:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_I2C_DEVICE_3
 438:../cleanflight/src/main/fc/fc_init.c ****     i2cInit(I2CDEV_3);
 439:../cleanflight/src/main/fc/fc_init.c **** #endif
 440:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_I2C_DEVICE_4
 441:../cleanflight/src/main/fc/fc_init.c ****     i2cInit(I2CDEV_4);
 442:../cleanflight/src/main/fc/fc_init.c **** #endif
 443:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_I2C_DEVICE_5
 444:../cleanflight/src/main/fc/fc_init.c ****     i2cInit(I2CDEV_5);
 1220              	 .loc 19 444 0
 1221 01be 0420     	 movs r0,#4
 1222 01c0 FFF7FEFF 	 bl i2cInit
 445:../cleanflight/src/main/fc/fc_init.c **** #endif
 446:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_I2C_DEVICE_6
 447:../cleanflight/src/main/fc/fc_init.c ****     i2cInit(I2CDEV_6);
 448:../cleanflight/src/main/fc/fc_init.c **** #endif
 449:../cleanflight/src/main/fc/fc_init.c **** #endif // USE_I2C
 450:../cleanflight/src/main/fc/fc_init.c **** 
 451:../cleanflight/src/main/fc/fc_init.c **** #endif // TARGET_BUS_INIT
 452:../cleanflight/src/main/fc/fc_init.c **** 
 453:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_HARDWARE_REVISION_DETECTION
 454:../cleanflight/src/main/fc/fc_init.c ****     updateHardwareRevision();
 455:../cleanflight/src/main/fc/fc_init.c **** #endif
 456:../cleanflight/src/main/fc/fc_init.c **** 
 457:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_VTX_RTC6705
 458:../cleanflight/src/main/fc/fc_init.c ****     rtc6705IOInit();
 459:../cleanflight/src/main/fc/fc_init.c **** #endif
 460:../cleanflight/src/main/fc/fc_init.c **** 
 461:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_CAMERA_CONTROL
 462:../cleanflight/src/main/fc/fc_init.c ****     cameraControlInit();
 463:../cleanflight/src/main/fc/fc_init.c **** #endif
 464:../cleanflight/src/main/fc/fc_init.c **** 
 465:../cleanflight/src/main/fc/fc_init.c **** // XXX These kind of code should goto target/config.c?
 466:../cleanflight/src/main/fc/fc_init.c **** // XXX And these no longer work properly as FEATURE_RANGEFINDER does control HCSR04 runtime configu
 467:../cleanflight/src/main/fc/fc_init.c **** #if defined(RANGEFINDER_HCSR04_SOFTSERIAL2_EXCLUSIVE) && defined(USE_RANGEFINDER_HCSR04) && defined
 468:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_RANGEFINDER) && feature(FEATURE_SOFTSERIAL)) {
 469:../cleanflight/src/main/fc/fc_init.c ****         serialRemovePort(SERIAL_PORT_SOFTSERIAL2);
 470:../cleanflight/src/main/fc/fc_init.c ****     }
 471:../cleanflight/src/main/fc/fc_init.c **** #endif
 472:../cleanflight/src/main/fc/fc_init.c **** 
 473:../cleanflight/src/main/fc/fc_init.c **** #if defined(RANGEFINDER_HCSR04_SOFTSERIAL1_EXCLUSIVE) && defined(USE_RANGEFINDER_HCSR04) && defined
 474:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_RANGEFINDER) && feature(FEATURE_SOFTSERIAL)) {
 475:../cleanflight/src/main/fc/fc_init.c ****         serialRemovePort(SERIAL_PORT_SOFTSERIAL1);
 476:../cleanflight/src/main/fc/fc_init.c ****     }
 477:../cleanflight/src/main/fc/fc_init.c **** #endif
 478:../cleanflight/src/main/fc/fc_init.c **** 
 479:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_ADC
 480:../cleanflight/src/main/fc/fc_init.c ****     adcConfigMutable()->vbat.enabled = (batteryConfig()->voltageMeterSource == VOLTAGE_METER_ADC);
 1223              	 .loc 19 480 0
 1224 01c4 FFF7FEFF 	 bl adcConfigMutable
 1225 01c8 0446     	 mov r4,r0
 1226 01ca FFF7FEFF 	 bl batteryConfig
 1227 01ce 0346     	 mov r3,r0
 1228 01d0 5B79     	 ldrb r3,[r3,#5]
 1229 01d2 012B     	 cmp r3,#1
 1230 01d4 0CBF     	 ite eq
 1231 01d6 0123     	 moveq r3,#1
 1232 01d8 0023     	 movne r3,#0
 1233 01da DBB2     	 uxtb r3,r3
 1234 01dc 2370     	 strb r3,[r4]
 481:../cleanflight/src/main/fc/fc_init.c ****     adcConfigMutable()->current.enabled = (batteryConfig()->currentMeterSource == CURRENT_METER_ADC
 1235              	 .loc 19 481 0
 1236 01de FFF7FEFF 	 bl adcConfigMutable
 1237 01e2 0446     	 mov r4,r0
 1238 01e4 FFF7FEFF 	 bl batteryConfig
 1239 01e8 0346     	 mov r3,r0
 1240 01ea 9B79     	 ldrb r3,[r3,#6]
 1241 01ec 012B     	 cmp r3,#1
 1242 01ee 0CBF     	 ite eq
 1243 01f0 0123     	 moveq r3,#1
 1244 01f2 0023     	 movne r3,#0
 1245 01f4 DBB2     	 uxtb r3,r3
 1246 01f6 2371     	 strb r3,[r4,#4]
 482:../cleanflight/src/main/fc/fc_init.c **** 
 483:../cleanflight/src/main/fc/fc_init.c ****     // The FrSky D SPI RX sends RSSI_ADC_PIN (if configured) as A2
 484:../cleanflight/src/main/fc/fc_init.c ****     adcConfigMutable()->rssi.enabled = feature(FEATURE_RSSI_ADC);
 1247              	 .loc 19 484 0
 1248 01f8 FFF7FEFF 	 bl adcConfigMutable
 1249 01fc 0446     	 mov r4,r0
 1250 01fe 4FF40040 	 mov r0,#32768
 1251 0202 FFF7FEFF 	 bl feature
 1252 0206 0346     	 mov r3,r0
 1253 0208 A370     	 strb r3,[r4,#2]
 485:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_RX_SPI
 486:../cleanflight/src/main/fc/fc_init.c ****     adcConfigMutable()->rssi.enabled |= (feature(FEATURE_RX_SPI) && rxSpiConfig()->rx_spi_protocol 
 487:../cleanflight/src/main/fc/fc_init.c **** #endif
 488:../cleanflight/src/main/fc/fc_init.c ****     adcInit(adcConfig());
 1254              	 .loc 19 488 0
 1255 020a FFF7FEFF 	 bl adcConfig
 1256 020e 0346     	 mov r3,r0
 1257 0210 1846     	 mov r0,r3
 1258 0212 FFF7FEFF 	 bl adcInit
 489:../cleanflight/src/main/fc/fc_init.c **** #endif
 490:../cleanflight/src/main/fc/fc_init.c **** 
 491:../cleanflight/src/main/fc/fc_init.c ****     initBoardAlignment(boardAlignment());
 1259              	 .loc 19 491 0
 1260 0216 FFF7FEFF 	 bl boardAlignment
 1261 021a 0346     	 mov r3,r0
 1262 021c 1846     	 mov r0,r3
 1263 021e FFF7FEFF 	 bl initBoardAlignment
 492:../cleanflight/src/main/fc/fc_init.c **** 
 493:../cleanflight/src/main/fc/fc_init.c ****     if (!sensorsAutodetect()) {
 1264              	 .loc 19 493 0
 1265 0222 FFF7FEFF 	 bl sensorsAutodetect
 1266 0226 0346     	 mov r3,r0
 1267 0228 83F00103 	 eor r3,r3,#1
 1268 022c DBB2     	 uxtb r3,r3
 1269 022e 002B     	 cmp r3,#0
 1270 0230 06D0     	 beq .L103
 494:../cleanflight/src/main/fc/fc_init.c ****         // if gyro was not detected due to whatever reason, notify and don't arm.
 495:../cleanflight/src/main/fc/fc_init.c ****         indicateFailure(FAILURE_MISSING_ACC, 2);
 1271              	 .loc 19 495 0
 1272 0232 0120     	 movs r0,#1
 1273 0234 0221     	 movs r1,#2
 1274 0236 FFF7FEFF 	 bl indicateFailure
 496:../cleanflight/src/main/fc/fc_init.c ****         setArmingDisabled(ARMING_DISABLED_NO_GYRO);
 1275              	 .loc 19 496 0
 1276 023a 0120     	 movs r0,#1
 1277 023c FFF7FEFF 	 bl setArmingDisabled
 1278              	.L103:
 497:../cleanflight/src/main/fc/fc_init.c ****     }
 498:../cleanflight/src/main/fc/fc_init.c **** 
 499:../cleanflight/src/main/fc/fc_init.c ****     systemState |= SYSTEM_STATE_SENSORS_READY;
 1279              	 .loc 19 499 0
 1280 0240 4D4B     	 ldr r3,.L114+4
 1281 0242 1B78     	 ldrb r3,[r3]
 1282 0244 43F00203 	 orr r3,r3,#2
 1283 0248 DAB2     	 uxtb r2,r3
 1284 024a 4B4B     	 ldr r3,.L114+4
 1285 024c 1A70     	 strb r2,[r3]
 500:../cleanflight/src/main/fc/fc_init.c **** 
 501:../cleanflight/src/main/fc/fc_init.c ****     // gyro.targetLooptime set in sensorsAutodetect(),
 502:../cleanflight/src/main/fc/fc_init.c ****     // so we are ready to call validateAndFixGyroConfig(), pidInit(), and setAccelerationFilter()
 503:../cleanflight/src/main/fc/fc_init.c ****     validateAndFixGyroConfig();
 1286              	 .loc 19 503 0
 1287 024e FFF7FEFF 	 bl validateAndFixGyroConfig
 504:../cleanflight/src/main/fc/fc_init.c ****     pidInit(currentPidProfile);
 1288              	 .loc 19 504 0
 1289 0252 4B4B     	 ldr r3,.L114+12
 1290 0254 1B68     	 ldr r3,[r3]
 1291 0256 1846     	 mov r0,r3
 1292 0258 FFF7FEFF 	 bl pidInit
 505:../cleanflight/src/main/fc/fc_init.c ****     accInitFilters();
 1293              	 .loc 19 505 0
 1294 025c FFF7FEFF 	 bl accInitFilters
 506:../cleanflight/src/main/fc/fc_init.c **** 
 507:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_PID_AUDIO
 508:../cleanflight/src/main/fc/fc_init.c ****     pidAudioInit();
 509:../cleanflight/src/main/fc/fc_init.c **** #endif
 510:../cleanflight/src/main/fc/fc_init.c **** 
 511:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_SERVOS
 512:../cleanflight/src/main/fc/fc_init.c ****     servosInit();
 1295              	 .loc 19 512 0
 1296 0260 FFF7FEFF 	 bl servosInit
 513:../cleanflight/src/main/fc/fc_init.c ****     servoConfigureOutput();
 1297              	 .loc 19 513 0
 1298 0264 FFF7FEFF 	 bl servoConfigureOutput
 514:../cleanflight/src/main/fc/fc_init.c ****     if (isMixerUsingServos()) {
 1299              	 .loc 19 514 0
 1300 0268 FFF7FEFF 	 bl isMixerUsingServos
 1301 026c 0346     	 mov r3,r0
 1302 026e 002B     	 cmp r3,#0
 1303 0270 05D0     	 beq .L104
 515:../cleanflight/src/main/fc/fc_init.c ****         //pwm_params.useChannelForwarding = feature(FEATURE_CHANNEL_FORWARDING);
 516:../cleanflight/src/main/fc/fc_init.c ****         servoDevInit(&servoConfig()->dev);
 1304              	 .loc 19 516 0
 1305 0272 FFF7FEFF 	 bl servoConfig
 1306 0276 0346     	 mov r3,r0
 1307 0278 1846     	 mov r0,r3
 1308 027a FFF7FEFF 	 bl servoDevInit
 1309              	.L104:
 517:../cleanflight/src/main/fc/fc_init.c ****     }
 518:../cleanflight/src/main/fc/fc_init.c ****     servosFilterInit();
 1310              	 .loc 19 518 0
 1311 027e FFF7FEFF 	 bl servosFilterInit
 519:../cleanflight/src/main/fc/fc_init.c **** #endif
 520:../cleanflight/src/main/fc/fc_init.c **** 
 521:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_PINIO
 522:../cleanflight/src/main/fc/fc_init.c ****     pinioInit(pinioConfig());
 1312              	 .loc 19 522 0
 1313 0282 FFF7FEFF 	 bl pinioConfig
 1314 0286 0346     	 mov r3,r0
 1315 0288 1846     	 mov r0,r3
 1316 028a FFF7FEFF 	 bl pinioInit
 523:../cleanflight/src/main/fc/fc_init.c **** #endif
 524:../cleanflight/src/main/fc/fc_init.c **** 
 525:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_PINIOBOX
 526:../cleanflight/src/main/fc/fc_init.c ****     pinioBoxInit(pinioBoxConfig());
 1317              	 .loc 19 526 0
 1318 028e FFF7FEFF 	 bl pinioBoxConfig
 1319 0292 0346     	 mov r3,r0
 1320 0294 1846     	 mov r0,r3
 1321 0296 FFF7FEFF 	 bl pinioBoxInit
 527:../cleanflight/src/main/fc/fc_init.c **** #endif
 528:../cleanflight/src/main/fc/fc_init.c **** 
 529:../cleanflight/src/main/fc/fc_init.c ****     LED1_ON;
 1322              	 .loc 19 529 0
 1323 029a 0120     	 movs r0,#1
 1324 029c 0121     	 movs r1,#1
 1325 029e FFF7FEFF 	 bl ledSet
 530:../cleanflight/src/main/fc/fc_init.c ****     LED0_OFF;
 1326              	 .loc 19 530 0
 1327 02a2 0020     	 movs r0,#0
 1328 02a4 0021     	 movs r1,#0
 1329 02a6 FFF7FEFF 	 bl ledSet
 531:../cleanflight/src/main/fc/fc_init.c ****     LED2_OFF;
 1330              	 .loc 19 531 0
 1331 02aa 0220     	 movs r0,#2
 1332 02ac 0021     	 movs r1,#0
 1333 02ae FFF7FEFF 	 bl ledSet
 1334              	.LBB2:
 532:../cleanflight/src/main/fc/fc_init.c **** 
 533:../cleanflight/src/main/fc/fc_init.c ****     for (int i = 0; i < 10; i++) {
 1335              	 .loc 19 533 0
 1336 02b2 0023     	 movs r3,#0
 1337 02b4 BB60     	 str r3,[r7,#8]
 1338 02b6 0BE0     	 b .L105
 1339              	.L106:
 534:../cleanflight/src/main/fc/fc_init.c ****         LED1_TOGGLE;
 1340              	 .loc 19 534 0 discriminator 3
 1341 02b8 0120     	 movs r0,#1
 1342 02ba FFF7FEFF 	 bl ledToggle
 535:../cleanflight/src/main/fc/fc_init.c ****         LED0_TOGGLE;
 1343              	 .loc 19 535 0 discriminator 3
 1344 02be 0020     	 movs r0,#0
 1345 02c0 FFF7FEFF 	 bl ledToggle
 536:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_BEEPER)
 537:../cleanflight/src/main/fc/fc_init.c ****         delay(25);
 538:../cleanflight/src/main/fc/fc_init.c ****         if (!(beeperConfig()->beeper_off_flags & BEEPER_GET_FLAG(BEEPER_SYSTEM_INIT))) {
 539:../cleanflight/src/main/fc/fc_init.c ****             BEEP_ON;
 540:../cleanflight/src/main/fc/fc_init.c ****         }
 541:../cleanflight/src/main/fc/fc_init.c ****         delay(25);
 542:../cleanflight/src/main/fc/fc_init.c ****         BEEP_OFF;
 543:../cleanflight/src/main/fc/fc_init.c **** #else
 544:../cleanflight/src/main/fc/fc_init.c ****         delay(50);
 1346              	 .loc 19 544 0 discriminator 3
 1347 02c4 3220     	 movs r0,#50
 1348 02c6 FFF7FEFF 	 bl delay
 533:../cleanflight/src/main/fc/fc_init.c ****         LED1_TOGGLE;
 1349              	 .loc 19 533 0 discriminator 3
 1350 02ca BB68     	 ldr r3,[r7,#8]
 1351 02cc 0133     	 adds r3,r3,#1
 1352 02ce BB60     	 str r3,[r7,#8]
 1353              	.L105:
 533:../cleanflight/src/main/fc/fc_init.c ****         LED1_TOGGLE;
 1354              	 .loc 19 533 0 is_stmt 0 discriminator 1
 1355 02d0 BB68     	 ldr r3,[r7,#8]
 1356 02d2 092B     	 cmp r3,#9
 1357 02d4 F0DD     	 ble .L106
 1358              	.LBE2:
 545:../cleanflight/src/main/fc/fc_init.c **** #endif
 546:../cleanflight/src/main/fc/fc_init.c ****     }
 547:../cleanflight/src/main/fc/fc_init.c ****     LED0_OFF;
 1359              	 .loc 19 547 0 is_stmt 1
 1360 02d6 0020     	 movs r0,#0
 1361 02d8 0021     	 movs r1,#0
 1362 02da FFF7FEFF 	 bl ledSet
 548:../cleanflight/src/main/fc/fc_init.c ****     LED1_OFF;
 1363              	 .loc 19 548 0
 1364 02de 0120     	 movs r0,#1
 1365 02e0 0021     	 movs r1,#0
 1366 02e2 FFF7FEFF 	 bl ledSet
 549:../cleanflight/src/main/fc/fc_init.c **** 
 550:../cleanflight/src/main/fc/fc_init.c ****     imuInit();
 1367              	 .loc 19 550 0
 1368 02e6 FFF7FEFF 	 bl imuInit
 551:../cleanflight/src/main/fc/fc_init.c **** 
 552:../cleanflight/src/main/fc/fc_init.c ****     mspInit();
 1369              	 .loc 19 552 0
 1370 02ea FFF7FEFF 	 bl mspInit
 553:../cleanflight/src/main/fc/fc_init.c ****     mspSerialInit();
 1371              	 .loc 19 553 0
 1372 02ee FFF7FEFF 	 bl mspSerialInit
 554:../cleanflight/src/main/fc/fc_init.c **** 
 555:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_CLI
 556:../cleanflight/src/main/fc/fc_init.c ****     cliInit(serialConfig());
 1373              	 .loc 19 556 0
 1374 02f2 FFF7FEFF 	 bl serialConfig
 1375 02f6 0346     	 mov r3,r0
 1376 02f8 1846     	 mov r0,r3
 1377 02fa FFF7FEFF 	 bl cliInit
 557:../cleanflight/src/main/fc/fc_init.c **** #endif
 558:../cleanflight/src/main/fc/fc_init.c **** 
 559:../cleanflight/src/main/fc/fc_init.c ****     failsafeInit();
 1378              	 .loc 19 559 0
 1379 02fe FFF7FEFF 	 bl failsafeInit
 560:../cleanflight/src/main/fc/fc_init.c **** 
 561:../cleanflight/src/main/fc/fc_init.c ****     rxInit();
 1380              	 .loc 19 561 0
 1381 0302 FFF7FEFF 	 bl rxInit
 562:../cleanflight/src/main/fc/fc_init.c **** 
 563:../cleanflight/src/main/fc/fc_init.c **** /*
 564:../cleanflight/src/main/fc/fc_init.c ****  * CMS, display devices and OSD
 565:../cleanflight/src/main/fc/fc_init.c ****  */
 566:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_CMS
 567:../cleanflight/src/main/fc/fc_init.c ****     cmsInit();
 1382              	 .loc 19 567 0
 1383 0306 FFF7FEFF 	 bl cmsInit
 568:../cleanflight/src/main/fc/fc_init.c **** #endif
 569:../cleanflight/src/main/fc/fc_init.c **** 
 570:../cleanflight/src/main/fc/fc_init.c **** #if (defined(USE_OSD) || (defined(USE_MSP_DISPLAYPORT) && defined(USE_CMS)) || defined(USE_OSD_SLAV
 571:../cleanflight/src/main/fc/fc_init.c ****     displayPort_t *osdDisplayPort = NULL;
 1384              	 .loc 19 571 0
 1385 030a 0023     	 movs r3,#0
 1386 030c 3B60     	 str r3,[r7]
 572:../cleanflight/src/main/fc/fc_init.c **** #endif
 573:../cleanflight/src/main/fc/fc_init.c **** 
 574:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_OSD) && !defined(USE_OSD_SLAVE)
 575:../cleanflight/src/main/fc/fc_init.c ****     //The OSD need to be initialised after GYRO to avoid GYRO initialisation failure on some target
 576:../cleanflight/src/main/fc/fc_init.c **** 
 577:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_OSD)) {
 1387              	 .loc 19 577 0
 1388 030e 4FF48020 	 mov r0,#262144
 1389 0312 FFF7FEFF 	 bl feature
 1390 0316 0346     	 mov r3,r0
 1391 0318 002B     	 cmp r3,#0
 1392 031a 02D0     	 beq .L107
 578:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_MAX7456)
 579:../cleanflight/src/main/fc/fc_init.c ****         // If there is a max7456 chip for the OSD then use it
 580:../cleanflight/src/main/fc/fc_init.c ****         osdDisplayPort = max7456DisplayPortInit(vcdProfile());
 581:../cleanflight/src/main/fc/fc_init.c **** #elif defined(USE_CMS) && defined(USE_MSP_DISPLAYPORT) && defined(USE_OSD_OVER_MSP_DISPLAYPORT) // 
 582:../cleanflight/src/main/fc/fc_init.c ****         osdDisplayPort = displayPortMspInit();
 583:../cleanflight/src/main/fc/fc_init.c **** #endif
 584:../cleanflight/src/main/fc/fc_init.c ****         // osdInit  will register with CMS by itself.
 585:../cleanflight/src/main/fc/fc_init.c ****         osdInit(osdDisplayPort);
 1393              	 .loc 19 585 0
 1394 031c 3868     	 ldr r0,[r7]
 1395 031e FFF7FEFF 	 bl osdInit
 1396              	.L107:
 586:../cleanflight/src/main/fc/fc_init.c ****     }
 587:../cleanflight/src/main/fc/fc_init.c **** #endif
 588:../cleanflight/src/main/fc/fc_init.c **** 
 589:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_OSD_SLAVE) && !defined(USE_OSD)
 590:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_MAX7456)
 591:../cleanflight/src/main/fc/fc_init.c ****     // If there is a max7456 chip for the OSD then use it
 592:../cleanflight/src/main/fc/fc_init.c ****     osdDisplayPort = max7456DisplayPortInit(vcdProfile());
 593:../cleanflight/src/main/fc/fc_init.c ****     // osdInit  will register with CMS by itself.
 594:../cleanflight/src/main/fc/fc_init.c ****     osdSlaveInit(osdDisplayPort);
 595:../cleanflight/src/main/fc/fc_init.c **** #endif
 596:../cleanflight/src/main/fc/fc_init.c **** #endif
 597:../cleanflight/src/main/fc/fc_init.c **** 
 598:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_CMS) && defined(USE_MSP_DISPLAYPORT)
 599:../cleanflight/src/main/fc/fc_init.c ****     // If BFOSD is not active, then register MSP_DISPLAYPORT as a CMS device.
 600:../cleanflight/src/main/fc/fc_init.c ****     if (!osdDisplayPort)
 601:../cleanflight/src/main/fc/fc_init.c ****         cmsDisplayPortRegister(displayPortMspInit());
 602:../cleanflight/src/main/fc/fc_init.c **** #endif
 603:../cleanflight/src/main/fc/fc_init.c **** 
 604:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_DASHBOARD
 605:../cleanflight/src/main/fc/fc_init.c ****     // Dashbord will register with CMS by itself.
 606:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_DASHBOARD)) {
 1397              	 .loc 19 606 0
 1398 0322 4FF40030 	 mov r0,#131072
 1399 0326 FFF7FEFF 	 bl feature
 1400 032a 0346     	 mov r3,r0
 1401 032c 002B     	 cmp r3,#0
 1402 032e 01D0     	 beq .L108
 607:../cleanflight/src/main/fc/fc_init.c ****         dashboardInit();
 1403              	 .loc 19 607 0
 1404 0330 FFF7FEFF 	 bl dashboardInit
 1405              	.L108:
 608:../cleanflight/src/main/fc/fc_init.c ****     }
 609:../cleanflight/src/main/fc/fc_init.c **** #endif
 610:../cleanflight/src/main/fc/fc_init.c **** 
 611:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_CMS) && defined(USE_SPEKTRUM_CMS_TELEMETRY) && defined(USE_TELEMETRY_SRXL)
 612:../cleanflight/src/main/fc/fc_init.c ****     // Register the srxl Textgen telemetry sensor as a displayport device
 613:../cleanflight/src/main/fc/fc_init.c ****     cmsDisplayPortRegister(displayPortSrxlInit());
 614:../cleanflight/src/main/fc/fc_init.c **** #endif
 615:../cleanflight/src/main/fc/fc_init.c **** 
 616:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_GPS
 617:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_GPS)) {
 1406              	 .loc 19 617 0
 1407 0334 8020     	 movs r0,#128
 1408 0336 FFF7FEFF 	 bl feature
 1409 033a 0346     	 mov r3,r0
 1410 033c 002B     	 cmp r3,#0
 1411 033e 01D0     	 beq .L109
 618:../cleanflight/src/main/fc/fc_init.c ****         gpsInit();
 1412              	 .loc 19 618 0
 1413 0340 FFF7FEFF 	 bl gpsInit
 1414              	.L109:
 619:../cleanflight/src/main/fc/fc_init.c ****     }
 620:../cleanflight/src/main/fc/fc_init.c **** #endif
 621:../cleanflight/src/main/fc/fc_init.c **** 
 622:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_LED_STRIP
 623:../cleanflight/src/main/fc/fc_init.c ****     ledStripInit();
 624:../cleanflight/src/main/fc/fc_init.c **** 
 625:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_LED_STRIP)) {
 626:../cleanflight/src/main/fc/fc_init.c ****         ledStripEnable();
 627:../cleanflight/src/main/fc/fc_init.c ****     }
 628:../cleanflight/src/main/fc/fc_init.c **** #endif
 629:../cleanflight/src/main/fc/fc_init.c **** 
 630:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_TELEMETRY
 631:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_TELEMETRY)) {
 632:../cleanflight/src/main/fc/fc_init.c ****         telemetryInit();
 633:../cleanflight/src/main/fc/fc_init.c ****     }
 634:../cleanflight/src/main/fc/fc_init.c **** #endif
 635:../cleanflight/src/main/fc/fc_init.c **** 
 636:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_ESC_SENSOR
 637:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_ESC_SENSOR)) {
 638:../cleanflight/src/main/fc/fc_init.c ****         escSensorInit();
 639:../cleanflight/src/main/fc/fc_init.c ****     }
 640:../cleanflight/src/main/fc/fc_init.c **** #endif
 641:../cleanflight/src/main/fc/fc_init.c **** 
 642:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_USB_DETECT
 643:../cleanflight/src/main/fc/fc_init.c ****     usbCableDetectInit();
 644:../cleanflight/src/main/fc/fc_init.c **** #endif
 645:../cleanflight/src/main/fc/fc_init.c **** 
 646:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_TRANSPONDER
 647:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_TRANSPONDER)) {
 648:../cleanflight/src/main/fc/fc_init.c ****         transponderInit();
 649:../cleanflight/src/main/fc/fc_init.c ****         transponderStartRepeating();
 650:../cleanflight/src/main/fc/fc_init.c ****         systemState |= SYSTEM_STATE_TRANSPONDER_ENABLED;
 651:../cleanflight/src/main/fc/fc_init.c ****     }
 652:../cleanflight/src/main/fc/fc_init.c **** #endif
 653:../cleanflight/src/main/fc/fc_init.c **** 
 654:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_FLASHFS
 655:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_FLASH)
 656:../cleanflight/src/main/fc/fc_init.c ****     flashInit(flashConfig());
 657:../cleanflight/src/main/fc/fc_init.c **** #endif
 658:../cleanflight/src/main/fc/fc_init.c ****     flashfsInit();
 659:../cleanflight/src/main/fc/fc_init.c **** #endif
 660:../cleanflight/src/main/fc/fc_init.c **** 
 661:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_SDCARD
 662:../cleanflight/src/main/fc/fc_init.c ****     if (blackboxConfig()->device == BLACKBOX_DEVICE_SDCARD) {
 1415              	 .loc 19 662 0
 1416 0344 FFF7FEFF 	 bl blackboxConfig
 1417 0348 0346     	 mov r3,r0
 1418 034a 9B78     	 ldrb r3,[r3,#2]
 1419 034c 022B     	 cmp r3,#2
 1420 034e 1ED1     	 bne .L110
 663:../cleanflight/src/main/fc/fc_init.c ****         if (sdcardConfig()->enabled) {
 1421              	 .loc 19 663 0
 1422 0350 FFF7FEFF 	 bl sdcardConfig
 1423 0354 0346     	 mov r3,r0
 1424 0356 5B78     	 ldrb r3,[r3,#1]
 1425 0358 002B     	 cmp r3,#0
 1426 035a 13D0     	 beq .L111
 664:../cleanflight/src/main/fc/fc_init.c ****             sdcardInsertionDetectInit();
 1427              	 .loc 19 664 0
 1428 035c FFF7FEFF 	 bl sdcardInsertionDetectInit
 665:../cleanflight/src/main/fc/fc_init.c ****             sdcard_init(sdcardConfig());
 1429              	 .loc 19 665 0
 1430 0360 FFF7FEFF 	 bl sdcardConfig
 1431 0364 0346     	 mov r3,r0
 1432 0366 1846     	 mov r0,r3
 1433 0368 FFF7FEFF 	 bl sdcard_init
 666:../cleanflight/src/main/fc/fc_init.c ****             afatfs_init();
 1434              	 .loc 19 666 0
 1435 036c FFF7FEFF 	 bl afatfs_init
 1436 0370 0DE0     	 b .L110
 1437              	.L115:
 1438 0372 00BF     	 .align 2
 1439              	.L114:
 1440 0374 00000000 	 .word .LC0
 1441 0378 00000000 	 .word systemState
 1442 037c 00000000 	 .word debugMode
 1443 0380 00000000 	 .word currentPidProfile
 1444              	.L111:
 667:../cleanflight/src/main/fc/fc_init.c ****         } else {
 668:../cleanflight/src/main/fc/fc_init.c ****             blackboxConfigMutable()->device = BLACKBOX_DEVICE_NONE;
 1445              	 .loc 19 668 0
 1446 0384 FFF7FEFF 	 bl blackboxConfigMutable
 1447 0388 0346     	 mov r3,r0
 1448 038a 0022     	 movs r2,#0
 1449 038c 9A70     	 strb r2,[r3,#2]
 1450              	.L110:
 669:../cleanflight/src/main/fc/fc_init.c ****         }
 670:../cleanflight/src/main/fc/fc_init.c ****     }
 671:../cleanflight/src/main/fc/fc_init.c **** #endif
 672:../cleanflight/src/main/fc/fc_init.c **** 
 673:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_BLACKBOX
 674:../cleanflight/src/main/fc/fc_init.c ****     blackboxInit();
 1451              	 .loc 19 674 0
 1452 038e FFF7FEFF 	 bl blackboxInit
 675:../cleanflight/src/main/fc/fc_init.c **** #endif
 676:../cleanflight/src/main/fc/fc_init.c **** 
 677:../cleanflight/src/main/fc/fc_init.c ****     if (mixerConfig()->mixerMode == MIXER_GIMBAL) {
 1453              	 .loc 19 677 0
 1454 0392 FFF7FEFF 	 bl mixerConfig
 1455 0396 0346     	 mov r3,r0
 1456 0398 1B78     	 ldrb r3,[r3]
 1457 039a 052B     	 cmp r3,#5
 1458 039c 03D1     	 bne .L112
 678:../cleanflight/src/main/fc/fc_init.c ****         accSetCalibrationCycles(CALIBRATING_ACC_CYCLES);
 1459              	 .loc 19 678 0
 1460 039e 4FF4C870 	 mov r0,#400
 1461 03a2 FFF7FEFF 	 bl accSetCalibrationCycles
 1462              	.L112:
 679:../cleanflight/src/main/fc/fc_init.c ****     }
 680:../cleanflight/src/main/fc/fc_init.c ****     gyroStartCalibration(false);
 1463              	 .loc 19 680 0
 1464 03a6 0020     	 movs r0,#0
 1465 03a8 FFF7FEFF 	 bl gyroStartCalibration
 681:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_BARO
 682:../cleanflight/src/main/fc/fc_init.c ****     baroSetCalibrationCycles(CALIBRATING_BARO_CYCLES);
 1466              	 .loc 19 682 0
 1467 03ac C820     	 movs r0,#200
 1468 03ae FFF7FEFF 	 bl baroSetCalibrationCycles
 683:../cleanflight/src/main/fc/fc_init.c **** #endif
 684:../cleanflight/src/main/fc/fc_init.c **** 
 685:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_VTX_CONTROL
 686:../cleanflight/src/main/fc/fc_init.c ****     vtxControlInit();
 1469              	 .loc 19 686 0
 1470 03b2 FFF7FEFF 	 bl vtxControlInit
 687:../cleanflight/src/main/fc/fc_init.c **** 
 688:../cleanflight/src/main/fc/fc_init.c **** #if defined(USE_VTX_COMMON)
 689:../cleanflight/src/main/fc/fc_init.c ****     vtxCommonInit();
 1471              	 .loc 19 689 0
 1472 03b6 FFF7FEFF 	 bl vtxCommonInit
 690:../cleanflight/src/main/fc/fc_init.c ****     vtxInit();
 1473              	 .loc 19 690 0
 1474 03ba FFF7FEFF 	 bl vtxInit
 691:../cleanflight/src/main/fc/fc_init.c **** #endif
 692:../cleanflight/src/main/fc/fc_init.c **** 
 693:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_VTX_SMARTAUDIO
 694:../cleanflight/src/main/fc/fc_init.c ****     vtxSmartAudioInit();
 1475              	 .loc 19 694 0
 1476 03be FFF7FEFF 	 bl vtxSmartAudioInit
 695:../cleanflight/src/main/fc/fc_init.c **** #endif
 696:../cleanflight/src/main/fc/fc_init.c **** 
 697:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_VTX_TRAMP
 698:../cleanflight/src/main/fc/fc_init.c ****     vtxTrampInit();
 1477              	 .loc 19 698 0
 1478 03c2 FFF7FEFF 	 bl vtxTrampInit
 699:../cleanflight/src/main/fc/fc_init.c **** #endif
 700:../cleanflight/src/main/fc/fc_init.c **** 
 701:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_VTX_RTC6705
 702:../cleanflight/src/main/fc/fc_init.c **** #ifdef VTX_RTC6705_OPTIONAL
 703:../cleanflight/src/main/fc/fc_init.c ****     if (!vtxCommonDevice()) // external VTX takes precedence when configured.
 704:../cleanflight/src/main/fc/fc_init.c **** #endif
 705:../cleanflight/src/main/fc/fc_init.c ****     {
 706:../cleanflight/src/main/fc/fc_init.c ****         vtxRTC6705Init();
 707:../cleanflight/src/main/fc/fc_init.c ****     }
 708:../cleanflight/src/main/fc/fc_init.c **** #endif
 709:../cleanflight/src/main/fc/fc_init.c **** 
 710:../cleanflight/src/main/fc/fc_init.c **** #endif // VTX_CONTROL
 711:../cleanflight/src/main/fc/fc_init.c **** 
 712:../cleanflight/src/main/fc/fc_init.c ****     // start all timers
 713:../cleanflight/src/main/fc/fc_init.c ****     // TODO - not implemented yet
 714:../cleanflight/src/main/fc/fc_init.c ****     timerStart();
 1479              	 .loc 19 714 0
 1480 03c6 FFF7FEFF 	 bl timerStart
 715:../cleanflight/src/main/fc/fc_init.c **** 
 716:../cleanflight/src/main/fc/fc_init.c ****     ENABLE_STATE(SMALL_ANGLE);
 1481              	 .loc 19 716 0
 1482 03ca 154B     	 ldr r3,.L116
 1483 03cc 1B78     	 ldrb r3,[r3]
 1484 03ce 43F00803 	 orr r3,r3,#8
 1485 03d2 DAB2     	 uxtb r2,r3
 1486 03d4 124B     	 ldr r3,.L116
 1487 03d6 1A70     	 strb r2,[r3]
 717:../cleanflight/src/main/fc/fc_init.c **** 
 718:../cleanflight/src/main/fc/fc_init.c **** #ifdef SOFTSERIAL_LOOPBACK
 719:../cleanflight/src/main/fc/fc_init.c ****     // FIXME this is a hack, perhaps add a FUNCTION_LOOPBACK to support it properly
 720:../cleanflight/src/main/fc/fc_init.c ****     loopbackPort = (serialPort_t*)&(softSerialPorts[0]);
 721:../cleanflight/src/main/fc/fc_init.c ****     if (!loopbackPort->vTable) {
 722:../cleanflight/src/main/fc/fc_init.c ****         loopbackPort = openSoftSerial(0, NULL, 19200, SERIAL_NOT_INVERTED);
 723:../cleanflight/src/main/fc/fc_init.c ****     }
 724:../cleanflight/src/main/fc/fc_init.c ****     serialPrint(loopbackPort, "LOOPBACK\r\n");
 725:../cleanflight/src/main/fc/fc_init.c **** #endif
 726:../cleanflight/src/main/fc/fc_init.c **** 
 727:../cleanflight/src/main/fc/fc_init.c ****     batteryInit(); // always needs doing, regardless of features.
 1488              	 .loc 19 727 0
 1489 03d8 FFF7FEFF 	 bl batteryInit
 728:../cleanflight/src/main/fc/fc_init.c **** 
 729:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_DASHBOARD
 730:../cleanflight/src/main/fc/fc_init.c ****     if (feature(FEATURE_DASHBOARD)) {
 1490              	 .loc 19 730 0
 1491 03dc 4FF40030 	 mov r0,#131072
 1492 03e0 FFF7FEFF 	 bl feature
 1493 03e4 0346     	 mov r3,r0
 1494 03e6 002B     	 cmp r3,#0
 1495 03e8 03D0     	 beq .L113
 731:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_OLED_GPS_DEBUG_PAGE_ONLY
 732:../cleanflight/src/main/fc/fc_init.c ****         dashboardShowFixedPage(PAGE_GPS);
 733:../cleanflight/src/main/fc/fc_init.c **** #else
 734:../cleanflight/src/main/fc/fc_init.c ****         dashboardResetPageCycling();
 1496              	 .loc 19 734 0
 1497 03ea FFF7FEFF 	 bl dashboardResetPageCycling
 735:../cleanflight/src/main/fc/fc_init.c ****         dashboardEnablePageCycling();
 1498              	 .loc 19 735 0
 1499 03ee FFF7FEFF 	 bl dashboardEnablePageCycling
 1500              	.L113:
 736:../cleanflight/src/main/fc/fc_init.c **** #endif
 737:../cleanflight/src/main/fc/fc_init.c ****     }
 738:../cleanflight/src/main/fc/fc_init.c **** #endif
 739:../cleanflight/src/main/fc/fc_init.c **** 
 740:../cleanflight/src/main/fc/fc_init.c **** #ifdef USE_RCDEVICE
 741:../cleanflight/src/main/fc/fc_init.c ****     rcdeviceInit();
 1501              	 .loc 19 741 0
 1502 03f2 FFF7FEFF 	 bl rcdeviceInit
 742:../cleanflight/src/main/fc/fc_init.c **** #endif // USE_RCDEVICE
 743:../cleanflight/src/main/fc/fc_init.c **** 
 744:../cleanflight/src/main/fc/fc_init.c ****     // Latch active features AGAIN since some may be modified by init().
 745:../cleanflight/src/main/fc/fc_init.c ****     latchActiveFeatures();
 1503              	 .loc 19 745 0
 1504 03f6 FFF7FEFF 	 bl latchActiveFeatures
 746:../cleanflight/src/main/fc/fc_init.c ****     pwmEnableMotors();
 1505              	 .loc 19 746 0
 1506 03fa FFF7FEFF 	 bl pwmEnableMotors
 747:../cleanflight/src/main/fc/fc_init.c **** 
 748:../cleanflight/src/main/fc/fc_init.c ****     setArmingDisabled(ARMING_DISABLED_BOOT_GRACE_TIME);
 1507              	 .loc 19 748 0
 1508 03fe 4FF48070 	 mov r0,#256
 1509 0402 FFF7FEFF 	 bl setArmingDisabled
 749:../cleanflight/src/main/fc/fc_init.c **** 
 750:../cleanflight/src/main/fc/fc_init.c ****     fcTasksInit();
 1510              	 .loc 19 750 0
 1511 0406 FFF7FEFF 	 bl fcTasksInit
 751:../cleanflight/src/main/fc/fc_init.c **** 
 752:../cleanflight/src/main/fc/fc_init.c ****     systemState |= SYSTEM_STATE_READY;
 1512              	 .loc 19 752 0
 1513 040a 064B     	 ldr r3,.L116+4
 1514 040c 1B78     	 ldrb r3,[r3]
 1515 040e 63F07F03 	 orn r3,r3,#127
 1516 0412 DAB2     	 uxtb r2,r3
 1517 0414 034B     	 ldr r3,.L116+4
 1518 0416 1A70     	 strb r2,[r3]
 753:../cleanflight/src/main/fc/fc_init.c **** }
 1519              	 .loc 19 753 0
 1520 0418 1437     	 adds r7,r7,#20
 1521              	.LCFI103:
 1522              	 .cfi_def_cfa_offset 12
 1523 041a BD46     	 mov sp,r7
 1524              	.LCFI104:
 1525              	 .cfi_def_cfa_register 13
 1526              	 
 1527 041c 90BD     	 pop {r4,r7,pc}
 1528              	.L117:
 1529 041e 00BF     	 .align 2
 1530              	.L116:
 1531 0420 00000000 	 .word stateFlags
 1532 0424 00000000 	 .word systemState
 1533              	 .cfi_endproc
 1534              	.LFE676:
 1536              	 .text
 1537              	.Letext0:
 1538              	 .file 20 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1539              	 .file 21 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1540              	 .file 22 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 1541              	 .file 23 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 1542              	 .file 24 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/color.h"
 1543              	 .file 25 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 1544              	 .file 26 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/display.h"
 1545              	 .file 27 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 1546              	 .file 28 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 1547              	 .file 29 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/sensor.h"
 1548              	 .file 30 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/gyro.h"
 1549              	 .file 31 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/camera_control.h"
 1550              	 .file 32 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/pwm_output.h"
 1551              	 .file 33 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_spi.h"
 1552              	 .file 34 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 1553              	 .file 35 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/flash.h"
 1554              	 .file 36 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/rx/rx_pwm.h"
 1555              	 .file 37 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/system.h"
 1556              	 .file 38 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/transponder_ir.h"
 1557              	 .file 39 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/fc_init.h"
 1558              	 .file 40 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/runtime_config.h"
 1559              	 .file 41 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/beeper.h"
 1560              	 .file 42 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/beeper_dev.h"
 1561              	 .file 43 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_modes.h"
 1562              	 .file 44 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx_spi.h"
 1563              	 .file 45 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/vcd.h"
 1564              	 .file 46 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/rx/rx.h"
 1565              	 .file 47 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/gps.h"
 1566              	 .file 48 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/gimbal.h"
 1567              	 .file 49 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/ledstrip.h"
 1568              	 .file 50 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/transponder_ir.h"
 1569              	 .file 51 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/osd.h"
 1570              	 .file 52 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/vtx.h"
 1571              	 .file 53 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/vtx_control.h"
 1572              	 .file 54 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/scheduler/scheduler.h"
 1573              	 .file 55 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/sensors.h"
 1574              	 .file 56 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/acceleration.h"
 1575              	 .file 57 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/barometer.h"
 1576              	 .file 58 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/current.h"
 1577              	 .file 59 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/voltage.h"
 1578              	 .file 60 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/compass.h"
 1579              	 .file 61 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/esc_sensor.h"
 1580              	 .file 62 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/telemetry/telemetry.h"
 1581              	 .file 63 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/failsafe.h"
 1582              	 .file 64 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/imu.h"
 1583              	 .file 65 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/pid.h"
 1584              	 .file 66 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/rcdevice_cam.h"
 1585              	 .file 67 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build/debug.h"
 1586              	 .file 68 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 1587              	 .file 69 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
 1588              	 .file 70 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms.h"
 1589              	 .file 71 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/displayport_max7456.h"
 1590              	 .file 72 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/displayport_srxl.h"
 1591              	 .file 73 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/displayport_msp.h"
DEFINED SYMBOLS
                            *ABS*:00000000 fc_init.c
    {standard input}:20     .text.blackboxConfig:00000000 $t
    {standard input}:24     .text.blackboxConfig:00000000 blackboxConfig
    {standard input}:54     .text.blackboxConfig:00000010 $d
    {standard input}:59     .text.blackboxConfigMutable:00000000 $t
    {standard input}:63     .text.blackboxConfigMutable:00000000 blackboxConfigMutable
    {standard input}:92     .text.blackboxConfigMutable:00000010 $d
                            *COM*:00000004 pCurrentDisplay
    {standard input}:98     .text.serialPinConfig:00000000 $t
    {standard input}:102    .text.serialPinConfig:00000000 serialPinConfig
    {standard input}:132    .text.serialPinConfig:00000010 $d
    {standard input}:137    .text.statusLedConfig:00000000 $t
    {standard input}:141    .text.statusLedConfig:00000000 statusLedConfig
    {standard input}:171    .text.statusLedConfig:00000010 $d
    {standard input}:176    .text.sdcardConfig:00000000 $t
    {standard input}:180    .text.sdcardConfig:00000000 sdcardConfig
    {standard input}:210    .text.sdcardConfig:00000010 $d
    {standard input}:215    .text.systemConfig:00000000 $t
    {standard input}:219    .text.systemConfig:00000000 systemConfig
    {standard input}:249    .text.systemConfig:00000010 $d
    {standard input}:254    .text.flight3DConfig:00000000 $t
    {standard input}:258    .text.flight3DConfig:00000000 flight3DConfig
    {standard input}:288    .text.flight3DConfig:00000010 $d
    {standard input}:293    .text.adcConfig:00000000 $t
    {standard input}:297    .text.adcConfig:00000000 adcConfig
    {standard input}:327    .text.adcConfig:00000010 $d
    {standard input}:332    .text.adcConfigMutable:00000000 $t
    {standard input}:336    .text.adcConfigMutable:00000000 adcConfigMutable
    {standard input}:365    .text.adcConfigMutable:00000010 $d
    {standard input}:370    .text.i2cConfig:00000000 $t
    {standard input}:374    .text.i2cConfig:00000000 i2cConfig
    {standard input}:414    .text.i2cConfig:0000001c $d
    {standard input}:419    .text.spiPinConfig:00000000 $t
    {standard input}:423    .text.spiPinConfig:00000000 spiPinConfig
    {standard input}:463    .text.spiPinConfig:0000001c $d
    {standard input}:468    .text.pinioConfig:00000000 $t
    {standard input}:472    .text.pinioConfig:00000000 pinioConfig
    {standard input}:502    .text.pinioConfig:00000010 $d
    {standard input}:507    .text.pinioBoxConfig:00000000 $t
    {standard input}:511    .text.pinioBoxConfig:00000000 pinioBoxConfig
    {standard input}:541    .text.pinioBoxConfig:00000010 $d
    {standard input}:546    .text.rxConfig:00000000 $t
    {standard input}:550    .text.rxConfig:00000000 rxConfig
    {standard input}:580    .text.rxConfig:00000010 $d
    {standard input}:585    .text.rxConfigMutable:00000000 $t
    {standard input}:589    .text.rxConfigMutable:00000000 rxConfigMutable
    {standard input}:618    .text.rxConfigMutable:00000010 $d
    {standard input}:623    .text.ppmConfig:00000000 $t
    {standard input}:627    .text.ppmConfig:00000000 ppmConfig
    {standard input}:657    .text.ppmConfig:00000010 $d
    {standard input}:662    .text.pwmConfig:00000000 $t
    {standard input}:666    .text.pwmConfig:00000000 pwmConfig
    {standard input}:695    .text.pwmConfig:00000010 $d
                            *COM*:0000000f srxlDisplayPort
    {standard input}:701    .text.serialConfig:00000000 $t
    {standard input}:705    .text.serialConfig:00000000 serialConfig
    {standard input}:735    .text.serialConfig:00000010 $d
                            *COM*:00000004 colors
                            *COM*:00000004 modeColors
                            *COM*:0000000b specialColors
    {standard input}:743    .text.batteryConfig:00000000 $t
    {standard input}:747    .text.batteryConfig:00000000 batteryConfig
    {standard input}:777    .text.batteryConfig:00000010 $d
    {standard input}:782    .text.boardAlignment:00000000 $t
    {standard input}:786    .text.boardAlignment:00000000 boardAlignment
    {standard input}:816    .text.boardAlignment:00000010 $d
    {standard input}:821    .text.mixerConfig:00000000 $t
    {standard input}:825    .text.mixerConfig:00000000 mixerConfig
    {standard input}:855    .text.mixerConfig:00000010 $d
    {standard input}:860    .text.motorConfig:00000000 $t
    {standard input}:864    .text.motorConfig:00000000 motorConfig
    {standard input}:893    .text.motorConfig:00000010 $d
                            *COM*:00000001 inputSource_e
    {standard input}:899    .text.servoConfig:00000000 $t
    {standard input}:903    .text.servoConfig:00000000 servoConfig
    {standard input}:933    .text.servoConfig:00000010 $d
                            *COM*:00000003 switchStates
    {standard input}:942    .bss.systemState:00000000 systemState
    {standard input}:943    .bss.systemState:00000000 $d
    {standard input}:945    .text.processLoopback:00000000 $t
    {standard input}:950    .text.processLoopback:00000000 processLoopback
    {standard input}:979    .rodata:00000000 $d
    {standard input}:983    .text.init:00000000 $t
    {standard input}:988    .text.init:00000000 init
    {standard input}:1440   .text.init:00000374 $d
    {standard input}:1446   .text.init:00000384 $t
    {standard input}:1531   .text.init:00000420 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
blackboxConfig_System
serialPinConfig_System
statusLedConfig_System
sdcardConfig_System
systemConfig_System
flight3DConfig_System
adcConfig_System
i2cConfig_SystemArray
spiPinConfig_SystemArray
pinioConfig_System
pinioBoxConfig_System
rxConfig_System
ppmConfig_System
pwmConfig_System
serialConfig_System
batteryConfig_System
boardAlignment_System
mixerConfig_System
motorConfig_System
servoConfig_System
printfSupportInit
systemInit
IOInitGlobal
initEEPROM
ensureEEPROMStructureIsValid
readEEPROM
initBoardInformation
isEEPROMVersionValid
strncasecmp
resetEEPROM
latchActiveFeatures
ledInit
ledSet
feature
spektrumBind
delay
timerInit
uartPinConfigure
serialInit
mixerInit
mixerConfigureOutput
getMotorCount
motorDevInit
ppmRxInit
pwmRxInit
spiPinConfigure
spiPreInit
spiInit
i2cHardwareConfigure
i2cInit
adcInit
initBoardAlignment
sensorsAutodetect
indicateFailure
setArmingDisabled
validateAndFixGyroConfig
pidInit
accInitFilters
servosInit
servoConfigureOutput
isMixerUsingServos
servoDevInit
servosFilterInit
pinioInit
pinioBoxInit
ledToggle
imuInit
mspInit
mspSerialInit
cliInit
failsafeInit
rxInit
cmsInit
osdInit
dashboardInit
gpsInit
sdcardInsertionDetectInit
sdcard_init
afatfs_init
debugMode
currentPidProfile
blackboxInit
accSetCalibrationCycles
gyroStartCalibration
baroSetCalibrationCycles
vtxControlInit
vtxCommonInit
vtxInit
vtxSmartAudioInit
vtxTrampInit
timerStart
batteryInit
dashboardResetPageCycling
dashboardEnablePageCycling
rcdeviceInit
pwmEnableMotors
fcTasksInit
stateFlags
