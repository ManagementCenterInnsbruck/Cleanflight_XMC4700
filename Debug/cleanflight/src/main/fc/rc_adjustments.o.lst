   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "rc_adjustments.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.cmp32,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	cmp32:
  25              	.LFB520:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/utils.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #include <stddef.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #include <stdint.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define NOOP do {} while (0)
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define ARRAYLEN(x) (sizeof(x) / sizeof((x)[0]))
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define ARRAYEND(x) (&(x)[ARRAYLEN(x)])
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define CONST_CAST(type, value) ((type)(value))
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define CONCAT_HELPER(x,y) x ## y
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define CONCAT(x,y) CONCAT_HELPER(x, y)
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define CONCAT2(_1,_2) CONCAT(_1, _2)
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define CONCAT3(_1,_2,_3)  CONCAT(CONCAT(_1, _2), _3)
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define CONCAT4(_1,_2,_3,_4)  CONCAT(CONCAT3(_1, _2, _3), _4)
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define STR_HELPER(x) #x
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define STR(x) STR_HELPER(x)
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define EXPAND_I(x) x
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define EXPAND(x) EXPAND_I(x)
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** // expand to t if bit is 1, f when bit is 0. Other bit values are not supported
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define PP_IIF(bit, t, f) PP_IIF_I(bit, t, f)
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define PP_IIF_I(bit, t, f) PP_IIF_ ## bit(t, f)
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define PP_IIF_0(t, f) f
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define PP_IIF_1(t, f) t
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** // Expand all argumens and call macro with them. When expansion of some argument contains ',', it w
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** // #define TAKE3(_1,_2,_3) CONCAT3(_1,_2,_3)
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** // #define MULTI2 A,B
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** // PP_CALL(TAKE3, MULTI2, C) expands to ABC
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define PP_CALL(macro, ...) macro(__VA_ARGS__)
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #if !defined(UNUSED)
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define UNUSED(x) (void)(x)
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #endif
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define BUILD_BUG_ON(condition) ((void)sizeof(char[1 - 2*!!(condition)]))
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define STATIC_ASSERT(condition, name) \
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****     typedef char assert_failed_ ## name [(condition) ? 1 : -1 ] __attribute__((unused))
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define BIT(x) (1 << (x))
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** /*
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** http://resnet.uoregon.edu/~gurney_j/jmpc/bitwise.html
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** */
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define BITCOUNT(x) (((BX_(x)+(BX_(x)>>4)) & 0x0F0F0F0F) % 255)
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define BX_(x) ((x) - (((x)>>1)&0x77777777) - (((x)>>2)&0x33333333) - (((x)>>3)&0x11111111))
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** /*
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * https://groups.google.com/forum/?hl=en#!msg/comp.lang.c/attFnqwhvGk/sGBKXvIkY3AJ
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * Return (v ? floor(log2(v)) : 0) when 0 <= v < 1<<[8, 16, 32, 64].
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  * Inefficient algorithm, intended for compile-time constants.
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****  */
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define LOG2_8BIT(v)  (8 - 90/(((v)/4+14)|1) - 2/((v)/2+1))
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define LOG2_16BIT(v) (8*((v)>255) + LOG2_8BIT((v) >>8*((v)>255)))
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define LOG2_32BIT(v) (16*((v)>65535L) + LOG2_16BIT((v)*1L >>16*((v)>65535L)))
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define LOG2_64BIT(v) \
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****     (32*((v)/2L>>31 > 0) \
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****      + LOG2_32BIT((v)*1L >>16*((v)/2L>>31 > 0) \
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****                          >>16*((v)/2L>>31 > 0)))
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define LOG2(v) LOG2_64BIT(v)
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #if 0
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** // ISO C version, but no type checking
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define container_of(ptr, type, member) \
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****                       ((type *) ((char *)(ptr) - offsetof(type, member)))
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #else
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** // non ISO variant from linux kernel; checks ptr type, but triggers 'ISO C forbids braced-groups wi
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** //  __extension__ is here to disable this warning
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** #define container_of(ptr, type, member)  ( __extension__ ({     \
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****         const typeof( ((type *)0)->member ) *__mptr = (ptr);    \
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h ****         (type *)( (char *)__mptr - offsetof(type,member) );}))
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** 
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** static inline int16_t cmp16(uint16_t a, uint16_t b) { return (int16_t)(a-b); }
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\utils.h **** static inline int32_t cmp32(uint32_t a, uint32_t b) { return (int32_t)(a-b); }
  27              	 .loc 1 100 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 3960     	 str r1,[r7]
  44              	 .loc 1 100 0
  45 000a 7A68     	 ldr r2,[r7,#4]
  46 000c 3B68     	 ldr r3,[r7]
  47 000e D31A     	 subs r3,r2,r3
  48 0010 1846     	 mov r0,r3
  49 0012 0C37     	 adds r7,r7,#12
  50              	.LCFI3:
  51              	 .cfi_def_cfa_offset 4
  52 0014 BD46     	 mov sp,r7
  53              	.LCFI4:
  54              	 .cfi_def_cfa_register 13
  55              	 
  56 0016 5DF8047B 	 ldr r7,[sp],#4
  57              	.LCFI5:
  58              	 .cfi_restore 7
  59              	 .cfi_def_cfa_offset 0
  60 001a 7047     	 bx lr
  61              	 .cfi_endproc
  62              	.LFE520:
  64              	 .section .text.blackboxConfig,"ax",%progbits
  65              	 .align 2
  66              	 .thumb
  67              	 .thumb_func
  69              	blackboxConfig:
  70              	.LFB527:
  71              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox/blackbox.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "platform.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "build/build_config.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "common/time.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef enum BlackboxDevice {
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_NONE = 0,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #ifdef USE_FLASHFS
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_FLASH = 1,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #endif
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #ifdef USE_SDCARD
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_SDCARD = 2,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** #endif
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_DEVICE_SERIAL = 3
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } BlackboxDevice_e;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef enum BlackboxMode {
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_MODE_NORMAL = 0,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_MODE_MOTOR_TEST,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     BLACKBOX_MODE_ALWAYS_ON
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } BlackboxMode;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef enum FlightLogEvent {
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_SYNC_BEEP = 0,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_INFLIGHT_ADJUSTMENT = 13,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_LOGGING_RESUME = 14,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_FLIGHTMODE = 30, // Add new event type for flight mode status.
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     FLIGHT_LOG_EVENT_LOG_END = 255
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } FlightLogEvent;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** typedef struct blackboxConfig_s {
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint16_t p_ratio; // I-frame interval / P-frame interval
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint8_t device;
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint8_t record_acc;
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h ****     uint8_t mode;
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** } blackboxConfig_t;
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox\blackbox.h **** PG_DECLARE(blackboxConfig_t, blackboxConfig);
  72              	 .loc 2 60 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 00AF     	 add r7,sp,#0
  82              	.LCFI7:
  83              	 .cfi_def_cfa_register 7
  84              	 .loc 2 60 0
  85 0004 024B     	 ldr r3,.L5
  86 0006 1846     	 mov r0,r3
  87 0008 BD46     	 mov sp,r7
  88              	.LCFI8:
  89              	 .cfi_def_cfa_register 13
  90              	 
  91 000a 5DF8047B 	 ldr r7,[sp],#4
  92              	.LCFI9:
  93              	 .cfi_restore 7
  94              	 .cfi_def_cfa_offset 0
  95 000e 7047     	 bx lr
  96              	.L6:
  97              	 .align 2
  98              	.L5:
  99 0010 00000000 	 .word blackboxConfig_System
 100              	 .cfi_endproc
 101              	.LFE527:
 103              	 .section .text.constrain,"ax",%progbits
 104              	 .align 2
 105              	 .thumb
 106              	 .thumb_func
 108              	constrain:
 109              	.LFB529:
 110              	 .file 3 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/maths.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #ifndef sq
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define sq(x) ((x)*(x))
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #endif
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define power3(x) ((x)*(x)*(x))
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Undefine this for use libc sinf/cosf. Keep this defined to use fast sin/cos approximations
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define FAST_MATH             // order 9 approximation
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define VERY_FAST_MATH      // order 7 approximation
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Use floating point M_PI instead explicitly.
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define M_PIf       3.14159265358979323846f
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define RAD    (M_PIf / 180.0f)
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define DEGREES_TO_DECIDEGREES(angle) ((angle) * 10)
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define DECIDEGREES_TO_DEGREES(angle) ((angle) / 10)
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define DECIDEGREES_TO_RADIANS(angle) ((angle) / 10.0f * 0.0174532925f)
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define DEGREES_TO_RADIANS(angle) ((angle) * 0.0174532925f)
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define CM_S_TO_KM_H(centimetersPerSecond) ((centimetersPerSecond) * 36 / 1000)
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define CM_S_TO_MPH(centimetersPerSecond) ((centimetersPerSecond) * 10000 / 5080 / 88)
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define MIN(a,b) \
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __extension__ ({ __typeof__ (a) _a = (a); \
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __typeof__ (b) _b = (b); \
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   _a < _b ? _a : _b; })
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define MAX(a,b) \
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __extension__ ({ __typeof__ (a) _a = (a); \
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __typeof__ (b) _b = (b); \
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   _a > _b ? _a : _b; })
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define ABS(x) \
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   __extension__ ({ __typeof__ (x) _x = (x); \
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****   _x > 0 ? _x : -_x; })
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define Q12 (1 << 12)
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define HZ_TO_INTERVAL_US(x) (1000000 / (x))
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef int32_t fix12_t;
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef struct stdev_s
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** {
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float m_oldM, m_newM, m_oldS, m_newS;
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     int m_n;
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } stdev_t;
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Floating point 3 vector.
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef struct fp_vector {
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float X;
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float Y;
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float Z;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } t_fp_vector_def;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef union u_fp_vector {
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float A[3];
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     t_fp_vector_def V;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } t_fp_vector;
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Floating point Euler angles.
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** // Be carefull, could be either of degrees or radians.
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef struct fp_angles {
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float roll;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float pitch;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float yaw;
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } fp_angles_def;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** typedef union {
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     float raw[3];
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     fp_angles_def angles;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** } fp_angles_t;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int gcd(int num, int denom);
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float powerf(float base, int exp);
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t applyDeadband(int32_t value, int32_t deadband);
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float fapplyDeadband(float value, float deadband);
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void devClear(stdev_t *dev);
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void devPush(stdev_t *dev, float x);
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float devVariance(stdev_t *dev);
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float devStandardDeviation(stdev_t *dev);
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float degreesToRadians(int16_t degrees);
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int scaleRange(int x, int srcFrom, int srcTo, int destFrom, int destTo);
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float scaleRangef(float x, float srcFrom, float srcTo, float destFrom, float destTo);
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void normalizeV(struct fp_vector *src, struct fp_vector *dest);
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void rotateV(struct fp_vector *v, fp_angles_t *delta);
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void buildRotationMatrix(fp_angles_t *delta, float matrix[3][3]);
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t quickMedianFilter3(int32_t * v);
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t quickMedianFilter5(int32_t * v);
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t quickMedianFilter7(int32_t * v);
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int32_t quickMedianFilter9(int32_t * v);
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float quickMedianFilter3f(float * v);
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float quickMedianFilter5f(float * v);
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float quickMedianFilter7f(float * v);
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float quickMedianFilter9f(float * v);
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #if defined(FAST_MATH) || defined(VERY_FAST_MATH)
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float sin_approx(float x);
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float cos_approx(float x);
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float atan2_approx(float y, float x);
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float acos_approx(float x);
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define tan_approx(x)       (sin_approx(x) / cos_approx(x))
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float exp_approx(float val);
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float log_approx(float val);
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** float pow_approx(float a, float b);
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #else
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define sin_approx(x)   sinf(x)
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define cos_approx(x)   cosf(x)
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define atan2_approx(y,x)   atan2f(y,x)
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define acos_approx(x)      acosf(x)
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define tan_approx(x)       tanf(x)
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define exp_approx(x)       expf(x)
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define log_approx(x)       logf(x)
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #define pow_approx(a, b)    powf(b, a)
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** #endif
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** void arraySubInt32(int32_t *dest, int32_t *array1, int32_t *array2, int count);
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int16_t qPercent(fix12_t q);
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** int16_t qMultiply(fix12_t q, int16_t input);
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** fix12_t qConstruct(int16_t num, int16_t den);
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** 
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** static inline int constrain(int amt, int low, int high)
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** {
 111              	 .loc 3 151 0
 112              	 .cfi_startproc
 113              	 
 114              	 
 115              	 
 116 0000 80B4     	 push {r7}
 117              	.LCFI10:
 118              	 .cfi_def_cfa_offset 4
 119              	 .cfi_offset 7,-4
 120 0002 85B0     	 sub sp,sp,#20
 121              	.LCFI11:
 122              	 .cfi_def_cfa_offset 24
 123 0004 00AF     	 add r7,sp,#0
 124              	.LCFI12:
 125              	 .cfi_def_cfa_register 7
 126 0006 F860     	 str r0,[r7,#12]
 127 0008 B960     	 str r1,[r7,#8]
 128 000a 7A60     	 str r2,[r7,#4]
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     if (amt < low)
 129              	 .loc 3 152 0
 130 000c FA68     	 ldr r2,[r7,#12]
 131 000e BB68     	 ldr r3,[r7,#8]
 132 0010 9A42     	 cmp r2,r3
 133 0012 01DA     	 bge .L8
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****         return low;
 134              	 .loc 3 153 0
 135 0014 BB68     	 ldr r3,[r7,#8]
 136 0016 06E0     	 b .L9
 137              	.L8:
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     else if (amt > high)
 138              	 .loc 3 154 0
 139 0018 FA68     	 ldr r2,[r7,#12]
 140 001a 7B68     	 ldr r3,[r7,#4]
 141 001c 9A42     	 cmp r2,r3
 142 001e 01DD     	 ble .L10
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****         return high;
 143              	 .loc 3 155 0
 144 0020 7B68     	 ldr r3,[r7,#4]
 145 0022 00E0     	 b .L9
 146              	.L10:
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****     else
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h ****         return amt;
 147              	 .loc 3 157 0
 148 0024 FB68     	 ldr r3,[r7,#12]
 149              	.L9:
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\maths.h **** }
 150              	 .loc 3 158 0
 151 0026 1846     	 mov r0,r3
 152 0028 1437     	 adds r7,r7,#20
 153              	.LCFI13:
 154              	 .cfi_def_cfa_offset 4
 155 002a BD46     	 mov sp,r7
 156              	.LCFI14:
 157              	 .cfi_def_cfa_register 13
 158              	 
 159 002c 5DF8047B 	 ldr r7,[sp],#4
 160              	.LCFI15:
 161              	 .cfi_restore 7
 162              	 .cfi_def_cfa_offset 0
 163 0030 7047     	 bx lr
 164              	 .cfi_endproc
 165              	.LFE529:
 167 0032 00BF     	 .section .text.rxConfig,"ax",%progbits
 168              	 .align 2
 169              	 .thumb
 170              	 .thumb_func
 172              	rxConfig:
 173              	.LFB533:
 174              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #include "drivers/io_types.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** typedef struct rxConfig_s {
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcmap[RX_MAPPABLE_CHANNEL_COUNT];  // mapping of radio channels to internal RPYTA+ orde
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t serialrx_provider;              // type of UART-based receiver (0 = spek 10, 1 = spek 1
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t serialrx_inverted;              // invert the serial RX protocol compared to it's defau
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t halfDuplex;                     // allow rx to operate in half duplex mode on F4, ignor
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     ioTag_t spektrum_bind_pin_override_ioTag;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     ioTag_t spektrum_bind_plug_ioTag;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t spektrum_sat_bind;              // number of bind pulses for Spektrum satellite receive
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t spektrum_sat_bind_autoreset;    // whenever we will reset (exit) binding mode after har
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_channel;
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_scale;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_invert;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t midrc;                         // Some radios have not a neutral point centered on 150
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t mincheck;                      // minimum rc end
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t maxcheck;                      // maximum rc end
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolation;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolationChannels;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolationInterval;
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t fpvCamAngleDegrees;             // Camera angle to be scaled into rc commands
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t airModeActivateThreshold;       // Throttle setpoint percent where airmode gets activat
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t rx_min_usec;
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t rx_max_usec;
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t max_aux_channel;
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_src_frame_errors;          // true to use frame drop flags in the rx protocol
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     int8_t rssi_offset;                     // offset applied to the RSSI value before it is return
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_type;              // Determines the smoothing algorithm to use: INTERPOLA
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_input_cutoff;      // Filter cutoff frequency for the input filter (0 = au
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_derivative_cutoff; // Filter cutoff frequency for the setpoint weight deri
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_debug_axis;        // Axis to log as debug values when debug_mode = RC_SMO
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_input_type;        // Input filter type (0 = PT1, 1 = BIQUAD)
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_derivative_type;   // Derivative filter type (0 = OFF, 1 = PT1, 2 = BIQUAD
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** } rxConfig_t;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** PG_DECLARE(rxConfig_t, rxConfig);
 175              	 .loc 4 61 0
 176              	 .cfi_startproc
 177              	 
 178              	 
 179              	 
 180 0000 80B4     	 push {r7}
 181              	.LCFI16:
 182              	 .cfi_def_cfa_offset 4
 183              	 .cfi_offset 7,-4
 184 0002 00AF     	 add r7,sp,#0
 185              	.LCFI17:
 186              	 .cfi_def_cfa_register 7
 187              	 .loc 4 61 0
 188 0004 024B     	 ldr r3,.L13
 189 0006 1846     	 mov r0,r3
 190 0008 BD46     	 mov sp,r7
 191              	.LCFI18:
 192              	 .cfi_def_cfa_register 13
 193              	 
 194 000a 5DF8047B 	 ldr r7,[sp],#4
 195              	.LCFI19:
 196              	 .cfi_restore 7
 197              	 .cfi_def_cfa_offset 0
 198 000e 7047     	 bx lr
 199              	.L14:
 200              	 .align 2
 201              	.L13:
 202 0010 00000000 	 .word rxConfig_System
 203              	 .cfi_endproc
 204              	.LFE533:
 206              	 .section .text.systemConfig,"ax",%progbits
 207              	 .align 2
 208              	 .thumb
 209              	 .thumb_func
 211              	systemConfig:
 212              	.LFB542:
 213              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** #define MAX_NAME_LENGTH 16u
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct pilotConfig_s {
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char name[MAX_NAME_LENGTH + 1];
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } pilotConfig_t;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(pilotConfig_t, pilotConfig);
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** typedef struct systemConfig_s {
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t pidProfileIndex;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t activeRateProfile;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t debug_mode;
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t task_statistics;
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t rateProfile6PosSwitch;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t cpu_overclock;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     uint8_t powerOnArmingGraceTime; // in seconds
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h ****     char boardIdentifier[sizeof(TARGET_BOARD_IDENTIFIER) + 1];
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** } systemConfig_t;
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** 
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\config.h **** PG_DECLARE(systemConfig_t, systemConfig);
 214              	 .loc 5 47 0
 215              	 .cfi_startproc
 216              	 
 217              	 
 218              	 
 219 0000 80B4     	 push {r7}
 220              	.LCFI20:
 221              	 .cfi_def_cfa_offset 4
 222              	 .cfi_offset 7,-4
 223 0002 00AF     	 add r7,sp,#0
 224              	.LCFI21:
 225              	 .cfi_def_cfa_register 7
 226              	 .loc 5 47 0
 227 0004 024B     	 ldr r3,.L17
 228 0006 1846     	 mov r0,r3
 229 0008 BD46     	 mov sp,r7
 230              	.LCFI22:
 231              	 .cfi_def_cfa_register 13
 232              	 
 233 000a 5DF8047B 	 ldr r7,[sp],#4
 234              	.LCFI23:
 235              	 .cfi_restore 7
 236              	 .cfi_def_cfa_offset 0
 237 000e 7047     	 bx lr
 238              	.L18:
 239              	 .align 2
 240              	.L17:
 241 0010 00000000 	 .word systemConfig_System
 242              	 .cfi_endproc
 243              	.LFE542:
 245              	 .section .text.adjustmentRanges,"ax",%progbits
 246              	 .align 2
 247              	 .thumb
 248              	 .thumb_func
 250              	adjustmentRanges:
 251              	.LFB550:
 252              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_adjustments.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** #include <stdbool.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** #include "pg/pg.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** #include "fc/rc_modes.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** typedef enum {
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_NONE = 0,
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_RC_RATE,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_RC_EXPO,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_THROTTLE_EXPO,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_ROLL_RATE,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_YAW_RATE,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_ROLL_P,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_ROLL_I,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_ROLL_D,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_YAW_P,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_YAW_I,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_YAW_D,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_RATE_PROFILE,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_RATE,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_ROLL_RATE,
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_P,
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_I,
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_D,
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_ROLL_P,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_ROLL_I,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_ROLL_D,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_RC_RATE_YAW,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_ROLL_F,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_FEEDFORWARD_TRANSITION,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_HORIZON_STRENGTH,
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_ROLL_RC_RATE,
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_RC_RATE,
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_ROLL_RC_EXPO,
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_RC_EXPO,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PID_AUDIO,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_PITCH_F,
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_ROLL_F,
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_YAW_F,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_FUNCTION_COUNT
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** } adjustmentFunction_e;
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** typedef enum {
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_MODE_STEP,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     ADJUSTMENT_MODE_SELECT
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** } adjustmentMode_e;
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** typedef union adjustmentConfig_u {
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     uint8_t step;
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     uint8_t switchPositions;
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** } adjustmentData_t;
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** typedef struct adjustmentConfig_s {
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     adjustmentFunction_e adjustmentFunction;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     adjustmentMode_e mode;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     adjustmentData_t data;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** } adjustmentConfig_t;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** #define MAX_ADJUSTMENT_RANGE_COUNT 15
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** typedef struct adjustmentRange_s {
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     // when aux channel is in range...
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     uint8_t auxChannelIndex;
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     channelRange_t range;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     // ..then apply the adjustment function to the auxSwitchChannel ...
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     uint8_t adjustmentFunction;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     uint8_t auxSwitchChannelIndex;
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     // ... via slot
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     uint8_t adjustmentIndex;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     uint16_t adjustmentCenter;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h ****     uint16_t adjustmentScale;
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** } adjustmentRange_t;
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** 
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc\rc_adjustments.h **** PG_DECLARE_ARRAY(adjustmentRange_t, MAX_ADJUSTMENT_RANGE_COUNT, adjustmentRanges);
 253              	 .loc 6 97 0
 254              	 .cfi_startproc
 255              	 
 256              	 
 257              	 
 258 0000 80B4     	 push {r7}
 259              	.LCFI24:
 260              	 .cfi_def_cfa_offset 4
 261              	 .cfi_offset 7,-4
 262 0002 83B0     	 sub sp,sp,#12
 263              	.LCFI25:
 264              	 .cfi_def_cfa_offset 16
 265 0004 00AF     	 add r7,sp,#0
 266              	.LCFI26:
 267              	 .cfi_def_cfa_register 7
 268 0006 7860     	 str r0,[r7,#4]
 269              	 .loc 6 97 0
 270 0008 7A68     	 ldr r2,[r7,#4]
 271 000a 1346     	 mov r3,r2
 272 000c 9B00     	 lsls r3,r3,#2
 273 000e 1344     	 add r3,r3,r2
 274 0010 5B00     	 lsls r3,r3,#1
 275 0012 044A     	 ldr r2,.L21
 276 0014 1344     	 add r3,r3,r2
 277 0016 1846     	 mov r0,r3
 278 0018 0C37     	 adds r7,r7,#12
 279              	.LCFI27:
 280              	 .cfi_def_cfa_offset 4
 281 001a BD46     	 mov sp,r7
 282              	.LCFI28:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 001c 5DF8047B 	 ldr r7,[sp],#4
 286              	.LCFI29:
 287              	 .cfi_restore 7
 288              	 .cfi_def_cfa_offset 0
 289 0020 7047     	 bx lr
 290              	.L22:
 291 0022 00BF     	 .align 2
 292              	.L21:
 293 0024 00000000 	 .word adjustmentRanges_SystemArray
 294              	 .cfi_endproc
 295              	.LFE550:
 297              	 .comm adjustmentRanges_SystemArray,150,4
 298              	 .comm adjustmentRanges_CopyArray,150,4
 299              	 .global adjustmentRanges_Registry
 300              	 .section .pg_registry,"a",%progbits
 301              	 .align 2
 304              	adjustmentRanges_Registry:
 305 0000 2500     	 .short 37
 306 0002 9600     	 .short 150
 307 0004 00000000 	 .word adjustmentRanges_SystemArray
 308 0008 00000000 	 .word adjustmentRanges_CopyArray
 309 000c 00000000 	 .word 0
 310 0010 00000000 	 .word 0
 311              	 .global pidAudioPositionToModeMap
 312              	 .section .data.pidAudioPositionToModeMap,"aw",%progbits
 313              	 .align 2
 316              	pidAudioPositionToModeMap:
 317 0000 01       	 .byte 1
 318 0001 02       	 .byte 2
 319 0002 03       	 .byte 3
 320 0003 00       	 .byte 0
 321 0004 00       	 .byte 0
 322 0005 00       	 .byte 0
 323 0006 00       	 .byte 0
 324 0007 00       	 .section .bss.pidProfile,"aw",%nobits
 325              	 .align 2
 328              	pidProfile:
 329 0000 00000000 	 .space 4
 330              	 .section .text.blackboxLogInflightAdjustmentEvent,"ax",%progbits
 331              	 .align 2
 332              	 .thumb
 333              	 .thumb_func
 335              	blackboxLogInflightAdjustmentEvent:
 336              	.LFB565:
 337              	 .file 7 "../cleanflight/src/main/fc/rc_adjustments.c"
   1:../cleanflight/src/main/fc/rc_adjustments.c **** /*
   2:../cleanflight/src/main/fc/rc_adjustments.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/fc/rc_adjustments.c ****  *
   4:../cleanflight/src/main/fc/rc_adjustments.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/fc/rc_adjustments.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/fc/rc_adjustments.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/fc/rc_adjustments.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/fc/rc_adjustments.c ****  * any later version.
   9:../cleanflight/src/main/fc/rc_adjustments.c ****  *
  10:../cleanflight/src/main/fc/rc_adjustments.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/fc/rc_adjustments.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/fc/rc_adjustments.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/fc/rc_adjustments.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/fc/rc_adjustments.c ****  *
  15:../cleanflight/src/main/fc/rc_adjustments.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/fc/rc_adjustments.c ****  * along with this software.
  17:../cleanflight/src/main/fc/rc_adjustments.c ****  *
  18:../cleanflight/src/main/fc/rc_adjustments.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/fc/rc_adjustments.c ****  */
  20:../cleanflight/src/main/fc/rc_adjustments.c **** 
  21:../cleanflight/src/main/fc/rc_adjustments.c **** #include <stdbool.h>
  22:../cleanflight/src/main/fc/rc_adjustments.c **** #include <stdint.h>
  23:../cleanflight/src/main/fc/rc_adjustments.c **** #include <string.h>
  24:../cleanflight/src/main/fc/rc_adjustments.c **** 
  25:../cleanflight/src/main/fc/rc_adjustments.c **** #include <math.h>
  26:../cleanflight/src/main/fc/rc_adjustments.c **** 
  27:../cleanflight/src/main/fc/rc_adjustments.c **** #include "platform.h"
  28:../cleanflight/src/main/fc/rc_adjustments.c **** 
  29:../cleanflight/src/main/fc/rc_adjustments.c **** #include "blackbox/blackbox.h"
  30:../cleanflight/src/main/fc/rc_adjustments.c **** #include "blackbox/blackbox_fielddefs.h"
  31:../cleanflight/src/main/fc/rc_adjustments.c **** 
  32:../cleanflight/src/main/fc/rc_adjustments.c **** #include "build/build_config.h"
  33:../cleanflight/src/main/fc/rc_adjustments.c **** 
  34:../cleanflight/src/main/fc/rc_adjustments.c **** #include "common/axis.h"
  35:../cleanflight/src/main/fc/rc_adjustments.c **** #include "common/maths.h"
  36:../cleanflight/src/main/fc/rc_adjustments.c **** #include "common/utils.h"
  37:../cleanflight/src/main/fc/rc_adjustments.c **** 
  38:../cleanflight/src/main/fc/rc_adjustments.c **** #include "drivers/time.h"
  39:../cleanflight/src/main/fc/rc_adjustments.c **** 
  40:../cleanflight/src/main/fc/rc_adjustments.c **** #include "config/feature.h"
  41:../cleanflight/src/main/fc/rc_adjustments.c **** #include "pg/pg.h"
  42:../cleanflight/src/main/fc/rc_adjustments.c **** #include "pg/pg_ids.h"
  43:../cleanflight/src/main/fc/rc_adjustments.c **** #include "pg/rx.h"
  44:../cleanflight/src/main/fc/rc_adjustments.c **** 
  45:../cleanflight/src/main/fc/rc_adjustments.c **** #include "flight/pid.h"
  46:../cleanflight/src/main/fc/rc_adjustments.c **** 
  47:../cleanflight/src/main/fc/rc_adjustments.c **** #include "io/beeper.h"
  48:../cleanflight/src/main/fc/rc_adjustments.c **** #include "io/motors.h"
  49:../cleanflight/src/main/fc/rc_adjustments.c **** #include "io/pidaudio.h"
  50:../cleanflight/src/main/fc/rc_adjustments.c **** 
  51:../cleanflight/src/main/fc/rc_adjustments.c **** #include "fc/config.h"
  52:../cleanflight/src/main/fc/rc_adjustments.c **** #include "fc/controlrate_profile.h"
  53:../cleanflight/src/main/fc/rc_adjustments.c **** #include "fc/rc_adjustments.h"
  54:../cleanflight/src/main/fc/rc_adjustments.c **** #include "fc/rc_controls.h"
  55:../cleanflight/src/main/fc/rc_adjustments.c **** #include "fc/fc_rc.h"
  56:../cleanflight/src/main/fc/rc_adjustments.c **** 
  57:../cleanflight/src/main/fc/rc_adjustments.c **** #include "rx/rx.h"
  58:../cleanflight/src/main/fc/rc_adjustments.c **** 
  59:../cleanflight/src/main/fc/rc_adjustments.c **** PG_REGISTER_ARRAY(adjustmentRange_t, MAX_ADJUSTMENT_RANGE_COUNT, adjustmentRanges, PG_ADJUSTMENT_RA
  60:../cleanflight/src/main/fc/rc_adjustments.c **** 
  61:../cleanflight/src/main/fc/rc_adjustments.c **** uint8_t pidAudioPositionToModeMap[7] = {
  62:../cleanflight/src/main/fc/rc_adjustments.c ****     // on a pot with a center detent, it's easy to have center area for off/default, then three pos
  63:../cleanflight/src/main/fc/rc_adjustments.c ****     // current implementation yields RC values as below.
  64:../cleanflight/src/main/fc/rc_adjustments.c **** 
  65:../cleanflight/src/main/fc/rc_adjustments.c ****     PID_AUDIO_PIDSUM_X,     //   900 - ~1071 - Min
  66:../cleanflight/src/main/fc/rc_adjustments.c ****     PID_AUDIO_PIDSUM_Y,     // ~1071 - ~1242
  67:../cleanflight/src/main/fc/rc_adjustments.c ****     PID_AUDIO_PIDSUM_XY,    // ~1242 - ~1414
  68:../cleanflight/src/main/fc/rc_adjustments.c ****     PID_AUDIO_OFF,          // ~1414 - ~1585 - Center
  69:../cleanflight/src/main/fc/rc_adjustments.c ****     PID_AUDIO_OFF,          // ~1585 - ~1757
  70:../cleanflight/src/main/fc/rc_adjustments.c ****     PID_AUDIO_OFF,          // ~1757 - ~1928
  71:../cleanflight/src/main/fc/rc_adjustments.c ****     PID_AUDIO_OFF,          // ~1928 -  2100 - Max
  72:../cleanflight/src/main/fc/rc_adjustments.c **** 
  73:../cleanflight/src/main/fc/rc_adjustments.c ****     // Note: Last 3 positions are currently pending implementations and use PID_AUDIO_OFF for now.
  74:../cleanflight/src/main/fc/rc_adjustments.c **** };
  75:../cleanflight/src/main/fc/rc_adjustments.c **** 
  76:../cleanflight/src/main/fc/rc_adjustments.c **** static pidProfile_t *pidProfile;
  77:../cleanflight/src/main/fc/rc_adjustments.c **** 
  78:../cleanflight/src/main/fc/rc_adjustments.c **** static void blackboxLogInflightAdjustmentEvent(adjustmentFunction_e adjustmentFunction, int32_t new
  79:../cleanflight/src/main/fc/rc_adjustments.c **** {
 338              	 .loc 7 79 0
 339              	 .cfi_startproc
 340              	 
 341              	 
 342 0000 80B5     	 push {r7,lr}
 343              	.LCFI30:
 344              	 .cfi_def_cfa_offset 8
 345              	 .cfi_offset 7,-8
 346              	 .cfi_offset 14,-4
 347 0002 86B0     	 sub sp,sp,#24
 348              	.LCFI31:
 349              	 .cfi_def_cfa_offset 32
 350 0004 00AF     	 add r7,sp,#0
 351              	.LCFI32:
 352              	 .cfi_def_cfa_register 7
 353 0006 0346     	 mov r3,r0
 354 0008 3960     	 str r1,[r7]
 355 000a FB71     	 strb r3,[r7,#7]
  80:../cleanflight/src/main/fc/rc_adjustments.c **** #ifndef USE_BLACKBOX
  81:../cleanflight/src/main/fc/rc_adjustments.c ****     UNUSED(adjustmentFunction);
  82:../cleanflight/src/main/fc/rc_adjustments.c ****     UNUSED(newValue);
  83:../cleanflight/src/main/fc/rc_adjustments.c **** #else
  84:../cleanflight/src/main/fc/rc_adjustments.c ****     if (blackboxConfig()->device) {
 356              	 .loc 7 84 0
 357 000c FFF7FEFF 	 bl blackboxConfig
 358 0010 0346     	 mov r3,r0
 359 0012 9B78     	 ldrb r3,[r3,#2]
 360 0014 002B     	 cmp r3,#0
 361 0016 0BD0     	 beq .L23
 362              	.LBB2:
  85:../cleanflight/src/main/fc/rc_adjustments.c ****         flightLogEvent_inflightAdjustment_t eventData;
  86:../cleanflight/src/main/fc/rc_adjustments.c ****         eventData.adjustmentFunction = adjustmentFunction;
 363              	 .loc 7 86 0
 364 0018 FB79     	 ldrb r3,[r7,#7]
 365 001a 3B75     	 strb r3,[r7,#20]
  87:../cleanflight/src/main/fc/rc_adjustments.c ****         eventData.newValue = newValue;
 366              	 .loc 7 87 0
 367 001c 3B68     	 ldr r3,[r7]
 368 001e FB60     	 str r3,[r7,#12]
  88:../cleanflight/src/main/fc/rc_adjustments.c ****         eventData.floatFlag = false;
 369              	 .loc 7 88 0
 370 0020 0023     	 movs r3,#0
 371 0022 7B75     	 strb r3,[r7,#21]
  89:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogEvent(FLIGHT_LOG_EVENT_INFLIGHT_ADJUSTMENT, (flightLogEventData_t*)&eventData);
 372              	 .loc 7 89 0
 373 0024 07F10C03 	 add r3,r7,#12
 374 0028 0D20     	 movs r0,#13
 375 002a 1946     	 mov r1,r3
 376 002c FFF7FEFF 	 bl blackboxLogEvent
 377              	.L23:
 378              	.LBE2:
  90:../cleanflight/src/main/fc/rc_adjustments.c ****     }
  91:../cleanflight/src/main/fc/rc_adjustments.c **** #endif
  92:../cleanflight/src/main/fc/rc_adjustments.c **** }
 379              	 .loc 7 92 0
 380 0030 1837     	 adds r7,r7,#24
 381              	.LCFI33:
 382              	 .cfi_def_cfa_offset 8
 383 0032 BD46     	 mov sp,r7
 384              	.LCFI34:
 385              	 .cfi_def_cfa_register 13
 386              	 
 387 0034 80BD     	 pop {r7,pc}
 388              	 .cfi_endproc
 389              	.LFE565:
 391 0036 00BF     	 .section .bss.adjustmentStateMask,"aw",%nobits
 394              	adjustmentStateMask:
 395 0000 00       	 .space 1
 396              	 .section .rodata.defaultAdjustmentConfigs,"a",%progbits
 397              	 .align 2
 400              	defaultAdjustmentConfigs:
 401 0000 01       	 .byte 1
 402 0001 00       	 .byte 0
 403 0002 01       	 .byte 1
 404 0003 02       	 .byte 2
 405 0004 00       	 .byte 0
 406 0005 01       	 .byte 1
 407 0006 03       	 .byte 3
 408 0007 00       	 .byte 0
 409 0008 01       	 .byte 1
 410 0009 04       	 .byte 4
 411 000a 00       	 .byte 0
 412 000b 01       	 .byte 1
 413 000c 05       	 .byte 5
 414 000d 00       	 .byte 0
 415 000e 01       	 .byte 1
 416 000f 06       	 .byte 6
 417 0010 00       	 .byte 0
 418 0011 01       	 .byte 1
 419 0012 07       	 .byte 7
 420 0013 00       	 .byte 0
 421 0014 01       	 .byte 1
 422 0015 08       	 .byte 8
 423 0016 00       	 .byte 0
 424 0017 01       	 .byte 1
 425 0018 09       	 .byte 9
 426 0019 00       	 .byte 0
 427 001a 01       	 .byte 1
 428 001b 0A       	 .byte 10
 429 001c 00       	 .byte 0
 430 001d 01       	 .byte 1
 431 001e 0B       	 .byte 11
 432 001f 00       	 .byte 0
 433 0020 01       	 .byte 1
 434 0021 0C       	 .byte 12
 435 0022 01       	 .byte 1
 436 0023 03       	 .byte 3
 437 0024 0D       	 .byte 13
 438 0025 00       	 .byte 0
 439 0026 01       	 .byte 1
 440 0027 0E       	 .byte 14
 441 0028 00       	 .byte 0
 442 0029 01       	 .byte 1
 443 002a 0F       	 .byte 15
 444 002b 00       	 .byte 0
 445 002c 01       	 .byte 1
 446 002d 10       	 .byte 16
 447 002e 00       	 .byte 0
 448 002f 01       	 .byte 1
 449 0030 11       	 .byte 17
 450 0031 00       	 .byte 0
 451 0032 01       	 .byte 1
 452 0033 12       	 .byte 18
 453 0034 00       	 .byte 0
 454 0035 01       	 .byte 1
 455 0036 13       	 .byte 19
 456 0037 00       	 .byte 0
 457 0038 01       	 .byte 1
 458 0039 14       	 .byte 20
 459 003a 00       	 .byte 0
 460 003b 01       	 .byte 1
 461 003c 15       	 .byte 21
 462 003d 00       	 .byte 0
 463 003e 01       	 .byte 1
 464 003f 16       	 .byte 22
 465 0040 00       	 .byte 0
 466 0041 01       	 .byte 1
 467 0042 17       	 .byte 23
 468 0043 00       	 .byte 0
 469 0044 01       	 .byte 1
 470 0045 18       	 .byte 24
 471 0046 01       	 .byte 1
 472 0047 FF       	 .byte -1
 473 0048 1D       	 .byte 29
 474 0049 01       	 .byte 1
 475 004a 07       	 .byte 7
 476 004b 1E       	 .byte 30
 477 004c 00       	 .byte 0
 478 004d 01       	 .byte 1
 479 004e 1F       	 .byte 31
 480 004f 00       	 .byte 0
 481 0050 01       	 .byte 1
 482 0051 20       	 .byte 32
 483 0052 00       	 .byte 0
 484 0053 01       	 .byte 1
 485 0054 00000000 	 .space 12
 485      00000000 
 485      00000000 
 486              	 .section .rodata
 487              	 .align 2
 488              	.LC0:
 489 0000 52432052 	 .ascii "RC RATE\000"
 489      41544500 
 490              	 .align 2
 491              	.LC1:
 492 0008 52432045 	 .ascii "RC EXPO\000"
 492      58504F00 
 493              	 .align 2
 494              	.LC2:
 495 0010 5448524F 	 .ascii "THROTTLE EXPO\000"
 495      54544C45 
 495      20455850 
 495      4F00
 496 001e 0000     	 .align 2
 497              	.LC3:
 498 0020 524F4C4C 	 .ascii "ROLL RATE\000"
 498      20524154 
 498      4500
 499 002a 0000     	 .align 2
 500              	.LC4:
 501 002c 59415720 	 .ascii "YAW RATE\000"
 501      52415445 
 501      00
 502 0035 000000   	 .align 2
 503              	.LC5:
 504 0038 50495443 	 .ascii "PITCH/ROLL P\000"
 504      482F524F 
 504      4C4C2050 
 504      00
 505 0045 000000   	 .align 2
 506              	.LC6:
 507 0048 50495443 	 .ascii "PITCH/ROLL I\000"
 507      482F524F 
 507      4C4C2049 
 507      00
 508 0055 000000   	 .align 2
 509              	.LC7:
 510 0058 50495443 	 .ascii "PITCH/ROLL D\000"
 510      482F524F 
 510      4C4C2044 
 510      00
 511 0065 000000   	 .align 2
 512              	.LC8:
 513 0068 59415720 	 .ascii "YAW P\000"
 513      5000
 514 006e 0000     	 .align 2
 515              	.LC9:
 516 0070 59415720 	 .ascii "YAW I\000"
 516      4900
 517 0076 0000     	 .align 2
 518              	.LC10:
 519 0078 59415720 	 .ascii "YAW D\000"
 519      4400
 520 007e 0000     	 .align 2
 521              	.LC11:
 522 0080 52415445 	 .ascii "RATE PROFILE\000"
 522      2050524F 
 522      46494C45 
 522      00
 523 008d 000000   	 .align 2
 524              	.LC12:
 525 0090 50495443 	 .ascii "PITCH RATE\000"
 525      48205241 
 525      544500
 526 009b 00       	 .align 2
 527              	.LC13:
 528 009c 50495443 	 .ascii "PITCH P\000"
 528      48205000 
 529              	 .align 2
 530              	.LC14:
 531 00a4 50495443 	 .ascii "PITCH I\000"
 531      48204900 
 532              	 .align 2
 533              	.LC15:
 534 00ac 50495443 	 .ascii "PITCH D\000"
 534      48204400 
 535              	 .align 2
 536              	.LC16:
 537 00b4 524F4C4C 	 .ascii "ROLL P\000"
 537      205000
 538 00bb 00       	 .align 2
 539              	.LC17:
 540 00bc 524F4C4C 	 .ascii "ROLL I\000"
 540      204900
 541 00c3 00       	 .align 2
 542              	.LC18:
 543 00c4 524F4C4C 	 .ascii "ROLL D\000"
 543      204400
 544 00cb 00       	 .align 2
 545              	.LC19:
 546 00cc 52432052 	 .ascii "RC RATE YAW\000"
 546      41544520 
 546      59415700 
 547              	 .align 2
 548              	.LC20:
 549 00d8 50495443 	 .ascii "PITCH/ROLL F\000"
 549      482F524F 
 549      4C4C2046 
 549      00
 550 00e5 000000   	 .align 2
 551              	.LC21:
 552 00e8 46462054 	 .ascii "FF TRANSITION\000"
 552      52414E53 
 552      4954494F 
 552      4E00
 553 00f6 0000     	 .align 2
 554              	.LC22:
 555 00f8 484F5249 	 .ascii "HORIZON STRENGTH\000"
 555      5A4F4E20 
 555      53545245 
 555      4E475448 
 555      00
 556 0109 000000   	 .align 2
 557              	.LC23:
 558 010c 524F4C4C 	 .ascii "ROLL RC RATE\000"
 558      20524320 
 558      52415445 
 558      00
 559 0119 000000   	 .align 2
 560              	.LC24:
 561 011c 50495443 	 .ascii "PITCH RC RATE\000"
 561      48205243 
 561      20524154 
 561      4500
 562 012a 0000     	 .align 2
 563              	.LC25:
 564 012c 524F4C4C 	 .ascii "ROLL RC EXPO\000"
 564      20524320 
 564      4558504F 
 564      00
 565 0139 000000   	 .align 2
 566              	.LC26:
 567 013c 50495443 	 .ascii "PITCH RC EXPO\000"
 567      48205243 
 567      20455850 
 567      4F00
 568 014a 0000     	 .align 2
 569              	.LC27:
 570 014c 50494420 	 .ascii "PID AUDIO\000"
 570      41554449 
 570      4F00
 571 0156 0000     	 .align 2
 572              	.LC28:
 573 0158 50495443 	 .ascii "PITCH F\000"
 573      48204600 
 574              	 .align 2
 575              	.LC29:
 576 0160 524F4C4C 	 .ascii "ROLL F\000"
 576      204600
 577 0167 00       	 .align 2
 578              	.LC30:
 579 0168 59415720 	 .ascii "YAW F\000"
 579      4600
 580 016e 0000     	 .section .rodata.adjustmentLabels,"a",%progbits
 581              	 .align 2
 584              	adjustmentLabels:
 585 0000 00000000 	 .word .LC0
 586 0004 08000000 	 .word .LC1
 587 0008 10000000 	 .word .LC2
 588 000c 20000000 	 .word .LC3
 589 0010 2C000000 	 .word .LC4
 590 0014 38000000 	 .word .LC5
 591 0018 48000000 	 .word .LC6
 592 001c 58000000 	 .word .LC7
 593 0020 68000000 	 .word .LC8
 594 0024 70000000 	 .word .LC9
 595 0028 78000000 	 .word .LC10
 596 002c 80000000 	 .word .LC11
 597 0030 90000000 	 .word .LC12
 598 0034 20000000 	 .word .LC3
 599 0038 9C000000 	 .word .LC13
 600 003c A4000000 	 .word .LC14
 601 0040 AC000000 	 .word .LC15
 602 0044 B4000000 	 .word .LC16
 603 0048 BC000000 	 .word .LC17
 604 004c C4000000 	 .word .LC18
 605 0050 CC000000 	 .word .LC19
 606 0054 D8000000 	 .word .LC20
 607 0058 E8000000 	 .word .LC21
 608 005c F8000000 	 .word .LC22
 609 0060 0C010000 	 .word .LC23
 610 0064 1C010000 	 .word .LC24
 611 0068 2C010000 	 .word .LC25
 612 006c 3C010000 	 .word .LC26
 613 0070 4C010000 	 .word .LC27
 614 0074 58010000 	 .word .LC28
 615 0078 60010000 	 .word .LC29
 616 007c 68010000 	 .word .LC30
 617              	 .section .bss.adjustmentRangeNameIndex,"aw",%nobits
 618              	 .align 2
 621              	adjustmentRangeNameIndex:
 622 0000 00000000 	 .space 4
 623              	 .section .data.adjustmentRangeValue,"aw",%progbits
 624              	 .align 2
 627              	adjustmentRangeValue:
 628 0000 FFFFFFFF 	 .word -1
 629              	 .section .bss.adjustmentStates,"aw",%nobits
 630              	 .align 2
 633              	adjustmentStates:
 634 0000 00000000 	 .space 36
 634      00000000 
 634      00000000 
 634      00000000 
 634      00000000 
 635              	 .section .text.configureAdjustment,"ax",%progbits
 636              	 .align 2
 637              	 .thumb
 638              	 .thumb_func
 640              	configureAdjustment:
 641              	.LFB566:
  93:../cleanflight/src/main/fc/rc_adjustments.c **** 
  94:../cleanflight/src/main/fc/rc_adjustments.c **** #if 0
  95:../cleanflight/src/main/fc/rc_adjustments.c **** static void blackboxLogInflightAdjustmentEventFloat(adjustmentFunction_e adjustmentFunction, float 
  96:../cleanflight/src/main/fc/rc_adjustments.c **** {
  97:../cleanflight/src/main/fc/rc_adjustments.c **** #ifndef USE_BLACKBOX
  98:../cleanflight/src/main/fc/rc_adjustments.c ****     UNUSED(adjustmentFunction);
  99:../cleanflight/src/main/fc/rc_adjustments.c ****     UNUSED(newFloatValue);
 100:../cleanflight/src/main/fc/rc_adjustments.c **** #else
 101:../cleanflight/src/main/fc/rc_adjustments.c ****     if (blackboxConfig()->device) {
 102:../cleanflight/src/main/fc/rc_adjustments.c ****         flightLogEvent_inflightAdjustment_t eventData;
 103:../cleanflight/src/main/fc/rc_adjustments.c ****         eventData.adjustmentFunction = adjustmentFunction;
 104:../cleanflight/src/main/fc/rc_adjustments.c ****         eventData.newFloatValue = newFloatValue;
 105:../cleanflight/src/main/fc/rc_adjustments.c ****         eventData.floatFlag = true;
 106:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogEvent(FLIGHT_LOG_EVENT_INFLIGHT_ADJUSTMENT, (flightLogEventData_t*)&eventData);
 107:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 108:../cleanflight/src/main/fc/rc_adjustments.c **** #endif
 109:../cleanflight/src/main/fc/rc_adjustments.c **** }
 110:../cleanflight/src/main/fc/rc_adjustments.c **** #endif
 111:../cleanflight/src/main/fc/rc_adjustments.c **** 
 112:../cleanflight/src/main/fc/rc_adjustments.c **** STATIC_UNIT_TESTED uint8_t adjustmentStateMask = 0;
 113:../cleanflight/src/main/fc/rc_adjustments.c **** 
 114:../cleanflight/src/main/fc/rc_adjustments.c **** #define MARK_ADJUSTMENT_FUNCTION_AS_BUSY(adjustmentIndex) adjustmentStateMask |= (1 << adjustmentIn
 115:../cleanflight/src/main/fc/rc_adjustments.c **** #define MARK_ADJUSTMENT_FUNCTION_AS_READY(adjustmentIndex) adjustmentStateMask &= ~(1 << adjustment
 116:../cleanflight/src/main/fc/rc_adjustments.c **** 
 117:../cleanflight/src/main/fc/rc_adjustments.c **** #define IS_ADJUSTMENT_FUNCTION_BUSY(adjustmentIndex) (adjustmentStateMask & (1 << adjustmentIndex))
 118:../cleanflight/src/main/fc/rc_adjustments.c **** 
 119:../cleanflight/src/main/fc/rc_adjustments.c **** // sync with adjustmentFunction_e
 120:../cleanflight/src/main/fc/rc_adjustments.c **** static const adjustmentConfig_t defaultAdjustmentConfigs[ADJUSTMENT_FUNCTION_COUNT - 1] = {
 121:../cleanflight/src/main/fc/rc_adjustments.c ****     {
 122:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_RC_RATE,
 123:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 124:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 125:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 126:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_RC_EXPO,
 127:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 128:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 129:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 130:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_THROTTLE_EXPO,
 131:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 132:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 133:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 134:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_ROLL_RATE,
 135:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 136:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 137:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 138:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_YAW_RATE,
 139:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 140:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 141:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 142:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_ROLL_P,
 143:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 144:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 145:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 146:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_ROLL_I,
 147:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 148:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 149:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 150:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_ROLL_D,
 151:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 152:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 153:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 154:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_YAW_P,
 155:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 156:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 157:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 158:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_YAW_I,
 159:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 160:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 161:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 162:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_YAW_D,
 163:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 164:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 165:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 166:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_RATE_PROFILE,
 167:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_SELECT,
 168:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .switchPositions = 3 }
 169:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 170:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_RATE,
 171:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 172:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 173:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 174:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_ROLL_RATE,
 175:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 176:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 177:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 178:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_P,
 179:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 180:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 181:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 182:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_I,
 183:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 184:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 185:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 186:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_D,
 187:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 188:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 189:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 190:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_ROLL_P,
 191:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 192:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 193:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 194:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_ROLL_I,
 195:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 196:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 197:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 198:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_ROLL_D,
 199:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 200:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 201:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 202:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_RC_RATE_YAW,
 203:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 204:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 205:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 206:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_ROLL_F,
 207:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 208:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 209:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 210:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_FEEDFORWARD_TRANSITION,
 211:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 212:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 213:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 214:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_HORIZON_STRENGTH,
 215:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_SELECT,
 216:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .switchPositions = 255 }
 217:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 218:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PID_AUDIO,
 219:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_SELECT,
 220:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .switchPositions = ARRAYLEN(pidAudioPositionToModeMap) }
 221:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 222:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_PITCH_F,
 223:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 224:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 225:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 226:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_ROLL_F,
 227:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 228:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 229:../cleanflight/src/main/fc/rc_adjustments.c ****     }, {
 230:../cleanflight/src/main/fc/rc_adjustments.c ****         .adjustmentFunction = ADJUSTMENT_YAW_F,
 231:../cleanflight/src/main/fc/rc_adjustments.c ****         .mode = ADJUSTMENT_MODE_STEP,
 232:../cleanflight/src/main/fc/rc_adjustments.c ****         .data = { .step = 1 }
 233:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 234:../cleanflight/src/main/fc/rc_adjustments.c **** };
 235:../cleanflight/src/main/fc/rc_adjustments.c **** 
 236:../cleanflight/src/main/fc/rc_adjustments.c **** #if defined(USE_OSD) && defined(USE_OSD_ADJUSTMENTS)
 237:../cleanflight/src/main/fc/rc_adjustments.c **** static const char * const adjustmentLabels[] = {
 238:../cleanflight/src/main/fc/rc_adjustments.c ****     "RC RATE",
 239:../cleanflight/src/main/fc/rc_adjustments.c ****     "RC EXPO",
 240:../cleanflight/src/main/fc/rc_adjustments.c ****     "THROTTLE EXPO",
 241:../cleanflight/src/main/fc/rc_adjustments.c ****     "ROLL RATE",
 242:../cleanflight/src/main/fc/rc_adjustments.c ****     "YAW RATE",
 243:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH/ROLL P",
 244:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH/ROLL I",
 245:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH/ROLL D",
 246:../cleanflight/src/main/fc/rc_adjustments.c ****     "YAW P",
 247:../cleanflight/src/main/fc/rc_adjustments.c ****     "YAW I",
 248:../cleanflight/src/main/fc/rc_adjustments.c ****     "YAW D",
 249:../cleanflight/src/main/fc/rc_adjustments.c ****     "RATE PROFILE",
 250:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH RATE",
 251:../cleanflight/src/main/fc/rc_adjustments.c ****     "ROLL RATE",
 252:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH P",
 253:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH I",
 254:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH D",
 255:../cleanflight/src/main/fc/rc_adjustments.c ****     "ROLL P",
 256:../cleanflight/src/main/fc/rc_adjustments.c ****     "ROLL I",
 257:../cleanflight/src/main/fc/rc_adjustments.c ****     "ROLL D",
 258:../cleanflight/src/main/fc/rc_adjustments.c ****     "RC RATE YAW",
 259:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH/ROLL F",
 260:../cleanflight/src/main/fc/rc_adjustments.c ****     "FF TRANSITION",
 261:../cleanflight/src/main/fc/rc_adjustments.c ****     "HORIZON STRENGTH",
 262:../cleanflight/src/main/fc/rc_adjustments.c ****     "ROLL RC RATE",
 263:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH RC RATE",
 264:../cleanflight/src/main/fc/rc_adjustments.c ****     "ROLL RC EXPO",
 265:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH RC EXPO",
 266:../cleanflight/src/main/fc/rc_adjustments.c ****     "PID AUDIO",
 267:../cleanflight/src/main/fc/rc_adjustments.c ****     "PITCH F",
 268:../cleanflight/src/main/fc/rc_adjustments.c ****     "ROLL F",
 269:../cleanflight/src/main/fc/rc_adjustments.c ****     "YAW F"
 270:../cleanflight/src/main/fc/rc_adjustments.c **** };
 271:../cleanflight/src/main/fc/rc_adjustments.c **** 
 272:../cleanflight/src/main/fc/rc_adjustments.c **** static int adjustmentRangeNameIndex = 0;
 273:../cleanflight/src/main/fc/rc_adjustments.c **** static int adjustmentRangeValue = -1;
 274:../cleanflight/src/main/fc/rc_adjustments.c **** #endif
 275:../cleanflight/src/main/fc/rc_adjustments.c **** 
 276:../cleanflight/src/main/fc/rc_adjustments.c **** #define ADJUSTMENT_FUNCTION_CONFIG_INDEX_OFFSET 1
 277:../cleanflight/src/main/fc/rc_adjustments.c **** 
 278:../cleanflight/src/main/fc/rc_adjustments.c **** STATIC_UNIT_TESTED adjustmentState_t adjustmentStates[MAX_SIMULTANEOUS_ADJUSTMENT_COUNT];
 279:../cleanflight/src/main/fc/rc_adjustments.c **** 
 280:../cleanflight/src/main/fc/rc_adjustments.c **** STATIC_UNIT_TESTED void configureAdjustment(uint8_t index, uint8_t auxSwitchChannelIndex, const adj
 281:../cleanflight/src/main/fc/rc_adjustments.c **** {
 642              	 .loc 7 281 0
 643              	 .cfi_startproc
 644              	 
 645              	 
 646              	 
 647 0000 80B4     	 push {r7}
 648              	.LCFI35:
 649              	 .cfi_def_cfa_offset 4
 650              	 .cfi_offset 7,-4
 651 0002 85B0     	 sub sp,sp,#20
 652              	.LCFI36:
 653              	 .cfi_def_cfa_offset 24
 654 0004 00AF     	 add r7,sp,#0
 655              	.LCFI37:
 656              	 .cfi_def_cfa_register 7
 657 0006 0346     	 mov r3,r0
 658 0008 3A60     	 str r2,[r7]
 659 000a FB71     	 strb r3,[r7,#7]
 660 000c 0B46     	 mov r3,r1
 661 000e BB71     	 strb r3,[r7,#6]
 282:../cleanflight/src/main/fc/rc_adjustments.c ****     adjustmentState_t *adjustmentState = &adjustmentStates[index];
 662              	 .loc 7 282 0
 663 0010 FA79     	 ldrb r2,[r7,#7]
 664 0012 1346     	 mov r3,r2
 665 0014 DB00     	 lsls r3,r3,#3
 666 0016 1344     	 add r3,r3,r2
 667 0018 164A     	 ldr r2,.L28
 668 001a 1344     	 add r3,r3,r2
 669 001c FB60     	 str r3,[r7,#12]
 283:../cleanflight/src/main/fc/rc_adjustments.c **** 
 284:../cleanflight/src/main/fc/rc_adjustments.c ****     if (adjustmentState->config == adjustmentConfig) {
 670              	 .loc 7 284 0
 671 001e FB68     	 ldr r3,[r7,#12]
 672 0020 D3F80120 	 ldr r2,[r3,#1]
 673 0024 3B68     	 ldr r3,[r7]
 674 0026 9A42     	 cmp r2,r3
 675 0028 00D1     	 bne .L26
 285:../cleanflight/src/main/fc/rc_adjustments.c ****         // already configured
 286:../cleanflight/src/main/fc/rc_adjustments.c ****         return;
 676              	 .loc 7 286 0
 677 002a 1EE0     	 b .L25
 678              	.L26:
 287:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 288:../cleanflight/src/main/fc/rc_adjustments.c ****     adjustmentState->auxChannelIndex = auxSwitchChannelIndex;
 679              	 .loc 7 288 0
 680 002c FB68     	 ldr r3,[r7,#12]
 681 002e BA79     	 ldrb r2,[r7,#6]
 682 0030 1A70     	 strb r2,[r3]
 289:../cleanflight/src/main/fc/rc_adjustments.c ****     adjustmentState->config = adjustmentConfig;
 683              	 .loc 7 289 0
 684 0032 FB68     	 ldr r3,[r7,#12]
 685 0034 3A68     	 ldr r2,[r7]
 686 0036 C3F80120 	 str r2,[r3,#1]
 290:../cleanflight/src/main/fc/rc_adjustments.c ****     adjustmentState->timeoutAt = 0;
 687              	 .loc 7 290 0
 688 003a FB68     	 ldr r3,[r7,#12]
 689 003c 0022     	 movs r2,#0
 690 003e 5A71     	 strb r2,[r3,#5]
 691 0040 0022     	 movs r2,#0
 692 0042 9A71     	 strb r2,[r3,#6]
 693 0044 0022     	 movs r2,#0
 694 0046 DA71     	 strb r2,[r3,#7]
 695 0048 0022     	 movs r2,#0
 696 004a 1A72     	 strb r2,[r3,#8]
 291:../cleanflight/src/main/fc/rc_adjustments.c **** 
 292:../cleanflight/src/main/fc/rc_adjustments.c ****     MARK_ADJUSTMENT_FUNCTION_AS_READY(index);
 697              	 .loc 7 292 0
 698 004c FB79     	 ldrb r3,[r7,#7]
 699 004e 0122     	 movs r2,#1
 700 0050 02FA03F3 	 lsl r3,r2,r3
 701 0054 DBB2     	 uxtb r3,r3
 702 0056 DB43     	 mvns r3,r3
 703 0058 DAB2     	 uxtb r2,r3
 704 005a 074B     	 ldr r3,.L28+4
 705 005c 1B78     	 ldrb r3,[r3]
 706 005e DBB2     	 uxtb r3,r3
 707 0060 1340     	 ands r3,r3,r2
 708 0062 DBB2     	 uxtb r3,r3
 709 0064 DAB2     	 uxtb r2,r3
 710 0066 044B     	 ldr r3,.L28+4
 711 0068 1A70     	 strb r2,[r3]
 712              	.L25:
 293:../cleanflight/src/main/fc/rc_adjustments.c **** }
 713              	 .loc 7 293 0
 714 006a 1437     	 adds r7,r7,#20
 715              	.LCFI38:
 716              	 .cfi_def_cfa_offset 4
 717 006c BD46     	 mov sp,r7
 718              	.LCFI39:
 719              	 .cfi_def_cfa_register 13
 720              	 
 721 006e 5DF8047B 	 ldr r7,[sp],#4
 722              	.LCFI40:
 723              	 .cfi_restore 7
 724              	 .cfi_def_cfa_offset 0
 725 0072 7047     	 bx lr
 726              	.L29:
 727              	 .align 2
 728              	.L28:
 729 0074 00000000 	 .word adjustmentStates
 730 0078 00000000 	 .word adjustmentStateMask
 731              	 .cfi_endproc
 732              	.LFE566:
 734              	 .section .text.applyStepAdjustment,"ax",%progbits
 735              	 .align 2
 736              	 .thumb
 737              	 .thumb_func
 739              	applyStepAdjustment:
 740              	.LFB567:
 294:../cleanflight/src/main/fc/rc_adjustments.c **** 
 295:../cleanflight/src/main/fc/rc_adjustments.c **** static int applyStepAdjustment(controlRateConfig_t *controlRateConfig, uint8_t adjustmentFunction, 
 296:../cleanflight/src/main/fc/rc_adjustments.c **** {
 741              	 .loc 7 296 0
 742              	 .cfi_startproc
 743              	 
 744              	 
 745 0000 80B5     	 push {r7,lr}
 746              	.LCFI41:
 747              	 .cfi_def_cfa_offset 8
 748              	 .cfi_offset 7,-8
 749              	 .cfi_offset 14,-4
 750 0002 86B0     	 sub sp,sp,#24
 751              	.LCFI42:
 752              	 .cfi_def_cfa_offset 32
 753 0004 00AF     	 add r7,sp,#0
 754              	.LCFI43:
 755              	 .cfi_def_cfa_register 7
 756 0006 F860     	 str r0,[r7,#12]
 757 0008 0B46     	 mov r3,r1
 758 000a 7A60     	 str r2,[r7,#4]
 759 000c FB72     	 strb r3,[r7,#11]
 297:../cleanflight/src/main/fc/rc_adjustments.c **** 
 298:../cleanflight/src/main/fc/rc_adjustments.c ****     beeperConfirmationBeeps(delta > 0 ? 2 : 1);
 760              	 .loc 7 298 0
 761 000e 7B68     	 ldr r3,[r7,#4]
 762 0010 002B     	 cmp r3,#0
 763 0012 01DD     	 ble .L31
 764              	 .loc 7 298 0 is_stmt 0 discriminator 1
 765 0014 0223     	 movs r3,#2
 766 0016 00E0     	 b .L32
 767              	.L31:
 768              	 .loc 7 298 0 discriminator 2
 769 0018 0123     	 movs r3,#1
 770              	.L32:
 771              	 .loc 7 298 0 discriminator 4
 772 001a 1846     	 mov r0,r3
 773 001c FFF7FEFF 	 bl beeperConfirmationBeeps
 299:../cleanflight/src/main/fc/rc_adjustments.c ****     int newValue;
 300:../cleanflight/src/main/fc/rc_adjustments.c ****     switch (adjustmentFunction) {
 774              	 .loc 7 300 0 is_stmt 1 discriminator 4
 775 0020 FB7A     	 ldrb r3,[r7,#11]
 776 0022 013B     	 subs r3,r3,#1
 777 0024 1F2B     	 cmp r3,#31
 778 0026 00F23882 	 bhi .L33
 779 002a 01A2     	 adr r2,.L35
 780 002c 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 781              	 .p2align 2
 782              	.L35:
 783 0030 B1000000 	 .word .L34+1
 784 0034 07010000 	 .word .L36+1
 785 0038 5D010000 	 .word .L37+1
 786 003c 89010000 	 .word .L38+1
 787 0040 DF010000 	 .word .L39+1
 788 0044 07020000 	 .word .L40+1
 789 0048 65020000 	 .word .L41+1
 790 004c C3020000 	 .word .L42+1
 791 0050 21030000 	 .word .L43+1
 792 0054 4D030000 	 .word .L44+1
 793 0058 79030000 	 .word .L45+1
 794 005c 9B040000 	 .word .L33+1
 795 0060 89010000 	 .word .L38+1
 796 0064 B7010000 	 .word .L46+1
 797 0068 07020000 	 .word .L40+1
 798 006c 65020000 	 .word .L41+1
 799 0070 C3020000 	 .word .L42+1
 800 0074 39020000 	 .word .L47+1
 801 0078 97020000 	 .word .L48+1
 802 007c F5020000 	 .word .L49+1
 803 0080 A5030000 	 .word .L50+1
 804 0084 CD030000 	 .word .L51+1
 805 0088 6B040000 	 .word .L52+1
 806 008c 9B040000 	 .word .L33+1
 807 0090 B1000000 	 .word .L34+1
 808 0094 DF000000 	 .word .L53+1
 809 0098 07010000 	 .word .L36+1
 810 009c 35010000 	 .word .L54+1
 811 00a0 9B040000 	 .word .L33+1
 812 00a4 CD030000 	 .word .L51+1
 813 00a8 03040000 	 .word .L55+1
 814 00ac 37040000 	 .word .L56+1
 815              	 .p2align 1
 816              	.L34:
 301:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_RC_RATE:
 302:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_RC_RATE:
 303:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)controlRateConfig->rcRates[FD_ROLL] + delta, 0, CONTROL_RATE_CONF
 817              	 .loc 7 303 0
 818 00b0 FB68     	 ldr r3,[r7,#12]
 819 00b2 DB78     	 ldrb r3,[r3,#3]
 820 00b4 1A46     	 mov r2,r3
 821 00b6 7B68     	 ldr r3,[r7,#4]
 822 00b8 1344     	 add r3,r3,r2
 823 00ba 1846     	 mov r0,r3
 824 00bc 0021     	 movs r1,#0
 825 00be FF22     	 movs r2,#255
 826 00c0 FFF7FEFF 	 bl constrain
 827 00c4 7861     	 str r0,[r7,#20]
 304:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcRates[FD_ROLL] = newValue;
 828              	 .loc 7 304 0
 829 00c6 7B69     	 ldr r3,[r7,#20]
 830 00c8 DAB2     	 uxtb r2,r3
 831 00ca FB68     	 ldr r3,[r7,#12]
 832 00cc DA70     	 strb r2,[r3,#3]
 305:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_RC_RATE, newValue);
 833              	 .loc 7 305 0
 834 00ce 1920     	 movs r0,#25
 835 00d0 7969     	 ldr r1,[r7,#20]
 836 00d2 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 306:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_ROLL_RC_RATE) {
 837              	 .loc 7 306 0
 838 00d6 FB7A     	 ldrb r3,[r7,#11]
 839 00d8 192B     	 cmp r3,#25
 840 00da 00D1     	 bne .L53
 307:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 841              	 .loc 7 307 0
 842 00dc E1E1     	 b .L57
 843              	.L53:
 308:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 309:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_RC_EXPO
 310:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 311:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_RC_RATE:
 312:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)controlRateConfig->rcRates[FD_PITCH] + delta, 0, CONTROL_RATE_CON
 844              	 .loc 7 312 0
 845 00de FB68     	 ldr r3,[r7,#12]
 846 00e0 1B79     	 ldrb r3,[r3,#4]
 847 00e2 1A46     	 mov r2,r3
 848 00e4 7B68     	 ldr r3,[r7,#4]
 849 00e6 1344     	 add r3,r3,r2
 850 00e8 1846     	 mov r0,r3
 851 00ea 0021     	 movs r1,#0
 852 00ec FF22     	 movs r2,#255
 853 00ee FFF7FEFF 	 bl constrain
 854 00f2 7861     	 str r0,[r7,#20]
 313:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcRates[FD_PITCH] = newValue;
 855              	 .loc 7 313 0
 856 00f4 7B69     	 ldr r3,[r7,#20]
 857 00f6 DAB2     	 uxtb r2,r3
 858 00f8 FB68     	 ldr r3,[r7,#12]
 859 00fa 1A71     	 strb r2,[r3,#4]
 314:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_RC_RATE, newValue);
 860              	 .loc 7 314 0
 861 00fc 1A20     	 movs r0,#26
 862 00fe 7969     	 ldr r1,[r7,#20]
 863 0100 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 315:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 864              	 .loc 7 315 0
 865 0104 CDE1     	 b .L57
 866              	.L36:
 316:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_RC_EXPO:
 317:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_RC_EXPO:
 318:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)controlRateConfig->rcExpo[FD_ROLL] + delta, 0, CONTROL_RATE_CONFI
 867              	 .loc 7 318 0
 868 0106 FB68     	 ldr r3,[r7,#12]
 869 0108 9B79     	 ldrb r3,[r3,#6]
 870 010a 1A46     	 mov r2,r3
 871 010c 7B68     	 ldr r3,[r7,#4]
 872 010e 1344     	 add r3,r3,r2
 873 0110 1846     	 mov r0,r3
 874 0112 0021     	 movs r1,#0
 875 0114 6422     	 movs r2,#100
 876 0116 FFF7FEFF 	 bl constrain
 877 011a 7861     	 str r0,[r7,#20]
 319:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcExpo[FD_ROLL] = newValue;
 878              	 .loc 7 319 0
 879 011c 7B69     	 ldr r3,[r7,#20]
 880 011e DAB2     	 uxtb r2,r3
 881 0120 FB68     	 ldr r3,[r7,#12]
 882 0122 9A71     	 strb r2,[r3,#6]
 320:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_RC_EXPO, newValue);
 883              	 .loc 7 320 0
 884 0124 1B20     	 movs r0,#27
 885 0126 7969     	 ldr r1,[r7,#20]
 886 0128 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 321:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_ROLL_RC_EXPO) {
 887              	 .loc 7 321 0
 888 012c FB7A     	 ldrb r3,[r7,#11]
 889 012e 1B2B     	 cmp r3,#27
 890 0130 00D1     	 bne .L54
 322:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 891              	 .loc 7 322 0
 892 0132 B6E1     	 b .L57
 893              	.L54:
 323:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 324:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_RC_EXPO
 325:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 326:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_RC_EXPO:
 327:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)controlRateConfig->rcExpo[FD_PITCH] + delta, 0, CONTROL_RATE_CONF
 894              	 .loc 7 327 0
 895 0134 FB68     	 ldr r3,[r7,#12]
 896 0136 DB79     	 ldrb r3,[r3,#7]
 897 0138 1A46     	 mov r2,r3
 898 013a 7B68     	 ldr r3,[r7,#4]
 899 013c 1344     	 add r3,r3,r2
 900 013e 1846     	 mov r0,r3
 901 0140 0021     	 movs r1,#0
 902 0142 6422     	 movs r2,#100
 903 0144 FFF7FEFF 	 bl constrain
 904 0148 7861     	 str r0,[r7,#20]
 328:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcExpo[FD_PITCH] = newValue;
 905              	 .loc 7 328 0
 906 014a 7B69     	 ldr r3,[r7,#20]
 907 014c DAB2     	 uxtb r2,r3
 908 014e FB68     	 ldr r3,[r7,#12]
 909 0150 DA71     	 strb r2,[r3,#7]
 329:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_RC_EXPO, newValue);
 910              	 .loc 7 329 0
 911 0152 1C20     	 movs r0,#28
 912 0154 7969     	 ldr r1,[r7,#20]
 913 0156 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 330:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 914              	 .loc 7 330 0
 915 015a A2E1     	 b .L57
 916              	.L37:
 331:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_THROTTLE_EXPO:
 332:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)controlRateConfig->thrExpo8 + delta, 0, 100); // FIXME magic numb
 917              	 .loc 7 332 0
 918 015c FB68     	 ldr r3,[r7,#12]
 919 015e 5B78     	 ldrb r3,[r3,#1]
 920 0160 1A46     	 mov r2,r3
 921 0162 7B68     	 ldr r3,[r7,#4]
 922 0164 1344     	 add r3,r3,r2
 923 0166 1846     	 mov r0,r3
 924 0168 0021     	 movs r1,#0
 925 016a 6422     	 movs r2,#100
 926 016c FFF7FEFF 	 bl constrain
 927 0170 7861     	 str r0,[r7,#20]
 333:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->thrExpo8 = newValue;
 928              	 .loc 7 333 0
 929 0172 7B69     	 ldr r3,[r7,#20]
 930 0174 DAB2     	 uxtb r2,r3
 931 0176 FB68     	 ldr r3,[r7,#12]
 932 0178 5A70     	 strb r2,[r3,#1]
 334:../cleanflight/src/main/fc/rc_adjustments.c ****         initRcProcessing();
 933              	 .loc 7 334 0
 934 017a FFF7FEFF 	 bl initRcProcessing
 335:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_THROTTLE_EXPO, newValue);
 935              	 .loc 7 335 0
 936 017e 0320     	 movs r0,#3
 937 0180 7969     	 ldr r1,[r7,#20]
 938 0182 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 336:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 939              	 .loc 7 336 0
 940 0186 8CE1     	 b .L57
 941              	.L38:
 337:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_RATE:
 338:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_RATE:
 339:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)controlRateConfig->rates[FD_PITCH] + delta, 0, CONTROL_RATE_CONFI
 942              	 .loc 7 339 0
 943 0188 FB68     	 ldr r3,[r7,#12]
 944 018a 9B7A     	 ldrb r3,[r3,#10]
 945 018c 1A46     	 mov r2,r3
 946 018e 7B68     	 ldr r3,[r7,#4]
 947 0190 1344     	 add r3,r3,r2
 948 0192 1846     	 mov r0,r3
 949 0194 0021     	 movs r1,#0
 950 0196 FF22     	 movs r2,#255
 951 0198 FFF7FEFF 	 bl constrain
 952 019c 7861     	 str r0,[r7,#20]
 340:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rates[FD_PITCH] = newValue;
 953              	 .loc 7 340 0
 954 019e 7B69     	 ldr r3,[r7,#20]
 955 01a0 DAB2     	 uxtb r2,r3
 956 01a2 FB68     	 ldr r3,[r7,#12]
 957 01a4 9A72     	 strb r2,[r3,#10]
 341:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_RATE, newValue);
 958              	 .loc 7 341 0
 959 01a6 0D20     	 movs r0,#13
 960 01a8 7969     	 ldr r1,[r7,#20]
 961 01aa FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 342:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_RATE) {
 962              	 .loc 7 342 0
 963 01ae FB7A     	 ldrb r3,[r7,#11]
 964 01b0 0D2B     	 cmp r3,#13
 965 01b2 00D1     	 bne .L46
 343:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 966              	 .loc 7 343 0
 967 01b4 75E1     	 b .L57
 968              	.L46:
 344:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 345:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_RATE
 346:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 347:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_RATE:
 348:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)controlRateConfig->rates[FD_ROLL] + delta, 0, CONTROL_RATE_CONFIG
 969              	 .loc 7 348 0
 970 01b6 FB68     	 ldr r3,[r7,#12]
 971 01b8 5B7A     	 ldrb r3,[r3,#9]
 972 01ba 1A46     	 mov r2,r3
 973 01bc 7B68     	 ldr r3,[r7,#4]
 974 01be 1344     	 add r3,r3,r2
 975 01c0 1846     	 mov r0,r3
 976 01c2 0021     	 movs r1,#0
 977 01c4 FF22     	 movs r2,#255
 978 01c6 FFF7FEFF 	 bl constrain
 979 01ca 7861     	 str r0,[r7,#20]
 349:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rates[FD_ROLL] = newValue;
 980              	 .loc 7 349 0
 981 01cc 7B69     	 ldr r3,[r7,#20]
 982 01ce DAB2     	 uxtb r2,r3
 983 01d0 FB68     	 ldr r3,[r7,#12]
 984 01d2 5A72     	 strb r2,[r3,#9]
 350:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_RATE, newValue);
 985              	 .loc 7 350 0
 986 01d4 0E20     	 movs r0,#14
 987 01d6 7969     	 ldr r1,[r7,#20]
 988 01d8 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 351:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 989              	 .loc 7 351 0
 990 01dc 61E1     	 b .L57
 991              	.L39:
 352:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_RATE:
 353:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)controlRateConfig->rates[FD_YAW] + delta, 0, CONTROL_RATE_CONFIG_
 992              	 .loc 7 353 0
 993 01de FB68     	 ldr r3,[r7,#12]
 994 01e0 DB7A     	 ldrb r3,[r3,#11]
 995 01e2 1A46     	 mov r2,r3
 996 01e4 7B68     	 ldr r3,[r7,#4]
 997 01e6 1344     	 add r3,r3,r2
 998 01e8 1846     	 mov r0,r3
 999 01ea 0021     	 movs r1,#0
 1000 01ec FF22     	 movs r2,#255
 1001 01ee FFF7FEFF 	 bl constrain
 1002 01f2 7861     	 str r0,[r7,#20]
 354:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rates[FD_YAW] = newValue;
 1003              	 .loc 7 354 0
 1004 01f4 7B69     	 ldr r3,[r7,#20]
 1005 01f6 DAB2     	 uxtb r2,r3
 1006 01f8 FB68     	 ldr r3,[r7,#12]
 1007 01fa DA72     	 strb r2,[r3,#11]
 355:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_RATE, newValue);
 1008              	 .loc 7 355 0
 1009 01fc 0520     	 movs r0,#5
 1010 01fe 7969     	 ldr r1,[r7,#20]
 1011 0200 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 356:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1012              	 .loc 7 356 0
 1013 0204 4DE1     	 b .L57
 1014              	.L40:
 357:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_P:
 358:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_P:
 359:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)pidProfile->pid[PID_PITCH].P + delta, 0, 200); // FIXME magic num
 1015              	 .loc 7 359 0
 1016 0206 A94B     	 ldr r3,.L59
 1017 0208 1B68     	 ldr r3,[r3]
 1018 020a 5B7B     	 ldrb r3,[r3,#13]
 1019 020c 1A46     	 mov r2,r3
 1020 020e 7B68     	 ldr r3,[r7,#4]
 1021 0210 1344     	 add r3,r3,r2
 1022 0212 1846     	 mov r0,r3
 1023 0214 0021     	 movs r1,#0
 1024 0216 C822     	 movs r2,#200
 1025 0218 FFF7FEFF 	 bl constrain
 1026 021c 7861     	 str r0,[r7,#20]
 360:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_PITCH].P = newValue;
 1027              	 .loc 7 360 0
 1028 021e A34B     	 ldr r3,.L59
 1029 0220 1B68     	 ldr r3,[r3]
 1030 0222 7A69     	 ldr r2,[r7,#20]
 1031 0224 D2B2     	 uxtb r2,r2
 1032 0226 5A73     	 strb r2,[r3,#13]
 361:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_P, newValue);
 1033              	 .loc 7 361 0
 1034 0228 0F20     	 movs r0,#15
 1035 022a 7969     	 ldr r1,[r7,#20]
 1036 022c FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 362:../cleanflight/src/main/fc/rc_adjustments.c **** 
 363:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_P) {
 1037              	 .loc 7 363 0
 1038 0230 FB7A     	 ldrb r3,[r7,#11]
 1039 0232 0F2B     	 cmp r3,#15
 1040 0234 00D1     	 bne .L47
 364:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1041              	 .loc 7 364 0
 1042 0236 34E1     	 b .L57
 1043              	.L47:
 365:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 366:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_P
 367:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 368:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_P:
 369:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)pidProfile->pid[PID_ROLL].P + delta, 0, 200); // FIXME magic numb
 1044              	 .loc 7 369 0
 1045 0238 9C4B     	 ldr r3,.L59
 1046 023a 1B68     	 ldr r3,[r3]
 1047 023c 1B7A     	 ldrb r3,[r3,#8]
 1048 023e 1A46     	 mov r2,r3
 1049 0240 7B68     	 ldr r3,[r7,#4]
 1050 0242 1344     	 add r3,r3,r2
 1051 0244 1846     	 mov r0,r3
 1052 0246 0021     	 movs r1,#0
 1053 0248 C822     	 movs r2,#200
 1054 024a FFF7FEFF 	 bl constrain
 1055 024e 7861     	 str r0,[r7,#20]
 370:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_ROLL].P = newValue;
 1056              	 .loc 7 370 0
 1057 0250 964B     	 ldr r3,.L59
 1058 0252 1B68     	 ldr r3,[r3]
 1059 0254 7A69     	 ldr r2,[r7,#20]
 1060 0256 D2B2     	 uxtb r2,r2
 1061 0258 1A72     	 strb r2,[r3,#8]
 371:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_P, newValue);
 1062              	 .loc 7 371 0
 1063 025a 1220     	 movs r0,#18
 1064 025c 7969     	 ldr r1,[r7,#20]
 1065 025e FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 372:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1066              	 .loc 7 372 0
 1067 0262 1EE1     	 b .L57
 1068              	.L41:
 373:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_I:
 374:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_I:
 375:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)pidProfile->pid[PID_PITCH].I + delta, 0, 200); // FIXME magic num
 1069              	 .loc 7 375 0
 1070 0264 914B     	 ldr r3,.L59
 1071 0266 1B68     	 ldr r3,[r3]
 1072 0268 9B7B     	 ldrb r3,[r3,#14]
 1073 026a 1A46     	 mov r2,r3
 1074 026c 7B68     	 ldr r3,[r7,#4]
 1075 026e 1344     	 add r3,r3,r2
 1076 0270 1846     	 mov r0,r3
 1077 0272 0021     	 movs r1,#0
 1078 0274 C822     	 movs r2,#200
 1079 0276 FFF7FEFF 	 bl constrain
 1080 027a 7861     	 str r0,[r7,#20]
 376:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_PITCH].I = newValue;
 1081              	 .loc 7 376 0
 1082 027c 8B4B     	 ldr r3,.L59
 1083 027e 1B68     	 ldr r3,[r3]
 1084 0280 7A69     	 ldr r2,[r7,#20]
 1085 0282 D2B2     	 uxtb r2,r2
 1086 0284 9A73     	 strb r2,[r3,#14]
 377:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_I, newValue);
 1087              	 .loc 7 377 0
 1088 0286 1020     	 movs r0,#16
 1089 0288 7969     	 ldr r1,[r7,#20]
 1090 028a FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 378:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_I) {
 1091              	 .loc 7 378 0
 1092 028e FB7A     	 ldrb r3,[r7,#11]
 1093 0290 102B     	 cmp r3,#16
 1094 0292 00D1     	 bne .L48
 379:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1095              	 .loc 7 379 0
 1096 0294 05E1     	 b .L57
 1097              	.L48:
 380:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 381:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_I
 382:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 383:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_I:
 384:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)pidProfile->pid[PID_ROLL].I + delta, 0, 200); // FIXME magic numb
 1098              	 .loc 7 384 0
 1099 0296 854B     	 ldr r3,.L59
 1100 0298 1B68     	 ldr r3,[r3]
 1101 029a 5B7A     	 ldrb r3,[r3,#9]
 1102 029c 1A46     	 mov r2,r3
 1103 029e 7B68     	 ldr r3,[r7,#4]
 1104 02a0 1344     	 add r3,r3,r2
 1105 02a2 1846     	 mov r0,r3
 1106 02a4 0021     	 movs r1,#0
 1107 02a6 C822     	 movs r2,#200
 1108 02a8 FFF7FEFF 	 bl constrain
 1109 02ac 7861     	 str r0,[r7,#20]
 385:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_ROLL].I = newValue;
 1110              	 .loc 7 385 0
 1111 02ae 7F4B     	 ldr r3,.L59
 1112 02b0 1B68     	 ldr r3,[r3]
 1113 02b2 7A69     	 ldr r2,[r7,#20]
 1114 02b4 D2B2     	 uxtb r2,r2
 1115 02b6 5A72     	 strb r2,[r3,#9]
 386:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_I, newValue);
 1116              	 .loc 7 386 0
 1117 02b8 1320     	 movs r0,#19
 1118 02ba 7969     	 ldr r1,[r7,#20]
 1119 02bc FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 387:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1120              	 .loc 7 387 0
 1121 02c0 EFE0     	 b .L57
 1122              	.L42:
 388:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_D:
 389:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_D:
 390:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)pidProfile->pid[PID_PITCH].D + delta, 0, 200); // FIXME magic num
 1123              	 .loc 7 390 0
 1124 02c2 7A4B     	 ldr r3,.L59
 1125 02c4 1B68     	 ldr r3,[r3]
 1126 02c6 DB7B     	 ldrb r3,[r3,#15]
 1127 02c8 1A46     	 mov r2,r3
 1128 02ca 7B68     	 ldr r3,[r7,#4]
 1129 02cc 1344     	 add r3,r3,r2
 1130 02ce 1846     	 mov r0,r3
 1131 02d0 0021     	 movs r1,#0
 1132 02d2 C822     	 movs r2,#200
 1133 02d4 FFF7FEFF 	 bl constrain
 1134 02d8 7861     	 str r0,[r7,#20]
 391:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_PITCH].D = newValue;
 1135              	 .loc 7 391 0
 1136 02da 744B     	 ldr r3,.L59
 1137 02dc 1B68     	 ldr r3,[r3]
 1138 02de 7A69     	 ldr r2,[r7,#20]
 1139 02e0 D2B2     	 uxtb r2,r2
 1140 02e2 DA73     	 strb r2,[r3,#15]
 392:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_D, newValue);
 1141              	 .loc 7 392 0
 1142 02e4 1120     	 movs r0,#17
 1143 02e6 7969     	 ldr r1,[r7,#20]
 1144 02e8 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 393:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_D) {
 1145              	 .loc 7 393 0
 1146 02ec FB7A     	 ldrb r3,[r7,#11]
 1147 02ee 112B     	 cmp r3,#17
 1148 02f0 00D1     	 bne .L49
 394:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1149              	 .loc 7 394 0
 1150 02f2 D6E0     	 b .L57
 1151              	.L49:
 395:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 396:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_D
 397:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 398:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_D:
 399:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)pidProfile->pid[PID_ROLL].D + delta, 0, 200); // FIXME magic numb
 1152              	 .loc 7 399 0
 1153 02f4 6D4B     	 ldr r3,.L59
 1154 02f6 1B68     	 ldr r3,[r3]
 1155 02f8 9B7A     	 ldrb r3,[r3,#10]
 1156 02fa 1A46     	 mov r2,r3
 1157 02fc 7B68     	 ldr r3,[r7,#4]
 1158 02fe 1344     	 add r3,r3,r2
 1159 0300 1846     	 mov r0,r3
 1160 0302 0021     	 movs r1,#0
 1161 0304 C822     	 movs r2,#200
 1162 0306 FFF7FEFF 	 bl constrain
 1163 030a 7861     	 str r0,[r7,#20]
 400:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_ROLL].D = newValue;
 1164              	 .loc 7 400 0
 1165 030c 674B     	 ldr r3,.L59
 1166 030e 1B68     	 ldr r3,[r3]
 1167 0310 7A69     	 ldr r2,[r7,#20]
 1168 0312 D2B2     	 uxtb r2,r2
 1169 0314 9A72     	 strb r2,[r3,#10]
 401:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_D, newValue);
 1170              	 .loc 7 401 0
 1171 0316 1420     	 movs r0,#20
 1172 0318 7969     	 ldr r1,[r7,#20]
 1173 031a FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 402:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1174              	 .loc 7 402 0
 1175 031e C0E0     	 b .L57
 1176              	.L43:
 403:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_P:
 404:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)pidProfile->pid[PID_YAW].P + delta, 0, 200); // FIXME magic numbe
 1177              	 .loc 7 404 0
 1178 0320 624B     	 ldr r3,.L59
 1179 0322 1B68     	 ldr r3,[r3]
 1180 0324 9B7C     	 ldrb r3,[r3,#18]
 1181 0326 1A46     	 mov r2,r3
 1182 0328 7B68     	 ldr r3,[r7,#4]
 1183 032a 1344     	 add r3,r3,r2
 1184 032c 1846     	 mov r0,r3
 1185 032e 0021     	 movs r1,#0
 1186 0330 C822     	 movs r2,#200
 1187 0332 FFF7FEFF 	 bl constrain
 1188 0336 7861     	 str r0,[r7,#20]
 405:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_YAW].P = newValue;
 1189              	 .loc 7 405 0
 1190 0338 5C4B     	 ldr r3,.L59
 1191 033a 1B68     	 ldr r3,[r3]
 1192 033c 7A69     	 ldr r2,[r7,#20]
 1193 033e D2B2     	 uxtb r2,r2
 1194 0340 9A74     	 strb r2,[r3,#18]
 406:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_P, newValue);
 1195              	 .loc 7 406 0
 1196 0342 0920     	 movs r0,#9
 1197 0344 7969     	 ldr r1,[r7,#20]
 1198 0346 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 407:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1199              	 .loc 7 407 0
 1200 034a AAE0     	 b .L57
 1201              	.L44:
 408:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_I:
 409:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)pidProfile->pid[PID_YAW].I + delta, 0, 200); // FIXME magic numbe
 1202              	 .loc 7 409 0
 1203 034c 574B     	 ldr r3,.L59
 1204 034e 1B68     	 ldr r3,[r3]
 1205 0350 DB7C     	 ldrb r3,[r3,#19]
 1206 0352 1A46     	 mov r2,r3
 1207 0354 7B68     	 ldr r3,[r7,#4]
 1208 0356 1344     	 add r3,r3,r2
 1209 0358 1846     	 mov r0,r3
 1210 035a 0021     	 movs r1,#0
 1211 035c C822     	 movs r2,#200
 1212 035e FFF7FEFF 	 bl constrain
 1213 0362 7861     	 str r0,[r7,#20]
 410:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_YAW].I = newValue;
 1214              	 .loc 7 410 0
 1215 0364 514B     	 ldr r3,.L59
 1216 0366 1B68     	 ldr r3,[r3]
 1217 0368 7A69     	 ldr r2,[r7,#20]
 1218 036a D2B2     	 uxtb r2,r2
 1219 036c DA74     	 strb r2,[r3,#19]
 411:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_I, newValue);
 1220              	 .loc 7 411 0
 1221 036e 0A20     	 movs r0,#10
 1222 0370 7969     	 ldr r1,[r7,#20]
 1223 0372 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 412:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1224              	 .loc 7 412 0
 1225 0376 94E0     	 b .L57
 1226              	.L45:
 413:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_D:
 414:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)pidProfile->pid[PID_YAW].D + delta, 0, 200); // FIXME magic numbe
 1227              	 .loc 7 414 0
 1228 0378 4C4B     	 ldr r3,.L59
 1229 037a 1B68     	 ldr r3,[r3]
 1230 037c 1B7D     	 ldrb r3,[r3,#20]
 1231 037e 1A46     	 mov r2,r3
 1232 0380 7B68     	 ldr r3,[r7,#4]
 1233 0382 1344     	 add r3,r3,r2
 1234 0384 1846     	 mov r0,r3
 1235 0386 0021     	 movs r1,#0
 1236 0388 C822     	 movs r2,#200
 1237 038a FFF7FEFF 	 bl constrain
 1238 038e 7861     	 str r0,[r7,#20]
 415:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_YAW].D = newValue;
 1239              	 .loc 7 415 0
 1240 0390 464B     	 ldr r3,.L59
 1241 0392 1B68     	 ldr r3,[r3]
 1242 0394 7A69     	 ldr r2,[r7,#20]
 1243 0396 D2B2     	 uxtb r2,r2
 1244 0398 1A75     	 strb r2,[r3,#20]
 416:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_D, newValue);
 1245              	 .loc 7 416 0
 1246 039a 0B20     	 movs r0,#11
 1247 039c 7969     	 ldr r1,[r7,#20]
 1248 039e FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 417:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1249              	 .loc 7 417 0
 1250 03a2 7EE0     	 b .L57
 1251              	.L50:
 418:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_RC_RATE_YAW:
 419:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain((int)controlRateConfig->rcRates[FD_YAW] + delta, 0, CONTROL_RATE_CONFI
 1252              	 .loc 7 419 0
 1253 03a4 FB68     	 ldr r3,[r7,#12]
 1254 03a6 5B79     	 ldrb r3,[r3,#5]
 1255 03a8 1A46     	 mov r2,r3
 1256 03aa 7B68     	 ldr r3,[r7,#4]
 1257 03ac 1344     	 add r3,r3,r2
 1258 03ae 1846     	 mov r0,r3
 1259 03b0 0021     	 movs r1,#0
 1260 03b2 FF22     	 movs r2,#255
 1261 03b4 FFF7FEFF 	 bl constrain
 1262 03b8 7861     	 str r0,[r7,#20]
 420:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcRates[FD_YAW] = newValue;
 1263              	 .loc 7 420 0
 1264 03ba 7B69     	 ldr r3,[r7,#20]
 1265 03bc DAB2     	 uxtb r2,r3
 1266 03be FB68     	 ldr r3,[r7,#12]
 1267 03c0 5A71     	 strb r2,[r3,#5]
 421:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_RC_RATE_YAW, newValue);
 1268              	 .loc 7 421 0
 1269 03c2 1520     	 movs r0,#21
 1270 03c4 7969     	 ldr r1,[r7,#20]
 1271 03c6 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 422:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1272              	 .loc 7 422 0
 1273 03ca 6AE0     	 b .L57
 1274              	.L51:
 423:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_F:
 424:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_F:
 425:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(pidProfile->pid[PID_PITCH].F + delta, 0, 2000);
 1275              	 .loc 7 425 0
 1276 03cc 374B     	 ldr r3,.L59
 1277 03ce 1B68     	 ldr r3,[r3]
 1278 03d0 1B8A     	 ldrh r3,[r3,#16]
 1279 03d2 9BB2     	 uxth r3,r3
 1280 03d4 1A46     	 mov r2,r3
 1281 03d6 7B68     	 ldr r3,[r7,#4]
 1282 03d8 1344     	 add r3,r3,r2
 1283 03da 1846     	 mov r0,r3
 1284 03dc 0021     	 movs r1,#0
 1285 03de 4FF4FA62 	 mov r2,#2000
 1286 03e2 FFF7FEFF 	 bl constrain
 1287 03e6 7861     	 str r0,[r7,#20]
 426:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_PITCH].F = newValue;
 1288              	 .loc 7 426 0
 1289 03e8 304B     	 ldr r3,.L59
 1290 03ea 1B68     	 ldr r3,[r3]
 1291 03ec 7A69     	 ldr r2,[r7,#20]
 1292 03ee 92B2     	 uxth r2,r2
 1293 03f0 1A82     	 strh r2,[r3,#16]
 427:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_F, newValue);
 1294              	 .loc 7 427 0
 1295 03f2 1E20     	 movs r0,#30
 1296 03f4 7969     	 ldr r1,[r7,#20]
 1297 03f6 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 428:../cleanflight/src/main/fc/rc_adjustments.c **** 
 429:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_F) {
 1298              	 .loc 7 429 0
 1299 03fa FB7A     	 ldrb r3,[r7,#11]
 1300 03fc 1E2B     	 cmp r3,#30
 1301 03fe 00D1     	 bne .L55
 430:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1302              	 .loc 7 430 0
 1303 0400 4FE0     	 b .L57
 1304              	.L55:
 431:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 432:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_F
 433:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 434:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_F:
 435:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(pidProfile->pid[PID_ROLL].F + delta, 0, 2000);
 1305              	 .loc 7 435 0
 1306 0402 2A4B     	 ldr r3,.L59
 1307 0404 1B68     	 ldr r3,[r3]
 1308 0406 B3F80B30 	 ldrh r3,[r3,#11]
 1309 040a 9BB2     	 uxth r3,r3
 1310 040c 1A46     	 mov r2,r3
 1311 040e 7B68     	 ldr r3,[r7,#4]
 1312 0410 1344     	 add r3,r3,r2
 1313 0412 1846     	 mov r0,r3
 1314 0414 0021     	 movs r1,#0
 1315 0416 4FF4FA62 	 mov r2,#2000
 1316 041a FFF7FEFF 	 bl constrain
 1317 041e 7861     	 str r0,[r7,#20]
 436:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_ROLL].F = newValue;
 1318              	 .loc 7 436 0
 1319 0420 224B     	 ldr r3,.L59
 1320 0422 1B68     	 ldr r3,[r3]
 1321 0424 7A69     	 ldr r2,[r7,#20]
 1322 0426 92B2     	 uxth r2,r2
 1323 0428 A3F80B20 	 strh r2,[r3,#11]
 437:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_F, newValue);
 1324              	 .loc 7 437 0
 1325 042c 1F20     	 movs r0,#31
 1326 042e 7969     	 ldr r1,[r7,#20]
 1327 0430 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 438:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1328              	 .loc 7 438 0
 1329 0434 35E0     	 b .L57
 1330              	.L56:
 439:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_F:
 440:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(pidProfile->pid[PID_YAW].F + delta, 0, 2000);
 1331              	 .loc 7 440 0
 1332 0436 1D4B     	 ldr r3,.L59
 1333 0438 1B68     	 ldr r3,[r3]
 1334 043a B3F81530 	 ldrh r3,[r3,#21]
 1335 043e 9BB2     	 uxth r3,r3
 1336 0440 1A46     	 mov r2,r3
 1337 0442 7B68     	 ldr r3,[r7,#4]
 1338 0444 1344     	 add r3,r3,r2
 1339 0446 1846     	 mov r0,r3
 1340 0448 0021     	 movs r1,#0
 1341 044a 4FF4FA62 	 mov r2,#2000
 1342 044e FFF7FEFF 	 bl constrain
 1343 0452 7861     	 str r0,[r7,#20]
 441:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_YAW].F = newValue;
 1344              	 .loc 7 441 0
 1345 0454 154B     	 ldr r3,.L59
 1346 0456 1B68     	 ldr r3,[r3]
 1347 0458 7A69     	 ldr r2,[r7,#20]
 1348 045a 92B2     	 uxth r2,r2
 1349 045c A3F81520 	 strh r2,[r3,#21]
 442:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_F, newValue);
 1350              	 .loc 7 442 0
 1351 0460 2020     	 movs r0,#32
 1352 0462 7969     	 ldr r1,[r7,#20]
 1353 0464 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 443:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1354              	 .loc 7 443 0
 1355 0468 1BE0     	 b .L57
 1356              	.L52:
 444:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_FEEDFORWARD_TRANSITION:
 445:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(pidProfile->feedForwardTransition + delta, 1, 100); // FIXME magic num
 1357              	 .loc 7 445 0
 1358 046a 104B     	 ldr r3,.L59
 1359 046c 1B68     	 ldr r3,[r3]
 1360 046e 93F84130 	 ldrb r3,[r3,#65]
 1361 0472 1A46     	 mov r2,r3
 1362 0474 7B68     	 ldr r3,[r7,#4]
 1363 0476 1344     	 add r3,r3,r2
 1364 0478 1846     	 mov r0,r3
 1365 047a 0121     	 movs r1,#1
 1366 047c 6422     	 movs r2,#100
 1367 047e FFF7FEFF 	 bl constrain
 1368 0482 7861     	 str r0,[r7,#20]
 446:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->feedForwardTransition = newValue;
 1369              	 .loc 7 446 0
 1370 0484 094B     	 ldr r3,.L59
 1371 0486 1B68     	 ldr r3,[r3]
 1372 0488 7A69     	 ldr r2,[r7,#20]
 1373 048a D2B2     	 uxtb r2,r2
 1374 048c 83F84120 	 strb r2,[r3,#65]
 447:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_FEEDFORWARD_TRANSITION, newValue);
 1375              	 .loc 7 447 0
 1376 0490 1720     	 movs r0,#23
 1377 0492 7969     	 ldr r1,[r7,#20]
 1378 0494 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 448:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1379              	 .loc 7 448 0
 1380 0498 03E0     	 b .L57
 1381              	.L33:
 449:../cleanflight/src/main/fc/rc_adjustments.c ****     default:
 450:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = -1;
 1382              	 .loc 7 450 0
 1383 049a 4FF0FF33 	 mov r3,#-1
 1384 049e 7B61     	 str r3,[r7,#20]
 451:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1385              	 .loc 7 451 0
 1386 04a0 00BF     	 nop
 1387              	.L57:
 452:../cleanflight/src/main/fc/rc_adjustments.c ****     };
 453:../cleanflight/src/main/fc/rc_adjustments.c **** 
 454:../cleanflight/src/main/fc/rc_adjustments.c ****     return newValue;
 1388              	 .loc 7 454 0
 1389 04a2 7B69     	 ldr r3,[r7,#20]
 455:../cleanflight/src/main/fc/rc_adjustments.c **** }
 1390              	 .loc 7 455 0
 1391 04a4 1846     	 mov r0,r3
 1392 04a6 1837     	 adds r7,r7,#24
 1393              	.LCFI44:
 1394              	 .cfi_def_cfa_offset 8
 1395 04a8 BD46     	 mov sp,r7
 1396              	.LCFI45:
 1397              	 .cfi_def_cfa_register 13
 1398              	 
 1399 04aa 80BD     	 pop {r7,pc}
 1400              	.L60:
 1401              	 .align 2
 1402              	.L59:
 1403 04ac 00000000 	 .word pidProfile
 1404              	 .cfi_endproc
 1405              	.LFE567:
 1407              	 .section .text.applyAbsoluteAdjustment,"ax",%progbits
 1408              	 .align 2
 1409              	 .thumb
 1410              	 .thumb_func
 1412              	applyAbsoluteAdjustment:
 1413              	.LFB568:
 456:../cleanflight/src/main/fc/rc_adjustments.c **** 
 457:../cleanflight/src/main/fc/rc_adjustments.c **** static int applyAbsoluteAdjustment(controlRateConfig_t *controlRateConfig, adjustmentFunction_e adj
 458:../cleanflight/src/main/fc/rc_adjustments.c **** {
 1414              	 .loc 7 458 0
 1415              	 .cfi_startproc
 1416              	 
 1417              	 
 1418 0000 80B5     	 push {r7,lr}
 1419              	.LCFI46:
 1420              	 .cfi_def_cfa_offset 8
 1421              	 .cfi_offset 7,-8
 1422              	 .cfi_offset 14,-4
 1423 0002 86B0     	 sub sp,sp,#24
 1424              	.LCFI47:
 1425              	 .cfi_def_cfa_offset 32
 1426 0004 00AF     	 add r7,sp,#0
 1427              	.LCFI48:
 1428              	 .cfi_def_cfa_register 7
 1429 0006 F860     	 str r0,[r7,#12]
 1430 0008 0B46     	 mov r3,r1
 1431 000a 7A60     	 str r2,[r7,#4]
 1432 000c FB72     	 strb r3,[r7,#11]
 459:../cleanflight/src/main/fc/rc_adjustments.c ****     int newValue;
 460:../cleanflight/src/main/fc/rc_adjustments.c **** 
 461:../cleanflight/src/main/fc/rc_adjustments.c ****     if ( !controlRateConfig || !pidProfile) {
 1433              	 .loc 7 461 0
 1434 000e FB68     	 ldr r3,[r7,#12]
 1435 0010 002B     	 cmp r3,#0
 1436 0012 03D0     	 beq .L62
 1437              	 .loc 7 461 0 is_stmt 0 discriminator 1
 1438 0014 AC4B     	 ldr r3,.L90
 1439 0016 1B68     	 ldr r3,[r3]
 1440 0018 002B     	 cmp r3,#0
 1441 001a 01D1     	 bne .L63
 1442              	.L62:
 462:../cleanflight/src/main/fc/rc_adjustments.c ****         return 0;
 1443              	 .loc 7 462 0 is_stmt 1
 1444 001c 0023     	 movs r3,#0
 1445 001e C2E1     	 b .L64
 1446              	.L63:
 463:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 464:../cleanflight/src/main/fc/rc_adjustments.c **** 
 465:../cleanflight/src/main/fc/rc_adjustments.c ****     switch (adjustmentFunction) {
 1447              	 .loc 7 465 0
 1448 0020 FB7A     	 ldrb r3,[r7,#11]
 1449 0022 013B     	 subs r3,r3,#1
 1450 0024 1F2B     	 cmp r3,#31
 1451 0026 00F2B981 	 bhi .L65
 1452 002a 01A2     	 adr r2,.L67
 1453 002c 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1454              	 .p2align 2
 1455              	.L67:
 1456 0030 B1000000 	 .word .L66+1
 1457 0034 F3000000 	 .word .L68+1
 1458 0038 35010000 	 .word .L69+1
 1459 003c 57010000 	 .word .L70+1
 1460 0040 99010000 	 .word .L71+1
 1461 0044 B7010000 	 .word .L72+1
 1462 0048 FD010000 	 .word .L73+1
 1463 004c 43020000 	 .word .L74+1
 1464 0050 89020000 	 .word .L75+1
 1465 0054 A9020000 	 .word .L76+1
 1466 0058 CD020000 	 .word .L77+1
 1467 005c 9D030000 	 .word .L65+1
 1468 0060 57010000 	 .word .L70+1
 1469 0064 7B010000 	 .word .L78+1
 1470 0068 B7010000 	 .word .L72+1
 1471 006c FD010000 	 .word .L73+1
 1472 0070 43020000 	 .word .L74+1
 1473 0074 DD010000 	 .word .L79+1
 1474 0078 23020000 	 .word .L80+1
 1475 007c 69020000 	 .word .L81+1
 1476 0080 ED020000 	 .word .L82+1
 1477 0084 0B030000 	 .word .L83+1
 1478 0088 7B030000 	 .word .L84+1
 1479 008c 9D030000 	 .word .L65+1
 1480 0090 B1000000 	 .word .L66+1
 1481 0094 D5000000 	 .word .L85+1
 1482 0098 F3000000 	 .word .L68+1
 1483 009c 17010000 	 .word .L86+1
 1484 00a0 9D030000 	 .word .L65+1
 1485 00a4 0B030000 	 .word .L83+1
 1486 00a8 33030000 	 .word .L87+1
 1487 00ac 57030000 	 .word .L88+1
 1488              	 .p2align 1
 1489              	.L66:
 466:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_RC_RATE:
 467:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_RC_RATE:
 468:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, CONTROL_RATE_CONFIG_RC_RATES_MAX);
 1490              	 .loc 7 468 0
 1491 00b0 7868     	 ldr r0,[r7,#4]
 1492 00b2 0021     	 movs r1,#0
 1493 00b4 FF22     	 movs r2,#255
 1494 00b6 FFF7FEFF 	 bl constrain
 1495 00ba 7861     	 str r0,[r7,#20]
 469:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcRates[FD_ROLL] = newValue;
 1496              	 .loc 7 469 0
 1497 00bc 7B69     	 ldr r3,[r7,#20]
 1498 00be DAB2     	 uxtb r2,r3
 1499 00c0 FB68     	 ldr r3,[r7,#12]
 1500 00c2 DA70     	 strb r2,[r3,#3]
 470:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_RC_RATE, newValue);
 1501              	 .loc 7 470 0
 1502 00c4 1920     	 movs r0,#25
 1503 00c6 7969     	 ldr r1,[r7,#20]
 1504 00c8 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 471:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_ROLL_RC_RATE) {
 1505              	 .loc 7 471 0
 1506 00cc FB7A     	 ldrb r3,[r7,#11]
 1507 00ce 192B     	 cmp r3,#25
 1508 00d0 00D1     	 bne .L85
 472:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1509              	 .loc 7 472 0
 1510 00d2 67E1     	 b .L89
 1511              	.L85:
 473:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 474:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_RC_EXPO
 475:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 476:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_RC_RATE:
 477:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, CONTROL_RATE_CONFIG_RC_RATES_MAX);
 1512              	 .loc 7 477 0
 1513 00d4 7868     	 ldr r0,[r7,#4]
 1514 00d6 0021     	 movs r1,#0
 1515 00d8 FF22     	 movs r2,#255
 1516 00da FFF7FEFF 	 bl constrain
 1517 00de 7861     	 str r0,[r7,#20]
 478:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcRates[FD_PITCH] = newValue;
 1518              	 .loc 7 478 0
 1519 00e0 7B69     	 ldr r3,[r7,#20]
 1520 00e2 DAB2     	 uxtb r2,r3
 1521 00e4 FB68     	 ldr r3,[r7,#12]
 1522 00e6 1A71     	 strb r2,[r3,#4]
 479:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_RC_RATE, newValue);
 1523              	 .loc 7 479 0
 1524 00e8 1A20     	 movs r0,#26
 1525 00ea 7969     	 ldr r1,[r7,#20]
 1526 00ec FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 480:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1527              	 .loc 7 480 0
 1528 00f0 58E1     	 b .L89
 1529              	.L68:
 481:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_RC_EXPO:
 482:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_RC_EXPO:
 483:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, CONTROL_RATE_CONFIG_RC_EXPO_MAX);
 1530              	 .loc 7 483 0
 1531 00f2 7868     	 ldr r0,[r7,#4]
 1532 00f4 0021     	 movs r1,#0
 1533 00f6 6422     	 movs r2,#100
 1534 00f8 FFF7FEFF 	 bl constrain
 1535 00fc 7861     	 str r0,[r7,#20]
 484:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcExpo[FD_ROLL] = newValue;
 1536              	 .loc 7 484 0
 1537 00fe 7B69     	 ldr r3,[r7,#20]
 1538 0100 DAB2     	 uxtb r2,r3
 1539 0102 FB68     	 ldr r3,[r7,#12]
 1540 0104 9A71     	 strb r2,[r3,#6]
 485:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_RC_EXPO, newValue);
 1541              	 .loc 7 485 0
 1542 0106 1B20     	 movs r0,#27
 1543 0108 7969     	 ldr r1,[r7,#20]
 1544 010a FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 486:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_ROLL_RC_EXPO) {
 1545              	 .loc 7 486 0
 1546 010e FB7A     	 ldrb r3,[r7,#11]
 1547 0110 1B2B     	 cmp r3,#27
 1548 0112 00D1     	 bne .L86
 487:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1549              	 .loc 7 487 0
 1550 0114 46E1     	 b .L89
 1551              	.L86:
 488:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 489:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_RC_EXPO
 490:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 491:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_RC_EXPO:
 492:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, CONTROL_RATE_CONFIG_RC_EXPO_MAX);
 1552              	 .loc 7 492 0
 1553 0116 7868     	 ldr r0,[r7,#4]
 1554 0118 0021     	 movs r1,#0
 1555 011a 6422     	 movs r2,#100
 1556 011c FFF7FEFF 	 bl constrain
 1557 0120 7861     	 str r0,[r7,#20]
 493:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcExpo[FD_PITCH] = newValue;
 1558              	 .loc 7 493 0
 1559 0122 7B69     	 ldr r3,[r7,#20]
 1560 0124 DAB2     	 uxtb r2,r3
 1561 0126 FB68     	 ldr r3,[r7,#12]
 1562 0128 DA71     	 strb r2,[r3,#7]
 494:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_RC_EXPO, newValue);
 1563              	 .loc 7 494 0
 1564 012a 1C20     	 movs r0,#28
 1565 012c 7969     	 ldr r1,[r7,#20]
 1566 012e FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 495:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1567              	 .loc 7 495 0
 1568 0132 37E1     	 b .L89
 1569              	.L69:
 496:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_THROTTLE_EXPO:
 497:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 100); // FIXME magic numbers repeated in cli.c
 1570              	 .loc 7 497 0
 1571 0134 7868     	 ldr r0,[r7,#4]
 1572 0136 0021     	 movs r1,#0
 1573 0138 6422     	 movs r2,#100
 1574 013a FFF7FEFF 	 bl constrain
 1575 013e 7861     	 str r0,[r7,#20]
 498:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->thrExpo8 = newValue;
 1576              	 .loc 7 498 0
 1577 0140 7B69     	 ldr r3,[r7,#20]
 1578 0142 DAB2     	 uxtb r2,r3
 1579 0144 FB68     	 ldr r3,[r7,#12]
 1580 0146 5A70     	 strb r2,[r3,#1]
 499:../cleanflight/src/main/fc/rc_adjustments.c ****         initRcProcessing();
 1581              	 .loc 7 499 0
 1582 0148 FFF7FEFF 	 bl initRcProcessing
 500:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_THROTTLE_EXPO, newValue);
 1583              	 .loc 7 500 0
 1584 014c 0320     	 movs r0,#3
 1585 014e 7969     	 ldr r1,[r7,#20]
 1586 0150 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 501:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1587              	 .loc 7 501 0
 1588 0154 26E1     	 b .L89
 1589              	.L70:
 502:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_RATE:
 503:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_RATE:
 504:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, CONTROL_RATE_CONFIG_RATE_MAX);
 1590              	 .loc 7 504 0
 1591 0156 7868     	 ldr r0,[r7,#4]
 1592 0158 0021     	 movs r1,#0
 1593 015a FF22     	 movs r2,#255
 1594 015c FFF7FEFF 	 bl constrain
 1595 0160 7861     	 str r0,[r7,#20]
 505:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rates[FD_PITCH] = newValue;
 1596              	 .loc 7 505 0
 1597 0162 7B69     	 ldr r3,[r7,#20]
 1598 0164 DAB2     	 uxtb r2,r3
 1599 0166 FB68     	 ldr r3,[r7,#12]
 1600 0168 9A72     	 strb r2,[r3,#10]
 506:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_RATE, newValue);
 1601              	 .loc 7 506 0
 1602 016a 0D20     	 movs r0,#13
 1603 016c 7969     	 ldr r1,[r7,#20]
 1604 016e FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 507:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_RATE) {
 1605              	 .loc 7 507 0
 1606 0172 FB7A     	 ldrb r3,[r7,#11]
 1607 0174 0D2B     	 cmp r3,#13
 1608 0176 00D1     	 bne .L78
 508:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1609              	 .loc 7 508 0
 1610 0178 14E1     	 b .L89
 1611              	.L78:
 509:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 510:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_RATE
 511:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 512:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_RATE:
 513:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, CONTROL_RATE_CONFIG_RATE_MAX);
 1612              	 .loc 7 513 0
 1613 017a 7868     	 ldr r0,[r7,#4]
 1614 017c 0021     	 movs r1,#0
 1615 017e FF22     	 movs r2,#255
 1616 0180 FFF7FEFF 	 bl constrain
 1617 0184 7861     	 str r0,[r7,#20]
 514:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rates[FD_ROLL] = newValue;
 1618              	 .loc 7 514 0
 1619 0186 7B69     	 ldr r3,[r7,#20]
 1620 0188 DAB2     	 uxtb r2,r3
 1621 018a FB68     	 ldr r3,[r7,#12]
 1622 018c 5A72     	 strb r2,[r3,#9]
 515:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_RATE, newValue);
 1623              	 .loc 7 515 0
 1624 018e 0E20     	 movs r0,#14
 1625 0190 7969     	 ldr r1,[r7,#20]
 1626 0192 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 516:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1627              	 .loc 7 516 0
 1628 0196 05E1     	 b .L89
 1629              	.L71:
 517:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_RATE:
 518:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, CONTROL_RATE_CONFIG_RATE_MAX);
 1630              	 .loc 7 518 0
 1631 0198 7868     	 ldr r0,[r7,#4]
 1632 019a 0021     	 movs r1,#0
 1633 019c FF22     	 movs r2,#255
 1634 019e FFF7FEFF 	 bl constrain
 1635 01a2 7861     	 str r0,[r7,#20]
 519:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rates[FD_YAW] = newValue;
 1636              	 .loc 7 519 0
 1637 01a4 7B69     	 ldr r3,[r7,#20]
 1638 01a6 DAB2     	 uxtb r2,r3
 1639 01a8 FB68     	 ldr r3,[r7,#12]
 1640 01aa DA72     	 strb r2,[r3,#11]
 520:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_RATE, newValue);
 1641              	 .loc 7 520 0
 1642 01ac 0520     	 movs r0,#5
 1643 01ae 7969     	 ldr r1,[r7,#20]
 1644 01b0 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 521:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1645              	 .loc 7 521 0
 1646 01b4 F6E0     	 b .L89
 1647              	.L72:
 522:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_P:
 523:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_P:
 524:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 200); // FIXME magic numbers repeated in cli.c
 1648              	 .loc 7 524 0
 1649 01b6 7868     	 ldr r0,[r7,#4]
 1650 01b8 0021     	 movs r1,#0
 1651 01ba C822     	 movs r2,#200
 1652 01bc FFF7FEFF 	 bl constrain
 1653 01c0 7861     	 str r0,[r7,#20]
 525:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_PITCH].P = newValue;
 1654              	 .loc 7 525 0
 1655 01c2 414B     	 ldr r3,.L90
 1656 01c4 1B68     	 ldr r3,[r3]
 1657 01c6 7A69     	 ldr r2,[r7,#20]
 1658 01c8 D2B2     	 uxtb r2,r2
 1659 01ca 5A73     	 strb r2,[r3,#13]
 526:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_P, newValue);
 1660              	 .loc 7 526 0
 1661 01cc 0F20     	 movs r0,#15
 1662 01ce 7969     	 ldr r1,[r7,#20]
 1663 01d0 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 527:../cleanflight/src/main/fc/rc_adjustments.c **** 
 528:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_P) {
 1664              	 .loc 7 528 0
 1665 01d4 FB7A     	 ldrb r3,[r7,#11]
 1666 01d6 0F2B     	 cmp r3,#15
 1667 01d8 00D1     	 bne .L79
 529:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1668              	 .loc 7 529 0
 1669 01da E3E0     	 b .L89
 1670              	.L79:
 530:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 531:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_P
 532:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 533:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_P:
 534:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 200); // FIXME magic numbers repeated in cli.c
 1671              	 .loc 7 534 0
 1672 01dc 7868     	 ldr r0,[r7,#4]
 1673 01de 0021     	 movs r1,#0
 1674 01e0 C822     	 movs r2,#200
 1675 01e2 FFF7FEFF 	 bl constrain
 1676 01e6 7861     	 str r0,[r7,#20]
 535:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_ROLL].P = newValue;
 1677              	 .loc 7 535 0
 1678 01e8 374B     	 ldr r3,.L90
 1679 01ea 1B68     	 ldr r3,[r3]
 1680 01ec 7A69     	 ldr r2,[r7,#20]
 1681 01ee D2B2     	 uxtb r2,r2
 1682 01f0 1A72     	 strb r2,[r3,#8]
 536:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_P, newValue);
 1683              	 .loc 7 536 0
 1684 01f2 1220     	 movs r0,#18
 1685 01f4 7969     	 ldr r1,[r7,#20]
 1686 01f6 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 537:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1687              	 .loc 7 537 0
 1688 01fa D3E0     	 b .L89
 1689              	.L73:
 538:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_I:
 539:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_I:
 540:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 200); // FIXME magic numbers repeated in cli.c
 1690              	 .loc 7 540 0
 1691 01fc 7868     	 ldr r0,[r7,#4]
 1692 01fe 0021     	 movs r1,#0
 1693 0200 C822     	 movs r2,#200
 1694 0202 FFF7FEFF 	 bl constrain
 1695 0206 7861     	 str r0,[r7,#20]
 541:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_PITCH].I = newValue;
 1696              	 .loc 7 541 0
 1697 0208 2F4B     	 ldr r3,.L90
 1698 020a 1B68     	 ldr r3,[r3]
 1699 020c 7A69     	 ldr r2,[r7,#20]
 1700 020e D2B2     	 uxtb r2,r2
 1701 0210 9A73     	 strb r2,[r3,#14]
 542:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_I, newValue);
 1702              	 .loc 7 542 0
 1703 0212 1020     	 movs r0,#16
 1704 0214 7969     	 ldr r1,[r7,#20]
 1705 0216 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 543:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_I) {
 1706              	 .loc 7 543 0
 1707 021a FB7A     	 ldrb r3,[r7,#11]
 1708 021c 102B     	 cmp r3,#16
 1709 021e 00D1     	 bne .L80
 544:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1710              	 .loc 7 544 0
 1711 0220 C0E0     	 b .L89
 1712              	.L80:
 545:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 546:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_I
 547:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 548:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_I:
 549:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 200); // FIXME magic numbers repeated in cli.c
 1713              	 .loc 7 549 0
 1714 0222 7868     	 ldr r0,[r7,#4]
 1715 0224 0021     	 movs r1,#0
 1716 0226 C822     	 movs r2,#200
 1717 0228 FFF7FEFF 	 bl constrain
 1718 022c 7861     	 str r0,[r7,#20]
 550:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_ROLL].I = newValue;
 1719              	 .loc 7 550 0
 1720 022e 264B     	 ldr r3,.L90
 1721 0230 1B68     	 ldr r3,[r3]
 1722 0232 7A69     	 ldr r2,[r7,#20]
 1723 0234 D2B2     	 uxtb r2,r2
 1724 0236 5A72     	 strb r2,[r3,#9]
 551:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_I, newValue);
 1725              	 .loc 7 551 0
 1726 0238 1320     	 movs r0,#19
 1727 023a 7969     	 ldr r1,[r7,#20]
 1728 023c FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 552:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1729              	 .loc 7 552 0
 1730 0240 B0E0     	 b .L89
 1731              	.L74:
 553:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_D:
 554:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_D:
 555:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 200); // FIXME magic numbers repeated in cli.c
 1732              	 .loc 7 555 0
 1733 0242 7868     	 ldr r0,[r7,#4]
 1734 0244 0021     	 movs r1,#0
 1735 0246 C822     	 movs r2,#200
 1736 0248 FFF7FEFF 	 bl constrain
 1737 024c 7861     	 str r0,[r7,#20]
 556:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_PITCH].D = newValue;
 1738              	 .loc 7 556 0
 1739 024e 1E4B     	 ldr r3,.L90
 1740 0250 1B68     	 ldr r3,[r3]
 1741 0252 7A69     	 ldr r2,[r7,#20]
 1742 0254 D2B2     	 uxtb r2,r2
 1743 0256 DA73     	 strb r2,[r3,#15]
 557:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_D, newValue);
 1744              	 .loc 7 557 0
 1745 0258 1120     	 movs r0,#17
 1746 025a 7969     	 ldr r1,[r7,#20]
 1747 025c FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 558:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_D) {
 1748              	 .loc 7 558 0
 1749 0260 FB7A     	 ldrb r3,[r7,#11]
 1750 0262 112B     	 cmp r3,#17
 1751 0264 00D1     	 bne .L81
 559:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1752              	 .loc 7 559 0
 1753 0266 9DE0     	 b .L89
 1754              	.L81:
 560:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 561:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_D
 562:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 563:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_D:
 564:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 200); // FIXME magic numbers repeated in cli.c
 1755              	 .loc 7 564 0
 1756 0268 7868     	 ldr r0,[r7,#4]
 1757 026a 0021     	 movs r1,#0
 1758 026c C822     	 movs r2,#200
 1759 026e FFF7FEFF 	 bl constrain
 1760 0272 7861     	 str r0,[r7,#20]
 565:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_ROLL].D = newValue;
 1761              	 .loc 7 565 0
 1762 0274 144B     	 ldr r3,.L90
 1763 0276 1B68     	 ldr r3,[r3]
 1764 0278 7A69     	 ldr r2,[r7,#20]
 1765 027a D2B2     	 uxtb r2,r2
 1766 027c 9A72     	 strb r2,[r3,#10]
 566:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_D, newValue);
 1767              	 .loc 7 566 0
 1768 027e 1420     	 movs r0,#20
 1769 0280 7969     	 ldr r1,[r7,#20]
 1770 0282 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 567:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1771              	 .loc 7 567 0
 1772 0286 8DE0     	 b .L89
 1773              	.L75:
 568:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_P:
 569:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 200); // FIXME magic numbers repeated in cli.c
 1774              	 .loc 7 569 0
 1775 0288 7868     	 ldr r0,[r7,#4]
 1776 028a 0021     	 movs r1,#0
 1777 028c C822     	 movs r2,#200
 1778 028e FFF7FEFF 	 bl constrain
 1779 0292 7861     	 str r0,[r7,#20]
 570:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_YAW].P = newValue;
 1780              	 .loc 7 570 0
 1781 0294 0C4B     	 ldr r3,.L90
 1782 0296 1B68     	 ldr r3,[r3]
 1783 0298 7A69     	 ldr r2,[r7,#20]
 1784 029a D2B2     	 uxtb r2,r2
 1785 029c 9A74     	 strb r2,[r3,#18]
 571:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_P, newValue);
 1786              	 .loc 7 571 0
 1787 029e 0920     	 movs r0,#9
 1788 02a0 7969     	 ldr r1,[r7,#20]
 1789 02a2 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 572:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1790              	 .loc 7 572 0
 1791 02a6 7DE0     	 b .L89
 1792              	.L76:
 573:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_I:
 574:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 200); // FIXME magic numbers repeated in cli.c
 1793              	 .loc 7 574 0
 1794 02a8 7868     	 ldr r0,[r7,#4]
 1795 02aa 0021     	 movs r1,#0
 1796 02ac C822     	 movs r2,#200
 1797 02ae FFF7FEFF 	 bl constrain
 1798 02b2 7861     	 str r0,[r7,#20]
 575:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_YAW].I = newValue;
 1799              	 .loc 7 575 0
 1800 02b4 044B     	 ldr r3,.L90
 1801 02b6 1B68     	 ldr r3,[r3]
 1802 02b8 7A69     	 ldr r2,[r7,#20]
 1803 02ba D2B2     	 uxtb r2,r2
 1804 02bc DA74     	 strb r2,[r3,#19]
 576:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_I, newValue);
 1805              	 .loc 7 576 0
 1806 02be 0A20     	 movs r0,#10
 1807 02c0 7969     	 ldr r1,[r7,#20]
 1808 02c2 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 577:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1809              	 .loc 7 577 0
 1810 02c6 6DE0     	 b .L89
 1811              	.L91:
 1812              	 .align 2
 1813              	.L90:
 1814 02c8 00000000 	 .word pidProfile
 1815              	.L77:
 578:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_D:
 579:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 200); // FIXME magic numbers repeated in cli.c
 1816              	 .loc 7 579 0
 1817 02cc 7868     	 ldr r0,[r7,#4]
 1818 02ce 0021     	 movs r1,#0
 1819 02d0 C822     	 movs r2,#200
 1820 02d2 FFF7FEFF 	 bl constrain
 1821 02d6 7861     	 str r0,[r7,#20]
 580:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_YAW].D = newValue;
 1822              	 .loc 7 580 0
 1823 02d8 354B     	 ldr r3,.L92
 1824 02da 1B68     	 ldr r3,[r3]
 1825 02dc 7A69     	 ldr r2,[r7,#20]
 1826 02de D2B2     	 uxtb r2,r2
 1827 02e0 1A75     	 strb r2,[r3,#20]
 581:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_D, newValue);
 1828              	 .loc 7 581 0
 1829 02e2 0B20     	 movs r0,#11
 1830 02e4 7969     	 ldr r1,[r7,#20]
 1831 02e6 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 582:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1832              	 .loc 7 582 0
 1833 02ea 5BE0     	 b .L89
 1834              	.L82:
 583:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_RC_RATE_YAW:
 584:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, CONTROL_RATE_CONFIG_RC_RATES_MAX);
 1835              	 .loc 7 584 0
 1836 02ec 7868     	 ldr r0,[r7,#4]
 1837 02ee 0021     	 movs r1,#0
 1838 02f0 FF22     	 movs r2,#255
 1839 02f2 FFF7FEFF 	 bl constrain
 1840 02f6 7861     	 str r0,[r7,#20]
 585:../cleanflight/src/main/fc/rc_adjustments.c ****         controlRateConfig->rcRates[FD_YAW] = newValue;
 1841              	 .loc 7 585 0
 1842 02f8 7B69     	 ldr r3,[r7,#20]
 1843 02fa DAB2     	 uxtb r2,r3
 1844 02fc FB68     	 ldr r3,[r7,#12]
 1845 02fe 5A71     	 strb r2,[r3,#5]
 586:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_RC_RATE_YAW, newValue);
 1846              	 .loc 7 586 0
 1847 0300 1520     	 movs r0,#21
 1848 0302 7969     	 ldr r1,[r7,#20]
 1849 0304 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 587:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1850              	 .loc 7 587 0
 1851 0308 4CE0     	 b .L89
 1852              	.L83:
 588:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_ROLL_F:
 589:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PITCH_F:
 590:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 2000);
 1853              	 .loc 7 590 0
 1854 030a 7868     	 ldr r0,[r7,#4]
 1855 030c 0021     	 movs r1,#0
 1856 030e 4FF4FA62 	 mov r2,#2000
 1857 0312 FFF7FEFF 	 bl constrain
 1858 0316 7861     	 str r0,[r7,#20]
 591:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_PITCH].F = newValue;
 1859              	 .loc 7 591 0
 1860 0318 254B     	 ldr r3,.L92
 1861 031a 1B68     	 ldr r3,[r3]
 1862 031c 7A69     	 ldr r2,[r7,#20]
 1863 031e 92B2     	 uxth r2,r2
 1864 0320 1A82     	 strh r2,[r3,#16]
 592:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_PITCH_F, newValue);
 1865              	 .loc 7 592 0
 1866 0322 1E20     	 movs r0,#30
 1867 0324 7969     	 ldr r1,[r7,#20]
 1868 0326 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 593:../cleanflight/src/main/fc/rc_adjustments.c **** 
 594:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_PITCH_F) {
 1869              	 .loc 7 594 0
 1870 032a FB7A     	 ldrb r3,[r7,#11]
 1871 032c 1E2B     	 cmp r3,#30
 1872 032e 00D1     	 bne .L87
 595:../cleanflight/src/main/fc/rc_adjustments.c ****             break;
 1873              	 .loc 7 595 0
 1874 0330 38E0     	 b .L89
 1875              	.L87:
 596:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 597:../cleanflight/src/main/fc/rc_adjustments.c ****         // fall through for combined ADJUSTMENT_PITCH_ROLL_F
 598:../cleanflight/src/main/fc/rc_adjustments.c ****         FALLTHROUGH;
 599:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_ROLL_F:
 600:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 2000);
 1876              	 .loc 7 600 0
 1877 0332 7868     	 ldr r0,[r7,#4]
 1878 0334 0021     	 movs r1,#0
 1879 0336 4FF4FA62 	 mov r2,#2000
 1880 033a FFF7FEFF 	 bl constrain
 1881 033e 7861     	 str r0,[r7,#20]
 601:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_ROLL].F = newValue;
 1882              	 .loc 7 601 0
 1883 0340 1B4B     	 ldr r3,.L92
 1884 0342 1B68     	 ldr r3,[r3]
 1885 0344 7A69     	 ldr r2,[r7,#20]
 1886 0346 92B2     	 uxth r2,r2
 1887 0348 A3F80B20 	 strh r2,[r3,#11]
 602:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_ROLL_F, newValue);
 1888              	 .loc 7 602 0
 1889 034c 1F20     	 movs r0,#31
 1890 034e 7969     	 ldr r1,[r7,#20]
 1891 0350 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 603:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1892              	 .loc 7 603 0
 1893 0354 26E0     	 b .L89
 1894              	.L88:
 604:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_YAW_F:
 605:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 0, 2000);
 1895              	 .loc 7 605 0
 1896 0356 7868     	 ldr r0,[r7,#4]
 1897 0358 0021     	 movs r1,#0
 1898 035a 4FF4FA62 	 mov r2,#2000
 1899 035e FFF7FEFF 	 bl constrain
 1900 0362 7861     	 str r0,[r7,#20]
 606:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->pid[PID_YAW].F = newValue;
 1901              	 .loc 7 606 0
 1902 0364 124B     	 ldr r3,.L92
 1903 0366 1B68     	 ldr r3,[r3]
 1904 0368 7A69     	 ldr r2,[r7,#20]
 1905 036a 92B2     	 uxth r2,r2
 1906 036c A3F81520 	 strh r2,[r3,#21]
 607:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_YAW_F, newValue);
 1907              	 .loc 7 607 0
 1908 0370 2020     	 movs r0,#32
 1909 0372 7969     	 ldr r1,[r7,#20]
 1910 0374 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 608:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1911              	 .loc 7 608 0
 1912 0378 14E0     	 b .L89
 1913              	.L84:
 609:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_FEEDFORWARD_TRANSITION:
 610:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = constrain(value, 1, 100); // FIXME magic numbers repeated in cli.c
 1914              	 .loc 7 610 0
 1915 037a 7868     	 ldr r0,[r7,#4]
 1916 037c 0121     	 movs r1,#1
 1917 037e 6422     	 movs r2,#100
 1918 0380 FFF7FEFF 	 bl constrain
 1919 0384 7861     	 str r0,[r7,#20]
 611:../cleanflight/src/main/fc/rc_adjustments.c ****         pidProfile->feedForwardTransition = newValue;
 1920              	 .loc 7 611 0
 1921 0386 0A4B     	 ldr r3,.L92
 1922 0388 1B68     	 ldr r3,[r3]
 1923 038a 7A69     	 ldr r2,[r7,#20]
 1924 038c D2B2     	 uxtb r2,r2
 1925 038e 83F84120 	 strb r2,[r3,#65]
 612:../cleanflight/src/main/fc/rc_adjustments.c ****         blackboxLogInflightAdjustmentEvent(ADJUSTMENT_FEEDFORWARD_TRANSITION, newValue);
 1926              	 .loc 7 612 0
 1927 0392 1720     	 movs r0,#23
 1928 0394 7969     	 ldr r1,[r7,#20]
 1929 0396 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 613:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1930              	 .loc 7 613 0
 1931 039a 03E0     	 b .L89
 1932              	.L65:
 614:../cleanflight/src/main/fc/rc_adjustments.c ****     default:
 615:../cleanflight/src/main/fc/rc_adjustments.c ****         newValue = -1;
 1933              	 .loc 7 615 0
 1934 039c 4FF0FF33 	 mov r3,#-1
 1935 03a0 7B61     	 str r3,[r7,#20]
 616:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1936              	 .loc 7 616 0
 1937 03a2 00BF     	 nop
 1938              	.L89:
 617:../cleanflight/src/main/fc/rc_adjustments.c ****     };
 618:../cleanflight/src/main/fc/rc_adjustments.c **** 
 619:../cleanflight/src/main/fc/rc_adjustments.c ****     return newValue;
 1939              	 .loc 7 619 0
 1940 03a4 7B69     	 ldr r3,[r7,#20]
 1941              	.L64:
 620:../cleanflight/src/main/fc/rc_adjustments.c **** }
 1942              	 .loc 7 620 0
 1943 03a6 1846     	 mov r0,r3
 1944 03a8 1837     	 adds r7,r7,#24
 1945              	.LCFI49:
 1946              	 .cfi_def_cfa_offset 8
 1947 03aa BD46     	 mov sp,r7
 1948              	.LCFI50:
 1949              	 .cfi_def_cfa_register 13
 1950              	 
 1951 03ac 80BD     	 pop {r7,pc}
 1952              	.L93:
 1953 03ae 00BF     	 .align 2
 1954              	.L92:
 1955 03b0 00000000 	 .word pidProfile
 1956              	 .cfi_endproc
 1957              	.LFE568:
 1959              	 .section .text.applySelectAdjustment,"ax",%progbits
 1960              	 .align 2
 1961              	 .thumb
 1962              	 .thumb_func
 1964              	applySelectAdjustment:
 1965              	.LFB569:
 621:../cleanflight/src/main/fc/rc_adjustments.c **** 
 622:../cleanflight/src/main/fc/rc_adjustments.c **** static uint8_t applySelectAdjustment(adjustmentFunction_e adjustmentFunction, uint8_t position)
 623:../cleanflight/src/main/fc/rc_adjustments.c **** {
 1966              	 .loc 7 623 0
 1967              	 .cfi_startproc
 1968              	 
 1969              	 
 1970 0000 80B5     	 push {r7,lr}
 1971              	.LCFI51:
 1972              	 .cfi_def_cfa_offset 8
 1973              	 .cfi_offset 7,-8
 1974              	 .cfi_offset 14,-4
 1975 0002 84B0     	 sub sp,sp,#16
 1976              	.LCFI52:
 1977              	 .cfi_def_cfa_offset 24
 1978 0004 00AF     	 add r7,sp,#0
 1979              	.LCFI53:
 1980              	 .cfi_def_cfa_register 7
 1981 0006 0346     	 mov r3,r0
 1982 0008 0A46     	 mov r2,r1
 1983 000a FB71     	 strb r3,[r7,#7]
 1984 000c 1346     	 mov r3,r2
 1985 000e BB71     	 strb r3,[r7,#6]
 624:../cleanflight/src/main/fc/rc_adjustments.c ****     uint8_t beeps = 0;
 1986              	 .loc 7 624 0
 1987 0010 0023     	 movs r3,#0
 1988 0012 FB73     	 strb r3,[r7,#15]
 625:../cleanflight/src/main/fc/rc_adjustments.c **** 
 626:../cleanflight/src/main/fc/rc_adjustments.c ****     switch (adjustmentFunction) {
 1989              	 .loc 7 626 0
 1990 0014 FB79     	 ldrb r3,[r7,#7]
 1991 0016 182B     	 cmp r3,#24
 1992 0018 19D0     	 beq .L96
 1993 001a 1D2B     	 cmp r3,#29
 1994 001c 3CD0     	 beq .L105
 1995 001e 0C2B     	 cmp r3,#12
 1996 0020 00D0     	 beq .L98
 627:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_RATE_PROFILE:
 628:../cleanflight/src/main/fc/rc_adjustments.c ****         if (getCurrentControlRateProfileIndex() != position) {
 629:../cleanflight/src/main/fc/rc_adjustments.c ****             changeControlRateProfile(position);
 630:../cleanflight/src/main/fc/rc_adjustments.c ****             blackboxLogInflightAdjustmentEvent(ADJUSTMENT_RATE_PROFILE, position);
 631:../cleanflight/src/main/fc/rc_adjustments.c **** 
 632:../cleanflight/src/main/fc/rc_adjustments.c ****             beeps = position + 1;
 633:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 634:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 635:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_HORIZON_STRENGTH:
 636:../cleanflight/src/main/fc/rc_adjustments.c ****         {
 637:../cleanflight/src/main/fc/rc_adjustments.c ****             uint8_t newValue = constrain(position, 0, 200); // FIXME magic numbers repeated in seri
 638:../cleanflight/src/main/fc/rc_adjustments.c ****             if (pidProfile->pid[PID_LEVEL].D != newValue) {
 639:../cleanflight/src/main/fc/rc_adjustments.c ****                 beeps = ((newValue - pidProfile->pid[PID_LEVEL].D) / 8) + 1;
 640:../cleanflight/src/main/fc/rc_adjustments.c ****                 pidProfile->pid[PID_LEVEL].D = newValue;
 641:../cleanflight/src/main/fc/rc_adjustments.c ****                 blackboxLogInflightAdjustmentEvent(ADJUSTMENT_HORIZON_STRENGTH, position);
 642:../cleanflight/src/main/fc/rc_adjustments.c ****             }
 643:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 644:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 645:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PID_AUDIO:
 646:../cleanflight/src/main/fc/rc_adjustments.c **** #ifdef USE_PID_AUDIO
 647:../cleanflight/src/main/fc/rc_adjustments.c ****         {
 648:../cleanflight/src/main/fc/rc_adjustments.c ****             pidAudioModes_e newMode = pidAudioPositionToModeMap[position];
 649:../cleanflight/src/main/fc/rc_adjustments.c ****             if (newMode != pidAudioGetMode()) {
 650:../cleanflight/src/main/fc/rc_adjustments.c ****                 pidAudioSetMode(newMode);
 651:../cleanflight/src/main/fc/rc_adjustments.c ****             }
 652:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 653:../cleanflight/src/main/fc/rc_adjustments.c **** #endif
 654:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 655:../cleanflight/src/main/fc/rc_adjustments.c **** 
 656:../cleanflight/src/main/fc/rc_adjustments.c ****     default:
 657:../cleanflight/src/main/fc/rc_adjustments.c ****         break;
 1997              	 .loc 7 657 0
 1998 0022 3AE0     	 b .L100
 1999              	.L98:
 628:../cleanflight/src/main/fc/rc_adjustments.c ****             changeControlRateProfile(position);
 2000              	 .loc 7 628 0
 2001 0024 FFF7FEFF 	 bl getCurrentControlRateProfileIndex
 2002 0028 0346     	 mov r3,r0
 2003 002a 1A46     	 mov r2,r3
 2004 002c BB79     	 ldrb r3,[r7,#6]
 2005 002e 9342     	 cmp r3,r2
 2006 0030 0CD0     	 beq .L99
 629:../cleanflight/src/main/fc/rc_adjustments.c ****             blackboxLogInflightAdjustmentEvent(ADJUSTMENT_RATE_PROFILE, position);
 2007              	 .loc 7 629 0
 2008 0032 BB79     	 ldrb r3,[r7,#6]
 2009 0034 1846     	 mov r0,r3
 2010 0036 FFF7FEFF 	 bl changeControlRateProfile
 630:../cleanflight/src/main/fc/rc_adjustments.c **** 
 2011              	 .loc 7 630 0
 2012 003a BB79     	 ldrb r3,[r7,#6]
 2013 003c 0C20     	 movs r0,#12
 2014 003e 1946     	 mov r1,r3
 2015 0040 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 632:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 2016              	 .loc 7 632 0
 2017 0044 BB79     	 ldrb r3,[r7,#6]
 2018 0046 0133     	 adds r3,r3,#1
 2019 0048 FB73     	 strb r3,[r7,#15]
 634:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_HORIZON_STRENGTH:
 2020              	 .loc 7 634 0
 2021 004a 26E0     	 b .L100
 2022              	.L99:
 2023 004c 25E0     	 b .L100
 2024              	.L96:
 2025              	.LBB3:
 637:../cleanflight/src/main/fc/rc_adjustments.c ****             if (pidProfile->pid[PID_LEVEL].D != newValue) {
 2026              	 .loc 7 637 0
 2027 004e BB79     	 ldrb r3,[r7,#6]
 2028 0050 1846     	 mov r0,r3
 2029 0052 0021     	 movs r1,#0
 2030 0054 C822     	 movs r2,#200
 2031 0056 FFF7FEFF 	 bl constrain
 2032 005a 0346     	 mov r3,r0
 2033 005c BB73     	 strb r3,[r7,#14]
 638:../cleanflight/src/main/fc/rc_adjustments.c ****                 beeps = ((newValue - pidProfile->pid[PID_LEVEL].D) / 8) + 1;
 2034              	 .loc 7 638 0
 2035 005e 154B     	 ldr r3,.L106
 2036 0060 1B68     	 ldr r3,[r3]
 2037 0062 5B7E     	 ldrb r3,[r3,#25]
 2038 0064 BA7B     	 ldrb r2,[r7,#14]
 2039 0066 9A42     	 cmp r2,r3
 2040 0068 15D0     	 beq .L101
 639:../cleanflight/src/main/fc/rc_adjustments.c ****                 pidProfile->pid[PID_LEVEL].D = newValue;
 2041              	 .loc 7 639 0
 2042 006a BB7B     	 ldrb r3,[r7,#14]
 2043 006c 114A     	 ldr r2,.L106
 2044 006e 1268     	 ldr r2,[r2]
 2045 0070 527E     	 ldrb r2,[r2,#25]
 2046 0072 9B1A     	 subs r3,r3,r2
 2047 0074 002B     	 cmp r3,#0
 2048 0076 00DA     	 bge .L102
 2049 0078 0733     	 adds r3,r3,#7
 2050              	.L102:
 2051 007a DB10     	 asrs r3,r3,#3
 2052 007c DBB2     	 uxtb r3,r3
 2053 007e 0133     	 adds r3,r3,#1
 2054 0080 FB73     	 strb r3,[r7,#15]
 640:../cleanflight/src/main/fc/rc_adjustments.c ****                 blackboxLogInflightAdjustmentEvent(ADJUSTMENT_HORIZON_STRENGTH, position);
 2055              	 .loc 7 640 0
 2056 0082 0C4B     	 ldr r3,.L106
 2057 0084 1B68     	 ldr r3,[r3]
 2058 0086 BA7B     	 ldrb r2,[r7,#14]
 2059 0088 5A76     	 strb r2,[r3,#25]
 641:../cleanflight/src/main/fc/rc_adjustments.c ****             }
 2060              	 .loc 7 641 0
 2061 008a BB79     	 ldrb r3,[r7,#6]
 2062 008c 1820     	 movs r0,#24
 2063 008e 1946     	 mov r1,r3
 2064 0090 FFF7FEFF 	 bl blackboxLogInflightAdjustmentEvent
 2065              	.LBE3:
 644:../cleanflight/src/main/fc/rc_adjustments.c ****     case ADJUSTMENT_PID_AUDIO:
 2066              	 .loc 7 644 0
 2067 0094 01E0     	 b .L100
 2068              	.L101:
 2069 0096 00E0     	 b .L100
 2070              	.L105:
 654:../cleanflight/src/main/fc/rc_adjustments.c **** 
 2071              	 .loc 7 654 0
 2072 0098 00BF     	 nop
 2073              	.L100:
 658:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 659:../cleanflight/src/main/fc/rc_adjustments.c **** 
 660:../cleanflight/src/main/fc/rc_adjustments.c ****     if (beeps) {
 2074              	 .loc 7 660 0
 2075 009a FB7B     	 ldrb r3,[r7,#15]
 2076 009c 002B     	 cmp r3,#0
 2077 009e 03D0     	 beq .L103
 661:../cleanflight/src/main/fc/rc_adjustments.c ****         beeperConfirmationBeeps(beeps);
 2078              	 .loc 7 661 0
 2079 00a0 FB7B     	 ldrb r3,[r7,#15]
 2080 00a2 1846     	 mov r0,r3
 2081 00a4 FFF7FEFF 	 bl beeperConfirmationBeeps
 2082              	.L103:
 662:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 663:../cleanflight/src/main/fc/rc_adjustments.c **** 
 664:../cleanflight/src/main/fc/rc_adjustments.c ****     return position;
 2083              	 .loc 7 664 0
 2084 00a8 BB79     	 ldrb r3,[r7,#6]
 665:../cleanflight/src/main/fc/rc_adjustments.c **** }
 2085              	 .loc 7 665 0
 2086 00aa 1846     	 mov r0,r3
 2087 00ac 1037     	 adds r7,r7,#16
 2088              	.LCFI54:
 2089              	 .cfi_def_cfa_offset 8
 2090 00ae BD46     	 mov sp,r7
 2091              	.LCFI55:
 2092              	 .cfi_def_cfa_register 13
 2093              	 
 2094 00b0 80BD     	 pop {r7,pc}
 2095              	.L107:
 2096 00b2 00BF     	 .align 2
 2097              	.L106:
 2098 00b4 00000000 	 .word pidProfile
 2099              	 .cfi_endproc
 2100              	.LFE569:
 2102              	 .section .text.processRcAdjustments,"ax",%progbits
 2103              	 .align 2
 2104              	 .global processRcAdjustments
 2105              	 .thumb
 2106              	 .thumb_func
 2108              	processRcAdjustments:
 2109              	.LFB570:
 666:../cleanflight/src/main/fc/rc_adjustments.c **** 
 667:../cleanflight/src/main/fc/rc_adjustments.c **** #define RESET_FREQUENCY_2HZ (1000 / 2)
 668:../cleanflight/src/main/fc/rc_adjustments.c **** 
 669:../cleanflight/src/main/fc/rc_adjustments.c **** void processRcAdjustments(controlRateConfig_t *controlRateConfig)
 670:../cleanflight/src/main/fc/rc_adjustments.c **** {
 2110              	 .loc 7 670 0
 2111              	 .cfi_startproc
 2112              	 
 2113              	 
 2114 0000 90B5     	 push {r4,r7,lr}
 2115              	.LCFI56:
 2116              	 .cfi_def_cfa_offset 12
 2117              	 .cfi_offset 4,-12
 2118              	 .cfi_offset 7,-8
 2119              	 .cfi_offset 14,-4
 2120 0002 91B0     	 sub sp,sp,#68
 2121              	.LCFI57:
 2122              	 .cfi_def_cfa_offset 80
 2123 0004 00AF     	 add r7,sp,#0
 2124              	.LCFI58:
 2125              	 .cfi_def_cfa_register 7
 2126 0006 7860     	 str r0,[r7,#4]
 671:../cleanflight/src/main/fc/rc_adjustments.c ****     const uint32_t now = millis();
 2127              	 .loc 7 671 0
 2128 0008 FFF7FEFF 	 bl millis
 2129 000c B862     	 str r0,[r7,#40]
 672:../cleanflight/src/main/fc/rc_adjustments.c **** 
 673:../cleanflight/src/main/fc/rc_adjustments.c ****     int newValue = -1;
 2130              	 .loc 7 673 0
 2131 000e 4FF0FF33 	 mov r3,#-1
 2132 0012 FB63     	 str r3,[r7,#60]
 674:../cleanflight/src/main/fc/rc_adjustments.c **** 
 675:../cleanflight/src/main/fc/rc_adjustments.c ****     const bool canUseRxData = rxIsReceivingSignal();
 2133              	 .loc 7 675 0
 2134 0014 FFF7FEFF 	 bl rxIsReceivingSignal
 2135 0018 0346     	 mov r3,r0
 2136 001a 87F82730 	 strb r3,[r7,#39]
 2137              	.LBB4:
 676:../cleanflight/src/main/fc/rc_adjustments.c **** 
 677:../cleanflight/src/main/fc/rc_adjustments.c ****     // Process Increment/Decrement adjustments
 678:../cleanflight/src/main/fc/rc_adjustments.c ****     for (int adjustmentIndex = 0; adjustmentIndex < MAX_SIMULTANEOUS_ADJUSTMENT_COUNT; adjustmentIn
 2138              	 .loc 7 678 0
 2139 001e 0023     	 movs r3,#0
 2140 0020 BB63     	 str r3,[r7,#56]
 2141 0022 F6E0     	 b .L109
 2142              	.L123:
 2143              	.LBB5:
 679:../cleanflight/src/main/fc/rc_adjustments.c ****         adjustmentState_t *adjustmentState = &adjustmentStates[adjustmentIndex];
 2144              	 .loc 7 679 0
 2145 0024 BA6B     	 ldr r2,[r7,#56]
 2146 0026 1346     	 mov r3,r2
 2147 0028 DB00     	 lsls r3,r3,#3
 2148 002a 1344     	 add r3,r3,r2
 2149 002c 7C4A     	 ldr r2,.L127
 2150 002e 1344     	 add r3,r3,r2
 2151 0030 3B62     	 str r3,[r7,#32]
 680:../cleanflight/src/main/fc/rc_adjustments.c **** 
 681:../cleanflight/src/main/fc/rc_adjustments.c ****         if (!adjustmentState->config) {
 2152              	 .loc 7 681 0
 2153 0032 3B6A     	 ldr r3,[r7,#32]
 2154 0034 D3F80130 	 ldr r3,[r3,#1]
 2155 0038 002B     	 cmp r3,#0
 2156 003a 00D1     	 bne .L110
 682:../cleanflight/src/main/fc/rc_adjustments.c ****             continue;
 2157              	 .loc 7 682 0
 2158 003c E6E0     	 b .L111
 2159              	.L110:
 683:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 684:../cleanflight/src/main/fc/rc_adjustments.c ****         const adjustmentFunction_e adjustmentFunction = adjustmentState->config->adjustmentFunction
 2160              	 .loc 7 684 0
 2161 003e 3B6A     	 ldr r3,[r7,#32]
 2162 0040 D3F80130 	 ldr r3,[r3,#1]
 2163 0044 1B78     	 ldrb r3,[r3]
 2164 0046 FB77     	 strb r3,[r7,#31]
 685:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentFunction == ADJUSTMENT_NONE) {
 2165              	 .loc 7 685 0
 2166 0048 FB7F     	 ldrb r3,[r7,#31]
 2167 004a 002B     	 cmp r3,#0
 2168 004c 00D1     	 bne .L112
 686:../cleanflight/src/main/fc/rc_adjustments.c ****             continue;
 2169              	 .loc 7 686 0
 2170 004e DDE0     	 b .L111
 2171              	.L112:
 687:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 688:../cleanflight/src/main/fc/rc_adjustments.c **** 
 689:../cleanflight/src/main/fc/rc_adjustments.c ****         if (cmp32(now, adjustmentState->timeoutAt) >= 0) {
 2172              	 .loc 7 689 0
 2173 0050 3B6A     	 ldr r3,[r7,#32]
 2174 0052 D3F80530 	 ldr r3,[r3,#5]
 2175 0056 B86A     	 ldr r0,[r7,#40]
 2176 0058 1946     	 mov r1,r3
 2177 005a FFF7FEFF 	 bl cmp32
 2178 005e 0346     	 mov r3,r0
 2179 0060 002B     	 cmp r3,#0
 2180 0062 18DB     	 blt .L113
 690:../cleanflight/src/main/fc/rc_adjustments.c ****             adjustmentState->timeoutAt = now + RESET_FREQUENCY_2HZ;
 2181              	 .loc 7 690 0
 2182 0064 BB6A     	 ldr r3,[r7,#40]
 2183 0066 03F5FA72 	 add r2,r3,#500
 2184 006a 3B6A     	 ldr r3,[r7,#32]
 2185 006c C3F80520 	 str r2,[r3,#5]
 691:../cleanflight/src/main/fc/rc_adjustments.c ****             MARK_ADJUSTMENT_FUNCTION_AS_READY(adjustmentIndex);
 2186              	 .loc 7 691 0
 2187 0070 0122     	 movs r2,#1
 2188 0072 BB6B     	 ldr r3,[r7,#56]
 2189 0074 02FA03F3 	 lsl r3,r2,r3
 2190 0078 DBB2     	 uxtb r3,r3
 2191 007a DB43     	 mvns r3,r3
 2192 007c DAB2     	 uxtb r2,r3
 2193 007e 694B     	 ldr r3,.L127+4
 2194 0080 1B78     	 ldrb r3,[r3]
 2195 0082 DBB2     	 uxtb r3,r3
 2196 0084 1340     	 ands r3,r3,r2
 2197 0086 DBB2     	 uxtb r3,r3
 2198 0088 DAB2     	 uxtb r2,r3
 2199 008a 664B     	 ldr r3,.L127+4
 2200 008c 1A70     	 strb r2,[r3]
 692:../cleanflight/src/main/fc/rc_adjustments.c **** 
 693:../cleanflight/src/main/fc/rc_adjustments.c **** #if defined(USE_OSD) && defined(USE_OSD_ADJUSTMENTS)
 694:../cleanflight/src/main/fc/rc_adjustments.c ****             adjustmentRangeValue = -1;
 2201              	 .loc 7 694 0
 2202 008e 664B     	 ldr r3,.L127+8
 2203 0090 4FF0FF32 	 mov r2,#-1
 2204 0094 1A60     	 str r2,[r3]
 2205              	.L113:
 695:../cleanflight/src/main/fc/rc_adjustments.c **** #endif
 696:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 697:../cleanflight/src/main/fc/rc_adjustments.c **** 
 698:../cleanflight/src/main/fc/rc_adjustments.c ****         if (!canUseRxData) {
 2206              	 .loc 7 698 0
 2207 0096 97F82730 	 ldrb r3,[r7,#39]
 2208 009a 83F00103 	 eor r3,r3,#1
 2209 009e DBB2     	 uxtb r3,r3
 2210 00a0 002B     	 cmp r3,#0
 2211 00a2 00D0     	 beq .L114
 699:../cleanflight/src/main/fc/rc_adjustments.c ****             continue;
 2212              	 .loc 7 699 0
 2213 00a4 B2E0     	 b .L111
 2214              	.L114:
 700:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 701:../cleanflight/src/main/fc/rc_adjustments.c **** 
 702:../cleanflight/src/main/fc/rc_adjustments.c ****         const uint8_t channelIndex = NON_AUX_CHANNEL_COUNT + adjustmentState->auxChannelIndex;
 2215              	 .loc 7 702 0
 2216 00a6 3B6A     	 ldr r3,[r7,#32]
 2217 00a8 1B78     	 ldrb r3,[r3]
 2218 00aa 0433     	 adds r3,r3,#4
 2219 00ac BB77     	 strb r3,[r7,#30]
 703:../cleanflight/src/main/fc/rc_adjustments.c **** 
 704:../cleanflight/src/main/fc/rc_adjustments.c ****         if (adjustmentState->config->mode == ADJUSTMENT_MODE_STEP) {
 2220              	 .loc 7 704 0
 2221 00ae 3B6A     	 ldr r3,[r7,#32]
 2222 00b0 D3F80130 	 ldr r3,[r3,#1]
 2223 00b4 5B78     	 ldrb r3,[r3,#1]
 2224 00b6 002B     	 cmp r3,#0
 2225 00b8 54D1     	 bne .L115
 2226              	.LBB6:
 705:../cleanflight/src/main/fc/rc_adjustments.c ****             int delta;
 706:../cleanflight/src/main/fc/rc_adjustments.c ****             if (rcData[channelIndex] > rxConfig()->midrc + 200) {
 2227              	 .loc 7 706 0
 2228 00ba BB7F     	 ldrb r3,[r7,#30]
 2229 00bc 5B4A     	 ldr r2,.L127+12
 2230 00be 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 2231 00c2 1CB2     	 sxth r4,r3
 2232 00c4 FFF7FEFF 	 bl rxConfig
 2233 00c8 0346     	 mov r3,r0
 2234 00ca 5B8A     	 ldrh r3,[r3,#18]
 2235 00cc 9BB2     	 uxth r3,r3
 2236 00ce C833     	 adds r3,r3,#200
 2237 00d0 9C42     	 cmp r4,r3
 2238 00d2 05DD     	 ble .L116
 707:../cleanflight/src/main/fc/rc_adjustments.c ****                 delta = adjustmentState->config->data.step;
 2239              	 .loc 7 707 0
 2240 00d4 3B6A     	 ldr r3,[r7,#32]
 2241 00d6 D3F80130 	 ldr r3,[r3,#1]
 2242 00da 9B78     	 ldrb r3,[r3,#2]
 2243 00dc 7B63     	 str r3,[r7,#52]
 2244 00de 29E0     	 b .L117
 2245              	.L116:
 708:../cleanflight/src/main/fc/rc_adjustments.c ****             } else if (rcData[channelIndex] < rxConfig()->midrc - 200) {
 2246              	 .loc 7 708 0
 2247 00e0 BB7F     	 ldrb r3,[r7,#30]
 2248 00e2 524A     	 ldr r2,.L127+12
 2249 00e4 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 2250 00e8 1CB2     	 sxth r4,r3
 2251 00ea FFF7FEFF 	 bl rxConfig
 2252 00ee 0346     	 mov r3,r0
 2253 00f0 5B8A     	 ldrh r3,[r3,#18]
 2254 00f2 9BB2     	 uxth r3,r3
 2255 00f4 C83B     	 subs r3,r3,#200
 2256 00f6 9C42     	 cmp r4,r3
 2257 00f8 06DA     	 bge .L118
 709:../cleanflight/src/main/fc/rc_adjustments.c ****                 delta = -adjustmentState->config->data.step;
 2258              	 .loc 7 709 0
 2259 00fa 3B6A     	 ldr r3,[r7,#32]
 2260 00fc D3F80130 	 ldr r3,[r3,#1]
 2261 0100 9B78     	 ldrb r3,[r3,#2]
 2262 0102 5B42     	 negs r3,r3
 2263 0104 7B63     	 str r3,[r7,#52]
 2264 0106 15E0     	 b .L117
 2265              	.L118:
 710:../cleanflight/src/main/fc/rc_adjustments.c ****             } else {
 711:../cleanflight/src/main/fc/rc_adjustments.c ****                 // returning the switch to the middle immediately resets the ready state
 712:../cleanflight/src/main/fc/rc_adjustments.c ****                 MARK_ADJUSTMENT_FUNCTION_AS_READY(adjustmentIndex);
 2266              	 .loc 7 712 0
 2267 0108 0122     	 movs r2,#1
 2268 010a BB6B     	 ldr r3,[r7,#56]
 2269 010c 02FA03F3 	 lsl r3,r2,r3
 2270 0110 DBB2     	 uxtb r3,r3
 2271 0112 DB43     	 mvns r3,r3
 2272 0114 DAB2     	 uxtb r2,r3
 2273 0116 434B     	 ldr r3,.L127+4
 2274 0118 1B78     	 ldrb r3,[r3]
 2275 011a DBB2     	 uxtb r3,r3
 2276 011c 1340     	 ands r3,r3,r2
 2277 011e DBB2     	 uxtb r3,r3
 2278 0120 DAB2     	 uxtb r2,r3
 2279 0122 404B     	 ldr r3,.L127+4
 2280 0124 1A70     	 strb r2,[r3]
 713:../cleanflight/src/main/fc/rc_adjustments.c ****                 adjustmentState->timeoutAt = now + RESET_FREQUENCY_2HZ;
 2281              	 .loc 7 713 0
 2282 0126 BB6A     	 ldr r3,[r7,#40]
 2283 0128 03F5FA72 	 add r2,r3,#500
 2284 012c 3B6A     	 ldr r3,[r7,#32]
 2285 012e C3F80520 	 str r2,[r3,#5]
 714:../cleanflight/src/main/fc/rc_adjustments.c ****                 continue;
 2286              	 .loc 7 714 0
 2287 0132 6BE0     	 b .L111
 2288              	.L117:
 715:../cleanflight/src/main/fc/rc_adjustments.c ****             }
 716:../cleanflight/src/main/fc/rc_adjustments.c ****             if (IS_ADJUSTMENT_FUNCTION_BUSY(adjustmentIndex)) {
 2289              	 .loc 7 716 0
 2290 0134 3B4B     	 ldr r3,.L127+4
 2291 0136 1B78     	 ldrb r3,[r3]
 2292 0138 1A46     	 mov r2,r3
 2293 013a BB6B     	 ldr r3,[r7,#56]
 2294 013c 42FA03F3 	 asr r3,r2,r3
 2295 0140 03F00103 	 and r3,r3,#1
 2296 0144 002B     	 cmp r3,#0
 2297 0146 00D0     	 beq .L119
 717:../cleanflight/src/main/fc/rc_adjustments.c ****                 continue;
 2298              	 .loc 7 717 0
 2299 0148 60E0     	 b .L111
 2300              	.L119:
 718:../cleanflight/src/main/fc/rc_adjustments.c ****             }
 719:../cleanflight/src/main/fc/rc_adjustments.c **** 
 720:../cleanflight/src/main/fc/rc_adjustments.c ****             newValue = applyStepAdjustment(controlRateConfig, adjustmentFunction, delta);
 2301              	 .loc 7 720 0
 2302 014a FB7F     	 ldrb r3,[r7,#31]
 2303 014c 7868     	 ldr r0,[r7,#4]
 2304 014e 1946     	 mov r1,r3
 2305 0150 7A6B     	 ldr r2,[r7,#52]
 2306 0152 FFF7FEFF 	 bl applyStepAdjustment
 2307 0156 F863     	 str r0,[r7,#60]
 721:../cleanflight/src/main/fc/rc_adjustments.c ****             pidInitConfig(pidProfile);
 2308              	 .loc 7 721 0
 2309 0158 354B     	 ldr r3,.L127+16
 2310 015a 1B68     	 ldr r3,[r3]
 2311 015c 1846     	 mov r0,r3
 2312 015e FFF7FEFF 	 bl pidInitConfig
 2313              	.LBE6:
 2314 0162 36E0     	 b .L120
 2315              	.L115:
 722:../cleanflight/src/main/fc/rc_adjustments.c ****         } else if (adjustmentState->config->mode == ADJUSTMENT_MODE_SELECT) {
 2316              	 .loc 7 722 0
 2317 0164 3B6A     	 ldr r3,[r7,#32]
 2318 0166 D3F80130 	 ldr r3,[r3,#1]
 2319 016a 5B78     	 ldrb r3,[r3,#1]
 2320 016c 012B     	 cmp r3,#1
 2321 016e 30D1     	 bne .L120
 2322              	.LBB7:
 723:../cleanflight/src/main/fc/rc_adjustments.c ****             int switchPositions = adjustmentState->config->data.switchPositions;
 2323              	 .loc 7 723 0
 2324 0170 3B6A     	 ldr r3,[r7,#32]
 2325 0172 D3F80130 	 ldr r3,[r3,#1]
 2326 0176 9B78     	 ldrb r3,[r3,#2]
 2327 0178 3B63     	 str r3,[r7,#48]
 724:../cleanflight/src/main/fc/rc_adjustments.c ****             if (adjustmentFunction == ADJUSTMENT_RATE_PROFILE && systemConfig()->rateProfile6PosSwi
 2328              	 .loc 7 724 0
 2329 017a FB7F     	 ldrb r3,[r7,#31]
 2330 017c 0C2B     	 cmp r3,#12
 2331 017e 07D1     	 bne .L121
 2332              	 .loc 7 724 0 is_stmt 0 discriminator 1
 2333 0180 FFF7FEFF 	 bl systemConfig
 2334 0184 0346     	 mov r3,r0
 2335 0186 1B79     	 ldrb r3,[r3,#4]
 2336 0188 002B     	 cmp r3,#0
 2337 018a 01D0     	 beq .L121
 725:../cleanflight/src/main/fc/rc_adjustments.c ****                 switchPositions =  6;
 2338              	 .loc 7 725 0 is_stmt 1
 2339 018c 0623     	 movs r3,#6
 2340 018e 3B63     	 str r3,[r7,#48]
 2341              	.L121:
 726:../cleanflight/src/main/fc/rc_adjustments.c ****             }
 727:../cleanflight/src/main/fc/rc_adjustments.c ****             const uint16_t rangeWidth = (2100 - 900) / switchPositions;
 2342              	 .loc 7 727 0
 2343 0190 4FF49662 	 mov r2,#1200
 2344 0194 3B6B     	 ldr r3,[r7,#48]
 2345 0196 92FBF3F3 	 sdiv r3,r2,r3
 2346 019a BB83     	 strh r3,[r7,#28]
 728:../cleanflight/src/main/fc/rc_adjustments.c ****             const uint8_t position = (constrain(rcData[channelIndex], 900, 2100 - 1) - 900) / range
 2347              	 .loc 7 728 0
 2348 019c BB7F     	 ldrb r3,[r7,#30]
 2349 019e 234A     	 ldr r2,.L127+12
 2350 01a0 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 2351 01a4 1BB2     	 sxth r3,r3
 2352 01a6 1846     	 mov r0,r3
 2353 01a8 4FF46171 	 mov r1,#900
 2354 01ac 40F63302 	 movw r2,#2099
 2355 01b0 FFF7FEFF 	 bl constrain
 2356 01b4 0346     	 mov r3,r0
 2357 01b6 A3F56172 	 sub r2,r3,#900
 2358 01ba BB8B     	 ldrh r3,[r7,#28]
 2359 01bc 92FBF3F3 	 sdiv r3,r2,r3
 2360 01c0 FB76     	 strb r3,[r7,#27]
 729:../cleanflight/src/main/fc/rc_adjustments.c ****             newValue = applySelectAdjustment(adjustmentFunction, position);
 2361              	 .loc 7 729 0
 2362 01c2 FA7F     	 ldrb r2,[r7,#31]
 2363 01c4 FB7E     	 ldrb r3,[r7,#27]
 2364 01c6 1046     	 mov r0,r2
 2365 01c8 1946     	 mov r1,r3
 2366 01ca FFF7FEFF 	 bl applySelectAdjustment
 2367 01ce 0346     	 mov r3,r0
 2368 01d0 FB63     	 str r3,[r7,#60]
 2369              	.L120:
 2370              	.LBE7:
 730:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 731:../cleanflight/src/main/fc/rc_adjustments.c **** 
 732:../cleanflight/src/main/fc/rc_adjustments.c **** #if defined(USE_OSD) && defined(USE_OSD_ADJUSTMENTS)
 733:../cleanflight/src/main/fc/rc_adjustments.c ****         if (newValue != -1 && adjustmentState->config->adjustmentFunction != ADJUSTMENT_RATE_PROFIL
 2371              	 .loc 7 733 0
 2372 01d2 FB6B     	 ldr r3,[r7,#60]
 2373 01d4 B3F1FF3F 	 cmp r3,#-1
 2374 01d8 0BD0     	 beq .L122
 2375              	 .loc 7 733 0 is_stmt 0 discriminator 1
 2376 01da 3B6A     	 ldr r3,[r7,#32]
 2377 01dc D3F80130 	 ldr r3,[r3,#1]
 2378 01e0 1B78     	 ldrb r3,[r3]
 2379 01e2 0C2B     	 cmp r3,#12
 2380 01e4 05D0     	 beq .L122
 734:../cleanflight/src/main/fc/rc_adjustments.c ****             adjustmentRangeNameIndex = adjustmentFunction;
 2381              	 .loc 7 734 0 is_stmt 1
 2382 01e6 FB7F     	 ldrb r3,[r7,#31]
 2383 01e8 124A     	 ldr r2,.L127+20
 2384 01ea 1360     	 str r3,[r2]
 735:../cleanflight/src/main/fc/rc_adjustments.c ****             adjustmentRangeValue = newValue;
 2385              	 .loc 7 735 0
 2386 01ec 0E4A     	 ldr r2,.L127+8
 2387 01ee FB6B     	 ldr r3,[r7,#60]
 2388 01f0 1360     	 str r3,[r2]
 2389              	.L122:
 736:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 737:../cleanflight/src/main/fc/rc_adjustments.c **** #else
 738:../cleanflight/src/main/fc/rc_adjustments.c ****         UNUSED(newValue);
 739:../cleanflight/src/main/fc/rc_adjustments.c **** #endif
 740:../cleanflight/src/main/fc/rc_adjustments.c ****         MARK_ADJUSTMENT_FUNCTION_AS_BUSY(adjustmentIndex);
 2390              	 .loc 7 740 0
 2391 01f2 0122     	 movs r2,#1
 2392 01f4 BB6B     	 ldr r3,[r7,#56]
 2393 01f6 02FA03F3 	 lsl r3,r2,r3
 2394 01fa DAB2     	 uxtb r2,r3
 2395 01fc 094B     	 ldr r3,.L127+4
 2396 01fe 1B78     	 ldrb r3,[r3]
 2397 0200 DBB2     	 uxtb r3,r3
 2398 0202 1343     	 orrs r3,r3,r2
 2399 0204 DBB2     	 uxtb r3,r3
 2400 0206 DAB2     	 uxtb r2,r3
 2401 0208 064B     	 ldr r3,.L127+4
 2402 020a 1A70     	 strb r2,[r3]
 2403              	.L111:
 2404              	.LBE5:
 678:../cleanflight/src/main/fc/rc_adjustments.c ****         adjustmentState_t *adjustmentState = &adjustmentStates[adjustmentIndex];
 2405              	 .loc 7 678 0 discriminator 2
 2406 020c BB6B     	 ldr r3,[r7,#56]
 2407 020e 0133     	 adds r3,r3,#1
 2408 0210 BB63     	 str r3,[r7,#56]
 2409              	.L109:
 678:../cleanflight/src/main/fc/rc_adjustments.c ****         adjustmentState_t *adjustmentState = &adjustmentStates[adjustmentIndex];
 2410              	 .loc 7 678 0 is_stmt 0 discriminator 1
 2411 0212 BB6B     	 ldr r3,[r7,#56]
 2412 0214 032B     	 cmp r3,#3
 2413 0216 7FF705AF 	 ble .L123
 2414              	.LBE4:
 2415              	.LBB8:
 741:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 742:../cleanflight/src/main/fc/rc_adjustments.c **** 
 743:../cleanflight/src/main/fc/rc_adjustments.c ****     // Process Absolute adjustments
 744:../cleanflight/src/main/fc/rc_adjustments.c ****     for (int index = 0; index < MAX_ADJUSTMENT_RANGE_COUNT; index++) {
 2416              	 .loc 7 744 0 is_stmt 1
 2417 021a 0023     	 movs r3,#0
 2418 021c FB62     	 str r3,[r7,#44]
 2419 021e 6AE0     	 b .L124
 2420              	.L128:
 2421              	 .align 2
 2422              	.L127:
 2423 0220 00000000 	 .word adjustmentStates
 2424 0224 00000000 	 .word adjustmentStateMask
 2425 0228 00000000 	 .word adjustmentRangeValue
 2426 022c 00000000 	 .word rcData
 2427 0230 00000000 	 .word pidProfile
 2428 0234 00000000 	 .word adjustmentRangeNameIndex
 2429              	.L126:
 2430              	.LBB9:
 745:../cleanflight/src/main/fc/rc_adjustments.c ****         static int16_t lastRcData[MAX_ADJUSTMENT_RANGE_COUNT] = { 0 };
 746:../cleanflight/src/main/fc/rc_adjustments.c **** 
 747:../cleanflight/src/main/fc/rc_adjustments.c ****         const adjustmentRange_t * const adjustmentRange = adjustmentRanges(index);
 2431              	 .loc 7 747 0
 2432 0238 F86A     	 ldr r0,[r7,#44]
 2433 023a FFF7FEFF 	 bl adjustmentRanges
 2434 023e 7861     	 str r0,[r7,#20]
 748:../cleanflight/src/main/fc/rc_adjustments.c ****         const uint8_t channelIndex = NON_AUX_CHANNEL_COUNT + adjustmentRange->auxSwitchChannelIndex
 2435              	 .loc 7 748 0
 2436 0240 7B69     	 ldr r3,[r7,#20]
 2437 0242 1B79     	 ldrb r3,[r3,#4]
 2438 0244 0433     	 adds r3,r3,#4
 2439 0246 FB74     	 strb r3,[r7,#19]
 749:../cleanflight/src/main/fc/rc_adjustments.c ****         const adjustmentConfig_t *adjustmentConfig = &defaultAdjustmentConfigs[adjustmentRange->adj
 2440              	 .loc 7 749 0
 2441 0248 7B69     	 ldr r3,[r7,#20]
 2442 024a DB78     	 ldrb r3,[r3,#3]
 2443 024c 5A1E     	 subs r2,r3,#1
 2444 024e 1346     	 mov r3,r2
 2445 0250 5B00     	 lsls r3,r3,#1
 2446 0252 1344     	 add r3,r3,r2
 2447 0254 2B4A     	 ldr r2,.L129
 2448 0256 1344     	 add r3,r3,r2
 2449 0258 FB60     	 str r3,[r7,#12]
 750:../cleanflight/src/main/fc/rc_adjustments.c **** 
 751:../cleanflight/src/main/fc/rc_adjustments.c ****         // If setting is defined for step adjustment and center value has been specified, apply val
 752:../cleanflight/src/main/fc/rc_adjustments.c ****         if ((rcData[channelIndex] != lastRcData[index]) &&
 2450              	 .loc 7 752 0
 2451 025a FB7C     	 ldrb r3,[r7,#19]
 2452 025c 2A4A     	 ldr r2,.L129+4
 2453 025e 32F81310 	 ldrh r1,[r2,r3,lsl#1]
 2454 0262 2A4A     	 ldr r2,.L129+8
 2455 0264 FB6A     	 ldr r3,[r7,#44]
 2456 0266 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 2457 026a 0AB2     	 sxth r2,r1
 2458 026c 1BB2     	 sxth r3,r3
 2459 026e 9A42     	 cmp r2,r3
 2460 0270 3ED0     	 beq .L125
 753:../cleanflight/src/main/fc/rc_adjustments.c ****             adjustmentRange->adjustmentCenter &&
 2461              	 .loc 7 753 0 discriminator 1
 2462 0272 7B69     	 ldr r3,[r7,#20]
 2463 0274 DB88     	 ldrh r3,[r3,#6]
 2464 0276 9BB2     	 uxth r3,r3
 752:../cleanflight/src/main/fc/rc_adjustments.c ****             adjustmentRange->adjustmentCenter &&
 2465              	 .loc 7 752 0 discriminator 1
 2466 0278 002B     	 cmp r3,#0
 2467 027a 39D0     	 beq .L125
 754:../cleanflight/src/main/fc/rc_adjustments.c ****             (adjustmentConfig->mode == ADJUSTMENT_MODE_STEP) &&
 2468              	 .loc 7 754 0
 2469 027c FB68     	 ldr r3,[r7,#12]
 2470 027e 5B78     	 ldrb r3,[r3,#1]
 753:../cleanflight/src/main/fc/rc_adjustments.c ****             adjustmentRange->adjustmentCenter &&
 2471              	 .loc 7 753 0
 2472 0280 002B     	 cmp r3,#0
 2473 0282 35D1     	 bne .L125
 755:../cleanflight/src/main/fc/rc_adjustments.c ****             isRangeActive(adjustmentRange->auxChannelIndex, &adjustmentRange->range)) {
 2474              	 .loc 7 755 0
 2475 0284 7B69     	 ldr r3,[r7,#20]
 2476 0286 1A78     	 ldrb r2,[r3]
 2477 0288 7B69     	 ldr r3,[r7,#20]
 2478 028a 0133     	 adds r3,r3,#1
 2479 028c 1046     	 mov r0,r2
 2480 028e 1946     	 mov r1,r3
 2481 0290 FFF7FEFF 	 bl isRangeActive
 2482 0294 0346     	 mov r3,r0
 754:../cleanflight/src/main/fc/rc_adjustments.c ****             (adjustmentConfig->mode == ADJUSTMENT_MODE_STEP) &&
 2483              	 .loc 7 754 0
 2484 0296 002B     	 cmp r3,#0
 2485 0298 2AD0     	 beq .L125
 2486              	.LBB10:
 756:../cleanflight/src/main/fc/rc_adjustments.c ****             int value = (((rcData[channelIndex] - PWM_RANGE_MIDDLE) * adjustmentRange->adjustmentSc
 2487              	 .loc 7 756 0
 2488 029a FB7C     	 ldrb r3,[r7,#19]
 2489 029c 1A4A     	 ldr r2,.L129+4
 2490 029e 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 2491 02a2 1BB2     	 sxth r3,r3
 2492 02a4 A3F2DC53 	 subw r3,r3,#1500
 2493 02a8 7A69     	 ldr r2,[r7,#20]
 2494 02aa 1289     	 ldrh r2,[r2,#8]
 2495 02ac 92B2     	 uxth r2,r2
 2496 02ae 02FB03F3 	 mul r3,r2,r3
 2497 02b2 174A     	 ldr r2,.L129+12
 2498 02b4 82FB0312 	 smull r1,r2,r2,r3
 2499 02b8 5211     	 asrs r2,r2,#5
 2500 02ba DB17     	 asrs r3,r3,#31
 2501 02bc D31A     	 subs r3,r2,r3
 2502 02be 7A69     	 ldr r2,[r7,#20]
 2503 02c0 D288     	 ldrh r2,[r2,#6]
 2504 02c2 92B2     	 uxth r2,r2
 2505 02c4 1344     	 add r3,r3,r2
 2506 02c6 BB60     	 str r3,[r7,#8]
 757:../cleanflight/src/main/fc/rc_adjustments.c **** 
 758:../cleanflight/src/main/fc/rc_adjustments.c ****             lastRcData[index] = rcData[channelIndex];
 2507              	 .loc 7 758 0
 2508 02c8 FB7C     	 ldrb r3,[r7,#19]
 2509 02ca 0F4A     	 ldr r2,.L129+4
 2510 02cc 32F81310 	 ldrh r1,[r2,r3,lsl#1]
 2511 02d0 0E4A     	 ldr r2,.L129+8
 2512 02d2 FB6A     	 ldr r3,[r7,#44]
 2513 02d4 22F81310 	 strh r1,[r2,r3,lsl#1]
 759:../cleanflight/src/main/fc/rc_adjustments.c ****             applyAbsoluteAdjustment(controlRateConfig, adjustmentRange->adjustmentFunction, value);
 2514              	 .loc 7 759 0
 2515 02d8 7B69     	 ldr r3,[r7,#20]
 2516 02da DB78     	 ldrb r3,[r3,#3]
 2517 02dc 7868     	 ldr r0,[r7,#4]
 2518 02de 1946     	 mov r1,r3
 2519 02e0 BA68     	 ldr r2,[r7,#8]
 2520 02e2 FFF7FEFF 	 bl applyAbsoluteAdjustment
 760:../cleanflight/src/main/fc/rc_adjustments.c ****             pidInitConfig(pidProfile);
 2521              	 .loc 7 760 0
 2522 02e6 0B4B     	 ldr r3,.L129+16
 2523 02e8 1B68     	 ldr r3,[r3]
 2524 02ea 1846     	 mov r0,r3
 2525 02ec FFF7FEFF 	 bl pidInitConfig
 2526              	.L125:
 2527              	.LBE10:
 2528              	.LBE9:
 744:../cleanflight/src/main/fc/rc_adjustments.c ****         static int16_t lastRcData[MAX_ADJUSTMENT_RANGE_COUNT] = { 0 };
 2529              	 .loc 7 744 0 discriminator 2
 2530 02f0 FB6A     	 ldr r3,[r7,#44]
 2531 02f2 0133     	 adds r3,r3,#1
 2532 02f4 FB62     	 str r3,[r7,#44]
 2533              	.L124:
 744:../cleanflight/src/main/fc/rc_adjustments.c ****         static int16_t lastRcData[MAX_ADJUSTMENT_RANGE_COUNT] = { 0 };
 2534              	 .loc 7 744 0 is_stmt 0 discriminator 1
 2535 02f6 FB6A     	 ldr r3,[r7,#44]
 2536 02f8 0E2B     	 cmp r3,#14
 2537 02fa 9DDD     	 ble .L126
 2538              	.LBE8:
 761:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 762:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 763:../cleanflight/src/main/fc/rc_adjustments.c **** }
 2539              	 .loc 7 763 0 is_stmt 1
 2540 02fc 4437     	 adds r7,r7,#68
 2541              	.LCFI59:
 2542              	 .cfi_def_cfa_offset 12
 2543 02fe BD46     	 mov sp,r7
 2544              	.LCFI60:
 2545              	 .cfi_def_cfa_register 13
 2546              	 
 2547 0300 90BD     	 pop {r4,r7,pc}
 2548              	.L130:
 2549 0302 00BF     	 .align 2
 2550              	.L129:
 2551 0304 00000000 	 .word defaultAdjustmentConfigs
 2552 0308 00000000 	 .word rcData
 2553 030c 00000000 	 .word lastRcData.13468
 2554 0310 D34D6210 	 .word 274877907
 2555 0314 00000000 	 .word pidProfile
 2556              	 .cfi_endproc
 2557              	.LFE570:
 2559              	 .section .text.resetAdjustmentStates,"ax",%progbits
 2560              	 .align 2
 2561              	 .global resetAdjustmentStates
 2562              	 .thumb
 2563              	 .thumb_func
 2565              	resetAdjustmentStates:
 2566              	.LFB571:
 764:../cleanflight/src/main/fc/rc_adjustments.c **** 
 765:../cleanflight/src/main/fc/rc_adjustments.c **** void resetAdjustmentStates(void)
 766:../cleanflight/src/main/fc/rc_adjustments.c **** {
 2567              	 .loc 7 766 0
 2568              	 .cfi_startproc
 2569              	 
 2570              	 
 2571 0000 80B5     	 push {r7,lr}
 2572              	.LCFI61:
 2573              	 .cfi_def_cfa_offset 8
 2574              	 .cfi_offset 7,-8
 2575              	 .cfi_offset 14,-4
 2576 0002 00AF     	 add r7,sp,#0
 2577              	.LCFI62:
 2578              	 .cfi_def_cfa_register 7
 767:../cleanflight/src/main/fc/rc_adjustments.c ****     memset(adjustmentStates, 0, sizeof(adjustmentStates));
 2579              	 .loc 7 767 0
 2580 0004 0248     	 ldr r0,.L132
 2581 0006 0021     	 movs r1,#0
 2582 0008 2422     	 movs r2,#36
 2583 000a FFF7FEFF 	 bl memset
 768:../cleanflight/src/main/fc/rc_adjustments.c **** }
 2584              	 .loc 7 768 0
 2585 000e 80BD     	 pop {r7,pc}
 2586              	.L133:
 2587              	 .align 2
 2588              	.L132:
 2589 0010 00000000 	 .word adjustmentStates
 2590              	 .cfi_endproc
 2591              	.LFE571:
 2593              	 .section .text.updateAdjustmentStates,"ax",%progbits
 2594              	 .align 2
 2595              	 .global updateAdjustmentStates
 2596              	 .thumb
 2597              	 .thumb_func
 2599              	updateAdjustmentStates:
 2600              	.LFB572:
 769:../cleanflight/src/main/fc/rc_adjustments.c **** 
 770:../cleanflight/src/main/fc/rc_adjustments.c **** void updateAdjustmentStates(void)
 771:../cleanflight/src/main/fc/rc_adjustments.c **** {
 2601              	 .loc 7 771 0
 2602              	 .cfi_startproc
 2603              	 
 2604              	 
 2605 0000 80B5     	 push {r7,lr}
 2606              	.LCFI63:
 2607              	 .cfi_def_cfa_offset 8
 2608              	 .cfi_offset 7,-8
 2609              	 .cfi_offset 14,-4
 2610 0002 84B0     	 sub sp,sp,#16
 2611              	.LCFI64:
 2612              	 .cfi_def_cfa_offset 24
 2613 0004 00AF     	 add r7,sp,#0
 2614              	.LCFI65:
 2615              	 .cfi_def_cfa_register 7
 2616              	.LBB11:
 772:../cleanflight/src/main/fc/rc_adjustments.c ****     for (int index = 0; index < MAX_ADJUSTMENT_RANGE_COUNT; index++) {
 2617              	 .loc 7 772 0
 2618 0006 0023     	 movs r3,#0
 2619 0008 FB60     	 str r3,[r7,#12]
 2620 000a 28E0     	 b .L135
 2621              	.L137:
 2622              	.LBB12:
 773:../cleanflight/src/main/fc/rc_adjustments.c ****         const adjustmentRange_t * const adjustmentRange = adjustmentRanges(index);
 2623              	 .loc 7 773 0
 2624 000c F868     	 ldr r0,[r7,#12]
 2625 000e FFF7FEFF 	 bl adjustmentRanges
 2626 0012 B860     	 str r0,[r7,#8]
 774:../cleanflight/src/main/fc/rc_adjustments.c ****         // Only use slots if center value has not been specified, otherwise apply values directly (
 775:../cleanflight/src/main/fc/rc_adjustments.c ****         if (isRangeActive(adjustmentRange->auxChannelIndex, &adjustmentRange->range) &&
 2627              	 .loc 7 775 0
 2628 0014 BB68     	 ldr r3,[r7,#8]
 2629 0016 1A78     	 ldrb r2,[r3]
 2630 0018 BB68     	 ldr r3,[r7,#8]
 2631 001a 0133     	 adds r3,r3,#1
 2632 001c 1046     	 mov r0,r2
 2633 001e 1946     	 mov r1,r3
 2634 0020 FFF7FEFF 	 bl isRangeActive
 2635 0024 0346     	 mov r3,r0
 2636 0026 002B     	 cmp r3,#0
 2637 0028 16D0     	 beq .L136
 776:../cleanflight/src/main/fc/rc_adjustments.c ****             (adjustmentRange->adjustmentCenter == 0)) {
 2638              	 .loc 7 776 0 discriminator 1
 2639 002a BB68     	 ldr r3,[r7,#8]
 2640 002c DB88     	 ldrh r3,[r3,#6]
 2641 002e 9BB2     	 uxth r3,r3
 775:../cleanflight/src/main/fc/rc_adjustments.c ****             (adjustmentRange->adjustmentCenter == 0)) {
 2642              	 .loc 7 775 0 discriminator 1
 2643 0030 002B     	 cmp r3,#0
 2644 0032 11D1     	 bne .L136
 2645              	.LBB13:
 777:../cleanflight/src/main/fc/rc_adjustments.c ****             const adjustmentConfig_t *adjustmentConfig = &defaultAdjustmentConfigs[adjustmentRange-
 2646              	 .loc 7 777 0
 2647 0034 BB68     	 ldr r3,[r7,#8]
 2648 0036 DB78     	 ldrb r3,[r3,#3]
 2649 0038 5A1E     	 subs r2,r3,#1
 2650 003a 1346     	 mov r3,r2
 2651 003c 5B00     	 lsls r3,r3,#1
 2652 003e 1344     	 add r3,r3,r2
 2653 0040 0A4A     	 ldr r2,.L138
 2654 0042 1344     	 add r3,r3,r2
 2655 0044 7B60     	 str r3,[r7,#4]
 778:../cleanflight/src/main/fc/rc_adjustments.c ****             configureAdjustment(adjustmentRange->adjustmentIndex, adjustmentRange->auxSwitchChannel
 2656              	 .loc 7 778 0
 2657 0046 BB68     	 ldr r3,[r7,#8]
 2658 0048 5A79     	 ldrb r2,[r3,#5]
 2659 004a BB68     	 ldr r3,[r7,#8]
 2660 004c 1B79     	 ldrb r3,[r3,#4]
 2661 004e 1046     	 mov r0,r2
 2662 0050 1946     	 mov r1,r3
 2663 0052 7A68     	 ldr r2,[r7,#4]
 2664 0054 FFF7FEFF 	 bl configureAdjustment
 2665              	.L136:
 2666              	.LBE13:
 2667              	.LBE12:
 772:../cleanflight/src/main/fc/rc_adjustments.c ****         const adjustmentRange_t * const adjustmentRange = adjustmentRanges(index);
 2668              	 .loc 7 772 0 discriminator 2
 2669 0058 FB68     	 ldr r3,[r7,#12]
 2670 005a 0133     	 adds r3,r3,#1
 2671 005c FB60     	 str r3,[r7,#12]
 2672              	.L135:
 772:../cleanflight/src/main/fc/rc_adjustments.c ****         const adjustmentRange_t * const adjustmentRange = adjustmentRanges(index);
 2673              	 .loc 7 772 0 is_stmt 0 discriminator 1
 2674 005e FB68     	 ldr r3,[r7,#12]
 2675 0060 0E2B     	 cmp r3,#14
 2676 0062 D3DD     	 ble .L137
 2677              	.LBE11:
 779:../cleanflight/src/main/fc/rc_adjustments.c ****         }
 780:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 781:../cleanflight/src/main/fc/rc_adjustments.c **** }
 2678              	 .loc 7 781 0 is_stmt 1
 2679 0064 1037     	 adds r7,r7,#16
 2680              	.LCFI66:
 2681              	 .cfi_def_cfa_offset 8
 2682 0066 BD46     	 mov sp,r7
 2683              	.LCFI67:
 2684              	 .cfi_def_cfa_register 13
 2685              	 
 2686 0068 80BD     	 pop {r7,pc}
 2687              	.L139:
 2688 006a 00BF     	 .align 2
 2689              	.L138:
 2690 006c 00000000 	 .word defaultAdjustmentConfigs
 2691              	 .cfi_endproc
 2692              	.LFE572:
 2694              	 .section .text.useAdjustmentConfig,"ax",%progbits
 2695              	 .align 2
 2696              	 .global useAdjustmentConfig
 2697              	 .thumb
 2698              	 .thumb_func
 2700              	useAdjustmentConfig:
 2701              	.LFB573:
 782:../cleanflight/src/main/fc/rc_adjustments.c **** 
 783:../cleanflight/src/main/fc/rc_adjustments.c **** void useAdjustmentConfig(pidProfile_t *pidProfileToUse)
 784:../cleanflight/src/main/fc/rc_adjustments.c **** {
 2702              	 .loc 7 784 0
 2703              	 .cfi_startproc
 2704              	 
 2705              	 
 2706              	 
 2707 0000 80B4     	 push {r7}
 2708              	.LCFI68:
 2709              	 .cfi_def_cfa_offset 4
 2710              	 .cfi_offset 7,-4
 2711 0002 83B0     	 sub sp,sp,#12
 2712              	.LCFI69:
 2713              	 .cfi_def_cfa_offset 16
 2714 0004 00AF     	 add r7,sp,#0
 2715              	.LCFI70:
 2716              	 .cfi_def_cfa_register 7
 2717 0006 7860     	 str r0,[r7,#4]
 785:../cleanflight/src/main/fc/rc_adjustments.c ****     pidProfile = pidProfileToUse;
 2718              	 .loc 7 785 0
 2719 0008 034A     	 ldr r2,.L141
 2720 000a 7B68     	 ldr r3,[r7,#4]
 2721 000c 1360     	 str r3,[r2]
 786:../cleanflight/src/main/fc/rc_adjustments.c **** }
 2722              	 .loc 7 786 0
 2723 000e 0C37     	 adds r7,r7,#12
 2724              	.LCFI71:
 2725              	 .cfi_def_cfa_offset 4
 2726 0010 BD46     	 mov sp,r7
 2727              	.LCFI72:
 2728              	 .cfi_def_cfa_register 13
 2729              	 
 2730 0012 5DF8047B 	 ldr r7,[sp],#4
 2731              	.LCFI73:
 2732              	 .cfi_restore 7
 2733              	 .cfi_def_cfa_offset 0
 2734 0016 7047     	 bx lr
 2735              	.L142:
 2736              	 .align 2
 2737              	.L141:
 2738 0018 00000000 	 .word pidProfile
 2739              	 .cfi_endproc
 2740              	.LFE573:
 2742              	 .section .text.getAdjustmentsRangeName,"ax",%progbits
 2743              	 .align 2
 2744              	 .global getAdjustmentsRangeName
 2745              	 .thumb
 2746              	 .thumb_func
 2748              	getAdjustmentsRangeName:
 2749              	.LFB574:
 787:../cleanflight/src/main/fc/rc_adjustments.c **** 
 788:../cleanflight/src/main/fc/rc_adjustments.c **** #if defined(USE_OSD) && defined(USE_OSD_ADJUSTMENTS)
 789:../cleanflight/src/main/fc/rc_adjustments.c **** const char *getAdjustmentsRangeName(void) {
 2750              	 .loc 7 789 0
 2751              	 .cfi_startproc
 2752              	 
 2753              	 
 2754              	 
 2755 0000 80B4     	 push {r7}
 2756              	.LCFI74:
 2757              	 .cfi_def_cfa_offset 4
 2758              	 .cfi_offset 7,-4
 2759 0002 00AF     	 add r7,sp,#0
 2760              	.LCFI75:
 2761              	 .cfi_def_cfa_register 7
 790:../cleanflight/src/main/fc/rc_adjustments.c ****     if (adjustmentRangeNameIndex > 0) {
 2762              	 .loc 7 790 0
 2763 0004 084B     	 ldr r3,.L146
 2764 0006 1B68     	 ldr r3,[r3]
 2765 0008 002B     	 cmp r3,#0
 2766 000a 06DD     	 ble .L144
 791:../cleanflight/src/main/fc/rc_adjustments.c ****         return &adjustmentLabels[adjustmentRangeNameIndex - 1][0];
 2767              	 .loc 7 791 0
 2768 000c 064B     	 ldr r3,.L146
 2769 000e 1B68     	 ldr r3,[r3]
 2770 0010 013B     	 subs r3,r3,#1
 2771 0012 064A     	 ldr r2,.L146+4
 2772 0014 52F82330 	 ldr r3,[r2,r3,lsl#2]
 2773 0018 00E0     	 b .L145
 2774              	.L144:
 792:../cleanflight/src/main/fc/rc_adjustments.c ****     } else {
 793:../cleanflight/src/main/fc/rc_adjustments.c ****         return NULL;
 2775              	 .loc 7 793 0
 2776 001a 0023     	 movs r3,#0
 2777              	.L145:
 794:../cleanflight/src/main/fc/rc_adjustments.c ****     }
 795:../cleanflight/src/main/fc/rc_adjustments.c **** }
 2778              	 .loc 7 795 0
 2779 001c 1846     	 mov r0,r3
 2780 001e BD46     	 mov sp,r7
 2781              	.LCFI76:
 2782              	 .cfi_def_cfa_register 13
 2783              	 
 2784 0020 5DF8047B 	 ldr r7,[sp],#4
 2785              	.LCFI77:
 2786              	 .cfi_restore 7
 2787              	 .cfi_def_cfa_offset 0
 2788 0024 7047     	 bx lr
 2789              	.L147:
 2790 0026 00BF     	 .align 2
 2791              	.L146:
 2792 0028 00000000 	 .word adjustmentRangeNameIndex
 2793 002c 00000000 	 .word adjustmentLabels
 2794              	 .cfi_endproc
 2795              	.LFE574:
 2797              	 .section .text.getAdjustmentsRangeValue,"ax",%progbits
 2798              	 .align 2
 2799              	 .global getAdjustmentsRangeValue
 2800              	 .thumb
 2801              	 .thumb_func
 2803              	getAdjustmentsRangeValue:
 2804              	.LFB575:
 796:../cleanflight/src/main/fc/rc_adjustments.c **** 
 797:../cleanflight/src/main/fc/rc_adjustments.c **** int getAdjustmentsRangeValue(void) {
 2805              	 .loc 7 797 0
 2806              	 .cfi_startproc
 2807              	 
 2808              	 
 2809              	 
 2810 0000 80B4     	 push {r7}
 2811              	.LCFI78:
 2812              	 .cfi_def_cfa_offset 4
 2813              	 .cfi_offset 7,-4
 2814 0002 00AF     	 add r7,sp,#0
 2815              	.LCFI79:
 2816              	 .cfi_def_cfa_register 7
 798:../cleanflight/src/main/fc/rc_adjustments.c ****     return adjustmentRangeValue;
 2817              	 .loc 7 798 0
 2818 0004 034B     	 ldr r3,.L150
 2819 0006 1B68     	 ldr r3,[r3]
 799:../cleanflight/src/main/fc/rc_adjustments.c **** }
 2820              	 .loc 7 799 0
 2821 0008 1846     	 mov r0,r3
 2822 000a BD46     	 mov sp,r7
 2823              	.LCFI80:
 2824              	 .cfi_def_cfa_register 13
 2825              	 
 2826 000c 5DF8047B 	 ldr r7,[sp],#4
 2827              	.LCFI81:
 2828              	 .cfi_restore 7
 2829              	 .cfi_def_cfa_offset 0
 2830 0010 7047     	 bx lr
 2831              	.L151:
 2832 0012 00BF     	 .align 2
 2833              	.L150:
 2834 0014 00000000 	 .word adjustmentRangeValue
 2835              	 .cfi_endproc
 2836              	.LFE575:
 2838              	 .section .bss.lastRcData.13468,"aw",%nobits
 2839              	 .align 2
 2842              	lastRcData.13468:
 2843 0000 00000000 	 .space 30
 2843      00000000 
 2843      00000000 
 2843      00000000 
 2843      00000000 
 2844 001e 0000     	 .text
 2845              	.Letext0:
 2846              	 .file 8 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2847              	 .file 9 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2848              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 2849              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pg.h"
 2850              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 2851              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/blackbox/blackbox_fielddefs.h"
 2852              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/axis.h"
 2853              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 2854              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 2855              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/pid.h"
 2856              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/pidaudio.h"
 2857              	 .file 19 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/controlrate_profile.h"
 2858              	 .file 20 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_modes.h"
 2859              	 .file 21 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_controls.h"
 2860              	 .file 22 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/rx/rx.h"
 2861              	 .file 23 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 2862              	 .file 24 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rc_adjustments.c
    {standard input}:20     .text.cmp32:00000000 $t
    {standard input}:24     .text.cmp32:00000000 cmp32
    {standard input}:65     .text.blackboxConfig:00000000 $t
    {standard input}:69     .text.blackboxConfig:00000000 blackboxConfig
    {standard input}:99     .text.blackboxConfig:00000010 $d
    {standard input}:104    .text.constrain:00000000 $t
    {standard input}:108    .text.constrain:00000000 constrain
    {standard input}:168    .text.rxConfig:00000000 $t
    {standard input}:172    .text.rxConfig:00000000 rxConfig
    {standard input}:202    .text.rxConfig:00000010 $d
    {standard input}:207    .text.systemConfig:00000000 $t
    {standard input}:211    .text.systemConfig:00000000 systemConfig
    {standard input}:241    .text.systemConfig:00000010 $d
    {standard input}:246    .text.adjustmentRanges:00000000 $t
    {standard input}:250    .text.adjustmentRanges:00000000 adjustmentRanges
    {standard input}:293    .text.adjustmentRanges:00000024 $d
                            *COM*:00000096 adjustmentRanges_SystemArray
                            *COM*:00000096 adjustmentRanges_CopyArray
    {standard input}:304    .pg_registry:00000000 adjustmentRanges_Registry
    {standard input}:301    .pg_registry:00000000 $d
    {standard input}:316    .data.pidAudioPositionToModeMap:00000000 pidAudioPositionToModeMap
    {standard input}:313    .data.pidAudioPositionToModeMap:00000000 $d
    {standard input}:325    .bss.pidProfile:00000000 $d
    {standard input}:328    .bss.pidProfile:00000000 pidProfile
    {standard input}:331    .text.blackboxLogInflightAdjustmentEvent:00000000 $t
    {standard input}:335    .text.blackboxLogInflightAdjustmentEvent:00000000 blackboxLogInflightAdjustmentEvent
    {standard input}:394    .bss.adjustmentStateMask:00000000 adjustmentStateMask
    {standard input}:395    .bss.adjustmentStateMask:00000000 $d
    {standard input}:397    .rodata.defaultAdjustmentConfigs:00000000 $d
    {standard input}:400    .rodata.defaultAdjustmentConfigs:00000000 defaultAdjustmentConfigs
    {standard input}:487    .rodata:00000000 $d
    {standard input}:581    .rodata.adjustmentLabels:00000000 $d
    {standard input}:584    .rodata.adjustmentLabels:00000000 adjustmentLabels
    {standard input}:618    .bss.adjustmentRangeNameIndex:00000000 $d
    {standard input}:621    .bss.adjustmentRangeNameIndex:00000000 adjustmentRangeNameIndex
    {standard input}:624    .data.adjustmentRangeValue:00000000 $d
    {standard input}:627    .data.adjustmentRangeValue:00000000 adjustmentRangeValue
    {standard input}:630    .bss.adjustmentStates:00000000 $d
    {standard input}:633    .bss.adjustmentStates:00000000 adjustmentStates
    {standard input}:636    .text.configureAdjustment:00000000 $t
    {standard input}:640    .text.configureAdjustment:00000000 configureAdjustment
    {standard input}:729    .text.configureAdjustment:00000074 $d
    {standard input}:735    .text.applyStepAdjustment:00000000 $t
    {standard input}:739    .text.applyStepAdjustment:00000000 applyStepAdjustment
    {standard input}:783    .text.applyStepAdjustment:00000030 $d
    {standard input}:815    .text.applyStepAdjustment:000000b0 $t
    {standard input}:1403   .text.applyStepAdjustment:000004ac $d
    {standard input}:1408   .text.applyAbsoluteAdjustment:00000000 $t
    {standard input}:1412   .text.applyAbsoluteAdjustment:00000000 applyAbsoluteAdjustment
    {standard input}:1456   .text.applyAbsoluteAdjustment:00000030 $d
    {standard input}:1488   .text.applyAbsoluteAdjustment:000000b0 $t
    {standard input}:1814   .text.applyAbsoluteAdjustment:000002c8 $d
    {standard input}:1817   .text.applyAbsoluteAdjustment:000002cc $t
    {standard input}:1955   .text.applyAbsoluteAdjustment:000003b0 $d
    {standard input}:1960   .text.applySelectAdjustment:00000000 $t
    {standard input}:1964   .text.applySelectAdjustment:00000000 applySelectAdjustment
    {standard input}:2098   .text.applySelectAdjustment:000000b4 $d
    {standard input}:2103   .text.processRcAdjustments:00000000 $t
    {standard input}:2108   .text.processRcAdjustments:00000000 processRcAdjustments
    {standard input}:2423   .text.processRcAdjustments:00000220 $d
    {standard input}:2432   .text.processRcAdjustments:00000238 $t
    {standard input}:2551   .text.processRcAdjustments:00000304 $d
    {standard input}:2842   .bss.lastRcData.13468:00000000 lastRcData.13468
    {standard input}:2560   .text.resetAdjustmentStates:00000000 $t
    {standard input}:2565   .text.resetAdjustmentStates:00000000 resetAdjustmentStates
    {standard input}:2589   .text.resetAdjustmentStates:00000010 $d
    {standard input}:2594   .text.updateAdjustmentStates:00000000 $t
    {standard input}:2599   .text.updateAdjustmentStates:00000000 updateAdjustmentStates
    {standard input}:2690   .text.updateAdjustmentStates:0000006c $d
    {standard input}:2695   .text.useAdjustmentConfig:00000000 $t
    {standard input}:2700   .text.useAdjustmentConfig:00000000 useAdjustmentConfig
    {standard input}:2738   .text.useAdjustmentConfig:00000018 $d
    {standard input}:2743   .text.getAdjustmentsRangeName:00000000 $t
    {standard input}:2748   .text.getAdjustmentsRangeName:00000000 getAdjustmentsRangeName
    {standard input}:2792   .text.getAdjustmentsRangeName:00000028 $d
    {standard input}:2798   .text.getAdjustmentsRangeValue:00000000 $t
    {standard input}:2803   .text.getAdjustmentsRangeValue:00000000 getAdjustmentsRangeValue
    {standard input}:2834   .text.getAdjustmentsRangeValue:00000014 $d
    {standard input}:2839   .bss.lastRcData.13468:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
blackboxConfig_System
rxConfig_System
systemConfig_System
blackboxLogEvent
beeperConfirmationBeeps
initRcProcessing
getCurrentControlRateProfileIndex
changeControlRateProfile
millis
rxIsReceivingSignal
pidInitConfig
rcData
isRangeActive
memset
