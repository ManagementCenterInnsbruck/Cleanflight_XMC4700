   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "runtime_config.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global armingFlags
  20              	 .section .bss.armingFlags,"aw",%nobits
  23              	armingFlags:
  24 0000 00       	 .space 1
  25              	 .global stateFlags
  26              	 .section .bss.stateFlags,"aw",%nobits
  29              	stateFlags:
  30 0000 00       	 .space 1
  31              	 .global flightModeFlags
  32              	 .section .bss.flightModeFlags,"aw",%nobits
  33              	 .align 1
  36              	flightModeFlags:
  37 0000 0000     	 .space 2
  38              	 .section .bss.enabledSensors,"aw",%nobits
  39              	 .align 2
  42              	enabledSensors:
  43 0000 00000000 	 .space 4
  44              	 .global armingDisableFlagNames
  45              	 .section .rodata
  46              	 .align 2
  47              	.LC0:
  48 0000 4E4F4759 	 .ascii "NOGYRO\000"
  48      524F00
  49 0007 00       	 .align 2
  50              	.LC1:
  51 0008 4641494C 	 .ascii "FAILSAFE\000"
  51      53414645 
  51      00
  52 0011 000000   	 .align 2
  53              	.LC2:
  54 0014 52584C4F 	 .ascii "RXLOSS\000"
  54      535300
  55 001b 00       	 .align 2
  56              	.LC3:
  57 001c 42414452 	 .ascii "BADRX\000"
  57      5800
  58 0022 0000     	 .align 2
  59              	.LC4:
  60 0024 424F5846 	 .ascii "BOXFAILSAFE\000"
  60      41494C53 
  60      41464500 
  61              	 .align 2
  62              	.LC5:
  63 0030 52554E41 	 .ascii "RUNAWAY\000"
  63      57415900 
  64              	 .align 2
  65              	.LC6:
  66 0038 5448524F 	 .ascii "THROTTLE\000"
  66      54544C45 
  66      00
  67 0041 000000   	 .align 2
  68              	.LC7:
  69 0044 414E474C 	 .ascii "ANGLE\000"
  69      4500
  70 004a 0000     	 .align 2
  71              	.LC8:
  72 004c 424F4F54 	 .ascii "BOOTGRACE\000"
  72      47524143 
  72      4500
  73 0056 0000     	 .align 2
  74              	.LC9:
  75 0058 4E4F5052 	 .ascii "NOPREARM\000"
  75      4541524D 
  75      00
  76 0061 000000   	 .align 2
  77              	.LC10:
  78 0064 4C4F4144 	 .ascii "LOAD\000"
  78      00
  79 0069 000000   	 .align 2
  80              	.LC11:
  81 006c 43414C49 	 .ascii "CALIB\000"
  81      4200
  82 0072 0000     	 .align 2
  83              	.LC12:
  84 0074 434C4900 	 .ascii "CLI\000"
  85              	 .align 2
  86              	.LC13:
  87 0078 434D5300 	 .ascii "CMS\000"
  88              	 .align 2
  89              	.LC14:
  90 007c 4F534400 	 .ascii "OSD\000"
  91              	 .align 2
  92              	.LC15:
  93 0080 42535400 	 .ascii "BST\000"
  94              	 .align 2
  95              	.LC16:
  96 0084 4D535000 	 .ascii "MSP\000"
  97              	 .align 2
  98              	.LC17:
  99 0088 50415241 	 .ascii "PARALYZE\000"
  99      4C595A45 
  99      00
 100 0091 000000   	 .align 2
 101              	.LC18:
 102 0094 47505300 	 .ascii "GPS\000"
 103              	 .align 2
 104              	.LC19:
 105 0098 41524D53 	 .ascii "ARMSWITCH\000"
 105      57495443 
 105      4800
 106 00a2 0000     	 .section .data.armingDisableFlagNames,"aw",%progbits
 107              	 .align 2
 110              	armingDisableFlagNames:
 111 0000 00000000 	 .word .LC0
 112 0004 08000000 	 .word .LC1
 113 0008 14000000 	 .word .LC2
 114 000c 1C000000 	 .word .LC3
 115 0010 24000000 	 .word .LC4
 116 0014 30000000 	 .word .LC5
 117 0018 38000000 	 .word .LC6
 118 001c 44000000 	 .word .LC7
 119 0020 4C000000 	 .word .LC8
 120 0024 58000000 	 .word .LC9
 121 0028 64000000 	 .word .LC10
 122 002c 6C000000 	 .word .LC11
 123 0030 74000000 	 .word .LC12
 124 0034 78000000 	 .word .LC13
 125 0038 7C000000 	 .word .LC14
 126 003c 80000000 	 .word .LC15
 127 0040 84000000 	 .word .LC16
 128 0044 88000000 	 .word .LC17
 129 0048 94000000 	 .word .LC18
 130 004c 98000000 	 .word .LC19
 131              	 .section .bss.armingDisableFlags,"aw",%nobits
 132              	 .align 2
 135              	armingDisableFlags:
 136 0000 00000000 	 .space 4
 137              	 .section .text.setArmingDisabled,"ax",%progbits
 138              	 .align 2
 139              	 .global setArmingDisabled
 140              	 .thumb
 141              	 .thumb_func
 143              	setArmingDisabled:
 144              	.LFB527:
 145              	 .file 1 "../cleanflight/src/main/fc/runtime_config.c"
   1:../cleanflight/src/main/fc/runtime_config.c **** /*
   2:../cleanflight/src/main/fc/runtime_config.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/fc/runtime_config.c ****  *
   4:../cleanflight/src/main/fc/runtime_config.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/fc/runtime_config.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/fc/runtime_config.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/fc/runtime_config.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/fc/runtime_config.c ****  * any later version.
   9:../cleanflight/src/main/fc/runtime_config.c ****  *
  10:../cleanflight/src/main/fc/runtime_config.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/fc/runtime_config.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/fc/runtime_config.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/fc/runtime_config.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/fc/runtime_config.c ****  *
  15:../cleanflight/src/main/fc/runtime_config.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/fc/runtime_config.c ****  * along with this software.
  17:../cleanflight/src/main/fc/runtime_config.c ****  *
  18:../cleanflight/src/main/fc/runtime_config.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/fc/runtime_config.c ****  */
  20:../cleanflight/src/main/fc/runtime_config.c **** 
  21:../cleanflight/src/main/fc/runtime_config.c **** #include <stdbool.h>
  22:../cleanflight/src/main/fc/runtime_config.c **** #include <stdint.h>
  23:../cleanflight/src/main/fc/runtime_config.c **** 
  24:../cleanflight/src/main/fc/runtime_config.c **** #include "platform.h"
  25:../cleanflight/src/main/fc/runtime_config.c **** 
  26:../cleanflight/src/main/fc/runtime_config.c **** #include "fc/runtime_config.h"
  27:../cleanflight/src/main/fc/runtime_config.c **** #include "io/beeper.h"
  28:../cleanflight/src/main/fc/runtime_config.c **** 
  29:../cleanflight/src/main/fc/runtime_config.c **** uint8_t armingFlags = 0;
  30:../cleanflight/src/main/fc/runtime_config.c **** uint8_t stateFlags = 0;
  31:../cleanflight/src/main/fc/runtime_config.c **** uint16_t flightModeFlags = 0;
  32:../cleanflight/src/main/fc/runtime_config.c **** 
  33:../cleanflight/src/main/fc/runtime_config.c **** static uint32_t enabledSensors = 0;
  34:../cleanflight/src/main/fc/runtime_config.c **** 
  35:../cleanflight/src/main/fc/runtime_config.c **** // Must be shorter than OSD_WARNINGS_MAX_SIZE (11) to be displayed fully in OSD
  36:../cleanflight/src/main/fc/runtime_config.c **** const char *armingDisableFlagNames[]= {
  37:../cleanflight/src/main/fc/runtime_config.c ****     "NOGYRO",
  38:../cleanflight/src/main/fc/runtime_config.c ****     "FAILSAFE",
  39:../cleanflight/src/main/fc/runtime_config.c ****     "RXLOSS",
  40:../cleanflight/src/main/fc/runtime_config.c ****     "BADRX",
  41:../cleanflight/src/main/fc/runtime_config.c ****     "BOXFAILSAFE",
  42:../cleanflight/src/main/fc/runtime_config.c ****     "RUNAWAY",
  43:../cleanflight/src/main/fc/runtime_config.c ****     "THROTTLE",
  44:../cleanflight/src/main/fc/runtime_config.c ****     "ANGLE",
  45:../cleanflight/src/main/fc/runtime_config.c ****     "BOOTGRACE",
  46:../cleanflight/src/main/fc/runtime_config.c ****     "NOPREARM",
  47:../cleanflight/src/main/fc/runtime_config.c ****     "LOAD",
  48:../cleanflight/src/main/fc/runtime_config.c ****     "CALIB",
  49:../cleanflight/src/main/fc/runtime_config.c ****     "CLI",
  50:../cleanflight/src/main/fc/runtime_config.c ****     "CMS",
  51:../cleanflight/src/main/fc/runtime_config.c ****     "OSD",
  52:../cleanflight/src/main/fc/runtime_config.c ****     "BST",
  53:../cleanflight/src/main/fc/runtime_config.c ****     "MSP",
  54:../cleanflight/src/main/fc/runtime_config.c ****     "PARALYZE",
  55:../cleanflight/src/main/fc/runtime_config.c ****     "GPS",
  56:../cleanflight/src/main/fc/runtime_config.c ****     "ARMSWITCH"
  57:../cleanflight/src/main/fc/runtime_config.c **** };
  58:../cleanflight/src/main/fc/runtime_config.c **** 
  59:../cleanflight/src/main/fc/runtime_config.c **** static armingDisableFlags_e armingDisableFlags = 0;
  60:../cleanflight/src/main/fc/runtime_config.c **** 
  61:../cleanflight/src/main/fc/runtime_config.c **** void setArmingDisabled(armingDisableFlags_e flag)
  62:../cleanflight/src/main/fc/runtime_config.c **** {
 146              	 .loc 1 62 0
 147              	 .cfi_startproc
 148              	 
 149              	 
 150              	 
 151 0000 80B4     	 push {r7}
 152              	.LCFI0:
 153              	 .cfi_def_cfa_offset 4
 154              	 .cfi_offset 7,-4
 155 0002 83B0     	 sub sp,sp,#12
 156              	.LCFI1:
 157              	 .cfi_def_cfa_offset 16
 158 0004 00AF     	 add r7,sp,#0
 159              	.LCFI2:
 160              	 .cfi_def_cfa_register 7
 161 0006 7860     	 str r0,[r7,#4]
  63:../cleanflight/src/main/fc/runtime_config.c ****     armingDisableFlags = armingDisableFlags | flag;
 162              	 .loc 1 63 0
 163 0008 054B     	 ldr r3,.L2
 164 000a 1A68     	 ldr r2,[r3]
 165 000c 7B68     	 ldr r3,[r7,#4]
 166 000e 1343     	 orrs r3,r3,r2
 167 0010 034A     	 ldr r2,.L2
 168 0012 1360     	 str r3,[r2]
  64:../cleanflight/src/main/fc/runtime_config.c **** }
 169              	 .loc 1 64 0
 170 0014 0C37     	 adds r7,r7,#12
 171              	.LCFI3:
 172              	 .cfi_def_cfa_offset 4
 173 0016 BD46     	 mov sp,r7
 174              	.LCFI4:
 175              	 .cfi_def_cfa_register 13
 176              	 
 177 0018 5DF8047B 	 ldr r7,[sp],#4
 178              	.LCFI5:
 179              	 .cfi_restore 7
 180              	 .cfi_def_cfa_offset 0
 181 001c 7047     	 bx lr
 182              	.L3:
 183 001e 00BF     	 .align 2
 184              	.L2:
 185 0020 00000000 	 .word armingDisableFlags
 186              	 .cfi_endproc
 187              	.LFE527:
 189              	 .section .text.unsetArmingDisabled,"ax",%progbits
 190              	 .align 2
 191              	 .global unsetArmingDisabled
 192              	 .thumb
 193              	 .thumb_func
 195              	unsetArmingDisabled:
 196              	.LFB528:
  65:../cleanflight/src/main/fc/runtime_config.c **** 
  66:../cleanflight/src/main/fc/runtime_config.c **** void unsetArmingDisabled(armingDisableFlags_e flag)
  67:../cleanflight/src/main/fc/runtime_config.c **** {
 197              	 .loc 1 67 0
 198              	 .cfi_startproc
 199              	 
 200              	 
 201              	 
 202 0000 80B4     	 push {r7}
 203              	.LCFI6:
 204              	 .cfi_def_cfa_offset 4
 205              	 .cfi_offset 7,-4
 206 0002 83B0     	 sub sp,sp,#12
 207              	.LCFI7:
 208              	 .cfi_def_cfa_offset 16
 209 0004 00AF     	 add r7,sp,#0
 210              	.LCFI8:
 211              	 .cfi_def_cfa_register 7
 212 0006 7860     	 str r0,[r7,#4]
  68:../cleanflight/src/main/fc/runtime_config.c ****     armingDisableFlags = armingDisableFlags & ~flag;
 213              	 .loc 1 68 0
 214 0008 7B68     	 ldr r3,[r7,#4]
 215 000a DA43     	 mvns r2,r3
 216 000c 044B     	 ldr r3,.L5
 217 000e 1B68     	 ldr r3,[r3]
 218 0010 1340     	 ands r3,r3,r2
 219 0012 034A     	 ldr r2,.L5
 220 0014 1360     	 str r3,[r2]
  69:../cleanflight/src/main/fc/runtime_config.c **** }
 221              	 .loc 1 69 0
 222 0016 0C37     	 adds r7,r7,#12
 223              	.LCFI9:
 224              	 .cfi_def_cfa_offset 4
 225 0018 BD46     	 mov sp,r7
 226              	.LCFI10:
 227              	 .cfi_def_cfa_register 13
 228              	 
 229 001a 5DF8047B 	 ldr r7,[sp],#4
 230              	.LCFI11:
 231              	 .cfi_restore 7
 232              	 .cfi_def_cfa_offset 0
 233 001e 7047     	 bx lr
 234              	.L6:
 235              	 .align 2
 236              	.L5:
 237 0020 00000000 	 .word armingDisableFlags
 238              	 .cfi_endproc
 239              	.LFE528:
 241              	 .section .text.isArmingDisabled,"ax",%progbits
 242              	 .align 2
 243              	 .global isArmingDisabled
 244              	 .thumb
 245              	 .thumb_func
 247              	isArmingDisabled:
 248              	.LFB529:
  70:../cleanflight/src/main/fc/runtime_config.c **** 
  71:../cleanflight/src/main/fc/runtime_config.c **** bool isArmingDisabled(void)
  72:../cleanflight/src/main/fc/runtime_config.c **** {
 249              	 .loc 1 72 0
 250              	 .cfi_startproc
 251              	 
 252              	 
 253              	 
 254 0000 80B4     	 push {r7}
 255              	.LCFI12:
 256              	 .cfi_def_cfa_offset 4
 257              	 .cfi_offset 7,-4
 258 0002 00AF     	 add r7,sp,#0
 259              	.LCFI13:
 260              	 .cfi_def_cfa_register 7
  73:../cleanflight/src/main/fc/runtime_config.c ****     return armingDisableFlags;
 261              	 .loc 1 73 0
 262 0004 054B     	 ldr r3,.L9
 263 0006 1B68     	 ldr r3,[r3]
 264 0008 002B     	 cmp r3,#0
 265 000a 14BF     	 ite ne
 266 000c 0123     	 movne r3,#1
 267 000e 0023     	 moveq r3,#0
 268 0010 DBB2     	 uxtb r3,r3
  74:../cleanflight/src/main/fc/runtime_config.c **** }
 269              	 .loc 1 74 0
 270 0012 1846     	 mov r0,r3
 271 0014 BD46     	 mov sp,r7
 272              	.LCFI14:
 273              	 .cfi_def_cfa_register 13
 274              	 
 275 0016 5DF8047B 	 ldr r7,[sp],#4
 276              	.LCFI15:
 277              	 .cfi_restore 7
 278              	 .cfi_def_cfa_offset 0
 279 001a 7047     	 bx lr
 280              	.L10:
 281              	 .align 2
 282              	.L9:
 283 001c 00000000 	 .word armingDisableFlags
 284              	 .cfi_endproc
 285              	.LFE529:
 287              	 .section .text.getArmingDisableFlags,"ax",%progbits
 288              	 .align 2
 289              	 .global getArmingDisableFlags
 290              	 .thumb
 291              	 .thumb_func
 293              	getArmingDisableFlags:
 294              	.LFB530:
  75:../cleanflight/src/main/fc/runtime_config.c **** 
  76:../cleanflight/src/main/fc/runtime_config.c **** armingDisableFlags_e getArmingDisableFlags(void)
  77:../cleanflight/src/main/fc/runtime_config.c **** {
 295              	 .loc 1 77 0
 296              	 .cfi_startproc
 297              	 
 298              	 
 299              	 
 300 0000 80B4     	 push {r7}
 301              	.LCFI16:
 302              	 .cfi_def_cfa_offset 4
 303              	 .cfi_offset 7,-4
 304 0002 00AF     	 add r7,sp,#0
 305              	.LCFI17:
 306              	 .cfi_def_cfa_register 7
  78:../cleanflight/src/main/fc/runtime_config.c ****     return armingDisableFlags;
 307              	 .loc 1 78 0
 308 0004 034B     	 ldr r3,.L13
 309 0006 1B68     	 ldr r3,[r3]
  79:../cleanflight/src/main/fc/runtime_config.c **** }
 310              	 .loc 1 79 0
 311 0008 1846     	 mov r0,r3
 312 000a BD46     	 mov sp,r7
 313              	.LCFI18:
 314              	 .cfi_def_cfa_register 13
 315              	 
 316 000c 5DF8047B 	 ldr r7,[sp],#4
 317              	.LCFI19:
 318              	 .cfi_restore 7
 319              	 .cfi_def_cfa_offset 0
 320 0010 7047     	 bx lr
 321              	.L14:
 322 0012 00BF     	 .align 2
 323              	.L13:
 324 0014 00000000 	 .word armingDisableFlags
 325              	 .cfi_endproc
 326              	.LFE530:
 328              	 .section .text.enableFlightMode,"ax",%progbits
 329              	 .align 2
 330              	 .global enableFlightMode
 331              	 .thumb
 332              	 .thumb_func
 334              	enableFlightMode:
 335              	.LFB531:
  80:../cleanflight/src/main/fc/runtime_config.c **** 
  81:../cleanflight/src/main/fc/runtime_config.c **** /**
  82:../cleanflight/src/main/fc/runtime_config.c ****  * Enables the given flight mode.  A beep is sounded if the flight mode
  83:../cleanflight/src/main/fc/runtime_config.c ****  * has changed.  Returns the new 'flightModeFlags' value.
  84:../cleanflight/src/main/fc/runtime_config.c ****  */
  85:../cleanflight/src/main/fc/runtime_config.c **** uint16_t enableFlightMode(flightModeFlags_e mask)
  86:../cleanflight/src/main/fc/runtime_config.c **** {
 336              	 .loc 1 86 0
 337              	 .cfi_startproc
 338              	 
 339              	 
 340 0000 80B5     	 push {r7,lr}
 341              	.LCFI20:
 342              	 .cfi_def_cfa_offset 8
 343              	 .cfi_offset 7,-8
 344              	 .cfi_offset 14,-4
 345 0002 84B0     	 sub sp,sp,#16
 346              	.LCFI21:
 347              	 .cfi_def_cfa_offset 24
 348 0004 00AF     	 add r7,sp,#0
 349              	.LCFI22:
 350              	 .cfi_def_cfa_register 7
 351 0006 0346     	 mov r3,r0
 352 0008 FB80     	 strh r3,[r7,#6]
  87:../cleanflight/src/main/fc/runtime_config.c ****     uint16_t oldVal = flightModeFlags;
 353              	 .loc 1 87 0
 354 000a 0C4B     	 ldr r3,.L18
 355 000c 1B88     	 ldrh r3,[r3]
 356 000e FB81     	 strh r3,[r7,#14]
  88:../cleanflight/src/main/fc/runtime_config.c **** 
  89:../cleanflight/src/main/fc/runtime_config.c ****     flightModeFlags |= (mask);
 357              	 .loc 1 89 0
 358 0010 0A4B     	 ldr r3,.L18
 359 0012 1A88     	 ldrh r2,[r3]
 360 0014 FB88     	 ldrh r3,[r7,#6]
 361 0016 1343     	 orrs r3,r3,r2
 362 0018 9AB2     	 uxth r2,r3
 363 001a 084B     	 ldr r3,.L18
 364 001c 1A80     	 strh r2,[r3]
  90:../cleanflight/src/main/fc/runtime_config.c ****     if (flightModeFlags != oldVal)
 365              	 .loc 1 90 0
 366 001e 074B     	 ldr r3,.L18
 367 0020 1B88     	 ldrh r3,[r3]
 368 0022 FA89     	 ldrh r2,[r7,#14]
 369 0024 9A42     	 cmp r2,r3
 370 0026 02D0     	 beq .L16
  91:../cleanflight/src/main/fc/runtime_config.c ****         beeperConfirmationBeeps(1);
 371              	 .loc 1 91 0
 372 0028 0120     	 movs r0,#1
 373 002a FFF7FEFF 	 bl beeperConfirmationBeeps
 374              	.L16:
  92:../cleanflight/src/main/fc/runtime_config.c ****     return flightModeFlags;
 375              	 .loc 1 92 0
 376 002e 034B     	 ldr r3,.L18
 377 0030 1B88     	 ldrh r3,[r3]
  93:../cleanflight/src/main/fc/runtime_config.c **** }
 378              	 .loc 1 93 0
 379 0032 1846     	 mov r0,r3
 380 0034 1037     	 adds r7,r7,#16
 381              	.LCFI23:
 382              	 .cfi_def_cfa_offset 8
 383 0036 BD46     	 mov sp,r7
 384              	.LCFI24:
 385              	 .cfi_def_cfa_register 13
 386              	 
 387 0038 80BD     	 pop {r7,pc}
 388              	.L19:
 389 003a 00BF     	 .align 2
 390              	.L18:
 391 003c 00000000 	 .word flightModeFlags
 392              	 .cfi_endproc
 393              	.LFE531:
 395              	 .section .text.disableFlightMode,"ax",%progbits
 396              	 .align 2
 397              	 .global disableFlightMode
 398              	 .thumb
 399              	 .thumb_func
 401              	disableFlightMode:
 402              	.LFB532:
  94:../cleanflight/src/main/fc/runtime_config.c **** 
  95:../cleanflight/src/main/fc/runtime_config.c **** /**
  96:../cleanflight/src/main/fc/runtime_config.c ****  * Disables the given flight mode.  A beep is sounded if the flight mode
  97:../cleanflight/src/main/fc/runtime_config.c ****  * has changed.  Returns the new 'flightModeFlags' value.
  98:../cleanflight/src/main/fc/runtime_config.c ****  */
  99:../cleanflight/src/main/fc/runtime_config.c **** uint16_t disableFlightMode(flightModeFlags_e mask)
 100:../cleanflight/src/main/fc/runtime_config.c **** {
 403              	 .loc 1 100 0
 404              	 .cfi_startproc
 405              	 
 406              	 
 407 0000 80B5     	 push {r7,lr}
 408              	.LCFI25:
 409              	 .cfi_def_cfa_offset 8
 410              	 .cfi_offset 7,-8
 411              	 .cfi_offset 14,-4
 412 0002 84B0     	 sub sp,sp,#16
 413              	.LCFI26:
 414              	 .cfi_def_cfa_offset 24
 415 0004 00AF     	 add r7,sp,#0
 416              	.LCFI27:
 417              	 .cfi_def_cfa_register 7
 418 0006 0346     	 mov r3,r0
 419 0008 FB80     	 strh r3,[r7,#6]
 101:../cleanflight/src/main/fc/runtime_config.c ****     uint16_t oldVal = flightModeFlags;
 420              	 .loc 1 101 0
 421 000a 0E4B     	 ldr r3,.L23
 422 000c 1B88     	 ldrh r3,[r3]
 423 000e FB81     	 strh r3,[r7,#14]
 102:../cleanflight/src/main/fc/runtime_config.c **** 
 103:../cleanflight/src/main/fc/runtime_config.c ****     flightModeFlags &= ~(mask);
 424              	 .loc 1 103 0
 425 0010 FB88     	 ldrh r3,[r7,#6]
 426 0012 DB43     	 mvns r3,r3
 427 0014 9AB2     	 uxth r2,r3
 428 0016 0B4B     	 ldr r3,.L23
 429 0018 1B88     	 ldrh r3,[r3]
 430 001a 9BB2     	 uxth r3,r3
 431 001c 1340     	 ands r3,r3,r2
 432 001e 9BB2     	 uxth r3,r3
 433 0020 9AB2     	 uxth r2,r3
 434 0022 084B     	 ldr r3,.L23
 435 0024 1A80     	 strh r2,[r3]
 104:../cleanflight/src/main/fc/runtime_config.c ****     if (flightModeFlags != oldVal)
 436              	 .loc 1 104 0
 437 0026 074B     	 ldr r3,.L23
 438 0028 1B88     	 ldrh r3,[r3]
 439 002a FA89     	 ldrh r2,[r7,#14]
 440 002c 9A42     	 cmp r2,r3
 441 002e 02D0     	 beq .L21
 105:../cleanflight/src/main/fc/runtime_config.c ****         beeperConfirmationBeeps(1);
 442              	 .loc 1 105 0
 443 0030 0120     	 movs r0,#1
 444 0032 FFF7FEFF 	 bl beeperConfirmationBeeps
 445              	.L21:
 106:../cleanflight/src/main/fc/runtime_config.c ****     return flightModeFlags;
 446              	 .loc 1 106 0
 447 0036 034B     	 ldr r3,.L23
 448 0038 1B88     	 ldrh r3,[r3]
 107:../cleanflight/src/main/fc/runtime_config.c **** }
 449              	 .loc 1 107 0
 450 003a 1846     	 mov r0,r3
 451 003c 1037     	 adds r7,r7,#16
 452              	.LCFI28:
 453              	 .cfi_def_cfa_offset 8
 454 003e BD46     	 mov sp,r7
 455              	.LCFI29:
 456              	 .cfi_def_cfa_register 13
 457              	 
 458 0040 80BD     	 pop {r7,pc}
 459              	.L24:
 460 0042 00BF     	 .align 2
 461              	.L23:
 462 0044 00000000 	 .word flightModeFlags
 463              	 .cfi_endproc
 464              	.LFE532:
 466              	 .section .text.sensors,"ax",%progbits
 467              	 .align 2
 468              	 .global sensors
 469              	 .thumb
 470              	 .thumb_func
 472              	sensors:
 473              	.LFB533:
 108:../cleanflight/src/main/fc/runtime_config.c **** 
 109:../cleanflight/src/main/fc/runtime_config.c **** bool sensors(uint32_t mask)
 110:../cleanflight/src/main/fc/runtime_config.c **** {
 474              	 .loc 1 110 0
 475              	 .cfi_startproc
 476              	 
 477              	 
 478              	 
 479 0000 80B4     	 push {r7}
 480              	.LCFI30:
 481              	 .cfi_def_cfa_offset 4
 482              	 .cfi_offset 7,-4
 483 0002 83B0     	 sub sp,sp,#12
 484              	.LCFI31:
 485              	 .cfi_def_cfa_offset 16
 486 0004 00AF     	 add r7,sp,#0
 487              	.LCFI32:
 488              	 .cfi_def_cfa_register 7
 489 0006 7860     	 str r0,[r7,#4]
 111:../cleanflight/src/main/fc/runtime_config.c ****     return enabledSensors & mask;
 490              	 .loc 1 111 0
 491 0008 074B     	 ldr r3,.L27
 492 000a 1A68     	 ldr r2,[r3]
 493 000c 7B68     	 ldr r3,[r7,#4]
 494 000e 1340     	 ands r3,r3,r2
 495 0010 002B     	 cmp r3,#0
 496 0012 14BF     	 ite ne
 497 0014 0123     	 movne r3,#1
 498 0016 0023     	 moveq r3,#0
 499 0018 DBB2     	 uxtb r3,r3
 112:../cleanflight/src/main/fc/runtime_config.c **** }
 500              	 .loc 1 112 0
 501 001a 1846     	 mov r0,r3
 502 001c 0C37     	 adds r7,r7,#12
 503              	.LCFI33:
 504              	 .cfi_def_cfa_offset 4
 505 001e BD46     	 mov sp,r7
 506              	.LCFI34:
 507              	 .cfi_def_cfa_register 13
 508              	 
 509 0020 5DF8047B 	 ldr r7,[sp],#4
 510              	.LCFI35:
 511              	 .cfi_restore 7
 512              	 .cfi_def_cfa_offset 0
 513 0024 7047     	 bx lr
 514              	.L28:
 515 0026 00BF     	 .align 2
 516              	.L27:
 517 0028 00000000 	 .word enabledSensors
 518              	 .cfi_endproc
 519              	.LFE533:
 521              	 .section .text.sensorsSet,"ax",%progbits
 522              	 .align 2
 523              	 .global sensorsSet
 524              	 .thumb
 525              	 .thumb_func
 527              	sensorsSet:
 528              	.LFB534:
 113:../cleanflight/src/main/fc/runtime_config.c **** 
 114:../cleanflight/src/main/fc/runtime_config.c **** void sensorsSet(uint32_t mask)
 115:../cleanflight/src/main/fc/runtime_config.c **** {
 529              	 .loc 1 115 0
 530              	 .cfi_startproc
 531              	 
 532              	 
 533              	 
 534 0000 80B4     	 push {r7}
 535              	.LCFI36:
 536              	 .cfi_def_cfa_offset 4
 537              	 .cfi_offset 7,-4
 538 0002 83B0     	 sub sp,sp,#12
 539              	.LCFI37:
 540              	 .cfi_def_cfa_offset 16
 541 0004 00AF     	 add r7,sp,#0
 542              	.LCFI38:
 543              	 .cfi_def_cfa_register 7
 544 0006 7860     	 str r0,[r7,#4]
 116:../cleanflight/src/main/fc/runtime_config.c ****     enabledSensors |= mask;
 545              	 .loc 1 116 0
 546 0008 054B     	 ldr r3,.L30
 547 000a 1A68     	 ldr r2,[r3]
 548 000c 7B68     	 ldr r3,[r7,#4]
 549 000e 1343     	 orrs r3,r3,r2
 550 0010 034A     	 ldr r2,.L30
 551 0012 1360     	 str r3,[r2]
 117:../cleanflight/src/main/fc/runtime_config.c **** }
 552              	 .loc 1 117 0
 553 0014 0C37     	 adds r7,r7,#12
 554              	.LCFI39:
 555              	 .cfi_def_cfa_offset 4
 556 0016 BD46     	 mov sp,r7
 557              	.LCFI40:
 558              	 .cfi_def_cfa_register 13
 559              	 
 560 0018 5DF8047B 	 ldr r7,[sp],#4
 561              	.LCFI41:
 562              	 .cfi_restore 7
 563              	 .cfi_def_cfa_offset 0
 564 001c 7047     	 bx lr
 565              	.L31:
 566 001e 00BF     	 .align 2
 567              	.L30:
 568 0020 00000000 	 .word enabledSensors
 569              	 .cfi_endproc
 570              	.LFE534:
 572              	 .section .text.sensorsClear,"ax",%progbits
 573              	 .align 2
 574              	 .global sensorsClear
 575              	 .thumb
 576              	 .thumb_func
 578              	sensorsClear:
 579              	.LFB535:
 118:../cleanflight/src/main/fc/runtime_config.c **** 
 119:../cleanflight/src/main/fc/runtime_config.c **** void sensorsClear(uint32_t mask)
 120:../cleanflight/src/main/fc/runtime_config.c **** {
 580              	 .loc 1 120 0
 581              	 .cfi_startproc
 582              	 
 583              	 
 584              	 
 585 0000 80B4     	 push {r7}
 586              	.LCFI42:
 587              	 .cfi_def_cfa_offset 4
 588              	 .cfi_offset 7,-4
 589 0002 83B0     	 sub sp,sp,#12
 590              	.LCFI43:
 591              	 .cfi_def_cfa_offset 16
 592 0004 00AF     	 add r7,sp,#0
 593              	.LCFI44:
 594              	 .cfi_def_cfa_register 7
 595 0006 7860     	 str r0,[r7,#4]
 121:../cleanflight/src/main/fc/runtime_config.c ****     enabledSensors &= ~(mask);
 596              	 .loc 1 121 0
 597 0008 7B68     	 ldr r3,[r7,#4]
 598 000a DA43     	 mvns r2,r3
 599 000c 044B     	 ldr r3,.L33
 600 000e 1B68     	 ldr r3,[r3]
 601 0010 1340     	 ands r3,r3,r2
 602 0012 034A     	 ldr r2,.L33
 603 0014 1360     	 str r3,[r2]
 122:../cleanflight/src/main/fc/runtime_config.c **** }
 604              	 .loc 1 122 0
 605 0016 0C37     	 adds r7,r7,#12
 606              	.LCFI45:
 607              	 .cfi_def_cfa_offset 4
 608 0018 BD46     	 mov sp,r7
 609              	.LCFI46:
 610              	 .cfi_def_cfa_register 13
 611              	 
 612 001a 5DF8047B 	 ldr r7,[sp],#4
 613              	.LCFI47:
 614              	 .cfi_restore 7
 615              	 .cfi_def_cfa_offset 0
 616 001e 7047     	 bx lr
 617              	.L34:
 618              	 .align 2
 619              	.L33:
 620 0020 00000000 	 .word enabledSensors
 621              	 .cfi_endproc
 622              	.LFE535:
 624              	 .section .text.sensorsMask,"ax",%progbits
 625              	 .align 2
 626              	 .global sensorsMask
 627              	 .thumb
 628              	 .thumb_func
 630              	sensorsMask:
 631              	.LFB536:
 123:../cleanflight/src/main/fc/runtime_config.c **** 
 124:../cleanflight/src/main/fc/runtime_config.c **** uint32_t sensorsMask(void)
 125:../cleanflight/src/main/fc/runtime_config.c **** {
 632              	 .loc 1 125 0
 633              	 .cfi_startproc
 634              	 
 635              	 
 636              	 
 637 0000 80B4     	 push {r7}
 638              	.LCFI48:
 639              	 .cfi_def_cfa_offset 4
 640              	 .cfi_offset 7,-4
 641 0002 00AF     	 add r7,sp,#0
 642              	.LCFI49:
 643              	 .cfi_def_cfa_register 7
 126:../cleanflight/src/main/fc/runtime_config.c ****     return enabledSensors;
 644              	 .loc 1 126 0
 645 0004 034B     	 ldr r3,.L37
 646 0006 1B68     	 ldr r3,[r3]
 127:../cleanflight/src/main/fc/runtime_config.c **** }
 647              	 .loc 1 127 0
 648 0008 1846     	 mov r0,r3
 649 000a BD46     	 mov sp,r7
 650              	.LCFI50:
 651              	 .cfi_def_cfa_register 13
 652              	 
 653 000c 5DF8047B 	 ldr r7,[sp],#4
 654              	.LCFI51:
 655              	 .cfi_restore 7
 656              	 .cfi_def_cfa_offset 0
 657 0010 7047     	 bx lr
 658              	.L38:
 659 0012 00BF     	 .align 2
 660              	.L37:
 661 0014 00000000 	 .word enabledSensors
 662              	 .cfi_endproc
 663              	.LFE536:
 665              	 .text
 666              	.Letext0:
 667              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 668              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 669              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 670              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/runtime_config.h"
 671              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 672              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 673              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 runtime_config.c
    {standard input}:23     .bss.armingFlags:00000000 armingFlags
    {standard input}:24     .bss.armingFlags:00000000 $d
    {standard input}:29     .bss.stateFlags:00000000 stateFlags
    {standard input}:30     .bss.stateFlags:00000000 $d
    {standard input}:36     .bss.flightModeFlags:00000000 flightModeFlags
    {standard input}:33     .bss.flightModeFlags:00000000 $d
    {standard input}:39     .bss.enabledSensors:00000000 $d
    {standard input}:42     .bss.enabledSensors:00000000 enabledSensors
    {standard input}:110    .data.armingDisableFlagNames:00000000 armingDisableFlagNames
    {standard input}:46     .rodata:00000000 $d
    {standard input}:107    .data.armingDisableFlagNames:00000000 $d
    {standard input}:132    .bss.armingDisableFlags:00000000 $d
    {standard input}:135    .bss.armingDisableFlags:00000000 armingDisableFlags
    {standard input}:138    .text.setArmingDisabled:00000000 $t
    {standard input}:143    .text.setArmingDisabled:00000000 setArmingDisabled
    {standard input}:185    .text.setArmingDisabled:00000020 $d
    {standard input}:190    .text.unsetArmingDisabled:00000000 $t
    {standard input}:195    .text.unsetArmingDisabled:00000000 unsetArmingDisabled
    {standard input}:237    .text.unsetArmingDisabled:00000020 $d
    {standard input}:242    .text.isArmingDisabled:00000000 $t
    {standard input}:247    .text.isArmingDisabled:00000000 isArmingDisabled
    {standard input}:283    .text.isArmingDisabled:0000001c $d
    {standard input}:288    .text.getArmingDisableFlags:00000000 $t
    {standard input}:293    .text.getArmingDisableFlags:00000000 getArmingDisableFlags
    {standard input}:324    .text.getArmingDisableFlags:00000014 $d
    {standard input}:329    .text.enableFlightMode:00000000 $t
    {standard input}:334    .text.enableFlightMode:00000000 enableFlightMode
    {standard input}:391    .text.enableFlightMode:0000003c $d
    {standard input}:396    .text.disableFlightMode:00000000 $t
    {standard input}:401    .text.disableFlightMode:00000000 disableFlightMode
    {standard input}:462    .text.disableFlightMode:00000044 $d
    {standard input}:467    .text.sensors:00000000 $t
    {standard input}:472    .text.sensors:00000000 sensors
    {standard input}:517    .text.sensors:00000028 $d
    {standard input}:522    .text.sensorsSet:00000000 $t
    {standard input}:527    .text.sensorsSet:00000000 sensorsSet
    {standard input}:568    .text.sensorsSet:00000020 $d
    {standard input}:573    .text.sensorsClear:00000000 $t
    {standard input}:578    .text.sensorsClear:00000000 sensorsClear
    {standard input}:620    .text.sensorsClear:00000020 $d
    {standard input}:625    .text.sensorsMask:00000000 $t
    {standard input}:630    .text.sensorsMask:00000000 sensorsMask
    {standard input}:661    .text.sensorsMask:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
beeperConfirmationBeeps
