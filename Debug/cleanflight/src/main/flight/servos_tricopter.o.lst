   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "servos_tricopter.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm inputSource_e,1,1
  20              	 .section .text.servoConfig,"ax",%progbits
  21              	 .align 2
  22              	 .thumb
  23              	 .thumb_func
  25              	servoConfig:
  26              	.LFB542:
  27              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/servos.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #include "drivers/io_types.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #include "drivers/pwm_output.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** // These must be consecutive, see 'reversedSources'
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** enum {
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_STABILIZED_ROLL = 0,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_STABILIZED_PITCH,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_STABILIZED_YAW,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_STABILIZED_THROTTLE,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_ROLL,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_PITCH,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_YAW,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_THROTTLE,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_AUX1,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_AUX2,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_AUX3,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_RC_AUX4,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_GIMBAL_PITCH,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_GIMBAL_ROLL,
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     INPUT_SOURCE_COUNT
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } inputSource_e;
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** // target servo channels
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef enum {
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_GIMBAL_PITCH = 0,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_GIMBAL_ROLL = 1,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_FLAPS = 2,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_FLAPPERON_1 = 3,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_FLAPPERON_2 = 4,
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_RUDDER = 5,
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_ELEVATOR = 6,
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_THROTTLE = 7, // for internal combustion (IC) planes
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_BICOPTER_LEFT = 4,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_BICOPTER_RIGHT = 5,
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_DUALCOPTER_LEFT = 4,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_DUALCOPTER_RIGHT = 5,
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_SINGLECOPTER_1 = 3,
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_SINGLECOPTER_2 = 4,
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_SINGLECOPTER_3 = 5,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_SINGLECOPTER_4 = 6,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_HELI_LEFT = 0,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_HELI_RIGHT = 1,
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_HELI_TOP = 2,
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     SERVO_HELI_RUD = 3
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } servoIndex_e; // FIXME rename to servoChannel_e
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_PLANE_INDEX_MIN SERVO_FLAPS
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_PLANE_INDEX_MAX SERVO_THROTTLE
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_DUALCOPTER_INDEX_MIN SERVO_DUALCOPTER_LEFT
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_DUALCOPTER_INDEX_MAX SERVO_DUALCOPTER_RIGHT
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_SINGLECOPTER_INDEX_MIN SERVO_SINGLECOPTER_1
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_SINGLECOPTER_INDEX_MAX SERVO_SINGLECOPTER_4
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_FLAPPERONS_MIN SERVO_FLAPPERON_1
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define SERVO_FLAPPERONS_MAX SERVO_FLAPPERON_2
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define MAX_SERVO_RULES (2 * MAX_SUPPORTED_SERVOS)
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef struct servoMixer_s {
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t targetChannel;                  // servo that receives the output of the rule
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t inputSource;                    // input channel for this rule
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t rate;                            // range [-125;+125] ; can be used to adjust a rate 0-1
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t speed;                          // reduces the speed of the rule, 0=unlimited speed
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t min;                             // lower bound of rule range [0;100]% of servo max-min
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t max;                             // lower bound of rule range [0;100]% of servo max-min
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t box;                            // active rule if box is enabled, range [0;3], 0=no box
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } servoMixer_t;
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** PG_DECLARE_ARRAY(servoMixer_t, MAX_SERVO_RULES, customServoMixers);
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define MAX_SERVO_SPEED UINT8_MAX
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** #define MAX_SERVO_BOXES 3
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** // Custom mixer configuration
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef struct mixerRules_s {
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t servoRuleCount;
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     const servoMixer_t *rule;
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } mixerRules_t;
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** extern const mixerRules_t servoMixers[];
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef struct servoParam_s {
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint32_t reversedSources;               // the direction of servo movement for each input sourc
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int16_t min;                            // servo min
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int16_t max;                            // servo max
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int16_t middle;                         // servo middle
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t rate;                            // range [-125;+125] ; can be used to adjust a rate 0-1
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     int8_t forwardFromChannel;              // RX channel index, 0 based.  See CHANNEL_FORWARDING_D
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } servoParam_t;
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** PG_DECLARE_ARRAY(servoParam_t, MAX_SUPPORTED_SERVOS, servoParams);
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** typedef struct servoConfig_s {
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     servoDevConfig_t dev;
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint16_t servo_lowpass_freq;            // lowpass servo filter frequency selection; 1/1000ths 
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t tri_unarmed_servo;              // send tail servo correction pulses even when unarmed
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h ****     uint8_t channelForwardingStartChannel;
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** } servoConfig_t;
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** 
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\servos.h **** PG_DECLARE(servoConfig_t, servoConfig);
  28              	 .loc 1 130 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 00AF     	 add r7,sp,#0
  38              	.LCFI1:
  39              	 .cfi_def_cfa_register 7
  40              	 .loc 1 130 0
  41 0004 024B     	 ldr r3,.L3
  42 0006 1846     	 mov r0,r3
  43 0008 BD46     	 mov sp,r7
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 13
  46              	 
  47 000a 5DF8047B 	 ldr r7,[sp],#4
  48              	.LCFI3:
  49              	 .cfi_restore 7
  50              	 .cfi_def_cfa_offset 0
  51 000e 7047     	 bx lr
  52              	.L4:
  53              	 .align 2
  54              	.L3:
  55 0010 00000000 	 .word servoConfig_System
  56              	 .cfi_endproc
  57              	.LFE542:
  59              	 .section .text.servosTricopterIsEnabledServoUnarmed,"ax",%progbits
  60              	 .align 2
  61              	 .global servosTricopterIsEnabledServoUnarmed
  62              	 .thumb
  63              	 .thumb_func
  65              	servosTricopterIsEnabledServoUnarmed:
  66              	.LFB544:
  67              	 .file 2 "../cleanflight/src/main/flight/servos_tricopter.c"
   1:../cleanflight/src/main/flight/servos_tricopter.c **** /*
   2:../cleanflight/src/main/flight/servos_tricopter.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/flight/servos_tricopter.c ****  *
   4:../cleanflight/src/main/flight/servos_tricopter.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/flight/servos_tricopter.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/flight/servos_tricopter.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/flight/servos_tricopter.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/flight/servos_tricopter.c ****  * any later version.
   9:../cleanflight/src/main/flight/servos_tricopter.c ****  *
  10:../cleanflight/src/main/flight/servos_tricopter.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/flight/servos_tricopter.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/flight/servos_tricopter.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/flight/servos_tricopter.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/flight/servos_tricopter.c ****  *
  15:../cleanflight/src/main/flight/servos_tricopter.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/flight/servos_tricopter.c ****  * along with this software.
  17:../cleanflight/src/main/flight/servos_tricopter.c ****  *
  18:../cleanflight/src/main/flight/servos_tricopter.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/flight/servos_tricopter.c ****  */
  20:../cleanflight/src/main/flight/servos_tricopter.c **** 
  21:../cleanflight/src/main/flight/servos_tricopter.c **** #include <stdbool.h>
  22:../cleanflight/src/main/flight/servos_tricopter.c **** #include <stdint.h>
  23:../cleanflight/src/main/flight/servos_tricopter.c **** 
  24:../cleanflight/src/main/flight/servos_tricopter.c **** #include "platform.h"
  25:../cleanflight/src/main/flight/servos_tricopter.c **** 
  26:../cleanflight/src/main/flight/servos_tricopter.c **** #ifdef USE_SERVOS
  27:../cleanflight/src/main/flight/servos_tricopter.c **** 
  28:../cleanflight/src/main/flight/servos_tricopter.c **** #include "flight/mixer.h"
  29:../cleanflight/src/main/flight/servos_tricopter.c **** #include "flight/mixer_tricopter.h"
  30:../cleanflight/src/main/flight/servos_tricopter.c **** #include "flight/servos.h"
  31:../cleanflight/src/main/flight/servos_tricopter.c **** 
  32:../cleanflight/src/main/flight/servos_tricopter.c **** 
  33:../cleanflight/src/main/flight/servos_tricopter.c **** bool servosTricopterIsEnabledServoUnarmed(void)
  34:../cleanflight/src/main/flight/servos_tricopter.c **** {
  68              	 .loc 2 34 0
  69              	 .cfi_startproc
  70              	 
  71              	 
  72 0000 80B5     	 push {r7,lr}
  73              	.LCFI4:
  74              	 .cfi_def_cfa_offset 8
  75              	 .cfi_offset 7,-8
  76              	 .cfi_offset 14,-4
  77 0002 00AF     	 add r7,sp,#0
  78              	.LCFI5:
  79              	 .cfi_def_cfa_register 7
  35:../cleanflight/src/main/flight/servos_tricopter.c ****     return servoConfig()->tri_unarmed_servo;
  80              	 .loc 2 35 0
  81 0004 FFF7FEFF 	 bl servoConfig
  82 0008 0346     	 mov r3,r0
  83 000a 9B7B     	 ldrb r3,[r3,#14]
  84 000c 002B     	 cmp r3,#0
  85 000e 14BF     	 ite ne
  86 0010 0123     	 movne r3,#1
  87 0012 0023     	 moveq r3,#0
  88 0014 DBB2     	 uxtb r3,r3
  36:../cleanflight/src/main/flight/servos_tricopter.c **** }
  89              	 .loc 2 36 0
  90 0016 1846     	 mov r0,r3
  91 0018 80BD     	 pop {r7,pc}
  92              	 .cfi_endproc
  93              	.LFE544:
  95 001a 00BF     	 .section .text.servosTricopterMixer,"ax",%progbits
  96              	 .align 2
  97              	 .global servosTricopterMixer
  98              	 .thumb
  99              	 .thumb_func
 101              	servosTricopterMixer:
 102              	.LFB545:
  37:../cleanflight/src/main/flight/servos_tricopter.c **** 
  38:../cleanflight/src/main/flight/servos_tricopter.c **** void servosTricopterMixer(void)
  39:../cleanflight/src/main/flight/servos_tricopter.c **** {
 103              	 .loc 2 39 0
 104              	 .cfi_startproc
 105              	 
 106              	 
 107 0000 80B5     	 push {r7,lr}
 108              	.LCFI6:
 109              	 .cfi_def_cfa_offset 8
 110              	 .cfi_offset 7,-8
 111              	 .cfi_offset 14,-4
 112 0002 00AF     	 add r7,sp,#0
 113              	.LCFI7:
 114              	 .cfi_def_cfa_register 7
  40:../cleanflight/src/main/flight/servos_tricopter.c ****     servoMixer();
 115              	 .loc 2 40 0
 116 0004 FFF7FEFF 	 bl servoMixer
  41:../cleanflight/src/main/flight/servos_tricopter.c **** }
 117              	 .loc 2 41 0
 118 0008 80BD     	 pop {r7,pc}
 119              	 .cfi_endproc
 120              	.LFE545:
 122 000a 00BF     	 .section .text.servosTricopterInit,"ax",%progbits
 123              	 .align 2
 124              	 .global servosTricopterInit
 125              	 .thumb
 126              	 .thumb_func
 128              	servosTricopterInit:
 129              	.LFB546:
  42:../cleanflight/src/main/flight/servos_tricopter.c **** 
  43:../cleanflight/src/main/flight/servos_tricopter.c **** void servosTricopterInit(void)
  44:../cleanflight/src/main/flight/servos_tricopter.c **** {
 130              	 .loc 2 44 0
 131              	 .cfi_startproc
 132              	 
 133              	 
 134              	 
 135 0000 80B4     	 push {r7}
 136              	.LCFI8:
 137              	 .cfi_def_cfa_offset 4
 138              	 .cfi_offset 7,-4
 139 0002 00AF     	 add r7,sp,#0
 140              	.LCFI9:
 141              	 .cfi_def_cfa_register 7
  45:../cleanflight/src/main/flight/servos_tricopter.c **** 
  46:../cleanflight/src/main/flight/servos_tricopter.c **** }
 142              	 .loc 2 46 0
 143 0004 BD46     	 mov sp,r7
 144              	.LCFI10:
 145              	 .cfi_def_cfa_register 13
 146              	 
 147 0006 5DF8047B 	 ldr r7,[sp],#4
 148              	.LCFI11:
 149              	 .cfi_restore 7
 150              	 .cfi_def_cfa_offset 0
 151 000a 7047     	 bx lr
 152              	 .cfi_endproc
 153              	.LFE546:
 155              	 .text
 156              	.Letext0:
 157              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 158              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 159              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 160              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 161              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 162              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/pwm_output.h"
 163              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/mixer.h"
 164              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/mixer_tricopter.h"
 165              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 166              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 servos_tricopter.c
                            *COM*:00000001 inputSource_e
    {standard input}:21     .text.servoConfig:00000000 $t
    {standard input}:25     .text.servoConfig:00000000 servoConfig
    {standard input}:55     .text.servoConfig:00000010 $d
    {standard input}:60     .text.servosTricopterIsEnabledServoUnarmed:00000000 $t
    {standard input}:65     .text.servosTricopterIsEnabledServoUnarmed:00000000 servosTricopterIsEnabledServoUnarmed
    {standard input}:96     .text.servosTricopterMixer:00000000 $t
    {standard input}:101    .text.servosTricopterMixer:00000000 servosTricopterMixer
    {standard input}:123    .text.servosTricopterInit:00000000 $t
    {standard input}:128    .text.servosTricopterInit:00000000 servosTricopterInit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
servoConfig_System
servoMixer
