   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "tramp_protocol.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.trampCrc,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	trampCrc:
  25              	.LFB526:
  26              	 .file 1 "../cleanflight/src/main/interface/tramp_protocol.c"
   1:../cleanflight/src/main/interface/tramp_protocol.c **** /*
   2:../cleanflight/src/main/interface/tramp_protocol.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/interface/tramp_protocol.c ****  *
   4:../cleanflight/src/main/interface/tramp_protocol.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/interface/tramp_protocol.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/interface/tramp_protocol.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/interface/tramp_protocol.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/interface/tramp_protocol.c ****  * any later version.
   9:../cleanflight/src/main/interface/tramp_protocol.c ****  *
  10:../cleanflight/src/main/interface/tramp_protocol.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/interface/tramp_protocol.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/interface/tramp_protocol.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/interface/tramp_protocol.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/interface/tramp_protocol.c ****  *
  15:../cleanflight/src/main/interface/tramp_protocol.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/interface/tramp_protocol.c ****  * along with this software.
  17:../cleanflight/src/main/interface/tramp_protocol.c ****  *
  18:../cleanflight/src/main/interface/tramp_protocol.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/interface/tramp_protocol.c ****  */
  20:../cleanflight/src/main/interface/tramp_protocol.c **** 
  21:../cleanflight/src/main/interface/tramp_protocol.c **** #include <string.h>
  22:../cleanflight/src/main/interface/tramp_protocol.c **** #include "platform.h"
  23:../cleanflight/src/main/interface/tramp_protocol.c **** #include "common/utils.h"
  24:../cleanflight/src/main/interface/tramp_protocol.c **** #include "interface/tramp_protocol.h"
  25:../cleanflight/src/main/interface/tramp_protocol.c **** 
  26:../cleanflight/src/main/interface/tramp_protocol.c **** #define TRAMP_SYNC_START            0x0F
  27:../cleanflight/src/main/interface/tramp_protocol.c **** #define TRAMP_SYNC_STOP             0x00
  28:../cleanflight/src/main/interface/tramp_protocol.c **** #define TRAMP_COMMAND_SET_FREQ      'F' // 0x46
  29:../cleanflight/src/main/interface/tramp_protocol.c **** #define TRAMP_COMMAND_SET_POWER     'P' // 0x50
  30:../cleanflight/src/main/interface/tramp_protocol.c **** #define TRAMP_COMMAND_ACTIVE_STATE  'I' // 0x49
  31:../cleanflight/src/main/interface/tramp_protocol.c **** #define TRAMP_COMMAND_GET_CONFIG    'v' // 0x76
  32:../cleanflight/src/main/interface/tramp_protocol.c **** 
  33:../cleanflight/src/main/interface/tramp_protocol.c **** static uint8_t trampCrc(const trampFrame_t *frame)
  34:../cleanflight/src/main/interface/tramp_protocol.c **** {
  27              	 .loc 1 34 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 87B0     	 sub sp,sp,#28
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 32
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  35:../cleanflight/src/main/interface/tramp_protocol.c ****     uint8_t crc = 0;
  43              	 .loc 1 35 0
  44 0008 0023     	 movs r3,#0
  45 000a FB75     	 strb r3,[r7,#23]
  36:../cleanflight/src/main/interface/tramp_protocol.c ****     const uint8_t *p = (const uint8_t *)frame;
  46              	 .loc 1 36 0
  47 000c 7B68     	 ldr r3,[r7,#4]
  48 000e 3B61     	 str r3,[r7,#16]
  37:../cleanflight/src/main/interface/tramp_protocol.c ****     const uint8_t *pEnd = p + (TRAMP_HEADER_LENGTH + TRAMP_PAYLOAD_LENGTH);
  49              	 .loc 1 37 0
  50 0010 3B69     	 ldr r3,[r7,#16]
  51 0012 0E33     	 adds r3,r3,#14
  52 0014 FB60     	 str r3,[r7,#12]
  38:../cleanflight/src/main/interface/tramp_protocol.c ****     for (; p != pEnd; p++) {
  53              	 .loc 1 38 0
  54 0016 07E0     	 b .L2
  55              	.L3:
  39:../cleanflight/src/main/interface/tramp_protocol.c ****         crc += *p;
  56              	 .loc 1 39 0 discriminator 2
  57 0018 3B69     	 ldr r3,[r7,#16]
  58 001a 1A78     	 ldrb r2,[r3]
  59 001c FB7D     	 ldrb r3,[r7,#23]
  60 001e 1344     	 add r3,r3,r2
  61 0020 FB75     	 strb r3,[r7,#23]
  38:../cleanflight/src/main/interface/tramp_protocol.c ****     for (; p != pEnd; p++) {
  62              	 .loc 1 38 0 discriminator 2
  63 0022 3B69     	 ldr r3,[r7,#16]
  64 0024 0133     	 adds r3,r3,#1
  65 0026 3B61     	 str r3,[r7,#16]
  66              	.L2:
  38:../cleanflight/src/main/interface/tramp_protocol.c ****     for (; p != pEnd; p++) {
  67              	 .loc 1 38 0 is_stmt 0 discriminator 1
  68 0028 3A69     	 ldr r2,[r7,#16]
  69 002a FB68     	 ldr r3,[r7,#12]
  70 002c 9A42     	 cmp r2,r3
  71 002e F3D1     	 bne .L3
  40:../cleanflight/src/main/interface/tramp_protocol.c ****     }
  41:../cleanflight/src/main/interface/tramp_protocol.c ****     return crc;
  72              	 .loc 1 41 0 is_stmt 1
  73 0030 FB7D     	 ldrb r3,[r7,#23]
  42:../cleanflight/src/main/interface/tramp_protocol.c **** }
  74              	 .loc 1 42 0
  75 0032 1846     	 mov r0,r3
  76 0034 1C37     	 adds r7,r7,#28
  77              	.LCFI3:
  78              	 .cfi_def_cfa_offset 4
  79 0036 BD46     	 mov sp,r7
  80              	.LCFI4:
  81              	 .cfi_def_cfa_register 13
  82              	 
  83 0038 5DF8047B 	 ldr r7,[sp],#4
  84              	.LCFI5:
  85              	 .cfi_restore 7
  86              	 .cfi_def_cfa_offset 0
  87 003c 7047     	 bx lr
  88              	 .cfi_endproc
  89              	.LFE526:
  91 003e 00BF     	 .section .text.trampFrameInit,"ax",%progbits
  92              	 .align 2
  93              	 .thumb
  94              	 .thumb_func
  96              	trampFrameInit:
  97              	.LFB527:
  43:../cleanflight/src/main/interface/tramp_protocol.c **** 
  44:../cleanflight/src/main/interface/tramp_protocol.c **** static void trampFrameInit(uint8_t frameType, trampFrame_t *frame)
  45:../cleanflight/src/main/interface/tramp_protocol.c **** {
  98              	 .loc 1 45 0
  99              	 .cfi_startproc
 100              	 
 101              	 
 102              	 
 103 0000 90B4     	 push {r4,r7}
 104              	.LCFI6:
 105              	 .cfi_def_cfa_offset 8
 106              	 .cfi_offset 4,-8
 107              	 .cfi_offset 7,-4
 108 0002 86B0     	 sub sp,sp,#24
 109              	.LCFI7:
 110              	 .cfi_def_cfa_offset 32
 111 0004 00AF     	 add r7,sp,#0
 112              	.LCFI8:
 113              	 .cfi_def_cfa_register 7
 114 0006 0346     	 mov r3,r0
 115 0008 3960     	 str r1,[r7]
 116 000a FB71     	 strb r3,[r7,#7]
  46:../cleanflight/src/main/interface/tramp_protocol.c ****     frame->header.syncStart = TRAMP_SYNC_START;
 117              	 .loc 1 46 0
 118 000c 3B68     	 ldr r3,[r7]
 119 000e 0F22     	 movs r2,#15
 120 0010 1A70     	 strb r2,[r3]
  47:../cleanflight/src/main/interface/tramp_protocol.c ****     frame->header.command = frameType;
 121              	 .loc 1 47 0
 122 0012 3B68     	 ldr r3,[r7]
 123 0014 FA79     	 ldrb r2,[r7,#7]
 124 0016 5A70     	 strb r2,[r3,#1]
  48:../cleanflight/src/main/interface/tramp_protocol.c ****     const uint8_t emptyPayload[TRAMP_PAYLOAD_LENGTH] = { 0 };
 125              	 .loc 1 48 0
 126 0018 07F10C03 	 add r3,r7,#12
 127 001c 0022     	 movs r2,#0
 128 001e 1A60     	 str r2,[r3]
 129 0020 0433     	 adds r3,r3,#4
 130 0022 0022     	 movs r2,#0
 131 0024 1A60     	 str r2,[r3]
 132 0026 0433     	 adds r3,r3,#4
 133 0028 0022     	 movs r2,#0
 134 002a 1A60     	 str r2,[r3]
 135 002c 0433     	 adds r3,r3,#4
  49:../cleanflight/src/main/interface/tramp_protocol.c ****     memcpy(frame->payload.buf, emptyPayload, sizeof(frame->payload.buf));
 136              	 .loc 1 49 0
 137 002e 3B68     	 ldr r3,[r7]
 138 0030 0233     	 adds r3,r3,#2
 139 0032 1C46     	 mov r4,r3
 140 0034 07F10C03 	 add r3,r7,#12
 141 0038 07CB     	 ldmia r3!,{r0,r1,r2}
 142 003a 2060     	 str r0,[r4]
 143 003c 6160     	 str r1,[r4,#4]
 144 003e A260     	 str r2,[r4,#8]
  50:../cleanflight/src/main/interface/tramp_protocol.c **** }
 145              	 .loc 1 50 0
 146 0040 1837     	 adds r7,r7,#24
 147              	.LCFI9:
 148              	 .cfi_def_cfa_offset 8
 149 0042 BD46     	 mov sp,r7
 150              	.LCFI10:
 151              	 .cfi_def_cfa_register 13
 152              	 
 153 0044 90BC     	 pop {r4,r7}
 154              	.LCFI11:
 155              	 .cfi_restore 7
 156              	 .cfi_restore 4
 157              	 .cfi_def_cfa_offset 0
 158 0046 7047     	 bx lr
 159              	 .cfi_endproc
 160              	.LFE527:
 162              	 .section .text.trampFrameClose,"ax",%progbits
 163              	 .align 2
 164              	 .thumb
 165              	 .thumb_func
 167              	trampFrameClose:
 168              	.LFB528:
  51:../cleanflight/src/main/interface/tramp_protocol.c **** 
  52:../cleanflight/src/main/interface/tramp_protocol.c **** static void trampFrameClose(trampFrame_t *frame)
  53:../cleanflight/src/main/interface/tramp_protocol.c **** {
 169              	 .loc 1 53 0
 170              	 .cfi_startproc
 171              	 
 172              	 
 173 0000 80B5     	 push {r7,lr}
 174              	.LCFI12:
 175              	 .cfi_def_cfa_offset 8
 176              	 .cfi_offset 7,-8
 177              	 .cfi_offset 14,-4
 178 0002 82B0     	 sub sp,sp,#8
 179              	.LCFI13:
 180              	 .cfi_def_cfa_offset 16
 181 0004 00AF     	 add r7,sp,#0
 182              	.LCFI14:
 183              	 .cfi_def_cfa_register 7
 184 0006 7860     	 str r0,[r7,#4]
  54:../cleanflight/src/main/interface/tramp_protocol.c ****     frame->footer.crc = trampCrc(frame);
 185              	 .loc 1 54 0
 186 0008 7868     	 ldr r0,[r7,#4]
 187 000a FFF7FEFF 	 bl trampCrc
 188 000e 0346     	 mov r3,r0
 189 0010 1A46     	 mov r2,r3
 190 0012 7B68     	 ldr r3,[r7,#4]
 191 0014 9A73     	 strb r2,[r3,#14]
  55:../cleanflight/src/main/interface/tramp_protocol.c ****     frame->footer.syncStop = TRAMP_SYNC_STOP;
 192              	 .loc 1 55 0
 193 0016 7B68     	 ldr r3,[r7,#4]
 194 0018 0022     	 movs r2,#0
 195 001a DA73     	 strb r2,[r3,#15]
  56:../cleanflight/src/main/interface/tramp_protocol.c **** }
 196              	 .loc 1 56 0
 197 001c 0837     	 adds r7,r7,#8
 198              	.LCFI15:
 199              	 .cfi_def_cfa_offset 8
 200 001e BD46     	 mov sp,r7
 201              	.LCFI16:
 202              	 .cfi_def_cfa_register 13
 203              	 
 204 0020 80BD     	 pop {r7,pc}
 205              	 .cfi_endproc
 206              	.LFE528:
 208 0022 00BF     	 .section .text.trampFrameGetSettings,"ax",%progbits
 209              	 .align 2
 210              	 .global trampFrameGetSettings
 211              	 .thumb
 212              	 .thumb_func
 214              	trampFrameGetSettings:
 215              	.LFB529:
  57:../cleanflight/src/main/interface/tramp_protocol.c **** 
  58:../cleanflight/src/main/interface/tramp_protocol.c **** void trampFrameGetSettings(trampFrame_t *frame)
  59:../cleanflight/src/main/interface/tramp_protocol.c **** {
 216              	 .loc 1 59 0
 217              	 .cfi_startproc
 218              	 
 219              	 
 220 0000 80B5     	 push {r7,lr}
 221              	.LCFI17:
 222              	 .cfi_def_cfa_offset 8
 223              	 .cfi_offset 7,-8
 224              	 .cfi_offset 14,-4
 225 0002 82B0     	 sub sp,sp,#8
 226              	.LCFI18:
 227              	 .cfi_def_cfa_offset 16
 228 0004 00AF     	 add r7,sp,#0
 229              	.LCFI19:
 230              	 .cfi_def_cfa_register 7
 231 0006 7860     	 str r0,[r7,#4]
  60:../cleanflight/src/main/interface/tramp_protocol.c ****     trampFrameInit(TRAMP_COMMAND_GET_CONFIG, frame);
 232              	 .loc 1 60 0
 233 0008 7620     	 movs r0,#118
 234 000a 7968     	 ldr r1,[r7,#4]
 235 000c FFF7FEFF 	 bl trampFrameInit
  61:../cleanflight/src/main/interface/tramp_protocol.c ****     trampFrameClose(frame);
 236              	 .loc 1 61 0
 237 0010 7868     	 ldr r0,[r7,#4]
 238 0012 FFF7FEFF 	 bl trampFrameClose
  62:../cleanflight/src/main/interface/tramp_protocol.c **** }
 239              	 .loc 1 62 0
 240 0016 0837     	 adds r7,r7,#8
 241              	.LCFI20:
 242              	 .cfi_def_cfa_offset 8
 243 0018 BD46     	 mov sp,r7
 244              	.LCFI21:
 245              	 .cfi_def_cfa_register 13
 246              	 
 247 001a 80BD     	 pop {r7,pc}
 248              	 .cfi_endproc
 249              	.LFE529:
 251              	 .section .text.trampFrameSetFrequency,"ax",%progbits
 252              	 .align 2
 253              	 .global trampFrameSetFrequency
 254              	 .thumb
 255              	 .thumb_func
 257              	trampFrameSetFrequency:
 258              	.LFB530:
  63:../cleanflight/src/main/interface/tramp_protocol.c **** 
  64:../cleanflight/src/main/interface/tramp_protocol.c **** void trampFrameSetFrequency(trampFrame_t *frame, const uint16_t frequency)
  65:../cleanflight/src/main/interface/tramp_protocol.c **** {
 259              	 .loc 1 65 0
 260              	 .cfi_startproc
 261              	 
 262              	 
 263 0000 80B5     	 push {r7,lr}
 264              	.LCFI22:
 265              	 .cfi_def_cfa_offset 8
 266              	 .cfi_offset 7,-8
 267              	 .cfi_offset 14,-4
 268 0002 82B0     	 sub sp,sp,#8
 269              	.LCFI23:
 270              	 .cfi_def_cfa_offset 16
 271 0004 00AF     	 add r7,sp,#0
 272              	.LCFI24:
 273              	 .cfi_def_cfa_register 7
 274 0006 7860     	 str r0,[r7,#4]
 275 0008 0B46     	 mov r3,r1
 276 000a 7B80     	 strh r3,[r7,#2]
  66:../cleanflight/src/main/interface/tramp_protocol.c ****     trampFrameInit(TRAMP_COMMAND_SET_FREQ, frame);
 277              	 .loc 1 66 0
 278 000c 4620     	 movs r0,#70
 279 000e 7968     	 ldr r1,[r7,#4]
 280 0010 FFF7FEFF 	 bl trampFrameInit
  67:../cleanflight/src/main/interface/tramp_protocol.c ****     frame->payload.frequency = frequency;
 281              	 .loc 1 67 0
 282 0014 7B68     	 ldr r3,[r7,#4]
 283 0016 7A88     	 ldrh r2,[r7,#2]
 284 0018 5A80     	 strh r2,[r3,#2]
  68:../cleanflight/src/main/interface/tramp_protocol.c ****     trampFrameClose(frame);
 285              	 .loc 1 68 0
 286 001a 7868     	 ldr r0,[r7,#4]
 287 001c FFF7FEFF 	 bl trampFrameClose
  69:../cleanflight/src/main/interface/tramp_protocol.c **** }
 288              	 .loc 1 69 0
 289 0020 0837     	 adds r7,r7,#8
 290              	.LCFI25:
 291              	 .cfi_def_cfa_offset 8
 292 0022 BD46     	 mov sp,r7
 293              	.LCFI26:
 294              	 .cfi_def_cfa_register 13
 295              	 
 296 0024 80BD     	 pop {r7,pc}
 297              	 .cfi_endproc
 298              	.LFE530:
 300 0026 00BF     	 .section .text.trampFrameSetPower,"ax",%progbits
 301              	 .align 2
 302              	 .global trampFrameSetPower
 303              	 .thumb
 304              	 .thumb_func
 306              	trampFrameSetPower:
 307              	.LFB531:
  70:../cleanflight/src/main/interface/tramp_protocol.c **** 
  71:../cleanflight/src/main/interface/tramp_protocol.c **** void trampFrameSetPower(trampFrame_t *frame, const uint16_t power)
  72:../cleanflight/src/main/interface/tramp_protocol.c **** {
 308              	 .loc 1 72 0
 309              	 .cfi_startproc
 310              	 
 311              	 
 312 0000 80B5     	 push {r7,lr}
 313              	.LCFI27:
 314              	 .cfi_def_cfa_offset 8
 315              	 .cfi_offset 7,-8
 316              	 .cfi_offset 14,-4
 317 0002 82B0     	 sub sp,sp,#8
 318              	.LCFI28:
 319              	 .cfi_def_cfa_offset 16
 320 0004 00AF     	 add r7,sp,#0
 321              	.LCFI29:
 322              	 .cfi_def_cfa_register 7
 323 0006 7860     	 str r0,[r7,#4]
 324 0008 0B46     	 mov r3,r1
 325 000a 7B80     	 strh r3,[r7,#2]
  73:../cleanflight/src/main/interface/tramp_protocol.c ****     trampFrameInit(TRAMP_COMMAND_SET_POWER, frame);
 326              	 .loc 1 73 0
 327 000c 5020     	 movs r0,#80
 328 000e 7968     	 ldr r1,[r7,#4]
 329 0010 FFF7FEFF 	 bl trampFrameInit
  74:../cleanflight/src/main/interface/tramp_protocol.c ****     frame->payload.power = power;
 330              	 .loc 1 74 0
 331 0014 7B68     	 ldr r3,[r7,#4]
 332 0016 7A88     	 ldrh r2,[r7,#2]
 333 0018 5A80     	 strh r2,[r3,#2]
  75:../cleanflight/src/main/interface/tramp_protocol.c ****     trampFrameClose(frame);
 334              	 .loc 1 75 0
 335 001a 7868     	 ldr r0,[r7,#4]
 336 001c FFF7FEFF 	 bl trampFrameClose
  76:../cleanflight/src/main/interface/tramp_protocol.c **** }
 337              	 .loc 1 76 0
 338 0020 0837     	 adds r7,r7,#8
 339              	.LCFI30:
 340              	 .cfi_def_cfa_offset 8
 341 0022 BD46     	 mov sp,r7
 342              	.LCFI31:
 343              	 .cfi_def_cfa_register 13
 344              	 
 345 0024 80BD     	 pop {r7,pc}
 346              	 .cfi_endproc
 347              	.LFE531:
 349 0026 00BF     	 .section .text.trampFrameSetActiveState,"ax",%progbits
 350              	 .align 2
 351              	 .global trampFrameSetActiveState
 352              	 .thumb
 353              	 .thumb_func
 355              	trampFrameSetActiveState:
 356              	.LFB532:
  77:../cleanflight/src/main/interface/tramp_protocol.c **** 
  78:../cleanflight/src/main/interface/tramp_protocol.c **** void trampFrameSetActiveState(trampFrame_t *frame, const bool active)
  79:../cleanflight/src/main/interface/tramp_protocol.c **** {
 357              	 .loc 1 79 0
 358              	 .cfi_startproc
 359              	 
 360              	 
 361 0000 80B5     	 push {r7,lr}
 362              	.LCFI32:
 363              	 .cfi_def_cfa_offset 8
 364              	 .cfi_offset 7,-8
 365              	 .cfi_offset 14,-4
 366 0002 82B0     	 sub sp,sp,#8
 367              	.LCFI33:
 368              	 .cfi_def_cfa_offset 16
 369 0004 00AF     	 add r7,sp,#0
 370              	.LCFI34:
 371              	 .cfi_def_cfa_register 7
 372 0006 7860     	 str r0,[r7,#4]
 373 0008 0B46     	 mov r3,r1
 374 000a FB70     	 strb r3,[r7,#3]
  80:../cleanflight/src/main/interface/tramp_protocol.c ****     trampFrameInit(TRAMP_COMMAND_ACTIVE_STATE, frame);
 375              	 .loc 1 80 0
 376 000c 4920     	 movs r0,#73
 377 000e 7968     	 ldr r1,[r7,#4]
 378 0010 FFF7FEFF 	 bl trampFrameInit
  81:../cleanflight/src/main/interface/tramp_protocol.c ****     frame->payload.active = (uint8_t) active;
 379              	 .loc 1 81 0
 380 0014 FA78     	 ldrb r2,[r7,#3]
 381 0016 7B68     	 ldr r3,[r7,#4]
 382 0018 9A70     	 strb r2,[r3,#2]
  82:../cleanflight/src/main/interface/tramp_protocol.c ****     trampFrameClose(frame);
 383              	 .loc 1 82 0
 384 001a 7868     	 ldr r0,[r7,#4]
 385 001c FFF7FEFF 	 bl trampFrameClose
  83:../cleanflight/src/main/interface/tramp_protocol.c **** }
 386              	 .loc 1 83 0
 387 0020 0837     	 adds r7,r7,#8
 388              	.LCFI35:
 389              	 .cfi_def_cfa_offset 8
 390 0022 BD46     	 mov sp,r7
 391              	.LCFI36:
 392              	 .cfi_def_cfa_register 13
 393              	 
 394 0024 80BD     	 pop {r7,pc}
 395              	 .cfi_endproc
 396              	.LFE532:
 398 0026 00BF     	 .section .text.trampParseResponseBuffer,"ax",%progbits
 399              	 .align 2
 400              	 .global trampParseResponseBuffer
 401              	 .thumb
 402              	 .thumb_func
 404              	trampParseResponseBuffer:
 405              	.LFB533:
  84:../cleanflight/src/main/interface/tramp_protocol.c **** 
  85:../cleanflight/src/main/interface/tramp_protocol.c **** bool trampParseResponseBuffer(trampSettings_t *settings, const uint8_t *buffer, size_t bufferLen)
  86:../cleanflight/src/main/interface/tramp_protocol.c **** {
 406              	 .loc 1 86 0
 407              	 .cfi_startproc
 408              	 
 409              	 
 410 0000 80B5     	 push {r7,lr}
 411              	.LCFI37:
 412              	 .cfi_def_cfa_offset 8
 413              	 .cfi_offset 7,-8
 414              	 .cfi_offset 14,-4
 415 0002 86B0     	 sub sp,sp,#24
 416              	.LCFI38:
 417              	 .cfi_def_cfa_offset 32
 418 0004 00AF     	 add r7,sp,#0
 419              	.LCFI39:
 420              	 .cfi_def_cfa_register 7
 421 0006 F860     	 str r0,[r7,#12]
 422 0008 B960     	 str r1,[r7,#8]
 423 000a 7A60     	 str r2,[r7,#4]
  87:../cleanflight/src/main/interface/tramp_protocol.c ****     if (bufferLen != TRAMP_FRAME_LENGTH) {
 424              	 .loc 1 87 0
 425 000c 7B68     	 ldr r3,[r7,#4]
 426 000e 102B     	 cmp r3,#16
 427 0010 01D0     	 beq .L12
  88:../cleanflight/src/main/interface/tramp_protocol.c ****         return false;
 428              	 .loc 1 88 0
 429 0012 0023     	 movs r3,#0
 430 0014 15E0     	 b .L13
 431              	.L12:
  89:../cleanflight/src/main/interface/tramp_protocol.c ****     }
  90:../cleanflight/src/main/interface/tramp_protocol.c ****     const trampFrame_t *frame = (const trampFrame_t *)buffer;
 432              	 .loc 1 90 0
 433 0016 BB68     	 ldr r3,[r7,#8]
 434 0018 7B61     	 str r3,[r7,#20]
  91:../cleanflight/src/main/interface/tramp_protocol.c ****     const uint8_t crc = trampCrc(frame);
 435              	 .loc 1 91 0
 436 001a 7869     	 ldr r0,[r7,#20]
 437 001c FFF7FEFF 	 bl trampCrc
 438 0020 0346     	 mov r3,r0
 439 0022 FB74     	 strb r3,[r7,#19]
  92:../cleanflight/src/main/interface/tramp_protocol.c ****     if (crc != frame->footer.crc) {
 440              	 .loc 1 92 0
 441 0024 7B69     	 ldr r3,[r7,#20]
 442 0026 9B7B     	 ldrb r3,[r3,#14]
 443 0028 FA7C     	 ldrb r2,[r7,#19]
 444 002a 9A42     	 cmp r2,r3
 445 002c 01D0     	 beq .L14
  93:../cleanflight/src/main/interface/tramp_protocol.c ****         return false;
 446              	 .loc 1 93 0
 447 002e 0023     	 movs r3,#0
 448 0030 07E0     	 b .L13
 449              	.L14:
  94:../cleanflight/src/main/interface/tramp_protocol.c ****     }
  95:../cleanflight/src/main/interface/tramp_protocol.c ****     memcpy(settings, &frame->payload.settings, sizeof(*settings));
 450              	 .loc 1 95 0
 451 0032 7B69     	 ldr r3,[r7,#20]
 452 0034 0233     	 adds r3,r3,#2
 453 0036 F868     	 ldr r0,[r7,#12]
 454 0038 1946     	 mov r1,r3
 455 003a 0622     	 movs r2,#6
 456 003c FFF7FEFF 	 bl memcpy
  96:../cleanflight/src/main/interface/tramp_protocol.c ****     return true;
 457              	 .loc 1 96 0
 458 0040 0123     	 movs r3,#1
 459              	.L13:
  97:../cleanflight/src/main/interface/tramp_protocol.c **** }
 460              	 .loc 1 97 0
 461 0042 1846     	 mov r0,r3
 462 0044 1837     	 adds r7,r7,#24
 463              	.LCFI40:
 464              	 .cfi_def_cfa_offset 8
 465 0046 BD46     	 mov sp,r7
 466              	.LCFI41:
 467              	 .cfi_def_cfa_register 13
 468              	 
 469 0048 80BD     	 pop {r7,pc}
 470              	 .cfi_endproc
 471              	.LFE533:
 473 004a 00BF     	 .text
 474              	.Letext0:
 475              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 476              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 477              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 478              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 479              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
 480              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/interface/tramp_protocol.h"
 481              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 482              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 tramp_protocol.c
    {standard input}:20     .text.trampCrc:00000000 $t
    {standard input}:24     .text.trampCrc:00000000 trampCrc
    {standard input}:92     .text.trampFrameInit:00000000 $t
    {standard input}:96     .text.trampFrameInit:00000000 trampFrameInit
    {standard input}:163    .text.trampFrameClose:00000000 $t
    {standard input}:167    .text.trampFrameClose:00000000 trampFrameClose
    {standard input}:209    .text.trampFrameGetSettings:00000000 $t
    {standard input}:214    .text.trampFrameGetSettings:00000000 trampFrameGetSettings
    {standard input}:252    .text.trampFrameSetFrequency:00000000 $t
    {standard input}:257    .text.trampFrameSetFrequency:00000000 trampFrameSetFrequency
    {standard input}:301    .text.trampFrameSetPower:00000000 $t
    {standard input}:306    .text.trampFrameSetPower:00000000 trampFrameSetPower
    {standard input}:350    .text.trampFrameSetActiveState:00000000 $t
    {standard input}:355    .text.trampFrameSetActiveState:00000000 trampFrameSetActiveState
    {standard input}:399    .text.trampParseResponseBuffer:00000000 $t
    {standard input}:404    .text.trampParseResponseBuffer:00000000 trampParseResponseBuffer
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memcpy
