   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "displayport_oled.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.oledDisplayPort,"aw",%nobits
  20              	 .align 2
  23              	oledDisplayPort:
  24 0000 00000000 	 .space 15
  24      00000000 
  24      00000000 
  24      000000
  25 000f 00       	 .section .text.oledGrab,"ax",%progbits
  26              	 .align 2
  27              	 .thumb
  28              	 .thumb_func
  30              	oledGrab:
  31              	.LFB521:
  32              	 .file 1 "../cleanflight/src/main/io/displayport_oled.c"
   1:../cleanflight/src/main/io/displayport_oled.c **** /*
   2:../cleanflight/src/main/io/displayport_oled.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/io/displayport_oled.c ****  *
   4:../cleanflight/src/main/io/displayport_oled.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/io/displayport_oled.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/io/displayport_oled.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/io/displayport_oled.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/io/displayport_oled.c ****  * any later version.
   9:../cleanflight/src/main/io/displayport_oled.c ****  *
  10:../cleanflight/src/main/io/displayport_oled.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/io/displayport_oled.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/io/displayport_oled.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/io/displayport_oled.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/io/displayport_oled.c ****  *
  15:../cleanflight/src/main/io/displayport_oled.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/io/displayport_oled.c ****  * along with this software.
  17:../cleanflight/src/main/io/displayport_oled.c ****  *
  18:../cleanflight/src/main/io/displayport_oled.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/io/displayport_oled.c ****  */
  20:../cleanflight/src/main/io/displayport_oled.c **** 
  21:../cleanflight/src/main/io/displayport_oled.c **** #include <stdbool.h>
  22:../cleanflight/src/main/io/displayport_oled.c **** #include <stdint.h>
  23:../cleanflight/src/main/io/displayport_oled.c **** 
  24:../cleanflight/src/main/io/displayport_oled.c **** #include "platform.h"
  25:../cleanflight/src/main/io/displayport_oled.c **** 
  26:../cleanflight/src/main/io/displayport_oled.c **** #include "common/utils.h"
  27:../cleanflight/src/main/io/displayport_oled.c **** 
  28:../cleanflight/src/main/io/displayport_oled.c **** #include "drivers/display.h"
  29:../cleanflight/src/main/io/displayport_oled.c **** #include "drivers/display_ug2864hsweg01.h"
  30:../cleanflight/src/main/io/displayport_oled.c **** 
  31:../cleanflight/src/main/io/displayport_oled.c **** static displayPort_t oledDisplayPort;
  32:../cleanflight/src/main/io/displayport_oled.c **** 
  33:../cleanflight/src/main/io/displayport_oled.c **** static int oledGrab(displayPort_t *displayPort)
  34:../cleanflight/src/main/io/displayport_oled.c **** {
  33              	 .loc 1 34 0
  34              	 .cfi_startproc
  35              	 
  36              	 
  37              	 
  38 0000 80B4     	 push {r7}
  39              	.LCFI0:
  40              	 .cfi_def_cfa_offset 4
  41              	 .cfi_offset 7,-4
  42 0002 83B0     	 sub sp,sp,#12
  43              	.LCFI1:
  44              	 .cfi_def_cfa_offset 16
  45 0004 00AF     	 add r7,sp,#0
  46              	.LCFI2:
  47              	 .cfi_def_cfa_register 7
  48 0006 7860     	 str r0,[r7,#4]
  35:../cleanflight/src/main/io/displayport_oled.c ****     UNUSED(displayPort);
  36:../cleanflight/src/main/io/displayport_oled.c ****     return 0;
  49              	 .loc 1 36 0
  50 0008 0023     	 movs r3,#0
  37:../cleanflight/src/main/io/displayport_oled.c **** }
  51              	 .loc 1 37 0
  52 000a 1846     	 mov r0,r3
  53 000c 0C37     	 adds r7,r7,#12
  54              	.LCFI3:
  55              	 .cfi_def_cfa_offset 4
  56 000e BD46     	 mov sp,r7
  57              	.LCFI4:
  58              	 .cfi_def_cfa_register 13
  59              	 
  60 0010 5DF8047B 	 ldr r7,[sp],#4
  61              	.LCFI5:
  62              	 .cfi_restore 7
  63              	 .cfi_def_cfa_offset 0
  64 0014 7047     	 bx lr
  65              	 .cfi_endproc
  66              	.LFE521:
  68 0016 00BF     	 .section .text.oledRelease,"ax",%progbits
  69              	 .align 2
  70              	 .thumb
  71              	 .thumb_func
  73              	oledRelease:
  74              	.LFB522:
  38:../cleanflight/src/main/io/displayport_oled.c **** 
  39:../cleanflight/src/main/io/displayport_oled.c **** static int oledRelease(displayPort_t *displayPort)
  40:../cleanflight/src/main/io/displayport_oled.c **** {
  75              	 .loc 1 40 0
  76              	 .cfi_startproc
  77              	 
  78              	 
  79              	 
  80 0000 80B4     	 push {r7}
  81              	.LCFI6:
  82              	 .cfi_def_cfa_offset 4
  83              	 .cfi_offset 7,-4
  84 0002 83B0     	 sub sp,sp,#12
  85              	.LCFI7:
  86              	 .cfi_def_cfa_offset 16
  87 0004 00AF     	 add r7,sp,#0
  88              	.LCFI8:
  89              	 .cfi_def_cfa_register 7
  90 0006 7860     	 str r0,[r7,#4]
  41:../cleanflight/src/main/io/displayport_oled.c ****     UNUSED(displayPort);
  42:../cleanflight/src/main/io/displayport_oled.c ****     return 0;
  91              	 .loc 1 42 0
  92 0008 0023     	 movs r3,#0
  43:../cleanflight/src/main/io/displayport_oled.c **** }
  93              	 .loc 1 43 0
  94 000a 1846     	 mov r0,r3
  95 000c 0C37     	 adds r7,r7,#12
  96              	.LCFI9:
  97              	 .cfi_def_cfa_offset 4
  98 000e BD46     	 mov sp,r7
  99              	.LCFI10:
 100              	 .cfi_def_cfa_register 13
 101              	 
 102 0010 5DF8047B 	 ldr r7,[sp],#4
 103              	.LCFI11:
 104              	 .cfi_restore 7
 105              	 .cfi_def_cfa_offset 0
 106 0014 7047     	 bx lr
 107              	 .cfi_endproc
 108              	.LFE522:
 110 0016 00BF     	 .section .text.oledClearScreen,"ax",%progbits
 111              	 .align 2
 112              	 .thumb
 113              	 .thumb_func
 115              	oledClearScreen:
 116              	.LFB523:
  44:../cleanflight/src/main/io/displayport_oled.c **** 
  45:../cleanflight/src/main/io/displayport_oled.c **** static int oledClearScreen(displayPort_t *displayPort)
  46:../cleanflight/src/main/io/displayport_oled.c **** {
 117              	 .loc 1 46 0
 118              	 .cfi_startproc
 119              	 
 120              	 
 121 0000 80B5     	 push {r7,lr}
 122              	.LCFI12:
 123              	 .cfi_def_cfa_offset 8
 124              	 .cfi_offset 7,-8
 125              	 .cfi_offset 14,-4
 126 0002 82B0     	 sub sp,sp,#8
 127              	.LCFI13:
 128              	 .cfi_def_cfa_offset 16
 129 0004 00AF     	 add r7,sp,#0
 130              	.LCFI14:
 131              	 .cfi_def_cfa_register 7
 132 0006 7860     	 str r0,[r7,#4]
  47:../cleanflight/src/main/io/displayport_oled.c ****     i2c_OLED_clear_display_quick(displayPort->device);
 133              	 .loc 1 47 0
 134 0008 7B68     	 ldr r3,[r7,#4]
 135 000a 5B68     	 ldr r3,[r3,#4]
 136 000c 1846     	 mov r0,r3
 137 000e FFF7FEFF 	 bl i2c_OLED_clear_display_quick
  48:../cleanflight/src/main/io/displayport_oled.c ****     return 0;
 138              	 .loc 1 48 0
 139 0012 0023     	 movs r3,#0
  49:../cleanflight/src/main/io/displayport_oled.c **** }
 140              	 .loc 1 49 0
 141 0014 1846     	 mov r0,r3
 142 0016 0837     	 adds r7,r7,#8
 143              	.LCFI15:
 144              	 .cfi_def_cfa_offset 8
 145 0018 BD46     	 mov sp,r7
 146              	.LCFI16:
 147              	 .cfi_def_cfa_register 13
 148              	 
 149 001a 80BD     	 pop {r7,pc}
 150              	 .cfi_endproc
 151              	.LFE523:
 153              	 .section .text.oledDrawScreen,"ax",%progbits
 154              	 .align 2
 155              	 .thumb
 156              	 .thumb_func
 158              	oledDrawScreen:
 159              	.LFB524:
  50:../cleanflight/src/main/io/displayport_oled.c **** 
  51:../cleanflight/src/main/io/displayport_oled.c **** static int oledDrawScreen(displayPort_t *displayPort)
  52:../cleanflight/src/main/io/displayport_oled.c **** {
 160              	 .loc 1 52 0
 161              	 .cfi_startproc
 162              	 
 163              	 
 164              	 
 165 0000 80B4     	 push {r7}
 166              	.LCFI17:
 167              	 .cfi_def_cfa_offset 4
 168              	 .cfi_offset 7,-4
 169 0002 83B0     	 sub sp,sp,#12
 170              	.LCFI18:
 171              	 .cfi_def_cfa_offset 16
 172 0004 00AF     	 add r7,sp,#0
 173              	.LCFI19:
 174              	 .cfi_def_cfa_register 7
 175 0006 7860     	 str r0,[r7,#4]
  53:../cleanflight/src/main/io/displayport_oled.c ****     UNUSED(displayPort);
  54:../cleanflight/src/main/io/displayport_oled.c ****     return 0;
 176              	 .loc 1 54 0
 177 0008 0023     	 movs r3,#0
  55:../cleanflight/src/main/io/displayport_oled.c **** }
 178              	 .loc 1 55 0
 179 000a 1846     	 mov r0,r3
 180 000c 0C37     	 adds r7,r7,#12
 181              	.LCFI20:
 182              	 .cfi_def_cfa_offset 4
 183 000e BD46     	 mov sp,r7
 184              	.LCFI21:
 185              	 .cfi_def_cfa_register 13
 186              	 
 187 0010 5DF8047B 	 ldr r7,[sp],#4
 188              	.LCFI22:
 189              	 .cfi_restore 7
 190              	 .cfi_def_cfa_offset 0
 191 0014 7047     	 bx lr
 192              	 .cfi_endproc
 193              	.LFE524:
 195 0016 00BF     	 .section .text.oledScreenSize,"ax",%progbits
 196              	 .align 2
 197              	 .thumb
 198              	 .thumb_func
 200              	oledScreenSize:
 201              	.LFB525:
  56:../cleanflight/src/main/io/displayport_oled.c **** 
  57:../cleanflight/src/main/io/displayport_oled.c **** static int oledScreenSize(const displayPort_t *displayPort)
  58:../cleanflight/src/main/io/displayport_oled.c **** {
 202              	 .loc 1 58 0
 203              	 .cfi_startproc
 204              	 
 205              	 
 206              	 
 207 0000 80B4     	 push {r7}
 208              	.LCFI23:
 209              	 .cfi_def_cfa_offset 4
 210              	 .cfi_offset 7,-4
 211 0002 83B0     	 sub sp,sp,#12
 212              	.LCFI24:
 213              	 .cfi_def_cfa_offset 16
 214 0004 00AF     	 add r7,sp,#0
 215              	.LCFI25:
 216              	 .cfi_def_cfa_register 7
 217 0006 7860     	 str r0,[r7,#4]
  59:../cleanflight/src/main/io/displayport_oled.c ****     return displayPort->rows * displayPort->cols;
 218              	 .loc 1 59 0
 219 0008 7B68     	 ldr r3,[r7,#4]
 220 000a 1B7A     	 ldrb r3,[r3,#8]
 221 000c 1A46     	 mov r2,r3
 222 000e 7B68     	 ldr r3,[r7,#4]
 223 0010 5B7A     	 ldrb r3,[r3,#9]
 224 0012 03FB02F3 	 mul r3,r3,r2
  60:../cleanflight/src/main/io/displayport_oled.c **** }
 225              	 .loc 1 60 0
 226 0016 1846     	 mov r0,r3
 227 0018 0C37     	 adds r7,r7,#12
 228              	.LCFI26:
 229              	 .cfi_def_cfa_offset 4
 230 001a BD46     	 mov sp,r7
 231              	.LCFI27:
 232              	 .cfi_def_cfa_register 13
 233              	 
 234 001c 5DF8047B 	 ldr r7,[sp],#4
 235              	.LCFI28:
 236              	 .cfi_restore 7
 237              	 .cfi_def_cfa_offset 0
 238 0020 7047     	 bx lr
 239              	 .cfi_endproc
 240              	.LFE525:
 242 0022 00BF     	 .section .text.oledWriteString,"ax",%progbits
 243              	 .align 2
 244              	 .thumb
 245              	 .thumb_func
 247              	oledWriteString:
 248              	.LFB526:
  61:../cleanflight/src/main/io/displayport_oled.c **** 
  62:../cleanflight/src/main/io/displayport_oled.c **** static int oledWriteString(displayPort_t *displayPort, uint8_t x, uint8_t y, const char *s)
  63:../cleanflight/src/main/io/displayport_oled.c **** {
 249              	 .loc 1 63 0
 250              	 .cfi_startproc
 251              	 
 252              	 
 253 0000 80B5     	 push {r7,lr}
 254              	.LCFI29:
 255              	 .cfi_def_cfa_offset 8
 256              	 .cfi_offset 7,-8
 257              	 .cfi_offset 14,-4
 258 0002 84B0     	 sub sp,sp,#16
 259              	.LCFI30:
 260              	 .cfi_def_cfa_offset 24
 261 0004 00AF     	 add r7,sp,#0
 262              	.LCFI31:
 263              	 .cfi_def_cfa_register 7
 264 0006 F860     	 str r0,[r7,#12]
 265 0008 7B60     	 str r3,[r7,#4]
 266 000a 0B46     	 mov r3,r1
 267 000c FB72     	 strb r3,[r7,#11]
 268 000e 1346     	 mov r3,r2
 269 0010 BB72     	 strb r3,[r7,#10]
  64:../cleanflight/src/main/io/displayport_oled.c ****     i2c_OLED_set_xy(displayPort->device, x, y);
 270              	 .loc 1 64 0
 271 0012 FB68     	 ldr r3,[r7,#12]
 272 0014 5968     	 ldr r1,[r3,#4]
 273 0016 FA7A     	 ldrb r2,[r7,#11]
 274 0018 BB7A     	 ldrb r3,[r7,#10]
 275 001a 0846     	 mov r0,r1
 276 001c 1146     	 mov r1,r2
 277 001e 1A46     	 mov r2,r3
 278 0020 FFF7FEFF 	 bl i2c_OLED_set_xy
  65:../cleanflight/src/main/io/displayport_oled.c ****     i2c_OLED_send_string(displayPort->device, s);
 279              	 .loc 1 65 0
 280 0024 FB68     	 ldr r3,[r7,#12]
 281 0026 5B68     	 ldr r3,[r3,#4]
 282 0028 1846     	 mov r0,r3
 283 002a 7968     	 ldr r1,[r7,#4]
 284 002c FFF7FEFF 	 bl i2c_OLED_send_string
  66:../cleanflight/src/main/io/displayport_oled.c ****     return 0;
 285              	 .loc 1 66 0
 286 0030 0023     	 movs r3,#0
  67:../cleanflight/src/main/io/displayport_oled.c **** }
 287              	 .loc 1 67 0
 288 0032 1846     	 mov r0,r3
 289 0034 1037     	 adds r7,r7,#16
 290              	.LCFI32:
 291              	 .cfi_def_cfa_offset 8
 292 0036 BD46     	 mov sp,r7
 293              	.LCFI33:
 294              	 .cfi_def_cfa_register 13
 295              	 
 296 0038 80BD     	 pop {r7,pc}
 297              	 .cfi_endproc
 298              	.LFE526:
 300 003a 00BF     	 .section .text.oledWriteChar,"ax",%progbits
 301              	 .align 2
 302              	 .thumb
 303              	 .thumb_func
 305              	oledWriteChar:
 306              	.LFB527:
  68:../cleanflight/src/main/io/displayport_oled.c **** 
  69:../cleanflight/src/main/io/displayport_oled.c **** static int oledWriteChar(displayPort_t *displayPort, uint8_t x, uint8_t y, uint8_t c)
  70:../cleanflight/src/main/io/displayport_oled.c **** {
 307              	 .loc 1 70 0
 308              	 .cfi_startproc
 309              	 
 310              	 
 311 0000 80B5     	 push {r7,lr}
 312              	.LCFI34:
 313              	 .cfi_def_cfa_offset 8
 314              	 .cfi_offset 7,-8
 315              	 .cfi_offset 14,-4
 316 0002 82B0     	 sub sp,sp,#8
 317              	.LCFI35:
 318              	 .cfi_def_cfa_offset 16
 319 0004 00AF     	 add r7,sp,#0
 320              	.LCFI36:
 321              	 .cfi_def_cfa_register 7
 322 0006 7860     	 str r0,[r7,#4]
 323 0008 0846     	 mov r0,r1
 324 000a 1146     	 mov r1,r2
 325 000c 1A46     	 mov r2,r3
 326 000e 0346     	 mov r3,r0
 327 0010 FB70     	 strb r3,[r7,#3]
 328 0012 0B46     	 mov r3,r1
 329 0014 BB70     	 strb r3,[r7,#2]
 330 0016 1346     	 mov r3,r2
 331 0018 7B70     	 strb r3,[r7,#1]
  71:../cleanflight/src/main/io/displayport_oled.c ****     i2c_OLED_set_xy(displayPort->device, x, y);
 332              	 .loc 1 71 0
 333 001a 7B68     	 ldr r3,[r7,#4]
 334 001c 5968     	 ldr r1,[r3,#4]
 335 001e FA78     	 ldrb r2,[r7,#3]
 336 0020 BB78     	 ldrb r3,[r7,#2]
 337 0022 0846     	 mov r0,r1
 338 0024 1146     	 mov r1,r2
 339 0026 1A46     	 mov r2,r3
 340 0028 FFF7FEFF 	 bl i2c_OLED_set_xy
  72:../cleanflight/src/main/io/displayport_oled.c ****     i2c_OLED_send_char(displayPort->device, c);
 341              	 .loc 1 72 0
 342 002c 7B68     	 ldr r3,[r7,#4]
 343 002e 5A68     	 ldr r2,[r3,#4]
 344 0030 7B78     	 ldrb r3,[r7,#1]
 345 0032 1046     	 mov r0,r2
 346 0034 1946     	 mov r1,r3
 347 0036 FFF7FEFF 	 bl i2c_OLED_send_char
  73:../cleanflight/src/main/io/displayport_oled.c ****     return 0;
 348              	 .loc 1 73 0
 349 003a 0023     	 movs r3,#0
  74:../cleanflight/src/main/io/displayport_oled.c **** }
 350              	 .loc 1 74 0
 351 003c 1846     	 mov r0,r3
 352 003e 0837     	 adds r7,r7,#8
 353              	.LCFI37:
 354              	 .cfi_def_cfa_offset 8
 355 0040 BD46     	 mov sp,r7
 356              	.LCFI38:
 357              	 .cfi_def_cfa_register 13
 358              	 
 359 0042 80BD     	 pop {r7,pc}
 360              	 .cfi_endproc
 361              	.LFE527:
 363              	 .section .text.oledIsTransferInProgress,"ax",%progbits
 364              	 .align 2
 365              	 .thumb
 366              	 .thumb_func
 368              	oledIsTransferInProgress:
 369              	.LFB528:
  75:../cleanflight/src/main/io/displayport_oled.c **** 
  76:../cleanflight/src/main/io/displayport_oled.c **** static bool oledIsTransferInProgress(const displayPort_t *displayPort)
  77:../cleanflight/src/main/io/displayport_oled.c **** {
 370              	 .loc 1 77 0
 371              	 .cfi_startproc
 372              	 
 373              	 
 374              	 
 375 0000 80B4     	 push {r7}
 376              	.LCFI39:
 377              	 .cfi_def_cfa_offset 4
 378              	 .cfi_offset 7,-4
 379 0002 83B0     	 sub sp,sp,#12
 380              	.LCFI40:
 381              	 .cfi_def_cfa_offset 16
 382 0004 00AF     	 add r7,sp,#0
 383              	.LCFI41:
 384              	 .cfi_def_cfa_register 7
 385 0006 7860     	 str r0,[r7,#4]
  78:../cleanflight/src/main/io/displayport_oled.c ****     UNUSED(displayPort);
  79:../cleanflight/src/main/io/displayport_oled.c ****     return false;
 386              	 .loc 1 79 0
 387 0008 0023     	 movs r3,#0
  80:../cleanflight/src/main/io/displayport_oled.c **** }
 388              	 .loc 1 80 0
 389 000a 1846     	 mov r0,r3
 390 000c 0C37     	 adds r7,r7,#12
 391              	.LCFI42:
 392              	 .cfi_def_cfa_offset 4
 393 000e BD46     	 mov sp,r7
 394              	.LCFI43:
 395              	 .cfi_def_cfa_register 13
 396              	 
 397 0010 5DF8047B 	 ldr r7,[sp],#4
 398              	.LCFI44:
 399              	 .cfi_restore 7
 400              	 .cfi_def_cfa_offset 0
 401 0014 7047     	 bx lr
 402              	 .cfi_endproc
 403              	.LFE528:
 405 0016 00BF     	 .section .text.oledIsSynced,"ax",%progbits
 406              	 .align 2
 407              	 .thumb
 408              	 .thumb_func
 410              	oledIsSynced:
 411              	.LFB529:
  81:../cleanflight/src/main/io/displayport_oled.c **** 
  82:../cleanflight/src/main/io/displayport_oled.c **** static bool oledIsSynced(const displayPort_t *displayPort)
  83:../cleanflight/src/main/io/displayport_oled.c **** {
 412              	 .loc 1 83 0
 413              	 .cfi_startproc
 414              	 
 415              	 
 416              	 
 417 0000 80B4     	 push {r7}
 418              	.LCFI45:
 419              	 .cfi_def_cfa_offset 4
 420              	 .cfi_offset 7,-4
 421 0002 83B0     	 sub sp,sp,#12
 422              	.LCFI46:
 423              	 .cfi_def_cfa_offset 16
 424 0004 00AF     	 add r7,sp,#0
 425              	.LCFI47:
 426              	 .cfi_def_cfa_register 7
 427 0006 7860     	 str r0,[r7,#4]
  84:../cleanflight/src/main/io/displayport_oled.c ****     UNUSED(displayPort);
  85:../cleanflight/src/main/io/displayport_oled.c ****     return true;
 428              	 .loc 1 85 0
 429 0008 0123     	 movs r3,#1
  86:../cleanflight/src/main/io/displayport_oled.c **** }
 430              	 .loc 1 86 0
 431 000a 1846     	 mov r0,r3
 432 000c 0C37     	 adds r7,r7,#12
 433              	.LCFI48:
 434              	 .cfi_def_cfa_offset 4
 435 000e BD46     	 mov sp,r7
 436              	.LCFI49:
 437              	 .cfi_def_cfa_register 13
 438              	 
 439 0010 5DF8047B 	 ldr r7,[sp],#4
 440              	.LCFI50:
 441              	 .cfi_restore 7
 442              	 .cfi_def_cfa_offset 0
 443 0014 7047     	 bx lr
 444              	 .cfi_endproc
 445              	.LFE529:
 447 0016 00BF     	 .section .text.oledHeartbeat,"ax",%progbits
 448              	 .align 2
 449              	 .thumb
 450              	 .thumb_func
 452              	oledHeartbeat:
 453              	.LFB530:
  87:../cleanflight/src/main/io/displayport_oled.c **** 
  88:../cleanflight/src/main/io/displayport_oled.c **** static int oledHeartbeat(displayPort_t *displayPort)
  89:../cleanflight/src/main/io/displayport_oled.c **** {
 454              	 .loc 1 89 0
 455              	 .cfi_startproc
 456              	 
 457              	 
 458              	 
 459 0000 80B4     	 push {r7}
 460              	.LCFI51:
 461              	 .cfi_def_cfa_offset 4
 462              	 .cfi_offset 7,-4
 463 0002 83B0     	 sub sp,sp,#12
 464              	.LCFI52:
 465              	 .cfi_def_cfa_offset 16
 466 0004 00AF     	 add r7,sp,#0
 467              	.LCFI53:
 468              	 .cfi_def_cfa_register 7
 469 0006 7860     	 str r0,[r7,#4]
  90:../cleanflight/src/main/io/displayport_oled.c ****     UNUSED(displayPort);
  91:../cleanflight/src/main/io/displayport_oled.c ****     return 0;
 470              	 .loc 1 91 0
 471 0008 0023     	 movs r3,#0
  92:../cleanflight/src/main/io/displayport_oled.c **** }
 472              	 .loc 1 92 0
 473 000a 1846     	 mov r0,r3
 474 000c 0C37     	 adds r7,r7,#12
 475              	.LCFI54:
 476              	 .cfi_def_cfa_offset 4
 477 000e BD46     	 mov sp,r7
 478              	.LCFI55:
 479              	 .cfi_def_cfa_register 13
 480              	 
 481 0010 5DF8047B 	 ldr r7,[sp],#4
 482              	.LCFI56:
 483              	 .cfi_restore 7
 484              	 .cfi_def_cfa_offset 0
 485 0014 7047     	 bx lr
 486              	 .cfi_endproc
 487              	.LFE530:
 489 0016 00BF     	 .section .text.oledResync,"ax",%progbits
 490              	 .align 2
 491              	 .thumb
 492              	 .thumb_func
 494              	oledResync:
 495              	.LFB531:
  93:../cleanflight/src/main/io/displayport_oled.c **** 
  94:../cleanflight/src/main/io/displayport_oled.c **** static void oledResync(displayPort_t *displayPort)
  95:../cleanflight/src/main/io/displayport_oled.c **** {
 496              	 .loc 1 95 0
 497              	 .cfi_startproc
 498              	 
 499              	 
 500              	 
 501 0000 80B4     	 push {r7}
 502              	.LCFI57:
 503              	 .cfi_def_cfa_offset 4
 504              	 .cfi_offset 7,-4
 505 0002 83B0     	 sub sp,sp,#12
 506              	.LCFI58:
 507              	 .cfi_def_cfa_offset 16
 508 0004 00AF     	 add r7,sp,#0
 509              	.LCFI59:
 510              	 .cfi_def_cfa_register 7
 511 0006 7860     	 str r0,[r7,#4]
  96:../cleanflight/src/main/io/displayport_oled.c ****     UNUSED(displayPort);
  97:../cleanflight/src/main/io/displayport_oled.c **** }
 512              	 .loc 1 97 0
 513 0008 0C37     	 adds r7,r7,#12
 514              	.LCFI60:
 515              	 .cfi_def_cfa_offset 4
 516 000a BD46     	 mov sp,r7
 517              	.LCFI61:
 518              	 .cfi_def_cfa_register 13
 519              	 
 520 000c 5DF8047B 	 ldr r7,[sp],#4
 521              	.LCFI62:
 522              	 .cfi_restore 7
 523              	 .cfi_def_cfa_offset 0
 524 0010 7047     	 bx lr
 525              	 .cfi_endproc
 526              	.LFE531:
 528 0012 00BF     	 .section .text.oledTxBytesFree,"ax",%progbits
 529              	 .align 2
 530              	 .thumb
 531              	 .thumb_func
 533              	oledTxBytesFree:
 534              	.LFB532:
  98:../cleanflight/src/main/io/displayport_oled.c **** 
  99:../cleanflight/src/main/io/displayport_oled.c **** static uint32_t oledTxBytesFree(const displayPort_t *displayPort)
 100:../cleanflight/src/main/io/displayport_oled.c **** {
 535              	 .loc 1 100 0
 536              	 .cfi_startproc
 537              	 
 538              	 
 539              	 
 540 0000 80B4     	 push {r7}
 541              	.LCFI63:
 542              	 .cfi_def_cfa_offset 4
 543              	 .cfi_offset 7,-4
 544 0002 83B0     	 sub sp,sp,#12
 545              	.LCFI64:
 546              	 .cfi_def_cfa_offset 16
 547 0004 00AF     	 add r7,sp,#0
 548              	.LCFI65:
 549              	 .cfi_def_cfa_register 7
 550 0006 7860     	 str r0,[r7,#4]
 101:../cleanflight/src/main/io/displayport_oled.c ****     UNUSED(displayPort);
 102:../cleanflight/src/main/io/displayport_oled.c ****     return UINT32_MAX;
 551              	 .loc 1 102 0
 552 0008 4FF0FF33 	 mov r3,#-1
 103:../cleanflight/src/main/io/displayport_oled.c **** }
 553              	 .loc 1 103 0
 554 000c 1846     	 mov r0,r3
 555 000e 0C37     	 adds r7,r7,#12
 556              	.LCFI66:
 557              	 .cfi_def_cfa_offset 4
 558 0010 BD46     	 mov sp,r7
 559              	.LCFI67:
 560              	 .cfi_def_cfa_register 13
 561              	 
 562 0012 5DF8047B 	 ldr r7,[sp],#4
 563              	.LCFI68:
 564              	 .cfi_restore 7
 565              	 .cfi_def_cfa_offset 0
 566 0016 7047     	 bx lr
 567              	 .cfi_endproc
 568              	.LFE532:
 570              	 .section .rodata.oledVTable,"a",%progbits
 571              	 .align 2
 574              	oledVTable:
 575 0000 00000000 	 .word oledGrab
 576 0004 00000000 	 .word oledRelease
 577 0008 00000000 	 .word oledClearScreen
 578 000c 00000000 	 .word oledDrawScreen
 579 0010 00000000 	 .word oledScreenSize
 580 0014 00000000 	 .word oledWriteString
 581 0018 00000000 	 .word oledWriteChar
 582 001c 00000000 	 .word oledIsTransferInProgress
 583 0020 00000000 	 .word oledHeartbeat
 584 0024 00000000 	 .word oledResync
 585 0028 00000000 	 .word oledIsSynced
 586 002c 00000000 	 .word oledTxBytesFree
 587              	 .section .text.displayPortOledInit,"ax",%progbits
 588              	 .align 2
 589              	 .global displayPortOledInit
 590              	 .thumb
 591              	 .thumb_func
 593              	displayPortOledInit:
 594              	.LFB533:
 104:../cleanflight/src/main/io/displayport_oled.c **** 
 105:../cleanflight/src/main/io/displayport_oled.c **** static const displayPortVTable_t oledVTable = {
 106:../cleanflight/src/main/io/displayport_oled.c ****     .grab = oledGrab,
 107:../cleanflight/src/main/io/displayport_oled.c ****     .release = oledRelease,
 108:../cleanflight/src/main/io/displayport_oled.c ****     .clearScreen = oledClearScreen,
 109:../cleanflight/src/main/io/displayport_oled.c ****     .drawScreen = oledDrawScreen,
 110:../cleanflight/src/main/io/displayport_oled.c ****     .screenSize = oledScreenSize,
 111:../cleanflight/src/main/io/displayport_oled.c ****     .writeString = oledWriteString,
 112:../cleanflight/src/main/io/displayport_oled.c ****     .writeChar = oledWriteChar,
 113:../cleanflight/src/main/io/displayport_oled.c ****     .isTransferInProgress = oledIsTransferInProgress,
 114:../cleanflight/src/main/io/displayport_oled.c ****     .heartbeat = oledHeartbeat,
 115:../cleanflight/src/main/io/displayport_oled.c ****     .resync = oledResync,
 116:../cleanflight/src/main/io/displayport_oled.c ****     .isSynced = oledIsSynced,
 117:../cleanflight/src/main/io/displayport_oled.c ****     .txBytesFree = oledTxBytesFree
 118:../cleanflight/src/main/io/displayport_oled.c **** };
 119:../cleanflight/src/main/io/displayport_oled.c **** 
 120:../cleanflight/src/main/io/displayport_oled.c **** displayPort_t *displayPortOledInit(void *device)
 121:../cleanflight/src/main/io/displayport_oled.c **** {
 595              	 .loc 1 121 0
 596              	 .cfi_startproc
 597              	 
 598              	 
 599 0000 80B5     	 push {r7,lr}
 600              	.LCFI69:
 601              	 .cfi_def_cfa_offset 8
 602              	 .cfi_offset 7,-8
 603              	 .cfi_offset 14,-4
 604 0002 82B0     	 sub sp,sp,#8
 605              	.LCFI70:
 606              	 .cfi_def_cfa_offset 16
 607 0004 00AF     	 add r7,sp,#0
 608              	.LCFI71:
 609              	 .cfi_def_cfa_register 7
 610 0006 7860     	 str r0,[r7,#4]
 122:../cleanflight/src/main/io/displayport_oled.c ****     oledDisplayPort.device = device;
 611              	 .loc 1 122 0
 612 0008 084A     	 ldr r2,.L26
 613 000a 7B68     	 ldr r3,[r7,#4]
 614 000c 5360     	 str r3,[r2,#4]
 123:../cleanflight/src/main/io/displayport_oled.c ****     displayInit(&oledDisplayPort, &oledVTable);
 615              	 .loc 1 123 0
 616 000e 0748     	 ldr r0,.L26
 617 0010 0749     	 ldr r1,.L26+4
 618 0012 FFF7FEFF 	 bl displayInit
 124:../cleanflight/src/main/io/displayport_oled.c ****     oledDisplayPort.rows = SCREEN_CHARACTER_ROW_COUNT;
 619              	 .loc 1 124 0
 620 0016 054B     	 ldr r3,.L26
 621 0018 0822     	 movs r2,#8
 622 001a 1A72     	 strb r2,[r3,#8]
 125:../cleanflight/src/main/io/displayport_oled.c ****     oledDisplayPort.cols = SCREEN_CHARACTER_COLUMN_COUNT;
 623              	 .loc 1 125 0
 624 001c 034B     	 ldr r3,.L26
 625 001e 1522     	 movs r2,#21
 626 0020 5A72     	 strb r2,[r3,#9]
 126:../cleanflight/src/main/io/displayport_oled.c ****     return &oledDisplayPort;
 627              	 .loc 1 126 0
 628 0022 024B     	 ldr r3,.L26
 127:../cleanflight/src/main/io/displayport_oled.c **** }
 629              	 .loc 1 127 0
 630 0024 1846     	 mov r0,r3
 631 0026 0837     	 adds r7,r7,#8
 632              	.LCFI72:
 633              	 .cfi_def_cfa_offset 8
 634 0028 BD46     	 mov sp,r7
 635              	.LCFI73:
 636              	 .cfi_def_cfa_register 13
 637              	 
 638 002a 80BD     	 pop {r7,pc}
 639              	.L27:
 640              	 .align 2
 641              	.L26:
 642 002c 00000000 	 .word oledDisplayPort
 643 0030 00000000 	 .word oledVTable
 644              	 .cfi_endproc
 645              	.LFE533:
 647              	 .text
 648              	.Letext0:
 649              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 650              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 651              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 652              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/display.h"
 653              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 654              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 displayport_oled.c
    {standard input}:20     .bss.oledDisplayPort:00000000 $d
    {standard input}:23     .bss.oledDisplayPort:00000000 oledDisplayPort
    {standard input}:26     .text.oledGrab:00000000 $t
    {standard input}:30     .text.oledGrab:00000000 oledGrab
    {standard input}:69     .text.oledRelease:00000000 $t
    {standard input}:73     .text.oledRelease:00000000 oledRelease
    {standard input}:111    .text.oledClearScreen:00000000 $t
    {standard input}:115    .text.oledClearScreen:00000000 oledClearScreen
    {standard input}:154    .text.oledDrawScreen:00000000 $t
    {standard input}:158    .text.oledDrawScreen:00000000 oledDrawScreen
    {standard input}:196    .text.oledScreenSize:00000000 $t
    {standard input}:200    .text.oledScreenSize:00000000 oledScreenSize
    {standard input}:243    .text.oledWriteString:00000000 $t
    {standard input}:247    .text.oledWriteString:00000000 oledWriteString
    {standard input}:301    .text.oledWriteChar:00000000 $t
    {standard input}:305    .text.oledWriteChar:00000000 oledWriteChar
    {standard input}:364    .text.oledIsTransferInProgress:00000000 $t
    {standard input}:368    .text.oledIsTransferInProgress:00000000 oledIsTransferInProgress
    {standard input}:406    .text.oledIsSynced:00000000 $t
    {standard input}:410    .text.oledIsSynced:00000000 oledIsSynced
    {standard input}:448    .text.oledHeartbeat:00000000 $t
    {standard input}:452    .text.oledHeartbeat:00000000 oledHeartbeat
    {standard input}:490    .text.oledResync:00000000 $t
    {standard input}:494    .text.oledResync:00000000 oledResync
    {standard input}:529    .text.oledTxBytesFree:00000000 $t
    {standard input}:533    .text.oledTxBytesFree:00000000 oledTxBytesFree
    {standard input}:571    .rodata.oledVTable:00000000 $d
    {standard input}:574    .rodata.oledVTable:00000000 oledVTable
    {standard input}:588    .text.displayPortOledInit:00000000 $t
    {standard input}:593    .text.displayPortOledInit:00000000 displayPortOledInit
    {standard input}:642    .text.displayPortOledInit:0000002c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
i2c_OLED_clear_display_quick
i2c_OLED_set_xy
i2c_OLED_send_string
i2c_OLED_send_char
displayInit
