   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pidaudio.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.pidAudioEnabled,"aw",%nobits
  22              	pidAudioEnabled:
  23 0000 00       	 .space 1
  24              	 .section .data.pidAudioMode,"aw",%progbits
  27              	pidAudioMode:
  28 0000 03       	 .byte 3
  29              	 .section .text.pidAudioInit,"ax",%progbits
  30              	 .align 2
  31              	 .global pidAudioInit
  32              	 .thumb
  33              	 .thumb_func
  35              	pidAudioInit:
  36              	.LFB537:
  37              	 .file 1 "../cleanflight/src/main/io/pidaudio.c"
   1:../cleanflight/src/main/io/pidaudio.c **** /*
   2:../cleanflight/src/main/io/pidaudio.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/io/pidaudio.c ****  *
   4:../cleanflight/src/main/io/pidaudio.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/io/pidaudio.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/io/pidaudio.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/io/pidaudio.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/io/pidaudio.c ****  * any later version.
   9:../cleanflight/src/main/io/pidaudio.c ****  *
  10:../cleanflight/src/main/io/pidaudio.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/io/pidaudio.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/io/pidaudio.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/io/pidaudio.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/io/pidaudio.c ****  *
  15:../cleanflight/src/main/io/pidaudio.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/io/pidaudio.c ****  * along with this software.
  17:../cleanflight/src/main/io/pidaudio.c ****  *
  18:../cleanflight/src/main/io/pidaudio.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/io/pidaudio.c ****  */
  20:../cleanflight/src/main/io/pidaudio.c **** 
  21:../cleanflight/src/main/io/pidaudio.c **** #include <stdbool.h>
  22:../cleanflight/src/main/io/pidaudio.c **** #include <stdint.h>
  23:../cleanflight/src/main/io/pidaudio.c **** #include <math.h>
  24:../cleanflight/src/main/io/pidaudio.c **** 
  25:../cleanflight/src/main/io/pidaudio.c **** #include "platform.h"
  26:../cleanflight/src/main/io/pidaudio.c **** 
  27:../cleanflight/src/main/io/pidaudio.c **** #include "common/axis.h"
  28:../cleanflight/src/main/io/pidaudio.c **** #include "common/maths.h"
  29:../cleanflight/src/main/io/pidaudio.c **** 
  30:../cleanflight/src/main/io/pidaudio.c **** #include "drivers/audio.h"
  31:../cleanflight/src/main/io/pidaudio.c **** 
  32:../cleanflight/src/main/io/pidaudio.c **** #include "fc/rc_modes.h"
  33:../cleanflight/src/main/io/pidaudio.c **** 
  34:../cleanflight/src/main/io/pidaudio.c **** #include "flight/pid.h"
  35:../cleanflight/src/main/io/pidaudio.c **** 
  36:../cleanflight/src/main/io/pidaudio.c **** #include "io/pidaudio.h"
  37:../cleanflight/src/main/io/pidaudio.c **** 
  38:../cleanflight/src/main/io/pidaudio.c **** static bool pidAudioEnabled = false;
  39:../cleanflight/src/main/io/pidaudio.c **** 
  40:../cleanflight/src/main/io/pidaudio.c **** static pidAudioModes_e pidAudioMode = PID_AUDIO_PIDSUM_XY;
  41:../cleanflight/src/main/io/pidaudio.c **** 
  42:../cleanflight/src/main/io/pidaudio.c **** void pidAudioInit(void)
  43:../cleanflight/src/main/io/pidaudio.c **** {
  38              	 .loc 1 43 0
  39              	 .cfi_startproc
  40              	 
  41              	 
  42 0000 80B5     	 push {r7,lr}
  43              	.LCFI0:
  44              	 .cfi_def_cfa_offset 8
  45              	 .cfi_offset 7,-8
  46              	 .cfi_offset 14,-4
  47 0002 00AF     	 add r7,sp,#0
  48              	.LCFI1:
  49              	 .cfi_def_cfa_register 7
  44:../cleanflight/src/main/io/pidaudio.c ****     audioSetupIO();
  50              	 .loc 1 44 0
  51 0004 FFF7FEFF 	 bl audioSetupIO
  45:../cleanflight/src/main/io/pidaudio.c **** }
  52              	 .loc 1 45 0
  53 0008 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE537:
  57 000a 00BF     	 .section .text.pidAudioStart,"ax",%progbits
  58              	 .align 2
  59              	 .global pidAudioStart
  60              	 .thumb
  61              	 .thumb_func
  63              	pidAudioStart:
  64              	.LFB538:
  46:../cleanflight/src/main/io/pidaudio.c **** 
  47:../cleanflight/src/main/io/pidaudio.c **** void pidAudioStart(void)
  48:../cleanflight/src/main/io/pidaudio.c **** {
  65              	 .loc 1 48 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69 0000 80B5     	 push {r7,lr}
  70              	.LCFI2:
  71              	 .cfi_def_cfa_offset 8
  72              	 .cfi_offset 7,-8
  73              	 .cfi_offset 14,-4
  74 0002 00AF     	 add r7,sp,#0
  75              	.LCFI3:
  76              	 .cfi_def_cfa_register 7
  49:../cleanflight/src/main/io/pidaudio.c ****     audioGenerateWhiteNoise();
  77              	 .loc 1 49 0
  78 0004 FFF7FEFF 	 bl audioGenerateWhiteNoise
  50:../cleanflight/src/main/io/pidaudio.c **** }
  79              	 .loc 1 50 0
  80 0008 80BD     	 pop {r7,pc}
  81              	 .cfi_endproc
  82              	.LFE538:
  84 000a 00BF     	 .section .text.pidAudioStop,"ax",%progbits
  85              	 .align 2
  86              	 .global pidAudioStop
  87              	 .thumb
  88              	 .thumb_func
  90              	pidAudioStop:
  91              	.LFB539:
  51:../cleanflight/src/main/io/pidaudio.c **** 
  52:../cleanflight/src/main/io/pidaudio.c **** void pidAudioStop(void)
  53:../cleanflight/src/main/io/pidaudio.c **** {
  92              	 .loc 1 53 0
  93              	 .cfi_startproc
  94              	 
  95              	 
  96 0000 80B5     	 push {r7,lr}
  97              	.LCFI4:
  98              	 .cfi_def_cfa_offset 8
  99              	 .cfi_offset 7,-8
 100              	 .cfi_offset 14,-4
 101 0002 00AF     	 add r7,sp,#0
 102              	.LCFI5:
 103              	 .cfi_def_cfa_register 7
  54:../cleanflight/src/main/io/pidaudio.c ****     audioSilence();
 104              	 .loc 1 54 0
 105 0004 FFF7FEFF 	 bl audioSilence
  55:../cleanflight/src/main/io/pidaudio.c **** }
 106              	 .loc 1 55 0
 107 0008 80BD     	 pop {r7,pc}
 108              	 .cfi_endproc
 109              	.LFE539:
 111 000a 00BF     	 .section .text.pidAudioGetMode,"ax",%progbits
 112              	 .align 2
 113              	 .global pidAudioGetMode
 114              	 .thumb
 115              	 .thumb_func
 117              	pidAudioGetMode:
 118              	.LFB540:
  56:../cleanflight/src/main/io/pidaudio.c **** 
  57:../cleanflight/src/main/io/pidaudio.c **** pidAudioModes_e pidAudioGetMode(void)
  58:../cleanflight/src/main/io/pidaudio.c **** {
 119              	 .loc 1 58 0
 120              	 .cfi_startproc
 121              	 
 122              	 
 123              	 
 124 0000 80B4     	 push {r7}
 125              	.LCFI6:
 126              	 .cfi_def_cfa_offset 4
 127              	 .cfi_offset 7,-4
 128 0002 00AF     	 add r7,sp,#0
 129              	.LCFI7:
 130              	 .cfi_def_cfa_register 7
  59:../cleanflight/src/main/io/pidaudio.c ****     return pidAudioMode;
 131              	 .loc 1 59 0
 132 0004 034B     	 ldr r3,.L6
 133 0006 1B78     	 ldrb r3,[r3]
  60:../cleanflight/src/main/io/pidaudio.c **** }
 134              	 .loc 1 60 0
 135 0008 1846     	 mov r0,r3
 136 000a BD46     	 mov sp,r7
 137              	.LCFI8:
 138              	 .cfi_def_cfa_register 13
 139              	 
 140 000c 5DF8047B 	 ldr r7,[sp],#4
 141              	.LCFI9:
 142              	 .cfi_restore 7
 143              	 .cfi_def_cfa_offset 0
 144 0010 7047     	 bx lr
 145              	.L7:
 146 0012 00BF     	 .align 2
 147              	.L6:
 148 0014 00000000 	 .word pidAudioMode
 149              	 .cfi_endproc
 150              	.LFE540:
 152              	 .section .text.pidAudioSetMode,"ax",%progbits
 153              	 .align 2
 154              	 .global pidAudioSetMode
 155              	 .thumb
 156              	 .thumb_func
 158              	pidAudioSetMode:
 159              	.LFB541:
  61:../cleanflight/src/main/io/pidaudio.c **** 
  62:../cleanflight/src/main/io/pidaudio.c **** void pidAudioSetMode(pidAudioModes_e mode)
  63:../cleanflight/src/main/io/pidaudio.c **** {
 160              	 .loc 1 63 0
 161              	 .cfi_startproc
 162              	 
 163              	 
 164              	 
 165 0000 80B4     	 push {r7}
 166              	.LCFI10:
 167              	 .cfi_def_cfa_offset 4
 168              	 .cfi_offset 7,-4
 169 0002 83B0     	 sub sp,sp,#12
 170              	.LCFI11:
 171              	 .cfi_def_cfa_offset 16
 172 0004 00AF     	 add r7,sp,#0
 173              	.LCFI12:
 174              	 .cfi_def_cfa_register 7
 175 0006 0346     	 mov r3,r0
 176 0008 FB71     	 strb r3,[r7,#7]
  64:../cleanflight/src/main/io/pidaudio.c ****     pidAudioMode = mode;
 177              	 .loc 1 64 0
 178 000a 044A     	 ldr r2,.L9
 179 000c FB79     	 ldrb r3,[r7,#7]
 180 000e 1370     	 strb r3,[r2]
  65:../cleanflight/src/main/io/pidaudio.c **** }
 181              	 .loc 1 65 0
 182 0010 0C37     	 adds r7,r7,#12
 183              	.LCFI13:
 184              	 .cfi_def_cfa_offset 4
 185 0012 BD46     	 mov sp,r7
 186              	.LCFI14:
 187              	 .cfi_def_cfa_register 13
 188              	 
 189 0014 5DF8047B 	 ldr r7,[sp],#4
 190              	.LCFI15:
 191              	 .cfi_restore 7
 192              	 .cfi_def_cfa_offset 0
 193 0018 7047     	 bx lr
 194              	.L10:
 195 001a 00BF     	 .align 2
 196              	.L9:
 197 001c 00000000 	 .word pidAudioMode
 198              	 .cfi_endproc
 199              	.LFE541:
 201              	 .section .text.pidAudioUpdate,"ax",%progbits
 202              	 .align 2
 203              	 .global pidAudioUpdate
 204              	 .thumb
 205              	 .thumb_func
 207              	pidAudioUpdate:
 208              	.LFB542:
  66:../cleanflight/src/main/io/pidaudio.c **** 
  67:../cleanflight/src/main/io/pidaudio.c **** void FAST_CODE_NOINLINE pidAudioUpdate(void)
  68:../cleanflight/src/main/io/pidaudio.c **** {
 209              	 .loc 1 68 0
 210              	 .cfi_startproc
 211              	 
 212              	 
 213 0000 80B5     	 push {r7,lr}
 214              	.LCFI16:
 215              	 .cfi_def_cfa_offset 8
 216              	 .cfi_offset 7,-8
 217              	 .cfi_offset 14,-4
 218 0002 90B0     	 sub sp,sp,#64
 219              	.LCFI17:
 220              	 .cfi_def_cfa_offset 72
 221 0004 02AF     	 add r7,sp,#8
 222              	.LCFI18:
 223              	 .cfi_def_cfa 7,64
  69:../cleanflight/src/main/io/pidaudio.c ****     bool newState = IS_RC_MODE_ACTIVE(BOXPIDAUDIO);
 224              	 .loc 1 69 0
 225 0006 2720     	 movs r0,#39
 226 0008 FFF7FEFF 	 bl IS_RC_MODE_ACTIVE
 227 000c 0346     	 mov r3,r0
 228 000e 87F83630 	 strb r3,[r7,#54]
  70:../cleanflight/src/main/io/pidaudio.c **** 
  71:../cleanflight/src/main/io/pidaudio.c ****     if (pidAudioEnabled != newState) {
 229              	 .loc 1 71 0
 230 0012 7E4B     	 ldr r3,.L57
 231 0014 1B78     	 ldrb r3,[r3]
 232 0016 97F83620 	 ldrb r2,[r7,#54]
 233 001a 9A42     	 cmp r2,r3
 234 001c 0CD0     	 beq .L12
  72:../cleanflight/src/main/io/pidaudio.c ****         if (newState) {
 235              	 .loc 1 72 0
 236 001e 97F83630 	 ldrb r3,[r7,#54]
 237 0022 002B     	 cmp r3,#0
 238 0024 02D0     	 beq .L13
  73:../cleanflight/src/main/io/pidaudio.c ****             pidAudioStart();
 239              	 .loc 1 73 0
 240 0026 FFF7FEFF 	 bl pidAudioStart
 241 002a 01E0     	 b .L14
 242              	.L13:
  74:../cleanflight/src/main/io/pidaudio.c ****         } else {
  75:../cleanflight/src/main/io/pidaudio.c ****             pidAudioStop();
 243              	 .loc 1 75 0
 244 002c FFF7FEFF 	 bl pidAudioStop
 245              	.L14:
  76:../cleanflight/src/main/io/pidaudio.c ****         }
  77:../cleanflight/src/main/io/pidaudio.c ****         pidAudioEnabled = newState;
 246              	 .loc 1 77 0
 247 0030 764A     	 ldr r2,.L57
 248 0032 97F83630 	 ldrb r3,[r7,#54]
 249 0036 1370     	 strb r3,[r2]
 250              	.L12:
  78:../cleanflight/src/main/io/pidaudio.c ****     }
  79:../cleanflight/src/main/io/pidaudio.c **** 
  80:../cleanflight/src/main/io/pidaudio.c ****     if (!pidAudioEnabled) {
 251              	 .loc 1 80 0
 252 0038 744B     	 ldr r3,.L57
 253 003a 1B78     	 ldrb r3,[r3]
 254 003c 83F00103 	 eor r3,r3,#1
 255 0040 DBB2     	 uxtb r3,r3
 256 0042 002B     	 cmp r3,#0
 257 0044 00D0     	 beq .L15
  81:../cleanflight/src/main/io/pidaudio.c ****         return;
 258              	 .loc 1 81 0
 259 0046 DEE0     	 b .L11
 260              	.L15:
  82:../cleanflight/src/main/io/pidaudio.c ****     }
  83:../cleanflight/src/main/io/pidaudio.c **** 
  84:../cleanflight/src/main/io/pidaudio.c ****     uint8_t tone = TONE_MID;
 261              	 .loc 1 84 0
 262 0048 2023     	 movs r3,#32
 263 004a 87F83730 	 strb r3,[r7,#55]
  85:../cleanflight/src/main/io/pidaudio.c **** 
  86:../cleanflight/src/main/io/pidaudio.c ****     switch (pidAudioMode) {
 264              	 .loc 1 86 0
 265 004e 704B     	 ldr r3,.L57+4
 266 0050 1B78     	 ldrb r3,[r3]
 267 0052 022B     	 cmp r3,#2
 268 0054 41D0     	 beq .L18
 269 0056 032B     	 cmp r3,#3
 270 0058 7CD0     	 beq .L19
 271 005a 012B     	 cmp r3,#1
 272 005c 00D0     	 beq .L20
  87:../cleanflight/src/main/io/pidaudio.c ****     case PID_AUDIO_PIDSUM_X:
  88:../cleanflight/src/main/io/pidaudio.c ****         {
  89:../cleanflight/src/main/io/pidaudio.c ****             const uint32_t pidSumX = MIN(ABS(pidData[FD_ROLL].Sum), PIDSUM_LIMIT);
  90:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumX, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
  91:../cleanflight/src/main/io/pidaudio.c ****             break;
  92:../cleanflight/src/main/io/pidaudio.c ****         }
  93:../cleanflight/src/main/io/pidaudio.c ****     case PID_AUDIO_PIDSUM_Y:
  94:../cleanflight/src/main/io/pidaudio.c ****         {
  95:../cleanflight/src/main/io/pidaudio.c ****             const uint32_t pidSumY = MIN(ABS(pidData[FD_PITCH].Sum), PIDSUM_LIMIT);
  96:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
  97:../cleanflight/src/main/io/pidaudio.c ****             break;
  98:../cleanflight/src/main/io/pidaudio.c ****         }
  99:../cleanflight/src/main/io/pidaudio.c ****     case PID_AUDIO_PIDSUM_XY:
 100:../cleanflight/src/main/io/pidaudio.c ****         {
 101:../cleanflight/src/main/io/pidaudio.c ****             const uint32_t pidSumXY = MIN((ABS(pidData[FD_ROLL].Sum) + ABS(pidData[FD_PITCH].Sum)) 
 102:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 103:../cleanflight/src/main/io/pidaudio.c ****             break;
 104:../cleanflight/src/main/io/pidaudio.c ****         }
 105:../cleanflight/src/main/io/pidaudio.c ****     default:
 106:../cleanflight/src/main/io/pidaudio.c ****         break;
 273              	 .loc 1 106 0
 274 005e CDE0     	 b .L27
 275              	.L20:
 276              	.LBB2:
 277              	.LBB3:
 278              	.LBB4:
  89:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumX, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 279              	 .loc 1 89 0
 280 0060 6C4B     	 ldr r3,.L57+8
 281 0062 1B69     	 ldr r3,[r3,#16]
 282 0064 3B63     	 str r3,[r7,#48]
 283 0066 D7ED0C7A 	 flds s15,[r7,#48]
 284 006a F5EEC07A 	 fcmpezs s15
 285 006e F1EE10FA 	 fmstat
 286 0072 02DD     	 ble .L50
  89:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumX, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 287              	 .loc 1 89 0 is_stmt 0 discriminator 1
 288 0074 D7ED0C7A 	 flds s15,[r7,#48]
 289 0078 03E0     	 b .L23
 290              	.L50:
  89:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumX, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 291              	 .loc 1 89 0 discriminator 2
 292 007a D7ED0C7A 	 flds s15,[r7,#48]
 293 007e F1EE677A 	 fnegs s15,s15
 294              	.L23:
 295              	.LBE4:
  89:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumX, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 296              	 .loc 1 89 0 discriminator 4
 297 0082 C7ED0B7A 	 fsts s15,[r7,#44]
 298 0086 4FF4FA73 	 mov r3,#500
 299 008a BB62     	 str r3,[r7,#40]
 300 008c BB6A     	 ldr r3,[r7,#40]
 301 008e 07EE903A 	 fmsr s15,r3
 302 0092 B8EEE77A 	 fsitos s14,s15
 303 0096 D7ED0B7A 	 flds s15,[r7,#44]
 304 009a B4EEE77A 	 fcmpes s14,s15
 305 009e F1EE10FA 	 fmstat
 306 00a2 02DD     	 ble .L51
  89:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumX, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 307              	 .loc 1 89 0 discriminator 5
 308 00a4 D7ED0B7A 	 flds s15,[r7,#44]
 309 00a8 04E0     	 b .L26
 310              	.L51:
  89:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumX, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 311              	 .loc 1 89 0 discriminator 6
 312 00aa BB6A     	 ldr r3,[r7,#40]
 313 00ac 07EE903A 	 fmsr s15,r3
 314 00b0 F8EEE77A 	 fsitos s15,s15
 315              	.L26:
 316              	.LBE3:
  89:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumX, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 317              	 .loc 1 89 0 discriminator 8
 318 00b4 FCEEE77A 	 ftouizs s15,s15
 319 00b8 17EE903A 	 fmrs r3,s15
 320 00bc 7B62     	 str r3,[r7,#36]
  90:../cleanflight/src/main/io/pidaudio.c ****             break;
 321              	 .loc 1 90 0 is_stmt 1 discriminator 8
 322 00be 7A6A     	 ldr r2,[r7,#36]
 323 00c0 0023     	 movs r3,#0
 324 00c2 0093     	 str r3,[sp]
 325 00c4 1046     	 mov r0,r2
 326 00c6 0021     	 movs r1,#0
 327 00c8 4FF4FA72 	 mov r2,#500
 328 00cc 3F23     	 movs r3,#63
 329 00ce FFF7FEFF 	 bl scaleRange
 330 00d2 0346     	 mov r3,r0
 331 00d4 87F83730 	 strb r3,[r7,#55]
  91:../cleanflight/src/main/io/pidaudio.c ****         }
 332              	 .loc 1 91 0 discriminator 8
 333 00d8 90E0     	 b .L27
 334              	.L18:
 335              	.LBE2:
 336              	.LBB5:
 337              	.LBB6:
 338              	.LBB7:
  95:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 339              	 .loc 1 95 0
 340 00da 4E4B     	 ldr r3,.L57+8
 341 00dc 5B6A     	 ldr r3,[r3,#36]
 342 00de 3B62     	 str r3,[r7,#32]
 343 00e0 D7ED087A 	 flds s15,[r7,#32]
 344 00e4 F5EEC07A 	 fcmpezs s15
 345 00e8 F1EE10FA 	 fmstat
 346 00ec 02DD     	 ble .L52
  95:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 347              	 .loc 1 95 0 is_stmt 0 discriminator 1
 348 00ee D7ED087A 	 flds s15,[r7,#32]
 349 00f2 03E0     	 b .L30
 350              	.L52:
  95:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 351              	 .loc 1 95 0 discriminator 2
 352 00f4 D7ED087A 	 flds s15,[r7,#32]
 353 00f8 F1EE677A 	 fnegs s15,s15
 354              	.L30:
 355              	.LBE7:
  95:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 356              	 .loc 1 95 0 discriminator 4
 357 00fc C7ED077A 	 fsts s15,[r7,#28]
 358 0100 4FF4FA73 	 mov r3,#500
 359 0104 BB61     	 str r3,[r7,#24]
 360 0106 BB69     	 ldr r3,[r7,#24]
 361 0108 07EE903A 	 fmsr s15,r3
 362 010c B8EEE77A 	 fsitos s14,s15
 363 0110 D7ED077A 	 flds s15,[r7,#28]
 364 0114 B4EEE77A 	 fcmpes s14,s15
 365 0118 F1EE10FA 	 fmstat
 366 011c 02DD     	 ble .L53
  95:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 367              	 .loc 1 95 0 discriminator 5
 368 011e D7ED077A 	 flds s15,[r7,#28]
 369 0122 04E0     	 b .L33
 370              	.L53:
  95:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 371              	 .loc 1 95 0 discriminator 6
 372 0124 BB69     	 ldr r3,[r7,#24]
 373 0126 07EE903A 	 fmsr s15,r3
 374 012a F8EEE77A 	 fsitos s15,s15
 375              	.L33:
 376              	.LBE6:
  95:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 377              	 .loc 1 95 0 discriminator 8
 378 012e FCEEE77A 	 ftouizs s15,s15
 379 0132 17EE903A 	 fmrs r3,s15
 380 0136 7B61     	 str r3,[r7,#20]
  96:../cleanflight/src/main/io/pidaudio.c ****             break;
 381              	 .loc 1 96 0 is_stmt 1 discriminator 8
 382 0138 7A69     	 ldr r2,[r7,#20]
 383 013a 0023     	 movs r3,#0
 384 013c 0093     	 str r3,[sp]
 385 013e 1046     	 mov r0,r2
 386 0140 0021     	 movs r1,#0
 387 0142 4FF4FA72 	 mov r2,#500
 388 0146 3F23     	 movs r3,#63
 389 0148 FFF7FEFF 	 bl scaleRange
 390 014c 0346     	 mov r3,r0
 391 014e 87F83730 	 strb r3,[r7,#55]
  97:../cleanflight/src/main/io/pidaudio.c ****         }
 392              	 .loc 1 97 0 discriminator 8
 393 0152 53E0     	 b .L27
 394              	.L19:
 395              	.LBE5:
 396              	.LBB8:
 397              	.LBB9:
 398              	.LBB10:
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 399              	 .loc 1 101 0
 400 0154 2F4B     	 ldr r3,.L57+8
 401 0156 1B69     	 ldr r3,[r3,#16]
 402 0158 3B61     	 str r3,[r7,#16]
 403 015a D7ED047A 	 flds s15,[r7,#16]
 404 015e F5EEC07A 	 fcmpezs s15
 405 0162 F1EE10FA 	 fmstat
 406 0166 02DD     	 ble .L54
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 407              	 .loc 1 101 0 is_stmt 0 discriminator 1
 408 0168 97ED047A 	 flds s14,[r7,#16]
 409 016c 03E0     	 b .L36
 410              	.L54:
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 411              	 .loc 1 101 0 discriminator 2
 412 016e D7ED047A 	 flds s15,[r7,#16]
 413 0172 B1EE677A 	 fnegs s14,s15
 414              	.L36:
 415              	.LBE10:
 416              	.LBB11:
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 417              	 .loc 1 101 0 discriminator 4
 418 0176 274B     	 ldr r3,.L57+8
 419 0178 5B6A     	 ldr r3,[r3,#36]
 420 017a FB60     	 str r3,[r7,#12]
 421 017c D7ED037A 	 flds s15,[r7,#12]
 422 0180 F5EEC07A 	 fcmpezs s15
 423 0184 F1EE10FA 	 fmstat
 424 0188 02DD     	 ble .L55
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 425              	 .loc 1 101 0 discriminator 5
 426 018a D7ED037A 	 flds s15,[r7,#12]
 427 018e 03E0     	 b .L39
 428              	.L55:
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 429              	 .loc 1 101 0 discriminator 6
 430 0190 D7ED037A 	 flds s15,[r7,#12]
 431 0194 F1EE677A 	 fnegs s15,s15
 432              	.L39:
 433              	.LBE11:
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 434              	 .loc 1 101 0 discriminator 8
 435 0198 77EE277A 	 fadds s15,s14,s15
 436 019c B0EE007A 	 fconsts s14,#0
 437 01a0 C7EE877A 	 fdivs s15,s15,s14
 438 01a4 C7ED027A 	 fsts s15,[r7,#8]
 439 01a8 4FF4FA73 	 mov r3,#500
 440 01ac 7B60     	 str r3,[r7,#4]
 441 01ae 7B68     	 ldr r3,[r7,#4]
 442 01b0 07EE903A 	 fmsr s15,r3
 443 01b4 B8EEE77A 	 fsitos s14,s15
 444 01b8 D7ED027A 	 flds s15,[r7,#8]
 445 01bc B4EEE77A 	 fcmpes s14,s15
 446 01c0 F1EE10FA 	 fmstat
 447 01c4 02DD     	 ble .L56
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 448              	 .loc 1 101 0 discriminator 9
 449 01c6 D7ED027A 	 flds s15,[r7,#8]
 450 01ca 04E0     	 b .L42
 451              	.L56:
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 452              	 .loc 1 101 0 discriminator 10
 453 01cc 7B68     	 ldr r3,[r7,#4]
 454 01ce 07EE903A 	 fmsr s15,r3
 455 01d2 F8EEE77A 	 fsitos s15,s15
 456              	.L42:
 457              	.LBE9:
 101:../cleanflight/src/main/io/pidaudio.c ****             tone = scaleRange(pidSumXY, 0, PIDSUM_LIMIT, TONE_MAX, TONE_MIN);
 458              	 .loc 1 101 0 discriminator 12
 459 01d6 FCEEE77A 	 ftouizs s15,s15
 460 01da 17EE903A 	 fmrs r3,s15
 461 01de 3B60     	 str r3,[r7]
 102:../cleanflight/src/main/io/pidaudio.c ****             break;
 462              	 .loc 1 102 0 is_stmt 1 discriminator 12
 463 01e0 3A68     	 ldr r2,[r7]
 464 01e2 0023     	 movs r3,#0
 465 01e4 0093     	 str r3,[sp]
 466 01e6 1046     	 mov r0,r2
 467 01e8 0021     	 movs r1,#0
 468 01ea 4FF4FA72 	 mov r2,#500
 469 01ee 3F23     	 movs r3,#63
 470 01f0 FFF7FEFF 	 bl scaleRange
 471 01f4 0346     	 mov r3,r0
 472 01f6 87F83730 	 strb r3,[r7,#55]
 103:../cleanflight/src/main/io/pidaudio.c ****         }
 473              	 .loc 1 103 0 discriminator 12
 474 01fa 00BF     	 nop
 475              	.L27:
 476              	.LBE8:
 107:../cleanflight/src/main/io/pidaudio.c ****     }
 108:../cleanflight/src/main/io/pidaudio.c **** 
 109:../cleanflight/src/main/io/pidaudio.c ****     audioPlayTone(tone);
 477              	 .loc 1 109 0
 478 01fc 97F83730 	 ldrb r3,[r7,#55]
 479 0200 1846     	 mov r0,r3
 480 0202 FFF7FEFF 	 bl audioPlayTone
 481              	.L11:
 110:../cleanflight/src/main/io/pidaudio.c **** }
 482              	 .loc 1 110 0
 483 0206 3837     	 adds r7,r7,#56
 484              	.LCFI19:
 485              	 .cfi_def_cfa_offset 8
 486 0208 BD46     	 mov sp,r7
 487              	.LCFI20:
 488              	 .cfi_def_cfa_register 13
 489              	 
 490 020a 80BD     	 pop {r7,pc}
 491              	.L58:
 492              	 .align 2
 493              	.L57:
 494 020c 00000000 	 .word pidAudioEnabled
 495 0210 00000000 	 .word pidAudioMode
 496 0214 00000000 	 .word pidData
 497              	 .cfi_endproc
 498              	.LFE542:
 500              	 .text
 501              	.Letext0:
 502              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 503              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 504              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 505              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/axis.h"
 506              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_modes.h"
 507              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 508              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/pid.h"
 509              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/pidaudio.h"
 510              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 511              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pidaudio.c
    {standard input}:22     .bss.pidAudioEnabled:00000000 pidAudioEnabled
    {standard input}:23     .bss.pidAudioEnabled:00000000 $d
    {standard input}:27     .data.pidAudioMode:00000000 pidAudioMode
    {standard input}:30     .text.pidAudioInit:00000000 $t
    {standard input}:35     .text.pidAudioInit:00000000 pidAudioInit
    {standard input}:58     .text.pidAudioStart:00000000 $t
    {standard input}:63     .text.pidAudioStart:00000000 pidAudioStart
    {standard input}:85     .text.pidAudioStop:00000000 $t
    {standard input}:90     .text.pidAudioStop:00000000 pidAudioStop
    {standard input}:112    .text.pidAudioGetMode:00000000 $t
    {standard input}:117    .text.pidAudioGetMode:00000000 pidAudioGetMode
    {standard input}:148    .text.pidAudioGetMode:00000014 $d
    {standard input}:153    .text.pidAudioSetMode:00000000 $t
    {standard input}:158    .text.pidAudioSetMode:00000000 pidAudioSetMode
    {standard input}:197    .text.pidAudioSetMode:0000001c $d
    {standard input}:202    .text.pidAudioUpdate:00000000 $t
    {standard input}:207    .text.pidAudioUpdate:00000000 pidAudioUpdate
    {standard input}:494    .text.pidAudioUpdate:0000020c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
audioSetupIO
audioGenerateWhiteNoise
audioSilence
IS_RC_MODE_ACTIVE
scaleRange
audioPlayTone
pidData
