   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "rcdevice_cam.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm pCurrentDisplay,4,4
  20              	 .comm switchStates,3,4
  21              	 .section .bss.runcamDevice,"aw",%nobits
  22              	 .align 2
  25              	runcamDevice:
  26 0000 00000000 	 .space 72
  26      00000000 
  26      00000000 
  26      00000000 
  26      00000000 
  27              	 .global camDevice
  28              	 .section .data.camDevice,"aw",%progbits
  29              	 .align 2
  32              	camDevice:
  33 0000 00000000 	 .word runcamDevice
  34              	 .global rcdeviceInMenu
  35              	 .section .bss.rcdeviceInMenu,"aw",%nobits
  38              	rcdeviceInMenu:
  39 0000 00       	 .space 1
  40              	 .global isButtonPressed
  41              	 .section .bss.isButtonPressed,"aw",%nobits
  44              	isButtonPressed:
  45 0000 00       	 .space 1
  46              	 .global waitingDeviceResponse
  47              	 .section .bss.waitingDeviceResponse,"aw",%nobits
  50              	waitingDeviceResponse:
  51 0000 00       	 .space 1
  52              	 .section .text.isFeatureSupported,"ax",%progbits
  53              	 .align 2
  54              	 .thumb
  55              	 .thumb_func
  57              	isFeatureSupported:
  58              	.LFB548:
  59              	 .file 1 "../cleanflight/src/main/io/rcdevice_cam.c"
   1:../cleanflight/src/main/io/rcdevice_cam.c **** /*
   2:../cleanflight/src/main/io/rcdevice_cam.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/io/rcdevice_cam.c ****  *
   4:../cleanflight/src/main/io/rcdevice_cam.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/io/rcdevice_cam.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/io/rcdevice_cam.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/io/rcdevice_cam.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/io/rcdevice_cam.c ****  * any later version.
   9:../cleanflight/src/main/io/rcdevice_cam.c ****  *
  10:../cleanflight/src/main/io/rcdevice_cam.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/io/rcdevice_cam.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/io/rcdevice_cam.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/io/rcdevice_cam.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/io/rcdevice_cam.c ****  *
  15:../cleanflight/src/main/io/rcdevice_cam.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/io/rcdevice_cam.c ****  * along with this software.
  17:../cleanflight/src/main/io/rcdevice_cam.c ****  *
  18:../cleanflight/src/main/io/rcdevice_cam.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/io/rcdevice_cam.c ****  */
  20:../cleanflight/src/main/io/rcdevice_cam.c **** 
  21:../cleanflight/src/main/io/rcdevice_cam.c **** #include <stdbool.h>
  22:../cleanflight/src/main/io/rcdevice_cam.c **** #include <stdint.h>
  23:../cleanflight/src/main/io/rcdevice_cam.c **** 
  24:../cleanflight/src/main/io/rcdevice_cam.c **** #include "platform.h"
  25:../cleanflight/src/main/io/rcdevice_cam.c **** 
  26:../cleanflight/src/main/io/rcdevice_cam.c **** #include "pg/rx.h"
  27:../cleanflight/src/main/io/rcdevice_cam.c **** 
  28:../cleanflight/src/main/io/rcdevice_cam.c **** #include "common/time.h"
  29:../cleanflight/src/main/io/rcdevice_cam.c **** 
  30:../cleanflight/src/main/io/rcdevice_cam.c **** #include "cms/cms.h"
  31:../cleanflight/src/main/io/rcdevice_cam.c **** 
  32:../cleanflight/src/main/io/rcdevice_cam.c **** #include "fc/rc_controls.h"
  33:../cleanflight/src/main/io/rcdevice_cam.c **** #include "fc/runtime_config.h"
  34:../cleanflight/src/main/io/rcdevice_cam.c **** 
  35:../cleanflight/src/main/io/rcdevice_cam.c **** #include "io/beeper.h"
  36:../cleanflight/src/main/io/rcdevice_cam.c **** #include "io/serial.h"
  37:../cleanflight/src/main/io/rcdevice_cam.c **** #include "io/rcdevice_cam.h"
  38:../cleanflight/src/main/io/rcdevice_cam.c **** 
  39:../cleanflight/src/main/io/rcdevice_cam.c **** #include "rx/rx.h"
  40:../cleanflight/src/main/io/rcdevice_cam.c **** 
  41:../cleanflight/src/main/io/rcdevice_cam.c **** #ifdef USE_RCDEVICE
  42:../cleanflight/src/main/io/rcdevice_cam.c **** 
  43:../cleanflight/src/main/io/rcdevice_cam.c **** #define IS_HI(X) (rcData[X] > FIVE_KEY_CABLE_JOYSTICK_MAX)
  44:../cleanflight/src/main/io/rcdevice_cam.c **** #define IS_LO(X) (rcData[X] < FIVE_KEY_CABLE_JOYSTICK_MIN)
  45:../cleanflight/src/main/io/rcdevice_cam.c **** #define IS_MID(X) (rcData[X] > FIVE_KEY_CABLE_JOYSTICK_MID_START && rcData[X] < FIVE_KEY_CABLE_JOYS
  46:../cleanflight/src/main/io/rcdevice_cam.c **** 
  47:../cleanflight/src/main/io/rcdevice_cam.c **** 
  48:../cleanflight/src/main/io/rcdevice_cam.c **** static runcamDevice_t runcamDevice;
  49:../cleanflight/src/main/io/rcdevice_cam.c **** runcamDevice_t *camDevice = &runcamDevice;
  50:../cleanflight/src/main/io/rcdevice_cam.c **** rcdeviceSwitchState_t switchStates[BOXCAMERA3 - BOXCAMERA1 + 1];
  51:../cleanflight/src/main/io/rcdevice_cam.c **** bool rcdeviceInMenu = false;
  52:../cleanflight/src/main/io/rcdevice_cam.c **** bool isButtonPressed = false;
  53:../cleanflight/src/main/io/rcdevice_cam.c **** bool waitingDeviceResponse = false;
  54:../cleanflight/src/main/io/rcdevice_cam.c **** 
  55:../cleanflight/src/main/io/rcdevice_cam.c **** 
  56:../cleanflight/src/main/io/rcdevice_cam.c **** static bool isFeatureSupported(uint8_t feature)
  57:../cleanflight/src/main/io/rcdevice_cam.c **** {
  60              	 .loc 1 57 0
  61              	 .cfi_startproc
  62              	 
  63              	 
  64              	 
  65 0000 80B4     	 push {r7}
  66              	.LCFI0:
  67              	 .cfi_def_cfa_offset 4
  68              	 .cfi_offset 7,-4
  69 0002 83B0     	 sub sp,sp,#12
  70              	.LCFI1:
  71              	 .cfi_def_cfa_offset 16
  72 0004 00AF     	 add r7,sp,#0
  73              	.LCFI2:
  74              	 .cfi_def_cfa_register 7
  75 0006 0346     	 mov r3,r0
  76 0008 FB71     	 strb r3,[r7,#7]
  58:../cleanflight/src/main/io/rcdevice_cam.c ****     if (camDevice->info.features & feature) {
  77              	 .loc 1 58 0
  78 000a 094B     	 ldr r3,.L4
  79 000c 1B68     	 ldr r3,[r3]
  80 000e B3F84530 	 ldrh r3,[r3,#69]
  81 0012 9BB2     	 uxth r3,r3
  82 0014 1A46     	 mov r2,r3
  83 0016 FB79     	 ldrb r3,[r7,#7]
  84 0018 1340     	 ands r3,r3,r2
  85 001a 002B     	 cmp r3,#0
  86 001c 01D0     	 beq .L2
  59:../cleanflight/src/main/io/rcdevice_cam.c ****         return true;
  87              	 .loc 1 59 0
  88 001e 0123     	 movs r3,#1
  89 0020 00E0     	 b .L3
  90              	.L2:
  60:../cleanflight/src/main/io/rcdevice_cam.c ****     }
  61:../cleanflight/src/main/io/rcdevice_cam.c **** 
  62:../cleanflight/src/main/io/rcdevice_cam.c ****     return false;
  91              	 .loc 1 62 0
  92 0022 0023     	 movs r3,#0
  93              	.L3:
  63:../cleanflight/src/main/io/rcdevice_cam.c **** }
  94              	 .loc 1 63 0
  95 0024 1846     	 mov r0,r3
  96 0026 0C37     	 adds r7,r7,#12
  97              	.LCFI3:
  98              	 .cfi_def_cfa_offset 4
  99 0028 BD46     	 mov sp,r7
 100              	.LCFI4:
 101              	 .cfi_def_cfa_register 13
 102              	 
 103 002a 5DF8047B 	 ldr r7,[sp],#4
 104              	.LCFI5:
 105              	 .cfi_restore 7
 106              	 .cfi_def_cfa_offset 0
 107 002e 7047     	 bx lr
 108              	.L5:
 109              	 .align 2
 110              	.L4:
 111 0030 00000000 	 .word camDevice
 112              	 .cfi_endproc
 113              	.LFE548:
 115              	 .section .text.rcdeviceIsEnabled,"ax",%progbits
 116              	 .align 2
 117              	 .global rcdeviceIsEnabled
 118              	 .thumb
 119              	 .thumb_func
 121              	rcdeviceIsEnabled:
 122              	.LFB549:
  64:../cleanflight/src/main/io/rcdevice_cam.c **** 
  65:../cleanflight/src/main/io/rcdevice_cam.c **** bool rcdeviceIsEnabled(void)
  66:../cleanflight/src/main/io/rcdevice_cam.c **** {
 123              	 .loc 1 66 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127              	 
 128 0000 80B4     	 push {r7}
 129              	.LCFI6:
 130              	 .cfi_def_cfa_offset 4
 131              	 .cfi_offset 7,-4
 132 0002 00AF     	 add r7,sp,#0
 133              	.LCFI7:
 134              	 .cfi_def_cfa_register 7
  67:../cleanflight/src/main/io/rcdevice_cam.c ****     return camDevice->serialPort != NULL;
 135              	 .loc 1 67 0
 136 0004 064B     	 ldr r3,.L8
 137 0006 1B68     	 ldr r3,[r3]
 138 0008 1B68     	 ldr r3,[r3]
 139 000a 002B     	 cmp r3,#0
 140 000c 14BF     	 ite ne
 141 000e 0123     	 movne r3,#1
 142 0010 0023     	 moveq r3,#0
 143 0012 DBB2     	 uxtb r3,r3
  68:../cleanflight/src/main/io/rcdevice_cam.c **** }
 144              	 .loc 1 68 0
 145 0014 1846     	 mov r0,r3
 146 0016 BD46     	 mov sp,r7
 147              	.LCFI8:
 148              	 .cfi_def_cfa_register 13
 149              	 
 150 0018 5DF8047B 	 ldr r7,[sp],#4
 151              	.LCFI9:
 152              	 .cfi_restore 7
 153              	 .cfi_def_cfa_offset 0
 154 001c 7047     	 bx lr
 155              	.L9:
 156 001e 00BF     	 .align 2
 157              	.L8:
 158 0020 00000000 	 .word camDevice
 159              	 .cfi_endproc
 160              	.LFE549:
 162              	 .section .text.rcdeviceIs5KeyEnabled,"ax",%progbits
 163              	 .align 2
 164              	 .thumb
 165              	 .thumb_func
 167              	rcdeviceIs5KeyEnabled:
 168              	.LFB550:
  69:../cleanflight/src/main/io/rcdevice_cam.c **** 
  70:../cleanflight/src/main/io/rcdevice_cam.c **** static bool rcdeviceIs5KeyEnabled(void)
  71:../cleanflight/src/main/io/rcdevice_cam.c **** {
 169              	 .loc 1 71 0
 170              	 .cfi_startproc
 171              	 
 172              	 
 173 0000 80B5     	 push {r7,lr}
 174              	.LCFI10:
 175              	 .cfi_def_cfa_offset 8
 176              	 .cfi_offset 7,-8
 177              	 .cfi_offset 14,-4
 178 0002 00AF     	 add r7,sp,#0
 179              	.LCFI11:
 180              	 .cfi_def_cfa_register 7
  72:../cleanflight/src/main/io/rcdevice_cam.c ****     if (camDevice->serialPort != NULL && isFeatureSupported(RCDEVICE_PROTOCOL_FEATURE_SIMULATE_5_KE
 181              	 .loc 1 72 0
 182 0004 074B     	 ldr r3,.L13
 183 0006 1B68     	 ldr r3,[r3]
 184 0008 1B68     	 ldr r3,[r3]
 185 000a 002B     	 cmp r3,#0
 186 000c 07D0     	 beq .L11
 187              	 .loc 1 72 0 is_stmt 0 discriminator 1
 188 000e 0820     	 movs r0,#8
 189 0010 FFF7FEFF 	 bl isFeatureSupported
 190 0014 0346     	 mov r3,r0
 191 0016 002B     	 cmp r3,#0
 192 0018 01D0     	 beq .L11
  73:../cleanflight/src/main/io/rcdevice_cam.c ****         return true;
 193              	 .loc 1 73 0 is_stmt 1
 194 001a 0123     	 movs r3,#1
 195 001c 00E0     	 b .L12
 196              	.L11:
  74:../cleanflight/src/main/io/rcdevice_cam.c ****     }
  75:../cleanflight/src/main/io/rcdevice_cam.c **** 
  76:../cleanflight/src/main/io/rcdevice_cam.c ****     return false;
 197              	 .loc 1 76 0
 198 001e 0023     	 movs r3,#0
 199              	.L12:
  77:../cleanflight/src/main/io/rcdevice_cam.c **** }
 200              	 .loc 1 77 0
 201 0020 1846     	 mov r0,r3
 202 0022 80BD     	 pop {r7,pc}
 203              	.L14:
 204              	 .align 2
 205              	.L13:
 206 0024 00000000 	 .word camDevice
 207              	 .cfi_endproc
 208              	.LFE550:
 210              	 .section .text.rcdeviceCameraControlProcess,"ax",%progbits
 211              	 .align 2
 212              	 .thumb
 213              	 .thumb_func
 215              	rcdeviceCameraControlProcess:
 216              	.LFB551:
  78:../cleanflight/src/main/io/rcdevice_cam.c **** 
  79:../cleanflight/src/main/io/rcdevice_cam.c **** static void rcdeviceCameraControlProcess(void)
  80:../cleanflight/src/main/io/rcdevice_cam.c **** {
 217              	 .loc 1 80 0
 218              	 .cfi_startproc
 219              	 
 220              	 
 221 0000 80B5     	 push {r7,lr}
 222              	.LCFI12:
 223              	 .cfi_def_cfa_offset 8
 224              	 .cfi_offset 7,-8
 225              	 .cfi_offset 14,-4
 226 0002 82B0     	 sub sp,sp,#8
 227              	.LCFI13:
 228              	 .cfi_def_cfa_offset 16
 229 0004 00AF     	 add r7,sp,#0
 230              	.LCFI14:
 231              	 .cfi_def_cfa_register 7
 232              	.LBB2:
  81:../cleanflight/src/main/io/rcdevice_cam.c ****     for (boxId_e i = BOXCAMERA1; i <= BOXCAMERA3; i++) {
 233              	 .loc 1 81 0
 234 0006 1B23     	 movs r3,#27
 235 0008 FB71     	 strb r3,[r7,#7]
 236 000a 68E0     	 b .L16
 237              	.L29:
 238              	.LBB3:
  82:../cleanflight/src/main/io/rcdevice_cam.c ****         uint8_t switchIndex = i - BOXCAMERA1;
 239              	 .loc 1 82 0
 240 000c FB79     	 ldrb r3,[r7,#7]
 241 000e 1B3B     	 subs r3,r3,#27
 242 0010 7B71     	 strb r3,[r7,#5]
  83:../cleanflight/src/main/io/rcdevice_cam.c **** 
  84:../cleanflight/src/main/io/rcdevice_cam.c ****         if (IS_RC_MODE_ACTIVE(i)) {
 243              	 .loc 1 84 0
 244 0012 FB79     	 ldrb r3,[r7,#7]
 245 0014 1846     	 mov r0,r3
 246 0016 FFF7FEFF 	 bl IS_RC_MODE_ACTIVE
 247 001a 0346     	 mov r3,r0
 248 001c 002B     	 cmp r3,#0
 249 001e 57D0     	 beq .L17
 250              	.LBB4:
  85:../cleanflight/src/main/io/rcdevice_cam.c ****             
  86:../cleanflight/src/main/io/rcdevice_cam.c ****             // check last state of this mode, if it's true, then ignore it.
  87:../cleanflight/src/main/io/rcdevice_cam.c ****             // Here is a logic to make a toggle control for this mode
  88:../cleanflight/src/main/io/rcdevice_cam.c ****             if (switchStates[switchIndex].isActivated) {
 251              	 .loc 1 88 0
 252 0020 7B79     	 ldrb r3,[r7,#5]
 253 0022 324A     	 ldr r2,.L31
 254 0024 D35C     	 ldrb r3,[r2,r3]
 255 0026 002B     	 cmp r3,#0
 256 0028 00D0     	 beq .L18
  89:../cleanflight/src/main/io/rcdevice_cam.c ****                 continue;
 257              	 .loc 1 89 0
 258 002a 55E0     	 b .L19
 259              	.L18:
  90:../cleanflight/src/main/io/rcdevice_cam.c ****             }
  91:../cleanflight/src/main/io/rcdevice_cam.c **** 
  92:../cleanflight/src/main/io/rcdevice_cam.c ****             uint8_t behavior = RCDEVICE_PROTOCOL_CAM_CTRL_UNKNOWN_CAMERA_OPERATION;
 260              	 .loc 1 92 0
 261 002c FF23     	 movs r3,#255
 262 002e BB71     	 strb r3,[r7,#6]
  93:../cleanflight/src/main/io/rcdevice_cam.c ****             switch (i) {
 263              	 .loc 1 93 0
 264 0030 FB79     	 ldrb r3,[r7,#7]
 265 0032 1C2B     	 cmp r3,#28
 266 0034 1BD0     	 beq .L21
 267 0036 1D2B     	 cmp r3,#29
 268 0038 23D0     	 beq .L22
 269 003a 1B2B     	 cmp r3,#27
 270 003c 00D0     	 beq .L23
  94:../cleanflight/src/main/io/rcdevice_cam.c ****             case BOXCAMERA1:
  95:../cleanflight/src/main/io/rcdevice_cam.c ****                 if (isFeatureSupported(RCDEVICE_PROTOCOL_FEATURE_SIMULATE_WIFI_BUTTON)) {
  96:../cleanflight/src/main/io/rcdevice_cam.c ****                     // avoid display wifi page when arming, in the next firmware(>2.0) of rcsplit w
  97:../cleanflight/src/main/io/rcdevice_cam.c ****                     // when the wifi was turn on it won't turn off the analog video output, 
  98:../cleanflight/src/main/io/rcdevice_cam.c ****                     // and just put a wifi indicator on the right top of the video output. here is 
  99:../cleanflight/src/main/io/rcdevice_cam.c ****                     if (!ARMING_FLAG(ARMED) && ((getArmingDisableFlags() & ARMING_DISABLED_RUNAWAY_
 100:../cleanflight/src/main/io/rcdevice_cam.c ****                         behavior = RCDEVICE_PROTOCOL_CAM_CTRL_SIMULATE_WIFI_BTN;
 101:../cleanflight/src/main/io/rcdevice_cam.c ****                     }
 102:../cleanflight/src/main/io/rcdevice_cam.c ****                 }
 103:../cleanflight/src/main/io/rcdevice_cam.c ****                 break;
 104:../cleanflight/src/main/io/rcdevice_cam.c ****             case BOXCAMERA2:
 105:../cleanflight/src/main/io/rcdevice_cam.c ****                 if (isFeatureSupported(RCDEVICE_PROTOCOL_FEATURE_SIMULATE_POWER_BUTTON)) {
 106:../cleanflight/src/main/io/rcdevice_cam.c ****                     behavior = RCDEVICE_PROTOCOL_CAM_CTRL_SIMULATE_POWER_BTN;        
 107:../cleanflight/src/main/io/rcdevice_cam.c ****                 }
 108:../cleanflight/src/main/io/rcdevice_cam.c ****                 break;
 109:../cleanflight/src/main/io/rcdevice_cam.c ****             case BOXCAMERA3:
 110:../cleanflight/src/main/io/rcdevice_cam.c ****                 if (isFeatureSupported(RCDEVICE_PROTOCOL_FEATURE_CHANGE_MODE)) {
 111:../cleanflight/src/main/io/rcdevice_cam.c ****                     // avoid change camera mode when arming
 112:../cleanflight/src/main/io/rcdevice_cam.c ****                     if (!ARMING_FLAG(ARMED) && ((getArmingDisableFlags() & ARMING_DISABLED_RUNAWAY_
 113:../cleanflight/src/main/io/rcdevice_cam.c ****                         behavior = RCDEVICE_PROTOCOL_CAM_CTRL_CHANGE_MODE;
 114:../cleanflight/src/main/io/rcdevice_cam.c ****                     }
 115:../cleanflight/src/main/io/rcdevice_cam.c ****                 }
 116:../cleanflight/src/main/io/rcdevice_cam.c ****                 break;
 117:../cleanflight/src/main/io/rcdevice_cam.c ****             default:
 118:../cleanflight/src/main/io/rcdevice_cam.c ****                 break;
 271              	 .loc 1 118 0
 272 003e 37E0     	 b .L25
 273              	.L23:
  95:../cleanflight/src/main/io/rcdevice_cam.c ****                     // avoid display wifi page when arming, in the next firmware(>2.0) of rcsplit w
 274              	 .loc 1 95 0
 275 0040 0220     	 movs r0,#2
 276 0042 FFF7FEFF 	 bl isFeatureSupported
 277 0046 0346     	 mov r3,r0
 278 0048 002B     	 cmp r3,#0
 279 004a 0FD0     	 beq .L24
  99:../cleanflight/src/main/io/rcdevice_cam.c ****                         behavior = RCDEVICE_PROTOCOL_CAM_CTRL_SIMULATE_WIFI_BTN;
 280              	 .loc 1 99 0
 281 004c 284B     	 ldr r3,.L31+4
 282 004e 1B78     	 ldrb r3,[r3]
 283 0050 03F00103 	 and r3,r3,#1
 284 0054 002B     	 cmp r3,#0
 285 0056 09D1     	 bne .L24
  99:../cleanflight/src/main/io/rcdevice_cam.c ****                         behavior = RCDEVICE_PROTOCOL_CAM_CTRL_SIMULATE_WIFI_BTN;
 286              	 .loc 1 99 0 is_stmt 0 discriminator 1
 287 0058 FFF7FEFF 	 bl getArmingDisableFlags
 288 005c 0346     	 mov r3,r0
 289 005e 03F02003 	 and r3,r3,#32
 290 0062 002B     	 cmp r3,#0
 291 0064 02D1     	 bne .L24
 100:../cleanflight/src/main/io/rcdevice_cam.c ****                     }
 292              	 .loc 1 100 0 is_stmt 1
 293 0066 0023     	 movs r3,#0
 294 0068 BB71     	 strb r3,[r7,#6]
 103:../cleanflight/src/main/io/rcdevice_cam.c ****             case BOXCAMERA2:
 295              	 .loc 1 103 0
 296 006a 21E0     	 b .L25
 297              	.L24:
 298 006c 20E0     	 b .L25
 299              	.L21:
 105:../cleanflight/src/main/io/rcdevice_cam.c ****                     behavior = RCDEVICE_PROTOCOL_CAM_CTRL_SIMULATE_POWER_BTN;        
 300              	 .loc 1 105 0
 301 006e 0120     	 movs r0,#1
 302 0070 FFF7FEFF 	 bl isFeatureSupported
 303 0074 0346     	 mov r3,r0
 304 0076 002B     	 cmp r3,#0
 305 0078 02D0     	 beq .L26
 106:../cleanflight/src/main/io/rcdevice_cam.c ****                 }
 306              	 .loc 1 106 0
 307 007a 0123     	 movs r3,#1
 308 007c BB71     	 strb r3,[r7,#6]
 108:../cleanflight/src/main/io/rcdevice_cam.c ****             case BOXCAMERA3:
 309              	 .loc 1 108 0
 310 007e 17E0     	 b .L25
 311              	.L26:
 312 0080 16E0     	 b .L25
 313              	.L22:
 110:../cleanflight/src/main/io/rcdevice_cam.c ****                     // avoid change camera mode when arming
 314              	 .loc 1 110 0
 315 0082 0420     	 movs r0,#4
 316 0084 FFF7FEFF 	 bl isFeatureSupported
 317 0088 0346     	 mov r3,r0
 318 008a 002B     	 cmp r3,#0
 319 008c 0FD0     	 beq .L27
 112:../cleanflight/src/main/io/rcdevice_cam.c ****                         behavior = RCDEVICE_PROTOCOL_CAM_CTRL_CHANGE_MODE;
 320              	 .loc 1 112 0
 321 008e 184B     	 ldr r3,.L31+4
 322 0090 1B78     	 ldrb r3,[r3]
 323 0092 03F00103 	 and r3,r3,#1
 324 0096 002B     	 cmp r3,#0
 325 0098 09D1     	 bne .L27
 112:../cleanflight/src/main/io/rcdevice_cam.c ****                         behavior = RCDEVICE_PROTOCOL_CAM_CTRL_CHANGE_MODE;
 326              	 .loc 1 112 0 is_stmt 0 discriminator 1
 327 009a FFF7FEFF 	 bl getArmingDisableFlags
 328 009e 0346     	 mov r3,r0
 329 00a0 03F02003 	 and r3,r3,#32
 330 00a4 002B     	 cmp r3,#0
 331 00a6 02D1     	 bne .L27
 113:../cleanflight/src/main/io/rcdevice_cam.c ****                     }
 332              	 .loc 1 113 0 is_stmt 1
 333 00a8 0223     	 movs r3,#2
 334 00aa BB71     	 strb r3,[r7,#6]
 116:../cleanflight/src/main/io/rcdevice_cam.c ****             default:
 335              	 .loc 1 116 0
 336 00ac FFE7     	 b .L30
 337              	.L27:
 338              	.L30:
 339 00ae 00BF     	 nop
 340              	.L25:
 119:../cleanflight/src/main/io/rcdevice_cam.c ****             }
 120:../cleanflight/src/main/io/rcdevice_cam.c ****             if (behavior != RCDEVICE_PROTOCOL_CAM_CTRL_UNKNOWN_CAMERA_OPERATION) {
 341              	 .loc 1 120 0
 342 00b0 BB79     	 ldrb r3,[r7,#6]
 343 00b2 FF2B     	 cmp r3,#255
 344 00b4 0BD0     	 beq .L28
 121:../cleanflight/src/main/io/rcdevice_cam.c ****                 runcamDeviceSimulateCameraButton(camDevice, behavior);
 345              	 .loc 1 121 0
 346 00b6 0F4B     	 ldr r3,.L31+8
 347 00b8 1A68     	 ldr r2,[r3]
 348 00ba BB79     	 ldrb r3,[r7,#6]
 349 00bc 1046     	 mov r0,r2
 350 00be 1946     	 mov r1,r3
 351 00c0 FFF7FEFF 	 bl runcamDeviceSimulateCameraButton
 122:../cleanflight/src/main/io/rcdevice_cam.c ****                 switchStates[switchIndex].isActivated = true;
 352              	 .loc 1 122 0
 353 00c4 7B79     	 ldrb r3,[r7,#5]
 354 00c6 094A     	 ldr r2,.L31
 355 00c8 0121     	 movs r1,#1
 356 00ca D154     	 strb r1,[r2,r3]
 357              	.LBE4:
 358 00cc 04E0     	 b .L19
 359              	.L28:
 360 00ce 03E0     	 b .L19
 361              	.L17:
 123:../cleanflight/src/main/io/rcdevice_cam.c ****             }
 124:../cleanflight/src/main/io/rcdevice_cam.c ****         } else {
 125:../cleanflight/src/main/io/rcdevice_cam.c ****             switchStates[switchIndex].isActivated = false;
 362              	 .loc 1 125 0
 363 00d0 7B79     	 ldrb r3,[r7,#5]
 364 00d2 064A     	 ldr r2,.L31
 365 00d4 0021     	 movs r1,#0
 366 00d6 D154     	 strb r1,[r2,r3]
 367              	.L19:
 368              	.LBE3:
  81:../cleanflight/src/main/io/rcdevice_cam.c ****         uint8_t switchIndex = i - BOXCAMERA1;
 369              	 .loc 1 81 0 discriminator 2
 370 00d8 FB79     	 ldrb r3,[r7,#7]
 371 00da 0133     	 adds r3,r3,#1
 372 00dc FB71     	 strb r3,[r7,#7]
 373              	.L16:
  81:../cleanflight/src/main/io/rcdevice_cam.c ****         uint8_t switchIndex = i - BOXCAMERA1;
 374              	 .loc 1 81 0 is_stmt 0 discriminator 1
 375 00de FB79     	 ldrb r3,[r7,#7]
 376 00e0 1D2B     	 cmp r3,#29
 377 00e2 93D9     	 bls .L29
 378              	.LBE2:
 126:../cleanflight/src/main/io/rcdevice_cam.c ****         }
 127:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 128:../cleanflight/src/main/io/rcdevice_cam.c **** }
 379              	 .loc 1 128 0 is_stmt 1
 380 00e4 0837     	 adds r7,r7,#8
 381              	.LCFI15:
 382              	 .cfi_def_cfa_offset 8
 383 00e6 BD46     	 mov sp,r7
 384              	.LCFI16:
 385              	 .cfi_def_cfa_register 13
 386              	 
 387 00e8 80BD     	 pop {r7,pc}
 388              	.L32:
 389 00ea 00BF     	 .align 2
 390              	.L31:
 391 00ec 00000000 	 .word switchStates
 392 00f0 00000000 	 .word armingFlags
 393 00f4 00000000 	 .word camDevice
 394              	 .cfi_endproc
 395              	.LFE551:
 397              	 .section .text.rcdeviceSimulationOSDCableFailed,"ax",%progbits
 398              	 .align 2
 399              	 .thumb
 400              	 .thumb_func
 402              	rcdeviceSimulationOSDCableFailed:
 403              	.LFB552:
 129:../cleanflight/src/main/io/rcdevice_cam.c **** 
 130:../cleanflight/src/main/io/rcdevice_cam.c **** static void rcdeviceSimulationOSDCableFailed(rcdeviceResponseParseContext_t *ctx)
 131:../cleanflight/src/main/io/rcdevice_cam.c **** {
 404              	 .loc 1 131 0
 405              	 .cfi_startproc
 406              	 
 407              	 
 408              	 
 409 0000 80B4     	 push {r7}
 410              	.LCFI17:
 411              	 .cfi_def_cfa_offset 4
 412              	 .cfi_offset 7,-4
 413 0002 85B0     	 sub sp,sp,#20
 414              	.LCFI18:
 415              	 .cfi_def_cfa_offset 24
 416 0004 00AF     	 add r7,sp,#0
 417              	.LCFI19:
 418              	 .cfi_def_cfa_register 7
 419 0006 7860     	 str r0,[r7,#4]
 132:../cleanflight/src/main/io/rcdevice_cam.c ****     if (ctx->command == RCDEVICE_PROTOCOL_COMMAND_5KEY_CONNECTION) {
 420              	 .loc 1 132 0
 421 0008 7B68     	 ldr r3,[r7,#4]
 422 000a 1B78     	 ldrb r3,[r3]
 423 000c 042B     	 cmp r3,#4
 424 000e 0AD1     	 bne .L34
 425              	.LBB5:
 133:../cleanflight/src/main/io/rcdevice_cam.c ****         uint8_t operationID = ctx->paramData[0];
 426              	 .loc 1 133 0
 427 0010 7B68     	 ldr r3,[r7,#4]
 428 0012 DB7D     	 ldrb r3,[r3,#23]
 429 0014 FB73     	 strb r3,[r7,#15]
 134:../cleanflight/src/main/io/rcdevice_cam.c ****         if (operationID == RCDEVICE_PROTOCOL_5KEY_CONNECTION_CLOSE) {
 430              	 .loc 1 134 0
 431 0016 FB7B     	 ldrb r3,[r7,#15]
 432 0018 022B     	 cmp r3,#2
 433 001a 03D1     	 bne .L35
 135:../cleanflight/src/main/io/rcdevice_cam.c ****             waitingDeviceResponse = false;
 434              	 .loc 1 135 0
 435 001c 074B     	 ldr r3,.L37
 436 001e 0022     	 movs r2,#0
 437 0020 1A70     	 strb r2,[r3]
 136:../cleanflight/src/main/io/rcdevice_cam.c ****             return;
 438              	 .loc 1 136 0
 439 0022 06E0     	 b .L33
 440              	.L35:
 441              	.LBE5:
 442 0024 05E0     	 b .L33
 443              	.L34:
 137:../cleanflight/src/main/io/rcdevice_cam.c ****         }
 138:../cleanflight/src/main/io/rcdevice_cam.c ****     } else {
 139:../cleanflight/src/main/io/rcdevice_cam.c ****         rcdeviceInMenu = false;
 444              	 .loc 1 139 0
 445 0026 064B     	 ldr r3,.L37+4
 446 0028 0022     	 movs r2,#0
 447 002a 1A70     	 strb r2,[r3]
 140:../cleanflight/src/main/io/rcdevice_cam.c ****         waitingDeviceResponse = false;
 448              	 .loc 1 140 0
 449 002c 034B     	 ldr r3,.L37
 450 002e 0022     	 movs r2,#0
 451 0030 1A70     	 strb r2,[r3]
 452              	.L33:
 141:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 142:../cleanflight/src/main/io/rcdevice_cam.c **** }
 453              	 .loc 1 142 0
 454 0032 1437     	 adds r7,r7,#20
 455              	.LCFI20:
 456              	 .cfi_def_cfa_offset 4
 457 0034 BD46     	 mov sp,r7
 458              	.LCFI21:
 459              	 .cfi_def_cfa_register 13
 460              	 
 461 0036 5DF8047B 	 ldr r7,[sp],#4
 462              	.LCFI22:
 463              	 .cfi_restore 7
 464              	 .cfi_def_cfa_offset 0
 465 003a 7047     	 bx lr
 466              	.L38:
 467              	 .align 2
 468              	.L37:
 469 003c 00000000 	 .word waitingDeviceResponse
 470 0040 00000000 	 .word rcdeviceInMenu
 471              	 .cfi_endproc
 472              	.LFE552:
 474              	 .section .text.rcdeviceSimulationRespHandle,"ax",%progbits
 475              	 .align 2
 476              	 .thumb
 477              	 .thumb_func
 479              	rcdeviceSimulationRespHandle:
 480              	.LFB553:
 143:../cleanflight/src/main/io/rcdevice_cam.c **** 
 144:../cleanflight/src/main/io/rcdevice_cam.c **** static void rcdeviceSimulationRespHandle(rcdeviceResponseParseContext_t *ctx)
 145:../cleanflight/src/main/io/rcdevice_cam.c **** {
 481              	 .loc 1 145 0
 482              	 .cfi_startproc
 483              	 
 484              	 
 485 0000 80B5     	 push {r7,lr}
 486              	.LCFI23:
 487              	 .cfi_def_cfa_offset 8
 488              	 .cfi_offset 7,-8
 489              	 .cfi_offset 14,-4
 490 0002 84B0     	 sub sp,sp,#16
 491              	.LCFI24:
 492              	 .cfi_def_cfa_offset 24
 493 0004 00AF     	 add r7,sp,#0
 494              	.LCFI25:
 495              	 .cfi_def_cfa_register 7
 496 0006 7860     	 str r0,[r7,#4]
 146:../cleanflight/src/main/io/rcdevice_cam.c ****     if (ctx->result != RCDEVICE_RESP_SUCCESS) {
 497              	 .loc 1 146 0
 498 0008 7B68     	 ldr r3,[r7,#4]
 499 000a 93F85F30 	 ldrb r3,[r3,#95]
 500 000e 002B     	 cmp r3,#0
 501 0010 03D0     	 beq .L40
 147:../cleanflight/src/main/io/rcdevice_cam.c ****         rcdeviceSimulationOSDCableFailed(ctx);
 502              	 .loc 1 147 0
 503 0012 7868     	 ldr r0,[r7,#4]
 504 0014 FFF7FEFF 	 bl rcdeviceSimulationOSDCableFailed
 148:../cleanflight/src/main/io/rcdevice_cam.c ****         return;
 505              	 .loc 1 148 0
 506 0018 47E0     	 b .L39
 507              	.L40:
 149:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 150:../cleanflight/src/main/io/rcdevice_cam.c **** 
 151:../cleanflight/src/main/io/rcdevice_cam.c ****     switch (ctx->command) {
 508              	 .loc 1 151 0
 509 001a 7B68     	 ldr r3,[r7,#4]
 510 001c 1B78     	 ldrb r3,[r3]
 511 001e 032B     	 cmp r3,#3
 512 0020 04D0     	 beq .L43
 513 0022 042B     	 cmp r3,#4
 514 0024 06D0     	 beq .L44
 515 0026 022B     	 cmp r3,#2
 516 0028 38D0     	 beq .L45
 517 002a 3BE0     	 b .L42
 518              	.L43:
 152:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_PROTOCOL_COMMAND_5KEY_SIMULATION_RELEASE:
 153:../cleanflight/src/main/io/rcdevice_cam.c ****         isButtonPressed = false;
 519              	 .loc 1 153 0
 520 002c 204B     	 ldr r3,.L50
 521 002e 0022     	 movs r2,#0
 522 0030 1A70     	 strb r2,[r3]
 154:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 523              	 .loc 1 154 0
 524 0032 37E0     	 b .L42
 525              	.L44:
 526              	.LBB6:
 155:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_PROTOCOL_COMMAND_5KEY_CONNECTION:
 156:../cleanflight/src/main/io/rcdevice_cam.c ****     {
 157:../cleanflight/src/main/io/rcdevice_cam.c ****         // the high 4 bits is the operationID that we sent
 158:../cleanflight/src/main/io/rcdevice_cam.c ****         // the low 4 bits is the result code
 159:../cleanflight/src/main/io/rcdevice_cam.c ****         isButtonPressed = true;
 527              	 .loc 1 159 0
 528 0034 1E4B     	 ldr r3,.L50
 529 0036 0122     	 movs r2,#1
 530 0038 1A70     	 strb r2,[r3]
 160:../cleanflight/src/main/io/rcdevice_cam.c ****         uint8_t operationID = ctx->paramData[0];
 531              	 .loc 1 160 0
 532 003a 7B68     	 ldr r3,[r7,#4]
 533 003c DB7D     	 ldrb r3,[r3,#23]
 534 003e FB73     	 strb r3,[r7,#15]
 161:../cleanflight/src/main/io/rcdevice_cam.c ****         bool errorCode = (ctx->recvBuf[1] & 0x0F);
 535              	 .loc 1 161 0
 536 0040 7B68     	 ldr r3,[r7,#4]
 537 0042 D3F80330 	 ldr r3,[r3,#3]
 538 0046 0133     	 adds r3,r3,#1
 539 0048 1B78     	 ldrb r3,[r3]
 540 004a 03F00F03 	 and r3,r3,#15
 541 004e 002B     	 cmp r3,#0
 542 0050 14BF     	 ite ne
 543 0052 0123     	 movne r3,#1
 544 0054 0023     	 moveq r3,#0
 545 0056 BB73     	 strb r3,[r7,#14]
 162:../cleanflight/src/main/io/rcdevice_cam.c ****         if (operationID == RCDEVICE_PROTOCOL_5KEY_CONNECTION_OPEN) {
 546              	 .loc 1 162 0
 547 0058 FB7B     	 ldrb r3,[r7,#15]
 548 005a 012B     	 cmp r3,#1
 549 005c 10D1     	 bne .L46
 163:../cleanflight/src/main/io/rcdevice_cam.c ****             if (errorCode == 1) {
 550              	 .loc 1 163 0
 551 005e BB7B     	 ldrb r3,[r7,#14]
 552 0060 002B     	 cmp r3,#0
 553 0062 06D0     	 beq .L47
 164:../cleanflight/src/main/io/rcdevice_cam.c ****                 rcdeviceInMenu = true;
 554              	 .loc 1 164 0
 555 0064 134B     	 ldr r3,.L50+4
 556 0066 0122     	 movs r2,#1
 557 0068 1A70     	 strb r2,[r3]
 165:../cleanflight/src/main/io/rcdevice_cam.c ****                 beeper(BEEPER_CAM_CONNECTION_OPEN);
 558              	 .loc 1 165 0
 559 006a 1520     	 movs r0,#21
 560 006c FFF7FEFF 	 bl beeper
 561 0070 13E0     	 b .L49
 562              	.L47:
 166:../cleanflight/src/main/io/rcdevice_cam.c ****             } else {
 167:../cleanflight/src/main/io/rcdevice_cam.c ****                 rcdeviceInMenu = false;
 563              	 .loc 1 167 0
 564 0072 104B     	 ldr r3,.L50+4
 565 0074 0022     	 movs r2,#0
 566 0076 1A70     	 strb r2,[r3]
 168:../cleanflight/src/main/io/rcdevice_cam.c ****                 beeper(BEEPER_CAM_CONNECTION_CLOSE);
 567              	 .loc 1 168 0
 568 0078 1620     	 movs r0,#22
 569 007a FFF7FEFF 	 bl beeper
 570              	.LBE6:
 169:../cleanflight/src/main/io/rcdevice_cam.c ****             }
 170:../cleanflight/src/main/io/rcdevice_cam.c ****         } else if (operationID == RCDEVICE_PROTOCOL_5KEY_CONNECTION_CLOSE) {
 171:../cleanflight/src/main/io/rcdevice_cam.c ****             if (errorCode == 1) {
 172:../cleanflight/src/main/io/rcdevice_cam.c ****                 rcdeviceInMenu = false;
 173:../cleanflight/src/main/io/rcdevice_cam.c ****                 beeper(BEEPER_CAM_CONNECTION_CLOSE);
 174:../cleanflight/src/main/io/rcdevice_cam.c ****             }
 175:../cleanflight/src/main/io/rcdevice_cam.c ****         }
 176:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 177:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 571              	 .loc 1 177 0
 572 007e 11E0     	 b .L42
 573              	.L46:
 574              	.LBB7:
 170:../cleanflight/src/main/io/rcdevice_cam.c ****             if (errorCode == 1) {
 575              	 .loc 1 170 0
 576 0080 FB7B     	 ldrb r3,[r7,#15]
 577 0082 022B     	 cmp r3,#2
 578 0084 09D1     	 bne .L49
 171:../cleanflight/src/main/io/rcdevice_cam.c ****                 rcdeviceInMenu = false;
 579              	 .loc 1 171 0
 580 0086 BB7B     	 ldrb r3,[r7,#14]
 581 0088 002B     	 cmp r3,#0
 582 008a 06D0     	 beq .L49
 172:../cleanflight/src/main/io/rcdevice_cam.c ****                 beeper(BEEPER_CAM_CONNECTION_CLOSE);
 583              	 .loc 1 172 0
 584 008c 094B     	 ldr r3,.L50+4
 585 008e 0022     	 movs r2,#0
 586 0090 1A70     	 strb r2,[r3]
 173:../cleanflight/src/main/io/rcdevice_cam.c ****             }
 587              	 .loc 1 173 0
 588 0092 1620     	 movs r0,#22
 589 0094 FFF7FEFF 	 bl beeper
 590              	.LBE7:
 591              	 .loc 1 177 0
 592 0098 04E0     	 b .L42
 593              	.L49:
 594              	 .loc 1 177 0 is_stmt 0 discriminator 1
 595 009a 03E0     	 b .L42
 596              	.L45:
 178:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_PROTOCOL_COMMAND_5KEY_SIMULATION_PRESS:
 179:../cleanflight/src/main/io/rcdevice_cam.c ****         isButtonPressed = true;
 597              	 .loc 1 179 0 is_stmt 1
 598 009c 044B     	 ldr r3,.L50
 599 009e 0122     	 movs r2,#1
 600 00a0 1A70     	 strb r2,[r3]
 180:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 601              	 .loc 1 180 0
 602 00a2 00BF     	 nop
 603              	.L42:
 181:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 182:../cleanflight/src/main/io/rcdevice_cam.c **** 
 183:../cleanflight/src/main/io/rcdevice_cam.c ****     waitingDeviceResponse = false;
 604              	 .loc 1 183 0
 605 00a4 044B     	 ldr r3,.L50+8
 606 00a6 0022     	 movs r2,#0
 607 00a8 1A70     	 strb r2,[r3]
 608              	.L39:
 184:../cleanflight/src/main/io/rcdevice_cam.c **** }
 609              	 .loc 1 184 0
 610 00aa 1037     	 adds r7,r7,#16
 611              	.LCFI26:
 612              	 .cfi_def_cfa_offset 8
 613 00ac BD46     	 mov sp,r7
 614              	.LCFI27:
 615              	 .cfi_def_cfa_register 13
 616              	 
 617 00ae 80BD     	 pop {r7,pc}
 618              	.L51:
 619              	 .align 2
 620              	.L50:
 621 00b0 00000000 	 .word isButtonPressed
 622 00b4 00000000 	 .word rcdeviceInMenu
 623 00b8 00000000 	 .word waitingDeviceResponse
 624              	 .cfi_endproc
 625              	.LFE553:
 627              	 .section .text.rcdeviceCamSimulate5KeyCablePress,"ax",%progbits
 628              	 .align 2
 629              	 .thumb
 630              	 .thumb_func
 632              	rcdeviceCamSimulate5KeyCablePress:
 633              	.LFB554:
 185:../cleanflight/src/main/io/rcdevice_cam.c **** 
 186:../cleanflight/src/main/io/rcdevice_cam.c **** static void rcdeviceCamSimulate5KeyCablePress(rcdeviceCamSimulationKeyEvent_e key)
 187:../cleanflight/src/main/io/rcdevice_cam.c **** {
 634              	 .loc 1 187 0
 635              	 .cfi_startproc
 636              	 
 637              	 
 638 0000 80B5     	 push {r7,lr}
 639              	.LCFI28:
 640              	 .cfi_def_cfa_offset 8
 641              	 .cfi_offset 7,-8
 642              	 .cfi_offset 14,-4
 643 0002 84B0     	 sub sp,sp,#16
 644              	.LCFI29:
 645              	 .cfi_def_cfa_offset 24
 646 0004 00AF     	 add r7,sp,#0
 647              	.LCFI30:
 648              	 .cfi_def_cfa_register 7
 649 0006 0346     	 mov r3,r0
 650 0008 FB71     	 strb r3,[r7,#7]
 188:../cleanflight/src/main/io/rcdevice_cam.c ****     uint8_t operation = RCDEVICE_PROTOCOL_5KEY_SIMULATION_NONE;
 651              	 .loc 1 188 0
 652 000a 0023     	 movs r3,#0
 653 000c FB73     	 strb r3,[r7,#15]
 189:../cleanflight/src/main/io/rcdevice_cam.c ****     switch (key) {
 654              	 .loc 1 189 0
 655 000e FB79     	 ldrb r3,[r7,#7]
 656 0010 013B     	 subs r3,r3,#1
 657 0012 042B     	 cmp r3,#4
 658 0014 1BD8     	 bhi .L53
 659 0016 01A2     	 adr r2,.L55
 660 0018 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 661              	 .p2align 2
 662              	.L55:
 663 001c 49000000 	 .word .L54+1
 664 0020 31000000 	 .word .L56+1
 665 0024 37000000 	 .word .L57+1
 666 0028 3D000000 	 .word .L58+1
 667 002c 43000000 	 .word .L59+1
 668              	 .p2align 1
 669              	.L56:
 190:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_LEFT:
 191:../cleanflight/src/main/io/rcdevice_cam.c ****         operation = RCDEVICE_PROTOCOL_5KEY_SIMULATION_LEFT;
 670              	 .loc 1 191 0
 671 0030 0223     	 movs r3,#2
 672 0032 FB73     	 strb r3,[r7,#15]
 192:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 673              	 .loc 1 192 0
 674 0034 0EE0     	 b .L60
 675              	.L57:
 193:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_UP:
 194:../cleanflight/src/main/io/rcdevice_cam.c ****         operation = RCDEVICE_PROTOCOL_5KEY_SIMULATION_UP;
 676              	 .loc 1 194 0
 677 0036 0423     	 movs r3,#4
 678 0038 FB73     	 strb r3,[r7,#15]
 195:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 679              	 .loc 1 195 0
 680 003a 0BE0     	 b .L60
 681              	.L58:
 196:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_RIGHT:
 197:../cleanflight/src/main/io/rcdevice_cam.c ****         operation = RCDEVICE_PROTOCOL_5KEY_SIMULATION_RIGHT;
 682              	 .loc 1 197 0
 683 003c 0323     	 movs r3,#3
 684 003e FB73     	 strb r3,[r7,#15]
 198:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 685              	 .loc 1 198 0
 686 0040 08E0     	 b .L60
 687              	.L59:
 199:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_DOWN:
 200:../cleanflight/src/main/io/rcdevice_cam.c ****         operation = RCDEVICE_PROTOCOL_5KEY_SIMULATION_DOWN;
 688              	 .loc 1 200 0
 689 0042 0523     	 movs r3,#5
 690 0044 FB73     	 strb r3,[r7,#15]
 201:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 691              	 .loc 1 201 0
 692 0046 05E0     	 b .L60
 693              	.L54:
 202:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_ENTER:
 203:../cleanflight/src/main/io/rcdevice_cam.c ****         operation = RCDEVICE_PROTOCOL_5KEY_SIMULATION_SET;
 694              	 .loc 1 203 0
 695 0048 0123     	 movs r3,#1
 696 004a FB73     	 strb r3,[r7,#15]
 204:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 697              	 .loc 1 204 0
 698 004c 02E0     	 b .L60
 699              	.L53:
 205:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_NONE:
 206:../cleanflight/src/main/io/rcdevice_cam.c ****     default:
 207:../cleanflight/src/main/io/rcdevice_cam.c ****         operation = RCDEVICE_PROTOCOL_5KEY_SIMULATION_NONE;
 700              	 .loc 1 207 0
 701 004e 0023     	 movs r3,#0
 702 0050 FB73     	 strb r3,[r7,#15]
 208:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 703              	 .loc 1 208 0
 704 0052 00BF     	 nop
 705              	.L60:
 209:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 210:../cleanflight/src/main/io/rcdevice_cam.c **** 
 211:../cleanflight/src/main/io/rcdevice_cam.c ****     runcamDeviceSimulate5KeyOSDCableButtonPress(camDevice, operation, rcdeviceSimulationRespHandle)
 706              	 .loc 1 211 0
 707 0054 054B     	 ldr r3,.L61
 708 0056 1A68     	 ldr r2,[r3]
 709 0058 FB7B     	 ldrb r3,[r7,#15]
 710 005a 1046     	 mov r0,r2
 711 005c 1946     	 mov r1,r3
 712 005e 044A     	 ldr r2,.L61+4
 713 0060 FFF7FEFF 	 bl runcamDeviceSimulate5KeyOSDCableButtonPress
 212:../cleanflight/src/main/io/rcdevice_cam.c **** }
 714              	 .loc 1 212 0
 715 0064 1037     	 adds r7,r7,#16
 716              	.LCFI31:
 717              	 .cfi_def_cfa_offset 8
 718 0066 BD46     	 mov sp,r7
 719              	.LCFI32:
 720              	 .cfi_def_cfa_register 13
 721              	 
 722 0068 80BD     	 pop {r7,pc}
 723              	.L62:
 724 006a 00BF     	 .align 2
 725              	.L61:
 726 006c 00000000 	 .word camDevice
 727 0070 00000000 	 .word rcdeviceSimulationRespHandle
 728              	 .cfi_endproc
 729              	.LFE554:
 731              	 .section .text.rcdeviceSend5KeyOSDCableSimualtionEvent,"ax",%progbits
 732              	 .align 2
 733              	 .global rcdeviceSend5KeyOSDCableSimualtionEvent
 734              	 .thumb
 735              	 .thumb_func
 737              	rcdeviceSend5KeyOSDCableSimualtionEvent:
 738              	.LFB555:
 213:../cleanflight/src/main/io/rcdevice_cam.c **** 
 214:../cleanflight/src/main/io/rcdevice_cam.c **** void rcdeviceSend5KeyOSDCableSimualtionEvent(rcdeviceCamSimulationKeyEvent_e key)
 215:../cleanflight/src/main/io/rcdevice_cam.c **** {
 739              	 .loc 1 215 0
 740              	 .cfi_startproc
 741              	 
 742              	 
 743 0000 80B5     	 push {r7,lr}
 744              	.LCFI33:
 745              	 .cfi_def_cfa_offset 8
 746              	 .cfi_offset 7,-8
 747              	 .cfi_offset 14,-4
 748 0002 82B0     	 sub sp,sp,#8
 749              	.LCFI34:
 750              	 .cfi_def_cfa_offset 16
 751 0004 00AF     	 add r7,sp,#0
 752              	.LCFI35:
 753              	 .cfi_def_cfa_register 7
 754 0006 0346     	 mov r3,r0
 755 0008 FB71     	 strb r3,[r7,#7]
 216:../cleanflight/src/main/io/rcdevice_cam.c ****     switch (key) {
 756              	 .loc 1 216 0
 757 000a FB79     	 ldrb r3,[r7,#7]
 758 000c 013B     	 subs r3,r3,#1
 759 000e 072B     	 cmp r3,#7
 760 0010 2CD8     	 bhi .L71
 761 0012 01A2     	 adr r2,.L66
 762 0014 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 763              	 .p2align 2
 764              	.L66:
 765 0018 55000000 	 .word .L65+1
 766 001c 55000000 	 .word .L65+1
 767 0020 55000000 	 .word .L65+1
 768 0024 55000000 	 .word .L65+1
 769 0028 55000000 	 .word .L65+1
 770 002c 47000000 	 .word .L67+1
 771 0030 39000000 	 .word .L68+1
 772 0034 5F000000 	 .word .L69+1
 773              	 .p2align 1
 774              	.L68:
 217:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_CONNECTION_OPEN:
 218:../cleanflight/src/main/io/rcdevice_cam.c ****         runcamDeviceOpen5KeyOSDCableConnection(camDevice, rcdeviceSimulationRespHandle);
 775              	 .loc 1 218 0
 776 0038 0E4B     	 ldr r3,.L72
 777 003a 1B68     	 ldr r3,[r3]
 778 003c 1846     	 mov r0,r3
 779 003e 0E49     	 ldr r1,.L72+4
 780 0040 FFF7FEFF 	 bl runcamDeviceOpen5KeyOSDCableConnection
 219:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 781              	 .loc 1 219 0
 782 0044 13E0     	 b .L63
 783              	.L67:
 220:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_CONNECTION_CLOSE:
 221:../cleanflight/src/main/io/rcdevice_cam.c ****         runcamDeviceClose5KeyOSDCableConnection(camDevice, rcdeviceSimulationRespHandle);
 784              	 .loc 1 221 0
 785 0046 0B4B     	 ldr r3,.L72
 786 0048 1B68     	 ldr r3,[r3]
 787 004a 1846     	 mov r0,r3
 788 004c 0A49     	 ldr r1,.L72+4
 789 004e FFF7FEFF 	 bl runcamDeviceClose5KeyOSDCableConnection
 222:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 790              	 .loc 1 222 0
 791 0052 0CE0     	 b .L63
 792              	.L65:
 223:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_ENTER:
 224:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_LEFT:
 225:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_UP:
 226:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_RIGHT:
 227:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_DOWN:
 228:../cleanflight/src/main/io/rcdevice_cam.c ****         rcdeviceCamSimulate5KeyCablePress(key);
 793              	 .loc 1 228 0
 794 0054 FB79     	 ldrb r3,[r7,#7]
 795 0056 1846     	 mov r0,r3
 796 0058 FFF7FEFF 	 bl rcdeviceCamSimulate5KeyCablePress
 229:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 797              	 .loc 1 229 0
 798 005c 07E0     	 b .L63
 799              	.L69:
 230:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_RELEASE:
 231:../cleanflight/src/main/io/rcdevice_cam.c ****         runcamDeviceSimulate5KeyOSDCableButtonRelease(camDevice, rcdeviceSimulationRespHandle);
 800              	 .loc 1 231 0
 801 005e 054B     	 ldr r3,.L72
 802 0060 1B68     	 ldr r3,[r3]
 803 0062 1846     	 mov r0,r3
 804 0064 0449     	 ldr r1,.L72+4
 805 0066 FFF7FEFF 	 bl runcamDeviceSimulate5KeyOSDCableButtonRelease
 232:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 806              	 .loc 1 232 0
 807 006a 00E0     	 b .L63
 808              	.L71:
 233:../cleanflight/src/main/io/rcdevice_cam.c ****     case RCDEVICE_CAM_KEY_NONE:
 234:../cleanflight/src/main/io/rcdevice_cam.c ****     default:
 235:../cleanflight/src/main/io/rcdevice_cam.c ****         break;
 809              	 .loc 1 235 0
 810 006c 00BF     	 nop
 811              	.L63:
 236:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 237:../cleanflight/src/main/io/rcdevice_cam.c **** }
 812              	 .loc 1 237 0
 813 006e 0837     	 adds r7,r7,#8
 814              	.LCFI36:
 815              	 .cfi_def_cfa_offset 8
 816 0070 BD46     	 mov sp,r7
 817              	.LCFI37:
 818              	 .cfi_def_cfa_register 13
 819              	 
 820 0072 80BD     	 pop {r7,pc}
 821              	.L73:
 822              	 .align 2
 823              	.L72:
 824 0074 00000000 	 .word camDevice
 825 0078 00000000 	 .word rcdeviceSimulationRespHandle
 826              	 .cfi_endproc
 827              	.LFE555:
 829              	 .section .text.rcdevice5KeySimulationProcess,"ax",%progbits
 830              	 .align 2
 831              	 .thumb
 832              	 .thumb_func
 834              	rcdevice5KeySimulationProcess:
 835              	.LFB556:
 238:../cleanflight/src/main/io/rcdevice_cam.c **** 
 239:../cleanflight/src/main/io/rcdevice_cam.c **** static void rcdevice5KeySimulationProcess(timeUs_t currentTimeUs)
 240:../cleanflight/src/main/io/rcdevice_cam.c **** {
 836              	 .loc 1 240 0
 837              	 .cfi_startproc
 838              	 
 839              	 
 840 0000 80B5     	 push {r7,lr}
 841              	.LCFI38:
 842              	 .cfi_def_cfa_offset 8
 843              	 .cfi_offset 7,-8
 844              	 .cfi_offset 14,-4
 845 0002 84B0     	 sub sp,sp,#16
 846              	.LCFI39:
 847              	 .cfi_def_cfa_offset 24
 848 0004 00AF     	 add r7,sp,#0
 849              	.LCFI40:
 850              	 .cfi_def_cfa_register 7
 851 0006 7860     	 str r0,[r7,#4]
 241:../cleanflight/src/main/io/rcdevice_cam.c ****     UNUSED(currentTimeUs);
 242:../cleanflight/src/main/io/rcdevice_cam.c **** 
 243:../cleanflight/src/main/io/rcdevice_cam.c **** #ifdef USE_CMS
 244:../cleanflight/src/main/io/rcdevice_cam.c ****     if (cmsInMenu) {
 852              	 .loc 1 244 0
 853 0008 984B     	 ldr r3,.L91
 854 000a 1B78     	 ldrb r3,[r3]
 855 000c 002B     	 cmp r3,#0
 856 000e 00D0     	 beq .L75
 245:../cleanflight/src/main/io/rcdevice_cam.c ****         return;
 857              	 .loc 1 245 0
 858 0010 29E1     	 b .L74
 859              	.L75:
 246:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 247:../cleanflight/src/main/io/rcdevice_cam.c **** #endif
 248:../cleanflight/src/main/io/rcdevice_cam.c **** 
 249:../cleanflight/src/main/io/rcdevice_cam.c ****     if (ARMING_FLAG(ARMED) || getArmingDisableFlags() & ARMING_DISABLED_RUNAWAY_TAKEOFF) {
 860              	 .loc 1 249 0
 861 0012 974B     	 ldr r3,.L91+4
 862 0014 1B78     	 ldrb r3,[r3]
 863 0016 03F00103 	 and r3,r3,#1
 864 001a 002B     	 cmp r3,#0
 865 001c 06D1     	 bne .L77
 866              	 .loc 1 249 0 is_stmt 0 discriminator 1
 867 001e FFF7FEFF 	 bl getArmingDisableFlags
 868 0022 0346     	 mov r3,r0
 869 0024 03F02003 	 and r3,r3,#32
 870 0028 002B     	 cmp r3,#0
 871 002a 00D0     	 beq .L78
 872              	.L77:
 250:../cleanflight/src/main/io/rcdevice_cam.c ****         return;
 873              	 .loc 1 250 0 is_stmt 1 discriminator 2
 874 002c 1BE1     	 b .L74
 875              	.L78:
 251:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 252:../cleanflight/src/main/io/rcdevice_cam.c **** 
 253:../cleanflight/src/main/io/rcdevice_cam.c ****     if (waitingDeviceResponse) {
 876              	 .loc 1 253 0
 877 002e 914B     	 ldr r3,.L91+8
 878 0030 1B78     	 ldrb r3,[r3]
 879 0032 002B     	 cmp r3,#0
 880 0034 00D0     	 beq .L79
 254:../cleanflight/src/main/io/rcdevice_cam.c ****         return;
 881              	 .loc 1 254 0 discriminator 3
 882 0036 16E1     	 b .L74
 883              	.L79:
 255:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 256:../cleanflight/src/main/io/rcdevice_cam.c **** 
 257:../cleanflight/src/main/io/rcdevice_cam.c ****     if (isButtonPressed) {
 884              	 .loc 1 257 0
 885 0038 8F4B     	 ldr r3,.L91+12
 886 003a 1B78     	 ldrb r3,[r3]
 887 003c 002B     	 cmp r3,#0
 888 003e 3CD0     	 beq .L80
 258:../cleanflight/src/main/io/rcdevice_cam.c ****         if (IS_MID(YAW) && IS_MID(PITCH) && IS_MID(ROLL)) {
 889              	 .loc 1 258 0
 890 0040 8E4B     	 ldr r3,.L91+16
 891 0042 9B88     	 ldrh r3,[r3,#4]
 892 0044 1BB2     	 sxth r3,r3
 893 0046 40F24652 	 movw r2,#1350
 894 004a 9342     	 cmp r3,r2
 895 004c 40F30B81 	 ble .L74
 896              	 .loc 1 258 0 is_stmt 0 discriminator 1
 897 0050 8A4B     	 ldr r3,.L91+16
 898 0052 9B88     	 ldrh r3,[r3,#4]
 899 0054 1BB2     	 sxth r3,r3
 900 0056 40F27162 	 movw r2,#1649
 901 005a 9342     	 cmp r3,r2
 902 005c 00F30381 	 bgt .L74
 903              	 .loc 1 258 0 discriminator 2
 904 0060 864B     	 ldr r3,.L91+16
 905 0062 5B88     	 ldrh r3,[r3,#2]
 906 0064 1BB2     	 sxth r3,r3
 907 0066 40F24652 	 movw r2,#1350
 908 006a 9342     	 cmp r3,r2
 909 006c 40F3FB80 	 ble .L74
 910              	 .loc 1 258 0 discriminator 3
 911 0070 824B     	 ldr r3,.L91+16
 912 0072 5B88     	 ldrh r3,[r3,#2]
 913 0074 1BB2     	 sxth r3,r3
 914 0076 40F27162 	 movw r2,#1649
 915 007a 9342     	 cmp r3,r2
 916 007c 00F3F380 	 bgt .L74
 917              	 .loc 1 258 0 discriminator 4
 918 0080 7E4B     	 ldr r3,.L91+16
 919 0082 1B88     	 ldrh r3,[r3]
 920 0084 1BB2     	 sxth r3,r3
 921 0086 40F24652 	 movw r2,#1350
 922 008a 9342     	 cmp r3,r2
 923 008c 40F3EB80 	 ble .L74
 924              	 .loc 1 258 0 discriminator 5
 925 0090 7A4B     	 ldr r3,.L91+16
 926 0092 1B88     	 ldrh r3,[r3]
 927 0094 1BB2     	 sxth r3,r3
 928 0096 40F27162 	 movw r2,#1649
 929 009a 9342     	 cmp r3,r2
 930 009c 00F3E380 	 bgt .L74
 259:../cleanflight/src/main/io/rcdevice_cam.c ****             if (rcdeviceIs5KeyEnabled()) {
 931              	 .loc 1 259 0 is_stmt 1
 932 00a0 FFF7FEFF 	 bl rcdeviceIs5KeyEnabled
 933 00a4 0346     	 mov r3,r0
 934 00a6 002B     	 cmp r3,#0
 935 00a8 00F0DD80 	 beq .L74
 260:../cleanflight/src/main/io/rcdevice_cam.c ****                 rcdeviceSend5KeyOSDCableSimualtionEvent(RCDEVICE_CAM_KEY_RELEASE);
 936              	 .loc 1 260 0
 937 00ac 0820     	 movs r0,#8
 938 00ae FFF7FEFF 	 bl rcdeviceSend5KeyOSDCableSimualtionEvent
 261:../cleanflight/src/main/io/rcdevice_cam.c ****                 waitingDeviceResponse = true;
 939              	 .loc 1 261 0
 940 00b2 704B     	 ldr r3,.L91+8
 941 00b4 0122     	 movs r2,#1
 942 00b6 1A70     	 strb r2,[r3]
 943 00b8 D5E0     	 b .L74
 944              	.L80:
 945              	.LBB8:
 262:../cleanflight/src/main/io/rcdevice_cam.c ****             }
 263:../cleanflight/src/main/io/rcdevice_cam.c ****         }
 264:../cleanflight/src/main/io/rcdevice_cam.c ****     } else {
 265:../cleanflight/src/main/io/rcdevice_cam.c ****         rcdeviceCamSimulationKeyEvent_e key = RCDEVICE_CAM_KEY_NONE;
 946              	 .loc 1 265 0
 947 00ba 0023     	 movs r3,#0
 948 00bc FB73     	 strb r3,[r7,#15]
 266:../cleanflight/src/main/io/rcdevice_cam.c **** 
 267:../cleanflight/src/main/io/rcdevice_cam.c ****         if (IS_MID(THROTTLE) && IS_MID(ROLL) && IS_MID(PITCH) && IS_LO(YAW)) { // Disconnect HI YAW
 949              	 .loc 1 267 0
 950 00be 6F4B     	 ldr r3,.L91+16
 951 00c0 DB88     	 ldrh r3,[r3,#6]
 952 00c2 1BB2     	 sxth r3,r3
 953 00c4 40F24652 	 movw r2,#1350
 954 00c8 9342     	 cmp r3,r2
 955 00ca 30DD     	 ble .L82
 956              	 .loc 1 267 0 is_stmt 0 discriminator 1
 957 00cc 6B4B     	 ldr r3,.L91+16
 958 00ce DB88     	 ldrh r3,[r3,#6]
 959 00d0 1BB2     	 sxth r3,r3
 960 00d2 40F27162 	 movw r2,#1649
 961 00d6 9342     	 cmp r3,r2
 962 00d8 29DC     	 bgt .L82
 963              	 .loc 1 267 0 discriminator 2
 964 00da 684B     	 ldr r3,.L91+16
 965 00dc 1B88     	 ldrh r3,[r3]
 966 00de 1BB2     	 sxth r3,r3
 967 00e0 40F24652 	 movw r2,#1350
 968 00e4 9342     	 cmp r3,r2
 969 00e6 22DD     	 ble .L82
 970              	 .loc 1 267 0 discriminator 3
 971 00e8 644B     	 ldr r3,.L91+16
 972 00ea 1B88     	 ldrh r3,[r3]
 973 00ec 1BB2     	 sxth r3,r3
 974 00ee 40F27162 	 movw r2,#1649
 975 00f2 9342     	 cmp r3,r2
 976 00f4 1BDC     	 bgt .L82
 977              	 .loc 1 267 0 discriminator 4
 978 00f6 614B     	 ldr r3,.L91+16
 979 00f8 5B88     	 ldrh r3,[r3,#2]
 980 00fa 1BB2     	 sxth r3,r3
 981 00fc 40F24652 	 movw r2,#1350
 982 0100 9342     	 cmp r3,r2
 983 0102 14DD     	 ble .L82
 984              	 .loc 1 267 0 discriminator 5
 985 0104 5D4B     	 ldr r3,.L91+16
 986 0106 5B88     	 ldrh r3,[r3,#2]
 987 0108 1BB2     	 sxth r3,r3
 988 010a 40F27162 	 movw r2,#1649
 989 010e 9342     	 cmp r3,r2
 990 0110 0DDC     	 bgt .L82
 991              	 .loc 1 267 0 discriminator 6
 992 0112 5A4B     	 ldr r3,.L91+16
 993 0114 9B88     	 ldrh r3,[r3,#4]
 994 0116 1BB2     	 sxth r3,r3
 995 0118 B3F5876F 	 cmp r3,#1080
 996 011c 07DA     	 bge .L82
 268:../cleanflight/src/main/io/rcdevice_cam.c ****             if (rcdeviceInMenu) {
 997              	 .loc 1 268 0 is_stmt 1
 998 011e 584B     	 ldr r3,.L91+20
 999 0120 1B78     	 ldrb r3,[r3]
 1000 0122 002B     	 cmp r3,#0
 1001 0124 02D0     	 beq .L83
 269:../cleanflight/src/main/io/rcdevice_cam.c ****                 key = RCDEVICE_CAM_KEY_CONNECTION_CLOSE;
 1002              	 .loc 1 269 0
 1003 0126 0623     	 movs r3,#6
 1004 0128 FB73     	 strb r3,[r7,#15]
 268:../cleanflight/src/main/io/rcdevice_cam.c ****             if (rcdeviceInMenu) {
 1005              	 .loc 1 268 0
 1006 012a 8DE0     	 b .L84
 1007              	.L83:
 1008 012c 8CE0     	 b .L84
 1009              	.L82:
 270:../cleanflight/src/main/io/rcdevice_cam.c ****             }
 271:../cleanflight/src/main/io/rcdevice_cam.c ****         } else {
 272:../cleanflight/src/main/io/rcdevice_cam.c ****             if (rcdeviceInMenu) {
 1010              	 .loc 1 272 0
 1011 012e 544B     	 ldr r3,.L91+20
 1012 0130 1B78     	 ldrb r3,[r3]
 1013 0132 002B     	 cmp r3,#0
 1014 0134 56D0     	 beq .L85
 273:../cleanflight/src/main/io/rcdevice_cam.c ****                 if (IS_LO(ROLL)) { // Left LO ROLL
 1015              	 .loc 1 273 0
 1016 0136 514B     	 ldr r3,.L91+16
 1017 0138 1B88     	 ldrh r3,[r3]
 1018 013a 1BB2     	 sxth r3,r3
 1019 013c B3F5876F 	 cmp r3,#1080
 1020 0140 02DA     	 bge .L86
 274:../cleanflight/src/main/io/rcdevice_cam.c ****                     key = RCDEVICE_CAM_KEY_LEFT;
 1021              	 .loc 1 274 0
 1022 0142 0223     	 movs r3,#2
 1023 0144 FB73     	 strb r3,[r7,#15]
 1024 0146 7FE0     	 b .L84
 1025              	.L86:
 275:../cleanflight/src/main/io/rcdevice_cam.c ****                 } else if (IS_HI(PITCH)) { // Up HI PITCH
 1026              	 .loc 1 275 0
 1027 0148 4C4B     	 ldr r3,.L91+16
 1028 014a 5B88     	 ldrh r3,[r3,#2]
 1029 014c 1BB2     	 sxth r3,r3
 1030 014e B3F5F06F 	 cmp r3,#1920
 1031 0152 02DD     	 ble .L88
 276:../cleanflight/src/main/io/rcdevice_cam.c ****                     key = RCDEVICE_CAM_KEY_UP;
 1032              	 .loc 1 276 0
 1033 0154 0323     	 movs r3,#3
 1034 0156 FB73     	 strb r3,[r7,#15]
 1035 0158 76E0     	 b .L84
 1036              	.L88:
 277:../cleanflight/src/main/io/rcdevice_cam.c ****                 } else if (IS_HI(ROLL)) { // Right HI ROLL
 1037              	 .loc 1 277 0
 1038 015a 484B     	 ldr r3,.L91+16
 1039 015c 1B88     	 ldrh r3,[r3]
 1040 015e 1BB2     	 sxth r3,r3
 1041 0160 B3F5F06F 	 cmp r3,#1920
 1042 0164 02DD     	 ble .L89
 278:../cleanflight/src/main/io/rcdevice_cam.c ****                     key = RCDEVICE_CAM_KEY_RIGHT;
 1043              	 .loc 1 278 0
 1044 0166 0423     	 movs r3,#4
 1045 0168 FB73     	 strb r3,[r7,#15]
 1046 016a 6DE0     	 b .L84
 1047              	.L89:
 279:../cleanflight/src/main/io/rcdevice_cam.c ****                 } else if (IS_LO(PITCH)) { // Down LO PITCH
 1048              	 .loc 1 279 0
 1049 016c 434B     	 ldr r3,.L91+16
 1050 016e 5B88     	 ldrh r3,[r3,#2]
 1051 0170 1BB2     	 sxth r3,r3
 1052 0172 B3F5876F 	 cmp r3,#1080
 1053 0176 02DA     	 bge .L90
 280:../cleanflight/src/main/io/rcdevice_cam.c ****                     key = RCDEVICE_CAM_KEY_DOWN;
 1054              	 .loc 1 280 0
 1055 0178 0523     	 movs r3,#5
 1056 017a FB73     	 strb r3,[r7,#15]
 1057 017c 64E0     	 b .L84
 1058              	.L90:
 281:../cleanflight/src/main/io/rcdevice_cam.c ****                 } else if (IS_MID(THROTTLE) && IS_MID(ROLL) && IS_MID(PITCH) && IS_HI(YAW)) { // En
 1059              	 .loc 1 281 0
 1060 017e 3F4B     	 ldr r3,.L91+16
 1061 0180 DB88     	 ldrh r3,[r3,#6]
 1062 0182 1BB2     	 sxth r3,r3
 1063 0184 40F24652 	 movw r2,#1350
 1064 0188 9342     	 cmp r3,r2
 1065 018a 5DDD     	 ble .L84
 1066              	 .loc 1 281 0 is_stmt 0 discriminator 1
 1067 018c 3B4B     	 ldr r3,.L91+16
 1068 018e DB88     	 ldrh r3,[r3,#6]
 1069 0190 1BB2     	 sxth r3,r3
 1070 0192 40F27162 	 movw r2,#1649
 1071 0196 9342     	 cmp r3,r2
 1072 0198 56DC     	 bgt .L84
 1073              	 .loc 1 281 0 discriminator 2
 1074 019a 384B     	 ldr r3,.L91+16
 1075 019c 1B88     	 ldrh r3,[r3]
 1076 019e 1BB2     	 sxth r3,r3
 1077 01a0 40F24652 	 movw r2,#1350
 1078 01a4 9342     	 cmp r3,r2
 1079 01a6 4FDD     	 ble .L84
 1080              	 .loc 1 281 0 discriminator 3
 1081 01a8 344B     	 ldr r3,.L91+16
 1082 01aa 1B88     	 ldrh r3,[r3]
 1083 01ac 1BB2     	 sxth r3,r3
 1084 01ae 40F27162 	 movw r2,#1649
 1085 01b2 9342     	 cmp r3,r2
 1086 01b4 48DC     	 bgt .L84
 1087              	 .loc 1 281 0 discriminator 4
 1088 01b6 314B     	 ldr r3,.L91+16
 1089 01b8 5B88     	 ldrh r3,[r3,#2]
 1090 01ba 1BB2     	 sxth r3,r3
 1091 01bc 40F24652 	 movw r2,#1350
 1092 01c0 9342     	 cmp r3,r2
 1093 01c2 41DD     	 ble .L84
 1094              	 .loc 1 281 0 discriminator 5
 1095 01c4 2D4B     	 ldr r3,.L91+16
 1096 01c6 5B88     	 ldrh r3,[r3,#2]
 1097 01c8 1BB2     	 sxth r3,r3
 1098 01ca 40F27162 	 movw r2,#1649
 1099 01ce 9342     	 cmp r3,r2
 1100 01d0 3ADC     	 bgt .L84
 1101              	 .loc 1 281 0 discriminator 6
 1102 01d2 2A4B     	 ldr r3,.L91+16
 1103 01d4 9B88     	 ldrh r3,[r3,#4]
 1104 01d6 1BB2     	 sxth r3,r3
 1105 01d8 B3F5F06F 	 cmp r3,#1920
 1106 01dc 34DD     	 ble .L84
 282:../cleanflight/src/main/io/rcdevice_cam.c ****                     key = RCDEVICE_CAM_KEY_ENTER;
 1107              	 .loc 1 282 0 is_stmt 1
 1108 01de 0123     	 movs r3,#1
 1109 01e0 FB73     	 strb r3,[r7,#15]
 1110 01e2 31E0     	 b .L84
 1111              	.L85:
 283:../cleanflight/src/main/io/rcdevice_cam.c ****                 }
 284:../cleanflight/src/main/io/rcdevice_cam.c ****             } else {
 285:../cleanflight/src/main/io/rcdevice_cam.c ****                 if (IS_MID(THROTTLE) && IS_MID(ROLL) && IS_MID(PITCH) && IS_HI(YAW)) { // Enter HI 
 1112              	 .loc 1 285 0
 1113 01e4 254B     	 ldr r3,.L91+16
 1114 01e6 DB88     	 ldrh r3,[r3,#6]
 1115 01e8 1BB2     	 sxth r3,r3
 1116 01ea 40F24652 	 movw r2,#1350
 1117 01ee 9342     	 cmp r3,r2
 1118 01f0 2ADD     	 ble .L84
 1119              	 .loc 1 285 0 is_stmt 0 discriminator 1
 1120 01f2 224B     	 ldr r3,.L91+16
 1121 01f4 DB88     	 ldrh r3,[r3,#6]
 1122 01f6 1BB2     	 sxth r3,r3
 1123 01f8 40F27162 	 movw r2,#1649
 1124 01fc 9342     	 cmp r3,r2
 1125 01fe 23DC     	 bgt .L84
 1126              	 .loc 1 285 0 discriminator 2
 1127 0200 1E4B     	 ldr r3,.L91+16
 1128 0202 1B88     	 ldrh r3,[r3]
 1129 0204 1BB2     	 sxth r3,r3
 1130 0206 40F24652 	 movw r2,#1350
 1131 020a 9342     	 cmp r3,r2
 1132 020c 1CDD     	 ble .L84
 1133              	 .loc 1 285 0 discriminator 3
 1134 020e 1B4B     	 ldr r3,.L91+16
 1135 0210 1B88     	 ldrh r3,[r3]
 1136 0212 1BB2     	 sxth r3,r3
 1137 0214 40F27162 	 movw r2,#1649
 1138 0218 9342     	 cmp r3,r2
 1139 021a 15DC     	 bgt .L84
 1140              	 .loc 1 285 0 discriminator 4
 1141 021c 174B     	 ldr r3,.L91+16
 1142 021e 5B88     	 ldrh r3,[r3,#2]
 1143 0220 1BB2     	 sxth r3,r3
 1144 0222 40F24652 	 movw r2,#1350
 1145 0226 9342     	 cmp r3,r2
 1146 0228 0EDD     	 ble .L84
 1147              	 .loc 1 285 0 discriminator 5
 1148 022a 144B     	 ldr r3,.L91+16
 1149 022c 5B88     	 ldrh r3,[r3,#2]
 1150 022e 1BB2     	 sxth r3,r3
 1151 0230 40F27162 	 movw r2,#1649
 1152 0234 9342     	 cmp r3,r2
 1153 0236 07DC     	 bgt .L84
 1154              	 .loc 1 285 0 discriminator 6
 1155 0238 104B     	 ldr r3,.L91+16
 1156 023a 9B88     	 ldrh r3,[r3,#4]
 1157 023c 1BB2     	 sxth r3,r3
 1158 023e B3F5F06F 	 cmp r3,#1920
 1159 0242 01DD     	 ble .L84
 286:../cleanflight/src/main/io/rcdevice_cam.c ****                     key = RCDEVICE_CAM_KEY_CONNECTION_OPEN;
 1160              	 .loc 1 286 0 is_stmt 1
 1161 0244 0723     	 movs r3,#7
 1162 0246 FB73     	 strb r3,[r7,#15]
 1163              	.L84:
 287:../cleanflight/src/main/io/rcdevice_cam.c ****                 }
 288:../cleanflight/src/main/io/rcdevice_cam.c ****             }
 289:../cleanflight/src/main/io/rcdevice_cam.c ****         }
 290:../cleanflight/src/main/io/rcdevice_cam.c **** 
 291:../cleanflight/src/main/io/rcdevice_cam.c ****         if (key != RCDEVICE_CAM_KEY_NONE) {
 1164              	 .loc 1 291 0
 1165 0248 FB7B     	 ldrb r3,[r7,#15]
 1166 024a 002B     	 cmp r3,#0
 1167 024c 0BD0     	 beq .L74
 292:../cleanflight/src/main/io/rcdevice_cam.c ****             if (rcdeviceIs5KeyEnabled()) {
 1168              	 .loc 1 292 0
 1169 024e FFF7FEFF 	 bl rcdeviceIs5KeyEnabled
 1170 0252 0346     	 mov r3,r0
 1171 0254 002B     	 cmp r3,#0
 1172 0256 06D0     	 beq .L74
 293:../cleanflight/src/main/io/rcdevice_cam.c ****                 rcdeviceSend5KeyOSDCableSimualtionEvent(key);
 1173              	 .loc 1 293 0
 1174 0258 FB7B     	 ldrb r3,[r7,#15]
 1175 025a 1846     	 mov r0,r3
 1176 025c FFF7FEFF 	 bl rcdeviceSend5KeyOSDCableSimualtionEvent
 294:../cleanflight/src/main/io/rcdevice_cam.c ****                 waitingDeviceResponse = true;
 1177              	 .loc 1 294 0
 1178 0260 044B     	 ldr r3,.L91+8
 1179 0262 0122     	 movs r2,#1
 1180 0264 1A70     	 strb r2,[r3]
 1181              	.L74:
 1182              	.LBE8:
 295:../cleanflight/src/main/io/rcdevice_cam.c ****             }
 296:../cleanflight/src/main/io/rcdevice_cam.c ****         }
 297:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 298:../cleanflight/src/main/io/rcdevice_cam.c **** }
 1183              	 .loc 1 298 0
 1184 0266 1037     	 adds r7,r7,#16
 1185              	.LCFI41:
 1186              	 .cfi_def_cfa_offset 8
 1187 0268 BD46     	 mov sp,r7
 1188              	.LCFI42:
 1189              	 .cfi_def_cfa_register 13
 1190              	 
 1191 026a 80BD     	 pop {r7,pc}
 1192              	.L92:
 1193              	 .align 2
 1194              	.L91:
 1195 026c 00000000 	 .word cmsInMenu
 1196 0270 00000000 	 .word armingFlags
 1197 0274 00000000 	 .word waitingDeviceResponse
 1198 0278 00000000 	 .word isButtonPressed
 1199 027c 00000000 	 .word rcData
 1200 0280 00000000 	 .word rcdeviceInMenu
 1201              	 .cfi_endproc
 1202              	.LFE556:
 1204              	 .section .text.rcdeviceUpdate,"ax",%progbits
 1205              	 .align 2
 1206              	 .global rcdeviceUpdate
 1207              	 .thumb
 1208              	 .thumb_func
 1210              	rcdeviceUpdate:
 1211              	.LFB557:
 299:../cleanflight/src/main/io/rcdevice_cam.c **** 
 300:../cleanflight/src/main/io/rcdevice_cam.c **** void rcdeviceUpdate(timeUs_t currentTimeUs)
 301:../cleanflight/src/main/io/rcdevice_cam.c **** {
 1212              	 .loc 1 301 0
 1213              	 .cfi_startproc
 1214              	 
 1215              	 
 1216 0000 80B5     	 push {r7,lr}
 1217              	.LCFI43:
 1218              	 .cfi_def_cfa_offset 8
 1219              	 .cfi_offset 7,-8
 1220              	 .cfi_offset 14,-4
 1221 0002 82B0     	 sub sp,sp,#8
 1222              	.LCFI44:
 1223              	 .cfi_def_cfa_offset 16
 1224 0004 00AF     	 add r7,sp,#0
 1225              	.LCFI45:
 1226              	 .cfi_def_cfa_register 7
 1227 0006 7860     	 str r0,[r7,#4]
 302:../cleanflight/src/main/io/rcdevice_cam.c ****     rcdeviceReceive(currentTimeUs);
 1228              	 .loc 1 302 0
 1229 0008 7868     	 ldr r0,[r7,#4]
 1230 000a FFF7FEFF 	 bl rcdeviceReceive
 303:../cleanflight/src/main/io/rcdevice_cam.c ****     
 304:../cleanflight/src/main/io/rcdevice_cam.c ****     rcdeviceCameraControlProcess();
 1231              	 .loc 1 304 0
 1232 000e FFF7FEFF 	 bl rcdeviceCameraControlProcess
 305:../cleanflight/src/main/io/rcdevice_cam.c ****     rcdevice5KeySimulationProcess(currentTimeUs);
 1233              	 .loc 1 305 0
 1234 0012 7868     	 ldr r0,[r7,#4]
 1235 0014 FFF7FEFF 	 bl rcdevice5KeySimulationProcess
 306:../cleanflight/src/main/io/rcdevice_cam.c **** }
 1236              	 .loc 1 306 0
 1237 0018 0837     	 adds r7,r7,#8
 1238              	.LCFI46:
 1239              	 .cfi_def_cfa_offset 8
 1240 001a BD46     	 mov sp,r7
 1241              	.LCFI47:
 1242              	 .cfi_def_cfa_register 13
 1243              	 
 1244 001c 80BD     	 pop {r7,pc}
 1245              	 .cfi_endproc
 1246              	.LFE557:
 1248 001e 00BF     	 .section .text.rcdeviceInit,"ax",%progbits
 1249              	 .align 2
 1250              	 .global rcdeviceInit
 1251              	 .thumb
 1252              	 .thumb_func
 1254              	rcdeviceInit:
 1255              	.LFB558:
 307:../cleanflight/src/main/io/rcdevice_cam.c **** 
 308:../cleanflight/src/main/io/rcdevice_cam.c **** void rcdeviceInit(void)
 309:../cleanflight/src/main/io/rcdevice_cam.c **** {
 1256              	 .loc 1 309 0
 1257              	 .cfi_startproc
 1258              	 
 1259              	 
 1260 0000 80B5     	 push {r7,lr}
 1261              	.LCFI48:
 1262              	 .cfi_def_cfa_offset 8
 1263              	 .cfi_offset 7,-8
 1264              	 .cfi_offset 14,-4
 1265 0002 82B0     	 sub sp,sp,#8
 1266              	.LCFI49:
 1267              	 .cfi_def_cfa_offset 16
 1268 0004 00AF     	 add r7,sp,#0
 1269              	.LCFI50:
 1270              	 .cfi_def_cfa_register 7
 310:../cleanflight/src/main/io/rcdevice_cam.c ****     // open serial port
 311:../cleanflight/src/main/io/rcdevice_cam.c ****     runcamDeviceInit(camDevice);
 1271              	 .loc 1 311 0
 1272 0006 0C4B     	 ldr r3,.L97
 1273 0008 1B68     	 ldr r3,[r3]
 1274 000a 1846     	 mov r0,r3
 1275 000c FFF7FEFF 	 bl runcamDeviceInit
 1276              	.LBB9:
 312:../cleanflight/src/main/io/rcdevice_cam.c **** 
 313:../cleanflight/src/main/io/rcdevice_cam.c ****     for (boxId_e i = BOXCAMERA1; i <= BOXCAMERA3; i++) {
 1277              	 .loc 1 313 0
 1278 0010 1B23     	 movs r3,#27
 1279 0012 FB71     	 strb r3,[r7,#7]
 1280 0014 09E0     	 b .L95
 1281              	.L96:
 1282              	.LBB10:
 314:../cleanflight/src/main/io/rcdevice_cam.c ****         uint8_t switchIndex = i - BOXCAMERA1;
 1283              	 .loc 1 314 0 discriminator 3
 1284 0016 FB79     	 ldrb r3,[r7,#7]
 1285 0018 1B3B     	 subs r3,r3,#27
 1286 001a BB71     	 strb r3,[r7,#6]
 315:../cleanflight/src/main/io/rcdevice_cam.c ****         switchStates[switchIndex].isActivated = true;
 1287              	 .loc 1 315 0 discriminator 3
 1288 001c BB79     	 ldrb r3,[r7,#6]
 1289 001e 074A     	 ldr r2,.L97+4
 1290 0020 0121     	 movs r1,#1
 1291 0022 D154     	 strb r1,[r2,r3]
 1292              	.LBE10:
 313:../cleanflight/src/main/io/rcdevice_cam.c ****         uint8_t switchIndex = i - BOXCAMERA1;
 1293              	 .loc 1 313 0 discriminator 3
 1294 0024 FB79     	 ldrb r3,[r7,#7]
 1295 0026 0133     	 adds r3,r3,#1
 1296 0028 FB71     	 strb r3,[r7,#7]
 1297              	.L95:
 313:../cleanflight/src/main/io/rcdevice_cam.c ****         uint8_t switchIndex = i - BOXCAMERA1;
 1298              	 .loc 1 313 0 is_stmt 0 discriminator 1
 1299 002a FB79     	 ldrb r3,[r7,#7]
 1300 002c 1D2B     	 cmp r3,#29
 1301 002e F2D9     	 bls .L96
 1302              	.LBE9:
 316:../cleanflight/src/main/io/rcdevice_cam.c ****     }
 317:../cleanflight/src/main/io/rcdevice_cam.c **** }
 1303              	 .loc 1 317 0 is_stmt 1
 1304 0030 0837     	 adds r7,r7,#8
 1305              	.LCFI51:
 1306              	 .cfi_def_cfa_offset 8
 1307 0032 BD46     	 mov sp,r7
 1308              	.LCFI52:
 1309              	 .cfi_def_cfa_register 13
 1310              	 
 1311 0034 80BD     	 pop {r7,pc}
 1312              	.L98:
 1313 0036 00BF     	 .align 2
 1314              	.L97:
 1315 0038 00000000 	 .word camDevice
 1316 003c 00000000 	 .word switchStates
 1317              	 .cfi_endproc
 1318              	.LFE558:
 1320              	 .text
 1321              	.Letext0:
 1322              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1323              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1324              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 1325              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 1326              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx.h"
 1327              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 1328              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/display.h"
 1329              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_controls.h"
 1330              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/runtime_config.h"
 1331              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/beeper.h"
 1332              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 1333              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
 1334              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/serial.h"
 1335              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/rcdevice.h"
 1336              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_modes.h"
 1337              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/rcdevice_cam.h"
 1338              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/rx/rx.h"
 1339              	 .file 19 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 1340              	 .file 20 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
 1341              	 .file 21 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms.h"
DEFINED SYMBOLS
                            *ABS*:00000000 rcdevice_cam.c
                            *COM*:00000004 pCurrentDisplay
                            *COM*:00000003 switchStates
    {standard input}:22     .bss.runcamDevice:00000000 $d
    {standard input}:25     .bss.runcamDevice:00000000 runcamDevice
    {standard input}:32     .data.camDevice:00000000 camDevice
    {standard input}:29     .data.camDevice:00000000 $d
    {standard input}:38     .bss.rcdeviceInMenu:00000000 rcdeviceInMenu
    {standard input}:39     .bss.rcdeviceInMenu:00000000 $d
    {standard input}:44     .bss.isButtonPressed:00000000 isButtonPressed
    {standard input}:45     .bss.isButtonPressed:00000000 $d
    {standard input}:50     .bss.waitingDeviceResponse:00000000 waitingDeviceResponse
    {standard input}:51     .bss.waitingDeviceResponse:00000000 $d
    {standard input}:53     .text.isFeatureSupported:00000000 $t
    {standard input}:57     .text.isFeatureSupported:00000000 isFeatureSupported
    {standard input}:111    .text.isFeatureSupported:00000030 $d
    {standard input}:116    .text.rcdeviceIsEnabled:00000000 $t
    {standard input}:121    .text.rcdeviceIsEnabled:00000000 rcdeviceIsEnabled
    {standard input}:158    .text.rcdeviceIsEnabled:00000020 $d
    {standard input}:163    .text.rcdeviceIs5KeyEnabled:00000000 $t
    {standard input}:167    .text.rcdeviceIs5KeyEnabled:00000000 rcdeviceIs5KeyEnabled
    {standard input}:206    .text.rcdeviceIs5KeyEnabled:00000024 $d
    {standard input}:211    .text.rcdeviceCameraControlProcess:00000000 $t
    {standard input}:215    .text.rcdeviceCameraControlProcess:00000000 rcdeviceCameraControlProcess
    {standard input}:391    .text.rcdeviceCameraControlProcess:000000ec $d
    {standard input}:398    .text.rcdeviceSimulationOSDCableFailed:00000000 $t
    {standard input}:402    .text.rcdeviceSimulationOSDCableFailed:00000000 rcdeviceSimulationOSDCableFailed
    {standard input}:469    .text.rcdeviceSimulationOSDCableFailed:0000003c $d
    {standard input}:475    .text.rcdeviceSimulationRespHandle:00000000 $t
    {standard input}:479    .text.rcdeviceSimulationRespHandle:00000000 rcdeviceSimulationRespHandle
    {standard input}:621    .text.rcdeviceSimulationRespHandle:000000b0 $d
    {standard input}:628    .text.rcdeviceCamSimulate5KeyCablePress:00000000 $t
    {standard input}:632    .text.rcdeviceCamSimulate5KeyCablePress:00000000 rcdeviceCamSimulate5KeyCablePress
    {standard input}:663    .text.rcdeviceCamSimulate5KeyCablePress:0000001c $d
    {standard input}:668    .text.rcdeviceCamSimulate5KeyCablePress:00000030 $t
    {standard input}:726    .text.rcdeviceCamSimulate5KeyCablePress:0000006c $d
    {standard input}:732    .text.rcdeviceSend5KeyOSDCableSimualtionEvent:00000000 $t
    {standard input}:737    .text.rcdeviceSend5KeyOSDCableSimualtionEvent:00000000 rcdeviceSend5KeyOSDCableSimualtionEvent
    {standard input}:765    .text.rcdeviceSend5KeyOSDCableSimualtionEvent:00000018 $d
    {standard input}:773    .text.rcdeviceSend5KeyOSDCableSimualtionEvent:00000038 $t
    {standard input}:824    .text.rcdeviceSend5KeyOSDCableSimualtionEvent:00000074 $d
    {standard input}:830    .text.rcdevice5KeySimulationProcess:00000000 $t
    {standard input}:834    .text.rcdevice5KeySimulationProcess:00000000 rcdevice5KeySimulationProcess
    {standard input}:1195   .text.rcdevice5KeySimulationProcess:0000026c $d
    {standard input}:1205   .text.rcdeviceUpdate:00000000 $t
    {standard input}:1210   .text.rcdeviceUpdate:00000000 rcdeviceUpdate
    {standard input}:1249   .text.rcdeviceInit:00000000 $t
    {standard input}:1254   .text.rcdeviceInit:00000000 rcdeviceInit
    {standard input}:1315   .text.rcdeviceInit:00000038 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
IS_RC_MODE_ACTIVE
getArmingDisableFlags
runcamDeviceSimulateCameraButton
armingFlags
beeper
runcamDeviceSimulate5KeyOSDCableButtonPress
runcamDeviceOpen5KeyOSDCableConnection
runcamDeviceClose5KeyOSDCableConnection
runcamDeviceSimulate5KeyOSDCableButtonRelease
cmsInMenu
rcData
rcdeviceReceive
runcamDeviceInit
