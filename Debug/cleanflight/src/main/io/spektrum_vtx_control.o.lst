   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "spektrum_vtx_control.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.vtxSettingsConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	vtxSettingsConfig:
  25              	.LFB531:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/vtx.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** #include "platform.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** #include "common/time.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** #include "pg/pg.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** typedef struct vtxSettingsConfig_s {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****     uint8_t band;           // 1=A, 2=B, 3=E, 4=F(Airwaves/Fatshark), 5=Raceband
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****     uint8_t channel;        // 1-8
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****     uint8_t power;          // 0 = lowest
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****     uint16_t freq;          // sets freq in MHz if band=0
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****     uint16_t pitModeFreq;   // sets out-of-range pitmode frequency
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h ****     uint8_t lowPowerDisarm; // min power while disarmed
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** } vtxSettingsConfig_t;
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** 
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx.h **** PG_DECLARE(vtxSettingsConfig_t, vtxSettingsConfig);
  27              	 .loc 1 38 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 38 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word vtxSettingsConfig_System
  55              	 .cfi_endproc
  56              	.LFE531:
  58              	 .section .text.vtxSettingsConfigMutable,"ax",%progbits
  59              	 .align 2
  60              	 .thumb
  61              	 .thumb_func
  63              	vtxSettingsConfigMutable:
  64              	.LFB532:
  65              	 .loc 1 38 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69              	 
  70 0000 80B4     	 push {r7}
  71              	.LCFI4:
  72              	 .cfi_def_cfa_offset 4
  73              	 .cfi_offset 7,-4
  74 0002 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77              	 .loc 1 38 0
  78 0004 024B     	 ldr r3,.L7
  79 0006 1846     	 mov r0,r3
  80 0008 BD46     	 mov sp,r7
  81              	.LCFI6:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 000a 5DF8047B 	 ldr r7,[sp],#4
  85              	.LCFI7:
  86              	 .cfi_restore 7
  87              	 .cfi_def_cfa_offset 0
  88 000e 7047     	 bx lr
  89              	.L8:
  90              	 .align 2
  91              	.L7:
  92 0010 00000000 	 .word vtxSettingsConfig_System
  93              	 .cfi_endproc
  94              	.LFE532:
  96              	 .global spek2commonBand
  97              	 .section .rodata.spek2commonBand,"a",%progbits
  98              	 .align 2
 101              	spek2commonBand:
 102 0000 04       	 .byte 4
 103 0001 05       	 .byte 5
 104 0002 03       	 .byte 3
 105 0003 02       	 .byte 2
 106 0004 01       	 .byte 1
 107              	 .global vtxTrampPi
 108 0005 000000   	 .section .rodata.vtxTrampPi,"a",%progbits
 109              	 .align 2
 112              	vtxTrampPi:
 113 0000 00       	 .byte 0
 114 0001 00       	 .byte 0
 115 0002 01       	 .byte 1
 116 0003 02       	 .byte 2
 117 0004 03       	 .byte 3
 118 0005 04       	 .byte 4
 119 0006 05       	 .byte 5
 120 0007 03       	 .byte 3
 121              	 .global vtxSaPi
 122              	 .section .rodata.vtxSaPi,"a",%progbits
 123              	 .align 2
 126              	vtxSaPi:
 127 0000 00       	 .byte 0
 128 0001 00       	 .byte 0
 129 0002 01       	 .byte 1
 130 0003 01       	 .byte 1
 131 0004 02       	 .byte 2
 132 0005 03       	 .byte 3
 133 0006 04       	 .byte 4
 134 0007 02       	 .byte 2
 135              	 .section .text.convertSpektrumVtxPowerIndex,"ax",%progbits
 136              	 .align 2
 137              	 .global convertSpektrumVtxPowerIndex
 138              	 .thumb
 139              	 .thumb_func
 141              	convertSpektrumVtxPowerIndex:
 142              	.LFB533:
 143              	 .file 2 "../cleanflight/src/main/io/spektrum_vtx_control.c"
   1:../cleanflight/src/main/io/spektrum_vtx_control.c **** /*
   2:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/io/spektrum_vtx_control.c ****  *
   4:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * any later version.
   9:../cleanflight/src/main/io/spektrum_vtx_control.c ****  *
  10:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/io/spektrum_vtx_control.c ****  *
  15:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * along with this software.
  17:../cleanflight/src/main/io/spektrum_vtx_control.c ****  *
  18:../cleanflight/src/main/io/spektrum_vtx_control.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/io/spektrum_vtx_control.c ****  */
  20:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  21:../cleanflight/src/main/io/spektrum_vtx_control.c **** #include "platform.h"
  22:../cleanflight/src/main/io/spektrum_vtx_control.c **** #if defined(USE_SPEKTRUM_VTX_CONTROL) && defined(USE_VTX_COMMON)
  23:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  24:../cleanflight/src/main/io/spektrum_vtx_control.c **** #include <string.h>
  25:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  26:../cleanflight/src/main/io/spektrum_vtx_control.c **** #include "fc/config.h"
  27:../cleanflight/src/main/io/spektrum_vtx_control.c **** #include "drivers/vtx_common.h"
  28:../cleanflight/src/main/io/spektrum_vtx_control.c **** #include "io/vtx.h"
  29:../cleanflight/src/main/io/spektrum_vtx_control.c **** #include "io/vtx_string.h"
  30:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  31:../cleanflight/src/main/io/spektrum_vtx_control.c **** #include "io/spektrum_vtx_control.h"
  32:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  33:../cleanflight/src/main/io/spektrum_vtx_control.c **** // We can not use the common set/get-frequncy API.
  34:../cleanflight/src/main/io/spektrum_vtx_control.c **** // Some VTX devices do not support it.
  35:../cleanflight/src/main/io/spektrum_vtx_control.c **** //#define USE_VTX_COMMON_FREQ_API
  36:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  37:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_VTX_COMMON_FREQ_API
  38:../cleanflight/src/main/io/spektrum_vtx_control.c **** const uint16_t SpektrumVtxfrequencyTable[SPEKTRUM_VTX_BAND_COUNT][SPEKTRUM_VTX_CHAN_COUNT] =
  39:../cleanflight/src/main/io/spektrum_vtx_control.c ****     {
  40:../cleanflight/src/main/io/spektrum_vtx_control.c ****         { 5740, 5760, 5780, 5800, 5820, 5840, 5860, 5880 }, // FatShark
  41:../cleanflight/src/main/io/spektrum_vtx_control.c ****         { 5658, 5695, 5732, 5769, 5806, 5843, 5880, 5917 }, // RaceBand
  42:../cleanflight/src/main/io/spektrum_vtx_control.c ****         { 5705, 5685, 5665, 5645, 5885, 5905, 5925, 5945 }, // Boscam E
  43:../cleanflight/src/main/io/spektrum_vtx_control.c ****         { 5733, 5752, 5771, 5790, 5809, 5828, 5847, 5866 }, // Boscam B
  44:../cleanflight/src/main/io/spektrum_vtx_control.c ****         { 5865, 5845, 5825, 5805, 5785, 5765, 5745, 5725 }, // Boscam A
  45:../cleanflight/src/main/io/spektrum_vtx_control.c ****     };
  46:../cleanflight/src/main/io/spektrum_vtx_control.c **** #else
  47:../cleanflight/src/main/io/spektrum_vtx_control.c **** // Translation table, Spektrum bands to BF internal vtx_common bands
  48:../cleanflight/src/main/io/spektrum_vtx_control.c **** const uint8_t spek2commonBand[SPEKTRUM_VTX_BAND_COUNT]= {
  49:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_COMMON_BAND_FS,
  50:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_COMMON_BAND_RACE,
  51:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_COMMON_BAND_E,
  52:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_COMMON_BAND_B,
  53:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_COMMON_BAND_A,
  54:../cleanflight/src/main/io/spektrum_vtx_control.c **** };
  55:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif
  56:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  57:../cleanflight/src/main/io/spektrum_vtx_control.c **** // RF Power Index translation tables. No generic power API available.....
  58:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  59:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_VTX_TRAMP
  60:../cleanflight/src/main/io/spektrum_vtx_control.c **** // Tramp "---", 25, 200, 400. 600 mW
  61:../cleanflight/src/main/io/spektrum_vtx_control.c **** const uint8_t vtxTrampPi[SPEKTRUM_VTX_POWER_COUNT] = {
  62:../cleanflight/src/main/io/spektrum_vtx_control.c ****                                        // Spektrum Spec    Tx menu  Tx sends   To VTX    Watt
  63:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_TRAMP_POWER_OFF,               //         Off      INHIBIT         0        0     -
  64:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_TRAMP_POWER_OFF,               //   1 -  14mW            -         -        -     -
  65:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_TRAMP_POWER_25,                //  15 -  25mW   15 -  25mW         2        1    25mW
  66:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_TRAMP_POWER_100,               //  26 -  99mW   26 -  99mW         3        2   100mW Sligh
  67:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_TRAMP_POWER_200,               // 100 - 299mW  100 - 200mW         4        3   200mW
  68:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_TRAMP_POWER_400,               // 300 - 600mW  300 - 600mW         5        4   400mW
  69:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_TRAMP_POWER_600,               // 601 - max    601+ mW             6        5   600mW Sligh
  70:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_TRAMP_POWER_200                // Manual               -           -        -     -
  71:../cleanflight/src/main/io/spektrum_vtx_control.c **** };
  72:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif // USE_VTX_TRAMP
  73:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  74:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_VTX_RTC6705
  75:../cleanflight/src/main/io/spektrum_vtx_control.c **** // RTC6705 "---", 25 or 200 mW
  76:../cleanflight/src/main/io/spektrum_vtx_control.c **** const uint8_t vtxRTC6705Pi[SPEKTRUM_VTX_POWER_COUNT] = {
  77:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_6705_POWER_OFF,                // Off
  78:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_6705_POWER_OFF,                //   1 -  14mW
  79:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_6705_POWER_25,                 //  15 -  25mW
  80:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_6705_POWER_25,                 //  26 -  99mW
  81:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_6705_POWER_200,                // 100 - 299mW
  82:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_6705_POWER_200,                // 300 - 600mW
  83:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_6705_POWER_200,                // 601 - max
  84:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_6705_POWER_200                 // Manual
  85:../cleanflight/src/main/io/spektrum_vtx_control.c **** };
  86:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif //USE_VTX_RTC6705
  87:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
  88:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_VTX_SMARTAUDIO
  89:../cleanflight/src/main/io/spektrum_vtx_control.c **** // SmartAudio "---", 25, 200, 500. 800 mW
  90:../cleanflight/src/main/io/spektrum_vtx_control.c **** const uint8_t vtxSaPi[SPEKTRUM_VTX_POWER_COUNT] = {
  91:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_SA_POWER_OFF,                  // Off
  92:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_SA_POWER_OFF,                  //   1 -  14mW
  93:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_SA_POWER_25,                   //  15 -  25mW
  94:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_SA_POWER_25,                   //  26 -  99mW
  95:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_SA_POWER_200,                  // 100 - 299mW
  96:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_SA_POWER_500,                  // 300 - 600mW
  97:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_SA_POWER_800,                  // 601 - max
  98:../cleanflight/src/main/io/spektrum_vtx_control.c ****     VTX_SA_POWER_200                   // Manual
  99:../cleanflight/src/main/io/spektrum_vtx_control.c **** };
 100:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif // USE_VTX_SMARTAUDIO
 101:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 102:../cleanflight/src/main/io/spektrum_vtx_control.c **** uint8_t convertSpektrumVtxPowerIndex(uint8_t sPower)
 103:../cleanflight/src/main/io/spektrum_vtx_control.c **** {
 144              	 .loc 2 103 0
 145              	 .cfi_startproc
 146              	 
 147              	 
 148 0000 80B5     	 push {r7,lr}
 149              	.LCFI8:
 150              	 .cfi_def_cfa_offset 8
 151              	 .cfi_offset 7,-8
 152              	 .cfi_offset 14,-4
 153 0002 84B0     	 sub sp,sp,#16
 154              	.LCFI9:
 155              	 .cfi_def_cfa_offset 24
 156 0004 00AF     	 add r7,sp,#0
 157              	.LCFI10:
 158              	 .cfi_def_cfa_register 7
 159 0006 0346     	 mov r3,r0
 160 0008 FB71     	 strb r3,[r7,#7]
 104:../cleanflight/src/main/io/spektrum_vtx_control.c ****     uint8_t devicePower = 0;
 161              	 .loc 2 104 0
 162 000a 0023     	 movs r3,#0
 163 000c FB73     	 strb r3,[r7,#15]
 105:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 106:../cleanflight/src/main/io/spektrum_vtx_control.c ****     const vtxDevice_t *vtxDevice = vtxCommonDevice();
 164              	 .loc 2 106 0
 165 000e FFF7FEFF 	 bl vtxCommonDevice
 166 0012 B860     	 str r0,[r7,#8]
 107:../cleanflight/src/main/io/spektrum_vtx_control.c ****     switch (vtxCommonGetDeviceType(vtxDevice)) {
 167              	 .loc 2 107 0
 168 0014 B868     	 ldr r0,[r7,#8]
 169 0016 FFF7FEFF 	 bl vtxCommonGetDeviceType
 170 001a 0346     	 mov r3,r0
 171 001c 032B     	 cmp r3,#3
 172 001e 02D0     	 beq .L11
 173 0020 042B     	 cmp r3,#4
 174 0022 05D0     	 beq .L12
 108:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_VTX_RTC6705
 109:../cleanflight/src/main/io/spektrum_vtx_control.c ****     case VTXDEV_RTC6705:
 110:../cleanflight/src/main/io/spektrum_vtx_control.c ****         devicePower = vtxRTC6705Pi[sPower];
 111:../cleanflight/src/main/io/spektrum_vtx_control.c ****         break;
 112:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif // USE_VTX_RTC6705
 113:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 114:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_VTX_SMARTAUDIO
 115:../cleanflight/src/main/io/spektrum_vtx_control.c ****     case VTXDEV_SMARTAUDIO:
 116:../cleanflight/src/main/io/spektrum_vtx_control.c ****         devicePower = vtxSaPi[sPower];
 117:../cleanflight/src/main/io/spektrum_vtx_control.c ****         break;
 118:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif // USE_VTX_SMARTAUDIO
 119:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 120:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_VTX_TRAMP
 121:../cleanflight/src/main/io/spektrum_vtx_control.c ****     case VTXDEV_TRAMP:
 122:../cleanflight/src/main/io/spektrum_vtx_control.c ****         devicePower = vtxTrampPi[sPower];
 123:../cleanflight/src/main/io/spektrum_vtx_control.c ****         break;
 124:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif // USE_VTX_TRAMP
 125:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 126:../cleanflight/src/main/io/spektrum_vtx_control.c ****     case VTXDEV_UNKNOWN:
 127:../cleanflight/src/main/io/spektrum_vtx_control.c ****     case VTXDEV_UNSUPPORTED:
 128:../cleanflight/src/main/io/spektrum_vtx_control.c ****     default:
 129:../cleanflight/src/main/io/spektrum_vtx_control.c ****         break;
 175              	 .loc 2 129 0
 176 0024 09E0     	 b .L13
 177              	.L11:
 116:../cleanflight/src/main/io/spektrum_vtx_control.c ****         break;
 178              	 .loc 2 116 0
 179 0026 FB79     	 ldrb r3,[r7,#7]
 180 0028 064A     	 ldr r2,.L15
 181 002a D35C     	 ldrb r3,[r2,r3]
 182 002c FB73     	 strb r3,[r7,#15]
 117:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif // USE_VTX_SMARTAUDIO
 183              	 .loc 2 117 0
 184 002e 04E0     	 b .L13
 185              	.L12:
 122:../cleanflight/src/main/io/spektrum_vtx_control.c ****         break;
 186              	 .loc 2 122 0
 187 0030 FB79     	 ldrb r3,[r7,#7]
 188 0032 054A     	 ldr r2,.L15+4
 189 0034 D35C     	 ldrb r3,[r2,r3]
 190 0036 FB73     	 strb r3,[r7,#15]
 123:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif // USE_VTX_TRAMP
 191              	 .loc 2 123 0
 192 0038 00BF     	 nop
 193              	.L13:
 130:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 131:../cleanflight/src/main/io/spektrum_vtx_control.c ****     }
 132:../cleanflight/src/main/io/spektrum_vtx_control.c ****     return devicePower;
 194              	 .loc 2 132 0
 195 003a FB7B     	 ldrb r3,[r7,#15]
 133:../cleanflight/src/main/io/spektrum_vtx_control.c **** }
 196              	 .loc 2 133 0
 197 003c 1846     	 mov r0,r3
 198 003e 1037     	 adds r7,r7,#16
 199              	.LCFI11:
 200              	 .cfi_def_cfa_offset 8
 201 0040 BD46     	 mov sp,r7
 202              	.LCFI12:
 203              	 .cfi_def_cfa_register 13
 204              	 
 205 0042 80BD     	 pop {r7,pc}
 206              	.L16:
 207              	 .align 2
 208              	.L15:
 209 0044 00000000 	 .word vtxSaPi
 210 0048 00000000 	 .word vtxTrampPi
 211              	 .cfi_endproc
 212              	.LFE533:
 214              	 .section .data.vtxControl_ipc,"aw",%progbits
 215              	 .align 2
 218              	vtxControl_ipc:
 219 0000 FF1FFF1F 	 .word 536813567
 220              	 .section .text.spektrumHandleVtxControl,"ax",%progbits
 221              	 .align 2
 222              	 .global spektrumHandleVtxControl
 223              	 .thumb
 224              	 .thumb_func
 226              	spektrumHandleVtxControl:
 227              	.LFB534:
 134:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 135:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_SPEKTRUM_REGION_CODES
 136:../cleanflight/src/main/io/spektrum_vtx_control.c **** // Just a global SpektrumRegion for now, To save VTX ctrl input to VTX tm output.
 137:../cleanflight/src/main/io/spektrum_vtx_control.c **** // Would need a PG item to survive power cycle. Not really used so let it be as is.
 138:../cleanflight/src/main/io/spektrum_vtx_control.c **** uint8_t SpektrumRegion = SPEKTRUM_VTX_REGION_NONE;
 139:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif
 140:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 141:../cleanflight/src/main/io/spektrum_vtx_control.c **** // Mark an inital invalid VTX ctrl frame to force first VTX settings cheange to actually come from 
 142:../cleanflight/src/main/io/spektrum_vtx_control.c **** static uint32_t vtxControl_ipc = ~(SPEKTRUM_VTX_CONTROL_FRAME);
 143:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 144:../cleanflight/src/main/io/spektrum_vtx_control.c **** // ############ RX task ######################
 145:../cleanflight/src/main/io/spektrum_vtx_control.c **** void spektrumHandleVtxControl(uint32_t vtxCntrl)
 146:../cleanflight/src/main/io/spektrum_vtx_control.c **** {
 228              	 .loc 2 146 0
 229              	 .cfi_startproc
 230              	 
 231              	 
 232              	 
 233 0000 80B4     	 push {r7}
 234              	.LCFI13:
 235              	 .cfi_def_cfa_offset 4
 236              	 .cfi_offset 7,-4
 237 0002 83B0     	 sub sp,sp,#12
 238              	.LCFI14:
 239              	 .cfi_def_cfa_offset 16
 240 0004 00AF     	 add r7,sp,#0
 241              	.LCFI15:
 242              	 .cfi_def_cfa_register 7
 243 0006 7860     	 str r0,[r7,#4]
 147:../cleanflight/src/main/io/spektrum_vtx_control.c ****   vtxControl_ipc = vtxCntrl;
 244              	 .loc 2 147 0
 245 0008 034A     	 ldr r2,.L18
 246 000a 7B68     	 ldr r3,[r7,#4]
 247 000c 1360     	 str r3,[r2]
 148:../cleanflight/src/main/io/spektrum_vtx_control.c **** }
 248              	 .loc 2 148 0
 249 000e 0C37     	 adds r7,r7,#12
 250              	.LCFI16:
 251              	 .cfi_def_cfa_offset 4
 252 0010 BD46     	 mov sp,r7
 253              	.LCFI17:
 254              	 .cfi_def_cfa_register 13
 255              	 
 256 0012 5DF8047B 	 ldr r7,[sp],#4
 257              	.LCFI18:
 258              	 .cfi_restore 7
 259              	 .cfi_def_cfa_offset 0
 260 0016 7047     	 bx lr
 261              	.L19:
 262              	 .align 2
 263              	.L18:
 264 0018 00000000 	 .word vtxControl_ipc
 265              	 .cfi_endproc
 266              	.LFE534:
 268              	 .section .text.spektrumVtxControl,"ax",%progbits
 269              	 .align 2
 270              	 .global spektrumVtxControl
 271              	 .thumb
 272              	 .thumb_func
 274              	spektrumVtxControl:
 275              	.LFB535:
 149:../cleanflight/src/main/io/spektrum_vtx_control.c **** // ###########################################
 150:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 151:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 152:../cleanflight/src/main/io/spektrum_vtx_control.c **** // ############ VTX_CONTROL task #############
 153:../cleanflight/src/main/io/spektrum_vtx_control.c **** void spektrumVtxControl(void)
 154:../cleanflight/src/main/io/spektrum_vtx_control.c **** {
 276              	 .loc 2 154 0
 277              	 .cfi_startproc
 278              	 
 279              	 
 280 0000 80B5     	 push {r7,lr}
 281              	.LCFI19:
 282              	 .cfi_def_cfa_offset 8
 283              	 .cfi_offset 7,-8
 284              	 .cfi_offset 14,-4
 285 0002 8AB0     	 sub sp,sp,#40
 286              	.LCFI20:
 287              	 .cfi_def_cfa_offset 48
 288 0004 00AF     	 add r7,sp,#0
 289              	.LCFI21:
 290              	 .cfi_def_cfa_register 7
 155:../cleanflight/src/main/io/spektrum_vtx_control.c ****     static uint32_t prevVtxControl =0;
 156:../cleanflight/src/main/io/spektrum_vtx_control.c ****     uint32_t vtxControl;
 157:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 158:../cleanflight/src/main/io/spektrum_vtx_control.c ****     // Check for invalid VTX ctrl frames
 159:../cleanflight/src/main/io/spektrum_vtx_control.c ****     if ((vtxControl_ipc & SPEKTRUM_VTX_CONTROL_FRAME_MASK) != SPEKTRUM_VTX_CONTROL_FRAME) return;
 291              	 .loc 2 159 0
 292 0006 684B     	 ldr r3,.L31
 293 0008 1B68     	 ldr r3,[r3]
 294 000a 03F0F023 	 and r3,r3,#-268374016
 295 000e B3F1E02F 	 cmp r3,#-536813568
 296 0012 00D0     	 beq .L21
 297 0014 C4E0     	 b .L20
 298              	.L21:
 160:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 161:../cleanflight/src/main/io/spektrum_vtx_control.c ****     vtxControl = vtxControl_ipc;
 299              	 .loc 2 161 0
 300 0016 644B     	 ldr r3,.L31
 301 0018 1B68     	 ldr r3,[r3]
 302 001a 7B62     	 str r3,[r7,#36]
 162:../cleanflight/src/main/io/spektrum_vtx_control.c ****     vtxControl_ipc = 0;
 303              	 .loc 2 162 0
 304 001c 624B     	 ldr r3,.L31
 305 001e 0022     	 movs r2,#0
 306 0020 1A60     	 str r2,[r3]
 163:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 164:../cleanflight/src/main/io/spektrum_vtx_control.c ****     if (prevVtxControl == vtxControl) return;
 307              	 .loc 2 164 0
 308 0022 624B     	 ldr r3,.L31+4
 309 0024 1A68     	 ldr r2,[r3]
 310 0026 7B6A     	 ldr r3,[r7,#36]
 311 0028 9A42     	 cmp r2,r3
 312 002a 00D1     	 bne .L23
 313 002c B8E0     	 b .L20
 314              	.L23:
 165:../cleanflight/src/main/io/spektrum_vtx_control.c ****     prevVtxControl = vtxControl;
 315              	 .loc 2 165 0
 316 002e 5F4A     	 ldr r2,.L31+4
 317 0030 7B6A     	 ldr r3,[r7,#36]
 318 0032 1360     	 str r3,[r2]
 166:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 167:../cleanflight/src/main/io/spektrum_vtx_control.c ****     spektrumVtx_t vtx = {
 319              	 .loc 2 167 0
 320 0034 07F11403 	 add r3,r7,#20
 321 0038 0022     	 movs r2,#0
 322 003a 1A60     	 str r2,[r3]
 323 003c 0433     	 adds r3,r3,#4
 324 003e 0022     	 movs r2,#0
 325 0040 1A80     	 strh r2,[r3]
 326 0042 0233     	 adds r3,r3,#2
 327 0044 0022     	 movs r2,#0
 328 0046 1A70     	 strb r2,[r3]
 329 0048 0133     	 adds r3,r3,#1
 168:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .pitMode = (vtxControl & SPEKTRUM_VTX_PIT_MODE_MASK) >> SPEKTRUM_VTX_PIT_MODE_SHIFT,
 169:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .region  = (vtxControl & SPEKTRUM_VTX_REGION_MASK)   >> SPEKTRUM_VTX_REGION_SHIFT,
 170:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .power   = (vtxControl & SPEKTRUM_VTX_POWER_MASK)    >> SPEKTRUM_VTX_POWER_SHIFT,
 171:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .band    = (vtxControl & SPEKTRUM_VTX_BAND_MASK)     >> SPEKTRUM_VTX_BAND_SHIFT,
 330              	 .loc 2 171 0
 331 004a 7B6A     	 ldr r3,[r7,#36]
 332 004c 03F46003 	 and r3,r3,#14680064
 333 0050 5B0D     	 lsrs r3,r3,#21
 167:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .pitMode = (vtxControl & SPEKTRUM_VTX_PIT_MODE_MASK) >> SPEKTRUM_VTX_PIT_MODE_SHIFT,
 334              	 .loc 2 167 0
 335 0052 DBB2     	 uxtb r3,r3
 336 0054 3B75     	 strb r3,[r7,#20]
 172:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .channel = (vtxControl & SPEKTRUM_VTX_CHANNEL_MASK)  >> SPEKTRUM_VTX_CHANNEL_SHIFT,
 337              	 .loc 2 172 0
 338 0056 7B6A     	 ldr r3,[r7,#36]
 339 0058 03F47023 	 and r3,r3,#983040
 340 005c 1B0C     	 lsrs r3,r3,#16
 167:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .pitMode = (vtxControl & SPEKTRUM_VTX_PIT_MODE_MASK) >> SPEKTRUM_VTX_PIT_MODE_SHIFT,
 341              	 .loc 2 167 0
 342 005e DBB2     	 uxtb r3,r3
 343 0060 7B75     	 strb r3,[r7,#21]
 344 0062 7B6A     	 ldr r3,[r7,#36]
 345 0064 DBB2     	 uxtb r3,r3
 346 0066 03F00703 	 and r3,r3,#7
 347 006a DBB2     	 uxtb r3,r3
 348 006c BB75     	 strb r3,[r7,#22]
 169:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .power   = (vtxControl & SPEKTRUM_VTX_POWER_MASK)    >> SPEKTRUM_VTX_POWER_SHIFT,
 349              	 .loc 2 169 0
 350 006e 7B6A     	 ldr r3,[r7,#36]
 351 0070 03F00803 	 and r3,r3,#8
 352 0074 DB08     	 lsrs r3,r3,#3
 167:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .pitMode = (vtxControl & SPEKTRUM_VTX_PIT_MODE_MASK) >> SPEKTRUM_VTX_PIT_MODE_SHIFT,
 353              	 .loc 2 167 0
 354 0076 DBB2     	 uxtb r3,r3
 355 0078 FB75     	 strb r3,[r7,#23]
 168:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .region  = (vtxControl & SPEKTRUM_VTX_REGION_MASK)   >> SPEKTRUM_VTX_REGION_SHIFT,
 356              	 .loc 2 168 0
 357 007a 7B6A     	 ldr r3,[r7,#36]
 358 007c 03F01003 	 and r3,r3,#16
 359 0080 1B09     	 lsrs r3,r3,#4
 167:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .pitMode = (vtxControl & SPEKTRUM_VTX_PIT_MODE_MASK) >> SPEKTRUM_VTX_PIT_MODE_SHIFT,
 360              	 .loc 2 167 0
 361 0082 DBB2     	 uxtb r3,r3
 362 0084 3B76     	 strb r3,[r7,#24]
 173:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_SPEKTRUM_REGION_CODES
 174:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .region  = (vtxControl & SPEKTRUM_VTX_REGION_MASK)   >> SPEKTRUM_VTX_REGION_SHIFT;
 175:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif
 176:../cleanflight/src/main/io/spektrum_vtx_control.c ****     };
 177:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 178:../cleanflight/src/main/io/spektrum_vtx_control.c ****     const vtxSettingsConfig_t prevSettings = {
 363              	 .loc 2 178 0
 364 0086 0023     	 movs r3,#0
 365 0088 FB60     	 str r3,[r7,#12]
 366 008a 0023     	 movs r3,#0
 367 008c 3B61     	 str r3,[r7,#16]
 179:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .band    = vtxSettingsConfig()->band,
 368              	 .loc 2 179 0
 369 008e FFF7FEFF 	 bl vtxSettingsConfig
 370 0092 0346     	 mov r3,r0
 371 0094 1B78     	 ldrb r3,[r3]
 178:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .band    = vtxSettingsConfig()->band,
 372              	 .loc 2 178 0
 373 0096 3B73     	 strb r3,[r7,#12]
 180:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .channel = vtxSettingsConfig()->channel,
 374              	 .loc 2 180 0
 375 0098 FFF7FEFF 	 bl vtxSettingsConfig
 376 009c 0346     	 mov r3,r0
 377 009e 5B78     	 ldrb r3,[r3,#1]
 178:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .band    = vtxSettingsConfig()->band,
 378              	 .loc 2 178 0
 379 00a0 7B73     	 strb r3,[r7,#13]
 181:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .freq    = vtxSettingsConfig()->freq,
 182:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .power   = vtxSettingsConfig()->power,
 380              	 .loc 2 182 0
 381 00a2 FFF7FEFF 	 bl vtxSettingsConfig
 382 00a6 0346     	 mov r3,r0
 383 00a8 9B78     	 ldrb r3,[r3,#2]
 178:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .band    = vtxSettingsConfig()->band,
 384              	 .loc 2 178 0
 385 00aa BB73     	 strb r3,[r7,#14]
 181:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .freq    = vtxSettingsConfig()->freq,
 386              	 .loc 2 181 0
 387 00ac FFF7FEFF 	 bl vtxSettingsConfig
 388 00b0 0346     	 mov r3,r0
 389 00b2 B3F80330 	 ldrh r3,[r3,#3]
 390 00b6 9BB2     	 uxth r3,r3
 178:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .band    = vtxSettingsConfig()->band,
 391              	 .loc 2 178 0
 392 00b8 A7F80F30 	 strh r3,[r7,#15]
 183:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .lowPowerDisarm = vtxSettingsConfig()->lowPowerDisarm,
 393              	 .loc 2 183 0
 394 00bc FFF7FEFF 	 bl vtxSettingsConfig
 395 00c0 0346     	 mov r3,r0
 396 00c2 DB79     	 ldrb r3,[r3,#7]
 178:../cleanflight/src/main/io/spektrum_vtx_control.c ****         .band    = vtxSettingsConfig()->band,
 397              	 .loc 2 178 0
 398 00c4 FB74     	 strb r3,[r7,#19]
 184:../cleanflight/src/main/io/spektrum_vtx_control.c ****     };
 185:../cleanflight/src/main/io/spektrum_vtx_control.c ****     vtxSettingsConfig_t newSettings = prevSettings;
 399              	 .loc 2 185 0
 400 00c6 3B1D     	 adds r3,r7,#4
 401 00c8 07F10C02 	 add r2,r7,#12
 402 00cc 92E80300 	 ldmia r2,{r0,r1}
 403 00d0 83E80300 	 stmia r3,{r0,r1}
 186:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 187:../cleanflight/src/main/io/spektrum_vtx_control.c ****     vtxDevice_t *vtxDevice = vtxCommonDevice();
 404              	 .loc 2 187 0
 405 00d4 FFF7FEFF 	 bl vtxCommonDevice
 406 00d8 3862     	 str r0,[r7,#32]
 188:../cleanflight/src/main/io/spektrum_vtx_control.c ****     if (vtxDevice) {
 407              	 .loc 2 188 0
 408 00da 3B6A     	 ldr r3,[r7,#32]
 409 00dc 002B     	 cmp r3,#0
 410 00de 3BD0     	 beq .L24
 411              	.LBB2:
 189:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_VTX_COMMON_FREQ_API
 190:../cleanflight/src/main/io/spektrum_vtx_control.c ****         uint16_t freq = SpektrumVtxfrequencyTable[vtx.band][vtx.channel];
 191:../cleanflight/src/main/io/spektrum_vtx_control.c ****         if (prevSettings.freq != freq) {
 192:../cleanflight/src/main/io/spektrum_vtx_control.c ****             newSettings.band    = VTX_COMMON_BAND_USER;
 193:../cleanflight/src/main/io/spektrum_vtx_control.c ****             newSettings.channel = vtx.channel;
 194:../cleanflight/src/main/io/spektrum_vtx_control.c ****             newSettings.freq    = freq;
 195:../cleanflight/src/main/io/spektrum_vtx_control.c ****         }
 196:../cleanflight/src/main/io/spektrum_vtx_control.c **** #else
 197:../cleanflight/src/main/io/spektrum_vtx_control.c ****         // Convert to the internal Common Band index
 198:../cleanflight/src/main/io/spektrum_vtx_control.c ****         const uint8_t band    = spek2commonBand[vtx.band];
 412              	 .loc 2 198 0
 413 00e0 3B7D     	 ldrb r3,[r7,#20]
 414 00e2 1A46     	 mov r2,r3
 415 00e4 324B     	 ldr r3,.L31+8
 416 00e6 9B5C     	 ldrb r3,[r3,r2]
 417 00e8 FB77     	 strb r3,[r7,#31]
 199:../cleanflight/src/main/io/spektrum_vtx_control.c ****         const uint8_t channel = vtx.channel +1; // 0 based to 1 based
 418              	 .loc 2 199 0
 419 00ea 7B7D     	 ldrb r3,[r7,#21]
 420 00ec 0133     	 adds r3,r3,#1
 421 00ee BB77     	 strb r3,[r7,#30]
 200:../cleanflight/src/main/io/spektrum_vtx_control.c ****         if ((prevSettings.band != band) || (prevSettings.channel != channel)) {
 422              	 .loc 2 200 0
 423 00f0 3B7B     	 ldrb r3,[r7,#12]
 424 00f2 FA7F     	 ldrb r2,[r7,#31]
 425 00f4 9A42     	 cmp r2,r3
 426 00f6 03D1     	 bne .L25
 427              	 .loc 2 200 0 is_stmt 0 discriminator 1
 428 00f8 7B7B     	 ldrb r3,[r7,#13]
 429 00fa BA7F     	 ldrb r2,[r7,#30]
 430 00fc 9A42     	 cmp r2,r3
 431 00fe 0CD0     	 beq .L26
 432              	.L25:
 201:../cleanflight/src/main/io/spektrum_vtx_control.c ****             newSettings.band    = band;
 433              	 .loc 2 201 0 is_stmt 1
 434 0100 FB7F     	 ldrb r3,[r7,#31]
 435 0102 3B71     	 strb r3,[r7,#4]
 202:../cleanflight/src/main/io/spektrum_vtx_control.c ****             newSettings.channel = channel;
 436              	 .loc 2 202 0
 437 0104 BB7F     	 ldrb r3,[r7,#30]
 438 0106 7B71     	 strb r3,[r7,#5]
 203:../cleanflight/src/main/io/spektrum_vtx_control.c ****             newSettings.freq    = vtx58_Bandchan2Freq(band, channel);
 439              	 .loc 2 203 0
 440 0108 FA7F     	 ldrb r2,[r7,#31]
 441 010a BB7F     	 ldrb r3,[r7,#30]
 442 010c 1046     	 mov r0,r2
 443 010e 1946     	 mov r1,r3
 444 0110 FFF7FEFF 	 bl vtx58_Bandchan2Freq
 445 0114 0346     	 mov r3,r0
 446 0116 A7F80730 	 strh r3,[r7,#7]
 447              	.L26:
 204:../cleanflight/src/main/io/spektrum_vtx_control.c ****         }
 205:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif
 206:../cleanflight/src/main/io/spektrum_vtx_control.c ****         // Seems to be no unified internal VTX API standard for power levels/indexes, VTX device br
 207:../cleanflight/src/main/io/spektrum_vtx_control.c ****         const uint8_t power = convertSpektrumVtxPowerIndex(vtx.power);
 448              	 .loc 2 207 0
 449 011a BB7D     	 ldrb r3,[r7,#22]
 450 011c 1846     	 mov r0,r3
 451 011e FFF7FEFF 	 bl convertSpektrumVtxPowerIndex
 452 0122 0346     	 mov r3,r0
 453 0124 7B77     	 strb r3,[r7,#29]
 208:../cleanflight/src/main/io/spektrum_vtx_control.c ****         if (prevSettings.power != power) {
 454              	 .loc 2 208 0
 455 0126 BB7B     	 ldrb r3,[r7,#14]
 456 0128 7A7F     	 ldrb r2,[r7,#29]
 457 012a 9A42     	 cmp r2,r3
 458 012c 01D0     	 beq .L27
 209:../cleanflight/src/main/io/spektrum_vtx_control.c ****             newSettings.power   = power;
 459              	 .loc 2 209 0
 460 012e 7B7F     	 ldrb r3,[r7,#29]
 461 0130 BB71     	 strb r3,[r7,#6]
 462              	.L27:
 210:../cleanflight/src/main/io/spektrum_vtx_control.c ****         }
 211:../cleanflight/src/main/io/spektrum_vtx_control.c ****         // Everyone seems to agree on what PIT ON/OFF means
 212:../cleanflight/src/main/io/spektrum_vtx_control.c ****         uint8_t currentPitMode = 0;
 463              	 .loc 2 212 0
 464 0132 0023     	 movs r3,#0
 465 0134 FB70     	 strb r3,[r7,#3]
 213:../cleanflight/src/main/io/spektrum_vtx_control.c ****         if (vtxCommonGetPitMode(vtxDevice, &currentPitMode)) {
 466              	 .loc 2 213 0
 467 0136 FB1C     	 adds r3,r7,#3
 468 0138 386A     	 ldr r0,[r7,#32]
 469 013a 1946     	 mov r1,r3
 470 013c FFF7FEFF 	 bl vtxCommonGetPitMode
 471 0140 0346     	 mov r3,r0
 472 0142 002B     	 cmp r3,#0
 473 0144 08D0     	 beq .L24
 214:../cleanflight/src/main/io/spektrum_vtx_control.c ****             if (currentPitMode != vtx.pitMode) {
 474              	 .loc 2 214 0
 475 0146 3A7E     	 ldrb r2,[r7,#24]
 476 0148 FB78     	 ldrb r3,[r7,#3]
 477 014a 9A42     	 cmp r2,r3
 478 014c 04D0     	 beq .L24
 215:../cleanflight/src/main/io/spektrum_vtx_control.c ****                 vtxCommonSetPitMode(vtxDevice, vtx.pitMode);
 479              	 .loc 2 215 0
 480 014e 3B7E     	 ldrb r3,[r7,#24]
 481 0150 386A     	 ldr r0,[r7,#32]
 482 0152 1946     	 mov r1,r3
 483 0154 FFF7FEFF 	 bl vtxCommonSetPitMode
 484              	.L24:
 485              	.LBE2:
 216:../cleanflight/src/main/io/spektrum_vtx_control.c ****             }
 217:../cleanflight/src/main/io/spektrum_vtx_control.c ****         }
 218:../cleanflight/src/main/io/spektrum_vtx_control.c ****     }
 219:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 220:../cleanflight/src/main/io/spektrum_vtx_control.c ****     if (memcmp(&prevSettings,&newSettings,sizeof(vtxSettingsConfig_t))) {
 486              	 .loc 2 220 0
 487 0158 07F10C02 	 add r2,r7,#12
 488 015c 3B1D     	 adds r3,r7,#4
 489 015e 1046     	 mov r0,r2
 490 0160 1946     	 mov r1,r3
 491 0162 0822     	 movs r2,#8
 492 0164 FFF7FEFF 	 bl memcmp
 493 0168 0346     	 mov r3,r0
 494 016a 002B     	 cmp r3,#0
 495 016c 18D0     	 beq .L20
 221:../cleanflight/src/main/io/spektrum_vtx_control.c ****         vtxSettingsConfigMutable()->band = newSettings.band;
 496              	 .loc 2 221 0
 497 016e FFF7FEFF 	 bl vtxSettingsConfigMutable
 498 0172 0346     	 mov r3,r0
 499 0174 3A79     	 ldrb r2,[r7,#4]
 500 0176 1A70     	 strb r2,[r3]
 222:../cleanflight/src/main/io/spektrum_vtx_control.c ****         vtxSettingsConfigMutable()->channel = newSettings.channel;
 501              	 .loc 2 222 0
 502 0178 FFF7FEFF 	 bl vtxSettingsConfigMutable
 503 017c 0346     	 mov r3,r0
 504 017e 7A79     	 ldrb r2,[r7,#5]
 505 0180 5A70     	 strb r2,[r3,#1]
 223:../cleanflight/src/main/io/spektrum_vtx_control.c ****         vtxSettingsConfigMutable()->power   = newSettings.power;
 506              	 .loc 2 223 0
 507 0182 FFF7FEFF 	 bl vtxSettingsConfigMutable
 508 0186 0346     	 mov r3,r0
 509 0188 BA79     	 ldrb r2,[r7,#6]
 510 018a 9A70     	 strb r2,[r3,#2]
 224:../cleanflight/src/main/io/spektrum_vtx_control.c ****         vtxSettingsConfigMutable()->freq    = newSettings.freq;
 511              	 .loc 2 224 0
 512 018c FFF7FEFF 	 bl vtxSettingsConfigMutable
 513 0190 0346     	 mov r3,r0
 514 0192 B7F80720 	 ldrh r2,[r7,#7]
 515 0196 92B2     	 uxth r2,r2
 516 0198 A3F80320 	 strh r2,[r3,#3]
 225:../cleanflight/src/main/io/spektrum_vtx_control.c ****         saveConfigAndNotify();
 517              	 .loc 2 225 0
 518 019c FFF7FEFF 	 bl saveConfigAndNotify
 519              	.L20:
 226:../cleanflight/src/main/io/spektrum_vtx_control.c ****     }
 227:../cleanflight/src/main/io/spektrum_vtx_control.c **** #ifdef USE_SPEKTRUM_REGION_CODES
 228:../cleanflight/src/main/io/spektrum_vtx_control.c ****     // Save region code
 229:../cleanflight/src/main/io/spektrum_vtx_control.c ****     SpektrumRegion = vtx.region;
 230:../cleanflight/src/main/io/spektrum_vtx_control.c **** #endif
 231:../cleanflight/src/main/io/spektrum_vtx_control.c **** 
 232:../cleanflight/src/main/io/spektrum_vtx_control.c **** }
 520              	 .loc 2 232 0
 521 01a0 2837     	 adds r7,r7,#40
 522              	.LCFI22:
 523              	 .cfi_def_cfa_offset 8
 524 01a2 BD46     	 mov sp,r7
 525              	.LCFI23:
 526              	 .cfi_def_cfa_register 13
 527              	 
 528 01a4 80BD     	 pop {r7,pc}
 529              	.L32:
 530 01a6 00BF     	 .align 2
 531              	.L31:
 532 01a8 00000000 	 .word vtxControl_ipc
 533 01ac 00000000 	 .word prevVtxControl.11782
 534 01b0 00000000 	 .word spek2commonBand
 535              	 .cfi_endproc
 536              	.LFE535:
 538              	 .section .bss.prevVtxControl.11782,"aw",%nobits
 539              	 .align 2
 542              	prevVtxControl.11782:
 543 0000 00000000 	 .space 4
 544              	 .text
 545              	.Letext0:
 546              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 547              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 548              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 549              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 550              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 551              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/vtx_common.h"
 552              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/spektrum_vtx_control.h"
 553              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 554              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 spektrum_vtx_control.c
    {standard input}:20     .text.vtxSettingsConfig:00000000 $t
    {standard input}:24     .text.vtxSettingsConfig:00000000 vtxSettingsConfig
    {standard input}:54     .text.vtxSettingsConfig:00000010 $d
    {standard input}:59     .text.vtxSettingsConfigMutable:00000000 $t
    {standard input}:63     .text.vtxSettingsConfigMutable:00000000 vtxSettingsConfigMutable
    {standard input}:92     .text.vtxSettingsConfigMutable:00000010 $d
    {standard input}:101    .rodata.spek2commonBand:00000000 spek2commonBand
    {standard input}:98     .rodata.spek2commonBand:00000000 $d
    {standard input}:112    .rodata.vtxTrampPi:00000000 vtxTrampPi
    {standard input}:109    .rodata.vtxTrampPi:00000000 $d
    {standard input}:126    .rodata.vtxSaPi:00000000 vtxSaPi
    {standard input}:123    .rodata.vtxSaPi:00000000 $d
    {standard input}:136    .text.convertSpektrumVtxPowerIndex:00000000 $t
    {standard input}:141    .text.convertSpektrumVtxPowerIndex:00000000 convertSpektrumVtxPowerIndex
    {standard input}:209    .text.convertSpektrumVtxPowerIndex:00000044 $d
    {standard input}:215    .data.vtxControl_ipc:00000000 $d
    {standard input}:218    .data.vtxControl_ipc:00000000 vtxControl_ipc
    {standard input}:221    .text.spektrumHandleVtxControl:00000000 $t
    {standard input}:226    .text.spektrumHandleVtxControl:00000000 spektrumHandleVtxControl
    {standard input}:264    .text.spektrumHandleVtxControl:00000018 $d
    {standard input}:269    .text.spektrumVtxControl:00000000 $t
    {standard input}:274    .text.spektrumVtxControl:00000000 spektrumVtxControl
    {standard input}:532    .text.spektrumVtxControl:000001a8 $d
    {standard input}:542    .bss.prevVtxControl.11782:00000000 prevVtxControl.11782
    {standard input}:539    .bss.prevVtxControl.11782:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vtxSettingsConfig_System
vtxCommonDevice
vtxCommonGetDeviceType
vtx58_Bandchan2Freq
vtxCommonGetPitMode
vtxCommonSetPitMode
memcmp
saveConfigAndNotify
