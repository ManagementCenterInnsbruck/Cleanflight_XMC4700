   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "vtx_smartaudio.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .comm pCurrentDisplay,4,4
  20              	 .section .text.vtxConfig,"ax",%progbits
  21              	 .align 2
  22              	 .thumb
  23              	 .thumb_func
  25              	vtxConfig:
  26              	.LFB538:
  27              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/vtx_control.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** #include <stdbool.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** #include <stdint.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** #include "platform.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** #include "pg/pg.h"
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** #include "fc/rc_modes.h"
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** 
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** #define MAX_CHANNEL_ACTIVATION_CONDITION_COUNT  10
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** 
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** typedef struct vtxChannelActivationCondition_s {
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****     uint8_t auxChannelIndex;
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****     uint8_t band;
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****     uint8_t channel;
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****     channelRange_t range;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** } vtxChannelActivationCondition_t;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** 
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** typedef struct vtxConfig_s {
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****     vtxChannelActivationCondition_t vtxChannelActivationConditions[MAX_CHANNEL_ACTIVATION_CONDITION
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h ****     uint8_t halfDuplex;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** } vtxConfig_t;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** 
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\vtx_control.h **** PG_DECLARE(vtxConfig_t, vtxConfig);
  28              	 .loc 1 45 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 00AF     	 add r7,sp,#0
  38              	.LCFI1:
  39              	 .cfi_def_cfa_register 7
  40              	 .loc 1 45 0
  41 0004 024B     	 ldr r3,.L3
  42 0006 1846     	 mov r0,r3
  43 0008 BD46     	 mov sp,r7
  44              	.LCFI2:
  45              	 .cfi_def_cfa_register 13
  46              	 
  47 000a 5DF8047B 	 ldr r7,[sp],#4
  48              	.LCFI3:
  49              	 .cfi_restore 7
  50              	 .cfi_def_cfa_offset 0
  51 000e 7047     	 bx lr
  52              	.L4:
  53              	 .align 2
  54              	.L3:
  55 0010 00000000 	 .word vtxConfig_System
  56              	 .cfi_endproc
  57              	.LFE538:
  59              	 .section .bss.smartAudioSerialPort,"aw",%nobits
  60              	 .align 2
  63              	smartAudioSerialPort:
  64 0000 00000000 	 .space 4
  65              	 .global saPowerNames
  66              	 .section .rodata
  67              	 .align 2
  68              	.LC0:
  69 0000 2D2D2D00 	 .ascii "---\000"
  70              	 .align 2
  71              	.LC1:
  72 0004 32352000 	 .ascii "25 \000"
  73              	 .align 2
  74              	.LC2:
  75 0008 32303000 	 .ascii "200\000"
  76              	 .align 2
  77              	.LC3:
  78 000c 35303000 	 .ascii "500\000"
  79              	 .align 2
  80              	.LC4:
  81 0010 38303000 	 .ascii "800\000"
  82              	 .section .rodata.saPowerNames,"a",%progbits
  83              	 .align 2
  86              	saPowerNames:
  87 0000 00000000 	 .word .LC0
  88 0004 04000000 	 .word .LC1
  89 0008 08000000 	 .word .LC2
  90 000c 0C000000 	 .word .LC3
  91 0010 10000000 	 .word .LC4
  92              	 .section .rodata.saVTable,"a",%progbits
  93              	 .align 2
  96              	saVTable:
  97 0000 00000000 	 .word vtxSAProcess
  98 0004 00000000 	 .word vtxSAGetDeviceType
  99 0008 00000000 	 .word vtxSAIsReady
 100 000c 00000000 	 .word vtxSASetBandAndChannel
 101 0010 00000000 	 .word vtxSASetPowerByIndex
 102 0014 00000000 	 .word vtxSASetPitMode
 103 0018 00000000 	 .word vtxSASetFreq
 104 001c 00000000 	 .word vtxSAGetBandAndChannel
 105 0020 00000000 	 .word vtxSAGetPowerIndex
 106 0024 00000000 	 .word vtxSAGetPitMode
 107 0028 00000000 	 .word vtxSAGetFreq
 108              	 .section .data.vtxSmartAudio,"aw",%progbits
 109              	 .align 2
 112              	vtxSmartAudio:
 113 0000 00000000 	 .word saVTable
 114 0004 05       	 .byte 5
 115 0005 08       	 .byte 8
 116 0006 04       	 .byte 4
 117 0007 00       	 .space 1
 118 0008 00000000 	 .space 4
 119 000c 00000000 	 .word vtx58BandNames
 120 0010 00000000 	 .word vtx58ChannelNames
 121 0014 00000000 	 .word saPowerNames
 122 0018 00000000 	 .space 6
 122      0000
 123              	 .comm smartAudioCommand_e,1,1
 124              	 .global saStat
 125 001e 0000     	 .section .bss.saStat,"aw",%nobits
 126              	 .align 2
 129              	saStat:
 130 0000 00000000 	 .space 14
 130      00000000 
 130      00000000 
 130      0000
 131              	 .global saPowerTable
 132 000e 0000     	 .section .data.saPowerTable,"aw",%progbits
 133              	 .align 2
 136              	saPowerTable:
 137 0000 19000000 	 .word 25
 138 0004 0700     	 .short 7
 139 0006 0000     	 .short 0
 140 0008 C8000000 	 .word 200
 141 000c 1000     	 .short 16
 142 000e 0100     	 .short 1
 143 0010 F4010000 	 .word 500
 144 0014 1900     	 .short 25
 145 0016 0200     	 .short 2
 146 0018 20030000 	 .word 800
 147 001c 2800     	 .short 40
 148 001e 0300     	 .short 3
 149              	 .global saDevice
 150              	 .section .data.saDevice,"aw",%progbits
 151              	 .align 2
 154              	saDevice:
 155 0000 00       	 .byte 0
 156 0001 FF       	 .byte -1
 157 0002 FF       	 .byte -1
 158 0003 00       	 .byte 0
 159 0004 0000     	 .short 0
 160 0006 0000     	 .short 0
 161              	 .section .bss.saDevicePrev,"aw",%nobits
 162              	 .align 2
 165              	saDevicePrev:
 166 0000 00000000 	 .space 8
 166      00000000 
 167              	 .section .data.saLockMode,"aw",%progbits
 170              	saLockMode:
 171 0000 08       	 .byte 8
 172              	 .global saDeferred
 173              	 .section .data.saDeferred,"aw",%progbits
 176              	saDeferred:
 177 0000 01       	 .byte 1
 178              	 .section .bss.sa_rbuf,"aw",%nobits
 179              	 .align 2
 182              	sa_rbuf:
 183 0000 00000000 	 .space 15
 183      00000000 
 183      00000000 
 183      000000
 184 000f 00       	 .section .text.CRC8,"ax",%progbits
 185              	 .align 2
 186              	 .thumb
 187              	 .thumb_func
 189              	CRC8:
 190              	.LFB540:
 191              	 .file 2 "../cleanflight/src/main/io/vtx_smartaudio.c"
   1:../cleanflight/src/main/io/vtx_smartaudio.c **** /*
   2:../cleanflight/src/main/io/vtx_smartaudio.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/io/vtx_smartaudio.c ****  *
   4:../cleanflight/src/main/io/vtx_smartaudio.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/io/vtx_smartaudio.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/io/vtx_smartaudio.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/io/vtx_smartaudio.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/io/vtx_smartaudio.c ****  * any later version.
   9:../cleanflight/src/main/io/vtx_smartaudio.c ****  *
  10:../cleanflight/src/main/io/vtx_smartaudio.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/io/vtx_smartaudio.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/io/vtx_smartaudio.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/io/vtx_smartaudio.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/io/vtx_smartaudio.c ****  *
  15:../cleanflight/src/main/io/vtx_smartaudio.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/io/vtx_smartaudio.c ****  * along with this software.
  17:../cleanflight/src/main/io/vtx_smartaudio.c ****  *
  18:../cleanflight/src/main/io/vtx_smartaudio.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/io/vtx_smartaudio.c ****  */
  20:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  21:../cleanflight/src/main/io/vtx_smartaudio.c **** /* Created by jflyper */
  22:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  23:../cleanflight/src/main/io/vtx_smartaudio.c **** #include <stdbool.h>
  24:../cleanflight/src/main/io/vtx_smartaudio.c **** #include <stdint.h>
  25:../cleanflight/src/main/io/vtx_smartaudio.c **** #include <string.h>
  26:../cleanflight/src/main/io/vtx_smartaudio.c **** #include <ctype.h>
  27:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  28:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "platform.h"
  29:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  30:../cleanflight/src/main/io/vtx_smartaudio.c **** #if defined(USE_VTX_SMARTAUDIO) && defined(USE_VTX_CONTROL)
  31:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  32:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "build/debug.h"
  33:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  34:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "cms/cms.h"
  35:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "cms/cms_menu_vtx_smartaudio.h"
  36:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  37:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "common/maths.h"
  38:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "common/printf.h"
  39:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "common/utils.h"
  40:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  41:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "drivers/time.h"
  42:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "drivers/vtx_common.h"
  43:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  44:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "io/serial.h"
  45:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "io/vtx.h"
  46:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "io/vtx_control.h"
  47:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "io/vtx_smartaudio.h"
  48:../cleanflight/src/main/io/vtx_smartaudio.c **** #include "io/vtx_string.h"
  49:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  50:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  51:../cleanflight/src/main/io/vtx_smartaudio.c **** // Timing parameters
  52:../cleanflight/src/main/io/vtx_smartaudio.c **** // Note that vtxSAProcess() is normally called at 200ms interval
  53:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SMARTAUDIO_CMD_TIMEOUT       120    // Time until the command is considered lost
  54:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SMARTAUDIO_POLLING_INTERVAL  150    // Minimum time between state polling
  55:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SMARTAUDIO_POLLING_WINDOW   1000    // Time window after command polling for state change
  56:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  57:../cleanflight/src/main/io/vtx_smartaudio.c **** //#define USE_SMARTAUDIO_DPRINTF
  58:../cleanflight/src/main/io/vtx_smartaudio.c **** //#define DPRINTF_SERIAL_PORT SERIAL_PORT_USART1
  59:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  60:../cleanflight/src/main/io/vtx_smartaudio.c **** #ifdef USE_SMARTAUDIO_DPRINTF
  61:../cleanflight/src/main/io/vtx_smartaudio.c **** serialPort_t *debugSerialPort = NULL;
  62:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif // USE_SMARTAUDIO_DPRINTF
  63:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  64:../cleanflight/src/main/io/vtx_smartaudio.c **** static serialPort_t *smartAudioSerialPort = NULL;
  65:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  66:../cleanflight/src/main/io/vtx_smartaudio.c **** #if defined(USE_CMS) || defined(USE_VTX_COMMON)
  67:../cleanflight/src/main/io/vtx_smartaudio.c **** const char * const saPowerNames[VTX_SMARTAUDIO_POWER_COUNT+1] = {
  68:../cleanflight/src/main/io/vtx_smartaudio.c ****     "---", "25 ", "200", "500", "800",
  69:../cleanflight/src/main/io/vtx_smartaudio.c **** };
  70:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
  71:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  72:../cleanflight/src/main/io/vtx_smartaudio.c **** #ifdef USE_VTX_COMMON
  73:../cleanflight/src/main/io/vtx_smartaudio.c **** static const vtxVTable_t saVTable;    // Forward
  74:../cleanflight/src/main/io/vtx_smartaudio.c **** static vtxDevice_t vtxSmartAudio = {
  75:../cleanflight/src/main/io/vtx_smartaudio.c ****     .vTable = &saVTable,
  76:../cleanflight/src/main/io/vtx_smartaudio.c ****     .capability.bandCount = VTX_SMARTAUDIO_BAND_COUNT,
  77:../cleanflight/src/main/io/vtx_smartaudio.c ****     .capability.channelCount = VTX_SMARTAUDIO_CHANNEL_COUNT,
  78:../cleanflight/src/main/io/vtx_smartaudio.c ****     .capability.powerCount = VTX_SMARTAUDIO_POWER_COUNT,
  79:../cleanflight/src/main/io/vtx_smartaudio.c ****     .bandNames = (char **)vtx58BandNames,
  80:../cleanflight/src/main/io/vtx_smartaudio.c ****     .channelNames = (char **)vtx58ChannelNames,
  81:../cleanflight/src/main/io/vtx_smartaudio.c ****     .powerNames = (char **)saPowerNames,
  82:../cleanflight/src/main/io/vtx_smartaudio.c **** };
  83:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
  84:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  85:../cleanflight/src/main/io/vtx_smartaudio.c **** // SmartAudio command and response codes
  86:../cleanflight/src/main/io/vtx_smartaudio.c **** enum {
  87:../cleanflight/src/main/io/vtx_smartaudio.c ****     SA_CMD_NONE = 0x00,
  88:../cleanflight/src/main/io/vtx_smartaudio.c ****     SA_CMD_GET_SETTINGS = 0x01,
  89:../cleanflight/src/main/io/vtx_smartaudio.c ****     SA_CMD_SET_POWER,
  90:../cleanflight/src/main/io/vtx_smartaudio.c ****     SA_CMD_SET_CHAN,
  91:../cleanflight/src/main/io/vtx_smartaudio.c ****     SA_CMD_SET_FREQ,
  92:../cleanflight/src/main/io/vtx_smartaudio.c ****     SA_CMD_SET_MODE,
  93:../cleanflight/src/main/io/vtx_smartaudio.c ****     SA_CMD_GET_SETTINGS_V2 = 0x09        // Response only
  94:../cleanflight/src/main/io/vtx_smartaudio.c **** } smartAudioCommand_e;
  95:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  96:../cleanflight/src/main/io/vtx_smartaudio.c **** // This is not a good design; can't distinguish command from response this way.
  97:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SACMD(cmd) (((cmd) << 1) | 1)
  98:../cleanflight/src/main/io/vtx_smartaudio.c **** 
  99:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 100:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_IS_PITMODE(n) ((n) & SA_MODE_GET_PITMODE)
 101:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_IS_PIRMODE(n) (((n) & SA_MODE_GET_PITMODE) && ((n) & SA_MODE_GET_IN_RANGE_PITMODE))
 102:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_IS_PORMODE(n) (((n) & SA_MODE_GET_PITMODE) && ((n) & SA_MODE_GET_OUT_RANGE_PITMODE))
 103:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 104:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 105:../cleanflight/src/main/io/vtx_smartaudio.c **** // convert between 'saDevice.channel' and band/channel values
 106:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_DEVICE_CHVAL_TO_BAND(val) ((val) / (uint8_t)8)
 107:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_DEVICE_CHVAL_TO_CHANNEL(val) ((val) % (uint8_t)8)
 108:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_BANDCHAN_TO_DEVICE_CHVAL(band, channel) ((band) * (uint8_t)8 + (channel))
 109:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 110:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 111:../cleanflight/src/main/io/vtx_smartaudio.c **** // Statistical counters, for user side trouble shooting.
 112:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 113:../cleanflight/src/main/io/vtx_smartaudio.c **** smartAudioStat_t saStat = {
 114:../cleanflight/src/main/io/vtx_smartaudio.c ****     .pktsent = 0,
 115:../cleanflight/src/main/io/vtx_smartaudio.c ****     .pktrcvd = 0,
 116:../cleanflight/src/main/io/vtx_smartaudio.c ****     .badpre = 0,
 117:../cleanflight/src/main/io/vtx_smartaudio.c ****     .badlen = 0,
 118:../cleanflight/src/main/io/vtx_smartaudio.c ****     .crc = 0,
 119:../cleanflight/src/main/io/vtx_smartaudio.c ****     .ooopresp = 0,
 120:../cleanflight/src/main/io/vtx_smartaudio.c ****     .badcode = 0,
 121:../cleanflight/src/main/io/vtx_smartaudio.c **** };
 122:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 123:../cleanflight/src/main/io/vtx_smartaudio.c **** saPowerTable_t saPowerTable[VTX_SMARTAUDIO_POWER_COUNT] = {
 124:../cleanflight/src/main/io/vtx_smartaudio.c ****     {  25,   7,   0 },
 125:../cleanflight/src/main/io/vtx_smartaudio.c ****     { 200,  16,   1 },
 126:../cleanflight/src/main/io/vtx_smartaudio.c ****     { 500,  25,   2 },
 127:../cleanflight/src/main/io/vtx_smartaudio.c ****     { 800,  40,   3 },
 128:../cleanflight/src/main/io/vtx_smartaudio.c **** };
 129:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 130:../cleanflight/src/main/io/vtx_smartaudio.c **** // Last received device ('hard') states
 131:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 132:../cleanflight/src/main/io/vtx_smartaudio.c **** smartAudioDevice_t saDevice = {
 133:../cleanflight/src/main/io/vtx_smartaudio.c ****     .version = 0,
 134:../cleanflight/src/main/io/vtx_smartaudio.c ****     .channel = -1,
 135:../cleanflight/src/main/io/vtx_smartaudio.c ****     .power = -1,
 136:../cleanflight/src/main/io/vtx_smartaudio.c ****     .mode = 0,
 137:../cleanflight/src/main/io/vtx_smartaudio.c ****     .freq = 0,
 138:../cleanflight/src/main/io/vtx_smartaudio.c ****     .orfreq = 0,
 139:../cleanflight/src/main/io/vtx_smartaudio.c **** };
 140:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 141:../cleanflight/src/main/io/vtx_smartaudio.c **** static smartAudioDevice_t saDevicePrev = {
 142:../cleanflight/src/main/io/vtx_smartaudio.c ****     .version = 0,
 143:../cleanflight/src/main/io/vtx_smartaudio.c **** };
 144:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 145:../cleanflight/src/main/io/vtx_smartaudio.c **** // XXX Possible compliance problem here. Need LOCK/UNLOCK menu?
 146:../cleanflight/src/main/io/vtx_smartaudio.c **** static uint8_t saLockMode = SA_MODE_SET_UNLOCK; // saCms variable?
 147:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 148:../cleanflight/src/main/io/vtx_smartaudio.c **** // XXX Should be configurable by user?
 149:../cleanflight/src/main/io/vtx_smartaudio.c **** bool saDeferred = true; // saCms variable?
 150:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 151:../cleanflight/src/main/io/vtx_smartaudio.c **** // Receive frame reassembly buffer
 152:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_MAX_RCVLEN 11
 153:../cleanflight/src/main/io/vtx_smartaudio.c **** static uint8_t sa_rbuf[SA_MAX_RCVLEN+4]; // XXX delete 4 byte guard
 154:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 155:../cleanflight/src/main/io/vtx_smartaudio.c **** //
 156:../cleanflight/src/main/io/vtx_smartaudio.c **** // CRC8 computations
 157:../cleanflight/src/main/io/vtx_smartaudio.c **** //
 158:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 159:../cleanflight/src/main/io/vtx_smartaudio.c **** #define POLYGEN 0xd5
 160:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 161:../cleanflight/src/main/io/vtx_smartaudio.c **** static uint8_t CRC8(const uint8_t *data, const int8_t len)
 162:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 192              	 .loc 2 162 0
 193              	 .cfi_startproc
 194              	 
 195              	 
 196              	 
 197 0000 80B4     	 push {r7}
 198              	.LCFI4:
 199              	 .cfi_def_cfa_offset 4
 200              	 .cfi_offset 7,-4
 201 0002 87B0     	 sub sp,sp,#28
 202              	.LCFI5:
 203              	 .cfi_def_cfa_offset 32
 204 0004 00AF     	 add r7,sp,#0
 205              	.LCFI6:
 206              	 .cfi_def_cfa_register 7
 207 0006 7860     	 str r0,[r7,#4]
 208 0008 0B46     	 mov r3,r1
 209 000a FB70     	 strb r3,[r7,#3]
 163:../cleanflight/src/main/io/vtx_smartaudio.c ****     uint8_t crc = 0; /* start with 0 so first byte can be 'xored' in */
 210              	 .loc 2 163 0
 211 000c 0023     	 movs r3,#0
 212 000e FB75     	 strb r3,[r7,#23]
 213              	.LBB2:
 164:../cleanflight/src/main/io/vtx_smartaudio.c ****     uint8_t currByte;
 165:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 166:../cleanflight/src/main/io/vtx_smartaudio.c ****     for (int i = 0 ; i < len ; i++) {
 214              	 .loc 2 166 0
 215 0010 0023     	 movs r3,#0
 216 0012 3B61     	 str r3,[r7,#16]
 217 0014 24E0     	 b .L6
 218              	.L11:
 167:../cleanflight/src/main/io/vtx_smartaudio.c ****         currByte = data[i];
 219              	 .loc 2 167 0
 220 0016 3B69     	 ldr r3,[r7,#16]
 221 0018 7A68     	 ldr r2,[r7,#4]
 222 001a 1344     	 add r3,r3,r2
 223 001c 1B78     	 ldrb r3,[r3]
 224 001e FB72     	 strb r3,[r7,#11]
 168:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 169:../cleanflight/src/main/io/vtx_smartaudio.c ****         crc ^= currByte; /* XOR-in the next input byte */
 225              	 .loc 2 169 0
 226 0020 FA7D     	 ldrb r2,[r7,#23]
 227 0022 FB7A     	 ldrb r3,[r7,#11]
 228 0024 5340     	 eors r3,r3,r2
 229 0026 FB75     	 strb r3,[r7,#23]
 230              	.LBB3:
 170:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 171:../cleanflight/src/main/io/vtx_smartaudio.c ****         for (int i = 0; i < 8; i++) {
 231              	 .loc 2 171 0
 232 0028 0023     	 movs r3,#0
 233 002a FB60     	 str r3,[r7,#12]
 234 002c 12E0     	 b .L7
 235              	.L10:
 172:../cleanflight/src/main/io/vtx_smartaudio.c ****             if ((crc & 0x80) != 0) {
 236              	 .loc 2 172 0
 237 002e FB7D     	 ldrb r3,[r7,#23]
 238 0030 5BB2     	 sxtb r3,r3
 239 0032 002B     	 cmp r3,#0
 240 0034 08DA     	 bge .L8
 173:../cleanflight/src/main/io/vtx_smartaudio.c ****                 crc = (uint8_t)((crc << 1) ^ POLYGEN);
 241              	 .loc 2 173 0
 242 0036 FB7D     	 ldrb r3,[r7,#23]
 243 0038 5B00     	 lsls r3,r3,#1
 244 003a DBB2     	 uxtb r3,r3
 245 003c 83F02A03 	 eor r3,r3,#42
 246 0040 DB43     	 mvns r3,r3
 247 0042 DBB2     	 uxtb r3,r3
 248 0044 FB75     	 strb r3,[r7,#23]
 249 0046 02E0     	 b .L9
 250              	.L8:
 174:../cleanflight/src/main/io/vtx_smartaudio.c ****             } else {
 175:../cleanflight/src/main/io/vtx_smartaudio.c ****                 crc <<= 1;
 251              	 .loc 2 175 0
 252 0048 FB7D     	 ldrb r3,[r7,#23]
 253 004a 5B00     	 lsls r3,r3,#1
 254 004c FB75     	 strb r3,[r7,#23]
 255              	.L9:
 171:../cleanflight/src/main/io/vtx_smartaudio.c ****             if ((crc & 0x80) != 0) {
 256              	 .loc 2 171 0 discriminator 2
 257 004e FB68     	 ldr r3,[r7,#12]
 258 0050 0133     	 adds r3,r3,#1
 259 0052 FB60     	 str r3,[r7,#12]
 260              	.L7:
 171:../cleanflight/src/main/io/vtx_smartaudio.c ****             if ((crc & 0x80) != 0) {
 261              	 .loc 2 171 0 is_stmt 0 discriminator 1
 262 0054 FB68     	 ldr r3,[r7,#12]
 263 0056 072B     	 cmp r3,#7
 264 0058 E9DD     	 ble .L10
 265              	.LBE3:
 166:../cleanflight/src/main/io/vtx_smartaudio.c ****         currByte = data[i];
 266              	 .loc 2 166 0 is_stmt 1 discriminator 2
 267 005a 3B69     	 ldr r3,[r7,#16]
 268 005c 0133     	 adds r3,r3,#1
 269 005e 3B61     	 str r3,[r7,#16]
 270              	.L6:
 166:../cleanflight/src/main/io/vtx_smartaudio.c ****         currByte = data[i];
 271              	 .loc 2 166 0 is_stmt 0 discriminator 1
 272 0060 97F90320 	 ldrsb r2,[r7,#3]
 273 0064 3B69     	 ldr r3,[r7,#16]
 274 0066 9A42     	 cmp r2,r3
 275 0068 D5DC     	 bgt .L11
 276              	.LBE2:
 176:../cleanflight/src/main/io/vtx_smartaudio.c ****             }
 177:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 178:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 179:../cleanflight/src/main/io/vtx_smartaudio.c ****     return crc;
 277              	 .loc 2 179 0 is_stmt 1
 278 006a FB7D     	 ldrb r3,[r7,#23]
 180:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 279              	 .loc 2 180 0
 280 006c 1846     	 mov r0,r3
 281 006e 1C37     	 adds r7,r7,#28
 282              	.LCFI7:
 283              	 .cfi_def_cfa_offset 4
 284 0070 BD46     	 mov sp,r7
 285              	.LCFI8:
 286              	 .cfi_def_cfa_register 13
 287              	 
 288 0072 5DF8047B 	 ldr r7,[sp],#4
 289              	.LCFI9:
 290              	 .cfi_restore 7
 291              	 .cfi_def_cfa_offset 0
 292 0076 7047     	 bx lr
 293              	 .cfi_endproc
 294              	.LFE540:
 296              	 .section .text.saDacToPowerIndex,"ax",%progbits
 297              	 .align 2
 298              	 .global saDacToPowerIndex
 299              	 .thumb
 300              	 .thumb_func
 302              	saDacToPowerIndex:
 303              	.LFB541:
 181:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 182:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 183:../cleanflight/src/main/io/vtx_smartaudio.c **** #ifdef USE_SMARTAUDIO_DPRINTF
 184:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saPrintSettings(void)
 185:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 186:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("Current status: version: %d\r\n", saDevice.version));
 187:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("  mode(0x%x): fmode=%s", saDevice.mode,  (saDevice.mode & 1) ? "freq" : "chan"));
 188:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf((" pit=%s ", (saDevice.mode & 2) ? "on " : "off"));
 189:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf((" inb=%s", (saDevice.mode & 4) ? "on " : "off"));
 190:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf((" outb=%s", (saDevice.mode & 8) ? "on " : "off"));
 191:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf((" lock=%s", (saDevice.mode & 16) ? "unlocked" : "locked"));
 192:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf((" deferred=%s\r\n", (saDevice.mode & 32) ? "on" : "off"));
 193:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("  channel: %d ", saDevice.channel));
 194:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("freq: %d ", saDevice.freq));
 195:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("power: %d ", saDevice.power));
 196:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("pitfreq: %d ", saDevice.orfreq));
 197:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("\r\n"));
 198:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 199:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
 200:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 201:../cleanflight/src/main/io/vtx_smartaudio.c **** int saDacToPowerIndex(int dac)
 202:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 304              	 .loc 2 202 0
 305              	 .cfi_startproc
 306              	 
 307              	 
 308              	 
 309 0000 80B4     	 push {r7}
 310              	.LCFI10:
 311              	 .cfi_def_cfa_offset 4
 312              	 .cfi_offset 7,-4
 313 0002 85B0     	 sub sp,sp,#20
 314              	.LCFI11:
 315              	 .cfi_def_cfa_offset 24
 316 0004 00AF     	 add r7,sp,#0
 317              	.LCFI12:
 318              	 .cfi_def_cfa_register 7
 319 0006 7860     	 str r0,[r7,#4]
 320              	.LBB4:
 203:../cleanflight/src/main/io/vtx_smartaudio.c ****     for (int idx = 3 ; idx >= 0 ; idx--) {
 321              	 .loc 2 203 0
 322 0008 0323     	 movs r3,#3
 323 000a FB60     	 str r3,[r7,#12]
 324 000c 0DE0     	 b .L14
 325              	.L17:
 204:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (saPowerTable[idx].valueV1 <= dac) {
 326              	 .loc 2 204 0
 327 000e 0C4A     	 ldr r2,.L18
 328 0010 FB68     	 ldr r3,[r7,#12]
 329 0012 DB00     	 lsls r3,r3,#3
 330 0014 1344     	 add r3,r3,r2
 331 0016 9B88     	 ldrh r3,[r3,#4]
 332 0018 1AB2     	 sxth r2,r3
 333 001a 7B68     	 ldr r3,[r7,#4]
 334 001c 9A42     	 cmp r2,r3
 335 001e 01DC     	 bgt .L15
 205:../cleanflight/src/main/io/vtx_smartaudio.c ****             return idx;
 336              	 .loc 2 205 0
 337 0020 FB68     	 ldr r3,[r7,#12]
 338 0022 06E0     	 b .L16
 339              	.L15:
 203:../cleanflight/src/main/io/vtx_smartaudio.c ****     for (int idx = 3 ; idx >= 0 ; idx--) {
 340              	 .loc 2 203 0 discriminator 2
 341 0024 FB68     	 ldr r3,[r7,#12]
 342 0026 013B     	 subs r3,r3,#1
 343 0028 FB60     	 str r3,[r7,#12]
 344              	.L14:
 203:../cleanflight/src/main/io/vtx_smartaudio.c ****     for (int idx = 3 ; idx >= 0 ; idx--) {
 345              	 .loc 2 203 0 is_stmt 0 discriminator 1
 346 002a FB68     	 ldr r3,[r7,#12]
 347 002c 002B     	 cmp r3,#0
 348 002e EEDA     	 bge .L17
 349              	.LBE4:
 206:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 207:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 208:../cleanflight/src/main/io/vtx_smartaudio.c ****     return 0;
 350              	 .loc 2 208 0 is_stmt 1
 351 0030 0023     	 movs r3,#0
 352              	.L16:
 209:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 353              	 .loc 2 209 0
 354 0032 1846     	 mov r0,r3
 355 0034 1437     	 adds r7,r7,#20
 356              	.LCFI13:
 357              	 .cfi_def_cfa_offset 4
 358 0036 BD46     	 mov sp,r7
 359              	.LCFI14:
 360              	 .cfi_def_cfa_register 13
 361              	 
 362 0038 5DF8047B 	 ldr r7,[sp],#4
 363              	.LCFI15:
 364              	 .cfi_restore 7
 365              	 .cfi_def_cfa_offset 0
 366 003c 7047     	 bx lr
 367              	.L19:
 368 003e 00BF     	 .align 2
 369              	.L18:
 370 0040 00000000 	 .word saPowerTable
 371              	 .cfi_endproc
 372              	.LFE541:
 374              	 .global sa_smartbaud
 375              	 .section .data.sa_smartbaud,"aw",%progbits
 376              	 .align 1
 379              	sa_smartbaud:
 380 0000 C012     	 .short 4800
 381              	 .section .data.sa_adjdir,"aw",%progbits
 382              	 .align 2
 385              	sa_adjdir:
 386 0000 01000000 	 .word 1
 387              	 .section .data.sa_baudstep,"aw",%progbits
 388              	 .align 2
 391              	sa_baudstep:
 392 0000 32000000 	 .word 50
 393              	 .section .text.saAutobaud,"ax",%progbits
 394              	 .align 2
 395              	 .thumb
 396              	 .thumb_func
 398              	saAutobaud:
 399              	.LFB542:
 210:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 211:../cleanflight/src/main/io/vtx_smartaudio.c **** //
 212:../cleanflight/src/main/io/vtx_smartaudio.c **** // Autobauding
 213:../cleanflight/src/main/io/vtx_smartaudio.c **** //
 214:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 215:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SMARTBAUD_MIN 4800
 216:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SMARTBAUD_MAX 4950
 217:../cleanflight/src/main/io/vtx_smartaudio.c **** uint16_t sa_smartbaud = SMARTBAUD_MIN;
 218:../cleanflight/src/main/io/vtx_smartaudio.c **** static int sa_adjdir = 1; // -1=going down, 1=going up
 219:../cleanflight/src/main/io/vtx_smartaudio.c **** static int sa_baudstep = 50;
 220:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 221:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saAutobaud(void)
 222:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 400              	 .loc 2 222 0
 401              	 .cfi_startproc
 402              	 
 403              	 
 404 0000 80B5     	 push {r7,lr}
 405              	.LCFI16:
 406              	 .cfi_def_cfa_offset 8
 407              	 .cfi_offset 7,-8
 408              	 .cfi_offset 14,-4
 409 0002 00AF     	 add r7,sp,#0
 410              	.LCFI17:
 411              	 .cfi_def_cfa_register 7
 223:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (saStat.pktsent < 10) {
 412              	 .loc 2 223 0
 413 0004 2A4B     	 ldr r3,.L26
 414 0006 1B88     	 ldrh r3,[r3]
 415 0008 092B     	 cmp r3,#9
 416 000a 00D8     	 bhi .L21
 224:../cleanflight/src/main/io/vtx_smartaudio.c ****         // Not enough samples collected
 225:../cleanflight/src/main/io/vtx_smartaudio.c ****         return;
 417              	 .loc 2 225 0
 418 000c 4EE0     	 b .L20
 419              	.L21:
 226:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 227:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 228:../cleanflight/src/main/io/vtx_smartaudio.c **** #if 0
 229:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("autobaud: %d rcvd %d/%d (%d)\r\n",
 230:../cleanflight/src/main/io/vtx_smartaudio.c ****         sa_smartbaud, saStat.pktrcvd, saStat.pktsent, ((saStat.pktrcvd * 100) / saStat.pktsent)));
 231:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
 232:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 233:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (((saStat.pktrcvd * 100) / saStat.pktsent) >= 70) {
 420              	 .loc 2 233 0
 421 000e 284B     	 ldr r3,.L26
 422 0010 5B88     	 ldrh r3,[r3,#2]
 423 0012 1A46     	 mov r2,r3
 424 0014 6423     	 movs r3,#100
 425 0016 03FB02F3 	 mul r3,r3,r2
 426 001a 254A     	 ldr r2,.L26
 427 001c 1288     	 ldrh r2,[r2]
 428 001e 93FBF2F3 	 sdiv r3,r3,r2
 429 0022 452B     	 cmp r3,#69
 430 0024 06DD     	 ble .L23
 234:../cleanflight/src/main/io/vtx_smartaudio.c ****         // This is okay
 235:../cleanflight/src/main/io/vtx_smartaudio.c ****         saStat.pktsent = 0; // Should be more moderate?
 431              	 .loc 2 235 0
 432 0026 224B     	 ldr r3,.L26
 433 0028 0022     	 movs r2,#0
 434 002a 1A80     	 strh r2,[r3]
 236:../cleanflight/src/main/io/vtx_smartaudio.c ****         saStat.pktrcvd = 0;
 435              	 .loc 2 236 0
 436 002c 204B     	 ldr r3,.L26
 437 002e 0022     	 movs r2,#0
 438 0030 5A80     	 strh r2,[r3,#2]
 237:../cleanflight/src/main/io/vtx_smartaudio.c ****         return;
 439              	 .loc 2 237 0
 440 0032 3BE0     	 b .L20
 441              	.L23:
 238:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 239:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 240:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("autobaud: adjusting\r\n"));
 241:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 242:../cleanflight/src/main/io/vtx_smartaudio.c ****     if ((sa_adjdir == 1) && (sa_smartbaud == SMARTBAUD_MAX)) {
 442              	 .loc 2 242 0
 443 0034 1F4B     	 ldr r3,.L26+4
 444 0036 1B68     	 ldr r3,[r3]
 445 0038 012B     	 cmp r3,#1
 446 003a 0AD1     	 bne .L24
 447              	 .loc 2 242 0 is_stmt 0 discriminator 1
 448 003c 1E4B     	 ldr r3,.L26+8
 449 003e 1B88     	 ldrh r3,[r3]
 450 0040 41F25632 	 movw r2,#4950
 451 0044 9342     	 cmp r3,r2
 452 0046 04D1     	 bne .L24
 243:../cleanflight/src/main/io/vtx_smartaudio.c ****        sa_adjdir = -1;
 453              	 .loc 2 243 0 is_stmt 1
 454 0048 1A4B     	 ldr r3,.L26+4
 455 004a 4FF0FF32 	 mov r2,#-1
 456 004e 1A60     	 str r2,[r3]
 457 0050 0CE0     	 b .L25
 458              	.L24:
 244:../cleanflight/src/main/io/vtx_smartaudio.c ****        dprintf(("autobaud: now going down\r\n"));
 245:../cleanflight/src/main/io/vtx_smartaudio.c ****     } else if ((sa_adjdir == -1 && sa_smartbaud == SMARTBAUD_MIN)) {
 459              	 .loc 2 245 0
 460 0052 184B     	 ldr r3,.L26+4
 461 0054 1B68     	 ldr r3,[r3]
 462 0056 B3F1FF3F 	 cmp r3,#-1
 463 005a 07D1     	 bne .L25
 464              	 .loc 2 245 0 is_stmt 0 discriminator 1
 465 005c 164B     	 ldr r3,.L26+8
 466 005e 1B88     	 ldrh r3,[r3]
 467 0060 B3F5965F 	 cmp r3,#4800
 468 0064 02D1     	 bne .L25
 246:../cleanflight/src/main/io/vtx_smartaudio.c ****        sa_adjdir = 1;
 469              	 .loc 2 246 0 is_stmt 1
 470 0066 134B     	 ldr r3,.L26+4
 471 0068 0122     	 movs r2,#1
 472 006a 1A60     	 str r2,[r3]
 473              	.L25:
 247:../cleanflight/src/main/io/vtx_smartaudio.c ****        dprintf(("autobaud: now going up\r\n"));
 248:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 249:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 250:../cleanflight/src/main/io/vtx_smartaudio.c ****     sa_smartbaud += sa_baudstep * sa_adjdir;
 474              	 .loc 2 250 0
 475 006c 134B     	 ldr r3,.L26+12
 476 006e 1B68     	 ldr r3,[r3]
 477 0070 9AB2     	 uxth r2,r3
 478 0072 104B     	 ldr r3,.L26+4
 479 0074 1B68     	 ldr r3,[r3]
 480 0076 9BB2     	 uxth r3,r3
 481 0078 12FB03F3 	 smulbb r3,r2,r3
 482 007c 9AB2     	 uxth r2,r3
 483 007e 0E4B     	 ldr r3,.L26+8
 484 0080 1B88     	 ldrh r3,[r3]
 485 0082 1344     	 add r3,r3,r2
 486 0084 9AB2     	 uxth r2,r3
 487 0086 0C4B     	 ldr r3,.L26+8
 488 0088 1A80     	 strh r2,[r3]
 251:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 252:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("autobaud: %d\r\n", sa_smartbaud));
 253:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 254:../cleanflight/src/main/io/vtx_smartaudio.c ****     smartAudioSerialPort->vTable->serialSetBaudRate(smartAudioSerialPort, sa_smartbaud);
 489              	 .loc 2 254 0
 490 008a 0D4B     	 ldr r3,.L26+16
 491 008c 1B68     	 ldr r3,[r3]
 492 008e 1B68     	 ldr r3,[r3]
 493 0090 1B69     	 ldr r3,[r3,#16]
 494 0092 0B4A     	 ldr r2,.L26+16
 495 0094 1168     	 ldr r1,[r2]
 496 0096 084A     	 ldr r2,.L26+8
 497 0098 1288     	 ldrh r2,[r2]
 498 009a 0846     	 mov r0,r1
 499 009c 1146     	 mov r1,r2
 500 009e 9847     	 blx r3
 255:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 256:../cleanflight/src/main/io/vtx_smartaudio.c ****     saStat.pktsent = 0;
 501              	 .loc 2 256 0
 502 00a0 034B     	 ldr r3,.L26
 503 00a2 0022     	 movs r2,#0
 504 00a4 1A80     	 strh r2,[r3]
 257:../cleanflight/src/main/io/vtx_smartaudio.c ****     saStat.pktrcvd = 0;
 505              	 .loc 2 257 0
 506 00a6 024B     	 ldr r3,.L26
 507 00a8 0022     	 movs r2,#0
 508 00aa 5A80     	 strh r2,[r3,#2]
 509              	.L20:
 258:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 510              	 .loc 2 258 0
 511 00ac 80BD     	 pop {r7,pc}
 512              	.L27:
 513 00ae 00BF     	 .align 2
 514              	.L26:
 515 00b0 00000000 	 .word saStat
 516 00b4 00000000 	 .word sa_adjdir
 517 00b8 00000000 	 .word sa_smartbaud
 518 00bc 00000000 	 .word sa_baudstep
 519 00c0 00000000 	 .word smartAudioSerialPort
 520              	 .cfi_endproc
 521              	.LFE542:
 523              	 .section .bss.sa_lastTransmissionMs,"aw",%nobits
 524              	 .align 2
 527              	sa_lastTransmissionMs:
 528 0000 00000000 	 .space 4
 529              	 .section .bss.sa_outstanding,"aw",%nobits
 532              	sa_outstanding:
 533 0000 00       	 .space 1
 534              	 .section .bss.sa_osbuf,"aw",%nobits
 535              	 .align 2
 538              	sa_osbuf:
 539 0000 00000000 	 .space 32
 539      00000000 
 539      00000000 
 539      00000000 
 539      00000000 
 540              	 .section .bss.sa_oslen,"aw",%nobits
 541              	 .align 2
 544              	sa_oslen:
 545 0000 00000000 	 .space 4
 546              	 .section .text.saProcessResponse,"ax",%progbits
 547              	 .align 2
 548              	 .thumb
 549              	 .thumb_func
 551              	saProcessResponse:
 552              	.LFB543:
 259:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 260:../cleanflight/src/main/io/vtx_smartaudio.c **** // Transport level variables
 261:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 262:../cleanflight/src/main/io/vtx_smartaudio.c **** static timeUs_t sa_lastTransmissionMs = 0;
 263:../cleanflight/src/main/io/vtx_smartaudio.c **** static uint8_t sa_outstanding = SA_CMD_NONE; // Outstanding command
 264:../cleanflight/src/main/io/vtx_smartaudio.c **** static uint8_t sa_osbuf[32]; // Outstanding comamnd frame for retransmission
 265:../cleanflight/src/main/io/vtx_smartaudio.c **** static int sa_oslen;         // And associate length
 266:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 267:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saProcessResponse(uint8_t *buf, int len)
 268:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 553              	 .loc 2 268 0
 554              	 .cfi_startproc
 555              	 
 556              	 
 557 0000 80B5     	 push {r7,lr}
 558              	.LCFI18:
 559              	 .cfi_def_cfa_offset 8
 560              	 .cfi_offset 7,-8
 561              	 .cfi_offset 14,-4
 562 0002 84B0     	 sub sp,sp,#16
 563              	.LCFI19:
 564              	 .cfi_def_cfa_offset 24
 565 0004 00AF     	 add r7,sp,#0
 566              	.LCFI20:
 567              	 .cfi_def_cfa_register 7
 568 0006 7860     	 str r0,[r7,#4]
 569 0008 3960     	 str r1,[r7]
 269:../cleanflight/src/main/io/vtx_smartaudio.c ****     uint8_t resp = buf[0];
 570              	 .loc 2 269 0
 571 000a 7B68     	 ldr r3,[r7,#4]
 572 000c 1B78     	 ldrb r3,[r3]
 573 000e FB73     	 strb r3,[r7,#15]
 270:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 271:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (resp == sa_outstanding) {
 574              	 .loc 2 271 0
 575 0010 724B     	 ldr r3,.L54
 576 0012 1B78     	 ldrb r3,[r3]
 577 0014 FA7B     	 ldrb r2,[r7,#15]
 578 0016 9A42     	 cmp r2,r3
 579 0018 03D1     	 bne .L29
 272:../cleanflight/src/main/io/vtx_smartaudio.c ****         sa_outstanding = SA_CMD_NONE;
 580              	 .loc 2 272 0
 581 001a 704B     	 ldr r3,.L54
 582 001c 0022     	 movs r2,#0
 583 001e 1A70     	 strb r2,[r3]
 584 0020 10E0     	 b .L30
 585              	.L29:
 273:../cleanflight/src/main/io/vtx_smartaudio.c ****     } else if ((resp == SA_CMD_GET_SETTINGS_V2) && (sa_outstanding == SA_CMD_GET_SETTINGS)) {
 586              	 .loc 2 273 0
 587 0022 FB7B     	 ldrb r3,[r7,#15]
 588 0024 092B     	 cmp r3,#9
 589 0026 07D1     	 bne .L31
 590              	 .loc 2 273 0 is_stmt 0 discriminator 1
 591 0028 6C4B     	 ldr r3,.L54
 592 002a 1B78     	 ldrb r3,[r3]
 593 002c 012B     	 cmp r3,#1
 594 002e 03D1     	 bne .L31
 274:../cleanflight/src/main/io/vtx_smartaudio.c ****         sa_outstanding = SA_CMD_NONE;
 595              	 .loc 2 274 0 is_stmt 1
 596 0030 6A4B     	 ldr r3,.L54
 597 0032 0022     	 movs r2,#0
 598 0034 1A70     	 strb r2,[r3]
 599 0036 05E0     	 b .L30
 600              	.L31:
 275:../cleanflight/src/main/io/vtx_smartaudio.c ****     } else {
 276:../cleanflight/src/main/io/vtx_smartaudio.c ****         saStat.ooopresp++;
 601              	 .loc 2 276 0
 602 0038 694B     	 ldr r3,.L54+4
 603 003a 5B89     	 ldrh r3,[r3,#10]
 604 003c 0133     	 adds r3,r3,#1
 605 003e 9AB2     	 uxth r2,r3
 606 0040 674B     	 ldr r3,.L54+4
 607 0042 5A81     	 strh r2,[r3,#10]
 608              	.L30:
 277:../cleanflight/src/main/io/vtx_smartaudio.c ****         dprintf(("processResponse: outstanding %d got %d\r\n", sa_outstanding, resp));
 278:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 279:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 280:../cleanflight/src/main/io/vtx_smartaudio.c ****     switch (resp) {
 609              	 .loc 2 280 0
 610 0044 FB7B     	 ldrb r3,[r7,#15]
 611 0046 013B     	 subs r3,r3,#1
 612 0048 082B     	 cmp r3,#8
 613 004a 00F2A880 	 bhi .L32
 614 004e 01A2     	 adr r2,.L34
 615 0050 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 616              	 .p2align 2
 617              	.L34:
 618 0054 79000000 	 .word .L33+1
 619 0058 AD010000 	 .word .L53+1
 620 005c AD010000 	 .word .L53+1
 621 0060 47010000 	 .word .L37+1
 622 0064 AD010000 	 .word .L53+1
 623 0068 9F010000 	 .word .L32+1
 624 006c 9F010000 	 .word .L32+1
 625 0070 9F010000 	 .word .L32+1
 626 0074 79000000 	 .word .L33+1
 627              	 .p2align 1
 628              	.L33:
 629              	.LBB5:
 281:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_CMD_GET_SETTINGS_V2: // Version 2 Get Settings
 282:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_CMD_GET_SETTINGS:    // Version 1 Get Settings
 283:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (len < 7) {
 630              	 .loc 2 283 0
 631 0078 3B68     	 ldr r3,[r7]
 632 007a 062B     	 cmp r3,#6
 633 007c 00DC     	 bgt .L39
 284:../cleanflight/src/main/io/vtx_smartaudio.c ****             break;
 634              	 .loc 2 284 0
 635 007e 96E0     	 b .L40
 636              	.L39:
 285:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 286:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 287:../cleanflight/src/main/io/vtx_smartaudio.c ****         saDevice.version = (buf[0] == SA_CMD_GET_SETTINGS) ? 1 : 2;
 637              	 .loc 2 287 0
 638 0080 7B68     	 ldr r3,[r7,#4]
 639 0082 1B78     	 ldrb r3,[r3]
 640 0084 012B     	 cmp r3,#1
 641 0086 01D1     	 bne .L41
 642              	 .loc 2 287 0 is_stmt 0 discriminator 1
 643 0088 0122     	 movs r2,#1
 644 008a 00E0     	 b .L42
 645              	.L41:
 646              	 .loc 2 287 0 discriminator 2
 647 008c 0222     	 movs r2,#2
 648              	.L42:
 649              	 .loc 2 287 0 discriminator 4
 650 008e 554B     	 ldr r3,.L54+8
 651 0090 1A70     	 strb r2,[r3]
 288:../cleanflight/src/main/io/vtx_smartaudio.c ****         saDevice.channel = buf[2];
 652              	 .loc 2 288 0 is_stmt 1 discriminator 4
 653 0092 7B68     	 ldr r3,[r7,#4]
 654 0094 0233     	 adds r3,r3,#2
 655 0096 1B78     	 ldrb r3,[r3]
 656 0098 DAB2     	 uxtb r2,r3
 657 009a 524B     	 ldr r3,.L54+8
 658 009c 5A70     	 strb r2,[r3,#1]
 289:../cleanflight/src/main/io/vtx_smartaudio.c ****         saDevice.power = buf[3];
 659              	 .loc 2 289 0 discriminator 4
 660 009e 7B68     	 ldr r3,[r7,#4]
 661 00a0 0333     	 adds r3,r3,#3
 662 00a2 1B78     	 ldrb r3,[r3]
 663 00a4 DAB2     	 uxtb r2,r3
 664 00a6 4F4B     	 ldr r3,.L54+8
 665 00a8 9A70     	 strb r2,[r3,#2]
 290:../cleanflight/src/main/io/vtx_smartaudio.c ****         saDevice.mode = buf[4];
 666              	 .loc 2 290 0 discriminator 4
 667 00aa 7B68     	 ldr r3,[r7,#4]
 668 00ac 0433     	 adds r3,r3,#4
 669 00ae 1B78     	 ldrb r3,[r3]
 670 00b0 DAB2     	 uxtb r2,r3
 671 00b2 4C4B     	 ldr r3,.L54+8
 672 00b4 DA70     	 strb r2,[r3,#3]
 291:../cleanflight/src/main/io/vtx_smartaudio.c ****         saDevice.freq = (buf[5] << 8)|buf[6];
 673              	 .loc 2 291 0 discriminator 4
 674 00b6 7B68     	 ldr r3,[r7,#4]
 675 00b8 0533     	 adds r3,r3,#5
 676 00ba 1B78     	 ldrb r3,[r3]
 677 00bc 1B02     	 lsls r3,r3,#8
 678 00be 9AB2     	 uxth r2,r3
 679 00c0 7B68     	 ldr r3,[r7,#4]
 680 00c2 0633     	 adds r3,r3,#6
 681 00c4 1B78     	 ldrb r3,[r3]
 682 00c6 9BB2     	 uxth r3,r3
 683 00c8 1343     	 orrs r3,r3,r2
 684 00ca 9BB2     	 uxth r3,r3
 685 00cc 9AB2     	 uxth r2,r3
 686 00ce 454B     	 ldr r3,.L54+8
 687 00d0 9A80     	 strh r2,[r3,#4]
 292:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 293:../cleanflight/src/main/io/vtx_smartaudio.c ****         DEBUG_SET(DEBUG_SMARTAUDIO, 0, saDevice.version * 100 + saDevice.mode);
 688              	 .loc 2 293 0 discriminator 4
 689 00d2 454B     	 ldr r3,.L54+12
 690 00d4 1B78     	 ldrb r3,[r3]
 691 00d6 242B     	 cmp r3,#36
 692 00d8 16D1     	 bne .L43
 693              	 .loc 2 293 0 is_stmt 0 discriminator 1
 694 00da 424B     	 ldr r3,.L54+8
 695 00dc 1B78     	 ldrb r3,[r3]
 696 00de 5BB2     	 sxtb r3,r3
 697 00e0 9BB2     	 uxth r3,r3
 698 00e2 1A46     	 mov r2,r3
 699 00e4 9200     	 lsls r2,r2,#2
 700 00e6 1344     	 add r3,r3,r2
 701 00e8 1A46     	 mov r2,r3
 702 00ea 9100     	 lsls r1,r2,#2
 703 00ec 1A46     	 mov r2,r3
 704 00ee 0B46     	 mov r3,r1
 705 00f0 1344     	 add r3,r3,r2
 706 00f2 9B00     	 lsls r3,r3,#2
 707 00f4 9AB2     	 uxth r2,r3
 708 00f6 3B4B     	 ldr r3,.L54+8
 709 00f8 DB78     	 ldrb r3,[r3,#3]
 710 00fa 5BB2     	 sxtb r3,r3
 711 00fc 9BB2     	 uxth r3,r3
 712 00fe 1344     	 add r3,r3,r2
 713 0100 9BB2     	 uxth r3,r3
 714 0102 9AB2     	 uxth r2,r3
 715 0104 394B     	 ldr r3,.L54+16
 716 0106 1A80     	 strh r2,[r3]
 717              	.L43:
 294:../cleanflight/src/main/io/vtx_smartaudio.c ****         DEBUG_SET(DEBUG_SMARTAUDIO, 1, saDevice.channel);
 718              	 .loc 2 294 0 is_stmt 1
 719 0108 374B     	 ldr r3,.L54+12
 720 010a 1B78     	 ldrb r3,[r3]
 721 010c 242B     	 cmp r3,#36
 722 010e 05D1     	 bne .L44
 723              	 .loc 2 294 0 is_stmt 0 discriminator 1
 724 0110 344B     	 ldr r3,.L54+8
 725 0112 5B78     	 ldrb r3,[r3,#1]
 726 0114 5BB2     	 sxtb r3,r3
 727 0116 9AB2     	 uxth r2,r3
 728 0118 344B     	 ldr r3,.L54+16
 729 011a 5A80     	 strh r2,[r3,#2]
 730              	.L44:
 295:../cleanflight/src/main/io/vtx_smartaudio.c ****         DEBUG_SET(DEBUG_SMARTAUDIO, 2, saDevice.freq);
 731              	 .loc 2 295 0 is_stmt 1
 732 011c 324B     	 ldr r3,.L54+12
 733 011e 1B78     	 ldrb r3,[r3]
 734 0120 242B     	 cmp r3,#36
 735 0122 04D1     	 bne .L45
 736              	 .loc 2 295 0 is_stmt 0 discriminator 1
 737 0124 2F4B     	 ldr r3,.L54+8
 738 0126 9B88     	 ldrh r3,[r3,#4]
 739 0128 9AB2     	 uxth r2,r3
 740 012a 304B     	 ldr r3,.L54+16
 741 012c 9A80     	 strh r2,[r3,#4]
 742              	.L45:
 296:../cleanflight/src/main/io/vtx_smartaudio.c ****         DEBUG_SET(DEBUG_SMARTAUDIO, 3, saDevice.power);
 743              	 .loc 2 296 0 is_stmt 1
 744 012e 2E4B     	 ldr r3,.L54+12
 745 0130 1B78     	 ldrb r3,[r3]
 746 0132 242B     	 cmp r3,#36
 747 0134 06D1     	 bne .L46
 748              	 .loc 2 296 0 is_stmt 0 discriminator 1
 749 0136 2B4B     	 ldr r3,.L54+8
 750 0138 9B78     	 ldrb r3,[r3,#2]
 751 013a 5BB2     	 sxtb r3,r3
 752 013c 9AB2     	 uxth r2,r3
 753 013e 2B4B     	 ldr r3,.L54+16
 754 0140 DA80     	 strh r2,[r3,#6]
 297:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 755              	 .loc 2 297 0 is_stmt 1 discriminator 1
 756 0142 34E0     	 b .L40
 757              	.L46:
 758              	 .loc 2 297 0 is_stmt 0
 759 0144 33E0     	 b .L40
 760              	.L37:
 298:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 299:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_CMD_SET_POWER: // Set Power
 300:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 301:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 302:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_CMD_SET_CHAN: // Set Channel
 303:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 304:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 305:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_CMD_SET_FREQ: // Set Frequency
 306:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (len < 5) {
 761              	 .loc 2 306 0 is_stmt 1
 762 0146 3B68     	 ldr r3,[r7]
 763 0148 042B     	 cmp r3,#4
 764 014a 00DC     	 bgt .L47
 307:../cleanflight/src/main/io/vtx_smartaudio.c ****             break;
 765              	 .loc 2 307 0
 766 014c 2FE0     	 b .L40
 767              	.L47:
 308:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 309:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 310:../cleanflight/src/main/io/vtx_smartaudio.c ****         const uint16_t freq = (buf[2] << 8)|buf[3];
 768              	 .loc 2 310 0
 769 014e 7B68     	 ldr r3,[r7,#4]
 770 0150 0233     	 adds r3,r3,#2
 771 0152 1B78     	 ldrb r3,[r3]
 772 0154 1B02     	 lsls r3,r3,#8
 773 0156 9AB2     	 uxth r2,r3
 774 0158 7B68     	 ldr r3,[r7,#4]
 775 015a 0333     	 adds r3,r3,#3
 776 015c 1B78     	 ldrb r3,[r3]
 777 015e 9BB2     	 uxth r3,r3
 778 0160 1343     	 orrs r3,r3,r2
 779 0162 9BB2     	 uxth r3,r3
 780 0164 BB81     	 strh r3,[r7,#12]
 311:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 312:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (freq & SA_FREQ_GETPIT) {
 781              	 .loc 2 312 0
 782 0166 BB89     	 ldrh r3,[r7,#12]
 783 0168 03F48043 	 and r3,r3,#16384
 784 016c 002B     	 cmp r3,#0
 785 016e 06D0     	 beq .L48
 313:../cleanflight/src/main/io/vtx_smartaudio.c ****             saDevice.orfreq = freq & SA_FREQ_MASK;
 786              	 .loc 2 313 0
 787 0170 BB89     	 ldrh r3,[r7,#12]
 788 0172 C3F30D03 	 ubfx r3,r3,#0,#14
 789 0176 9AB2     	 uxth r2,r3
 790 0178 1A4B     	 ldr r3,.L54+8
 791 017a DA80     	 strh r2,[r3,#6]
 792 017c 0EE0     	 b .L49
 793              	.L48:
 314:../cleanflight/src/main/io/vtx_smartaudio.c ****             dprintf(("saProcessResponse: GETPIT freq %d\r\n", saDevice.orfreq));
 315:../cleanflight/src/main/io/vtx_smartaudio.c ****         } else if (freq & SA_FREQ_SETPIT) {
 794              	 .loc 2 315 0
 795 017e BB89     	 ldrh r3,[r7,#12]
 796 0180 1BB2     	 sxth r3,r3
 797 0182 002B     	 cmp r3,#0
 798 0184 06DA     	 bge .L50
 316:../cleanflight/src/main/io/vtx_smartaudio.c ****             saDevice.orfreq = freq & SA_FREQ_MASK;
 799              	 .loc 2 316 0
 800 0186 BB89     	 ldrh r3,[r7,#12]
 801 0188 C3F30D03 	 ubfx r3,r3,#0,#14
 802 018c 9AB2     	 uxth r2,r3
 803 018e 154B     	 ldr r3,.L54+8
 804 0190 DA80     	 strh r2,[r3,#6]
 805 0192 03E0     	 b .L49
 806              	.L50:
 317:../cleanflight/src/main/io/vtx_smartaudio.c ****             dprintf(("saProcessResponse: SETPIT freq %d\r\n", saDevice.orfreq));
 318:../cleanflight/src/main/io/vtx_smartaudio.c ****         } else {
 319:../cleanflight/src/main/io/vtx_smartaudio.c ****             saDevice.freq = freq;
 807              	 .loc 2 319 0
 808 0194 134A     	 ldr r2,.L54+8
 809 0196 BB89     	 ldrh r3,[r7,#12]
 810 0198 9380     	 strh r3,[r2,#4]
 320:../cleanflight/src/main/io/vtx_smartaudio.c ****             dprintf(("saProcessResponse: SETFREQ freq %d\r\n", freq));
 321:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 322:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 811              	 .loc 2 322 0
 812 019a 08E0     	 b .L40
 813              	.L49:
 814 019c 07E0     	 b .L40
 815              	.L32:
 323:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 324:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_CMD_SET_MODE: // Set Mode
 325:../cleanflight/src/main/io/vtx_smartaudio.c ****         dprintf(("saProcessResponse: SET_MODE 0x%x\r\n", buf[2]));
 326:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 327:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 328:../cleanflight/src/main/io/vtx_smartaudio.c ****     default:
 329:../cleanflight/src/main/io/vtx_smartaudio.c ****         saStat.badcode++;
 816              	 .loc 2 329 0
 817 019e 104B     	 ldr r3,.L54+4
 818 01a0 9B89     	 ldrh r3,[r3,#12]
 819 01a2 0133     	 adds r3,r3,#1
 820 01a4 9AB2     	 uxth r2,r3
 821 01a6 0E4B     	 ldr r3,.L54+4
 822 01a8 9A81     	 strh r2,[r3,#12]
 330:../cleanflight/src/main/io/vtx_smartaudio.c ****         return;
 823              	 .loc 2 330 0
 824 01aa 14E0     	 b .L28
 825              	.L53:
 300:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 826              	 .loc 2 300 0
 827 01ac 00BF     	 nop
 828              	.L40:
 829              	.LBE5:
 331:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 332:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 333:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (memcmp(&saDevice, &saDevicePrev, sizeof(smartAudioDevice_t))) {
 830              	 .loc 2 333 0
 831 01ae 0D48     	 ldr r0,.L54+8
 832 01b0 0F49     	 ldr r1,.L54+20
 833 01b2 0822     	 movs r2,#8
 834 01b4 FFF7FEFF 	 bl memcmp
 835 01b8 0346     	 mov r3,r0
 836 01ba 002B     	 cmp r3,#0
 837 01bc 01D0     	 beq .L52
 334:../cleanflight/src/main/io/vtx_smartaudio.c **** #ifdef USE_CMS    //if changes then trigger saCms update
 335:../cleanflight/src/main/io/vtx_smartaudio.c ****         saCmsResetOpmodel();
 838              	 .loc 2 335 0
 839 01be FFF7FEFF 	 bl saCmsResetOpmodel
 840              	.L52:
 336:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
 337:../cleanflight/src/main/io/vtx_smartaudio.c **** #ifdef USE_SMARTAUDIO_DPRINTF    // Debug
 338:../cleanflight/src/main/io/vtx_smartaudio.c ****         saPrintSettings();
 339:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
 340:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 341:../cleanflight/src/main/io/vtx_smartaudio.c ****     saDevicePrev = saDevice;
 841              	 .loc 2 341 0
 842 01c2 0B4B     	 ldr r3,.L54+20
 843 01c4 074A     	 ldr r2,.L54+8
 844 01c6 92E80300 	 ldmia r2,{r0,r1}
 845 01ca 83E80300 	 stmia r3,{r0,r1}
 342:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 343:../cleanflight/src/main/io/vtx_smartaudio.c **** #ifdef USE_VTX_COMMON
 344:../cleanflight/src/main/io/vtx_smartaudio.c ****     // Todo: Update states in saVtxDevice?
 345:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
 346:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 347:../cleanflight/src/main/io/vtx_smartaudio.c **** #ifdef USE_CMS
 348:../cleanflight/src/main/io/vtx_smartaudio.c ****     // Export current device status for CMS
 349:../cleanflight/src/main/io/vtx_smartaudio.c ****     saCmsUpdate();
 846              	 .loc 2 349 0
 847 01ce FFF7FEFF 	 bl saCmsUpdate
 350:../cleanflight/src/main/io/vtx_smartaudio.c ****     saUpdateStatusString();
 848              	 .loc 2 350 0
 849 01d2 FFF7FEFF 	 bl saUpdateStatusString
 850              	.L28:
 351:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
 352:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 851              	 .loc 2 352 0
 852 01d6 1037     	 adds r7,r7,#16
 853              	.LCFI21:
 854              	 .cfi_def_cfa_offset 8
 855 01d8 BD46     	 mov sp,r7
 856              	.LCFI22:
 857              	 .cfi_def_cfa_register 13
 858              	 
 859 01da 80BD     	 pop {r7,pc}
 860              	.L55:
 861              	 .align 2
 862              	.L54:
 863 01dc 00000000 	 .word sa_outstanding
 864 01e0 00000000 	 .word saStat
 865 01e4 00000000 	 .word saDevice
 866 01e8 00000000 	 .word debugMode
 867 01ec 00000000 	 .word debug
 868 01f0 00000000 	 .word saDevicePrev
 869              	 .cfi_endproc
 870              	.LFE543:
 872              	 .section .text.saReceiveFramer,"ax",%progbits
 873              	 .align 2
 874              	 .thumb
 875              	 .thumb_func
 877              	saReceiveFramer:
 878              	.LFB544:
 353:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 354:../cleanflight/src/main/io/vtx_smartaudio.c **** //
 355:../cleanflight/src/main/io/vtx_smartaudio.c **** // Datalink
 356:../cleanflight/src/main/io/vtx_smartaudio.c **** //
 357:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 358:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saReceiveFramer(uint8_t c)
 359:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 879              	 .loc 2 359 0
 880              	 .cfi_startproc
 881              	 
 882              	 
 883 0000 80B5     	 push {r7,lr}
 884              	.LCFI23:
 885              	 .cfi_def_cfa_offset 8
 886              	 .cfi_offset 7,-8
 887              	 .cfi_offset 14,-4
 888 0002 82B0     	 sub sp,sp,#8
 889              	.LCFI24:
 890              	 .cfi_def_cfa_offset 16
 891 0004 00AF     	 add r7,sp,#0
 892              	.LCFI25:
 893              	 .cfi_def_cfa_register 7
 894 0006 0346     	 mov r3,r0
 895 0008 FB71     	 strb r3,[r7,#7]
 360:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 361:../cleanflight/src/main/io/vtx_smartaudio.c ****     static enum saFramerState_e {
 362:../cleanflight/src/main/io/vtx_smartaudio.c ****         S_WAITPRE1, // Waiting for preamble 1 (0xAA)
 363:../cleanflight/src/main/io/vtx_smartaudio.c ****         S_WAITPRE2, // Waiting for preamble 2 (0x55)
 364:../cleanflight/src/main/io/vtx_smartaudio.c ****         S_WAITRESP, // Waiting for response code
 365:../cleanflight/src/main/io/vtx_smartaudio.c ****         S_WAITLEN,  // Waiting for length
 366:../cleanflight/src/main/io/vtx_smartaudio.c ****         S_DATA,     // Receiving data
 367:../cleanflight/src/main/io/vtx_smartaudio.c ****         S_WAITCRC,  // Waiting for CRC
 368:../cleanflight/src/main/io/vtx_smartaudio.c ****     } state = S_WAITPRE1;
 369:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 370:../cleanflight/src/main/io/vtx_smartaudio.c ****     static int len;
 371:../cleanflight/src/main/io/vtx_smartaudio.c ****     static int dlen;
 372:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 373:../cleanflight/src/main/io/vtx_smartaudio.c ****     switch (state) {
 896              	 .loc 2 373 0
 897 000a 514B     	 ldr r3,.L75
 898 000c 1B78     	 ldrb r3,[r3]
 899 000e 052B     	 cmp r3,#5
 900 0010 00F29B80 	 bhi .L56
 901 0014 01A2     	 adr r2,.L59
 902 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 903 001a 00BF     	 .p2align 2
 904              	.L59:
 905 001c 35000000 	 .word .L58+1
 906 0020 4B000000 	 .word .L60+1
 907 0024 6D000000 	 .word .L61+1
 908 0028 7B000000 	 .word .L62+1
 909 002c C3000000 	 .word .L63+1
 910 0030 EF000000 	 .word .L64+1
 911              	 .p2align 1
 912              	.L58:
 374:../cleanflight/src/main/io/vtx_smartaudio.c ****     case S_WAITPRE1:
 375:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (c == 0xAA) {
 913              	 .loc 2 375 0
 914 0034 FB79     	 ldrb r3,[r7,#7]
 915 0036 AA2B     	 cmp r3,#170
 916 0038 03D1     	 bne .L65
 376:../cleanflight/src/main/io/vtx_smartaudio.c ****             state = S_WAITPRE2;
 917              	 .loc 2 376 0
 918 003a 454B     	 ldr r3,.L75
 919 003c 0122     	 movs r2,#1
 920 003e 1A70     	 strb r2,[r3]
 377:../cleanflight/src/main/io/vtx_smartaudio.c ****         } else {
 378:../cleanflight/src/main/io/vtx_smartaudio.c ****             state = S_WAITPRE1; // Don't need this (no change)
 379:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 380:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 921              	 .loc 2 380 0
 922 0040 83E0     	 b .L56
 923              	.L65:
 378:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 924              	 .loc 2 378 0
 925 0042 434B     	 ldr r3,.L75
 926 0044 0022     	 movs r2,#0
 927 0046 1A70     	 strb r2,[r3]
 928              	 .loc 2 380 0
 929 0048 7FE0     	 b .L56
 930              	.L60:
 381:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 382:../cleanflight/src/main/io/vtx_smartaudio.c ****     case S_WAITPRE2:
 383:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (c == 0x55) {
 931              	 .loc 2 383 0
 932 004a FB79     	 ldrb r3,[r7,#7]
 933 004c 552B     	 cmp r3,#85
 934 004e 03D1     	 bne .L67
 384:../cleanflight/src/main/io/vtx_smartaudio.c ****             state = S_WAITRESP;
 935              	 .loc 2 384 0
 936 0050 3F4B     	 ldr r3,.L75
 937 0052 0222     	 movs r2,#2
 938 0054 1A70     	 strb r2,[r3]
 385:../cleanflight/src/main/io/vtx_smartaudio.c ****         } else {
 386:../cleanflight/src/main/io/vtx_smartaudio.c ****             saStat.badpre++;
 387:../cleanflight/src/main/io/vtx_smartaudio.c ****             state = S_WAITPRE1;
 388:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 389:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 939              	 .loc 2 389 0
 940 0056 78E0     	 b .L56
 941              	.L67:
 386:../cleanflight/src/main/io/vtx_smartaudio.c ****             state = S_WAITPRE1;
 942              	 .loc 2 386 0
 943 0058 3E4B     	 ldr r3,.L75+4
 944 005a 9B88     	 ldrh r3,[r3,#4]
 945 005c 0133     	 adds r3,r3,#1
 946 005e 9AB2     	 uxth r2,r3
 947 0060 3C4B     	 ldr r3,.L75+4
 948 0062 9A80     	 strh r2,[r3,#4]
 387:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 949              	 .loc 2 387 0
 950 0064 3A4B     	 ldr r3,.L75
 951 0066 0022     	 movs r2,#0
 952 0068 1A70     	 strb r2,[r3]
 953              	 .loc 2 389 0
 954 006a 6EE0     	 b .L56
 955              	.L61:
 390:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 391:../cleanflight/src/main/io/vtx_smartaudio.c ****     case S_WAITRESP:
 392:../cleanflight/src/main/io/vtx_smartaudio.c ****         sa_rbuf[0] = c;
 956              	 .loc 2 392 0
 957 006c 3A4A     	 ldr r2,.L75+8
 958 006e FB79     	 ldrb r3,[r7,#7]
 959 0070 1370     	 strb r3,[r2]
 393:../cleanflight/src/main/io/vtx_smartaudio.c ****         state = S_WAITLEN;
 960              	 .loc 2 393 0
 961 0072 374B     	 ldr r3,.L75
 962 0074 0322     	 movs r2,#3
 963 0076 1A70     	 strb r2,[r3]
 394:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 964              	 .loc 2 394 0
 965 0078 67E0     	 b .L56
 966              	.L62:
 395:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 396:../cleanflight/src/main/io/vtx_smartaudio.c ****     case S_WAITLEN:
 397:../cleanflight/src/main/io/vtx_smartaudio.c ****         sa_rbuf[1] = c;
 967              	 .loc 2 397 0
 968 007a 374A     	 ldr r2,.L75+8
 969 007c FB79     	 ldrb r3,[r7,#7]
 970 007e 5370     	 strb r3,[r2,#1]
 398:../cleanflight/src/main/io/vtx_smartaudio.c ****         len = c;
 971              	 .loc 2 398 0
 972 0080 FB79     	 ldrb r3,[r7,#7]
 973 0082 364A     	 ldr r2,.L75+12
 974 0084 1360     	 str r3,[r2]
 399:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 400:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (len > SA_MAX_RCVLEN - 2) {
 975              	 .loc 2 400 0
 976 0086 354B     	 ldr r3,.L75+12
 977 0088 1B68     	 ldr r3,[r3]
 978 008a 092B     	 cmp r3,#9
 979 008c 09DD     	 ble .L69
 401:../cleanflight/src/main/io/vtx_smartaudio.c ****             saStat.badlen++;
 980              	 .loc 2 401 0
 981 008e 314B     	 ldr r3,.L75+4
 982 0090 DB88     	 ldrh r3,[r3,#6]
 983 0092 0133     	 adds r3,r3,#1
 984 0094 9AB2     	 uxth r2,r3
 985 0096 2F4B     	 ldr r3,.L75+4
 986 0098 DA80     	 strh r2,[r3,#6]
 402:../cleanflight/src/main/io/vtx_smartaudio.c ****             state = S_WAITPRE1;
 987              	 .loc 2 402 0
 988 009a 2D4B     	 ldr r3,.L75
 989 009c 0022     	 movs r2,#0
 990 009e 1A70     	 strb r2,[r3]
 991 00a0 0EE0     	 b .L70
 992              	.L69:
 403:../cleanflight/src/main/io/vtx_smartaudio.c ****         } else if (len == 0) {
 993              	 .loc 2 403 0
 994 00a2 2E4B     	 ldr r3,.L75+12
 995 00a4 1B68     	 ldr r3,[r3]
 996 00a6 002B     	 cmp r3,#0
 997 00a8 03D1     	 bne .L71
 404:../cleanflight/src/main/io/vtx_smartaudio.c ****             state = S_WAITCRC;
 998              	 .loc 2 404 0
 999 00aa 294B     	 ldr r3,.L75
 1000 00ac 0522     	 movs r2,#5
 1001 00ae 1A70     	 strb r2,[r3]
 1002 00b0 06E0     	 b .L70
 1003              	.L71:
 405:../cleanflight/src/main/io/vtx_smartaudio.c ****         } else {
 406:../cleanflight/src/main/io/vtx_smartaudio.c ****             dlen = 0;
 1004              	 .loc 2 406 0
 1005 00b2 2B4B     	 ldr r3,.L75+16
 1006 00b4 0022     	 movs r2,#0
 1007 00b6 1A60     	 str r2,[r3]
 407:../cleanflight/src/main/io/vtx_smartaudio.c ****             state = S_DATA;
 1008              	 .loc 2 407 0
 1009 00b8 254B     	 ldr r3,.L75
 1010 00ba 0422     	 movs r2,#4
 1011 00bc 1A70     	 strb r2,[r3]
 408:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 409:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 1012              	 .loc 2 409 0
 1013 00be 44E0     	 b .L56
 1014              	.L70:
 1015 00c0 43E0     	 b .L56
 1016              	.L63:
 410:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 411:../cleanflight/src/main/io/vtx_smartaudio.c ****     case S_DATA:
 412:../cleanflight/src/main/io/vtx_smartaudio.c ****         // XXX Should check buffer overflow (-> saerr_overflow)
 413:../cleanflight/src/main/io/vtx_smartaudio.c ****         sa_rbuf[2 + dlen] = c;
 1017              	 .loc 2 413 0
 1018 00c2 274B     	 ldr r3,.L75+16
 1019 00c4 1B68     	 ldr r3,[r3]
 1020 00c6 0233     	 adds r3,r3,#2
 1021 00c8 2349     	 ldr r1,.L75+8
 1022 00ca FA79     	 ldrb r2,[r7,#7]
 1023 00cc CA54     	 strb r2,[r1,r3]
 414:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (++dlen == len) {
 1024              	 .loc 2 414 0
 1025 00ce 244B     	 ldr r3,.L75+16
 1026 00d0 1B68     	 ldr r3,[r3]
 1027 00d2 0133     	 adds r3,r3,#1
 1028 00d4 224A     	 ldr r2,.L75+16
 1029 00d6 1360     	 str r3,[r2]
 1030 00d8 214B     	 ldr r3,.L75+16
 1031 00da 1A68     	 ldr r2,[r3]
 1032 00dc 1F4B     	 ldr r3,.L75+12
 1033 00de 1B68     	 ldr r3,[r3]
 1034 00e0 9A42     	 cmp r2,r3
 1035 00e2 03D1     	 bne .L72
 415:../cleanflight/src/main/io/vtx_smartaudio.c ****             state = S_WAITCRC;
 1036              	 .loc 2 415 0
 1037 00e4 1A4B     	 ldr r3,.L75
 1038 00e6 0522     	 movs r2,#5
 1039 00e8 1A70     	 strb r2,[r3]
 416:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 417:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 1040              	 .loc 2 417 0
 1041 00ea 2EE0     	 b .L56
 1042              	.L72:
 1043 00ec 2DE0     	 b .L56
 1044              	.L64:
 418:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 419:../cleanflight/src/main/io/vtx_smartaudio.c ****     case S_WAITCRC:
 420:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (CRC8(sa_rbuf, 2 + len) == c) {
 1045              	 .loc 2 420 0
 1046 00ee 1B4B     	 ldr r3,.L75+12
 1047 00f0 1B68     	 ldr r3,[r3]
 1048 00f2 DBB2     	 uxtb r3,r3
 1049 00f4 0233     	 adds r3,r3,#2
 1050 00f6 DBB2     	 uxtb r3,r3
 1051 00f8 DBB2     	 uxtb r3,r3
 1052 00fa 5BB2     	 sxtb r3,r3
 1053 00fc 1648     	 ldr r0,.L75+8
 1054 00fe 1946     	 mov r1,r3
 1055 0100 FFF7FEFF 	 bl CRC8
 1056 0104 0346     	 mov r3,r0
 1057 0106 1A46     	 mov r2,r3
 1058 0108 FB79     	 ldrb r3,[r7,#7]
 1059 010a 9342     	 cmp r3,r2
 1060 010c 0DD1     	 bne .L73
 421:../cleanflight/src/main/io/vtx_smartaudio.c ****             // Got a response
 422:../cleanflight/src/main/io/vtx_smartaudio.c ****             saProcessResponse(sa_rbuf, len + 2);
 1061              	 .loc 2 422 0
 1062 010e 134B     	 ldr r3,.L75+12
 1063 0110 1B68     	 ldr r3,[r3]
 1064 0112 0233     	 adds r3,r3,#2
 1065 0114 1048     	 ldr r0,.L75+8
 1066 0116 1946     	 mov r1,r3
 1067 0118 FFF7FEFF 	 bl saProcessResponse
 423:../cleanflight/src/main/io/vtx_smartaudio.c ****             saStat.pktrcvd++;
 1068              	 .loc 2 423 0
 1069 011c 0D4B     	 ldr r3,.L75+4
 1070 011e 5B88     	 ldrh r3,[r3,#2]
 1071 0120 0133     	 adds r3,r3,#1
 1072 0122 9AB2     	 uxth r2,r3
 1073 0124 0B4B     	 ldr r3,.L75+4
 1074 0126 5A80     	 strh r2,[r3,#2]
 1075 0128 0BE0     	 b .L74
 1076              	.L73:
 424:../cleanflight/src/main/io/vtx_smartaudio.c ****         } else if (sa_rbuf[0] & 1) {
 1077              	 .loc 2 424 0
 1078 012a 0B4B     	 ldr r3,.L75+8
 1079 012c 1B78     	 ldrb r3,[r3]
 1080 012e 03F00103 	 and r3,r3,#1
 1081 0132 002B     	 cmp r3,#0
 1082 0134 05D1     	 bne .L74
 425:../cleanflight/src/main/io/vtx_smartaudio.c ****             // Command echo
 426:../cleanflight/src/main/io/vtx_smartaudio.c ****             // XXX There is an exceptional case (V2 response)
 427:../cleanflight/src/main/io/vtx_smartaudio.c ****             // XXX Should check crc in the command format?
 428:../cleanflight/src/main/io/vtx_smartaudio.c ****         } else {
 429:../cleanflight/src/main/io/vtx_smartaudio.c ****             saStat.crc++;
 1083              	 .loc 2 429 0
 1084 0136 074B     	 ldr r3,.L75+4
 1085 0138 1B89     	 ldrh r3,[r3,#8]
 1086 013a 0133     	 adds r3,r3,#1
 1087 013c 9AB2     	 uxth r2,r3
 1088 013e 054B     	 ldr r3,.L75+4
 1089 0140 1A81     	 strh r2,[r3,#8]
 1090              	.L74:
 430:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 431:../cleanflight/src/main/io/vtx_smartaudio.c ****         state = S_WAITPRE1;
 1091              	 .loc 2 431 0
 1092 0142 034B     	 ldr r3,.L75
 1093 0144 0022     	 movs r2,#0
 1094 0146 1A70     	 strb r2,[r3]
 432:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 1095              	 .loc 2 432 0
 1096 0148 00BF     	 nop
 1097              	.L56:
 433:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 434:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1098              	 .loc 2 434 0
 1099 014a 0837     	 adds r7,r7,#8
 1100              	.LCFI26:
 1101              	 .cfi_def_cfa_offset 8
 1102 014c BD46     	 mov sp,r7
 1103              	.LCFI27:
 1104              	 .cfi_def_cfa_register 13
 1105              	 
 1106 014e 80BD     	 pop {r7,pc}
 1107              	.L76:
 1108              	 .align 2
 1109              	.L75:
 1110 0150 00000000 	 .word state.12737
 1111 0154 00000000 	 .word saStat
 1112 0158 00000000 	 .word sa_rbuf
 1113 015c 00000000 	 .word len.12738
 1114 0160 00000000 	 .word dlen.12739
 1115              	 .cfi_endproc
 1116              	.LFE544:
 1118              	 .section .text.saSendFrame,"ax",%progbits
 1119              	 .align 2
 1120              	 .thumb
 1121              	 .thumb_func
 1123              	saSendFrame:
 1124              	.LFB545:
 435:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 436:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saSendFrame(uint8_t *buf, int len)
 437:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1125              	 .loc 2 437 0
 1126              	 .cfi_startproc
 1127              	 
 1128              	 
 1129 0000 80B5     	 push {r7,lr}
 1130              	.LCFI28:
 1131              	 .cfi_def_cfa_offset 8
 1132              	 .cfi_offset 7,-8
 1133              	 .cfi_offset 14,-4
 1134 0002 84B0     	 sub sp,sp,#16
 1135              	.LCFI29:
 1136              	 .cfi_def_cfa_offset 24
 1137 0004 00AF     	 add r7,sp,#0
 1138              	.LCFI30:
 1139              	 .cfi_def_cfa_register 7
 1140 0006 7860     	 str r0,[r7,#4]
 1141 0008 3960     	 str r1,[r7]
 438:../cleanflight/src/main/io/vtx_smartaudio.c ****     switch (smartAudioSerialPort->identifier) {
 1142              	 .loc 2 438 0
 1143 000a 184B     	 ldr r3,.L84
 1144 000c 1B68     	 ldr r3,[r3]
 1145 000e 93F83230 	 ldrb r3,[r3,#50]
 1146 0012 1E3B     	 subs r3,r3,#30
 1147 0014 012B     	 cmp r3,#1
 1148 0016 06D9     	 bls .L83
 439:../cleanflight/src/main/io/vtx_smartaudio.c ****         case SERIAL_PORT_SOFTSERIAL1:
 440:../cleanflight/src/main/io/vtx_smartaudio.c ****         case SERIAL_PORT_SOFTSERIAL2:
 441:../cleanflight/src/main/io/vtx_smartaudio.c ****             break;
 442:../cleanflight/src/main/io/vtx_smartaudio.c ****         default:
 443:../cleanflight/src/main/io/vtx_smartaudio.c ****             serialWrite(smartAudioSerialPort, 0x00); // Generate 1st start bit
 1149              	 .loc 2 443 0
 1150 0018 144B     	 ldr r3,.L84
 1151 001a 1B68     	 ldr r3,[r3]
 1152 001c 1846     	 mov r0,r3
 1153 001e 0021     	 movs r1,#0
 1154 0020 FFF7FEFF 	 bl serialWrite
 444:../cleanflight/src/main/io/vtx_smartaudio.c ****             break;
 1155              	 .loc 2 444 0
 1156 0024 00E0     	 b .L80
 1157              	.L83:
 441:../cleanflight/src/main/io/vtx_smartaudio.c ****         default:
 1158              	 .loc 2 441 0
 1159 0026 00BF     	 nop
 1160              	.L80:
 1161              	.LBB6:
 445:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 446:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 447:../cleanflight/src/main/io/vtx_smartaudio.c ****     for (int i = 0 ; i < len ; i++) {
 1162              	 .loc 2 447 0
 1163 0028 0023     	 movs r3,#0
 1164 002a FB60     	 str r3,[r7,#12]
 1165 002c 0CE0     	 b .L81
 1166              	.L82:
 448:../cleanflight/src/main/io/vtx_smartaudio.c ****         serialWrite(smartAudioSerialPort, buf[i]);
 1167              	 .loc 2 448 0 discriminator 3
 1168 002e 0F4B     	 ldr r3,.L84
 1169 0030 1968     	 ldr r1,[r3]
 1170 0032 FB68     	 ldr r3,[r7,#12]
 1171 0034 7A68     	 ldr r2,[r7,#4]
 1172 0036 1344     	 add r3,r3,r2
 1173 0038 1B78     	 ldrb r3,[r3]
 1174 003a 0846     	 mov r0,r1
 1175 003c 1946     	 mov r1,r3
 1176 003e FFF7FEFF 	 bl serialWrite
 447:../cleanflight/src/main/io/vtx_smartaudio.c ****         serialWrite(smartAudioSerialPort, buf[i]);
 1177              	 .loc 2 447 0 discriminator 3
 1178 0042 FB68     	 ldr r3,[r7,#12]
 1179 0044 0133     	 adds r3,r3,#1
 1180 0046 FB60     	 str r3,[r7,#12]
 1181              	.L81:
 447:../cleanflight/src/main/io/vtx_smartaudio.c ****         serialWrite(smartAudioSerialPort, buf[i]);
 1182              	 .loc 2 447 0 is_stmt 0 discriminator 1
 1183 0048 FA68     	 ldr r2,[r7,#12]
 1184 004a 3B68     	 ldr r3,[r7]
 1185 004c 9A42     	 cmp r2,r3
 1186 004e EEDB     	 blt .L82
 1187              	.LBE6:
 449:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 450:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 451:../cleanflight/src/main/io/vtx_smartaudio.c ****     sa_lastTransmissionMs = millis();
 1188              	 .loc 2 451 0 is_stmt 1
 1189 0050 FFF7FEFF 	 bl millis
 1190 0054 0246     	 mov r2,r0
 1191 0056 064B     	 ldr r3,.L84+4
 1192 0058 1A60     	 str r2,[r3]
 452:../cleanflight/src/main/io/vtx_smartaudio.c ****     saStat.pktsent++;
 1193              	 .loc 2 452 0
 1194 005a 064B     	 ldr r3,.L84+8
 1195 005c 1B88     	 ldrh r3,[r3]
 1196 005e 0133     	 adds r3,r3,#1
 1197 0060 9AB2     	 uxth r2,r3
 1198 0062 044B     	 ldr r3,.L84+8
 1199 0064 1A80     	 strh r2,[r3]
 453:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1200              	 .loc 2 453 0
 1201 0066 1037     	 adds r7,r7,#16
 1202              	.LCFI31:
 1203              	 .cfi_def_cfa_offset 8
 1204 0068 BD46     	 mov sp,r7
 1205              	.LCFI32:
 1206              	 .cfi_def_cfa_register 13
 1207              	 
 1208 006a 80BD     	 pop {r7,pc}
 1209              	.L85:
 1210              	 .align 2
 1211              	.L84:
 1212 006c 00000000 	 .word smartAudioSerialPort
 1213 0070 00000000 	 .word sa_lastTransmissionMs
 1214 0074 00000000 	 .word saStat
 1215              	 .cfi_endproc
 1216              	.LFE545:
 1218              	 .section .text.saResendCmd,"ax",%progbits
 1219              	 .align 2
 1220              	 .thumb
 1221              	 .thumb_func
 1223              	saResendCmd:
 1224              	.LFB546:
 454:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 455:../cleanflight/src/main/io/vtx_smartaudio.c **** /*
 456:../cleanflight/src/main/io/vtx_smartaudio.c ****  * Retransmission and command queuing
 457:../cleanflight/src/main/io/vtx_smartaudio.c ****  *
 458:../cleanflight/src/main/io/vtx_smartaudio.c ****  *   The transport level support includes retransmission on response timeout
 459:../cleanflight/src/main/io/vtx_smartaudio.c ****  * and command queueing.
 460:../cleanflight/src/main/io/vtx_smartaudio.c ****  *
 461:../cleanflight/src/main/io/vtx_smartaudio.c ****  * Resend buffer:
 462:../cleanflight/src/main/io/vtx_smartaudio.c ****  *   The smartaudio returns response for valid command frames in no less
 463:../cleanflight/src/main/io/vtx_smartaudio.c ****  * than 60msec, which we can't wait. So there's a need for a resend buffer.
 464:../cleanflight/src/main/io/vtx_smartaudio.c ****  *
 465:../cleanflight/src/main/io/vtx_smartaudio.c ****  * Command queueing:
 466:../cleanflight/src/main/io/vtx_smartaudio.c ****  *   The driver autonomously sends GetSettings command for auto-bauding,
 467:../cleanflight/src/main/io/vtx_smartaudio.c ****  * asynchronous to user initiated commands; commands issued while another
 468:../cleanflight/src/main/io/vtx_smartaudio.c ****  * command is outstanding must be queued for later processing.
 469:../cleanflight/src/main/io/vtx_smartaudio.c ****  *   The queueing also handles the case in which multiple commands are
 470:../cleanflight/src/main/io/vtx_smartaudio.c ****  * required to implement a user level command.
 471:../cleanflight/src/main/io/vtx_smartaudio.c ****  */
 472:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 473:../cleanflight/src/main/io/vtx_smartaudio.c **** // Retransmission
 474:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 475:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saResendCmd(void)
 476:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1225              	 .loc 2 476 0
 1226              	 .cfi_startproc
 1227              	 
 1228              	 
 1229 0000 80B5     	 push {r7,lr}
 1230              	.LCFI33:
 1231              	 .cfi_def_cfa_offset 8
 1232              	 .cfi_offset 7,-8
 1233              	 .cfi_offset 14,-4
 1234 0002 00AF     	 add r7,sp,#0
 1235              	.LCFI34:
 1236              	 .cfi_def_cfa_register 7
 477:../cleanflight/src/main/io/vtx_smartaudio.c ****     saSendFrame(sa_osbuf, sa_oslen);
 1237              	 .loc 2 477 0
 1238 0004 034B     	 ldr r3,.L87
 1239 0006 1B68     	 ldr r3,[r3]
 1240 0008 0348     	 ldr r0,.L87+4
 1241 000a 1946     	 mov r1,r3
 1242 000c FFF7FEFF 	 bl saSendFrame
 478:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1243              	 .loc 2 478 0
 1244 0010 80BD     	 pop {r7,pc}
 1245              	.L88:
 1246 0012 00BF     	 .align 2
 1247              	.L87:
 1248 0014 00000000 	 .word sa_oslen
 1249 0018 00000000 	 .word sa_osbuf
 1250              	 .cfi_endproc
 1251              	.LFE546:
 1253              	 .section .text.saSendCmd,"ax",%progbits
 1254              	 .align 2
 1255              	 .thumb
 1256              	 .thumb_func
 1258              	saSendCmd:
 1259              	.LFB547:
 479:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 480:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saSendCmd(uint8_t *buf, int len)
 481:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1260              	 .loc 2 481 0
 1261              	 .cfi_startproc
 1262              	 
 1263              	 
 1264 0000 80B5     	 push {r7,lr}
 1265              	.LCFI35:
 1266              	 .cfi_def_cfa_offset 8
 1267              	 .cfi_offset 7,-8
 1268              	 .cfi_offset 14,-4
 1269 0002 84B0     	 sub sp,sp,#16
 1270              	.LCFI36:
 1271              	 .cfi_def_cfa_offset 24
 1272 0004 00AF     	 add r7,sp,#0
 1273              	.LCFI37:
 1274              	 .cfi_def_cfa_register 7
 1275 0006 7860     	 str r0,[r7,#4]
 1276 0008 3960     	 str r1,[r7]
 1277              	.LBB7:
 482:../cleanflight/src/main/io/vtx_smartaudio.c ****     for (int i = 0 ; i < len ; i++) {
 1278              	 .loc 2 482 0
 1279 000a 0023     	 movs r3,#0
 1280 000c FB60     	 str r3,[r7,#12]
 1281 000e 0BE0     	 b .L90
 1282              	.L91:
 483:../cleanflight/src/main/io/vtx_smartaudio.c ****         sa_osbuf[i] = buf[i];
 1283              	 .loc 2 483 0 discriminator 3
 1284 0010 FB68     	 ldr r3,[r7,#12]
 1285 0012 7A68     	 ldr r2,[r7,#4]
 1286 0014 1344     	 add r3,r3,r2
 1287 0016 1978     	 ldrb r1,[r3]
 1288 0018 0F4A     	 ldr r2,.L92
 1289 001a FB68     	 ldr r3,[r7,#12]
 1290 001c 1344     	 add r3,r3,r2
 1291 001e 0A46     	 mov r2,r1
 1292 0020 1A70     	 strb r2,[r3]
 482:../cleanflight/src/main/io/vtx_smartaudio.c ****     for (int i = 0 ; i < len ; i++) {
 1293              	 .loc 2 482 0 discriminator 3
 1294 0022 FB68     	 ldr r3,[r7,#12]
 1295 0024 0133     	 adds r3,r3,#1
 1296 0026 FB60     	 str r3,[r7,#12]
 1297              	.L90:
 482:../cleanflight/src/main/io/vtx_smartaudio.c ****     for (int i = 0 ; i < len ; i++) {
 1298              	 .loc 2 482 0 is_stmt 0 discriminator 1
 1299 0028 FA68     	 ldr r2,[r7,#12]
 1300 002a 3B68     	 ldr r3,[r7]
 1301 002c 9A42     	 cmp r2,r3
 1302 002e EFDB     	 blt .L91
 1303              	.LBE7:
 484:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 485:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 486:../cleanflight/src/main/io/vtx_smartaudio.c ****     sa_oslen = len;
 1304              	 .loc 2 486 0 is_stmt 1
 1305 0030 0A4A     	 ldr r2,.L92+4
 1306 0032 3B68     	 ldr r3,[r7]
 1307 0034 1360     	 str r3,[r2]
 487:../cleanflight/src/main/io/vtx_smartaudio.c ****     sa_outstanding = (buf[2] >> 1);
 1308              	 .loc 2 487 0
 1309 0036 7B68     	 ldr r3,[r7,#4]
 1310 0038 0233     	 adds r3,r3,#2
 1311 003a 1B78     	 ldrb r3,[r3]
 1312 003c 5B08     	 lsrs r3,r3,#1
 1313 003e DAB2     	 uxtb r2,r3
 1314 0040 074B     	 ldr r3,.L92+8
 1315 0042 1A70     	 strb r2,[r3]
 488:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 489:../cleanflight/src/main/io/vtx_smartaudio.c ****     saSendFrame(sa_osbuf, sa_oslen);
 1316              	 .loc 2 489 0
 1317 0044 054B     	 ldr r3,.L92+4
 1318 0046 1B68     	 ldr r3,[r3]
 1319 0048 0348     	 ldr r0,.L92
 1320 004a 1946     	 mov r1,r3
 1321 004c FFF7FEFF 	 bl saSendFrame
 490:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1322              	 .loc 2 490 0
 1323 0050 1037     	 adds r7,r7,#16
 1324              	.LCFI38:
 1325              	 .cfi_def_cfa_offset 8
 1326 0052 BD46     	 mov sp,r7
 1327              	.LCFI39:
 1328              	 .cfi_def_cfa_register 13
 1329              	 
 1330 0054 80BD     	 pop {r7,pc}
 1331              	.L93:
 1332 0056 00BF     	 .align 2
 1333              	.L92:
 1334 0058 00000000 	 .word sa_osbuf
 1335 005c 00000000 	 .word sa_oslen
 1336 0060 00000000 	 .word sa_outstanding
 1337              	 .cfi_endproc
 1338              	.LFE547:
 1340              	 .section .bss.sa_queue,"aw",%nobits
 1341              	 .align 2
 1344              	sa_queue:
 1345 0000 00000000 	 .space 48
 1345      00000000 
 1345      00000000 
 1345      00000000 
 1345      00000000 
 1346              	 .section .bss.sa_qhead,"aw",%nobits
 1349              	sa_qhead:
 1350 0000 00       	 .space 1
 1351              	 .section .bss.sa_qtail,"aw",%nobits
 1354              	sa_qtail:
 1355 0000 00       	 .space 1
 1356              	 .section .text.saQueueEmpty,"ax",%progbits
 1357              	 .align 2
 1358              	 .thumb
 1359              	 .thumb_func
 1361              	saQueueEmpty:
 1362              	.LFB548:
 491:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 492:../cleanflight/src/main/io/vtx_smartaudio.c **** // Command queue management
 493:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 494:../cleanflight/src/main/io/vtx_smartaudio.c **** typedef struct saCmdQueue_s {
 495:../cleanflight/src/main/io/vtx_smartaudio.c ****     uint8_t *buf;
 496:../cleanflight/src/main/io/vtx_smartaudio.c ****     int len;
 497:../cleanflight/src/main/io/vtx_smartaudio.c **** } saCmdQueue_t;
 498:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 499:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_QSIZE 6     // 1 heartbeat (GetSettings) + 2 commands + 1 slack
 500:../cleanflight/src/main/io/vtx_smartaudio.c **** static saCmdQueue_t sa_queue[SA_QSIZE];
 501:../cleanflight/src/main/io/vtx_smartaudio.c **** static uint8_t sa_qhead = 0;
 502:../cleanflight/src/main/io/vtx_smartaudio.c **** static uint8_t sa_qtail = 0;
 503:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 504:../cleanflight/src/main/io/vtx_smartaudio.c **** static bool saQueueEmpty(void)
 505:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1363              	 .loc 2 505 0
 1364              	 .cfi_startproc
 1365              	 
 1366              	 
 1367              	 
 1368 0000 80B4     	 push {r7}
 1369              	.LCFI40:
 1370              	 .cfi_def_cfa_offset 4
 1371              	 .cfi_offset 7,-4
 1372 0002 00AF     	 add r7,sp,#0
 1373              	.LCFI41:
 1374              	 .cfi_def_cfa_register 7
 506:../cleanflight/src/main/io/vtx_smartaudio.c ****     return sa_qhead == sa_qtail;
 1375              	 .loc 2 506 0
 1376 0004 064B     	 ldr r3,.L96
 1377 0006 1A78     	 ldrb r2,[r3]
 1378 0008 064B     	 ldr r3,.L96+4
 1379 000a 1B78     	 ldrb r3,[r3]
 1380 000c 9A42     	 cmp r2,r3
 1381 000e 0CBF     	 ite eq
 1382 0010 0123     	 moveq r3,#1
 1383 0012 0023     	 movne r3,#0
 1384 0014 DBB2     	 uxtb r3,r3
 507:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1385              	 .loc 2 507 0
 1386 0016 1846     	 mov r0,r3
 1387 0018 BD46     	 mov sp,r7
 1388              	.LCFI42:
 1389              	 .cfi_def_cfa_register 13
 1390              	 
 1391 001a 5DF8047B 	 ldr r7,[sp],#4
 1392              	.LCFI43:
 1393              	 .cfi_restore 7
 1394              	 .cfi_def_cfa_offset 0
 1395 001e 7047     	 bx lr
 1396              	.L97:
 1397              	 .align 2
 1398              	.L96:
 1399 0020 00000000 	 .word sa_qhead
 1400 0024 00000000 	 .word sa_qtail
 1401              	 .cfi_endproc
 1402              	.LFE548:
 1404              	 .section .text.saQueueFull,"ax",%progbits
 1405              	 .align 2
 1406              	 .thumb
 1407              	 .thumb_func
 1409              	saQueueFull:
 1410              	.LFB549:
 508:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 509:../cleanflight/src/main/io/vtx_smartaudio.c **** static bool saQueueFull(void)
 510:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1411              	 .loc 2 510 0
 1412              	 .cfi_startproc
 1413              	 
 1414              	 
 1415              	 
 1416 0000 80B4     	 push {r7}
 1417              	.LCFI44:
 1418              	 .cfi_def_cfa_offset 4
 1419              	 .cfi_offset 7,-4
 1420 0002 00AF     	 add r7,sp,#0
 1421              	.LCFI45:
 1422              	 .cfi_def_cfa_register 7
 511:../cleanflight/src/main/io/vtx_smartaudio.c ****     return ((sa_qhead + 1) % SA_QSIZE) == sa_qtail;
 1423              	 .loc 2 511 0
 1424 0004 0C4B     	 ldr r3,.L100
 1425 0006 1B78     	 ldrb r3,[r3]
 1426 0008 591C     	 adds r1,r3,#1
 1427 000a 0C4B     	 ldr r3,.L100+4
 1428 000c 83FB0132 	 smull r3,r2,r3,r1
 1429 0010 CB17     	 asrs r3,r1,#31
 1430 0012 D21A     	 subs r2,r2,r3
 1431 0014 1346     	 mov r3,r2
 1432 0016 5B00     	 lsls r3,r3,#1
 1433 0018 1344     	 add r3,r3,r2
 1434 001a 5B00     	 lsls r3,r3,#1
 1435 001c CA1A     	 subs r2,r1,r3
 1436 001e 084B     	 ldr r3,.L100+8
 1437 0020 1B78     	 ldrb r3,[r3]
 1438 0022 9A42     	 cmp r2,r3
 1439 0024 0CBF     	 ite eq
 1440 0026 0123     	 moveq r3,#1
 1441 0028 0023     	 movne r3,#0
 1442 002a DBB2     	 uxtb r3,r3
 512:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1443              	 .loc 2 512 0
 1444 002c 1846     	 mov r0,r3
 1445 002e BD46     	 mov sp,r7
 1446              	.LCFI46:
 1447              	 .cfi_def_cfa_register 13
 1448              	 
 1449 0030 5DF8047B 	 ldr r7,[sp],#4
 1450              	.LCFI47:
 1451              	 .cfi_restore 7
 1452              	 .cfi_def_cfa_offset 0
 1453 0034 7047     	 bx lr
 1454              	.L101:
 1455 0036 00BF     	 .align 2
 1456              	.L100:
 1457 0038 00000000 	 .word sa_qhead
 1458 003c ABAAAA2A 	 .word 715827883
 1459 0040 00000000 	 .word sa_qtail
 1460              	 .cfi_endproc
 1461              	.LFE549:
 1463              	 .section .text.saQueueCmd,"ax",%progbits
 1464              	 .align 2
 1465              	 .thumb
 1466              	 .thumb_func
 1468              	saQueueCmd:
 1469              	.LFB550:
 513:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 514:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saQueueCmd(uint8_t *buf, int len)
 515:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1470              	 .loc 2 515 0
 1471              	 .cfi_startproc
 1472              	 
 1473              	 
 1474 0000 80B5     	 push {r7,lr}
 1475              	.LCFI48:
 1476              	 .cfi_def_cfa_offset 8
 1477              	 .cfi_offset 7,-8
 1478              	 .cfi_offset 14,-4
 1479 0002 82B0     	 sub sp,sp,#8
 1480              	.LCFI49:
 1481              	 .cfi_def_cfa_offset 16
 1482 0004 00AF     	 add r7,sp,#0
 1483              	.LCFI50:
 1484              	 .cfi_def_cfa_register 7
 1485 0006 7860     	 str r0,[r7,#4]
 1486 0008 3960     	 str r1,[r7]
 516:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (saQueueFull()) {
 1487              	 .loc 2 516 0
 1488 000a FFF7FEFF 	 bl saQueueFull
 1489 000e 0346     	 mov r3,r0
 1490 0010 002B     	 cmp r3,#0
 1491 0012 00D0     	 beq .L103
 517:../cleanflight/src/main/io/vtx_smartaudio.c ****          return;
 1492              	 .loc 2 517 0
 1493 0014 1DE0     	 b .L102
 1494              	.L103:
 518:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 519:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 520:../cleanflight/src/main/io/vtx_smartaudio.c ****     sa_queue[sa_qhead].buf = buf;
 1495              	 .loc 2 520 0
 1496 0016 104B     	 ldr r3,.L105
 1497 0018 1B78     	 ldrb r3,[r3]
 1498 001a 1946     	 mov r1,r3
 1499 001c 0F4A     	 ldr r2,.L105+4
 1500 001e 7B68     	 ldr r3,[r7,#4]
 1501 0020 42F83130 	 str r3,[r2,r1,lsl#3]
 521:../cleanflight/src/main/io/vtx_smartaudio.c ****     sa_queue[sa_qhead].len = len;
 1502              	 .loc 2 521 0
 1503 0024 0C4B     	 ldr r3,.L105
 1504 0026 1B78     	 ldrb r3,[r3]
 1505 0028 0C4A     	 ldr r2,.L105+4
 1506 002a DB00     	 lsls r3,r3,#3
 1507 002c 1344     	 add r3,r3,r2
 1508 002e 3A68     	 ldr r2,[r7]
 1509 0030 5A60     	 str r2,[r3,#4]
 522:../cleanflight/src/main/io/vtx_smartaudio.c ****     sa_qhead = (sa_qhead + 1) % SA_QSIZE;
 1510              	 .loc 2 522 0
 1511 0032 094B     	 ldr r3,.L105
 1512 0034 1B78     	 ldrb r3,[r3]
 1513 0036 5A1C     	 adds r2,r3,#1
 1514 0038 094B     	 ldr r3,.L105+8
 1515 003a 83FB0231 	 smull r3,r1,r3,r2
 1516 003e D317     	 asrs r3,r2,#31
 1517 0040 C91A     	 subs r1,r1,r3
 1518 0042 0B46     	 mov r3,r1
 1519 0044 5B00     	 lsls r3,r3,#1
 1520 0046 0B44     	 add r3,r3,r1
 1521 0048 5B00     	 lsls r3,r3,#1
 1522 004a D11A     	 subs r1,r2,r3
 1523 004c CAB2     	 uxtb r2,r1
 1524 004e 024B     	 ldr r3,.L105
 1525 0050 1A70     	 strb r2,[r3]
 1526              	.L102:
 523:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1527              	 .loc 2 523 0
 1528 0052 0837     	 adds r7,r7,#8
 1529              	.LCFI51:
 1530              	 .cfi_def_cfa_offset 8
 1531 0054 BD46     	 mov sp,r7
 1532              	.LCFI52:
 1533              	 .cfi_def_cfa_register 13
 1534              	 
 1535 0056 80BD     	 pop {r7,pc}
 1536              	.L106:
 1537              	 .align 2
 1538              	.L105:
 1539 0058 00000000 	 .word sa_qhead
 1540 005c 00000000 	 .word sa_queue
 1541 0060 ABAAAA2A 	 .word 715827883
 1542              	 .cfi_endproc
 1543              	.LFE550:
 1545              	 .section .text.saSendQueue,"ax",%progbits
 1546              	 .align 2
 1547              	 .thumb
 1548              	 .thumb_func
 1550              	saSendQueue:
 1551              	.LFB551:
 524:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 525:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saSendQueue(void)
 526:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1552              	 .loc 2 526 0
 1553              	 .cfi_startproc
 1554              	 
 1555              	 
 1556 0000 80B5     	 push {r7,lr}
 1557              	.LCFI53:
 1558              	 .cfi_def_cfa_offset 8
 1559              	 .cfi_offset 7,-8
 1560              	 .cfi_offset 14,-4
 1561 0002 00AF     	 add r7,sp,#0
 1562              	.LCFI54:
 1563              	 .cfi_def_cfa_register 7
 527:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (saQueueEmpty()) {
 1564              	 .loc 2 527 0
 1565 0004 FFF7FEFF 	 bl saQueueEmpty
 1566 0008 0346     	 mov r3,r0
 1567 000a 002B     	 cmp r3,#0
 1568 000c 00D0     	 beq .L108
 528:../cleanflight/src/main/io/vtx_smartaudio.c ****          return;
 1569              	 .loc 2 528 0
 1570 000e 1FE0     	 b .L107
 1571              	.L108:
 529:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 530:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 531:../cleanflight/src/main/io/vtx_smartaudio.c ****     saSendCmd(sa_queue[sa_qtail].buf, sa_queue[sa_qtail].len);
 1572              	 .loc 2 531 0
 1573 0010 104B     	 ldr r3,.L110
 1574 0012 1B78     	 ldrb r3,[r3]
 1575 0014 1A46     	 mov r2,r3
 1576 0016 104B     	 ldr r3,.L110+4
 1577 0018 53F83210 	 ldr r1,[r3,r2,lsl#3]
 1578 001c 0D4B     	 ldr r3,.L110
 1579 001e 1B78     	 ldrb r3,[r3]
 1580 0020 0D4A     	 ldr r2,.L110+4
 1581 0022 DB00     	 lsls r3,r3,#3
 1582 0024 1344     	 add r3,r3,r2
 1583 0026 5B68     	 ldr r3,[r3,#4]
 1584 0028 0846     	 mov r0,r1
 1585 002a 1946     	 mov r1,r3
 1586 002c FFF7FEFF 	 bl saSendCmd
 532:../cleanflight/src/main/io/vtx_smartaudio.c ****     sa_qtail = (sa_qtail + 1) % SA_QSIZE;
 1587              	 .loc 2 532 0
 1588 0030 084B     	 ldr r3,.L110
 1589 0032 1B78     	 ldrb r3,[r3]
 1590 0034 5A1C     	 adds r2,r3,#1
 1591 0036 094B     	 ldr r3,.L110+8
 1592 0038 83FB0231 	 smull r3,r1,r3,r2
 1593 003c D317     	 asrs r3,r2,#31
 1594 003e C91A     	 subs r1,r1,r3
 1595 0040 0B46     	 mov r3,r1
 1596 0042 5B00     	 lsls r3,r3,#1
 1597 0044 0B44     	 add r3,r3,r1
 1598 0046 5B00     	 lsls r3,r3,#1
 1599 0048 D11A     	 subs r1,r2,r3
 1600 004a CAB2     	 uxtb r2,r1
 1601 004c 014B     	 ldr r3,.L110
 1602 004e 1A70     	 strb r2,[r3]
 1603              	.L107:
 533:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1604              	 .loc 2 533 0
 1605 0050 80BD     	 pop {r7,pc}
 1606              	.L111:
 1607 0052 00BF     	 .align 2
 1608              	.L110:
 1609 0054 00000000 	 .word sa_qtail
 1610 0058 00000000 	 .word sa_queue
 1611 005c ABAAAA2A 	 .word 715827883
 1612              	 .cfi_endproc
 1613              	.LFE551:
 1615              	 .section .text.saGetSettings,"ax",%progbits
 1616              	 .align 2
 1617              	 .thumb
 1618              	 .thumb_func
 1620              	saGetSettings:
 1621              	.LFB552:
 534:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 535:../cleanflight/src/main/io/vtx_smartaudio.c **** // Individual commands
 536:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 537:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saGetSettings(void)
 538:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1622              	 .loc 2 538 0
 1623              	 .cfi_startproc
 1624              	 
 1625              	 
 1626 0000 80B5     	 push {r7,lr}
 1627              	.LCFI55:
 1628              	 .cfi_def_cfa_offset 8
 1629              	 .cfi_offset 7,-8
 1630              	 .cfi_offset 14,-4
 1631 0002 00AF     	 add r7,sp,#0
 1632              	.LCFI56:
 1633              	 .cfi_def_cfa_register 7
 539:../cleanflight/src/main/io/vtx_smartaudio.c ****     static uint8_t bufGetSettings[5] = {0xAA, 0x55, SACMD(SA_CMD_GET_SETTINGS), 0x00, 0x9F};
 540:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 541:../cleanflight/src/main/io/vtx_smartaudio.c ****     saQueueCmd(bufGetSettings, 5);
 1634              	 .loc 2 541 0
 1635 0004 0248     	 ldr r0,.L113
 1636 0006 0521     	 movs r1,#5
 1637 0008 FFF7FEFF 	 bl saQueueCmd
 542:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1638              	 .loc 2 542 0
 1639 000c 80BD     	 pop {r7,pc}
 1640              	.L114:
 1641 000e 00BF     	 .align 2
 1642              	.L113:
 1643 0010 00000000 	 .word bufGetSettings.12793
 1644              	 .cfi_endproc
 1645              	.LFE552:
 1647              	 .section .text.saValidateFreq,"ax",%progbits
 1648              	 .align 2
 1649              	 .thumb
 1650              	 .thumb_func
 1652              	saValidateFreq:
 1653              	.LFB553:
 543:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 544:../cleanflight/src/main/io/vtx_smartaudio.c **** static bool saValidateFreq(uint16_t freq)
 545:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1654              	 .loc 2 545 0
 1655              	 .cfi_startproc
 1656              	 
 1657              	 
 1658              	 
 1659 0000 80B4     	 push {r7}
 1660              	.LCFI57:
 1661              	 .cfi_def_cfa_offset 4
 1662              	 .cfi_offset 7,-4
 1663 0002 83B0     	 sub sp,sp,#12
 1664              	.LCFI58:
 1665              	 .cfi_def_cfa_offset 16
 1666 0004 00AF     	 add r7,sp,#0
 1667              	.LCFI59:
 1668              	 .cfi_def_cfa_register 7
 1669 0006 0346     	 mov r3,r0
 1670 0008 FB80     	 strh r3,[r7,#6]
 546:../cleanflight/src/main/io/vtx_smartaudio.c ****     return (freq >= VTX_SMARTAUDIO_MIN_FREQUENCY_MHZ && freq <= VTX_SMARTAUDIO_MAX_FREQUENCY_MHZ);
 1671              	 .loc 2 546 0
 1672 000a FB88     	 ldrh r3,[r7,#6]
 1673 000c 41F28732 	 movw r2,#4999
 1674 0010 9342     	 cmp r3,r2
 1675 0012 06D9     	 bls .L116
 1676              	 .loc 2 546 0 is_stmt 0 discriminator 1
 1677 0014 FB88     	 ldrh r3,[r7,#6]
 1678 0016 41F26F72 	 movw r2,#5999
 1679 001a 9342     	 cmp r3,r2
 1680 001c 01D8     	 bhi .L116
 1681              	 .loc 2 546 0 discriminator 3
 1682 001e 0123     	 movs r3,#1
 1683 0020 00E0     	 b .L117
 1684              	.L116:
 1685              	 .loc 2 546 0 discriminator 4
 1686 0022 0023     	 movs r3,#0
 1687              	.L117:
 1688              	 .loc 2 546 0 discriminator 6
 1689 0024 03F00103 	 and r3,r3,#1
 1690 0028 DBB2     	 uxtb r3,r3
 547:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1691              	 .loc 2 547 0 is_stmt 1 discriminator 6
 1692 002a 1846     	 mov r0,r3
 1693 002c 0C37     	 adds r7,r7,#12
 1694              	.LCFI60:
 1695              	 .cfi_def_cfa_offset 4
 1696 002e BD46     	 mov sp,r7
 1697              	.LCFI61:
 1698              	 .cfi_def_cfa_register 13
 1699              	 
 1700 0030 5DF8047B 	 ldr r7,[sp],#4
 1701              	.LCFI62:
 1702              	 .cfi_restore 7
 1703              	 .cfi_def_cfa_offset 0
 1704 0034 7047     	 bx lr
 1705              	 .cfi_endproc
 1706              	.LFE553:
 1708 0036 00BF     	 .section .text.saDoDevSetFreq,"ax",%progbits
 1709              	 .align 2
 1710              	 .thumb
 1711              	 .thumb_func
 1713              	saDoDevSetFreq:
 1714              	.LFB554:
 548:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 549:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saDoDevSetFreq(uint16_t freq)
 550:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1715              	 .loc 2 550 0
 1716              	 .cfi_startproc
 1717              	 
 1718              	 
 1719 0000 80B5     	 push {r7,lr}
 1720              	.LCFI63:
 1721              	 .cfi_def_cfa_offset 8
 1722              	 .cfi_offset 7,-8
 1723              	 .cfi_offset 14,-4
 1724 0002 84B0     	 sub sp,sp,#16
 1725              	.LCFI64:
 1726              	 .cfi_def_cfa_offset 24
 1727 0004 00AF     	 add r7,sp,#0
 1728              	.LCFI65:
 1729              	 .cfi_def_cfa_register 7
 1730 0006 0346     	 mov r3,r0
 1731 0008 FB80     	 strh r3,[r7,#6]
 551:../cleanflight/src/main/io/vtx_smartaudio.c ****     static uint8_t buf[7] = { 0xAA, 0x55, SACMD(SA_CMD_SET_FREQ), 2 };
 552:../cleanflight/src/main/io/vtx_smartaudio.c ****     static uint8_t switchBuf[7];
 553:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 554:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (freq & SA_FREQ_GETPIT) {
 1732              	 .loc 2 554 0
 1733 000a FB88     	 ldrh r3,[r7,#6]
 1734 000c 03F48043 	 and r3,r3,#16384
 1735 0010 002B     	 cmp r3,#0
 555:../cleanflight/src/main/io/vtx_smartaudio.c ****         dprintf(("smartAudioSetFreq: GETPIT\r\n"));
 556:../cleanflight/src/main/io/vtx_smartaudio.c ****     } else if (freq & SA_FREQ_SETPIT) {
 557:../cleanflight/src/main/io/vtx_smartaudio.c ****         dprintf(("smartAudioSetFreq: SETPIT %d\r\n", freq & SA_FREQ_MASK));
 558:../cleanflight/src/main/io/vtx_smartaudio.c ****     } else {
 559:../cleanflight/src/main/io/vtx_smartaudio.c ****         dprintf(("smartAudioSetFreq: SET %d\r\n", freq));
 560:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 561:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 562:../cleanflight/src/main/io/vtx_smartaudio.c ****     buf[4] = (freq >> 8) & 0xff;
 1736              	 .loc 2 562 0
 1737 0012 FB88     	 ldrh r3,[r7,#6]
 1738 0014 1B0A     	 lsrs r3,r3,#8
 1739 0016 9BB2     	 uxth r3,r3
 1740 0018 DAB2     	 uxtb r2,r3
 1741 001a 264B     	 ldr r3,.L124
 1742 001c 1A71     	 strb r2,[r3,#4]
 563:../cleanflight/src/main/io/vtx_smartaudio.c ****     buf[5] = freq & 0xff;
 1743              	 .loc 2 563 0
 1744 001e FB88     	 ldrh r3,[r7,#6]
 1745 0020 DAB2     	 uxtb r2,r3
 1746 0022 244B     	 ldr r3,.L124
 1747 0024 5A71     	 strb r2,[r3,#5]
 564:../cleanflight/src/main/io/vtx_smartaudio.c ****     buf[6] = CRC8(buf, 6);
 1748              	 .loc 2 564 0
 1749 0026 2348     	 ldr r0,.L124
 1750 0028 0621     	 movs r1,#6
 1751 002a FFF7FEFF 	 bl CRC8
 1752 002e 0346     	 mov r3,r0
 1753 0030 1A46     	 mov r2,r3
 1754 0032 204B     	 ldr r3,.L124
 1755 0034 9A71     	 strb r2,[r3,#6]
 565:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 566:../cleanflight/src/main/io/vtx_smartaudio.c ****     // Need to work around apparent SmartAudio bug when going from 'channel'
 567:../cleanflight/src/main/io/vtx_smartaudio.c ****     // to 'user-freq' mode, where the set-freq command will fail if the freq
 568:../cleanflight/src/main/io/vtx_smartaudio.c ****     // value is unchanged from the previous 'user-freq' mode
 569:../cleanflight/src/main/io/vtx_smartaudio.c ****     if ((saDevice.mode & SA_MODE_GET_FREQ_BY_FREQ) == 0 && freq == saDevice.freq) {
 1756              	 .loc 2 569 0
 1757 0036 204B     	 ldr r3,.L124+4
 1758 0038 DB78     	 ldrb r3,[r3,#3]
 1759 003a DBB2     	 uxtb r3,r3
 1760 003c 03F00103 	 and r3,r3,#1
 1761 0040 002B     	 cmp r3,#0
 1762 0042 30D1     	 bne .L121
 1763              	 .loc 2 569 0 is_stmt 0 discriminator 1
 1764 0044 1C4B     	 ldr r3,.L124+4
 1765 0046 9B88     	 ldrh r3,[r3,#4]
 1766 0048 FA88     	 ldrh r2,[r7,#6]
 1767 004a 9A42     	 cmp r2,r3
 1768 004c 2BD1     	 bne .L121
 1769              	.LBB8:
 570:../cleanflight/src/main/io/vtx_smartaudio.c ****         memcpy(&switchBuf, &buf, sizeof(buf));
 1770              	 .loc 2 570 0 is_stmt 1
 1771 004e 1B4B     	 ldr r3,.L124+8
 1772 0050 184A     	 ldr r2,.L124
 1773 0052 92E80300 	 ldmia r2,{r0,r1}
 1774 0056 1860     	 str r0,[r3]
 1775 0058 0433     	 adds r3,r3,#4
 1776 005a 1980     	 strh r1,[r3]
 1777 005c 0233     	 adds r3,r3,#2
 1778 005e 0A0C     	 lsrs r2,r1,#16
 1779 0060 1A70     	 strb r2,[r3]
 571:../cleanflight/src/main/io/vtx_smartaudio.c ****         const uint16_t switchFreq = freq + ((freq == VTX_SMARTAUDIO_MAX_FREQUENCY_MHZ) ? -1 : 1);
 1780              	 .loc 2 571 0
 1781 0062 FB88     	 ldrh r3,[r7,#6]
 1782 0064 41F26F72 	 movw r2,#5999
 1783 0068 9342     	 cmp r3,r2
 1784 006a 02D1     	 bne .L122
 1785              	 .loc 2 571 0 is_stmt 0 discriminator 1
 1786 006c 4FF6FF72 	 movw r2,#65535
 1787 0070 00E0     	 b .L123
 1788              	.L122:
 1789              	 .loc 2 571 0 discriminator 2
 1790 0072 0122     	 movs r2,#1
 1791              	.L123:
 1792              	 .loc 2 571 0 discriminator 4
 1793 0074 FB88     	 ldrh r3,[r7,#6]
 1794 0076 1344     	 add r3,r3,r2
 1795 0078 FB81     	 strh r3,[r7,#14]
 572:../cleanflight/src/main/io/vtx_smartaudio.c ****         switchBuf[4] = (switchFreq >> 8);
 1796              	 .loc 2 572 0 is_stmt 1 discriminator 4
 1797 007a FB89     	 ldrh r3,[r7,#14]
 1798 007c 1B0A     	 lsrs r3,r3,#8
 1799 007e 9BB2     	 uxth r3,r3
 1800 0080 DAB2     	 uxtb r2,r3
 1801 0082 0E4B     	 ldr r3,.L124+8
 1802 0084 1A71     	 strb r2,[r3,#4]
 573:../cleanflight/src/main/io/vtx_smartaudio.c ****         switchBuf[5] = switchFreq & 0xff;
 1803              	 .loc 2 573 0 discriminator 4
 1804 0086 FB89     	 ldrh r3,[r7,#14]
 1805 0088 DAB2     	 uxtb r2,r3
 1806 008a 0C4B     	 ldr r3,.L124+8
 1807 008c 5A71     	 strb r2,[r3,#5]
 574:../cleanflight/src/main/io/vtx_smartaudio.c ****         switchBuf[6] = CRC8(switchBuf, 6);
 1808              	 .loc 2 574 0 discriminator 4
 1809 008e 0B48     	 ldr r0,.L124+8
 1810 0090 0621     	 movs r1,#6
 1811 0092 FFF7FEFF 	 bl CRC8
 1812 0096 0346     	 mov r3,r0
 1813 0098 1A46     	 mov r2,r3
 1814 009a 084B     	 ldr r3,.L124+8
 1815 009c 9A71     	 strb r2,[r3,#6]
 575:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 576:../cleanflight/src/main/io/vtx_smartaudio.c ****         saQueueCmd(switchBuf, 7);
 1816              	 .loc 2 576 0 discriminator 4
 1817 009e 0748     	 ldr r0,.L124+8
 1818 00a0 0721     	 movs r1,#7
 1819 00a2 FFF7FEFF 	 bl saQueueCmd
 1820              	.L121:
 1821              	.LBE8:
 577:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 578:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 579:../cleanflight/src/main/io/vtx_smartaudio.c ****     saQueueCmd(buf, 7);
 1822              	 .loc 2 579 0
 1823 00a6 0348     	 ldr r0,.L124
 1824 00a8 0721     	 movs r1,#7
 1825 00aa FFF7FEFF 	 bl saQueueCmd
 580:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1826              	 .loc 2 580 0
 1827 00ae 1037     	 adds r7,r7,#16
 1828              	.LCFI66:
 1829              	 .cfi_def_cfa_offset 8
 1830 00b0 BD46     	 mov sp,r7
 1831              	.LCFI67:
 1832              	 .cfi_def_cfa_register 13
 1833              	 
 1834 00b2 80BD     	 pop {r7,pc}
 1835              	.L125:
 1836              	 .align 2
 1837              	.L124:
 1838 00b4 00000000 	 .word buf.12800
 1839 00b8 00000000 	 .word saDevice
 1840 00bc 00000000 	 .word switchBuf.12801
 1841              	 .cfi_endproc
 1842              	.LFE554:
 1844              	 .section .text.saSetFreq,"ax",%progbits
 1845              	 .align 2
 1846              	 .global saSetFreq
 1847              	 .thumb
 1848              	 .thumb_func
 1850              	saSetFreq:
 1851              	.LFB555:
 581:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 582:../cleanflight/src/main/io/vtx_smartaudio.c **** void saSetFreq(uint16_t freq)
 583:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1852              	 .loc 2 583 0
 1853              	 .cfi_startproc
 1854              	 
 1855              	 
 1856 0000 80B5     	 push {r7,lr}
 1857              	.LCFI68:
 1858              	 .cfi_def_cfa_offset 8
 1859              	 .cfi_offset 7,-8
 1860              	 .cfi_offset 14,-4
 1861 0002 82B0     	 sub sp,sp,#8
 1862              	.LCFI69:
 1863              	 .cfi_def_cfa_offset 16
 1864 0004 00AF     	 add r7,sp,#0
 1865              	.LCFI70:
 1866              	 .cfi_def_cfa_register 7
 1867 0006 0346     	 mov r3,r0
 1868 0008 FB80     	 strh r3,[r7,#6]
 584:../cleanflight/src/main/io/vtx_smartaudio.c ****     saDoDevSetFreq(freq);
 1869              	 .loc 2 584 0
 1870 000a FB88     	 ldrh r3,[r7,#6]
 1871 000c 1846     	 mov r0,r3
 1872 000e FFF7FEFF 	 bl saDoDevSetFreq
 585:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1873              	 .loc 2 585 0
 1874 0012 0837     	 adds r7,r7,#8
 1875              	.LCFI71:
 1876              	 .cfi_def_cfa_offset 8
 1877 0014 BD46     	 mov sp,r7
 1878              	.LCFI72:
 1879              	 .cfi_def_cfa_register 13
 1880              	 
 1881 0016 80BD     	 pop {r7,pc}
 1882              	 .cfi_endproc
 1883              	.LFE555:
 1885              	 .section .text.saSetPitFreq,"ax",%progbits
 1886              	 .align 2
 1887              	 .global saSetPitFreq
 1888              	 .thumb
 1889              	 .thumb_func
 1891              	saSetPitFreq:
 1892              	.LFB556:
 586:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 587:../cleanflight/src/main/io/vtx_smartaudio.c **** void saSetPitFreq(uint16_t freq)
 588:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1893              	 .loc 2 588 0
 1894              	 .cfi_startproc
 1895              	 
 1896              	 
 1897 0000 80B5     	 push {r7,lr}
 1898              	.LCFI73:
 1899              	 .cfi_def_cfa_offset 8
 1900              	 .cfi_offset 7,-8
 1901              	 .cfi_offset 14,-4
 1902 0002 82B0     	 sub sp,sp,#8
 1903              	.LCFI74:
 1904              	 .cfi_def_cfa_offset 16
 1905 0004 00AF     	 add r7,sp,#0
 1906              	.LCFI75:
 1907              	 .cfi_def_cfa_register 7
 1908 0006 0346     	 mov r3,r0
 1909 0008 FB80     	 strh r3,[r7,#6]
 589:../cleanflight/src/main/io/vtx_smartaudio.c ****     saDoDevSetFreq(freq | SA_FREQ_SETPIT);
 1910              	 .loc 2 589 0
 1911 000a FB88     	 ldrh r3,[r7,#6]
 1912 000c 6FEA4343 	 mvn r3,r3,lsl#17
 1913 0010 6FEA5343 	 mvn r3,r3,lsr#17
 1914 0014 9BB2     	 uxth r3,r3
 1915 0016 1846     	 mov r0,r3
 1916 0018 FFF7FEFF 	 bl saDoDevSetFreq
 590:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1917              	 .loc 2 590 0
 1918 001c 0837     	 adds r7,r7,#8
 1919              	.LCFI76:
 1920              	 .cfi_def_cfa_offset 8
 1921 001e BD46     	 mov sp,r7
 1922              	.LCFI77:
 1923              	 .cfi_def_cfa_register 13
 1924              	 
 1925 0020 80BD     	 pop {r7,pc}
 1926              	 .cfi_endproc
 1927              	.LFE556:
 1929 0022 00BF     	 .section .text.saValidateBandAndChannel,"ax",%progbits
 1930              	 .align 2
 1931              	 .thumb
 1932              	 .thumb_func
 1934              	saValidateBandAndChannel:
 1935              	.LFB557:
 591:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 592:../cleanflight/src/main/io/vtx_smartaudio.c **** #if 0
 593:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saGetPitFreq(void)
 594:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 595:../cleanflight/src/main/io/vtx_smartaudio.c ****     saDoDevSetFreq(SA_FREQ_GETPIT);
 596:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 597:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
 598:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 599:../cleanflight/src/main/io/vtx_smartaudio.c **** static bool saValidateBandAndChannel(uint8_t band, uint8_t channel)
 600:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 1936              	 .loc 2 600 0
 1937              	 .cfi_startproc
 1938              	 
 1939              	 
 1940              	 
 1941 0000 80B4     	 push {r7}
 1942              	.LCFI78:
 1943              	 .cfi_def_cfa_offset 4
 1944              	 .cfi_offset 7,-4
 1945 0002 83B0     	 sub sp,sp,#12
 1946              	.LCFI79:
 1947              	 .cfi_def_cfa_offset 16
 1948 0004 00AF     	 add r7,sp,#0
 1949              	.LCFI80:
 1950              	 .cfi_def_cfa_register 7
 1951 0006 0346     	 mov r3,r0
 1952 0008 0A46     	 mov r2,r1
 1953 000a FB71     	 strb r3,[r7,#7]
 1954 000c 1346     	 mov r3,r2
 1955 000e BB71     	 strb r3,[r7,#6]
 601:../cleanflight/src/main/io/vtx_smartaudio.c ****     return (band >= VTX_SMARTAUDIO_MIN_BAND && band <= VTX_SMARTAUDIO_MAX_BAND &&
 602:../cleanflight/src/main/io/vtx_smartaudio.c ****              channel >= VTX_SMARTAUDIO_MIN_CHANNEL && channel <= VTX_SMARTAUDIO_MAX_CHANNEL);
 1956              	 .loc 2 602 0
 1957 0010 FB79     	 ldrb r3,[r7,#7]
 1958 0012 002B     	 cmp r3,#0
 1959 0014 0AD0     	 beq .L129
 601:../cleanflight/src/main/io/vtx_smartaudio.c ****     return (band >= VTX_SMARTAUDIO_MIN_BAND && band <= VTX_SMARTAUDIO_MAX_BAND &&
 1960              	 .loc 2 601 0
 1961 0016 FB79     	 ldrb r3,[r7,#7]
 1962 0018 052B     	 cmp r3,#5
 1963 001a 07D8     	 bhi .L129
 601:../cleanflight/src/main/io/vtx_smartaudio.c ****     return (band >= VTX_SMARTAUDIO_MIN_BAND && band <= VTX_SMARTAUDIO_MAX_BAND &&
 1964              	 .loc 2 601 0 is_stmt 0 discriminator 1
 1965 001c BB79     	 ldrb r3,[r7,#6]
 1966 001e 002B     	 cmp r3,#0
 1967 0020 04D0     	 beq .L129
 1968              	 .loc 2 602 0 is_stmt 1 discriminator 3
 1969 0022 BB79     	 ldrb r3,[r7,#6]
 1970 0024 082B     	 cmp r3,#8
 1971 0026 01D8     	 bhi .L129
 1972              	 .loc 2 602 0 is_stmt 0 discriminator 2
 1973 0028 0123     	 movs r3,#1
 1974 002a 00E0     	 b .L130
 1975              	.L129:
 1976              	 .loc 2 602 0 discriminator 1
 1977 002c 0023     	 movs r3,#0
 1978              	.L130:
 601:../cleanflight/src/main/io/vtx_smartaudio.c ****     return (band >= VTX_SMARTAUDIO_MIN_BAND && band <= VTX_SMARTAUDIO_MAX_BAND &&
 1979              	 .loc 2 601 0 is_stmt 1
 1980 002e 03F00103 	 and r3,r3,#1
 1981 0032 DBB2     	 uxtb r3,r3
 603:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 1982              	 .loc 2 603 0
 1983 0034 1846     	 mov r0,r3
 1984 0036 0C37     	 adds r7,r7,#12
 1985              	.LCFI81:
 1986              	 .cfi_def_cfa_offset 4
 1987 0038 BD46     	 mov sp,r7
 1988              	.LCFI82:
 1989              	 .cfi_def_cfa_register 13
 1990              	 
 1991 003a 5DF8047B 	 ldr r7,[sp],#4
 1992              	.LCFI83:
 1993              	 .cfi_restore 7
 1994              	 .cfi_def_cfa_offset 0
 1995 003e 7047     	 bx lr
 1996              	 .cfi_endproc
 1997              	.LFE557:
 1999              	 .section .text.saDevSetBandAndChannel,"ax",%progbits
 2000              	 .align 2
 2001              	 .thumb
 2002              	 .thumb_func
 2004              	saDevSetBandAndChannel:
 2005              	.LFB558:
 604:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 605:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saDevSetBandAndChannel(uint8_t band, uint8_t channel)
 606:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2006              	 .loc 2 606 0
 2007              	 .cfi_startproc
 2008              	 
 2009              	 
 2010 0000 80B5     	 push {r7,lr}
 2011              	.LCFI84:
 2012              	 .cfi_def_cfa_offset 8
 2013              	 .cfi_offset 7,-8
 2014              	 .cfi_offset 14,-4
 2015 0002 82B0     	 sub sp,sp,#8
 2016              	.LCFI85:
 2017              	 .cfi_def_cfa_offset 16
 2018 0004 00AF     	 add r7,sp,#0
 2019              	.LCFI86:
 2020              	 .cfi_def_cfa_register 7
 2021 0006 0346     	 mov r3,r0
 2022 0008 0A46     	 mov r2,r1
 2023 000a FB71     	 strb r3,[r7,#7]
 2024 000c 1346     	 mov r3,r2
 2025 000e BB71     	 strb r3,[r7,#6]
 607:../cleanflight/src/main/io/vtx_smartaudio.c ****     static uint8_t buf[6] = { 0xAA, 0x55, SACMD(SA_CMD_SET_CHAN), 1 };
 608:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 609:../cleanflight/src/main/io/vtx_smartaudio.c ****     buf[4] = SA_BANDCHAN_TO_DEVICE_CHVAL(band, channel);
 2026              	 .loc 2 609 0
 2027 0010 FB79     	 ldrb r3,[r7,#7]
 2028 0012 DB00     	 lsls r3,r3,#3
 2029 0014 DAB2     	 uxtb r2,r3
 2030 0016 BB79     	 ldrb r3,[r7,#6]
 2031 0018 1344     	 add r3,r3,r2
 2032 001a DAB2     	 uxtb r2,r3
 2033 001c 084B     	 ldr r3,.L133
 2034 001e 1A71     	 strb r2,[r3,#4]
 610:../cleanflight/src/main/io/vtx_smartaudio.c ****     buf[5] = CRC8(buf, 5);
 2035              	 .loc 2 610 0
 2036 0020 0748     	 ldr r0,.L133
 2037 0022 0521     	 movs r1,#5
 2038 0024 FFF7FEFF 	 bl CRC8
 2039 0028 0346     	 mov r3,r0
 2040 002a 1A46     	 mov r2,r3
 2041 002c 044B     	 ldr r3,.L133
 2042 002e 5A71     	 strb r2,[r3,#5]
 611:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 612:../cleanflight/src/main/io/vtx_smartaudio.c ****     saQueueCmd(buf, 6);
 2043              	 .loc 2 612 0
 2044 0030 0348     	 ldr r0,.L133
 2045 0032 0621     	 movs r1,#6
 2046 0034 FFF7FEFF 	 bl saQueueCmd
 613:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2047              	 .loc 2 613 0
 2048 0038 0837     	 adds r7,r7,#8
 2049              	.LCFI87:
 2050              	 .cfi_def_cfa_offset 8
 2051 003a BD46     	 mov sp,r7
 2052              	.LCFI88:
 2053              	 .cfi_def_cfa_register 13
 2054              	 
 2055 003c 80BD     	 pop {r7,pc}
 2056              	.L134:
 2057 003e 00BF     	 .align 2
 2058              	.L133:
 2059 0040 00000000 	 .word buf.12817
 2060              	 .cfi_endproc
 2061              	.LFE558:
 2063              	 .section .text.saSetBandAndChannel,"ax",%progbits
 2064              	 .align 2
 2065              	 .global saSetBandAndChannel
 2066              	 .thumb
 2067              	 .thumb_func
 2069              	saSetBandAndChannel:
 2070              	.LFB559:
 614:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 615:../cleanflight/src/main/io/vtx_smartaudio.c **** void saSetBandAndChannel(uint8_t band, uint8_t channel)
 616:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2071              	 .loc 2 616 0
 2072              	 .cfi_startproc
 2073              	 
 2074              	 
 2075 0000 80B5     	 push {r7,lr}
 2076              	.LCFI89:
 2077              	 .cfi_def_cfa_offset 8
 2078              	 .cfi_offset 7,-8
 2079              	 .cfi_offset 14,-4
 2080 0002 82B0     	 sub sp,sp,#8
 2081              	.LCFI90:
 2082              	 .cfi_def_cfa_offset 16
 2083 0004 00AF     	 add r7,sp,#0
 2084              	.LCFI91:
 2085              	 .cfi_def_cfa_register 7
 2086 0006 0346     	 mov r3,r0
 2087 0008 0A46     	 mov r2,r1
 2088 000a FB71     	 strb r3,[r7,#7]
 2089 000c 1346     	 mov r3,r2
 2090 000e BB71     	 strb r3,[r7,#6]
 617:../cleanflight/src/main/io/vtx_smartaudio.c ****     saDevSetBandAndChannel(band, channel);
 2091              	 .loc 2 617 0
 2092 0010 FA79     	 ldrb r2,[r7,#7]
 2093 0012 BB79     	 ldrb r3,[r7,#6]
 2094 0014 1046     	 mov r0,r2
 2095 0016 1946     	 mov r1,r3
 2096 0018 FFF7FEFF 	 bl saDevSetBandAndChannel
 618:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2097              	 .loc 2 618 0
 2098 001c 0837     	 adds r7,r7,#8
 2099              	.LCFI92:
 2100              	 .cfi_def_cfa_offset 8
 2101 001e BD46     	 mov sp,r7
 2102              	.LCFI93:
 2103              	 .cfi_def_cfa_register 13
 2104              	 
 2105 0020 80BD     	 pop {r7,pc}
 2106              	 .cfi_endproc
 2107              	.LFE559:
 2109 0022 00BF     	 .section .text.saSetMode,"ax",%progbits
 2110              	 .align 2
 2111              	 .global saSetMode
 2112              	 .thumb
 2113              	 .thumb_func
 2115              	saSetMode:
 2116              	.LFB560:
 619:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 620:../cleanflight/src/main/io/vtx_smartaudio.c **** void saSetMode(int mode)
 621:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2117              	 .loc 2 621 0
 2118              	 .cfi_startproc
 2119              	 
 2120              	 
 2121 0000 80B5     	 push {r7,lr}
 2122              	.LCFI94:
 2123              	 .cfi_def_cfa_offset 8
 2124              	 .cfi_offset 7,-8
 2125              	 .cfi_offset 14,-4
 2126 0002 82B0     	 sub sp,sp,#8
 2127              	.LCFI95:
 2128              	 .cfi_def_cfa_offset 16
 2129 0004 00AF     	 add r7,sp,#0
 2130              	.LCFI96:
 2131              	 .cfi_def_cfa_register 7
 2132 0006 7860     	 str r0,[r7,#4]
 622:../cleanflight/src/main/io/vtx_smartaudio.c ****     static uint8_t buf[6] = { 0xAA, 0x55, SACMD(SA_CMD_SET_MODE), 1 };
 623:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 624:../cleanflight/src/main/io/vtx_smartaudio.c ****     buf[4] = (mode & 0x3f)|saLockMode;
 2133              	 .loc 2 624 0
 2134 0008 7B68     	 ldr r3,[r7,#4]
 2135 000a DBB2     	 uxtb r3,r3
 2136 000c 03F03F03 	 and r3,r3,#63
 2137 0010 DAB2     	 uxtb r2,r3
 2138 0012 0B4B     	 ldr r3,.L137
 2139 0014 1B78     	 ldrb r3,[r3]
 2140 0016 DBB2     	 uxtb r3,r3
 2141 0018 1343     	 orrs r3,r3,r2
 2142 001a DBB2     	 uxtb r3,r3
 2143 001c DAB2     	 uxtb r2,r3
 2144 001e 094B     	 ldr r3,.L137+4
 2145 0020 1A71     	 strb r2,[r3,#4]
 625:../cleanflight/src/main/io/vtx_smartaudio.c ****     buf[5] = CRC8(buf, 5);
 2146              	 .loc 2 625 0
 2147 0022 0848     	 ldr r0,.L137+4
 2148 0024 0521     	 movs r1,#5
 2149 0026 FFF7FEFF 	 bl CRC8
 2150 002a 0346     	 mov r3,r0
 2151 002c 1A46     	 mov r2,r3
 2152 002e 054B     	 ldr r3,.L137+4
 2153 0030 5A71     	 strb r2,[r3,#5]
 626:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 627:../cleanflight/src/main/io/vtx_smartaudio.c ****     saQueueCmd(buf, 6);
 2154              	 .loc 2 627 0
 2155 0032 0448     	 ldr r0,.L137+4
 2156 0034 0621     	 movs r1,#6
 2157 0036 FFF7FEFF 	 bl saQueueCmd
 628:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2158              	 .loc 2 628 0
 2159 003a 0837     	 adds r7,r7,#8
 2160              	.LCFI97:
 2161              	 .cfi_def_cfa_offset 8
 2162 003c BD46     	 mov sp,r7
 2163              	.LCFI98:
 2164              	 .cfi_def_cfa_register 13
 2165              	 
 2166 003e 80BD     	 pop {r7,pc}
 2167              	.L138:
 2168              	 .align 2
 2169              	.L137:
 2170 0040 00000000 	 .word saLockMode
 2171 0044 00000000 	 .word buf.12825
 2172              	 .cfi_endproc
 2173              	.LFE560:
 2175              	 .section .text.saDevSetPowerByIndex,"ax",%progbits
 2176              	 .align 2
 2177              	 .thumb
 2178              	 .thumb_func
 2180              	saDevSetPowerByIndex:
 2181              	.LFB561:
 629:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 630:../cleanflight/src/main/io/vtx_smartaudio.c **** static void saDevSetPowerByIndex(uint8_t index)
 631:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2182              	 .loc 2 631 0
 2183              	 .cfi_startproc
 2184              	 
 2185              	 
 2186 0000 80B5     	 push {r7,lr}
 2187              	.LCFI99:
 2188              	 .cfi_def_cfa_offset 8
 2189              	 .cfi_offset 7,-8
 2190              	 .cfi_offset 14,-4
 2191 0002 82B0     	 sub sp,sp,#8
 2192              	.LCFI100:
 2193              	 .cfi_def_cfa_offset 16
 2194 0004 00AF     	 add r7,sp,#0
 2195              	.LCFI101:
 2196              	 .cfi_def_cfa_register 7
 2197 0006 0346     	 mov r3,r0
 2198 0008 FB71     	 strb r3,[r7,#7]
 632:../cleanflight/src/main/io/vtx_smartaudio.c ****     static uint8_t buf[6] = { 0xAA, 0x55, SACMD(SA_CMD_SET_POWER), 1 };
 633:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 634:../cleanflight/src/main/io/vtx_smartaudio.c ****     dprintf(("saSetPowerByIndex: index %d\r\n", index));
 635:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 636:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (saDevice.version == 0) {
 2199              	 .loc 2 636 0
 2200 000a 164B     	 ldr r3,.L145
 2201 000c 1B78     	 ldrb r3,[r3]
 2202 000e 002B     	 cmp r3,#0
 2203 0010 00D1     	 bne .L140
 637:../cleanflight/src/main/io/vtx_smartaudio.c ****         // Unknown or yet unknown version.
 638:../cleanflight/src/main/io/vtx_smartaudio.c ****         return;
 2204              	 .loc 2 638 0
 2205 0012 23E0     	 b .L139
 2206              	.L140:
 639:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 640:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 641:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (index >= VTX_SMARTAUDIO_POWER_COUNT) {
 2207              	 .loc 2 641 0
 2208 0014 FB79     	 ldrb r3,[r7,#7]
 2209 0016 032B     	 cmp r3,#3
 2210 0018 00D9     	 bls .L142
 642:../cleanflight/src/main/io/vtx_smartaudio.c ****         return;
 2211              	 .loc 2 642 0 discriminator 2
 2212 001a 1FE0     	 b .L139
 2213              	.L142:
 643:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 644:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 645:../cleanflight/src/main/io/vtx_smartaudio.c ****     buf[4] = (saDevice.version == 1) ? saPowerTable[index].valueV1 : saPowerTable[index].valueV2;
 2214              	 .loc 2 645 0
 2215 001c 114B     	 ldr r3,.L145
 2216 001e 1B78     	 ldrb r3,[r3]
 2217 0020 5BB2     	 sxtb r3,r3
 2218 0022 012B     	 cmp r3,#1
 2219 0024 06D1     	 bne .L143
 2220              	 .loc 2 645 0 is_stmt 0 discriminator 1
 2221 0026 FB79     	 ldrb r3,[r7,#7]
 2222 0028 0F4A     	 ldr r2,.L145+4
 2223 002a DB00     	 lsls r3,r3,#3
 2224 002c 1344     	 add r3,r3,r2
 2225 002e 9B88     	 ldrh r3,[r3,#4]
 2226 0030 DBB2     	 uxtb r3,r3
 2227 0032 05E0     	 b .L144
 2228              	.L143:
 2229              	 .loc 2 645 0 discriminator 2
 2230 0034 FB79     	 ldrb r3,[r7,#7]
 2231 0036 0C4A     	 ldr r2,.L145+4
 2232 0038 DB00     	 lsls r3,r3,#3
 2233 003a 1344     	 add r3,r3,r2
 2234 003c DB88     	 ldrh r3,[r3,#6]
 2235 003e DBB2     	 uxtb r3,r3
 2236              	.L144:
 2237              	 .loc 2 645 0 discriminator 4
 2238 0040 0A4A     	 ldr r2,.L145+8
 2239 0042 1371     	 strb r3,[r2,#4]
 646:../cleanflight/src/main/io/vtx_smartaudio.c ****     buf[5] = CRC8(buf, 5);
 2240              	 .loc 2 646 0 is_stmt 1 discriminator 4
 2241 0044 0948     	 ldr r0,.L145+8
 2242 0046 0521     	 movs r1,#5
 2243 0048 FFF7FEFF 	 bl CRC8
 2244 004c 0346     	 mov r3,r0
 2245 004e 1A46     	 mov r2,r3
 2246 0050 064B     	 ldr r3,.L145+8
 2247 0052 5A71     	 strb r2,[r3,#5]
 647:../cleanflight/src/main/io/vtx_smartaudio.c ****     saQueueCmd(buf, 6);
 2248              	 .loc 2 647 0 discriminator 4
 2249 0054 0548     	 ldr r0,.L145+8
 2250 0056 0621     	 movs r1,#6
 2251 0058 FFF7FEFF 	 bl saQueueCmd
 2252              	.L139:
 648:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2253              	 .loc 2 648 0
 2254 005c 0837     	 adds r7,r7,#8
 2255              	.LCFI102:
 2256              	 .cfi_def_cfa_offset 8
 2257 005e BD46     	 mov sp,r7
 2258              	.LCFI103:
 2259              	 .cfi_def_cfa_register 13
 2260              	 
 2261 0060 80BD     	 pop {r7,pc}
 2262              	.L146:
 2263 0062 00BF     	 .align 2
 2264              	.L145:
 2265 0064 00000000 	 .word saDevice
 2266 0068 00000000 	 .word saPowerTable
 2267 006c 00000000 	 .word buf.12829
 2268              	 .cfi_endproc
 2269              	.LFE561:
 2271              	 .section .text.saSetPowerByIndex,"ax",%progbits
 2272              	 .align 2
 2273              	 .global saSetPowerByIndex
 2274              	 .thumb
 2275              	 .thumb_func
 2277              	saSetPowerByIndex:
 2278              	.LFB562:
 649:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 650:../cleanflight/src/main/io/vtx_smartaudio.c **** void saSetPowerByIndex(uint8_t index)
 651:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2279              	 .loc 2 651 0
 2280              	 .cfi_startproc
 2281              	 
 2282              	 
 2283 0000 80B5     	 push {r7,lr}
 2284              	.LCFI104:
 2285              	 .cfi_def_cfa_offset 8
 2286              	 .cfi_offset 7,-8
 2287              	 .cfi_offset 14,-4
 2288 0002 82B0     	 sub sp,sp,#8
 2289              	.LCFI105:
 2290              	 .cfi_def_cfa_offset 16
 2291 0004 00AF     	 add r7,sp,#0
 2292              	.LCFI106:
 2293              	 .cfi_def_cfa_register 7
 2294 0006 0346     	 mov r3,r0
 2295 0008 FB71     	 strb r3,[r7,#7]
 652:../cleanflight/src/main/io/vtx_smartaudio.c ****     saDevSetPowerByIndex(index);
 2296              	 .loc 2 652 0
 2297 000a FB79     	 ldrb r3,[r7,#7]
 2298 000c 1846     	 mov r0,r3
 2299 000e FFF7FEFF 	 bl saDevSetPowerByIndex
 653:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2300              	 .loc 2 653 0
 2301 0012 0837     	 adds r7,r7,#8
 2302              	.LCFI107:
 2303              	 .cfi_def_cfa_offset 8
 2304 0014 BD46     	 mov sp,r7
 2305              	.LCFI108:
 2306              	 .cfi_def_cfa_register 13
 2307              	 
 2308 0016 80BD     	 pop {r7,pc}
 2309              	 .cfi_endproc
 2310              	.LFE562:
 2312              	 .section .text.vtxSmartAudioInit,"ax",%progbits
 2313              	 .align 2
 2314              	 .global vtxSmartAudioInit
 2315              	 .thumb
 2316              	 .thumb_func
 2318              	vtxSmartAudioInit:
 2319              	.LFB563:
 654:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 655:../cleanflight/src/main/io/vtx_smartaudio.c **** bool vtxSmartAudioInit(void)
 656:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2320              	 .loc 2 656 0
 2321              	 .cfi_startproc
 2322              	 
 2323              	 
 2324 0000 80B5     	 push {r7,lr}
 2325              	.LCFI109:
 2326              	 .cfi_def_cfa_offset 8
 2327              	 .cfi_offset 7,-8
 2328              	 .cfi_offset 14,-4
 2329 0002 86B0     	 sub sp,sp,#24
 2330              	.LCFI110:
 2331              	 .cfi_def_cfa_offset 32
 2332 0004 04AF     	 add r7,sp,#16
 2333              	.LCFI111:
 2334              	 .cfi_def_cfa 7,16
 657:../cleanflight/src/main/io/vtx_smartaudio.c **** #ifdef USE_SMARTAUDIO_DPRINTF
 658:../cleanflight/src/main/io/vtx_smartaudio.c ****     // Setup debugSerialPort
 659:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 660:../cleanflight/src/main/io/vtx_smartaudio.c ****     debugSerialPort = openSerialPort(DPRINTF_SERIAL_PORT, FUNCTION_NONE, NULL, NULL, 115200, MODE_R
 661:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (debugSerialPort) {
 662:../cleanflight/src/main/io/vtx_smartaudio.c ****         setPrintfSerialPort(debugSerialPort);
 663:../cleanflight/src/main/io/vtx_smartaudio.c ****         dprintf(("smartAudioInit: OK\r\n"));
 664:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 665:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
 666:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 667:../cleanflight/src/main/io/vtx_smartaudio.c ****     serialPortConfig_t *portConfig = findSerialPortConfig(FUNCTION_VTX_SMARTAUDIO);
 2335              	 .loc 2 667 0
 2336 0006 4FF40060 	 mov r0,#2048
 2337 000a FFF7FEFF 	 bl findSerialPortConfig
 2338 000e 7860     	 str r0,[r7,#4]
 668:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (portConfig) {
 2339              	 .loc 2 668 0
 2340 0010 7B68     	 ldr r3,[r7,#4]
 2341 0012 002B     	 cmp r3,#0
 2342 0014 23D0     	 beq .L149
 2343              	.LBB9:
 669:../cleanflight/src/main/io/vtx_smartaudio.c ****         portOptions_e portOptions = SERIAL_STOPBITS_2 | SERIAL_BIDIR_NOPULL;
 2344              	 .loc 2 669 0
 2345 0016 2223     	 movs r3,#34
 2346 0018 FB70     	 strb r3,[r7,#3]
 670:../cleanflight/src/main/io/vtx_smartaudio.c **** #if defined(USE_VTX_COMMON)
 671:../cleanflight/src/main/io/vtx_smartaudio.c ****         portOptions = portOptions | (vtxConfig()->halfDuplex ? SERIAL_BIDIR | SERIAL_BIDIR_PP : SER
 2347              	 .loc 2 671 0
 2348 001a FFF7FEFF 	 bl vtxConfig
 2349 001e 0346     	 mov r3,r0
 2350 0020 93F83230 	 ldrb r3,[r3,#50]
 2351 0024 002B     	 cmp r3,#0
 2352 0026 01D0     	 beq .L150
 2353              	 .loc 2 671 0 is_stmt 0 discriminator 1
 2354 0028 1822     	 movs r2,#24
 2355 002a 00E0     	 b .L151
 2356              	.L150:
 2357              	 .loc 2 671 0 discriminator 2
 2358 002c 0022     	 movs r2,#0
 2359              	.L151:
 2360              	 .loc 2 671 0 discriminator 4
 2361 002e FB78     	 ldrb r3,[r7,#3]
 2362 0030 1343     	 orrs r3,r3,r2
 2363 0032 DBB2     	 uxtb r3,r3
 2364 0034 FB70     	 strb r3,[r7,#3]
 672:../cleanflight/src/main/io/vtx_smartaudio.c **** #else
 673:../cleanflight/src/main/io/vtx_smartaudio.c ****         portOptions = SERIAL_BIDIR;
 674:../cleanflight/src/main/io/vtx_smartaudio.c **** #endif
 675:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 676:../cleanflight/src/main/io/vtx_smartaudio.c ****         smartAudioSerialPort = openSerialPort(portConfig->identifier, FUNCTION_VTX_SMARTAUDIO, NULL
 2365              	 .loc 2 676 0 is_stmt 1 discriminator 4
 2366 0036 7B68     	 ldr r3,[r7,#4]
 2367 0038 9B78     	 ldrb r3,[r3,#2]
 2368 003a 5AB2     	 sxtb r2,r3
 2369 003c 4FF49653 	 mov r3,#4800
 2370 0040 0093     	 str r3,[sp]
 2371 0042 0323     	 movs r3,#3
 2372 0044 0193     	 str r3,[sp,#4]
 2373 0046 FB78     	 ldrb r3,[r7,#3]
 2374 0048 0293     	 str r3,[sp,#8]
 2375 004a 1046     	 mov r0,r2
 2376 004c 4FF40061 	 mov r1,#2048
 2377 0050 0022     	 movs r2,#0
 2378 0052 0023     	 movs r3,#0
 2379 0054 FFF7FEFF 	 bl openSerialPort
 2380 0058 0246     	 mov r2,r0
 2381 005a 084B     	 ldr r3,.L154
 2382 005c 1A60     	 str r2,[r3]
 2383              	.L149:
 2384              	.LBE9:
 677:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 678:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 679:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (!smartAudioSerialPort) {
 2385              	 .loc 2 679 0
 2386 005e 074B     	 ldr r3,.L154
 2387 0060 1B68     	 ldr r3,[r3]
 2388 0062 002B     	 cmp r3,#0
 2389 0064 01D1     	 bne .L152
 680:../cleanflight/src/main/io/vtx_smartaudio.c ****         return false;
 2390              	 .loc 2 680 0
 2391 0066 0023     	 movs r3,#0
 2392 0068 03E0     	 b .L153
 2393              	.L152:
 681:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 682:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 683:../cleanflight/src/main/io/vtx_smartaudio.c ****     vtxCommonSetDevice(&vtxSmartAudio);
 2394              	 .loc 2 683 0
 2395 006a 0548     	 ldr r0,.L154+4
 2396 006c FFF7FEFF 	 bl vtxCommonSetDevice
 684:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 685:../cleanflight/src/main/io/vtx_smartaudio.c ****     return true;
 2397              	 .loc 2 685 0
 2398 0070 0123     	 movs r3,#1
 2399              	.L153:
 686:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2400              	 .loc 2 686 0
 2401 0072 1846     	 mov r0,r3
 2402 0074 0837     	 adds r7,r7,#8
 2403              	.LCFI112:
 2404              	 .cfi_def_cfa_offset 8
 2405 0076 BD46     	 mov sp,r7
 2406              	.LCFI113:
 2407              	 .cfi_def_cfa_register 13
 2408              	 
 2409 0078 80BD     	 pop {r7,pc}
 2410              	.L155:
 2411 007a 00BF     	 .align 2
 2412              	.L154:
 2413 007c 00000000 	 .word smartAudioSerialPort
 2414 0080 00000000 	 .word vtxSmartAudio
 2415              	 .cfi_endproc
 2416              	.LFE563:
 2418              	 .section .text.vtxSAProcess,"ax",%progbits
 2419              	 .align 2
 2420              	 .thumb
 2421              	 .thumb_func
 2423              	vtxSAProcess:
 2424              	.LFB564:
 687:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 688:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_INITPHASE_START         0
 689:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_INITPHASE_WAIT_SETTINGS 1 // SA_CMD_GET_SETTINGS was sent and waiting for reply.
 690:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_INITPHASE_WAIT_PITFREQ  2 // SA_FREQ_GETPIT sent and waiting for reply.
 691:../cleanflight/src/main/io/vtx_smartaudio.c **** #define SA_INITPHASE_DONE          3
 692:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 693:../cleanflight/src/main/io/vtx_smartaudio.c **** static void vtxSAProcess(vtxDevice_t *vtxDevice, timeUs_t currentTimeUs)
 694:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2425              	 .loc 2 694 0
 2426              	 .cfi_startproc
 2427              	 
 2428              	 
 2429 0000 80B5     	 push {r7,lr}
 2430              	.LCFI114:
 2431              	 .cfi_def_cfa_offset 8
 2432              	 .cfi_offset 7,-8
 2433              	 .cfi_offset 14,-4
 2434 0002 84B0     	 sub sp,sp,#16
 2435              	.LCFI115:
 2436              	 .cfi_def_cfa_offset 24
 2437 0004 00AF     	 add r7,sp,#0
 2438              	.LCFI116:
 2439              	 .cfi_def_cfa_register 7
 2440 0006 7860     	 str r0,[r7,#4]
 2441 0008 3960     	 str r1,[r7]
 695:../cleanflight/src/main/io/vtx_smartaudio.c ****     UNUSED(vtxDevice);
 696:../cleanflight/src/main/io/vtx_smartaudio.c ****     UNUSED(currentTimeUs);
 697:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 698:../cleanflight/src/main/io/vtx_smartaudio.c ****     static char initPhase = SA_INITPHASE_START;
 699:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 700:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (smartAudioSerialPort == NULL) {
 2442              	 .loc 2 700 0
 2443 000a 424B     	 ldr r3,.L173
 2444 000c 1B68     	 ldr r3,[r3]
 2445 000e 002B     	 cmp r3,#0
 2446 0010 00D1     	 bne .L157
 701:../cleanflight/src/main/io/vtx_smartaudio.c ****         return;
 2447              	 .loc 2 701 0
 2448 0012 7CE0     	 b .L156
 2449              	.L157:
 702:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 703:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 704:../cleanflight/src/main/io/vtx_smartaudio.c ****     while (serialRxBytesWaiting(smartAudioSerialPort) > 0) {
 2450              	 .loc 2 704 0
 2451 0014 0AE0     	 b .L159
 2452              	.L160:
 2453              	.LBB10:
 705:../cleanflight/src/main/io/vtx_smartaudio.c ****         uint8_t c = serialRead(smartAudioSerialPort);
 2454              	 .loc 2 705 0
 2455 0016 3F4B     	 ldr r3,.L173
 2456 0018 1B68     	 ldr r3,[r3]
 2457 001a 1846     	 mov r0,r3
 2458 001c FFF7FEFF 	 bl serialRead
 2459 0020 0346     	 mov r3,r0
 2460 0022 FB73     	 strb r3,[r7,#15]
 706:../cleanflight/src/main/io/vtx_smartaudio.c ****         saReceiveFramer((uint16_t)c);
 2461              	 .loc 2 706 0
 2462 0024 FB7B     	 ldrb r3,[r7,#15]
 2463 0026 1846     	 mov r0,r3
 2464 0028 FFF7FEFF 	 bl saReceiveFramer
 2465              	.L159:
 2466              	.LBE10:
 704:../cleanflight/src/main/io/vtx_smartaudio.c ****         uint8_t c = serialRead(smartAudioSerialPort);
 2467              	 .loc 2 704 0
 2468 002c 394B     	 ldr r3,.L173
 2469 002e 1B68     	 ldr r3,[r3]
 2470 0030 1846     	 mov r0,r3
 2471 0032 FFF7FEFF 	 bl serialRxBytesWaiting
 2472 0036 0346     	 mov r3,r0
 2473 0038 002B     	 cmp r3,#0
 2474 003a ECD1     	 bne .L160
 707:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 708:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 709:../cleanflight/src/main/io/vtx_smartaudio.c ****     // Re-evaluate baudrate after each frame reception
 710:../cleanflight/src/main/io/vtx_smartaudio.c ****     saAutobaud();
 2475              	 .loc 2 710 0
 2476 003c FFF7FEFF 	 bl saAutobaud
 711:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 712:../cleanflight/src/main/io/vtx_smartaudio.c ****     switch (initPhase) {
 2477              	 .loc 2 712 0
 2478 0040 354B     	 ldr r3,.L173+4
 2479 0042 1B78     	 ldrb r3,[r3]
 2480 0044 032B     	 cmp r3,#3
 2481 0046 30D8     	 bhi .L161
 2482 0048 01A2     	 adr r2,.L163
 2483 004a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2484 004e 00BF     	 .p2align 2
 2485              	.L163:
 2486 0050 61000000 	 .word .L162+1
 2487 0054 6D000000 	 .word .L164+1
 2488 0058 99000000 	 .word .L165+1
 2489 005c AB000000 	 .word .L161+1
 2490              	 .p2align 1
 2491              	.L162:
 713:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_INITPHASE_START:
 714:../cleanflight/src/main/io/vtx_smartaudio.c ****         saGetSettings();
 2492              	 .loc 2 714 0
 2493 0060 FFF7FEFF 	 bl saGetSettings
 715:../cleanflight/src/main/io/vtx_smartaudio.c ****         //saSendQueue();
 716:../cleanflight/src/main/io/vtx_smartaudio.c ****         initPhase = SA_INITPHASE_WAIT_SETTINGS;
 2494              	 .loc 2 716 0
 2495 0064 2C4B     	 ldr r3,.L173+4
 2496 0066 0122     	 movs r2,#1
 2497 0068 1A70     	 strb r2,[r3]
 717:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 2498              	 .loc 2 717 0
 2499 006a 1EE0     	 b .L161
 2500              	.L164:
 718:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 719:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_INITPHASE_WAIT_SETTINGS:
 720:../cleanflight/src/main/io/vtx_smartaudio.c ****         // Don't send SA_FREQ_GETPIT to V1 device; it act as plain SA_CMD_SET_FREQ,
 721:../cleanflight/src/main/io/vtx_smartaudio.c ****         // and put the device into user frequency mode with uninitialized freq.
 722:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (saDevice.version) {
 2501              	 .loc 2 722 0
 2502 006c 2B4B     	 ldr r3,.L173+8
 2503 006e 1B78     	 ldrb r3,[r3]
 2504 0070 002B     	 cmp r3,#0
 2505 0072 10D0     	 beq .L167
 723:../cleanflight/src/main/io/vtx_smartaudio.c ****             if (saDevice.version == 2) {
 2506              	 .loc 2 723 0
 2507 0074 294B     	 ldr r3,.L173+8
 2508 0076 1B78     	 ldrb r3,[r3]
 2509 0078 5BB2     	 sxtb r3,r3
 2510 007a 022B     	 cmp r3,#2
 2511 007c 07D1     	 bne .L168
 724:../cleanflight/src/main/io/vtx_smartaudio.c ****                 saDoDevSetFreq(SA_FREQ_GETPIT);
 2512              	 .loc 2 724 0
 2513 007e 4FF48040 	 mov r0,#16384
 2514 0082 FFF7FEFF 	 bl saDoDevSetFreq
 725:../cleanflight/src/main/io/vtx_smartaudio.c ****                 initPhase = SA_INITPHASE_WAIT_PITFREQ;
 2515              	 .loc 2 725 0
 2516 0086 244B     	 ldr r3,.L173+4
 2517 0088 0222     	 movs r2,#2
 2518 008a 1A70     	 strb r2,[r3]
 2519 008c 03E0     	 b .L167
 2520              	.L168:
 726:../cleanflight/src/main/io/vtx_smartaudio.c ****             } else {
 727:../cleanflight/src/main/io/vtx_smartaudio.c ****                 initPhase = SA_INITPHASE_DONE;
 2521              	 .loc 2 727 0
 2522 008e 224B     	 ldr r3,.L173+4
 2523 0090 0322     	 movs r2,#3
 2524 0092 1A70     	 strb r2,[r3]
 728:../cleanflight/src/main/io/vtx_smartaudio.c ****             }
 729:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 730:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 2525              	 .loc 2 730 0
 2526 0094 09E0     	 b .L161
 2527              	.L167:
 2528 0096 08E0     	 b .L161
 2529              	.L165:
 731:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 732:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_INITPHASE_WAIT_PITFREQ:
 733:../cleanflight/src/main/io/vtx_smartaudio.c ****         if (saDevice.orfreq) {
 2530              	 .loc 2 733 0
 2531 0098 204B     	 ldr r3,.L173+8
 2532 009a DB88     	 ldrh r3,[r3,#6]
 2533 009c 002B     	 cmp r3,#0
 2534 009e 03D0     	 beq .L169
 734:../cleanflight/src/main/io/vtx_smartaudio.c ****             initPhase = SA_INITPHASE_DONE;
 2535              	 .loc 2 734 0
 2536 00a0 1D4B     	 ldr r3,.L173+4
 2537 00a2 0322     	 movs r2,#3
 2538 00a4 1A70     	 strb r2,[r3]
 735:../cleanflight/src/main/io/vtx_smartaudio.c ****         }
 736:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 2539              	 .loc 2 736 0
 2540 00a6 FFE7     	 b .L172
 2541              	.L169:
 2542              	.L172:
 2543 00a8 00BF     	 nop
 2544              	.L161:
 737:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 738:../cleanflight/src/main/io/vtx_smartaudio.c ****     case SA_INITPHASE_DONE:
 739:../cleanflight/src/main/io/vtx_smartaudio.c ****         break;
 740:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 741:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 742:../cleanflight/src/main/io/vtx_smartaudio.c ****     // Command queue control
 743:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 744:../cleanflight/src/main/io/vtx_smartaudio.c ****     timeMs_t nowMs = millis();             // Don't substitute with "currentTimeUs / 1000"; sa_last
 2545              	 .loc 2 744 0
 2546 00aa FFF7FEFF 	 bl millis
 2547 00ae B860     	 str r0,[r7,#8]
 745:../cleanflight/src/main/io/vtx_smartaudio.c ****     static timeMs_t lastCommandSentMs = 0; // Last non-GET_SETTINGS sent
 746:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 747:../cleanflight/src/main/io/vtx_smartaudio.c ****     if ((sa_outstanding != SA_CMD_NONE) && (nowMs - sa_lastTransmissionMs > SMARTAUDIO_CMD_TIMEOUT)
 2548              	 .loc 2 747 0
 2549 00b0 1B4B     	 ldr r3,.L173+12
 2550 00b2 1B78     	 ldrb r3,[r3]
 2551 00b4 002B     	 cmp r3,#0
 2552 00b6 0BD0     	 beq .L170
 2553              	 .loc 2 747 0 is_stmt 0 discriminator 1
 2554 00b8 1A4B     	 ldr r3,.L173+16
 2555 00ba 1B68     	 ldr r3,[r3]
 2556 00bc BA68     	 ldr r2,[r7,#8]
 2557 00be D31A     	 subs r3,r2,r3
 2558 00c0 782B     	 cmp r3,#120
 2559 00c2 05D9     	 bls .L170
 748:../cleanflight/src/main/io/vtx_smartaudio.c ****         // Last command timed out
 749:../cleanflight/src/main/io/vtx_smartaudio.c ****         // dprintf(("process: resending 0x%x\r\n", sa_outstanding));
 750:../cleanflight/src/main/io/vtx_smartaudio.c ****         // XXX Todo: Resend termination and possible offline transition
 751:../cleanflight/src/main/io/vtx_smartaudio.c ****         saResendCmd();
 2560              	 .loc 2 751 0 is_stmt 1
 2561 00c4 FFF7FEFF 	 bl saResendCmd
 752:../cleanflight/src/main/io/vtx_smartaudio.c ****     lastCommandSentMs = nowMs;
 2562              	 .loc 2 752 0
 2563 00c8 174A     	 ldr r2,.L173+20
 2564 00ca BB68     	 ldr r3,[r7,#8]
 2565 00cc 1360     	 str r3,[r2]
 2566 00ce 1EE0     	 b .L156
 2567              	.L170:
 753:../cleanflight/src/main/io/vtx_smartaudio.c ****     } else if (!saQueueEmpty()) {
 2568              	 .loc 2 753 0
 2569 00d0 FFF7FEFF 	 bl saQueueEmpty
 2570 00d4 0346     	 mov r3,r0
 2571 00d6 83F00103 	 eor r3,r3,#1
 2572 00da DBB2     	 uxtb r3,r3
 2573 00dc 002B     	 cmp r3,#0
 2574 00de 05D0     	 beq .L171
 754:../cleanflight/src/main/io/vtx_smartaudio.c ****         // Command pending. Send it.
 755:../cleanflight/src/main/io/vtx_smartaudio.c ****         // dprintf(("process: sending queue\r\n"));
 756:../cleanflight/src/main/io/vtx_smartaudio.c ****         saSendQueue();
 2575              	 .loc 2 756 0
 2576 00e0 FFF7FEFF 	 bl saSendQueue
 757:../cleanflight/src/main/io/vtx_smartaudio.c ****     lastCommandSentMs = nowMs;
 2577              	 .loc 2 757 0
 2578 00e4 104A     	 ldr r2,.L173+20
 2579 00e6 BB68     	 ldr r3,[r7,#8]
 2580 00e8 1360     	 str r3,[r2]
 2581 00ea 10E0     	 b .L156
 2582              	.L171:
 758:../cleanflight/src/main/io/vtx_smartaudio.c ****     } else if ((nowMs - lastCommandSentMs < SMARTAUDIO_POLLING_WINDOW) && (nowMs - sa_lastTransmiss
 2583              	 .loc 2 758 0
 2584 00ec 0E4B     	 ldr r3,.L173+20
 2585 00ee 1B68     	 ldr r3,[r3]
 2586 00f0 BA68     	 ldr r2,[r7,#8]
 2587 00f2 D31A     	 subs r3,r2,r3
 2588 00f4 B3F57A7F 	 cmp r3,#1000
 2589 00f8 09D2     	 bcs .L156
 2590              	 .loc 2 758 0 is_stmt 0 discriminator 1
 2591 00fa 0A4B     	 ldr r3,.L173+16
 2592 00fc 1B68     	 ldr r3,[r3]
 2593 00fe BA68     	 ldr r2,[r7,#8]
 2594 0100 D31A     	 subs r3,r2,r3
 2595 0102 952B     	 cmp r3,#149
 2596 0104 03D9     	 bls .L156
 759:../cleanflight/src/main/io/vtx_smartaudio.c ****     //dprintf(("process: sending status change polling\r\n"));
 760:../cleanflight/src/main/io/vtx_smartaudio.c ****     saGetSettings();
 2597              	 .loc 2 760 0 is_stmt 1
 2598 0106 FFF7FEFF 	 bl saGetSettings
 761:../cleanflight/src/main/io/vtx_smartaudio.c ****     saSendQueue();
 2599              	 .loc 2 761 0
 2600 010a FFF7FEFF 	 bl saSendQueue
 2601              	.L156:
 762:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 763:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2602              	 .loc 2 763 0
 2603 010e 1037     	 adds r7,r7,#16
 2604              	.LCFI117:
 2605              	 .cfi_def_cfa_offset 8
 2606 0110 BD46     	 mov sp,r7
 2607              	.LCFI118:
 2608              	 .cfi_def_cfa_register 13
 2609              	 
 2610 0112 80BD     	 pop {r7,pc}
 2611              	.L174:
 2612              	 .align 2
 2613              	.L173:
 2614 0114 00000000 	 .word smartAudioSerialPort
 2615 0118 00000000 	 .word initPhase.12842
 2616 011c 00000000 	 .word saDevice
 2617 0120 00000000 	 .word sa_outstanding
 2618 0124 00000000 	 .word sa_lastTransmissionMs
 2619 0128 00000000 	 .word lastCommandSentMs.12853
 2620              	 .cfi_endproc
 2621              	.LFE564:
 2623              	 .section .text.vtxSAGetDeviceType,"ax",%progbits
 2624              	 .align 2
 2625              	 .global vtxSAGetDeviceType
 2626              	 .thumb
 2627              	 .thumb_func
 2629              	vtxSAGetDeviceType:
 2630              	.LFB565:
 764:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 765:../cleanflight/src/main/io/vtx_smartaudio.c **** #ifdef USE_VTX_COMMON
 766:../cleanflight/src/main/io/vtx_smartaudio.c **** // Interface to common VTX API
 767:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 768:../cleanflight/src/main/io/vtx_smartaudio.c **** vtxDevType_e vtxSAGetDeviceType(const vtxDevice_t *vtxDevice)
 769:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2631              	 .loc 2 769 0
 2632              	 .cfi_startproc
 2633              	 
 2634              	 
 2635              	 
 2636 0000 80B4     	 push {r7}
 2637              	.LCFI119:
 2638              	 .cfi_def_cfa_offset 4
 2639              	 .cfi_offset 7,-4
 2640 0002 83B0     	 sub sp,sp,#12
 2641              	.LCFI120:
 2642              	 .cfi_def_cfa_offset 16
 2643 0004 00AF     	 add r7,sp,#0
 2644              	.LCFI121:
 2645              	 .cfi_def_cfa_register 7
 2646 0006 7860     	 str r0,[r7,#4]
 770:../cleanflight/src/main/io/vtx_smartaudio.c ****     UNUSED(vtxDevice);
 771:../cleanflight/src/main/io/vtx_smartaudio.c ****     return VTXDEV_SMARTAUDIO;
 2647              	 .loc 2 771 0
 2648 0008 0323     	 movs r3,#3
 772:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2649              	 .loc 2 772 0
 2650 000a 1846     	 mov r0,r3
 2651 000c 0C37     	 adds r7,r7,#12
 2652              	.LCFI122:
 2653              	 .cfi_def_cfa_offset 4
 2654 000e BD46     	 mov sp,r7
 2655              	.LCFI123:
 2656              	 .cfi_def_cfa_register 13
 2657              	 
 2658 0010 5DF8047B 	 ldr r7,[sp],#4
 2659              	.LCFI124:
 2660              	 .cfi_restore 7
 2661              	 .cfi_def_cfa_offset 0
 2662 0014 7047     	 bx lr
 2663              	 .cfi_endproc
 2664              	.LFE565:
 2666 0016 00BF     	 .section .text.vtxSAIsReady,"ax",%progbits
 2667              	 .align 2
 2668              	 .thumb
 2669              	 .thumb_func
 2671              	vtxSAIsReady:
 2672              	.LFB566:
 773:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 774:../cleanflight/src/main/io/vtx_smartaudio.c **** static bool vtxSAIsReady(const vtxDevice_t *vtxDevice)
 775:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2673              	 .loc 2 775 0
 2674              	 .cfi_startproc
 2675              	 
 2676              	 
 2677              	 
 2678 0000 80B4     	 push {r7}
 2679              	.LCFI125:
 2680              	 .cfi_def_cfa_offset 4
 2681              	 .cfi_offset 7,-4
 2682 0002 83B0     	 sub sp,sp,#12
 2683              	.LCFI126:
 2684              	 .cfi_def_cfa_offset 16
 2685 0004 00AF     	 add r7,sp,#0
 2686              	.LCFI127:
 2687              	 .cfi_def_cfa_register 7
 2688 0006 7860     	 str r0,[r7,#4]
 776:../cleanflight/src/main/io/vtx_smartaudio.c ****     return vtxDevice!=NULL && !(saDevice.version == 0);
 2689              	 .loc 2 776 0
 2690 0008 7B68     	 ldr r3,[r7,#4]
 2691 000a 002B     	 cmp r3,#0
 2692 000c 05D0     	 beq .L178
 2693              	 .loc 2 776 0 is_stmt 0 discriminator 1
 2694 000e 084B     	 ldr r3,.L181
 2695 0010 1B78     	 ldrb r3,[r3]
 2696 0012 002B     	 cmp r3,#0
 2697 0014 01D0     	 beq .L178
 2698              	 .loc 2 776 0 discriminator 3
 2699 0016 0123     	 movs r3,#1
 2700 0018 00E0     	 b .L179
 2701              	.L178:
 2702              	 .loc 2 776 0 discriminator 4
 2703 001a 0023     	 movs r3,#0
 2704              	.L179:
 2705              	 .loc 2 776 0 discriminator 6
 2706 001c 03F00103 	 and r3,r3,#1
 2707 0020 DBB2     	 uxtb r3,r3
 777:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2708              	 .loc 2 777 0 is_stmt 1 discriminator 6
 2709 0022 1846     	 mov r0,r3
 2710 0024 0C37     	 adds r7,r7,#12
 2711              	.LCFI128:
 2712              	 .cfi_def_cfa_offset 4
 2713 0026 BD46     	 mov sp,r7
 2714              	.LCFI129:
 2715              	 .cfi_def_cfa_register 13
 2716              	 
 2717 0028 5DF8047B 	 ldr r7,[sp],#4
 2718              	.LCFI130:
 2719              	 .cfi_restore 7
 2720              	 .cfi_def_cfa_offset 0
 2721 002c 7047     	 bx lr
 2722              	.L182:
 2723 002e 00BF     	 .align 2
 2724              	.L181:
 2725 0030 00000000 	 .word saDevice
 2726              	 .cfi_endproc
 2727              	.LFE566:
 2729              	 .section .text.vtxSASetBandAndChannel,"ax",%progbits
 2730              	 .align 2
 2731              	 .thumb
 2732              	 .thumb_func
 2734              	vtxSASetBandAndChannel:
 2735              	.LFB567:
 778:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 779:../cleanflight/src/main/io/vtx_smartaudio.c **** static void vtxSASetBandAndChannel(vtxDevice_t *vtxDevice, uint8_t band, uint8_t channel)
 780:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2736              	 .loc 2 780 0
 2737              	 .cfi_startproc
 2738              	 
 2739              	 
 2740 0000 80B5     	 push {r7,lr}
 2741              	.LCFI131:
 2742              	 .cfi_def_cfa_offset 8
 2743              	 .cfi_offset 7,-8
 2744              	 .cfi_offset 14,-4
 2745 0002 82B0     	 sub sp,sp,#8
 2746              	.LCFI132:
 2747              	 .cfi_def_cfa_offset 16
 2748 0004 00AF     	 add r7,sp,#0
 2749              	.LCFI133:
 2750              	 .cfi_def_cfa_register 7
 2751 0006 7860     	 str r0,[r7,#4]
 2752 0008 0B46     	 mov r3,r1
 2753 000a FB70     	 strb r3,[r7,#3]
 2754 000c 1346     	 mov r3,r2
 2755 000e BB70     	 strb r3,[r7,#2]
 781:../cleanflight/src/main/io/vtx_smartaudio.c ****     UNUSED(vtxDevice);
 782:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (saValidateBandAndChannel(band, channel)) {
 2756              	 .loc 2 782 0
 2757 0010 FA78     	 ldrb r2,[r7,#3]
 2758 0012 BB78     	 ldrb r3,[r7,#2]
 2759 0014 1046     	 mov r0,r2
 2760 0016 1946     	 mov r1,r3
 2761 0018 FFF7FEFF 	 bl saValidateBandAndChannel
 2762 001c 0346     	 mov r3,r0
 2763 001e 002B     	 cmp r3,#0
 2764 0020 09D0     	 beq .L183
 783:../cleanflight/src/main/io/vtx_smartaudio.c ****         saSetBandAndChannel(band - 1, channel - 1);
 2765              	 .loc 2 783 0
 2766 0022 FB78     	 ldrb r3,[r7,#3]
 2767 0024 013B     	 subs r3,r3,#1
 2768 0026 DAB2     	 uxtb r2,r3
 2769 0028 BB78     	 ldrb r3,[r7,#2]
 2770 002a 013B     	 subs r3,r3,#1
 2771 002c DBB2     	 uxtb r3,r3
 2772 002e 1046     	 mov r0,r2
 2773 0030 1946     	 mov r1,r3
 2774 0032 FFF7FEFF 	 bl saSetBandAndChannel
 2775              	.L183:
 784:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 785:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2776              	 .loc 2 785 0
 2777 0036 0837     	 adds r7,r7,#8
 2778              	.LCFI134:
 2779              	 .cfi_def_cfa_offset 8
 2780 0038 BD46     	 mov sp,r7
 2781              	.LCFI135:
 2782              	 .cfi_def_cfa_register 13
 2783              	 
 2784 003a 80BD     	 pop {r7,pc}
 2785              	 .cfi_endproc
 2786              	.LFE567:
 2788              	 .section .text.vtxSASetPowerByIndex,"ax",%progbits
 2789              	 .align 2
 2790              	 .thumb
 2791              	 .thumb_func
 2793              	vtxSASetPowerByIndex:
 2794              	.LFB568:
 786:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 787:../cleanflight/src/main/io/vtx_smartaudio.c **** static void vtxSASetPowerByIndex(vtxDevice_t *vtxDevice, uint8_t index)
 788:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2795              	 .loc 2 788 0
 2796              	 .cfi_startproc
 2797              	 
 2798              	 
 2799 0000 80B5     	 push {r7,lr}
 2800              	.LCFI136:
 2801              	 .cfi_def_cfa_offset 8
 2802              	 .cfi_offset 7,-8
 2803              	 .cfi_offset 14,-4
 2804 0002 82B0     	 sub sp,sp,#8
 2805              	.LCFI137:
 2806              	 .cfi_def_cfa_offset 16
 2807 0004 00AF     	 add r7,sp,#0
 2808              	.LCFI138:
 2809              	 .cfi_def_cfa_register 7
 2810 0006 7860     	 str r0,[r7,#4]
 2811 0008 0B46     	 mov r3,r1
 2812 000a FB70     	 strb r3,[r7,#3]
 789:../cleanflight/src/main/io/vtx_smartaudio.c ****     UNUSED(vtxDevice);
 790:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (index == 0) {
 2813              	 .loc 2 790 0
 2814 000c FB78     	 ldrb r3,[r7,#3]
 2815 000e 002B     	 cmp r3,#0
 2816 0010 00D1     	 bne .L186
 791:../cleanflight/src/main/io/vtx_smartaudio.c ****         // SmartAudio doesn't support power off.
 792:../cleanflight/src/main/io/vtx_smartaudio.c ****         return;
 2817              	 .loc 2 792 0
 2818 0012 05E0     	 b .L185
 2819              	.L186:
 793:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 794:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 795:../cleanflight/src/main/io/vtx_smartaudio.c ****     saSetPowerByIndex(index - 1);
 2820              	 .loc 2 795 0
 2821 0014 FB78     	 ldrb r3,[r7,#3]
 2822 0016 013B     	 subs r3,r3,#1
 2823 0018 DBB2     	 uxtb r3,r3
 2824 001a 1846     	 mov r0,r3
 2825 001c FFF7FEFF 	 bl saSetPowerByIndex
 2826              	.L185:
 796:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2827              	 .loc 2 796 0
 2828 0020 0837     	 adds r7,r7,#8
 2829              	.LCFI139:
 2830              	 .cfi_def_cfa_offset 8
 2831 0022 BD46     	 mov sp,r7
 2832              	.LCFI140:
 2833              	 .cfi_def_cfa_register 13
 2834              	 
 2835 0024 80BD     	 pop {r7,pc}
 2836              	 .cfi_endproc
 2837              	.LFE568:
 2839 0026 00BF     	 .section .text.vtxSASetPitMode,"ax",%progbits
 2840              	 .align 2
 2841              	 .thumb
 2842              	 .thumb_func
 2844              	vtxSASetPitMode:
 2845              	.LFB569:
 797:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 798:../cleanflight/src/main/io/vtx_smartaudio.c **** static void vtxSASetPitMode(vtxDevice_t *vtxDevice, uint8_t onoff)
 799:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2846              	 .loc 2 799 0
 2847              	 .cfi_startproc
 2848              	 
 2849              	 
 2850 0000 80B5     	 push {r7,lr}
 2851              	.LCFI141:
 2852              	 .cfi_def_cfa_offset 8
 2853              	 .cfi_offset 7,-8
 2854              	 .cfi_offset 14,-4
 2855 0002 84B0     	 sub sp,sp,#16
 2856              	.LCFI142:
 2857              	 .cfi_def_cfa_offset 24
 2858 0004 00AF     	 add r7,sp,#0
 2859              	.LCFI143:
 2860              	 .cfi_def_cfa_register 7
 2861 0006 7860     	 str r0,[r7,#4]
 2862 0008 0B46     	 mov r3,r1
 2863 000a FB70     	 strb r3,[r7,#3]
 800:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (!(vtxSAIsReady(vtxDevice) && (saDevice.version == 2))) {
 2864              	 .loc 2 800 0
 2865 000c 7868     	 ldr r0,[r7,#4]
 2866 000e FFF7FEFF 	 bl vtxSAIsReady
 2867 0012 0346     	 mov r3,r0
 2868 0014 83F00103 	 eor r3,r3,#1
 2869 0018 DBB2     	 uxtb r3,r3
 2870 001a 002B     	 cmp r3,#0
 2871 001c 04D1     	 bne .L189
 2872              	 .loc 2 800 0 is_stmt 0 discriminator 1
 2873 001e 154B     	 ldr r3,.L195
 2874 0020 1B78     	 ldrb r3,[r3]
 2875 0022 5BB2     	 sxtb r3,r3
 2876 0024 022B     	 cmp r3,#2
 2877 0026 00D0     	 beq .L190
 2878              	.L189:
 801:../cleanflight/src/main/io/vtx_smartaudio.c ****         return;
 2879              	 .loc 2 801 0 is_stmt 1
 2880 0028 20E0     	 b .L188
 2881              	.L190:
 802:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 803:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 804:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (onoff) {
 2882              	 .loc 2 804 0
 2883 002a FB78     	 ldrb r3,[r7,#3]
 2884 002c 002B     	 cmp r3,#0
 2885 002e 00D0     	 beq .L192
 805:../cleanflight/src/main/io/vtx_smartaudio.c ****         // SmartAudio can not turn pit mode on by software.
 806:../cleanflight/src/main/io/vtx_smartaudio.c ****         return;
 2886              	 .loc 2 806 0 discriminator 2
 2887 0030 1CE0     	 b .L188
 2888              	.L192:
 807:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 808:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 809:../cleanflight/src/main/io/vtx_smartaudio.c ****     uint8_t newmode = SA_MODE_CLR_PITMODE;
 2889              	 .loc 2 809 0
 2890 0032 0423     	 movs r3,#4
 2891 0034 FB73     	 strb r3,[r7,#15]
 810:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 811:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (saDevice.mode & SA_MODE_GET_IN_RANGE_PITMODE) {
 2892              	 .loc 2 811 0
 2893 0036 0F4B     	 ldr r3,.L195
 2894 0038 DB78     	 ldrb r3,[r3,#3]
 2895 003a DBB2     	 uxtb r3,r3
 2896 003c 03F00403 	 and r3,r3,#4
 2897 0040 002B     	 cmp r3,#0
 2898 0042 03D0     	 beq .L193
 812:../cleanflight/src/main/io/vtx_smartaudio.c ****         newmode |= SA_MODE_SET_IN_RANGE_PITMODE;
 2899              	 .loc 2 812 0
 2900 0044 FB7B     	 ldrb r3,[r7,#15]
 2901 0046 43F00103 	 orr r3,r3,#1
 2902 004a FB73     	 strb r3,[r7,#15]
 2903              	.L193:
 813:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 814:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 815:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (saDevice.mode & SA_MODE_GET_OUT_RANGE_PITMODE) {
 2904              	 .loc 2 815 0
 2905 004c 094B     	 ldr r3,.L195
 2906 004e DB78     	 ldrb r3,[r3,#3]
 2907 0050 DBB2     	 uxtb r3,r3
 2908 0052 03F00803 	 and r3,r3,#8
 2909 0056 002B     	 cmp r3,#0
 2910 0058 03D0     	 beq .L194
 816:../cleanflight/src/main/io/vtx_smartaudio.c ****         newmode |= SA_MODE_SET_OUT_RANGE_PITMODE;
 2911              	 .loc 2 816 0
 2912 005a FB7B     	 ldrb r3,[r7,#15]
 2913 005c 43F00203 	 orr r3,r3,#2
 2914 0060 FB73     	 strb r3,[r7,#15]
 2915              	.L194:
 817:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 818:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 819:../cleanflight/src/main/io/vtx_smartaudio.c ****     saSetMode(newmode);
 2916              	 .loc 2 819 0
 2917 0062 FB7B     	 ldrb r3,[r7,#15]
 2918 0064 1846     	 mov r0,r3
 2919 0066 FFF7FEFF 	 bl saSetMode
 820:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 821:../cleanflight/src/main/io/vtx_smartaudio.c ****     return;
 2920              	 .loc 2 821 0
 2921 006a 00BF     	 nop
 2922              	.L188:
 822:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2923              	 .loc 2 822 0
 2924 006c 1037     	 adds r7,r7,#16
 2925              	.LCFI144:
 2926              	 .cfi_def_cfa_offset 8
 2927 006e BD46     	 mov sp,r7
 2928              	.LCFI145:
 2929              	 .cfi_def_cfa_register 13
 2930              	 
 2931 0070 80BD     	 pop {r7,pc}
 2932              	.L196:
 2933 0072 00BF     	 .align 2
 2934              	.L195:
 2935 0074 00000000 	 .word saDevice
 2936              	 .cfi_endproc
 2937              	.LFE569:
 2939              	 .section .text.vtxSASetFreq,"ax",%progbits
 2940              	 .align 2
 2941              	 .thumb
 2942              	 .thumb_func
 2944              	vtxSASetFreq:
 2945              	.LFB570:
 823:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 824:../cleanflight/src/main/io/vtx_smartaudio.c **** static void vtxSASetFreq(vtxDevice_t *vtxDevice, uint16_t freq)
 825:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2946              	 .loc 2 825 0
 2947              	 .cfi_startproc
 2948              	 
 2949              	 
 2950 0000 80B5     	 push {r7,lr}
 2951              	.LCFI146:
 2952              	 .cfi_def_cfa_offset 8
 2953              	 .cfi_offset 7,-8
 2954              	 .cfi_offset 14,-4
 2955 0002 82B0     	 sub sp,sp,#8
 2956              	.LCFI147:
 2957              	 .cfi_def_cfa_offset 16
 2958 0004 00AF     	 add r7,sp,#0
 2959              	.LCFI148:
 2960              	 .cfi_def_cfa_register 7
 2961 0006 7860     	 str r0,[r7,#4]
 2962 0008 0B46     	 mov r3,r1
 2963 000a 7B80     	 strh r3,[r7,#2]
 826:../cleanflight/src/main/io/vtx_smartaudio.c ****     UNUSED(vtxDevice);
 827:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (saValidateFreq(freq)) {
 2964              	 .loc 2 827 0
 2965 000c 7B88     	 ldrh r3,[r7,#2]
 2966 000e 1846     	 mov r0,r3
 2967 0010 FFF7FEFF 	 bl saValidateFreq
 2968 0014 0346     	 mov r3,r0
 2969 0016 002B     	 cmp r3,#0
 2970 0018 06D0     	 beq .L197
 828:../cleanflight/src/main/io/vtx_smartaudio.c ****         saSetMode(0);        //need to be in FREE mode to set freq
 2971              	 .loc 2 828 0
 2972 001a 0020     	 movs r0,#0
 2973 001c FFF7FEFF 	 bl saSetMode
 829:../cleanflight/src/main/io/vtx_smartaudio.c ****         saSetFreq(freq);
 2974              	 .loc 2 829 0
 2975 0020 7B88     	 ldrh r3,[r7,#2]
 2976 0022 1846     	 mov r0,r3
 2977 0024 FFF7FEFF 	 bl saSetFreq
 2978              	.L197:
 830:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 831:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 2979              	 .loc 2 831 0
 2980 0028 0837     	 adds r7,r7,#8
 2981              	.LCFI149:
 2982              	 .cfi_def_cfa_offset 8
 2983 002a BD46     	 mov sp,r7
 2984              	.LCFI150:
 2985              	 .cfi_def_cfa_register 13
 2986              	 
 2987 002c 80BD     	 pop {r7,pc}
 2988              	 .cfi_endproc
 2989              	.LFE570:
 2991 002e 00BF     	 .section .text.vtxSAGetBandAndChannel,"ax",%progbits
 2992              	 .align 2
 2993              	 .thumb
 2994              	 .thumb_func
 2996              	vtxSAGetBandAndChannel:
 2997              	.LFB571:
 832:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 833:../cleanflight/src/main/io/vtx_smartaudio.c **** static bool vtxSAGetBandAndChannel(const vtxDevice_t *vtxDevice, uint8_t *pBand, uint8_t *pChannel)
 834:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 2998              	 .loc 2 834 0
 2999              	 .cfi_startproc
 3000              	 
 3001              	 
 3002 0000 80B5     	 push {r7,lr}
 3003              	.LCFI151:
 3004              	 .cfi_def_cfa_offset 8
 3005              	 .cfi_offset 7,-8
 3006              	 .cfi_offset 14,-4
 3007 0002 84B0     	 sub sp,sp,#16
 3008              	.LCFI152:
 3009              	 .cfi_def_cfa_offset 24
 3010 0004 00AF     	 add r7,sp,#0
 3011              	.LCFI153:
 3012              	 .cfi_def_cfa_register 7
 3013 0006 F860     	 str r0,[r7,#12]
 3014 0008 B960     	 str r1,[r7,#8]
 3015 000a 7A60     	 str r2,[r7,#4]
 835:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (!vtxSAIsReady(vtxDevice)) {
 3016              	 .loc 2 835 0
 3017 000c F868     	 ldr r0,[r7,#12]
 3018 000e FFF7FEFF 	 bl vtxSAIsReady
 3019 0012 0346     	 mov r3,r0
 3020 0014 83F00103 	 eor r3,r3,#1
 3021 0018 DBB2     	 uxtb r3,r3
 3022 001a 002B     	 cmp r3,#0
 3023 001c 01D0     	 beq .L200
 836:../cleanflight/src/main/io/vtx_smartaudio.c ****         return false;
 3024              	 .loc 2 836 0
 3025 001e 0023     	 movs r3,#0
 3026 0020 27E0     	 b .L201
 3027              	.L200:
 837:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 838:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 839:../cleanflight/src/main/io/vtx_smartaudio.c ****     // if in user-freq mode then report band as zero
 840:../cleanflight/src/main/io/vtx_smartaudio.c ****     *pBand = (saDevice.mode & SA_MODE_GET_FREQ_BY_FREQ) ? 0 :
 3028              	 .loc 2 840 0
 3029 0022 164B     	 ldr r3,.L206
 3030 0024 DB78     	 ldrb r3,[r3,#3]
 3031 0026 DBB2     	 uxtb r3,r3
 3032 0028 03F00103 	 and r3,r3,#1
 3033 002c 002B     	 cmp r3,#0
 3034 002e 0BD1     	 bne .L202
 841:../cleanflight/src/main/io/vtx_smartaudio.c ****         (SA_DEVICE_CHVAL_TO_BAND(saDevice.channel) + 1);
 3035              	 .loc 2 841 0 discriminator 1
 3036 0030 124B     	 ldr r3,.L206
 3037 0032 5B78     	 ldrb r3,[r3,#1]
 840:../cleanflight/src/main/io/vtx_smartaudio.c ****         (SA_DEVICE_CHVAL_TO_BAND(saDevice.channel) + 1);
 3038              	 .loc 2 840 0 discriminator 1
 3039 0034 5BB2     	 sxtb r3,r3
 3040 0036 002B     	 cmp r3,#0
 3041 0038 00DA     	 bge .L203
 3042 003a 0733     	 adds r3,r3,#7
 3043              	.L203:
 3044 003c DB10     	 asrs r3,r3,#3
 3045 003e DBB2     	 uxtb r3,r3
 3046 0040 DBB2     	 uxtb r3,r3
 3047 0042 0133     	 adds r3,r3,#1
 3048 0044 DAB2     	 uxtb r2,r3
 3049 0046 00E0     	 b .L204
 3050              	.L202:
 840:../cleanflight/src/main/io/vtx_smartaudio.c ****         (SA_DEVICE_CHVAL_TO_BAND(saDevice.channel) + 1);
 3051              	 .loc 2 840 0 is_stmt 0 discriminator 2
 3052 0048 0022     	 movs r2,#0
 3053              	.L204:
 840:../cleanflight/src/main/io/vtx_smartaudio.c ****         (SA_DEVICE_CHVAL_TO_BAND(saDevice.channel) + 1);
 3054              	 .loc 2 840 0 discriminator 4
 3055 004a BB68     	 ldr r3,[r7,#8]
 3056 004c 1A70     	 strb r2,[r3]
 842:../cleanflight/src/main/io/vtx_smartaudio.c ****     *pChannel = SA_DEVICE_CHVAL_TO_CHANNEL(saDevice.channel) + 1;
 3057              	 .loc 2 842 0 is_stmt 1 discriminator 4
 3058 004e 0B4B     	 ldr r3,.L206
 3059 0050 5B78     	 ldrb r3,[r3,#1]
 3060 0052 5AB2     	 sxtb r2,r3
 3061 0054 0A4B     	 ldr r3,.L206+4
 3062 0056 1340     	 ands r3,r3,r2
 3063 0058 002B     	 cmp r3,#0
 3064 005a 03DA     	 bge .L205
 3065 005c 013B     	 subs r3,r3,#1
 3066 005e 63F00703 	 orn r3,r3,#7
 3067 0062 0133     	 adds r3,r3,#1
 3068              	.L205:
 3069 0064 DBB2     	 uxtb r3,r3
 3070 0066 DBB2     	 uxtb r3,r3
 3071 0068 0133     	 adds r3,r3,#1
 3072 006a DAB2     	 uxtb r2,r3
 3073 006c 7B68     	 ldr r3,[r7,#4]
 3074 006e 1A70     	 strb r2,[r3]
 843:../cleanflight/src/main/io/vtx_smartaudio.c ****     return true;
 3075              	 .loc 2 843 0 discriminator 4
 3076 0070 0123     	 movs r3,#1
 3077              	.L201:
 844:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 3078              	 .loc 2 844 0
 3079 0072 1846     	 mov r0,r3
 3080 0074 1037     	 adds r7,r7,#16
 3081              	.LCFI154:
 3082              	 .cfi_def_cfa_offset 8
 3083 0076 BD46     	 mov sp,r7
 3084              	.LCFI155:
 3085              	 .cfi_def_cfa_register 13
 3086              	 
 3087 0078 80BD     	 pop {r7,pc}
 3088              	.L207:
 3089 007a 00BF     	 .align 2
 3090              	.L206:
 3091 007c 00000000 	 .word saDevice
 3092 0080 07000080 	 .word -2147483641
 3093              	 .cfi_endproc
 3094              	.LFE571:
 3096              	 .section .text.vtxSAGetPowerIndex,"ax",%progbits
 3097              	 .align 2
 3098              	 .thumb
 3099              	 .thumb_func
 3101              	vtxSAGetPowerIndex:
 3102              	.LFB572:
 845:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 846:../cleanflight/src/main/io/vtx_smartaudio.c **** static bool vtxSAGetPowerIndex(const vtxDevice_t *vtxDevice, uint8_t *pIndex)
 847:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 3103              	 .loc 2 847 0
 3104              	 .cfi_startproc
 3105              	 
 3106              	 
 3107 0000 80B5     	 push {r7,lr}
 3108              	.LCFI156:
 3109              	 .cfi_def_cfa_offset 8
 3110              	 .cfi_offset 7,-8
 3111              	 .cfi_offset 14,-4
 3112 0002 82B0     	 sub sp,sp,#8
 3113              	.LCFI157:
 3114              	 .cfi_def_cfa_offset 16
 3115 0004 00AF     	 add r7,sp,#0
 3116              	.LCFI158:
 3117              	 .cfi_def_cfa_register 7
 3118 0006 7860     	 str r0,[r7,#4]
 3119 0008 3960     	 str r1,[r7]
 848:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (!vtxSAIsReady(vtxDevice)) {
 3120              	 .loc 2 848 0
 3121 000a 7868     	 ldr r0,[r7,#4]
 3122 000c FFF7FEFF 	 bl vtxSAIsReady
 3123 0010 0346     	 mov r3,r0
 3124 0012 83F00103 	 eor r3,r3,#1
 3125 0016 DBB2     	 uxtb r3,r3
 3126 0018 002B     	 cmp r3,#0
 3127 001a 01D0     	 beq .L209
 849:../cleanflight/src/main/io/vtx_smartaudio.c ****         return false;
 3128              	 .loc 2 849 0
 3129 001c 0023     	 movs r3,#0
 3130 001e 17E0     	 b .L210
 3131              	.L209:
 850:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 851:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 852:../cleanflight/src/main/io/vtx_smartaudio.c ****     *pIndex = ((saDevice.version == 1) ? saDacToPowerIndex(saDevice.power) : saDevice.power) + 1;
 3132              	 .loc 2 852 0
 3133 0020 0D4B     	 ldr r3,.L213
 3134 0022 1B78     	 ldrb r3,[r3]
 3135 0024 5BB2     	 sxtb r3,r3
 3136 0026 012B     	 cmp r3,#1
 3137 0028 0AD1     	 bne .L211
 3138              	 .loc 2 852 0 is_stmt 0 discriminator 1
 3139 002a 0B4B     	 ldr r3,.L213
 3140 002c 9B78     	 ldrb r3,[r3,#2]
 3141 002e 5BB2     	 sxtb r3,r3
 3142 0030 1846     	 mov r0,r3
 3143 0032 FFF7FEFF 	 bl saDacToPowerIndex
 3144 0036 0346     	 mov r3,r0
 3145 0038 DBB2     	 uxtb r3,r3
 3146 003a 0133     	 adds r3,r3,#1
 3147 003c DBB2     	 uxtb r3,r3
 3148 003e 04E0     	 b .L212
 3149              	.L211:
 3150              	 .loc 2 852 0 discriminator 2
 3151 0040 054B     	 ldr r3,.L213
 3152 0042 9B78     	 ldrb r3,[r3,#2]
 3153 0044 DBB2     	 uxtb r3,r3
 3154 0046 0133     	 adds r3,r3,#1
 3155 0048 DBB2     	 uxtb r3,r3
 3156              	.L212:
 3157              	 .loc 2 852 0 discriminator 4
 3158 004a 3A68     	 ldr r2,[r7]
 3159 004c 1370     	 strb r3,[r2]
 853:../cleanflight/src/main/io/vtx_smartaudio.c ****     return true;
 3160              	 .loc 2 853 0 is_stmt 1 discriminator 4
 3161 004e 0123     	 movs r3,#1
 3162              	.L210:
 854:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 3163              	 .loc 2 854 0
 3164 0050 1846     	 mov r0,r3
 3165 0052 0837     	 adds r7,r7,#8
 3166              	.LCFI159:
 3167              	 .cfi_def_cfa_offset 8
 3168 0054 BD46     	 mov sp,r7
 3169              	.LCFI160:
 3170              	 .cfi_def_cfa_register 13
 3171              	 
 3172 0056 80BD     	 pop {r7,pc}
 3173              	.L214:
 3174              	 .align 2
 3175              	.L213:
 3176 0058 00000000 	 .word saDevice
 3177              	 .cfi_endproc
 3178              	.LFE572:
 3180              	 .section .text.vtxSAGetPitMode,"ax",%progbits
 3181              	 .align 2
 3182              	 .thumb
 3183              	 .thumb_func
 3185              	vtxSAGetPitMode:
 3186              	.LFB573:
 855:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 856:../cleanflight/src/main/io/vtx_smartaudio.c **** static bool vtxSAGetPitMode(const vtxDevice_t *vtxDevice, uint8_t *pOnOff)
 857:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 3187              	 .loc 2 857 0
 3188              	 .cfi_startproc
 3189              	 
 3190              	 
 3191 0000 80B5     	 push {r7,lr}
 3192              	.LCFI161:
 3193              	 .cfi_def_cfa_offset 8
 3194              	 .cfi_offset 7,-8
 3195              	 .cfi_offset 14,-4
 3196 0002 82B0     	 sub sp,sp,#8
 3197              	.LCFI162:
 3198              	 .cfi_def_cfa_offset 16
 3199 0004 00AF     	 add r7,sp,#0
 3200              	.LCFI163:
 3201              	 .cfi_def_cfa_register 7
 3202 0006 7860     	 str r0,[r7,#4]
 3203 0008 3960     	 str r1,[r7]
 858:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (!(vtxSAIsReady(vtxDevice) && (saDevice.version == 2))) {
 3204              	 .loc 2 858 0
 3205 000a 7868     	 ldr r0,[r7,#4]
 3206 000c FFF7FEFF 	 bl vtxSAIsReady
 3207 0010 0346     	 mov r3,r0
 3208 0012 83F00103 	 eor r3,r3,#1
 3209 0016 DBB2     	 uxtb r3,r3
 3210 0018 002B     	 cmp r3,#0
 3211 001a 04D1     	 bne .L216
 3212              	 .loc 2 858 0 is_stmt 0 discriminator 1
 3213 001c 0C4B     	 ldr r3,.L219
 3214 001e 1B78     	 ldrb r3,[r3]
 3215 0020 5BB2     	 sxtb r3,r3
 3216 0022 022B     	 cmp r3,#2
 3217 0024 01D0     	 beq .L217
 3218              	.L216:
 859:../cleanflight/src/main/io/vtx_smartaudio.c ****         return false;
 3219              	 .loc 2 859 0 is_stmt 1
 3220 0026 0023     	 movs r3,#0
 3221 0028 0DE0     	 b .L218
 3222              	.L217:
 860:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 861:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 862:../cleanflight/src/main/io/vtx_smartaudio.c ****     *pOnOff = (saDevice.mode & SA_MODE_GET_PITMODE) ? 1 : 0;
 3223              	 .loc 2 862 0
 3224 002a 094B     	 ldr r3,.L219
 3225 002c DB78     	 ldrb r3,[r3,#3]
 3226 002e DBB2     	 uxtb r3,r3
 3227 0030 03F00203 	 and r3,r3,#2
 3228 0034 002B     	 cmp r3,#0
 3229 0036 14BF     	 ite ne
 3230 0038 0123     	 movne r3,#1
 3231 003a 0023     	 moveq r3,#0
 3232 003c DBB2     	 uxtb r3,r3
 3233 003e 1A46     	 mov r2,r3
 3234 0040 3B68     	 ldr r3,[r7]
 3235 0042 1A70     	 strb r2,[r3]
 863:../cleanflight/src/main/io/vtx_smartaudio.c ****     return true;
 3236              	 .loc 2 863 0
 3237 0044 0123     	 movs r3,#1
 3238              	.L218:
 864:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 3239              	 .loc 2 864 0
 3240 0046 1846     	 mov r0,r3
 3241 0048 0837     	 adds r7,r7,#8
 3242              	.LCFI164:
 3243              	 .cfi_def_cfa_offset 8
 3244 004a BD46     	 mov sp,r7
 3245              	.LCFI165:
 3246              	 .cfi_def_cfa_register 13
 3247              	 
 3248 004c 80BD     	 pop {r7,pc}
 3249              	.L220:
 3250 004e 00BF     	 .align 2
 3251              	.L219:
 3252 0050 00000000 	 .word saDevice
 3253              	 .cfi_endproc
 3254              	.LFE573:
 3256              	 .section .text.vtxSAGetFreq,"ax",%progbits
 3257              	 .align 2
 3258              	 .thumb
 3259              	 .thumb_func
 3261              	vtxSAGetFreq:
 3262              	.LFB574:
 865:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 866:../cleanflight/src/main/io/vtx_smartaudio.c **** static bool vtxSAGetFreq(const vtxDevice_t *vtxDevice, uint16_t *pFreq)
 867:../cleanflight/src/main/io/vtx_smartaudio.c **** {
 3263              	 .loc 2 867 0
 3264              	 .cfi_startproc
 3265              	 
 3266              	 
 3267 0000 80B5     	 push {r7,lr}
 3268              	.LCFI166:
 3269              	 .cfi_def_cfa_offset 8
 3270              	 .cfi_offset 7,-8
 3271              	 .cfi_offset 14,-4
 3272 0002 82B0     	 sub sp,sp,#8
 3273              	.LCFI167:
 3274              	 .cfi_def_cfa_offset 16
 3275 0004 00AF     	 add r7,sp,#0
 3276              	.LCFI168:
 3277              	 .cfi_def_cfa_register 7
 3278 0006 7860     	 str r0,[r7,#4]
 3279 0008 3960     	 str r1,[r7]
 868:../cleanflight/src/main/io/vtx_smartaudio.c ****     if (!vtxSAIsReady(vtxDevice)) {
 3280              	 .loc 2 868 0
 3281 000a 7868     	 ldr r0,[r7,#4]
 3282 000c FFF7FEFF 	 bl vtxSAIsReady
 3283 0010 0346     	 mov r3,r0
 3284 0012 83F00103 	 eor r3,r3,#1
 3285 0016 DBB2     	 uxtb r3,r3
 3286 0018 002B     	 cmp r3,#0
 3287 001a 01D0     	 beq .L222
 869:../cleanflight/src/main/io/vtx_smartaudio.c ****         return false;
 3288              	 .loc 2 869 0
 3289 001c 0023     	 movs r3,#0
 3290 001e 2CE0     	 b .L223
 3291              	.L222:
 870:../cleanflight/src/main/io/vtx_smartaudio.c ****     }
 871:../cleanflight/src/main/io/vtx_smartaudio.c **** 
 872:../cleanflight/src/main/io/vtx_smartaudio.c ****     // if not in user-freq mode then convert band/chan to frequency
 873:../cleanflight/src/main/io/vtx_smartaudio.c ****     *pFreq = (saDevice.mode & SA_MODE_GET_FREQ_BY_FREQ) ? saDevice.freq :
 3292              	 .loc 2 873 0
 3293 0020 184B     	 ldr r3,.L228
 3294 0022 DB78     	 ldrb r3,[r3,#3]
 3295 0024 DBB2     	 uxtb r3,r3
 3296 0026 03F00103 	 and r3,r3,#1
 3297 002a 002B     	 cmp r3,#0
 3298 002c 02D0     	 beq .L224
 3299              	 .loc 2 873 0 is_stmt 0 discriminator 1
 3300 002e 154B     	 ldr r3,.L228
 3301 0030 9A88     	 ldrh r2,[r3,#4]
 3302 0032 1FE0     	 b .L225
 3303              	.L224:
 874:../cleanflight/src/main/io/vtx_smartaudio.c ****         vtx58_Bandchan2Freq(SA_DEVICE_CHVAL_TO_BAND(saDevice.channel) + 1,
 3304              	 .loc 2 874 0 is_stmt 1 discriminator 2
 3305 0034 134B     	 ldr r3,.L228
 3306 0036 5B78     	 ldrb r3,[r3,#1]
 3307 0038 5BB2     	 sxtb r3,r3
 3308 003a 002B     	 cmp r3,#0
 3309 003c 00DA     	 bge .L226
 3310 003e 0733     	 adds r3,r3,#7
 3311              	.L226:
 3312 0040 DB10     	 asrs r3,r3,#3
 3313 0042 DBB2     	 uxtb r3,r3
 3314 0044 DBB2     	 uxtb r3,r3
 3315 0046 0133     	 adds r3,r3,#1
 3316 0048 D9B2     	 uxtb r1,r3
 875:../cleanflight/src/main/io/vtx_smartaudio.c ****         SA_DEVICE_CHVAL_TO_CHANNEL(saDevice.channel) + 1);
 3317              	 .loc 2 875 0 discriminator 2
 3318 004a 0E4B     	 ldr r3,.L228
 3319 004c 5B78     	 ldrb r3,[r3,#1]
 874:../cleanflight/src/main/io/vtx_smartaudio.c ****         vtx58_Bandchan2Freq(SA_DEVICE_CHVAL_TO_BAND(saDevice.channel) + 1,
 3320              	 .loc 2 874 0 discriminator 2
 3321 004e 5AB2     	 sxtb r2,r3
 3322 0050 0D4B     	 ldr r3,.L228+4
 3323 0052 1340     	 ands r3,r3,r2
 3324 0054 002B     	 cmp r3,#0
 3325 0056 03DA     	 bge .L227
 3326 0058 013B     	 subs r3,r3,#1
 3327 005a 63F00703 	 orn r3,r3,#7
 3328 005e 0133     	 adds r3,r3,#1
 3329              	.L227:
 3330 0060 DBB2     	 uxtb r3,r3
 3331 0062 DBB2     	 uxtb r3,r3
 3332 0064 0133     	 adds r3,r3,#1
 3333 0066 DBB2     	 uxtb r3,r3
 873:../cleanflight/src/main/io/vtx_smartaudio.c ****         vtx58_Bandchan2Freq(SA_DEVICE_CHVAL_TO_BAND(saDevice.channel) + 1,
 3334              	 .loc 2 873 0 discriminator 2
 3335 0068 0846     	 mov r0,r1
 3336 006a 1946     	 mov r1,r3
 3337 006c FFF7FEFF 	 bl vtx58_Bandchan2Freq
 3338 0070 0346     	 mov r3,r0
 3339 0072 1A46     	 mov r2,r3
 3340              	.L225:
 873:../cleanflight/src/main/io/vtx_smartaudio.c ****         vtx58_Bandchan2Freq(SA_DEVICE_CHVAL_TO_BAND(saDevice.channel) + 1,
 3341              	 .loc 2 873 0 is_stmt 0 discriminator 4
 3342 0074 3B68     	 ldr r3,[r7]
 3343 0076 1A80     	 strh r2,[r3]
 876:../cleanflight/src/main/io/vtx_smartaudio.c ****     return true;
 3344              	 .loc 2 876 0 is_stmt 1 discriminator 4
 3345 0078 0123     	 movs r3,#1
 3346              	.L223:
 877:../cleanflight/src/main/io/vtx_smartaudio.c **** }
 3347              	 .loc 2 877 0
 3348 007a 1846     	 mov r0,r3
 3349 007c 0837     	 adds r7,r7,#8
 3350              	.LCFI169:
 3351              	 .cfi_def_cfa_offset 8
 3352 007e BD46     	 mov sp,r7
 3353              	.LCFI170:
 3354              	 .cfi_def_cfa_register 13
 3355              	 
 3356 0080 80BD     	 pop {r7,pc}
 3357              	.L229:
 3358 0082 00BF     	 .align 2
 3359              	.L228:
 3360 0084 00000000 	 .word saDevice
 3361 0088 07000080 	 .word -2147483641
 3362              	 .cfi_endproc
 3363              	.LFE574:
 3365              	 .section .bss.state.12737,"aw",%nobits
 3368              	state.12737:
 3369 0000 00       	 .space 1
 3370              	 .section .bss.len.12738,"aw",%nobits
 3371              	 .align 2
 3374              	len.12738:
 3375 0000 00000000 	 .space 4
 3376              	 .section .bss.dlen.12739,"aw",%nobits
 3377              	 .align 2
 3380              	dlen.12739:
 3381 0000 00000000 	 .space 4
 3382              	 .section .data.bufGetSettings.12793,"aw",%progbits
 3383              	 .align 2
 3386              	bufGetSettings.12793:
 3387 0000 AA       	 .byte -86
 3388 0001 55       	 .byte 85
 3389 0002 03       	 .byte 3
 3390 0003 00       	 .byte 0
 3391 0004 9F       	 .byte -97
 3392 0005 000000   	 .section .data.buf.12800,"aw",%progbits
 3393              	 .align 2
 3396              	buf.12800:
 3397 0000 AA       	 .byte -86
 3398 0001 55       	 .byte 85
 3399 0002 09       	 .byte 9
 3400 0003 02       	 .byte 2
 3401 0004 000000   	 .space 3
 3402 0007 00       	 .section .bss.switchBuf.12801,"aw",%nobits
 3403              	 .align 2
 3406              	switchBuf.12801:
 3407 0000 00000000 	 .space 7
 3407      000000
 3408 0007 00       	 .section .data.buf.12817,"aw",%progbits
 3409              	 .align 2
 3412              	buf.12817:
 3413 0000 AA       	 .byte -86
 3414 0001 55       	 .byte 85
 3415 0002 07       	 .byte 7
 3416 0003 01       	 .byte 1
 3417 0004 0000     	 .space 2
 3418 0006 0000     	 .section .data.buf.12825,"aw",%progbits
 3419              	 .align 2
 3422              	buf.12825:
 3423 0000 AA       	 .byte -86
 3424 0001 55       	 .byte 85
 3425 0002 0B       	 .byte 11
 3426 0003 01       	 .byte 1
 3427 0004 0000     	 .space 2
 3428 0006 0000     	 .section .data.buf.12829,"aw",%progbits
 3429              	 .align 2
 3432              	buf.12829:
 3433 0000 AA       	 .byte -86
 3434 0001 55       	 .byte 85
 3435 0002 05       	 .byte 5
 3436 0003 01       	 .byte 1
 3437 0004 0000     	 .space 2
 3438 0006 0000     	 .section .bss.initPhase.12842,"aw",%nobits
 3441              	initPhase.12842:
 3442 0000 00       	 .space 1
 3443              	 .section .bss.lastCommandSentMs.12853,"aw",%nobits
 3444              	 .align 2
 3447              	lastCommandSentMs.12853:
 3448 0000 00000000 	 .space 4
 3449              	 .text
 3450              	.Letext0:
 3451              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3452              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3453              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 3454              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/display.h"
 3455              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 3456              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build/debug.h"
 3457              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/vtx_common.h"
 3458              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 3459              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 3460              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
 3461              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/serial.h"
 3462              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/vtx.h"
 3463              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/rc_modes.h"
 3464              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/vtx_smartaudio.h"
 3465              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 3466              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
 3467              	 .file 19 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/cms/cms.h"
 3468              	 .file 20 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/vtx_string.h"
DEFINED SYMBOLS
                            *ABS*:00000000 vtx_smartaudio.c
                            *COM*:00000004 pCurrentDisplay
    {standard input}:21     .text.vtxConfig:00000000 $t
    {standard input}:25     .text.vtxConfig:00000000 vtxConfig
    {standard input}:55     .text.vtxConfig:00000010 $d
    {standard input}:60     .bss.smartAudioSerialPort:00000000 $d
    {standard input}:63     .bss.smartAudioSerialPort:00000000 smartAudioSerialPort
    {standard input}:86     .rodata.saPowerNames:00000000 saPowerNames
    {standard input}:67     .rodata:00000000 $d
    {standard input}:83     .rodata.saPowerNames:00000000 $d
    {standard input}:93     .rodata.saVTable:00000000 $d
    {standard input}:96     .rodata.saVTable:00000000 saVTable
    {standard input}:2423   .text.vtxSAProcess:00000000 vtxSAProcess
    {standard input}:2629   .text.vtxSAGetDeviceType:00000000 vtxSAGetDeviceType
    {standard input}:2671   .text.vtxSAIsReady:00000000 vtxSAIsReady
    {standard input}:2734   .text.vtxSASetBandAndChannel:00000000 vtxSASetBandAndChannel
    {standard input}:2793   .text.vtxSASetPowerByIndex:00000000 vtxSASetPowerByIndex
    {standard input}:2844   .text.vtxSASetPitMode:00000000 vtxSASetPitMode
    {standard input}:2944   .text.vtxSASetFreq:00000000 vtxSASetFreq
    {standard input}:2996   .text.vtxSAGetBandAndChannel:00000000 vtxSAGetBandAndChannel
    {standard input}:3101   .text.vtxSAGetPowerIndex:00000000 vtxSAGetPowerIndex
    {standard input}:3185   .text.vtxSAGetPitMode:00000000 vtxSAGetPitMode
    {standard input}:3261   .text.vtxSAGetFreq:00000000 vtxSAGetFreq
    {standard input}:109    .data.vtxSmartAudio:00000000 $d
    {standard input}:112    .data.vtxSmartAudio:00000000 vtxSmartAudio
                            *COM*:00000001 smartAudioCommand_e
    {standard input}:129    .bss.saStat:00000000 saStat
    {standard input}:126    .bss.saStat:00000000 $d
    {standard input}:136    .data.saPowerTable:00000000 saPowerTable
    {standard input}:133    .data.saPowerTable:00000000 $d
    {standard input}:154    .data.saDevice:00000000 saDevice
    {standard input}:151    .data.saDevice:00000000 $d
    {standard input}:162    .bss.saDevicePrev:00000000 $d
    {standard input}:165    .bss.saDevicePrev:00000000 saDevicePrev
    {standard input}:170    .data.saLockMode:00000000 saLockMode
    {standard input}:176    .data.saDeferred:00000000 saDeferred
    {standard input}:179    .bss.sa_rbuf:00000000 $d
    {standard input}:182    .bss.sa_rbuf:00000000 sa_rbuf
    {standard input}:185    .text.CRC8:00000000 $t
    {standard input}:189    .text.CRC8:00000000 CRC8
    {standard input}:297    .text.saDacToPowerIndex:00000000 $t
    {standard input}:302    .text.saDacToPowerIndex:00000000 saDacToPowerIndex
    {standard input}:370    .text.saDacToPowerIndex:00000040 $d
    {standard input}:379    .data.sa_smartbaud:00000000 sa_smartbaud
    {standard input}:376    .data.sa_smartbaud:00000000 $d
    {standard input}:382    .data.sa_adjdir:00000000 $d
    {standard input}:385    .data.sa_adjdir:00000000 sa_adjdir
    {standard input}:388    .data.sa_baudstep:00000000 $d
    {standard input}:391    .data.sa_baudstep:00000000 sa_baudstep
    {standard input}:394    .text.saAutobaud:00000000 $t
    {standard input}:398    .text.saAutobaud:00000000 saAutobaud
    {standard input}:515    .text.saAutobaud:000000b0 $d
    {standard input}:524    .bss.sa_lastTransmissionMs:00000000 $d
    {standard input}:527    .bss.sa_lastTransmissionMs:00000000 sa_lastTransmissionMs
    {standard input}:532    .bss.sa_outstanding:00000000 sa_outstanding
    {standard input}:533    .bss.sa_outstanding:00000000 $d
    {standard input}:535    .bss.sa_osbuf:00000000 $d
    {standard input}:538    .bss.sa_osbuf:00000000 sa_osbuf
    {standard input}:541    .bss.sa_oslen:00000000 $d
    {standard input}:544    .bss.sa_oslen:00000000 sa_oslen
    {standard input}:547    .text.saProcessResponse:00000000 $t
    {standard input}:551    .text.saProcessResponse:00000000 saProcessResponse
    {standard input}:618    .text.saProcessResponse:00000054 $d
    {standard input}:627    .text.saProcessResponse:00000078 $t
    {standard input}:863    .text.saProcessResponse:000001dc $d
    {standard input}:873    .text.saReceiveFramer:00000000 $t
    {standard input}:877    .text.saReceiveFramer:00000000 saReceiveFramer
    {standard input}:905    .text.saReceiveFramer:0000001c $d
    {standard input}:911    .text.saReceiveFramer:00000034 $t
    {standard input}:1110   .text.saReceiveFramer:00000150 $d
    {standard input}:3368   .bss.state.12737:00000000 state.12737
    {standard input}:3374   .bss.len.12738:00000000 len.12738
    {standard input}:3380   .bss.dlen.12739:00000000 dlen.12739
    {standard input}:1119   .text.saSendFrame:00000000 $t
    {standard input}:1123   .text.saSendFrame:00000000 saSendFrame
    {standard input}:1212   .text.saSendFrame:0000006c $d
    {standard input}:1219   .text.saResendCmd:00000000 $t
    {standard input}:1223   .text.saResendCmd:00000000 saResendCmd
    {standard input}:1248   .text.saResendCmd:00000014 $d
    {standard input}:1254   .text.saSendCmd:00000000 $t
    {standard input}:1258   .text.saSendCmd:00000000 saSendCmd
    {standard input}:1334   .text.saSendCmd:00000058 $d
    {standard input}:1341   .bss.sa_queue:00000000 $d
    {standard input}:1344   .bss.sa_queue:00000000 sa_queue
    {standard input}:1349   .bss.sa_qhead:00000000 sa_qhead
    {standard input}:1350   .bss.sa_qhead:00000000 $d
    {standard input}:1354   .bss.sa_qtail:00000000 sa_qtail
    {standard input}:1355   .bss.sa_qtail:00000000 $d
    {standard input}:1357   .text.saQueueEmpty:00000000 $t
    {standard input}:1361   .text.saQueueEmpty:00000000 saQueueEmpty
    {standard input}:1399   .text.saQueueEmpty:00000020 $d
    {standard input}:1405   .text.saQueueFull:00000000 $t
    {standard input}:1409   .text.saQueueFull:00000000 saQueueFull
    {standard input}:1457   .text.saQueueFull:00000038 $d
    {standard input}:1464   .text.saQueueCmd:00000000 $t
    {standard input}:1468   .text.saQueueCmd:00000000 saQueueCmd
    {standard input}:1539   .text.saQueueCmd:00000058 $d
    {standard input}:1546   .text.saSendQueue:00000000 $t
    {standard input}:1550   .text.saSendQueue:00000000 saSendQueue
    {standard input}:1609   .text.saSendQueue:00000054 $d
    {standard input}:1616   .text.saGetSettings:00000000 $t
    {standard input}:1620   .text.saGetSettings:00000000 saGetSettings
    {standard input}:1643   .text.saGetSettings:00000010 $d
    {standard input}:3386   .data.bufGetSettings.12793:00000000 bufGetSettings.12793
    {standard input}:1648   .text.saValidateFreq:00000000 $t
    {standard input}:1652   .text.saValidateFreq:00000000 saValidateFreq
    {standard input}:1709   .text.saDoDevSetFreq:00000000 $t
    {standard input}:1713   .text.saDoDevSetFreq:00000000 saDoDevSetFreq
    {standard input}:1838   .text.saDoDevSetFreq:000000b4 $d
    {standard input}:3396   .data.buf.12800:00000000 buf.12800
    {standard input}:3406   .bss.switchBuf.12801:00000000 switchBuf.12801
    {standard input}:1845   .text.saSetFreq:00000000 $t
    {standard input}:1850   .text.saSetFreq:00000000 saSetFreq
    {standard input}:1886   .text.saSetPitFreq:00000000 $t
    {standard input}:1891   .text.saSetPitFreq:00000000 saSetPitFreq
    {standard input}:1930   .text.saValidateBandAndChannel:00000000 $t
    {standard input}:1934   .text.saValidateBandAndChannel:00000000 saValidateBandAndChannel
    {standard input}:2000   .text.saDevSetBandAndChannel:00000000 $t
    {standard input}:2004   .text.saDevSetBandAndChannel:00000000 saDevSetBandAndChannel
    {standard input}:2059   .text.saDevSetBandAndChannel:00000040 $d
    {standard input}:3412   .data.buf.12817:00000000 buf.12817
    {standard input}:2064   .text.saSetBandAndChannel:00000000 $t
    {standard input}:2069   .text.saSetBandAndChannel:00000000 saSetBandAndChannel
    {standard input}:2110   .text.saSetMode:00000000 $t
    {standard input}:2115   .text.saSetMode:00000000 saSetMode
    {standard input}:2170   .text.saSetMode:00000040 $d
    {standard input}:3422   .data.buf.12825:00000000 buf.12825
    {standard input}:2176   .text.saDevSetPowerByIndex:00000000 $t
    {standard input}:2180   .text.saDevSetPowerByIndex:00000000 saDevSetPowerByIndex
    {standard input}:2265   .text.saDevSetPowerByIndex:00000064 $d
    {standard input}:3432   .data.buf.12829:00000000 buf.12829
    {standard input}:2272   .text.saSetPowerByIndex:00000000 $t
    {standard input}:2277   .text.saSetPowerByIndex:00000000 saSetPowerByIndex
    {standard input}:2313   .text.vtxSmartAudioInit:00000000 $t
    {standard input}:2318   .text.vtxSmartAudioInit:00000000 vtxSmartAudioInit
    {standard input}:2413   .text.vtxSmartAudioInit:0000007c $d
    {standard input}:2419   .text.vtxSAProcess:00000000 $t
    {standard input}:2486   .text.vtxSAProcess:00000050 $d
    {standard input}:2490   .text.vtxSAProcess:00000060 $t
    {standard input}:2614   .text.vtxSAProcess:00000114 $d
    {standard input}:3441   .bss.initPhase.12842:00000000 initPhase.12842
    {standard input}:3447   .bss.lastCommandSentMs.12853:00000000 lastCommandSentMs.12853
    {standard input}:2624   .text.vtxSAGetDeviceType:00000000 $t
    {standard input}:2667   .text.vtxSAIsReady:00000000 $t
    {standard input}:2725   .text.vtxSAIsReady:00000030 $d
    {standard input}:2730   .text.vtxSASetBandAndChannel:00000000 $t
    {standard input}:2789   .text.vtxSASetPowerByIndex:00000000 $t
    {standard input}:2840   .text.vtxSASetPitMode:00000000 $t
    {standard input}:2935   .text.vtxSASetPitMode:00000074 $d
    {standard input}:2940   .text.vtxSASetFreq:00000000 $t
    {standard input}:2992   .text.vtxSAGetBandAndChannel:00000000 $t
    {standard input}:3091   .text.vtxSAGetBandAndChannel:0000007c $d
    {standard input}:3097   .text.vtxSAGetPowerIndex:00000000 $t
    {standard input}:3176   .text.vtxSAGetPowerIndex:00000058 $d
    {standard input}:3181   .text.vtxSAGetPitMode:00000000 $t
    {standard input}:3252   .text.vtxSAGetPitMode:00000050 $d
    {standard input}:3257   .text.vtxSAGetFreq:00000000 $t
    {standard input}:3360   .text.vtxSAGetFreq:00000084 $d
    {standard input}:3369   .bss.state.12737:00000000 $d
    {standard input}:3371   .bss.len.12738:00000000 $d
    {standard input}:3377   .bss.dlen.12739:00000000 $d
    {standard input}:3383   .data.bufGetSettings.12793:00000000 $d
    {standard input}:3393   .data.buf.12800:00000000 $d
    {standard input}:3403   .bss.switchBuf.12801:00000000 $d
    {standard input}:3409   .data.buf.12817:00000000 $d
    {standard input}:3419   .data.buf.12825:00000000 $d
    {standard input}:3429   .data.buf.12829:00000000 $d
    {standard input}:3442   .bss.initPhase.12842:00000000 $d
    {standard input}:3444   .bss.lastCommandSentMs.12853:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vtxConfig_System
vtx58BandNames
vtx58ChannelNames
memcmp
saCmsResetOpmodel
saCmsUpdate
saUpdateStatusString
debugMode
debug
serialWrite
millis
findSerialPortConfig
openSerialPort
vtxCommonSetDevice
serialRead
serialRxBytesWaiting
vtx58_Bandchan2Freq
