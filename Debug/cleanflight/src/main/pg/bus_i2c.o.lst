   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "bus_i2c.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .rodata.i2cDefaultConfig,"a",%progbits
  20              	 .align 2
  23              	i2cDefaultConfig:
  24 0000 04       	 .byte 4
  25 0001 62       	 .byte 98
  26 0002 60       	 .byte 96
  27 0003 01       	 .byte 1
  28 0004 00       	 .byte 0
  29 0005 000000   	 .section .text.pgResetFn_i2cConfig,"ax",%progbits
  30              	 .align 2
  31              	 .global pgResetFn_i2cConfig
  32              	 .thumb
  33              	 .thumb_func
  35              	pgResetFn_i2cConfig:
  36              	.LFB527:
  37              	 .file 1 "../cleanflight/src/main/pg/bus_i2c.c"
   1:../cleanflight/src/main/pg/bus_i2c.c **** /*
   2:../cleanflight/src/main/pg/bus_i2c.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/pg/bus_i2c.c ****  *
   4:../cleanflight/src/main/pg/bus_i2c.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/pg/bus_i2c.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/pg/bus_i2c.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/pg/bus_i2c.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/pg/bus_i2c.c ****  * any later version.
   9:../cleanflight/src/main/pg/bus_i2c.c ****  *
  10:../cleanflight/src/main/pg/bus_i2c.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/pg/bus_i2c.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/pg/bus_i2c.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/pg/bus_i2c.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/pg/bus_i2c.c ****  *
  15:../cleanflight/src/main/pg/bus_i2c.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/pg/bus_i2c.c ****  * along with this software.
  17:../cleanflight/src/main/pg/bus_i2c.c ****  *
  18:../cleanflight/src/main/pg/bus_i2c.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/pg/bus_i2c.c ****  */
  20:../cleanflight/src/main/pg/bus_i2c.c **** 
  21:../cleanflight/src/main/pg/bus_i2c.c **** /*
  22:../cleanflight/src/main/pg/bus_i2c.c ****  * Created by jflyper
  23:../cleanflight/src/main/pg/bus_i2c.c ****  */
  24:../cleanflight/src/main/pg/bus_i2c.c **** 
  25:../cleanflight/src/main/pg/bus_i2c.c **** #include <stdbool.h>
  26:../cleanflight/src/main/pg/bus_i2c.c **** #include <stddef.h>
  27:../cleanflight/src/main/pg/bus_i2c.c **** #include <string.h>
  28:../cleanflight/src/main/pg/bus_i2c.c **** 
  29:../cleanflight/src/main/pg/bus_i2c.c **** #include "platform.h"
  30:../cleanflight/src/main/pg/bus_i2c.c **** 
  31:../cleanflight/src/main/pg/bus_i2c.c **** #if defined(USE_I2C) && !defined(SOFT_I2C)
  32:../cleanflight/src/main/pg/bus_i2c.c **** 
  33:../cleanflight/src/main/pg/bus_i2c.c **** #include "common/utils.h"
  34:../cleanflight/src/main/pg/bus_i2c.c **** 
  35:../cleanflight/src/main/pg/bus_i2c.c **** #include "drivers/io.h"
  36:../cleanflight/src/main/pg/bus_i2c.c **** 
  37:../cleanflight/src/main/pg/bus_i2c.c **** #include "pg/pg.h"
  38:../cleanflight/src/main/pg/bus_i2c.c **** #include "pg/pg_ids.h"
  39:../cleanflight/src/main/pg/bus_i2c.c **** 
  40:../cleanflight/src/main/pg/bus_i2c.c **** #include "pg/bus_i2c.h"
  41:../cleanflight/src/main/pg/bus_i2c.c **** 
  42:../cleanflight/src/main/pg/bus_i2c.c **** typedef struct i2cDefaultConfig_s {
  43:../cleanflight/src/main/pg/bus_i2c.c ****     I2CDevice device;
  44:../cleanflight/src/main/pg/bus_i2c.c ****     ioTag_t ioTagScl, ioTagSda;
  45:../cleanflight/src/main/pg/bus_i2c.c ****     bool overClock;
  46:../cleanflight/src/main/pg/bus_i2c.c ****     bool pullUp;
  47:../cleanflight/src/main/pg/bus_i2c.c **** } i2cDefaultConfig_t;
  48:../cleanflight/src/main/pg/bus_i2c.c **** 
  49:../cleanflight/src/main/pg/bus_i2c.c **** static const i2cDefaultConfig_t i2cDefaultConfig[] = {
  50:../cleanflight/src/main/pg/bus_i2c.c **** #ifdef USE_I2C_DEVICE_1
  51:../cleanflight/src/main/pg/bus_i2c.c ****     { I2CDEV_1, IO_TAG(I2C1_SCL), IO_TAG(I2C1_SDA), I2C1_OVERCLOCK, I2C1_PULLUP },
  52:../cleanflight/src/main/pg/bus_i2c.c **** #endif
  53:../cleanflight/src/main/pg/bus_i2c.c **** #ifdef USE_I2C_DEVICE_2
  54:../cleanflight/src/main/pg/bus_i2c.c ****     { I2CDEV_2, IO_TAG(I2C2_SCL), IO_TAG(I2C2_SDA), I2C2_OVERCLOCK, I2C2_PULLUP },
  55:../cleanflight/src/main/pg/bus_i2c.c **** #endif
  56:../cleanflight/src/main/pg/bus_i2c.c **** #ifdef USE_I2C_DEVICE_3
  57:../cleanflight/src/main/pg/bus_i2c.c ****     { I2CDEV_3, IO_TAG(I2C3_SCL), IO_TAG(I2C3_SDA), I2C3_OVERCLOCK, I2C3_PULLUP },
  58:../cleanflight/src/main/pg/bus_i2c.c **** #endif
  59:../cleanflight/src/main/pg/bus_i2c.c **** #ifdef USE_I2C_DEVICE_4
  60:../cleanflight/src/main/pg/bus_i2c.c ****     { I2CDEV_4, IO_TAG(I2C4_SCL), IO_TAG(I2C4_SDA), I2C4_OVERCLOCK, I2C4_PULLUP },
  61:../cleanflight/src/main/pg/bus_i2c.c **** #endif
  62:../cleanflight/src/main/pg/bus_i2c.c **** #ifdef USE_I2C_DEVICE_5
  63:../cleanflight/src/main/pg/bus_i2c.c ****     { I2CDEV_5, IO_TAG(I2C5_SCL), IO_TAG(I2C5_SDA), I2C5_OVERCLOCK, I2C5_PULLUP },
  64:../cleanflight/src/main/pg/bus_i2c.c **** #endif
  65:../cleanflight/src/main/pg/bus_i2c.c **** #ifdef USE_I2C_DEVICE_6
  66:../cleanflight/src/main/pg/bus_i2c.c ****     { I2CDEV_6, IO_TAG(I2C6_SCL), IO_TAG(I2C6_SDA), I2C6_OVERCLOCK, I2C6_PULLUP },
  67:../cleanflight/src/main/pg/bus_i2c.c **** #endif
  68:../cleanflight/src/main/pg/bus_i2c.c **** };
  69:../cleanflight/src/main/pg/bus_i2c.c **** 
  70:../cleanflight/src/main/pg/bus_i2c.c **** void pgResetFn_i2cConfig(i2cConfig_t *i2cConfig)
  71:../cleanflight/src/main/pg/bus_i2c.c **** {
  38              	 .loc 1 71 0
  39              	 .cfi_startproc
  40              	 
  41              	 
  42 0000 80B5     	 push {r7,lr}
  43              	.LCFI0:
  44              	 .cfi_def_cfa_offset 8
  45              	 .cfi_offset 7,-8
  46              	 .cfi_offset 14,-4
  47 0002 86B0     	 sub sp,sp,#24
  48              	.LCFI1:
  49              	 .cfi_def_cfa_offset 32
  50 0004 00AF     	 add r7,sp,#0
  51              	.LCFI2:
  52              	 .cfi_def_cfa_register 7
  53 0006 7860     	 str r0,[r7,#4]
  72:../cleanflight/src/main/pg/bus_i2c.c ****     memset(i2cConfig, 0, sizeof(*i2cConfig));
  54              	 .loc 1 72 0
  55 0008 7868     	 ldr r0,[r7,#4]
  56 000a 0021     	 movs r1,#0
  57 000c 0422     	 movs r2,#4
  58 000e FFF7FEFF 	 bl memset
  59              	.LBB2:
  73:../cleanflight/src/main/pg/bus_i2c.c **** 
  74:../cleanflight/src/main/pg/bus_i2c.c ****     for (size_t index = 0 ; index < ARRAYLEN(i2cDefaultConfig) ; index++) {
  60              	 .loc 1 74 0
  61 0012 0023     	 movs r3,#0
  62 0014 7B61     	 str r3,[r7,#20]
  63 0016 29E0     	 b .L2
  64              	.L3:
  65              	.LBB3:
  75:../cleanflight/src/main/pg/bus_i2c.c ****         const i2cDefaultConfig_t *defconf = &i2cDefaultConfig[index];
  66              	 .loc 1 75 0 discriminator 3
  67 0018 7A69     	 ldr r2,[r7,#20]
  68 001a 1346     	 mov r3,r2
  69 001c 9B00     	 lsls r3,r3,#2
  70 001e 1344     	 add r3,r3,r2
  71 0020 154A     	 ldr r2,.L4
  72 0022 1344     	 add r3,r3,r2
  73 0024 3B61     	 str r3,[r7,#16]
  76:../cleanflight/src/main/pg/bus_i2c.c ****         int device = defconf->device;
  74              	 .loc 1 76 0 discriminator 3
  75 0026 3B69     	 ldr r3,[r7,#16]
  76 0028 1B78     	 ldrb r3,[r3]
  77 002a 5BB2     	 sxtb r3,r3
  78 002c FB60     	 str r3,[r7,#12]
  77:../cleanflight/src/main/pg/bus_i2c.c ****         i2cConfig[device].ioTagScl = defconf->ioTagScl;
  79              	 .loc 1 77 0 discriminator 3
  80 002e FB68     	 ldr r3,[r7,#12]
  81 0030 9B00     	 lsls r3,r3,#2
  82 0032 7A68     	 ldr r2,[r7,#4]
  83 0034 1344     	 add r3,r3,r2
  84 0036 3A69     	 ldr r2,[r7,#16]
  85 0038 5278     	 ldrb r2,[r2,#1]
  86 003a 1A70     	 strb r2,[r3]
  78:../cleanflight/src/main/pg/bus_i2c.c ****         i2cConfig[device].ioTagSda = defconf->ioTagSda;
  87              	 .loc 1 78 0 discriminator 3
  88 003c FB68     	 ldr r3,[r7,#12]
  89 003e 9B00     	 lsls r3,r3,#2
  90 0040 7A68     	 ldr r2,[r7,#4]
  91 0042 1344     	 add r3,r3,r2
  92 0044 3A69     	 ldr r2,[r7,#16]
  93 0046 9278     	 ldrb r2,[r2,#2]
  94 0048 5A70     	 strb r2,[r3,#1]
  79:../cleanflight/src/main/pg/bus_i2c.c ****         i2cConfig[device].overClock = defconf->overClock;
  95              	 .loc 1 79 0 discriminator 3
  96 004a FB68     	 ldr r3,[r7,#12]
  97 004c 9B00     	 lsls r3,r3,#2
  98 004e 7A68     	 ldr r2,[r7,#4]
  99 0050 1344     	 add r3,r3,r2
 100 0052 3A69     	 ldr r2,[r7,#16]
 101 0054 D278     	 ldrb r2,[r2,#3]
 102 0056 9A70     	 strb r2,[r3,#2]
  80:../cleanflight/src/main/pg/bus_i2c.c ****         i2cConfig[device].pullUp = defconf->pullUp;
 103              	 .loc 1 80 0 discriminator 3
 104 0058 FB68     	 ldr r3,[r7,#12]
 105 005a 9B00     	 lsls r3,r3,#2
 106 005c 7A68     	 ldr r2,[r7,#4]
 107 005e 1344     	 add r3,r3,r2
 108 0060 3A69     	 ldr r2,[r7,#16]
 109 0062 1279     	 ldrb r2,[r2,#4]
 110 0064 DA70     	 strb r2,[r3,#3]
 111              	.LBE3:
  74:../cleanflight/src/main/pg/bus_i2c.c ****         const i2cDefaultConfig_t *defconf = &i2cDefaultConfig[index];
 112              	 .loc 1 74 0 discriminator 3
 113 0066 7B69     	 ldr r3,[r7,#20]
 114 0068 0133     	 adds r3,r3,#1
 115 006a 7B61     	 str r3,[r7,#20]
 116              	.L2:
  74:../cleanflight/src/main/pg/bus_i2c.c ****         const i2cDefaultConfig_t *defconf = &i2cDefaultConfig[index];
 117              	 .loc 1 74 0 is_stmt 0 discriminator 1
 118 006c 7B69     	 ldr r3,[r7,#20]
 119 006e 002B     	 cmp r3,#0
 120 0070 D2D0     	 beq .L3
 121              	.LBE2:
  81:../cleanflight/src/main/pg/bus_i2c.c ****     }
  82:../cleanflight/src/main/pg/bus_i2c.c **** }
 122              	 .loc 1 82 0 is_stmt 1
 123 0072 1837     	 adds r7,r7,#24
 124              	.LCFI3:
 125              	 .cfi_def_cfa_offset 8
 126 0074 BD46     	 mov sp,r7
 127              	.LCFI4:
 128              	 .cfi_def_cfa_register 13
 129              	 
 130 0076 80BD     	 pop {r7,pc}
 131              	.L5:
 132              	 .align 2
 133              	.L4:
 134 0078 00000000 	 .word i2cDefaultConfig
 135              	 .cfi_endproc
 136              	.LFE527:
 138              	 .comm i2cConfig_SystemArray,24,4
 139              	 .comm i2cConfig_CopyArray,24,4
 140              	 .global i2cConfig_Registry
 141              	 .section .pg_registry,"a",%progbits
 142              	 .align 2
 145              	i2cConfig_Registry:
 146 0000 0602     	 .short 518
 147 0002 1800     	 .short 24
 148 0004 00000000 	 .word i2cConfig_SystemArray
 149 0008 00000000 	 .word i2cConfig_CopyArray
 150 000c 00000000 	 .word 0
 151 0010 00000000 	 .word pgResetFn_i2cConfig
 152              	 .text
 153              	.Letext0:
 154              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\lib\\gcc\\arm-none-eabi\\4.9.3\\include\\stddef.h"
 155              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 156              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 157              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 158              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 159              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pg.h"
 160              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 161              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 162              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/bus_i2c.h"
 163              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 164              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 bus_i2c.c
    {standard input}:20     .rodata.i2cDefaultConfig:00000000 $d
    {standard input}:23     .rodata.i2cDefaultConfig:00000000 i2cDefaultConfig
    {standard input}:30     .text.pgResetFn_i2cConfig:00000000 $t
    {standard input}:35     .text.pgResetFn_i2cConfig:00000000 pgResetFn_i2cConfig
    {standard input}:134    .text.pgResetFn_i2cConfig:00000078 $d
                            *COM*:00000018 i2cConfig_SystemArray
                            *COM*:00000018 i2cConfig_CopyArray
    {standard input}:145    .pg_registry:00000000 i2cConfig_Registry
    {standard input}:142    .pg_registry:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
