   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.pwmReadRawRC,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	pwmReadRawRC:
  25              	.LFB541:
  26              	 .file 1 "../cleanflight/src/main/rx/pwm.c"
   1:../cleanflight/src/main/rx/pwm.c **** /*
   2:../cleanflight/src/main/rx/pwm.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/rx/pwm.c ****  *
   4:../cleanflight/src/main/rx/pwm.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/rx/pwm.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/rx/pwm.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/rx/pwm.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/rx/pwm.c ****  * any later version.
   9:../cleanflight/src/main/rx/pwm.c ****  *
  10:../cleanflight/src/main/rx/pwm.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/rx/pwm.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/rx/pwm.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/rx/pwm.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/rx/pwm.c ****  *
  15:../cleanflight/src/main/rx/pwm.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/rx/pwm.c ****  * along with this software.
  17:../cleanflight/src/main/rx/pwm.c ****  *
  18:../cleanflight/src/main/rx/pwm.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/rx/pwm.c ****  */
  20:../cleanflight/src/main/rx/pwm.c **** 
  21:../cleanflight/src/main/rx/pwm.c **** #include <stdbool.h>
  22:../cleanflight/src/main/rx/pwm.c **** #include <stdint.h>
  23:../cleanflight/src/main/rx/pwm.c **** #include <stdlib.h>
  24:../cleanflight/src/main/rx/pwm.c **** 
  25:../cleanflight/src/main/rx/pwm.c **** #include <string.h>
  26:../cleanflight/src/main/rx/pwm.c **** 
  27:../cleanflight/src/main/rx/pwm.c **** #include "platform.h"
  28:../cleanflight/src/main/rx/pwm.c **** 
  29:../cleanflight/src/main/rx/pwm.c **** #if defined(USE_PWM) || defined(USE_PPM)
  30:../cleanflight/src/main/rx/pwm.c **** 
  31:../cleanflight/src/main/rx/pwm.c **** #include "common/utils.h"
  32:../cleanflight/src/main/rx/pwm.c **** 
  33:../cleanflight/src/main/rx/pwm.c **** #include "config/feature.h"
  34:../cleanflight/src/main/rx/pwm.c **** 
  35:../cleanflight/src/main/rx/pwm.c **** #include "pg/rx.h"
  36:../cleanflight/src/main/rx/pwm.c **** 
  37:../cleanflight/src/main/rx/pwm.c **** #include "drivers/rx/rx_pwm.h"
  38:../cleanflight/src/main/rx/pwm.c **** 
  39:../cleanflight/src/main/rx/pwm.c **** #include "fc/config.h"
  40:../cleanflight/src/main/rx/pwm.c **** 
  41:../cleanflight/src/main/rx/pwm.c **** #include "rx/rx.h"
  42:../cleanflight/src/main/rx/pwm.c **** #include "rx/pwm.h"
  43:../cleanflight/src/main/rx/pwm.c **** 
  44:../cleanflight/src/main/rx/pwm.c **** static uint16_t pwmReadRawRC(const rxRuntimeConfig_t *rxRuntimeConfig, uint8_t channel)
  45:../cleanflight/src/main/rx/pwm.c **** {
  27              	 .loc 1 45 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31 0000 80B5     	 push {r7,lr}
  32              	.LCFI0:
  33              	 .cfi_def_cfa_offset 8
  34              	 .cfi_offset 7,-8
  35              	 .cfi_offset 14,-4
  36 0002 82B0     	 sub sp,sp,#8
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
  46:../cleanflight/src/main/rx/pwm.c ****     UNUSED(rxRuntimeConfig);
  47:../cleanflight/src/main/rx/pwm.c ****     return pwmRead(channel);
  45              	 .loc 1 47 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 1846     	 mov r0,r3
  48 0010 FFF7FEFF 	 bl pwmRead
  49 0014 0346     	 mov r3,r0
  48:../cleanflight/src/main/rx/pwm.c **** }
  50              	 .loc 1 48 0
  51 0016 1846     	 mov r0,r3
  52 0018 0837     	 adds r7,r7,#8
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 8
  55 001a BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001c 80BD     	 pop {r7,pc}
  60              	 .cfi_endproc
  61              	.LFE541:
  63 001e 00BF     	 .section .text.ppmReadRawRC,"ax",%progbits
  64              	 .align 2
  65              	 .thumb
  66              	 .thumb_func
  68              	ppmReadRawRC:
  69              	.LFB542:
  49:../cleanflight/src/main/rx/pwm.c **** 
  50:../cleanflight/src/main/rx/pwm.c **** static uint16_t ppmReadRawRC(const rxRuntimeConfig_t *rxRuntimeConfig, uint8_t channel)
  51:../cleanflight/src/main/rx/pwm.c **** {
  70              	 .loc 1 51 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74 0000 80B5     	 push {r7,lr}
  75              	.LCFI5:
  76              	 .cfi_def_cfa_offset 8
  77              	 .cfi_offset 7,-8
  78              	 .cfi_offset 14,-4
  79 0002 82B0     	 sub sp,sp,#8
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 16
  82 0004 00AF     	 add r7,sp,#0
  83              	.LCFI7:
  84              	 .cfi_def_cfa_register 7
  85 0006 7860     	 str r0,[r7,#4]
  86 0008 0B46     	 mov r3,r1
  87 000a FB70     	 strb r3,[r7,#3]
  52:../cleanflight/src/main/rx/pwm.c ****     UNUSED(rxRuntimeConfig);
  53:../cleanflight/src/main/rx/pwm.c ****     return ppmRead(channel);
  88              	 .loc 1 53 0
  89 000c FB78     	 ldrb r3,[r7,#3]
  90 000e 1846     	 mov r0,r3
  91 0010 FFF7FEFF 	 bl ppmRead
  92 0014 0346     	 mov r3,r0
  54:../cleanflight/src/main/rx/pwm.c **** }
  93              	 .loc 1 54 0
  94 0016 1846     	 mov r0,r3
  95 0018 0837     	 adds r7,r7,#8
  96              	.LCFI8:
  97              	 .cfi_def_cfa_offset 8
  98 001a BD46     	 mov sp,r7
  99              	.LCFI9:
 100              	 .cfi_def_cfa_register 13
 101              	 
 102 001c 80BD     	 pop {r7,pc}
 103              	 .cfi_endproc
 104              	.LFE542:
 106 001e 00BF     	 .section .text.rxPwmInit,"ax",%progbits
 107              	 .align 2
 108              	 .global rxPwmInit
 109              	 .thumb
 110              	 .thumb_func
 112              	rxPwmInit:
 113              	.LFB543:
  55:../cleanflight/src/main/rx/pwm.c **** 
  56:../cleanflight/src/main/rx/pwm.c **** void rxPwmInit(const rxConfig_t *rxConfig, rxRuntimeConfig_t *rxRuntimeConfig)
  57:../cleanflight/src/main/rx/pwm.c **** {
 114              	 .loc 1 57 0
 115              	 .cfi_startproc
 116              	 
 117              	 
 118 0000 80B5     	 push {r7,lr}
 119              	.LCFI10:
 120              	 .cfi_def_cfa_offset 8
 121              	 .cfi_offset 7,-8
 122              	 .cfi_offset 14,-4
 123 0002 82B0     	 sub sp,sp,#8
 124              	.LCFI11:
 125              	 .cfi_def_cfa_offset 16
 126 0004 00AF     	 add r7,sp,#0
 127              	.LCFI12:
 128              	 .cfi_def_cfa_register 7
 129 0006 7860     	 str r0,[r7,#4]
 130 0008 3960     	 str r1,[r7]
  58:../cleanflight/src/main/rx/pwm.c ****     UNUSED(rxConfig);
  59:../cleanflight/src/main/rx/pwm.c **** 
  60:../cleanflight/src/main/rx/pwm.c ****     rxRuntimeConfig->rxRefreshRate = 20000;
 131              	 .loc 1 60 0
 132 000a 3B68     	 ldr r3,[r7]
 133 000c 0022     	 movs r2,#0
 134 000e 42F02002 	 orr r2,r2,#32
 135 0012 5A70     	 strb r2,[r3,#1]
 136 0014 0022     	 movs r2,#0
 137 0016 42F04E02 	 orr r2,r2,#78
 138 001a 9A70     	 strb r2,[r3,#2]
  61:../cleanflight/src/main/rx/pwm.c **** 
  62:../cleanflight/src/main/rx/pwm.c ****     // configure PWM/CPPM read function and max number of channels. serial rx below will override b
  63:../cleanflight/src/main/rx/pwm.c ****     if (feature(FEATURE_RX_PARALLEL_PWM)) {
 139              	 .loc 1 63 0
 140 001c 4FF40050 	 mov r0,#8192
 141 0020 FFF7FEFF 	 bl feature
 142 0024 0346     	 mov r3,r0
 143 0026 002B     	 cmp r3,#0
 144 0028 07D0     	 beq .L6
  64:../cleanflight/src/main/rx/pwm.c ****         rxRuntimeConfig->channelCount = MAX_SUPPORTED_RC_PARALLEL_PWM_CHANNEL_COUNT;
 145              	 .loc 1 64 0
 146 002a 3B68     	 ldr r3,[r7]
 147 002c 0822     	 movs r2,#8
 148 002e 1A70     	 strb r2,[r3]
  65:../cleanflight/src/main/rx/pwm.c ****         rxRuntimeConfig->rcReadRawFn = pwmReadRawRC;
 149              	 .loc 1 65 0
 150 0030 3B68     	 ldr r3,[r7]
 151 0032 0A4A     	 ldr r2,.L8
 152 0034 C3F80320 	 str r2,[r3,#3]
 153 0038 0CE0     	 b .L5
 154              	.L6:
  66:../cleanflight/src/main/rx/pwm.c ****     } else if (feature(FEATURE_RX_PPM)) {
 155              	 .loc 1 66 0
 156 003a 0120     	 movs r0,#1
 157 003c FFF7FEFF 	 bl feature
 158 0040 0346     	 mov r3,r0
 159 0042 002B     	 cmp r3,#0
 160 0044 06D0     	 beq .L5
  67:../cleanflight/src/main/rx/pwm.c ****         rxRuntimeConfig->channelCount = MAX_SUPPORTED_RC_PPM_CHANNEL_COUNT;
 161              	 .loc 1 67 0
 162 0046 3B68     	 ldr r3,[r7]
 163 0048 0C22     	 movs r2,#12
 164 004a 1A70     	 strb r2,[r3]
  68:../cleanflight/src/main/rx/pwm.c ****         rxRuntimeConfig->rcReadRawFn = ppmReadRawRC;
 165              	 .loc 1 68 0
 166 004c 3B68     	 ldr r3,[r7]
 167 004e 044A     	 ldr r2,.L8+4
 168 0050 C3F80320 	 str r2,[r3,#3]
 169              	.L5:
  69:../cleanflight/src/main/rx/pwm.c ****     }
  70:../cleanflight/src/main/rx/pwm.c **** }
 170              	 .loc 1 70 0
 171 0054 0837     	 adds r7,r7,#8
 172              	.LCFI13:
 173              	 .cfi_def_cfa_offset 8
 174 0056 BD46     	 mov sp,r7
 175              	.LCFI14:
 176              	 .cfi_def_cfa_register 13
 177              	 
 178 0058 80BD     	 pop {r7,pc}
 179              	.L9:
 180 005a 00BF     	 .align 2
 181              	.L8:
 182 005c 00000000 	 .word pwmReadRawRC
 183 0060 00000000 	 .word ppmReadRawRC
 184              	 .cfi_endproc
 185              	.LFE543:
 187              	 .text
 188              	.Letext0:
 189              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 190              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 191              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 192              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 193              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx.h"
 194              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 195              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 196              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/rx/rx.h"
 197              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 198              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm.c
    {standard input}:20     .text.pwmReadRawRC:00000000 $t
    {standard input}:24     .text.pwmReadRawRC:00000000 pwmReadRawRC
    {standard input}:64     .text.ppmReadRawRC:00000000 $t
    {standard input}:68     .text.ppmReadRawRC:00000000 ppmReadRawRC
    {standard input}:107    .text.rxPwmInit:00000000 $t
    {standard input}:112    .text.rxPwmInit:00000000 rxPwmInit
    {standard input}:182    .text.rxPwmInit:0000005c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
pwmRead
ppmRead
feature
