   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xbus.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.xBusFrameReceived,"aw",%nobits
  22              	xBusFrameReceived:
  23 0000 00       	 .space 1
  24              	 .section .bss.xBusDataIncoming,"aw",%nobits
  27              	xBusDataIncoming:
  28 0000 00       	 .space 1
  29              	 .section .bss.xBusFramePosition,"aw",%nobits
  32              	xBusFramePosition:
  33 0000 00       	 .space 1
  34              	 .section .bss.xBusFrameLength,"aw",%nobits
  37              	xBusFrameLength:
  38 0000 00       	 .space 1
  39              	 .section .bss.xBusChannelCount,"aw",%nobits
  42              	xBusChannelCount:
  43 0000 00       	 .space 1
  44              	 .section .bss.xBusProvider,"aw",%nobits
  47              	xBusProvider:
  48 0000 00       	 .space 1
  49              	 .section .bss.xBusFrame,"aw",%nobits
  50              	 .align 2
  53              	xBusFrame:
  54 0000 00000000 	 .space 35
  54      00000000 
  54      00000000 
  54      00000000 
  54      00000000 
  55 0023 00       	 .section .bss.xBusChannelData,"aw",%nobits
  56              	 .align 2
  59              	xBusChannelData:
  60 0000 00000000 	 .space 24
  60      00000000 
  60      00000000 
  60      00000000 
  60      00000000 
  61              	 .section .text.xBusRj01CRC8,"ax",%progbits
  62              	 .align 2
  63              	 .thumb
  64              	 .thumb_func
  66              	xBusRj01CRC8:
  67              	.LFB539:
  68              	 .file 1 "../cleanflight/src/main/rx/xbus.c"
   1:../cleanflight/src/main/rx/xbus.c **** /*
   2:../cleanflight/src/main/rx/xbus.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/rx/xbus.c ****  *
   4:../cleanflight/src/main/rx/xbus.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/rx/xbus.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/rx/xbus.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/rx/xbus.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/rx/xbus.c ****  * any later version.
   9:../cleanflight/src/main/rx/xbus.c ****  *
  10:../cleanflight/src/main/rx/xbus.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/rx/xbus.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/rx/xbus.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/rx/xbus.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/rx/xbus.c ****  *
  15:../cleanflight/src/main/rx/xbus.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/rx/xbus.c ****  * along with this software.
  17:../cleanflight/src/main/rx/xbus.c ****  *
  18:../cleanflight/src/main/rx/xbus.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/rx/xbus.c ****  */
  20:../cleanflight/src/main/rx/xbus.c **** 
  21:../cleanflight/src/main/rx/xbus.c **** #include <stdbool.h>
  22:../cleanflight/src/main/rx/xbus.c **** #include <stdint.h>
  23:../cleanflight/src/main/rx/xbus.c **** #include <stdlib.h>
  24:../cleanflight/src/main/rx/xbus.c **** 
  25:../cleanflight/src/main/rx/xbus.c **** #include "platform.h"
  26:../cleanflight/src/main/rx/xbus.c **** 
  27:../cleanflight/src/main/rx/xbus.c **** #if defined(USE_SERIAL_RX) && defined(USE_SERIALRX_XBUS)
  28:../cleanflight/src/main/rx/xbus.c **** 
  29:../cleanflight/src/main/rx/xbus.c **** #include "common/crc.h"
  30:../cleanflight/src/main/rx/xbus.c **** 
  31:../cleanflight/src/main/rx/xbus.c **** #include "drivers/time.h"
  32:../cleanflight/src/main/rx/xbus.c **** 
  33:../cleanflight/src/main/rx/xbus.c **** #include "io/serial.h"
  34:../cleanflight/src/main/rx/xbus.c **** 
  35:../cleanflight/src/main/rx/xbus.c **** #ifdef USE_TELEMETRY
  36:../cleanflight/src/main/rx/xbus.c **** #include "telemetry/telemetry.h"
  37:../cleanflight/src/main/rx/xbus.c **** #endif
  38:../cleanflight/src/main/rx/xbus.c **** 
  39:../cleanflight/src/main/rx/xbus.c **** #include "pg/rx.h"
  40:../cleanflight/src/main/rx/xbus.c **** 
  41:../cleanflight/src/main/rx/xbus.c **** #include "rx/rx.h"
  42:../cleanflight/src/main/rx/xbus.c **** #include "rx/xbus.h"
  43:../cleanflight/src/main/rx/xbus.c **** 
  44:../cleanflight/src/main/rx/xbus.c **** //
  45:../cleanflight/src/main/rx/xbus.c **** // Serial driver for JR's XBus (MODE B) receiver
  46:../cleanflight/src/main/rx/xbus.c **** //
  47:../cleanflight/src/main/rx/xbus.c **** 
  48:../cleanflight/src/main/rx/xbus.c **** #define XBUS_CHANNEL_COUNT 12
  49:../cleanflight/src/main/rx/xbus.c **** #define XBUS_RJ01_CHANNEL_COUNT 12
  50:../cleanflight/src/main/rx/xbus.c **** 
  51:../cleanflight/src/main/rx/xbus.c **** // Frame is: ID(1 byte) + 12*channel(2 bytes) + CRC(2 bytes) = 27
  52:../cleanflight/src/main/rx/xbus.c **** #define XBUS_FRAME_SIZE_A1 27
  53:../cleanflight/src/main/rx/xbus.c **** #define XBUS_FRAME_SIZE_A2 35
  54:../cleanflight/src/main/rx/xbus.c **** 
  55:../cleanflight/src/main/rx/xbus.c **** 
  56:../cleanflight/src/main/rx/xbus.c **** #define XBUS_RJ01_FRAME_SIZE 33
  57:../cleanflight/src/main/rx/xbus.c **** #define XBUS_RJ01_MESSAGE_LENGTH 30
  58:../cleanflight/src/main/rx/xbus.c **** #define XBUS_RJ01_OFFSET_BYTES 3
  59:../cleanflight/src/main/rx/xbus.c **** 
  60:../cleanflight/src/main/rx/xbus.c **** #define XBUS_BAUDRATE 115200
  61:../cleanflight/src/main/rx/xbus.c **** #define XBUS_RJ01_BAUDRATE 250000
  62:../cleanflight/src/main/rx/xbus.c **** #define XBUS_MAX_FRAME_TIME 8000
  63:../cleanflight/src/main/rx/xbus.c **** 
  64:../cleanflight/src/main/rx/xbus.c **** // NOTE!
  65:../cleanflight/src/main/rx/xbus.c **** // This is actually based on ID+LENGTH (nibble each)
  66:../cleanflight/src/main/rx/xbus.c **** // 0xA - Multiplex ID (also used by JR, no idea why)
  67:../cleanflight/src/main/rx/xbus.c **** // 0x1 - 12 channels
  68:../cleanflight/src/main/rx/xbus.c **** // 0x2 - 16 channels
  69:../cleanflight/src/main/rx/xbus.c **** // However, the JR XG14 that is used for test at the moment
  70:../cleanflight/src/main/rx/xbus.c **** // does only use 0xA1 as its output. This is why the implementation
  71:../cleanflight/src/main/rx/xbus.c **** // is based on these numbers only. Maybe update this in the future?
  72:../cleanflight/src/main/rx/xbus.c **** #define XBUS_START_OF_FRAME_BYTE_A1 (0xA1)      //12 channels
  73:../cleanflight/src/main/rx/xbus.c **** #define XBUS_START_OF_FRAME_BYTE_A2 (0xA2)      //16 channels transfare, but only 12 channels use f
  74:../cleanflight/src/main/rx/xbus.c **** 
  75:../cleanflight/src/main/rx/xbus.c **** // Pulse length convertion from [0...4095] to µs:
  76:../cleanflight/src/main/rx/xbus.c **** //      800µs  -> 0x000
  77:../cleanflight/src/main/rx/xbus.c **** //      1500µs -> 0x800
  78:../cleanflight/src/main/rx/xbus.c **** //      2200µs -> 0xFFF
  79:../cleanflight/src/main/rx/xbus.c **** // Total range is: 2200 - 800 = 1400 <==> 4095
  80:../cleanflight/src/main/rx/xbus.c **** // Use formula: 800 + value * 1400 / 4096 (i.e. a shift by 12)
  81:../cleanflight/src/main/rx/xbus.c **** #define XBUS_CONVERT_TO_USEC(V) (800 + ((V * 1400) >> 12))
  82:../cleanflight/src/main/rx/xbus.c **** 
  83:../cleanflight/src/main/rx/xbus.c **** static bool xBusFrameReceived = false;
  84:../cleanflight/src/main/rx/xbus.c **** static bool xBusDataIncoming = false;
  85:../cleanflight/src/main/rx/xbus.c **** static uint8_t xBusFramePosition;
  86:../cleanflight/src/main/rx/xbus.c **** static uint8_t xBusFrameLength;
  87:../cleanflight/src/main/rx/xbus.c **** static uint8_t xBusChannelCount;
  88:../cleanflight/src/main/rx/xbus.c **** static uint8_t xBusProvider;
  89:../cleanflight/src/main/rx/xbus.c **** 
  90:../cleanflight/src/main/rx/xbus.c **** 
  91:../cleanflight/src/main/rx/xbus.c **** // Use max values for ram areas
  92:../cleanflight/src/main/rx/xbus.c **** static volatile uint8_t xBusFrame[XBUS_FRAME_SIZE_A2];  //size 35 for 16 channels in xbus_Mode_B
  93:../cleanflight/src/main/rx/xbus.c **** static uint16_t xBusChannelData[XBUS_RJ01_CHANNEL_COUNT];
  94:../cleanflight/src/main/rx/xbus.c **** 
  95:../cleanflight/src/main/rx/xbus.c **** // Full RJ01 message CRC calculations
  96:../cleanflight/src/main/rx/xbus.c **** static uint8_t xBusRj01CRC8(uint8_t inData, uint8_t seed)
  97:../cleanflight/src/main/rx/xbus.c **** {
  69              	 .loc 1 97 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73              	 
  74 0000 80B4     	 push {r7}
  75              	.LCFI0:
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 85B0     	 sub sp,sp,#20
  79              	.LCFI1:
  80              	 .cfi_def_cfa_offset 24
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI2:
  83              	 .cfi_def_cfa_register 7
  84 0006 0346     	 mov r3,r0
  85 0008 0A46     	 mov r2,r1
  86 000a FB71     	 strb r3,[r7,#7]
  87 000c 1346     	 mov r3,r2
  88 000e BB71     	 strb r3,[r7,#6]
  89              	.LBB2:
  98:../cleanflight/src/main/rx/xbus.c ****     for (uint8_t bitsLeft = 8; bitsLeft > 0; bitsLeft--) {
  90              	 .loc 1 98 0
  91 0010 0823     	 movs r3,#8
  92 0012 FB73     	 strb r3,[r7,#15]
  93 0014 1EE0     	 b .L2
  94              	.L5:
  95              	.LBB3:
  99:../cleanflight/src/main/rx/xbus.c ****         const uint8_t temp = ((seed ^ inData) & 0x01);
  96              	 .loc 1 99 0
  97 0016 BA79     	 ldrb r2,[r7,#6]
  98 0018 FB79     	 ldrb r3,[r7,#7]
  99 001a 5340     	 eors r3,r3,r2
 100 001c DBB2     	 uxtb r3,r3
 101 001e 03F00103 	 and r3,r3,#1
 102 0022 BB73     	 strb r3,[r7,#14]
 100:../cleanflight/src/main/rx/xbus.c **** 
 101:../cleanflight/src/main/rx/xbus.c ****         if (temp == 0) {
 103              	 .loc 1 101 0
 104 0024 BB7B     	 ldrb r3,[r7,#14]
 105 0026 002B     	 cmp r3,#0
 106 0028 03D1     	 bne .L3
 102:../cleanflight/src/main/rx/xbus.c ****             seed >>= 1;
 107              	 .loc 1 102 0
 108 002a BB79     	 ldrb r3,[r7,#6]
 109 002c 5B08     	 lsrs r3,r3,#1
 110 002e BB71     	 strb r3,[r7,#6]
 111 0030 0AE0     	 b .L4
 112              	.L3:
 103:../cleanflight/src/main/rx/xbus.c ****         } else {
 104:../cleanflight/src/main/rx/xbus.c ****             seed ^= 0x18;
 113              	 .loc 1 104 0
 114 0032 BB79     	 ldrb r3,[r7,#6]
 115 0034 83F01803 	 eor r3,r3,#24
 116 0038 BB71     	 strb r3,[r7,#6]
 105:../cleanflight/src/main/rx/xbus.c ****             seed >>= 1;
 117              	 .loc 1 105 0
 118 003a BB79     	 ldrb r3,[r7,#6]
 119 003c 5B08     	 lsrs r3,r3,#1
 120 003e BB71     	 strb r3,[r7,#6]
 106:../cleanflight/src/main/rx/xbus.c ****             seed |= 0x80;
 121              	 .loc 1 106 0
 122 0040 BB79     	 ldrb r3,[r7,#6]
 123 0042 63F07F03 	 orn r3,r3,#127
 124 0046 BB71     	 strb r3,[r7,#6]
 125              	.L4:
 107:../cleanflight/src/main/rx/xbus.c ****         }
 108:../cleanflight/src/main/rx/xbus.c **** 
 109:../cleanflight/src/main/rx/xbus.c ****         inData >>= 1;
 126              	 .loc 1 109 0 discriminator 2
 127 0048 FB79     	 ldrb r3,[r7,#7]
 128 004a 5B08     	 lsrs r3,r3,#1
 129 004c FB71     	 strb r3,[r7,#7]
 130              	.LBE3:
  98:../cleanflight/src/main/rx/xbus.c ****         const uint8_t temp = ((seed ^ inData) & 0x01);
 131              	 .loc 1 98 0 discriminator 2
 132 004e FB7B     	 ldrb r3,[r7,#15]
 133 0050 013B     	 subs r3,r3,#1
 134 0052 FB73     	 strb r3,[r7,#15]
 135              	.L2:
  98:../cleanflight/src/main/rx/xbus.c ****         const uint8_t temp = ((seed ^ inData) & 0x01);
 136              	 .loc 1 98 0 is_stmt 0 discriminator 1
 137 0054 FB7B     	 ldrb r3,[r7,#15]
 138 0056 002B     	 cmp r3,#0
 139 0058 DDD1     	 bne .L5
 140              	.LBE2:
 110:../cleanflight/src/main/rx/xbus.c ****     }
 111:../cleanflight/src/main/rx/xbus.c **** 
 112:../cleanflight/src/main/rx/xbus.c ****     return seed;
 141              	 .loc 1 112 0 is_stmt 1
 142 005a BB79     	 ldrb r3,[r7,#6]
 113:../cleanflight/src/main/rx/xbus.c **** }
 143              	 .loc 1 113 0
 144 005c 1846     	 mov r0,r3
 145 005e 1437     	 adds r7,r7,#20
 146              	.LCFI3:
 147              	 .cfi_def_cfa_offset 4
 148 0060 BD46     	 mov sp,r7
 149              	.LCFI4:
 150              	 .cfi_def_cfa_register 13
 151              	 
 152 0062 5DF8047B 	 ldr r7,[sp],#4
 153              	.LCFI5:
 154              	 .cfi_restore 7
 155              	 .cfi_def_cfa_offset 0
 156 0066 7047     	 bx lr
 157              	 .cfi_endproc
 158              	.LFE539:
 160              	 .section .text.xBusUnpackModeBFrame,"ax",%progbits
 161              	 .align 2
 162              	 .thumb
 163              	 .thumb_func
 165              	xBusUnpackModeBFrame:
 166              	.LFB540:
 114:../cleanflight/src/main/rx/xbus.c **** 
 115:../cleanflight/src/main/rx/xbus.c **** 
 116:../cleanflight/src/main/rx/xbus.c **** static void xBusUnpackModeBFrame(uint8_t offsetBytes)
 117:../cleanflight/src/main/rx/xbus.c **** {
 167              	 .loc 1 117 0
 168              	 .cfi_startproc
 169              	 
 170              	 
 171 0000 80B5     	 push {r7,lr}
 172              	.LCFI6:
 173              	 .cfi_def_cfa_offset 8
 174              	 .cfi_offset 7,-8
 175              	 .cfi_offset 14,-4
 176 0002 86B0     	 sub sp,sp,#24
 177              	.LCFI7:
 178              	 .cfi_def_cfa_offset 32
 179 0004 00AF     	 add r7,sp,#0
 180              	.LCFI8:
 181              	 .cfi_def_cfa_register 7
 182 0006 0346     	 mov r3,r0
 183 0008 FB71     	 strb r3,[r7,#7]
 118:../cleanflight/src/main/rx/xbus.c ****     // Calculate the CRC of the incoming frame
 119:../cleanflight/src/main/rx/xbus.c ****     // Calculate on all bytes except the final two CRC bytes
 120:../cleanflight/src/main/rx/xbus.c ****     const uint16_t inCrc = crc16_ccitt_update(0, (uint8_t*)&xBusFrame[offsetBytes], xBusFrameLength
 184              	 .loc 1 120 0
 185 000a FB79     	 ldrb r3,[r7,#7]
 186 000c 2F4A     	 ldr r2,.L11
 187 000e 1A44     	 add r2,r2,r3
 188 0010 2F4B     	 ldr r3,.L11+4
 189 0012 1B78     	 ldrb r3,[r3]
 190 0014 023B     	 subs r3,r3,#2
 191 0016 0020     	 movs r0,#0
 192 0018 1146     	 mov r1,r2
 193 001a 1A46     	 mov r2,r3
 194 001c FFF7FEFF 	 bl crc16_ccitt_update
 195 0020 0346     	 mov r3,r0
 196 0022 7B82     	 strh r3,[r7,#18]
 121:../cleanflight/src/main/rx/xbus.c **** 
 122:../cleanflight/src/main/rx/xbus.c ****     // Get the received CRC
 123:../cleanflight/src/main/rx/xbus.c ****     const uint16_t crc = (((uint16_t)xBusFrame[offsetBytes + xBusFrameLength - 2]) << 8) + ((uint16
 197              	 .loc 1 123 0
 198 0024 FB79     	 ldrb r3,[r7,#7]
 199 0026 2A4A     	 ldr r2,.L11+4
 200 0028 1278     	 ldrb r2,[r2]
 201 002a 1344     	 add r3,r3,r2
 202 002c 023B     	 subs r3,r3,#2
 203 002e 274A     	 ldr r2,.L11
 204 0030 D35C     	 ldrb r3,[r2,r3]
 205 0032 DBB2     	 uxtb r3,r3
 206 0034 9BB2     	 uxth r3,r3
 207 0036 1B02     	 lsls r3,r3,#8
 208 0038 9AB2     	 uxth r2,r3
 209 003a FB79     	 ldrb r3,[r7,#7]
 210 003c 2449     	 ldr r1,.L11+4
 211 003e 0978     	 ldrb r1,[r1]
 212 0040 0B44     	 add r3,r3,r1
 213 0042 013B     	 subs r3,r3,#1
 214 0044 2149     	 ldr r1,.L11
 215 0046 CB5C     	 ldrb r3,[r1,r3]
 216 0048 DBB2     	 uxtb r3,r3
 217 004a 9BB2     	 uxth r3,r3
 218 004c 1344     	 add r3,r3,r2
 219 004e 3B82     	 strh r3,[r7,#16]
 124:../cleanflight/src/main/rx/xbus.c **** 
 125:../cleanflight/src/main/rx/xbus.c ****     if (crc == inCrc) {
 220              	 .loc 1 125 0
 221 0050 3A8A     	 ldrh r2,[r7,#16]
 222 0052 7B8A     	 ldrh r3,[r7,#18]
 223 0054 9A42     	 cmp r2,r3
 224 0056 35D1     	 bne .L7
 225              	.LBB4:
 126:../cleanflight/src/main/rx/xbus.c ****         // Unpack the data, we have a valid frame, only 12 channel unpack also when receive 16 chan
 127:../cleanflight/src/main/rx/xbus.c ****         for (int i = 0; i < xBusChannelCount; i++) {
 226              	 .loc 1 127 0
 227 0058 0023     	 movs r3,#0
 228 005a 7B61     	 str r3,[r7,#20]
 229 005c 29E0     	 b .L9
 230              	.L10:
 231              	.LBB5:
 128:../cleanflight/src/main/rx/xbus.c **** 
 129:../cleanflight/src/main/rx/xbus.c ****             const uint8_t frameAddr = offsetBytes + 1 + i * 2;
 232              	 .loc 1 129 0 discriminator 3
 233 005e 7B69     	 ldr r3,[r7,#20]
 234 0060 DBB2     	 uxtb r3,r3
 235 0062 5B00     	 lsls r3,r3,#1
 236 0064 DAB2     	 uxtb r2,r3
 237 0066 FB79     	 ldrb r3,[r7,#7]
 238 0068 1344     	 add r3,r3,r2
 239 006a DBB2     	 uxtb r3,r3
 240 006c 0133     	 adds r3,r3,#1
 241 006e FB73     	 strb r3,[r7,#15]
 130:../cleanflight/src/main/rx/xbus.c ****             uint16_t value = ((uint16_t)xBusFrame[frameAddr]) << 8;
 242              	 .loc 1 130 0 discriminator 3
 243 0070 FB7B     	 ldrb r3,[r7,#15]
 244 0072 164A     	 ldr r2,.L11
 245 0074 D35C     	 ldrb r3,[r2,r3]
 246 0076 DBB2     	 uxtb r3,r3
 247 0078 9BB2     	 uxth r3,r3
 248 007a 1B02     	 lsls r3,r3,#8
 249 007c BB81     	 strh r3,[r7,#12]
 131:../cleanflight/src/main/rx/xbus.c ****             value = value + ((uint16_t)xBusFrame[frameAddr + 1]);
 250              	 .loc 1 131 0 discriminator 3
 251 007e FB7B     	 ldrb r3,[r7,#15]
 252 0080 0133     	 adds r3,r3,#1
 253 0082 124A     	 ldr r2,.L11
 254 0084 D35C     	 ldrb r3,[r2,r3]
 255 0086 DBB2     	 uxtb r3,r3
 256 0088 9AB2     	 uxth r2,r3
 257 008a BB89     	 ldrh r3,[r7,#12]
 258 008c 1344     	 add r3,r3,r2
 259 008e BB81     	 strh r3,[r7,#12]
 132:../cleanflight/src/main/rx/xbus.c **** 
 133:../cleanflight/src/main/rx/xbus.c ****             // Convert to internal format
 134:../cleanflight/src/main/rx/xbus.c ****             xBusChannelData[i] = XBUS_CONVERT_TO_USEC(value);
 260              	 .loc 1 134 0 discriminator 3
 261 0090 BB89     	 ldrh r3,[r7,#12]
 262 0092 4FF4AF62 	 mov r2,#1400
 263 0096 02FB03F3 	 mul r3,r2,r3
 264 009a 1B13     	 asrs r3,r3,#12
 265 009c 9BB2     	 uxth r3,r3
 266 009e 03F54873 	 add r3,r3,#800
 267 00a2 99B2     	 uxth r1,r3
 268 00a4 0B4A     	 ldr r2,.L11+8
 269 00a6 7B69     	 ldr r3,[r7,#20]
 270 00a8 22F81310 	 strh r1,[r2,r3,lsl#1]
 271              	.LBE5:
 127:../cleanflight/src/main/rx/xbus.c **** 
 272              	 .loc 1 127 0 discriminator 3
 273 00ac 7B69     	 ldr r3,[r7,#20]
 274 00ae 0133     	 adds r3,r3,#1
 275 00b0 7B61     	 str r3,[r7,#20]
 276              	.L9:
 127:../cleanflight/src/main/rx/xbus.c **** 
 277              	 .loc 1 127 0 is_stmt 0 discriminator 1
 278 00b2 094B     	 ldr r3,.L11+12
 279 00b4 1B78     	 ldrb r3,[r3]
 280 00b6 1A46     	 mov r2,r3
 281 00b8 7B69     	 ldr r3,[r7,#20]
 282 00ba 9A42     	 cmp r2,r3
 283 00bc CFDC     	 bgt .L10
 284              	.LBE4:
 135:../cleanflight/src/main/rx/xbus.c ****         }
 136:../cleanflight/src/main/rx/xbus.c **** 
 137:../cleanflight/src/main/rx/xbus.c ****         xBusFrameReceived = true;
 285              	 .loc 1 137 0 is_stmt 1
 286 00be 074B     	 ldr r3,.L11+16
 287 00c0 0122     	 movs r2,#1
 288 00c2 1A70     	 strb r2,[r3]
 289              	.L7:
 138:../cleanflight/src/main/rx/xbus.c ****     }
 139:../cleanflight/src/main/rx/xbus.c **** }
 290              	 .loc 1 139 0
 291 00c4 1837     	 adds r7,r7,#24
 292              	.LCFI9:
 293              	 .cfi_def_cfa_offset 8
 294 00c6 BD46     	 mov sp,r7
 295              	.LCFI10:
 296              	 .cfi_def_cfa_register 13
 297              	 
 298 00c8 80BD     	 pop {r7,pc}
 299              	.L12:
 300 00ca 00BF     	 .align 2
 301              	.L11:
 302 00cc 00000000 	 .word xBusFrame
 303 00d0 00000000 	 .word xBusFrameLength
 304 00d4 00000000 	 .word xBusChannelData
 305 00d8 00000000 	 .word xBusChannelCount
 306 00dc 00000000 	 .word xBusFrameReceived
 307              	 .cfi_endproc
 308              	.LFE540:
 310              	 .section .text.xBusUnpackRJ01Frame,"ax",%progbits
 311              	 .align 2
 312              	 .thumb
 313              	 .thumb_func
 315              	xBusUnpackRJ01Frame:
 316              	.LFB541:
 140:../cleanflight/src/main/rx/xbus.c **** 
 141:../cleanflight/src/main/rx/xbus.c **** static void xBusUnpackRJ01Frame(void)
 142:../cleanflight/src/main/rx/xbus.c **** {
 317              	 .loc 1 142 0
 318              	 .cfi_startproc
 319              	 
 320              	 
 321 0000 80B5     	 push {r7,lr}
 322              	.LCFI11:
 323              	 .cfi_def_cfa_offset 8
 324              	 .cfi_offset 7,-8
 325              	 .cfi_offset 14,-4
 326 0002 82B0     	 sub sp,sp,#8
 327              	.LCFI12:
 328              	 .cfi_def_cfa_offset 16
 329 0004 00AF     	 add r7,sp,#0
 330              	.LCFI13:
 331              	 .cfi_def_cfa_register 7
 143:../cleanflight/src/main/rx/xbus.c ****     // Calculate the CRC of the incoming frame
 144:../cleanflight/src/main/rx/xbus.c ****     uint8_t outerCrc = 0;
 332              	 .loc 1 144 0
 333 0006 0023     	 movs r3,#0
 334 0008 FB71     	 strb r3,[r7,#7]
 145:../cleanflight/src/main/rx/xbus.c ****     uint8_t i = 0;
 335              	 .loc 1 145 0
 336 000a 0023     	 movs r3,#0
 337 000c BB71     	 strb r3,[r7,#6]
 146:../cleanflight/src/main/rx/xbus.c **** 
 147:../cleanflight/src/main/rx/xbus.c ****     // When using the Align RJ01 receiver with
 148:../cleanflight/src/main/rx/xbus.c ****     // a MODE B setting in the radio (XG14 tested)
 149:../cleanflight/src/main/rx/xbus.c ****     // the MODE_B -frame is packed within some
 150:../cleanflight/src/main/rx/xbus.c ****     // at the moment unknown bytes before and after:
 151:../cleanflight/src/main/rx/xbus.c ****     // 0xA1 LEN __ 0xA1 12*(High + Low) CRC1 CRC2 + __ __ CRC_OUTER
 152:../cleanflight/src/main/rx/xbus.c ****     // Compared to a standard MODE B frame that only
 153:../cleanflight/src/main/rx/xbus.c ****     // contains the "middle" package.
 154:../cleanflight/src/main/rx/xbus.c ****     // Hence, at the moment, the unknown header and footer
 155:../cleanflight/src/main/rx/xbus.c ****     // of the RJ01 MODEB packages are discarded.
 156:../cleanflight/src/main/rx/xbus.c ****     // However, the LAST byte (CRC_OUTER) is infact an 8-bit
 157:../cleanflight/src/main/rx/xbus.c ****     // CRC for the whole package, using the Dallas-One-Wire CRC
 158:../cleanflight/src/main/rx/xbus.c ****     // method.
 159:../cleanflight/src/main/rx/xbus.c ****     // So, we check both these values as well as the provided length
 160:../cleanflight/src/main/rx/xbus.c ****     // of the outer/full message (LEN)
 161:../cleanflight/src/main/rx/xbus.c **** 
 162:../cleanflight/src/main/rx/xbus.c ****     //
 163:../cleanflight/src/main/rx/xbus.c ****     // Check we have correct length of message
 164:../cleanflight/src/main/rx/xbus.c ****     //
 165:../cleanflight/src/main/rx/xbus.c ****     if (xBusFrame[1] != XBUS_RJ01_MESSAGE_LENGTH)
 338              	 .loc 1 165 0
 339 000e 164B     	 ldr r3,.L19
 340 0010 5B78     	 ldrb r3,[r3,#1]
 341 0012 DBB2     	 uxtb r3,r3
 342 0014 1E2B     	 cmp r3,#30
 343 0016 00D0     	 beq .L14
 166:../cleanflight/src/main/rx/xbus.c ****     {
 167:../cleanflight/src/main/rx/xbus.c ****         // Unknown package as length is not ok
 168:../cleanflight/src/main/rx/xbus.c ****         return;
 344              	 .loc 1 168 0
 345 0018 23E0     	 b .L13
 346              	.L14:
 169:../cleanflight/src/main/rx/xbus.c ****     }
 170:../cleanflight/src/main/rx/xbus.c **** 
 171:../cleanflight/src/main/rx/xbus.c ****     //
 172:../cleanflight/src/main/rx/xbus.c ****     // CRC calculation & check for full message
 173:../cleanflight/src/main/rx/xbus.c ****     //
 174:../cleanflight/src/main/rx/xbus.c ****     for (i = 0; i < xBusFrameLength - 1; i++) {
 347              	 .loc 1 174 0
 348 001a 0023     	 movs r3,#0
 349 001c BB71     	 strb r3,[r7,#6]
 350 001e 0DE0     	 b .L16
 351              	.L17:
 175:../cleanflight/src/main/rx/xbus.c ****         outerCrc = xBusRj01CRC8(outerCrc, xBusFrame[i]);
 352              	 .loc 1 175 0 discriminator 3
 353 0020 BB79     	 ldrb r3,[r7,#6]
 354 0022 114A     	 ldr r2,.L19
 355 0024 D35C     	 ldrb r3,[r2,r3]
 356 0026 DBB2     	 uxtb r3,r3
 357 0028 FA79     	 ldrb r2,[r7,#7]
 358 002a 1046     	 mov r0,r2
 359 002c 1946     	 mov r1,r3
 360 002e FFF7FEFF 	 bl xBusRj01CRC8
 361 0032 0346     	 mov r3,r0
 362 0034 FB71     	 strb r3,[r7,#7]
 174:../cleanflight/src/main/rx/xbus.c ****         outerCrc = xBusRj01CRC8(outerCrc, xBusFrame[i]);
 363              	 .loc 1 174 0 discriminator 3
 364 0036 BB79     	 ldrb r3,[r7,#6]
 365 0038 0133     	 adds r3,r3,#1
 366 003a BB71     	 strb r3,[r7,#6]
 367              	.L16:
 174:../cleanflight/src/main/rx/xbus.c ****         outerCrc = xBusRj01CRC8(outerCrc, xBusFrame[i]);
 368              	 .loc 1 174 0 is_stmt 0 discriminator 1
 369 003c BA79     	 ldrb r2,[r7,#6]
 370 003e 0B4B     	 ldr r3,.L19+4
 371 0040 1B78     	 ldrb r3,[r3]
 372 0042 013B     	 subs r3,r3,#1
 373 0044 9A42     	 cmp r2,r3
 374 0046 EBDB     	 blt .L17
 176:../cleanflight/src/main/rx/xbus.c ****     }
 177:../cleanflight/src/main/rx/xbus.c **** 
 178:../cleanflight/src/main/rx/xbus.c ****     if (outerCrc != xBusFrame[xBusFrameLength - 1])
 375              	 .loc 1 178 0 is_stmt 1
 376 0048 084B     	 ldr r3,.L19+4
 377 004a 1B78     	 ldrb r3,[r3]
 378 004c 013B     	 subs r3,r3,#1
 379 004e 064A     	 ldr r2,.L19
 380 0050 D35C     	 ldrb r3,[r2,r3]
 381 0052 DBB2     	 uxtb r3,r3
 382 0054 FA79     	 ldrb r2,[r7,#7]
 383 0056 9A42     	 cmp r2,r3
 384 0058 00D0     	 beq .L18
 179:../cleanflight/src/main/rx/xbus.c ****     {
 180:../cleanflight/src/main/rx/xbus.c ****         // CRC does not match, skip this frame
 181:../cleanflight/src/main/rx/xbus.c ****         return;
 385              	 .loc 1 181 0 discriminator 2
 386 005a 02E0     	 b .L13
 387              	.L18:
 182:../cleanflight/src/main/rx/xbus.c ****     }
 183:../cleanflight/src/main/rx/xbus.c **** 
 184:../cleanflight/src/main/rx/xbus.c ****     // Now unpack the "embedded MODE B frame"
 185:../cleanflight/src/main/rx/xbus.c ****     xBusUnpackModeBFrame(XBUS_RJ01_OFFSET_BYTES);
 388              	 .loc 1 185 0
 389 005c 0320     	 movs r0,#3
 390 005e FFF7FEFF 	 bl xBusUnpackModeBFrame
 391              	.L13:
 186:../cleanflight/src/main/rx/xbus.c **** }
 392              	 .loc 1 186 0
 393 0062 0837     	 adds r7,r7,#8
 394              	.LCFI14:
 395              	 .cfi_def_cfa_offset 8
 396 0064 BD46     	 mov sp,r7
 397              	.LCFI15:
 398              	 .cfi_def_cfa_register 13
 399              	 
 400 0066 80BD     	 pop {r7,pc}
 401              	.L20:
 402              	 .align 2
 403              	.L19:
 404 0068 00000000 	 .word xBusFrame
 405 006c 00000000 	 .word xBusFrameLength
 406              	 .cfi_endproc
 407              	.LFE541:
 409              	 .section .text.xBusDataReceive,"ax",%progbits
 410              	 .align 2
 411              	 .thumb
 412              	 .thumb_func
 414              	xBusDataReceive:
 415              	.LFB542:
 187:../cleanflight/src/main/rx/xbus.c **** 
 188:../cleanflight/src/main/rx/xbus.c **** // Receive ISR callback
 189:../cleanflight/src/main/rx/xbus.c **** static void xBusDataReceive(uint16_t c, void *data)
 190:../cleanflight/src/main/rx/xbus.c **** {
 416              	 .loc 1 190 0
 417              	 .cfi_startproc
 418              	 
 419              	 
 420 0000 80B5     	 push {r7,lr}
 421              	.LCFI16:
 422              	 .cfi_def_cfa_offset 8
 423              	 .cfi_offset 7,-8
 424              	 .cfi_offset 14,-4
 425 0002 84B0     	 sub sp,sp,#16
 426              	.LCFI17:
 427              	 .cfi_def_cfa_offset 24
 428 0004 00AF     	 add r7,sp,#0
 429              	.LCFI18:
 430              	 .cfi_def_cfa_register 7
 431 0006 0346     	 mov r3,r0
 432 0008 3960     	 str r1,[r7]
 433 000a FB80     	 strh r3,[r7,#6]
 191:../cleanflight/src/main/rx/xbus.c ****     UNUSED(data);
 192:../cleanflight/src/main/rx/xbus.c **** 
 193:../cleanflight/src/main/rx/xbus.c ****     uint32_t now;
 194:../cleanflight/src/main/rx/xbus.c ****     static uint32_t xBusTimeLast, xBusTimeInterval;
 195:../cleanflight/src/main/rx/xbus.c **** 
 196:../cleanflight/src/main/rx/xbus.c ****     // Check if we shall reset frame position due to time
 197:../cleanflight/src/main/rx/xbus.c ****     now = micros();
 434              	 .loc 1 197 0
 435 000c FFF7FEFF 	 bl micros
 436 0010 F860     	 str r0,[r7,#12]
 198:../cleanflight/src/main/rx/xbus.c ****     xBusTimeInterval = now - xBusTimeLast;
 437              	 .loc 1 198 0
 438 0012 2B4B     	 ldr r3,.L30
 439 0014 1B68     	 ldr r3,[r3]
 440 0016 FA68     	 ldr r2,[r7,#12]
 441 0018 D31A     	 subs r3,r2,r3
 442 001a 2A4A     	 ldr r2,.L30+4
 443 001c 1360     	 str r3,[r2]
 199:../cleanflight/src/main/rx/xbus.c ****     xBusTimeLast = now;
 444              	 .loc 1 199 0
 445 001e 284A     	 ldr r2,.L30
 446 0020 FB68     	 ldr r3,[r7,#12]
 447 0022 1360     	 str r3,[r2]
 200:../cleanflight/src/main/rx/xbus.c ****     if (xBusTimeInterval > XBUS_MAX_FRAME_TIME) {
 448              	 .loc 1 200 0
 449 0024 274B     	 ldr r3,.L30+4
 450 0026 1B68     	 ldr r3,[r3]
 451 0028 B3F5FA5F 	 cmp r3,#8000
 452 002c 05D9     	 bls .L22
 201:../cleanflight/src/main/rx/xbus.c ****         xBusFramePosition = 0;
 453              	 .loc 1 201 0
 454 002e 264B     	 ldr r3,.L30+8
 455 0030 0022     	 movs r2,#0
 456 0032 1A70     	 strb r2,[r3]
 202:../cleanflight/src/main/rx/xbus.c ****         xBusDataIncoming = false;
 457              	 .loc 1 202 0
 458 0034 254B     	 ldr r3,.L30+12
 459 0036 0022     	 movs r2,#0
 460 0038 1A70     	 strb r2,[r3]
 461              	.L22:
 203:../cleanflight/src/main/rx/xbus.c ****     }
 204:../cleanflight/src/main/rx/xbus.c **** 
 205:../cleanflight/src/main/rx/xbus.c ****     // Check if we shall start a frame?
 206:../cleanflight/src/main/rx/xbus.c ****     if (xBusFramePosition == 0) {
 462              	 .loc 1 206 0
 463 003a 234B     	 ldr r3,.L30+8
 464 003c 1B78     	 ldrb r3,[r3]
 465 003e 002B     	 cmp r3,#0
 466 0040 12D1     	 bne .L23
 207:../cleanflight/src/main/rx/xbus.c ****         if (c == XBUS_START_OF_FRAME_BYTE_A1) {
 467              	 .loc 1 207 0
 468 0042 FB88     	 ldrh r3,[r7,#6]
 469 0044 A12B     	 cmp r3,#161
 470 0046 06D1     	 bne .L24
 208:../cleanflight/src/main/rx/xbus.c ****             xBusDataIncoming = true;
 471              	 .loc 1 208 0
 472 0048 204B     	 ldr r3,.L30+12
 473 004a 0122     	 movs r2,#1
 474 004c 1A70     	 strb r2,[r3]
 209:../cleanflight/src/main/rx/xbus.c ****             xBusFrameLength = XBUS_FRAME_SIZE_A1;   //decrease framesize (when receiver change, oth
 475              	 .loc 1 209 0
 476 004e 204B     	 ldr r3,.L30+16
 477 0050 1B22     	 movs r2,#27
 478 0052 1A70     	 strb r2,[r3]
 479 0054 08E0     	 b .L23
 480              	.L24:
 210:../cleanflight/src/main/rx/xbus.c ****         } else if (c == XBUS_START_OF_FRAME_BYTE_A2) {//16channel packet
 481              	 .loc 1 210 0
 482 0056 FB88     	 ldrh r3,[r7,#6]
 483 0058 A22B     	 cmp r3,#162
 484 005a 05D1     	 bne .L23
 211:../cleanflight/src/main/rx/xbus.c ****             xBusDataIncoming = true;
 485              	 .loc 1 211 0
 486 005c 1B4B     	 ldr r3,.L30+12
 487 005e 0122     	 movs r2,#1
 488 0060 1A70     	 strb r2,[r3]
 212:../cleanflight/src/main/rx/xbus.c ****             xBusFrameLength = XBUS_FRAME_SIZE_A2;   //increase framesize
 489              	 .loc 1 212 0
 490 0062 1B4B     	 ldr r3,.L30+16
 491 0064 2322     	 movs r2,#35
 492 0066 1A70     	 strb r2,[r3]
 493              	.L23:
 213:../cleanflight/src/main/rx/xbus.c ****         }
 214:../cleanflight/src/main/rx/xbus.c ****     }
 215:../cleanflight/src/main/rx/xbus.c **** 
 216:../cleanflight/src/main/rx/xbus.c ****     // Only do this if we are receiving to a frame
 217:../cleanflight/src/main/rx/xbus.c ****     if (xBusDataIncoming == true) {
 494              	 .loc 1 217 0
 495 0068 184B     	 ldr r3,.L30+12
 496 006a 1B78     	 ldrb r3,[r3]
 497 006c 002B     	 cmp r3,#0
 498 006e 0CD0     	 beq .L25
 218:../cleanflight/src/main/rx/xbus.c ****         // Store in frame copy
 219:../cleanflight/src/main/rx/xbus.c ****         xBusFrame[xBusFramePosition] = (uint8_t)c;
 499              	 .loc 1 219 0
 500 0070 154B     	 ldr r3,.L30+8
 501 0072 1B78     	 ldrb r3,[r3]
 502 0074 1A46     	 mov r2,r3
 503 0076 FB88     	 ldrh r3,[r7,#6]
 504 0078 D9B2     	 uxtb r1,r3
 505 007a 164B     	 ldr r3,.L30+20
 506 007c 9954     	 strb r1,[r3,r2]
 220:../cleanflight/src/main/rx/xbus.c ****         xBusFramePosition++;
 507              	 .loc 1 220 0
 508 007e 124B     	 ldr r3,.L30+8
 509 0080 1B78     	 ldrb r3,[r3]
 510 0082 0133     	 adds r3,r3,#1
 511 0084 DAB2     	 uxtb r2,r3
 512 0086 104B     	 ldr r3,.L30+8
 513 0088 1A70     	 strb r2,[r3]
 514              	.L25:
 221:../cleanflight/src/main/rx/xbus.c ****     }
 222:../cleanflight/src/main/rx/xbus.c **** 
 223:../cleanflight/src/main/rx/xbus.c ****     // Done?
 224:../cleanflight/src/main/rx/xbus.c ****     if (xBusFramePosition == xBusFrameLength) {
 515              	 .loc 1 224 0
 516 008a 0F4B     	 ldr r3,.L30+8
 517 008c 1A78     	 ldrb r2,[r3]
 518 008e 104B     	 ldr r3,.L30+16
 519 0090 1B78     	 ldrb r3,[r3]
 520 0092 9A42     	 cmp r2,r3
 521 0094 11D1     	 bne .L21
 225:../cleanflight/src/main/rx/xbus.c ****         switch (xBusProvider) {
 522              	 .loc 1 225 0
 523 0096 104B     	 ldr r3,.L30+24
 524 0098 1B78     	 ldrb r3,[r3]
 525 009a 052B     	 cmp r3,#5
 526 009c 02D0     	 beq .L28
 527 009e 062B     	 cmp r3,#6
 528 00a0 03D0     	 beq .L29
 529 00a2 04E0     	 b .L27
 530              	.L28:
 226:../cleanflight/src/main/rx/xbus.c ****         case SERIALRX_XBUS_MODE_B:
 227:../cleanflight/src/main/rx/xbus.c ****             xBusUnpackModeBFrame(0);
 531              	 .loc 1 227 0
 532 00a4 0020     	 movs r0,#0
 533 00a6 FFF7FEFF 	 bl xBusUnpackModeBFrame
 534              	.L29:
 228:../cleanflight/src/main/rx/xbus.c ****             FALLTHROUGH; //!!TODO - check this fall through is correct
 229:../cleanflight/src/main/rx/xbus.c ****         case SERIALRX_XBUS_MODE_B_RJ01:
 230:../cleanflight/src/main/rx/xbus.c ****             xBusUnpackRJ01Frame();
 535              	 .loc 1 230 0
 536 00aa FFF7FEFF 	 bl xBusUnpackRJ01Frame
 537              	.L27:
 231:../cleanflight/src/main/rx/xbus.c ****         }
 232:../cleanflight/src/main/rx/xbus.c ****         xBusDataIncoming = false;
 538              	 .loc 1 232 0
 539 00ae 074B     	 ldr r3,.L30+12
 540 00b0 0022     	 movs r2,#0
 541 00b2 1A70     	 strb r2,[r3]
 233:../cleanflight/src/main/rx/xbus.c ****         xBusFramePosition = 0;
 542              	 .loc 1 233 0
 543 00b4 044B     	 ldr r3,.L30+8
 544 00b6 0022     	 movs r2,#0
 545 00b8 1A70     	 strb r2,[r3]
 546              	.L21:
 234:../cleanflight/src/main/rx/xbus.c ****     }
 235:../cleanflight/src/main/rx/xbus.c **** }
 547              	 .loc 1 235 0
 548 00ba 1037     	 adds r7,r7,#16
 549              	.LCFI19:
 550              	 .cfi_def_cfa_offset 8
 551 00bc BD46     	 mov sp,r7
 552              	.LCFI20:
 553              	 .cfi_def_cfa_register 13
 554              	 
 555 00be 80BD     	 pop {r7,pc}
 556              	.L31:
 557              	 .align 2
 558              	.L30:
 559 00c0 00000000 	 .word xBusTimeLast.12577
 560 00c4 00000000 	 .word xBusTimeInterval.12578
 561 00c8 00000000 	 .word xBusFramePosition
 562 00cc 00000000 	 .word xBusDataIncoming
 563 00d0 00000000 	 .word xBusFrameLength
 564 00d4 00000000 	 .word xBusFrame
 565 00d8 00000000 	 .word xBusProvider
 566              	 .cfi_endproc
 567              	.LFE542:
 569              	 .section .text.xBusFrameStatus,"ax",%progbits
 570              	 .align 2
 571              	 .thumb
 572              	 .thumb_func
 574              	xBusFrameStatus:
 575              	.LFB543:
 236:../cleanflight/src/main/rx/xbus.c **** 
 237:../cleanflight/src/main/rx/xbus.c **** // Indicate time to read a frame from the data...
 238:../cleanflight/src/main/rx/xbus.c **** static uint8_t xBusFrameStatus(rxRuntimeConfig_t *rxRuntimeConfig)
 239:../cleanflight/src/main/rx/xbus.c **** {
 576              	 .loc 1 239 0
 577              	 .cfi_startproc
 578              	 
 579              	 
 580              	 
 581 0000 80B4     	 push {r7}
 582              	.LCFI21:
 583              	 .cfi_def_cfa_offset 4
 584              	 .cfi_offset 7,-4
 585 0002 83B0     	 sub sp,sp,#12
 586              	.LCFI22:
 587              	 .cfi_def_cfa_offset 16
 588 0004 00AF     	 add r7,sp,#0
 589              	.LCFI23:
 590              	 .cfi_def_cfa_register 7
 591 0006 7860     	 str r0,[r7,#4]
 240:../cleanflight/src/main/rx/xbus.c ****     UNUSED(rxRuntimeConfig);
 241:../cleanflight/src/main/rx/xbus.c **** 
 242:../cleanflight/src/main/rx/xbus.c ****     if (!xBusFrameReceived) {
 592              	 .loc 1 242 0
 593 0008 094B     	 ldr r3,.L35
 594 000a 1B78     	 ldrb r3,[r3]
 595 000c 83F00103 	 eor r3,r3,#1
 596 0010 DBB2     	 uxtb r3,r3
 597 0012 002B     	 cmp r3,#0
 598 0014 01D0     	 beq .L33
 243:../cleanflight/src/main/rx/xbus.c ****         return RX_FRAME_PENDING;
 599              	 .loc 1 243 0
 600 0016 0023     	 movs r3,#0
 601 0018 03E0     	 b .L34
 602              	.L33:
 244:../cleanflight/src/main/rx/xbus.c ****     }
 245:../cleanflight/src/main/rx/xbus.c **** 
 246:../cleanflight/src/main/rx/xbus.c ****     xBusFrameReceived = false;
 603              	 .loc 1 246 0
 604 001a 054B     	 ldr r3,.L35
 605 001c 0022     	 movs r2,#0
 606 001e 1A70     	 strb r2,[r3]
 247:../cleanflight/src/main/rx/xbus.c **** 
 248:../cleanflight/src/main/rx/xbus.c ****     return RX_FRAME_COMPLETE;
 607              	 .loc 1 248 0
 608 0020 0123     	 movs r3,#1
 609              	.L34:
 249:../cleanflight/src/main/rx/xbus.c **** }
 610              	 .loc 1 249 0
 611 0022 1846     	 mov r0,r3
 612 0024 0C37     	 adds r7,r7,#12
 613              	.LCFI24:
 614              	 .cfi_def_cfa_offset 4
 615 0026 BD46     	 mov sp,r7
 616              	.LCFI25:
 617              	 .cfi_def_cfa_register 13
 618              	 
 619 0028 5DF8047B 	 ldr r7,[sp],#4
 620              	.LCFI26:
 621              	 .cfi_restore 7
 622              	 .cfi_def_cfa_offset 0
 623 002c 7047     	 bx lr
 624              	.L36:
 625 002e 00BF     	 .align 2
 626              	.L35:
 627 0030 00000000 	 .word xBusFrameReceived
 628              	 .cfi_endproc
 629              	.LFE543:
 631              	 .section .text.xBusReadRawRC,"ax",%progbits
 632              	 .align 2
 633              	 .thumb
 634              	 .thumb_func
 636              	xBusReadRawRC:
 637              	.LFB544:
 250:../cleanflight/src/main/rx/xbus.c **** 
 251:../cleanflight/src/main/rx/xbus.c **** static uint16_t xBusReadRawRC(const rxRuntimeConfig_t *rxRuntimeConfig, uint8_t chan)
 252:../cleanflight/src/main/rx/xbus.c **** {
 638              	 .loc 1 252 0
 639              	 .cfi_startproc
 640              	 
 641              	 
 642              	 
 643 0000 80B4     	 push {r7}
 644              	.LCFI27:
 645              	 .cfi_def_cfa_offset 4
 646              	 .cfi_offset 7,-4
 647 0002 85B0     	 sub sp,sp,#20
 648              	.LCFI28:
 649              	 .cfi_def_cfa_offset 24
 650 0004 00AF     	 add r7,sp,#0
 651              	.LCFI29:
 652              	 .cfi_def_cfa_register 7
 653 0006 7860     	 str r0,[r7,#4]
 654 0008 0B46     	 mov r3,r1
 655 000a FB70     	 strb r3,[r7,#3]
 253:../cleanflight/src/main/rx/xbus.c ****     uint16_t data;
 254:../cleanflight/src/main/rx/xbus.c **** 
 255:../cleanflight/src/main/rx/xbus.c ****     // Deliver the data wanted
 256:../cleanflight/src/main/rx/xbus.c ****     if (chan >= rxRuntimeConfig->channelCount) {
 656              	 .loc 1 256 0
 657 000c 7B68     	 ldr r3,[r7,#4]
 658 000e 1B78     	 ldrb r3,[r3]
 659 0010 FA78     	 ldrb r2,[r7,#3]
 660 0012 9A42     	 cmp r2,r3
 661 0014 01D3     	 bcc .L38
 257:../cleanflight/src/main/rx/xbus.c ****         return 0;
 662              	 .loc 1 257 0
 663 0016 0023     	 movs r3,#0
 664 0018 05E0     	 b .L39
 665              	.L38:
 258:../cleanflight/src/main/rx/xbus.c ****     }
 259:../cleanflight/src/main/rx/xbus.c **** 
 260:../cleanflight/src/main/rx/xbus.c ****     data = xBusChannelData[chan];
 666              	 .loc 1 260 0
 667 001a FB78     	 ldrb r3,[r7,#3]
 668 001c 054A     	 ldr r2,.L40
 669 001e 32F81330 	 ldrh r3,[r2,r3,lsl#1]
 670 0022 FB81     	 strh r3,[r7,#14]
 261:../cleanflight/src/main/rx/xbus.c **** 
 262:../cleanflight/src/main/rx/xbus.c ****     return data;
 671              	 .loc 1 262 0
 672 0024 FB89     	 ldrh r3,[r7,#14]
 673              	.L39:
 263:../cleanflight/src/main/rx/xbus.c **** }
 674              	 .loc 1 263 0
 675 0026 1846     	 mov r0,r3
 676 0028 1437     	 adds r7,r7,#20
 677              	.LCFI30:
 678              	 .cfi_def_cfa_offset 4
 679 002a BD46     	 mov sp,r7
 680              	.LCFI31:
 681              	 .cfi_def_cfa_register 13
 682              	 
 683 002c 5DF8047B 	 ldr r7,[sp],#4
 684              	.LCFI32:
 685              	 .cfi_restore 7
 686              	 .cfi_def_cfa_offset 0
 687 0030 7047     	 bx lr
 688              	.L41:
 689 0032 00BF     	 .align 2
 690              	.L40:
 691 0034 00000000 	 .word xBusChannelData
 692              	 .cfi_endproc
 693              	.LFE544:
 695              	 .section .text.xBusInit,"ax",%progbits
 696              	 .align 2
 697              	 .global xBusInit
 698              	 .thumb
 699              	 .thumb_func
 701              	xBusInit:
 702              	.LFB545:
 264:../cleanflight/src/main/rx/xbus.c **** 
 265:../cleanflight/src/main/rx/xbus.c **** bool xBusInit(const rxConfig_t *rxConfig, rxRuntimeConfig_t *rxRuntimeConfig)
 266:../cleanflight/src/main/rx/xbus.c **** {
 703              	 .loc 1 266 0
 704              	 .cfi_startproc
 705              	 
 706              	 
 707 0000 80B5     	 push {r7,lr}
 708              	.LCFI33:
 709              	 .cfi_def_cfa_offset 8
 710              	 .cfi_offset 7,-8
 711              	 .cfi_offset 14,-4
 712 0002 8AB0     	 sub sp,sp,#40
 713              	.LCFI34:
 714              	 .cfi_def_cfa_offset 48
 715 0004 04AF     	 add r7,sp,#16
 716              	.LCFI35:
 717              	 .cfi_def_cfa 7,32
 718 0006 7860     	 str r0,[r7,#4]
 719 0008 3960     	 str r1,[r7]
 267:../cleanflight/src/main/rx/xbus.c ****     uint32_t baudRate;
 268:../cleanflight/src/main/rx/xbus.c **** 
 269:../cleanflight/src/main/rx/xbus.c ****     switch (rxConfig->serialrx_provider) {
 720              	 .loc 1 269 0
 721 000a 7B68     	 ldr r3,[r7,#4]
 722 000c 1B7A     	 ldrb r3,[r3,#8]
 723 000e 052B     	 cmp r3,#5
 724 0010 02D0     	 beq .L44
 725 0012 062B     	 cmp r3,#6
 726 0014 19D0     	 beq .L45
 727 0016 30E0     	 b .L53
 728              	.L44:
 270:../cleanflight/src/main/rx/xbus.c ****     case SERIALRX_XBUS_MODE_B:
 271:../cleanflight/src/main/rx/xbus.c ****         rxRuntimeConfig->channelCount = XBUS_CHANNEL_COUNT;
 729              	 .loc 1 271 0
 730 0018 3B68     	 ldr r3,[r7]
 731 001a 0C22     	 movs r2,#12
 732 001c 1A70     	 strb r2,[r3]
 272:../cleanflight/src/main/rx/xbus.c ****         xBusFrameReceived = false;
 733              	 .loc 1 272 0
 734 001e 3D4B     	 ldr r3,.L54
 735 0020 0022     	 movs r2,#0
 736 0022 1A70     	 strb r2,[r3]
 273:../cleanflight/src/main/rx/xbus.c ****         xBusDataIncoming = false;
 737              	 .loc 1 273 0
 738 0024 3C4B     	 ldr r3,.L54+4
 739 0026 0022     	 movs r2,#0
 740 0028 1A70     	 strb r2,[r3]
 274:../cleanflight/src/main/rx/xbus.c ****         xBusFramePosition = 0;
 741              	 .loc 1 274 0
 742 002a 3C4B     	 ldr r3,.L54+8
 743 002c 0022     	 movs r2,#0
 744 002e 1A70     	 strb r2,[r3]
 275:../cleanflight/src/main/rx/xbus.c ****         baudRate = XBUS_BAUDRATE;
 745              	 .loc 1 275 0
 746 0030 4FF4E133 	 mov r3,#115200
 747 0034 7B61     	 str r3,[r7,#20]
 276:../cleanflight/src/main/rx/xbus.c ****         xBusFrameLength = XBUS_FRAME_SIZE_A1;
 748              	 .loc 1 276 0
 749 0036 3A4B     	 ldr r3,.L54+12
 750 0038 1B22     	 movs r2,#27
 751 003a 1A70     	 strb r2,[r3]
 277:../cleanflight/src/main/rx/xbus.c ****         xBusChannelCount = XBUS_CHANNEL_COUNT;
 752              	 .loc 1 277 0
 753 003c 394B     	 ldr r3,.L54+16
 754 003e 0C22     	 movs r2,#12
 755 0040 1A70     	 strb r2,[r3]
 278:../cleanflight/src/main/rx/xbus.c ****         xBusProvider = SERIALRX_XBUS_MODE_B;
 756              	 .loc 1 278 0
 757 0042 394B     	 ldr r3,.L54+20
 758 0044 0522     	 movs r2,#5
 759 0046 1A70     	 strb r2,[r3]
 279:../cleanflight/src/main/rx/xbus.c ****         break;
 760              	 .loc 1 279 0
 761 0048 19E0     	 b .L46
 762              	.L45:
 280:../cleanflight/src/main/rx/xbus.c ****     case SERIALRX_XBUS_MODE_B_RJ01:
 281:../cleanflight/src/main/rx/xbus.c ****         rxRuntimeConfig->channelCount = XBUS_RJ01_CHANNEL_COUNT;
 763              	 .loc 1 281 0
 764 004a 3B68     	 ldr r3,[r7]
 765 004c 0C22     	 movs r2,#12
 766 004e 1A70     	 strb r2,[r3]
 282:../cleanflight/src/main/rx/xbus.c ****         xBusFrameReceived = false;
 767              	 .loc 1 282 0
 768 0050 304B     	 ldr r3,.L54
 769 0052 0022     	 movs r2,#0
 770 0054 1A70     	 strb r2,[r3]
 283:../cleanflight/src/main/rx/xbus.c ****         xBusDataIncoming = false;
 771              	 .loc 1 283 0
 772 0056 304B     	 ldr r3,.L54+4
 773 0058 0022     	 movs r2,#0
 774 005a 1A70     	 strb r2,[r3]
 284:../cleanflight/src/main/rx/xbus.c ****         xBusFramePosition = 0;
 775              	 .loc 1 284 0
 776 005c 2F4B     	 ldr r3,.L54+8
 777 005e 0022     	 movs r2,#0
 778 0060 1A70     	 strb r2,[r3]
 285:../cleanflight/src/main/rx/xbus.c ****         baudRate = XBUS_RJ01_BAUDRATE;
 779              	 .loc 1 285 0
 780 0062 324B     	 ldr r3,.L54+24
 781 0064 7B61     	 str r3,[r7,#20]
 286:../cleanflight/src/main/rx/xbus.c ****         xBusFrameLength = XBUS_RJ01_FRAME_SIZE;
 782              	 .loc 1 286 0
 783 0066 2E4B     	 ldr r3,.L54+12
 784 0068 2122     	 movs r2,#33
 785 006a 1A70     	 strb r2,[r3]
 287:../cleanflight/src/main/rx/xbus.c ****         xBusChannelCount = XBUS_RJ01_CHANNEL_COUNT;
 786              	 .loc 1 287 0
 787 006c 2D4B     	 ldr r3,.L54+16
 788 006e 0C22     	 movs r2,#12
 789 0070 1A70     	 strb r2,[r3]
 288:../cleanflight/src/main/rx/xbus.c ****         xBusProvider = SERIALRX_XBUS_MODE_B_RJ01;
 790              	 .loc 1 288 0
 791 0072 2D4B     	 ldr r3,.L54+20
 792 0074 0622     	 movs r2,#6
 793 0076 1A70     	 strb r2,[r3]
 289:../cleanflight/src/main/rx/xbus.c ****         break;
 794              	 .loc 1 289 0
 795 0078 01E0     	 b .L46
 796              	.L53:
 290:../cleanflight/src/main/rx/xbus.c ****     default:
 291:../cleanflight/src/main/rx/xbus.c ****         return false;
 797              	 .loc 1 291 0
 798 007a 0023     	 movs r3,#0
 799 007c 46E0     	 b .L47
 800              	.L46:
 292:../cleanflight/src/main/rx/xbus.c ****         break;
 293:../cleanflight/src/main/rx/xbus.c ****     }
 294:../cleanflight/src/main/rx/xbus.c **** 
 295:../cleanflight/src/main/rx/xbus.c ****     rxRuntimeConfig->rxRefreshRate = 11000;
 801              	 .loc 1 295 0
 802 007e 3B68     	 ldr r3,[r7]
 803 0080 0022     	 movs r2,#0
 804 0082 62F00702 	 orn r2,r2,#7
 805 0086 5A70     	 strb r2,[r3,#1]
 806 0088 0022     	 movs r2,#0
 807 008a 42F02A02 	 orr r2,r2,#42
 808 008e 9A70     	 strb r2,[r3,#2]
 296:../cleanflight/src/main/rx/xbus.c **** 
 297:../cleanflight/src/main/rx/xbus.c ****     rxRuntimeConfig->rcReadRawFn = xBusReadRawRC;
 809              	 .loc 1 297 0
 810 0090 3B68     	 ldr r3,[r7]
 811 0092 274A     	 ldr r2,.L54+28
 812 0094 C3F80320 	 str r2,[r3,#3]
 298:../cleanflight/src/main/rx/xbus.c ****     rxRuntimeConfig->rcFrameStatusFn = xBusFrameStatus;
 813              	 .loc 1 298 0
 814 0098 3B68     	 ldr r3,[r7]
 815 009a 264A     	 ldr r2,.L54+32
 816 009c C3F80720 	 str r2,[r3,#7]
 299:../cleanflight/src/main/rx/xbus.c **** 
 300:../cleanflight/src/main/rx/xbus.c ****     const serialPortConfig_t *portConfig = findSerialPortConfig(FUNCTION_RX_SERIAL);
 817              	 .loc 1 300 0
 818 00a0 4020     	 movs r0,#64
 819 00a2 FFF7FEFF 	 bl findSerialPortConfig
 820 00a6 3861     	 str r0,[r7,#16]
 301:../cleanflight/src/main/rx/xbus.c ****     if (!portConfig) {
 821              	 .loc 1 301 0
 822 00a8 3B69     	 ldr r3,[r7,#16]
 823 00aa 002B     	 cmp r3,#0
 824 00ac 01D1     	 bne .L48
 302:../cleanflight/src/main/rx/xbus.c ****         return false;
 825              	 .loc 1 302 0
 826 00ae 0023     	 movs r3,#0
 827 00b0 2CE0     	 b .L47
 828              	.L48:
 303:../cleanflight/src/main/rx/xbus.c ****     }
 304:../cleanflight/src/main/rx/xbus.c **** 
 305:../cleanflight/src/main/rx/xbus.c **** #ifdef USE_TELEMETRY
 306:../cleanflight/src/main/rx/xbus.c ****     bool portShared = telemetryCheckRxPortShared(portConfig);
 307:../cleanflight/src/main/rx/xbus.c **** #else
 308:../cleanflight/src/main/rx/xbus.c ****     bool portShared = false;
 829              	 .loc 1 308 0
 830 00b2 0023     	 movs r3,#0
 831 00b4 FB73     	 strb r3,[r7,#15]
 309:../cleanflight/src/main/rx/xbus.c **** #endif
 310:../cleanflight/src/main/rx/xbus.c **** 
 311:../cleanflight/src/main/rx/xbus.c ****     serialPort_t *xBusPort = openSerialPort(portConfig->identifier,
 832              	 .loc 1 311 0
 833 00b6 3B69     	 ldr r3,[r7,#16]
 834 00b8 9978     	 ldrb r1,[r3,#2]
 835 00ba FB7B     	 ldrb r3,[r7,#15]
 836 00bc 002B     	 cmp r3,#0
 837 00be 01D0     	 beq .L49
 838              	 .loc 1 311 0 is_stmt 0 discriminator 1
 839 00c0 0322     	 movs r2,#3
 840 00c2 00E0     	 b .L50
 841              	.L49:
 842              	 .loc 1 311 0 discriminator 2
 843 00c4 0122     	 movs r2,#1
 844              	.L50:
 312:../cleanflight/src/main/rx/xbus.c ****         FUNCTION_RX_SERIAL,
 313:../cleanflight/src/main/rx/xbus.c ****         xBusDataReceive,
 314:../cleanflight/src/main/rx/xbus.c ****         NULL,
 315:../cleanflight/src/main/rx/xbus.c ****         baudRate,
 316:../cleanflight/src/main/rx/xbus.c ****         portShared ? MODE_RXTX : MODE_RX,
 317:../cleanflight/src/main/rx/xbus.c ****         (rxConfig->serialrx_inverted ? SERIAL_INVERTED : 0) | (rxConfig->halfDuplex ? SERIAL_BIDIR 
 845              	 .loc 1 317 0 is_stmt 1 discriminator 4
 846 00c6 7B68     	 ldr r3,[r7,#4]
 847 00c8 5B7A     	 ldrb r3,[r3,#9]
 848 00ca 002B     	 cmp r3,#0
 849 00cc 14BF     	 ite ne
 850 00ce 0123     	 movne r3,#1
 851 00d0 0023     	 moveq r3,#0
 852 00d2 DBB2     	 uxtb r3,r3
 853 00d4 D8B2     	 uxtb r0,r3
 854 00d6 7B68     	 ldr r3,[r7,#4]
 855 00d8 9B7A     	 ldrb r3,[r3,#10]
 311:../cleanflight/src/main/rx/xbus.c ****         FUNCTION_RX_SERIAL,
 856              	 .loc 1 311 0 discriminator 4
 857 00da 002B     	 cmp r3,#0
 858 00dc 01D0     	 beq .L51
 311:../cleanflight/src/main/rx/xbus.c ****         FUNCTION_RX_SERIAL,
 859              	 .loc 1 311 0 is_stmt 0 discriminator 5
 860 00de 0823     	 movs r3,#8
 861 00e0 00E0     	 b .L52
 862              	.L51:
 311:../cleanflight/src/main/rx/xbus.c ****         FUNCTION_RX_SERIAL,
 863              	 .loc 1 311 0 discriminator 6
 864 00e2 0023     	 movs r3,#0
 865              	.L52:
 311:../cleanflight/src/main/rx/xbus.c ****         FUNCTION_RX_SERIAL,
 866              	 .loc 1 311 0 discriminator 8
 867 00e4 0343     	 orrs r3,r3,r0
 868 00e6 DBB2     	 uxtb r3,r3
 869 00e8 DBB2     	 uxtb r3,r3
 870 00ea 48B2     	 sxtb r0,r1
 871 00ec 7969     	 ldr r1,[r7,#20]
 872 00ee 0091     	 str r1,[sp]
 873 00f0 0192     	 str r2,[sp,#4]
 874 00f2 0293     	 str r3,[sp,#8]
 875 00f4 4021     	 movs r1,#64
 876 00f6 104A     	 ldr r2,.L54+36
 877 00f8 0023     	 movs r3,#0
 878 00fa FFF7FEFF 	 bl openSerialPort
 879 00fe B860     	 str r0,[r7,#8]
 318:../cleanflight/src/main/rx/xbus.c ****         );
 319:../cleanflight/src/main/rx/xbus.c **** 
 320:../cleanflight/src/main/rx/xbus.c **** #ifdef USE_TELEMETRY
 321:../cleanflight/src/main/rx/xbus.c ****     if (portShared) {
 322:../cleanflight/src/main/rx/xbus.c ****         telemetrySharedPort = xBusPort;
 323:../cleanflight/src/main/rx/xbus.c ****     }
 324:../cleanflight/src/main/rx/xbus.c **** #endif
 325:../cleanflight/src/main/rx/xbus.c **** 
 326:../cleanflight/src/main/rx/xbus.c ****     return xBusPort != NULL;
 880              	 .loc 1 326 0 is_stmt 1 discriminator 8
 881 0100 BB68     	 ldr r3,[r7,#8]
 882 0102 002B     	 cmp r3,#0
 883 0104 14BF     	 ite ne
 884 0106 0123     	 movne r3,#1
 885 0108 0023     	 moveq r3,#0
 886 010a DBB2     	 uxtb r3,r3
 887              	.L47:
 327:../cleanflight/src/main/rx/xbus.c **** }
 888              	 .loc 1 327 0
 889 010c 1846     	 mov r0,r3
 890 010e 1837     	 adds r7,r7,#24
 891              	.LCFI36:
 892              	 .cfi_def_cfa_offset 8
 893 0110 BD46     	 mov sp,r7
 894              	.LCFI37:
 895              	 .cfi_def_cfa_register 13
 896              	 
 897 0112 80BD     	 pop {r7,pc}
 898              	.L55:
 899              	 .align 2
 900              	.L54:
 901 0114 00000000 	 .word xBusFrameReceived
 902 0118 00000000 	 .word xBusDataIncoming
 903 011c 00000000 	 .word xBusFramePosition
 904 0120 00000000 	 .word xBusFrameLength
 905 0124 00000000 	 .word xBusChannelCount
 906 0128 00000000 	 .word xBusProvider
 907 012c 90D00300 	 .word 250000
 908 0130 00000000 	 .word xBusReadRawRC
 909 0134 00000000 	 .word xBusFrameStatus
 910 0138 00000000 	 .word xBusDataReceive
 911              	 .cfi_endproc
 912              	.LFE545:
 914              	 .section .bss.xBusTimeLast.12577,"aw",%nobits
 915              	 .align 2
 918              	xBusTimeLast.12577:
 919 0000 00000000 	 .space 4
 920              	 .section .bss.xBusTimeInterval.12578,"aw",%nobits
 921              	 .align 2
 924              	xBusTimeInterval.12578:
 925 0000 00000000 	 .space 4
 926              	 .text
 927              	.Letext0:
 928              	 .file 2 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 929              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 930              	 .file 4 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 931              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 932              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 933              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 934              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
 935              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/serial.h"
 936              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx.h"
 937              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/rx/rx.h"
 938              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 939              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xbus.c
    {standard input}:22     .bss.xBusFrameReceived:00000000 xBusFrameReceived
    {standard input}:23     .bss.xBusFrameReceived:00000000 $d
    {standard input}:27     .bss.xBusDataIncoming:00000000 xBusDataIncoming
    {standard input}:28     .bss.xBusDataIncoming:00000000 $d
    {standard input}:32     .bss.xBusFramePosition:00000000 xBusFramePosition
    {standard input}:33     .bss.xBusFramePosition:00000000 $d
    {standard input}:37     .bss.xBusFrameLength:00000000 xBusFrameLength
    {standard input}:38     .bss.xBusFrameLength:00000000 $d
    {standard input}:42     .bss.xBusChannelCount:00000000 xBusChannelCount
    {standard input}:43     .bss.xBusChannelCount:00000000 $d
    {standard input}:47     .bss.xBusProvider:00000000 xBusProvider
    {standard input}:48     .bss.xBusProvider:00000000 $d
    {standard input}:50     .bss.xBusFrame:00000000 $d
    {standard input}:53     .bss.xBusFrame:00000000 xBusFrame
    {standard input}:56     .bss.xBusChannelData:00000000 $d
    {standard input}:59     .bss.xBusChannelData:00000000 xBusChannelData
    {standard input}:62     .text.xBusRj01CRC8:00000000 $t
    {standard input}:66     .text.xBusRj01CRC8:00000000 xBusRj01CRC8
    {standard input}:161    .text.xBusUnpackModeBFrame:00000000 $t
    {standard input}:165    .text.xBusUnpackModeBFrame:00000000 xBusUnpackModeBFrame
    {standard input}:302    .text.xBusUnpackModeBFrame:000000cc $d
    {standard input}:311    .text.xBusUnpackRJ01Frame:00000000 $t
    {standard input}:315    .text.xBusUnpackRJ01Frame:00000000 xBusUnpackRJ01Frame
    {standard input}:404    .text.xBusUnpackRJ01Frame:00000068 $d
    {standard input}:410    .text.xBusDataReceive:00000000 $t
    {standard input}:414    .text.xBusDataReceive:00000000 xBusDataReceive
    {standard input}:559    .text.xBusDataReceive:000000c0 $d
    {standard input}:918    .bss.xBusTimeLast.12577:00000000 xBusTimeLast.12577
    {standard input}:924    .bss.xBusTimeInterval.12578:00000000 xBusTimeInterval.12578
    {standard input}:570    .text.xBusFrameStatus:00000000 $t
    {standard input}:574    .text.xBusFrameStatus:00000000 xBusFrameStatus
    {standard input}:627    .text.xBusFrameStatus:00000030 $d
    {standard input}:632    .text.xBusReadRawRC:00000000 $t
    {standard input}:636    .text.xBusReadRawRC:00000000 xBusReadRawRC
    {standard input}:691    .text.xBusReadRawRC:00000034 $d
    {standard input}:696    .text.xBusInit:00000000 $t
    {standard input}:701    .text.xBusInit:00000000 xBusInit
    {standard input}:901    .text.xBusInit:00000114 $d
    {standard input}:915    .bss.xBusTimeLast.12577:00000000 $d
    {standard input}:921    .bss.xBusTimeInterval.12578:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
crc16_ccitt_update
micros
findSerialPortConfig
openSerialPort
