   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "acceleration.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.accelerometerConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	accelerometerConfig:
  25              	.LFB539:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/acceleration.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #include "common/time.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #include "pg/pg.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #include "drivers/accgyro/accgyro.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** #include "sensors/sensors.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** // Type of accelerometer used/detected
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_DEFAULT,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_NONE,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ADXL345,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MPU6050,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MMA8452,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_BMA280,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_LSM303DLHC,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MPU6000,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MPU6500,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_MPU9250,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20601,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20602,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20608G,
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20649,
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_ICM20689,
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_BMI160,
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     ACC_FAKE
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } accelerationSensor_e;
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef struct acc_s {
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     accDev_t dev;
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     uint32_t accSamplingInterval;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     float accADC[XYZ_AXIS_COUNT];
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     bool isAccelUpdatedAtLeastOnce;
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } acc_t;
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** extern acc_t acc;
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef struct rollAndPitchTrims_s {
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     int16_t roll;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     int16_t pitch;
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } rollAndPitchTrims_t_def;
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef union rollAndPitchTrims_u {
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     int16_t raw[2];
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     rollAndPitchTrims_t_def values;
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } rollAndPitchTrims_t;
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** typedef struct accelerometerConfig_s {
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     uint16_t acc_lpf_hz;                    // cutoff frequency for the low pass filter used on the
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     sensor_align_e acc_align;               // acc alignment
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     uint8_t acc_hardware;                   // Which acc hardware to use on boards with more than o
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     bool acc_high_fsr;
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     flightDynamicsTrims_t accZero;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h ****     rollAndPitchTrims_t accelerometerTrims;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** } accelerometerConfig_t;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\acceleration.h **** PG_DECLARE(accelerometerConfig_t, accelerometerConfig);
  27              	 .loc 1 78 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 78 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word accelerometerConfig_System
  55              	 .cfi_endproc
  56              	.LFE539:
  58              	 .section .text.accelerometerConfigMutable,"ax",%progbits
  59              	 .align 2
  60              	 .thumb
  61              	 .thumb_func
  63              	accelerometerConfigMutable:
  64              	.LFB540:
  65              	 .loc 1 78 0
  66              	 .cfi_startproc
  67              	 
  68              	 
  69              	 
  70 0000 80B4     	 push {r7}
  71              	.LCFI4:
  72              	 .cfi_def_cfa_offset 4
  73              	 .cfi_offset 7,-4
  74 0002 00AF     	 add r7,sp,#0
  75              	.LCFI5:
  76              	 .cfi_def_cfa_register 7
  77              	 .loc 1 78 0
  78 0004 024B     	 ldr r3,.L7
  79 0006 1846     	 mov r0,r3
  80 0008 BD46     	 mov sp,r7
  81              	.LCFI6:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 000a 5DF8047B 	 ldr r7,[sp],#4
  85              	.LCFI7:
  86              	 .cfi_restore 7
  87              	 .cfi_def_cfa_offset 0
  88 000e 7047     	 bx lr
  89              	.L8:
  90              	 .align 2
  91              	.L7:
  92 0010 00000000 	 .word accelerometerConfig_System
  93              	 .cfi_endproc
  94              	.LFE540:
  96              	 .comm acc,50,4
  97              	 .section .bss.accumulatedMeasurements,"aw",%nobits
  98              	 .align 2
 101              	accumulatedMeasurements:
 102 0000 00000000 	 .space 12
 102      00000000 
 102      00000000 
 103              	 .section .bss.accumulatedMeasurementCount,"aw",%nobits
 104              	 .align 2
 107              	accumulatedMeasurementCount:
 108 0000 00000000 	 .space 4
 109              	 .section .bss.calibratingA,"aw",%nobits
 110              	 .align 1
 113              	calibratingA:
 114 0000 0000     	 .space 2
 115              	 .section .bss.accelerationTrims,"aw",%nobits
 116              	 .align 2
 119              	accelerationTrims:
 120 0000 00000000 	 .space 4
 121              	 .section .bss.accLpfCutHz,"aw",%nobits
 122              	 .align 1
 125              	accLpfCutHz:
 126 0000 0000     	 .space 2
 127              	 .section .bss.accFilter,"aw",%nobits
 128              	 .align 2
 131              	accFilter:
 132 0000 00000000 	 .space 108
 132      00000000 
 132      00000000 
 132      00000000 
 132      00000000 
 133              	 .comm accelerometerConfig_System,15,4
 134              	 .comm accelerometerConfig_Copy,15,4
 135              	 .global accelerometerConfig_Registry
 136              	 .section .pg_registry,"a",%progbits
 137              	 .align 2
 140              	accelerometerConfig_Registry:
 141 0000 2300     	 .short 35
 142 0002 0F00     	 .short 15
 143 0004 00000000 	 .word accelerometerConfig_System
 144 0008 00000000 	 .word accelerometerConfig_Copy
 145 000c 00000000 	 .word 0
 146 0010 00000000 	 .word pgResetFn_accelerometerConfig
 147              	 .section .text.resetRollAndPitchTrims,"ax",%progbits
 148              	 .align 2
 149              	 .global resetRollAndPitchTrims
 150              	 .thumb
 151              	 .thumb_func
 153              	resetRollAndPitchTrims:
 154              	.LFB543:
 155              	 .file 2 "../cleanflight/src/main/sensors/acceleration.c"
   1:../cleanflight/src/main/sensors/acceleration.c **** /*
   2:../cleanflight/src/main/sensors/acceleration.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/sensors/acceleration.c ****  *
   4:../cleanflight/src/main/sensors/acceleration.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/sensors/acceleration.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/sensors/acceleration.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/sensors/acceleration.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/sensors/acceleration.c ****  * any later version.
   9:../cleanflight/src/main/sensors/acceleration.c ****  *
  10:../cleanflight/src/main/sensors/acceleration.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/sensors/acceleration.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/sensors/acceleration.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/sensors/acceleration.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/sensors/acceleration.c ****  *
  15:../cleanflight/src/main/sensors/acceleration.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/sensors/acceleration.c ****  * along with this software.
  17:../cleanflight/src/main/sensors/acceleration.c ****  *
  18:../cleanflight/src/main/sensors/acceleration.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/sensors/acceleration.c ****  */
  20:../cleanflight/src/main/sensors/acceleration.c **** 
  21:../cleanflight/src/main/sensors/acceleration.c **** #include <stdbool.h>
  22:../cleanflight/src/main/sensors/acceleration.c **** #include <stdint.h>
  23:../cleanflight/src/main/sensors/acceleration.c **** #include <string.h>
  24:../cleanflight/src/main/sensors/acceleration.c **** #include <math.h>
  25:../cleanflight/src/main/sensors/acceleration.c **** 
  26:../cleanflight/src/main/sensors/acceleration.c **** #include "platform.h"
  27:../cleanflight/src/main/sensors/acceleration.c **** 
  28:../cleanflight/src/main/sensors/acceleration.c **** #include "build/debug.h"
  29:../cleanflight/src/main/sensors/acceleration.c **** 
  30:../cleanflight/src/main/sensors/acceleration.c **** #include "common/axis.h"
  31:../cleanflight/src/main/sensors/acceleration.c **** #include "common/filter.h"
  32:../cleanflight/src/main/sensors/acceleration.c **** #include "common/utils.h"
  33:../cleanflight/src/main/sensors/acceleration.c **** 
  34:../cleanflight/src/main/sensors/acceleration.c **** #include "config/config_reset.h"
  35:../cleanflight/src/main/sensors/acceleration.c **** #include "config/feature.h"
  36:../cleanflight/src/main/sensors/acceleration.c **** #include "pg/pg.h"
  37:../cleanflight/src/main/sensors/acceleration.c **** #include "pg/pg_ids.h"
  38:../cleanflight/src/main/sensors/acceleration.c **** 
  39:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro.h"
  40:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_fake.h"
  41:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_mpu.h"
  42:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_mpu3050.h"
  43:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_mpu6050.h"
  44:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_mpu6500.h"
  45:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_spi_bmi160.h"
  46:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_spi_icm20649.h"
  47:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_spi_icm20689.h"
  48:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_spi_mpu6000.h"
  49:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_spi_mpu6500.h"
  50:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro/accgyro_spi_mpu9250.h"
  51:../cleanflight/src/main/sensors/acceleration.c **** 
  52:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_ADXL345
  53:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro_legacy/accgyro_adxl345.h"
  54:../cleanflight/src/main/sensors/acceleration.c **** #endif
  55:../cleanflight/src/main/sensors/acceleration.c **** 
  56:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_BMA280
  57:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro_legacy/accgyro_bma280.h"
  58:../cleanflight/src/main/sensors/acceleration.c **** #endif
  59:../cleanflight/src/main/sensors/acceleration.c **** 
  60:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_LSM303DLHC
  61:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro_legacy/accgyro_lsm303dlhc.h"
  62:../cleanflight/src/main/sensors/acceleration.c **** #endif
  63:../cleanflight/src/main/sensors/acceleration.c **** 
  64:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_MMA8452
  65:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/accgyro_legacy/accgyro_mma845x.h"
  66:../cleanflight/src/main/sensors/acceleration.c **** #endif
  67:../cleanflight/src/main/sensors/acceleration.c **** 
  68:../cleanflight/src/main/sensors/acceleration.c **** #include "drivers/bus_spi.h"
  69:../cleanflight/src/main/sensors/acceleration.c **** 
  70:../cleanflight/src/main/sensors/acceleration.c **** #include "fc/config.h"
  71:../cleanflight/src/main/sensors/acceleration.c **** #include "fc/runtime_config.h"
  72:../cleanflight/src/main/sensors/acceleration.c **** 
  73:../cleanflight/src/main/sensors/acceleration.c **** #include "io/beeper.h"
  74:../cleanflight/src/main/sensors/acceleration.c **** 
  75:../cleanflight/src/main/sensors/acceleration.c **** #include "sensors/acceleration.h"
  76:../cleanflight/src/main/sensors/acceleration.c **** #include "sensors/boardalignment.h"
  77:../cleanflight/src/main/sensors/acceleration.c **** #include "sensors/gyro.h"
  78:../cleanflight/src/main/sensors/acceleration.c **** #include "sensors/sensors.h"
  79:../cleanflight/src/main/sensors/acceleration.c **** 
  80:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_HARDWARE_REVISION_DETECTION
  81:../cleanflight/src/main/sensors/acceleration.c **** #include "hardware_revision.h"
  82:../cleanflight/src/main/sensors/acceleration.c **** #endif
  83:../cleanflight/src/main/sensors/acceleration.c **** 
  84:../cleanflight/src/main/sensors/acceleration.c **** 
  85:../cleanflight/src/main/sensors/acceleration.c **** FAST_RAM_ZERO_INIT acc_t acc;                       // acc access functions
  86:../cleanflight/src/main/sensors/acceleration.c **** 
  87:../cleanflight/src/main/sensors/acceleration.c **** static float accumulatedMeasurements[XYZ_AXIS_COUNT];
  88:../cleanflight/src/main/sensors/acceleration.c **** static int accumulatedMeasurementCount;
  89:../cleanflight/src/main/sensors/acceleration.c **** 
  90:../cleanflight/src/main/sensors/acceleration.c **** static uint16_t calibratingA = 0;      // the calibration is done is the main loop. Calibrating dec
  91:../cleanflight/src/main/sensors/acceleration.c **** 
  92:../cleanflight/src/main/sensors/acceleration.c **** extern uint16_t InflightcalibratingA;
  93:../cleanflight/src/main/sensors/acceleration.c **** extern bool AccInflightCalibrationMeasurementDone;
  94:../cleanflight/src/main/sensors/acceleration.c **** extern bool AccInflightCalibrationSavetoEEProm;
  95:../cleanflight/src/main/sensors/acceleration.c **** extern bool AccInflightCalibrationActive;
  96:../cleanflight/src/main/sensors/acceleration.c **** 
  97:../cleanflight/src/main/sensors/acceleration.c **** static flightDynamicsTrims_t *accelerationTrims;
  98:../cleanflight/src/main/sensors/acceleration.c **** 
  99:../cleanflight/src/main/sensors/acceleration.c **** static uint16_t accLpfCutHz = 0;
 100:../cleanflight/src/main/sensors/acceleration.c **** static biquadFilter_t accFilter[XYZ_AXIS_COUNT];
 101:../cleanflight/src/main/sensors/acceleration.c **** 
 102:../cleanflight/src/main/sensors/acceleration.c **** PG_REGISTER_WITH_RESET_FN(accelerometerConfig_t, accelerometerConfig, PG_ACCELEROMETER_CONFIG, 0);
 103:../cleanflight/src/main/sensors/acceleration.c **** 
 104:../cleanflight/src/main/sensors/acceleration.c **** void resetRollAndPitchTrims(rollAndPitchTrims_t *rollAndPitchTrims)
 105:../cleanflight/src/main/sensors/acceleration.c **** {
 156              	 .loc 2 105 0
 157              	 .cfi_startproc
 158              	 
 159              	 
 160              	 
 161 0000 80B4     	 push {r7}
 162              	.LCFI8:
 163              	 .cfi_def_cfa_offset 4
 164              	 .cfi_offset 7,-4
 165 0002 83B0     	 sub sp,sp,#12
 166              	.LCFI9:
 167              	 .cfi_def_cfa_offset 16
 168 0004 00AF     	 add r7,sp,#0
 169              	.LCFI10:
 170              	 .cfi_def_cfa_register 7
 171 0006 7860     	 str r0,[r7,#4]
 106:../cleanflight/src/main/sensors/acceleration.c ****     RESET_CONFIG_2(rollAndPitchTrims_t, rollAndPitchTrims,
 172              	 .loc 2 106 0
 173 0008 7B68     	 ldr r3,[r7,#4]
 174 000a 0022     	 movs r2,#0
 175 000c 1A70     	 strb r2,[r3]
 176 000e 0022     	 movs r2,#0
 177 0010 5A70     	 strb r2,[r3,#1]
 178 0012 7B68     	 ldr r3,[r7,#4]
 179 0014 0022     	 movs r2,#0
 180 0016 9A70     	 strb r2,[r3,#2]
 181 0018 0022     	 movs r2,#0
 182 001a DA70     	 strb r2,[r3,#3]
 107:../cleanflight/src/main/sensors/acceleration.c ****         .values.roll = 0,
 108:../cleanflight/src/main/sensors/acceleration.c ****         .values.pitch = 0,
 109:../cleanflight/src/main/sensors/acceleration.c ****     );
 110:../cleanflight/src/main/sensors/acceleration.c **** }
 183              	 .loc 2 110 0
 184 001c 0C37     	 adds r7,r7,#12
 185              	.LCFI11:
 186              	 .cfi_def_cfa_offset 4
 187 001e BD46     	 mov sp,r7
 188              	.LCFI12:
 189              	 .cfi_def_cfa_register 13
 190              	 
 191 0020 5DF8047B 	 ldr r7,[sp],#4
 192              	.LCFI13:
 193              	 .cfi_restore 7
 194              	 .cfi_def_cfa_offset 0
 195 0024 7047     	 bx lr
 196              	 .cfi_endproc
 197              	.LFE543:
 199 0026 00BF     	 .section .text.accResetRollAndPitchTrims,"ax",%progbits
 200              	 .align 2
 201              	 .global accResetRollAndPitchTrims
 202              	 .thumb
 203              	 .thumb_func
 205              	accResetRollAndPitchTrims:
 206              	.LFB544:
 111:../cleanflight/src/main/sensors/acceleration.c **** 
 112:../cleanflight/src/main/sensors/acceleration.c **** void accResetRollAndPitchTrims(void)
 113:../cleanflight/src/main/sensors/acceleration.c **** {
 207              	 .loc 2 113 0
 208              	 .cfi_startproc
 209              	 
 210              	 
 211 0000 80B5     	 push {r7,lr}
 212              	.LCFI14:
 213              	 .cfi_def_cfa_offset 8
 214              	 .cfi_offset 7,-8
 215              	 .cfi_offset 14,-4
 216 0002 00AF     	 add r7,sp,#0
 217              	.LCFI15:
 218              	 .cfi_def_cfa_register 7
 114:../cleanflight/src/main/sensors/acceleration.c ****     resetRollAndPitchTrims(&accelerometerConfigMutable()->accelerometerTrims);
 219              	 .loc 2 114 0
 220 0004 FFF7FEFF 	 bl accelerometerConfigMutable
 221 0008 0346     	 mov r3,r0
 222 000a 0B33     	 adds r3,r3,#11
 223 000c 1846     	 mov r0,r3
 224 000e FFF7FEFF 	 bl resetRollAndPitchTrims
 115:../cleanflight/src/main/sensors/acceleration.c **** }
 225              	 .loc 2 115 0
 226 0012 80BD     	 pop {r7,pc}
 227              	 .cfi_endproc
 228              	.LFE544:
 230              	 .section .text.resetFlightDynamicsTrims,"ax",%progbits
 231              	 .align 2
 232              	 .thumb
 233              	 .thumb_func
 235              	resetFlightDynamicsTrims:
 236              	.LFB545:
 116:../cleanflight/src/main/sensors/acceleration.c **** 
 117:../cleanflight/src/main/sensors/acceleration.c **** static void resetFlightDynamicsTrims(flightDynamicsTrims_t *accZero)
 118:../cleanflight/src/main/sensors/acceleration.c **** {
 237              	 .loc 2 118 0
 238              	 .cfi_startproc
 239              	 
 240              	 
 241              	 
 242 0000 80B4     	 push {r7}
 243              	.LCFI16:
 244              	 .cfi_def_cfa_offset 4
 245              	 .cfi_offset 7,-4
 246 0002 83B0     	 sub sp,sp,#12
 247              	.LCFI17:
 248              	 .cfi_def_cfa_offset 16
 249 0004 00AF     	 add r7,sp,#0
 250              	.LCFI18:
 251              	 .cfi_def_cfa_register 7
 252 0006 7860     	 str r0,[r7,#4]
 119:../cleanflight/src/main/sensors/acceleration.c ****     accZero->values.roll = 0;
 253              	 .loc 2 119 0
 254 0008 7B68     	 ldr r3,[r7,#4]
 255 000a 0022     	 movs r2,#0
 256 000c 1A70     	 strb r2,[r3]
 257 000e 0022     	 movs r2,#0
 258 0010 5A70     	 strb r2,[r3,#1]
 120:../cleanflight/src/main/sensors/acceleration.c ****     accZero->values.pitch = 0;
 259              	 .loc 2 120 0
 260 0012 7B68     	 ldr r3,[r7,#4]
 261 0014 0022     	 movs r2,#0
 262 0016 9A70     	 strb r2,[r3,#2]
 263 0018 0022     	 movs r2,#0
 264 001a DA70     	 strb r2,[r3,#3]
 121:../cleanflight/src/main/sensors/acceleration.c ****     accZero->values.yaw = 0;
 265              	 .loc 2 121 0
 266 001c 7B68     	 ldr r3,[r7,#4]
 267 001e 0022     	 movs r2,#0
 268 0020 1A71     	 strb r2,[r3,#4]
 269 0022 0022     	 movs r2,#0
 270 0024 5A71     	 strb r2,[r3,#5]
 122:../cleanflight/src/main/sensors/acceleration.c **** }
 271              	 .loc 2 122 0
 272 0026 0C37     	 adds r7,r7,#12
 273              	.LCFI19:
 274              	 .cfi_def_cfa_offset 4
 275 0028 BD46     	 mov sp,r7
 276              	.LCFI20:
 277              	 .cfi_def_cfa_register 13
 278              	 
 279 002a 5DF8047B 	 ldr r7,[sp],#4
 280              	.LCFI21:
 281              	 .cfi_restore 7
 282              	 .cfi_def_cfa_offset 0
 283 002e 7047     	 bx lr
 284              	 .cfi_endproc
 285              	.LFE545:
 287              	 .section .text.accResetFlightDynamicsTrims,"ax",%progbits
 288              	 .align 2
 289              	 .global accResetFlightDynamicsTrims
 290              	 .thumb
 291              	 .thumb_func
 293              	accResetFlightDynamicsTrims:
 294              	.LFB546:
 123:../cleanflight/src/main/sensors/acceleration.c **** 
 124:../cleanflight/src/main/sensors/acceleration.c **** void accResetFlightDynamicsTrims(void)
 125:../cleanflight/src/main/sensors/acceleration.c **** {
 295              	 .loc 2 125 0
 296              	 .cfi_startproc
 297              	 
 298              	 
 299 0000 80B5     	 push {r7,lr}
 300              	.LCFI22:
 301              	 .cfi_def_cfa_offset 8
 302              	 .cfi_offset 7,-8
 303              	 .cfi_offset 14,-4
 304 0002 00AF     	 add r7,sp,#0
 305              	.LCFI23:
 306              	 .cfi_def_cfa_register 7
 126:../cleanflight/src/main/sensors/acceleration.c ****     resetFlightDynamicsTrims(&accelerometerConfigMutable()->accZero);
 307              	 .loc 2 126 0
 308 0004 FFF7FEFF 	 bl accelerometerConfigMutable
 309 0008 0346     	 mov r3,r0
 310 000a 0533     	 adds r3,r3,#5
 311 000c 1846     	 mov r0,r3
 312 000e FFF7FEFF 	 bl resetFlightDynamicsTrims
 127:../cleanflight/src/main/sensors/acceleration.c **** }
 313              	 .loc 2 127 0
 314 0012 80BD     	 pop {r7,pc}
 315              	 .cfi_endproc
 316              	.LFE546:
 318              	 .section .text.pgResetFn_accelerometerConfig,"ax",%progbits
 319              	 .align 2
 320              	 .global pgResetFn_accelerometerConfig
 321              	 .thumb
 322              	 .thumb_func
 324              	pgResetFn_accelerometerConfig:
 325              	.LFB547:
 128:../cleanflight/src/main/sensors/acceleration.c **** 
 129:../cleanflight/src/main/sensors/acceleration.c **** void pgResetFn_accelerometerConfig(accelerometerConfig_t *instance)
 130:../cleanflight/src/main/sensors/acceleration.c **** {
 326              	 .loc 2 130 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330 0000 80B5     	 push {r7,lr}
 331              	.LCFI24:
 332              	 .cfi_def_cfa_offset 8
 333              	 .cfi_offset 7,-8
 334              	 .cfi_offset 14,-4
 335 0002 82B0     	 sub sp,sp,#8
 336              	.LCFI25:
 337              	 .cfi_def_cfa_offset 16
 338 0004 00AF     	 add r7,sp,#0
 339              	.LCFI26:
 340              	 .cfi_def_cfa_register 7
 341 0006 7860     	 str r0,[r7,#4]
 131:../cleanflight/src/main/sensors/acceleration.c ****     RESET_CONFIG_2(accelerometerConfig_t, instance,
 342              	 .loc 2 131 0
 343 0008 7B68     	 ldr r3,[r7,#4]
 344 000a 1A46     	 mov r2,r3
 345 000c 0F23     	 movs r3,#15
 346 000e 1046     	 mov r0,r2
 347 0010 0021     	 movs r1,#0
 348 0012 1A46     	 mov r2,r3
 349 0014 FFF7FEFF 	 bl memset
 350 0018 7B68     	 ldr r3,[r7,#4]
 351 001a 0022     	 movs r2,#0
 352 001c 42F00A02 	 orr r2,r2,#10
 353 0020 1A70     	 strb r2,[r3]
 354 0022 0022     	 movs r2,#0
 355 0024 5A70     	 strb r2,[r3,#1]
 132:../cleanflight/src/main/sensors/acceleration.c ****         .acc_lpf_hz = 10,
 133:../cleanflight/src/main/sensors/acceleration.c ****         .acc_align = ALIGN_DEFAULT,
 134:../cleanflight/src/main/sensors/acceleration.c ****         .acc_hardware = ACC_DEFAULT,
 135:../cleanflight/src/main/sensors/acceleration.c ****         .acc_high_fsr = false,
 136:../cleanflight/src/main/sensors/acceleration.c ****     );
 137:../cleanflight/src/main/sensors/acceleration.c ****     resetRollAndPitchTrims(&instance->accelerometerTrims);
 356              	 .loc 2 137 0
 357 0026 7B68     	 ldr r3,[r7,#4]
 358 0028 0B33     	 adds r3,r3,#11
 359 002a 1846     	 mov r0,r3
 360 002c FFF7FEFF 	 bl resetRollAndPitchTrims
 138:../cleanflight/src/main/sensors/acceleration.c ****     resetFlightDynamicsTrims(&instance->accZero);
 361              	 .loc 2 138 0
 362 0030 7B68     	 ldr r3,[r7,#4]
 363 0032 0533     	 adds r3,r3,#5
 364 0034 1846     	 mov r0,r3
 365 0036 FFF7FEFF 	 bl resetFlightDynamicsTrims
 139:../cleanflight/src/main/sensors/acceleration.c **** }
 366              	 .loc 2 139 0
 367 003a 0837     	 adds r7,r7,#8
 368              	.LCFI27:
 369              	 .cfi_def_cfa_offset 8
 370 003c BD46     	 mov sp,r7
 371              	.LCFI28:
 372              	 .cfi_def_cfa_register 13
 373              	 
 374 003e 80BD     	 pop {r7,pc}
 375              	 .cfi_endproc
 376              	.LFE547:
 378              	 .section .text.accDetect,"ax",%progbits
 379              	 .align 2
 380              	 .global accDetect
 381              	 .thumb
 382              	 .thumb_func
 384              	accDetect:
 385              	.LFB548:
 140:../cleanflight/src/main/sensors/acceleration.c **** 
 141:../cleanflight/src/main/sensors/acceleration.c **** bool accDetect(accDev_t *dev, accelerationSensor_e accHardwareToUse)
 142:../cleanflight/src/main/sensors/acceleration.c **** {
 386              	 .loc 2 142 0
 387              	 .cfi_startproc
 388              	 
 389              	 
 390 0000 80B5     	 push {r7,lr}
 391              	.LCFI29:
 392              	 .cfi_def_cfa_offset 8
 393              	 .cfi_offset 7,-8
 394              	 .cfi_offset 14,-4
 395 0002 84B0     	 sub sp,sp,#16
 396              	.LCFI30:
 397              	 .cfi_def_cfa_offset 24
 398 0004 00AF     	 add r7,sp,#0
 399              	.LCFI31:
 400              	 .cfi_def_cfa_register 7
 401 0006 7860     	 str r0,[r7,#4]
 402 0008 0B46     	 mov r3,r1
 403 000a FB70     	 strb r3,[r7,#3]
 143:../cleanflight/src/main/sensors/acceleration.c ****     accelerationSensor_e accHardware = ACC_NONE;
 404              	 .loc 2 143 0
 405 000c 0123     	 movs r3,#1
 406 000e FB73     	 strb r3,[r7,#15]
 407              	.L15:
 144:../cleanflight/src/main/sensors/acceleration.c **** 
 145:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_ADXL345
 146:../cleanflight/src/main/sensors/acceleration.c ****     drv_adxl345_config_t acc_params;
 147:../cleanflight/src/main/sensors/acceleration.c **** #endif
 148:../cleanflight/src/main/sensors/acceleration.c **** 
 149:../cleanflight/src/main/sensors/acceleration.c **** retry:
 150:../cleanflight/src/main/sensors/acceleration.c **** 
 151:../cleanflight/src/main/sensors/acceleration.c ****     switch (accHardwareToUse) {
 408              	 .loc 2 151 0
 409 0010 FB78     	 ldrb r3,[r7,#3]
 410 0012 0C2B     	 cmp r3,#12
 411 0014 46D8     	 bhi .L16
 412 0016 01A2     	 adr r2,.L18
 413 0018 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 414              	 .p2align 2
 415              	.L18:
 416 001c 51000000 	 .word .L17+1
 417 0020 A5000000 	 .word .L16+1
 418 0024 A5000000 	 .word .L16+1
 419 0028 A5000000 	 .word .L16+1
 420 002c A5000000 	 .word .L16+1
 421 0030 A5000000 	 .word .L16+1
 422 0034 A5000000 	 .word .L16+1
 423 0038 A5000000 	 .word .L16+1
 424 003c 51000000 	 .word .L17+1
 425 0040 A5000000 	 .word .L16+1
 426 0044 51000000 	 .word .L17+1
 427 0048 51000000 	 .word .L17+1
 428 004c 51000000 	 .word .L17+1
 429              	 .p2align 1
 430              	.L17:
 152:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_DEFAULT:
 153:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 154:../cleanflight/src/main/sensors/acceleration.c **** 
 155:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_ADXL345
 156:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_ADXL345: // ADXL345
 157:../cleanflight/src/main/sensors/acceleration.c ****         acc_params.useFifo = false;
 158:../cleanflight/src/main/sensors/acceleration.c ****         acc_params.dataRate = 800; // unused currently
 159:../cleanflight/src/main/sensors/acceleration.c ****         if (adxl345Detect(&acc_params, dev)) {
 160:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_ADXL345_ALIGN
 161:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_ADXL345_ALIGN;
 162:../cleanflight/src/main/sensors/acceleration.c **** #endif
 163:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_ADXL345;
 164:../cleanflight/src/main/sensors/acceleration.c ****             break;
 165:../cleanflight/src/main/sensors/acceleration.c ****         }
 166:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 167:../cleanflight/src/main/sensors/acceleration.c **** #endif
 168:../cleanflight/src/main/sensors/acceleration.c **** 
 169:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_LSM303DLHC
 170:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_LSM303DLHC:
 171:../cleanflight/src/main/sensors/acceleration.c ****         if (lsm303dlhcAccDetect(dev)) {
 172:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_LSM303DLHC_ALIGN
 173:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_LSM303DLHC_ALIGN;
 174:../cleanflight/src/main/sensors/acceleration.c **** #endif
 175:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_LSM303DLHC;
 176:../cleanflight/src/main/sensors/acceleration.c ****             break;
 177:../cleanflight/src/main/sensors/acceleration.c ****         }
 178:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 179:../cleanflight/src/main/sensors/acceleration.c **** #endif
 180:../cleanflight/src/main/sensors/acceleration.c **** 
 181:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_MPU6050
 182:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_MPU6050: // MPU6050
 183:../cleanflight/src/main/sensors/acceleration.c ****         if (mpu6050AccDetect(dev)) {
 184:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_MPU6050_ALIGN
 185:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_MPU6050_ALIGN;
 186:../cleanflight/src/main/sensors/acceleration.c **** #endif
 187:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_MPU6050;
 188:../cleanflight/src/main/sensors/acceleration.c ****             break;
 189:../cleanflight/src/main/sensors/acceleration.c ****         }
 190:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 191:../cleanflight/src/main/sensors/acceleration.c **** #endif
 192:../cleanflight/src/main/sensors/acceleration.c **** 
 193:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_MMA8452
 194:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_MMA8452: // MMA8452
 195:../cleanflight/src/main/sensors/acceleration.c ****         if (mma8452Detect(dev)) {
 196:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_MMA8452_ALIGN
 197:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_MMA8452_ALIGN;
 198:../cleanflight/src/main/sensors/acceleration.c **** #endif
 199:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_MMA8452;
 200:../cleanflight/src/main/sensors/acceleration.c ****             break;
 201:../cleanflight/src/main/sensors/acceleration.c ****         }
 202:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 203:../cleanflight/src/main/sensors/acceleration.c **** #endif
 204:../cleanflight/src/main/sensors/acceleration.c **** 
 205:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_BMA280
 206:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_BMA280: // BMA280
 207:../cleanflight/src/main/sensors/acceleration.c ****         if (bma280Detect(dev)) {
 208:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_BMA280_ALIGN
 209:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_BMA280_ALIGN;
 210:../cleanflight/src/main/sensors/acceleration.c **** #endif
 211:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_BMA280;
 212:../cleanflight/src/main/sensors/acceleration.c ****             break;
 213:../cleanflight/src/main/sensors/acceleration.c ****         }
 214:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 215:../cleanflight/src/main/sensors/acceleration.c **** #endif
 216:../cleanflight/src/main/sensors/acceleration.c **** 
 217:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_SPI_MPU6000
 218:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_MPU6000:
 219:../cleanflight/src/main/sensors/acceleration.c ****         if (mpu6000SpiAccDetect(dev)) {
 220:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_MPU6000_ALIGN
 221:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_MPU6000_ALIGN;
 222:../cleanflight/src/main/sensors/acceleration.c **** #endif
 223:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_MPU6000;
 224:../cleanflight/src/main/sensors/acceleration.c ****             break;
 225:../cleanflight/src/main/sensors/acceleration.c ****         }
 226:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 227:../cleanflight/src/main/sensors/acceleration.c **** #endif
 228:../cleanflight/src/main/sensors/acceleration.c **** 
 229:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_SPI_MPU9250
 230:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_MPU9250:
 231:../cleanflight/src/main/sensors/acceleration.c ****         if (mpu9250SpiAccDetect(dev)) {
 232:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_MPU9250_ALIGN
 233:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_MPU9250_ALIGN;
 234:../cleanflight/src/main/sensors/acceleration.c **** #endif
 235:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_MPU9250;
 236:../cleanflight/src/main/sensors/acceleration.c ****             break;
 237:../cleanflight/src/main/sensors/acceleration.c ****         }
 238:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 239:../cleanflight/src/main/sensors/acceleration.c **** #endif
 240:../cleanflight/src/main/sensors/acceleration.c **** 
 241:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_MPU6500:
 242:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_ICM20601:
 243:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_ICM20602:
 244:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_ICM20608G:
 245:../cleanflight/src/main/sensors/acceleration.c **** #if defined(USE_ACC_MPU6500) || defined(USE_ACC_SPI_MPU6500)
 246:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_SPI_MPU6500
 247:../cleanflight/src/main/sensors/acceleration.c ****         if (mpu6500AccDetect(dev) || mpu6500SpiAccDetect(dev)) {
 248:../cleanflight/src/main/sensors/acceleration.c **** #else
 249:../cleanflight/src/main/sensors/acceleration.c ****         if (mpu6500AccDetect(dev)) {
 431              	 .loc 2 249 0
 432 0050 7868     	 ldr r0,[r7,#4]
 433 0052 FFF7FEFF 	 bl mpu6500AccDetect
 434 0056 0346     	 mov r3,r0
 435 0058 002B     	 cmp r3,#0
 436 005a 23D0     	 beq .L16
 250:../cleanflight/src/main/sensors/acceleration.c **** #endif
 251:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_MPU6500_ALIGN
 252:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_MPU6500_ALIGN;
 437              	 .loc 2 252 0
 438 005c 7B68     	 ldr r3,[r7,#4]
 439 005e 0122     	 movs r2,#1
 440 0060 DA76     	 strb r2,[r3,#27]
 253:../cleanflight/src/main/sensors/acceleration.c **** #endif
 254:../cleanflight/src/main/sensors/acceleration.c ****             switch (dev->mpuDetectionResult.sensor) {
 441              	 .loc 2 254 0
 442 0062 7B68     	 ldr r3,[r7,#4]
 443 0064 5B7E     	 ldrb r3,[r3,#25]
 444 0066 063B     	 subs r3,r3,#6
 445 0068 032B     	 cmp r3,#3
 446 006a 17D8     	 bhi .L19
 447 006c 01A2     	 adr r2,.L21
 448 006e 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 449 0072 00BF     	 .p2align 2
 450              	.L21:
 451 0074 85000000 	 .word .L20+1
 452 0078 8B000000 	 .word .L22+1
 453 007c 91000000 	 .word .L23+1
 454 0080 97000000 	 .word .L24+1
 455              	 .p2align 1
 456              	.L20:
 255:../cleanflight/src/main/sensors/acceleration.c ****             case MPU_9250_SPI:
 256:../cleanflight/src/main/sensors/acceleration.c ****                 accHardware = ACC_MPU9250;
 457              	 .loc 2 256 0
 458 0084 0923     	 movs r3,#9
 459 0086 FB73     	 strb r3,[r7,#15]
 257:../cleanflight/src/main/sensors/acceleration.c ****                 break;
 460              	 .loc 2 257 0
 461 0088 0BE0     	 b .L25
 462              	.L22:
 258:../cleanflight/src/main/sensors/acceleration.c ****             case ICM_20601_SPI:
 259:../cleanflight/src/main/sensors/acceleration.c ****                 accHardware = ACC_ICM20601;
 463              	 .loc 2 259 0
 464 008a 0A23     	 movs r3,#10
 465 008c FB73     	 strb r3,[r7,#15]
 260:../cleanflight/src/main/sensors/acceleration.c ****                 break;
 466              	 .loc 2 260 0
 467 008e 08E0     	 b .L25
 468              	.L23:
 261:../cleanflight/src/main/sensors/acceleration.c ****             case ICM_20602_SPI:
 262:../cleanflight/src/main/sensors/acceleration.c ****                 accHardware = ACC_ICM20602;
 469              	 .loc 2 262 0
 470 0090 0B23     	 movs r3,#11
 471 0092 FB73     	 strb r3,[r7,#15]
 263:../cleanflight/src/main/sensors/acceleration.c ****                 break;
 472              	 .loc 2 263 0
 473 0094 05E0     	 b .L25
 474              	.L24:
 264:../cleanflight/src/main/sensors/acceleration.c ****             case ICM_20608_SPI:
 265:../cleanflight/src/main/sensors/acceleration.c ****                 accHardware = ACC_ICM20608G;
 475              	 .loc 2 265 0
 476 0096 0C23     	 movs r3,#12
 477 0098 FB73     	 strb r3,[r7,#15]
 266:../cleanflight/src/main/sensors/acceleration.c ****                 break;
 478              	 .loc 2 266 0
 479 009a 02E0     	 b .L25
 480              	.L19:
 267:../cleanflight/src/main/sensors/acceleration.c ****             default:
 268:../cleanflight/src/main/sensors/acceleration.c ****                 accHardware = ACC_MPU6500;
 481              	 .loc 2 268 0
 482 009c 0823     	 movs r3,#8
 483 009e FB73     	 strb r3,[r7,#15]
 269:../cleanflight/src/main/sensors/acceleration.c ****             }
 270:../cleanflight/src/main/sensors/acceleration.c ****             break;
 484              	 .loc 2 270 0
 485 00a0 03E0     	 b .L26
 486              	.L25:
 487 00a2 02E0     	 b .L26
 488              	.L16:
 271:../cleanflight/src/main/sensors/acceleration.c ****         }
 272:../cleanflight/src/main/sensors/acceleration.c **** #endif
 273:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 274:../cleanflight/src/main/sensors/acceleration.c **** 
 275:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_SPI_ICM20649
 276:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_ICM20649:
 277:../cleanflight/src/main/sensors/acceleration.c ****         if (icm20649SpiAccDetect(dev)) {
 278:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_ICM20649;
 279:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_ICM20649_ALIGN
 280:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_ICM20649_ALIGN;
 281:../cleanflight/src/main/sensors/acceleration.c **** #endif
 282:../cleanflight/src/main/sensors/acceleration.c ****             break;
 283:../cleanflight/src/main/sensors/acceleration.c ****         }
 284:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 285:../cleanflight/src/main/sensors/acceleration.c **** #endif
 286:../cleanflight/src/main/sensors/acceleration.c **** 
 287:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACC_SPI_ICM20689
 288:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_ICM20689:
 289:../cleanflight/src/main/sensors/acceleration.c ****         if (icm20689SpiAccDetect(dev)) {
 290:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_ICM20689;
 291:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_ICM20689_ALIGN
 292:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_ICM20689_ALIGN;
 293:../cleanflight/src/main/sensors/acceleration.c **** #endif
 294:../cleanflight/src/main/sensors/acceleration.c ****             break;
 295:../cleanflight/src/main/sensors/acceleration.c ****         }
 296:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 297:../cleanflight/src/main/sensors/acceleration.c **** #endif
 298:../cleanflight/src/main/sensors/acceleration.c **** 
 299:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_ACCGYRO_BMI160
 300:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_BMI160:
 301:../cleanflight/src/main/sensors/acceleration.c ****         if (bmi160SpiAccDetect(dev)) {
 302:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_BMI160;
 303:../cleanflight/src/main/sensors/acceleration.c **** #ifdef ACC_BMI160_ALIGN
 304:../cleanflight/src/main/sensors/acceleration.c ****             dev->accAlign = ACC_BMI160_ALIGN;
 305:../cleanflight/src/main/sensors/acceleration.c **** #endif
 306:../cleanflight/src/main/sensors/acceleration.c ****             break;
 307:../cleanflight/src/main/sensors/acceleration.c ****         }
 308:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 309:../cleanflight/src/main/sensors/acceleration.c **** #endif
 310:../cleanflight/src/main/sensors/acceleration.c **** 
 311:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_FAKE_ACC
 312:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_FAKE:
 313:../cleanflight/src/main/sensors/acceleration.c ****         if (fakeAccDetect(dev)) {
 314:../cleanflight/src/main/sensors/acceleration.c ****             accHardware = ACC_FAKE;
 315:../cleanflight/src/main/sensors/acceleration.c ****             break;
 316:../cleanflight/src/main/sensors/acceleration.c ****         }
 317:../cleanflight/src/main/sensors/acceleration.c ****         FALLTHROUGH;
 318:../cleanflight/src/main/sensors/acceleration.c **** #endif
 319:../cleanflight/src/main/sensors/acceleration.c **** 
 320:../cleanflight/src/main/sensors/acceleration.c ****     default:
 321:../cleanflight/src/main/sensors/acceleration.c ****     case ACC_NONE: // disable ACC
 322:../cleanflight/src/main/sensors/acceleration.c ****         accHardware = ACC_NONE;
 489              	 .loc 2 322 0
 490 00a4 0123     	 movs r3,#1
 491 00a6 FB73     	 strb r3,[r7,#15]
 323:../cleanflight/src/main/sensors/acceleration.c ****         break;
 492              	 .loc 2 323 0
 493 00a8 00BF     	 nop
 494              	.L26:
 324:../cleanflight/src/main/sensors/acceleration.c ****     }
 325:../cleanflight/src/main/sensors/acceleration.c **** 
 326:../cleanflight/src/main/sensors/acceleration.c ****     // Found anything? Check if error or ACC is really missing.
 327:../cleanflight/src/main/sensors/acceleration.c ****     if (accHardware == ACC_NONE && accHardwareToUse != ACC_DEFAULT && accHardwareToUse != ACC_NONE)
 495              	 .loc 2 327 0
 496 00aa FB7B     	 ldrb r3,[r7,#15]
 497 00ac 012B     	 cmp r3,#1
 498 00ae 08D1     	 bne .L27
 499              	 .loc 2 327 0 is_stmt 0 discriminator 1
 500 00b0 FB78     	 ldrb r3,[r7,#3]
 501 00b2 002B     	 cmp r3,#0
 502 00b4 05D0     	 beq .L27
 503              	 .loc 2 327 0 discriminator 2
 504 00b6 FB78     	 ldrb r3,[r7,#3]
 505 00b8 012B     	 cmp r3,#1
 506 00ba 02D0     	 beq .L27
 328:../cleanflight/src/main/sensors/acceleration.c ****         // Nothing was found and we have a forced sensor that isn't present.
 329:../cleanflight/src/main/sensors/acceleration.c ****         accHardwareToUse = ACC_DEFAULT;
 507              	 .loc 2 329 0 is_stmt 1
 508 00bc 0023     	 movs r3,#0
 509 00be FB70     	 strb r3,[r7,#3]
 330:../cleanflight/src/main/sensors/acceleration.c ****         goto retry;
 510              	 .loc 2 330 0
 511 00c0 A6E7     	 b .L15
 512              	.L27:
 331:../cleanflight/src/main/sensors/acceleration.c ****     }
 332:../cleanflight/src/main/sensors/acceleration.c **** 
 333:../cleanflight/src/main/sensors/acceleration.c ****     if (accHardware == ACC_NONE) {
 513              	 .loc 2 333 0
 514 00c2 FB7B     	 ldrb r3,[r7,#15]
 515 00c4 012B     	 cmp r3,#1
 516 00c6 01D1     	 bne .L28
 334:../cleanflight/src/main/sensors/acceleration.c ****         return false;
 517              	 .loc 2 334 0
 518 00c8 0023     	 movs r3,#0
 519 00ca 06E0     	 b .L29
 520              	.L28:
 335:../cleanflight/src/main/sensors/acceleration.c ****     }
 336:../cleanflight/src/main/sensors/acceleration.c **** 
 337:../cleanflight/src/main/sensors/acceleration.c ****     detectedSensors[SENSOR_INDEX_ACC] = accHardware;
 521              	 .loc 2 337 0
 522 00cc 054A     	 ldr r2,.L30
 523 00ce FB7B     	 ldrb r3,[r7,#15]
 524 00d0 5370     	 strb r3,[r2,#1]
 338:../cleanflight/src/main/sensors/acceleration.c ****     sensorsSet(SENSOR_ACC);
 525              	 .loc 2 338 0
 526 00d2 0220     	 movs r0,#2
 527 00d4 FFF7FEFF 	 bl sensorsSet
 339:../cleanflight/src/main/sensors/acceleration.c ****     return true;
 528              	 .loc 2 339 0
 529 00d8 0123     	 movs r3,#1
 530              	.L29:
 340:../cleanflight/src/main/sensors/acceleration.c **** }
 531              	 .loc 2 340 0
 532 00da 1846     	 mov r0,r3
 533 00dc 1037     	 adds r7,r7,#16
 534              	.LCFI32:
 535              	 .cfi_def_cfa_offset 8
 536 00de BD46     	 mov sp,r7
 537              	.LCFI33:
 538              	 .cfi_def_cfa_register 13
 539              	 
 540 00e0 80BD     	 pop {r7,pc}
 541              	.L31:
 542 00e2 00BF     	 .align 2
 543              	.L30:
 544 00e4 00000000 	 .word detectedSensors
 545              	 .cfi_endproc
 546              	.LFE548:
 548              	 .section .text.accInit,"ax",%progbits
 549              	 .align 2
 550              	 .global accInit
 551              	 .thumb
 552              	 .thumb_func
 554              	accInit:
 555              	.LFB549:
 341:../cleanflight/src/main/sensors/acceleration.c **** 
 342:../cleanflight/src/main/sensors/acceleration.c **** bool accInit(uint32_t gyroSamplingInverval)
 343:../cleanflight/src/main/sensors/acceleration.c **** {
 556              	 .loc 2 343 0
 557              	 .cfi_startproc
 558              	 
 559              	 
 560 0000 80B5     	 push {r7,lr}
 561              	.LCFI34:
 562              	 .cfi_def_cfa_offset 8
 563              	 .cfi_offset 7,-8
 564              	 .cfi_offset 14,-4
 565 0002 84B0     	 sub sp,sp,#16
 566              	.LCFI35:
 567              	 .cfi_def_cfa_offset 24
 568 0004 00AF     	 add r7,sp,#0
 569              	.LCFI36:
 570              	 .cfi_def_cfa_register 7
 571 0006 7860     	 str r0,[r7,#4]
 344:../cleanflight/src/main/sensors/acceleration.c ****     memset(&acc, 0, sizeof(acc));
 572              	 .loc 2 344 0
 573 0008 5048     	 ldr r0,.L43
 574 000a 0021     	 movs r1,#0
 575 000c 3222     	 movs r2,#50
 576 000e FFF7FEFF 	 bl memset
 345:../cleanflight/src/main/sensors/acceleration.c ****     // copy over the common gyro mpu settings
 346:../cleanflight/src/main/sensors/acceleration.c ****     acc.dev.bus = *gyroSensorBus();
 577              	 .loc 2 346 0
 578 0012 FFF7FEFF 	 bl gyroSensorBus
 579 0016 0246     	 mov r2,r0
 580 0018 4C4B     	 ldr r3,.L43
 581 001a 0833     	 adds r3,r3,#8
 582 001c 1068     	 ldr r0,[r2]
 583 001e 5168     	 ldr r1,[r2,#4]
 584 0020 1860     	 str r0,[r3]
 585 0022 5960     	 str r1,[r3,#4]
 586 0024 127A     	 ldrb r2,[r2,#8]
 587 0026 1A72     	 strb r2,[r3,#8]
 347:../cleanflight/src/main/sensors/acceleration.c ****     acc.dev.mpuDetectionResult = *gyroMpuDetectionResult();
 588              	 .loc 2 347 0
 589 0028 FFF7FEFF 	 bl gyroMpuDetectionResult
 590 002c 0246     	 mov r2,r0
 591 002e 474B     	 ldr r3,.L43
 592 0030 1933     	 adds r3,r3,#25
 593 0032 1288     	 ldrh r2,[r2]
 594 0034 1A80     	 strh r2,[r3]
 348:../cleanflight/src/main/sensors/acceleration.c ****     acc.dev.acc_high_fsr = accelerometerConfig()->acc_high_fsr;
 595              	 .loc 2 348 0
 596 0036 FFF7FEFF 	 bl accelerometerConfig
 597 003a 0346     	 mov r3,r0
 598 003c 1A79     	 ldrb r2,[r3,#4]
 599 003e 434B     	 ldr r3,.L43
 600 0040 5A77     	 strb r2,[r3,#29]
 349:../cleanflight/src/main/sensors/acceleration.c **** 
 350:../cleanflight/src/main/sensors/acceleration.c **** #ifdef USE_DUAL_GYRO
 351:../cleanflight/src/main/sensors/acceleration.c ****     if (gyroConfig()->gyro_to_use == GYRO_CONFIG_USE_GYRO_2) {
 352:../cleanflight/src/main/sensors/acceleration.c ****         acc.dev.accAlign = ACC_2_ALIGN;
 353:../cleanflight/src/main/sensors/acceleration.c ****     } else {
 354:../cleanflight/src/main/sensors/acceleration.c ****         acc.dev.accAlign = ACC_1_ALIGN;
 355:../cleanflight/src/main/sensors/acceleration.c ****     }
 356:../cleanflight/src/main/sensors/acceleration.c **** #else
 357:../cleanflight/src/main/sensors/acceleration.c ****     acc.dev.accAlign = ALIGN_DEFAULT;
 601              	 .loc 2 357 0
 602 0042 424B     	 ldr r3,.L43
 603 0044 0022     	 movs r2,#0
 604 0046 DA76     	 strb r2,[r3,#27]
 358:../cleanflight/src/main/sensors/acceleration.c **** #endif
 359:../cleanflight/src/main/sensors/acceleration.c **** 
 360:../cleanflight/src/main/sensors/acceleration.c ****     if (!accDetect(&acc.dev, accelerometerConfig()->acc_hardware)) {
 605              	 .loc 2 360 0
 606 0048 FFF7FEFF 	 bl accelerometerConfig
 607 004c 0346     	 mov r3,r0
 608 004e DB78     	 ldrb r3,[r3,#3]
 609 0050 3E48     	 ldr r0,.L43
 610 0052 1946     	 mov r1,r3
 611 0054 FFF7FEFF 	 bl accDetect
 612 0058 0346     	 mov r3,r0
 613 005a 83F00103 	 eor r3,r3,#1
 614 005e DBB2     	 uxtb r3,r3
 615 0060 002B     	 cmp r3,#0
 616 0062 01D0     	 beq .L33
 361:../cleanflight/src/main/sensors/acceleration.c ****         return false;
 617              	 .loc 2 361 0
 618 0064 0023     	 movs r3,#0
 619 0066 6CE0     	 b .L34
 620              	.L33:
 362:../cleanflight/src/main/sensors/acceleration.c ****     }
 363:../cleanflight/src/main/sensors/acceleration.c ****     acc.dev.acc_1G = 256; // set default
 621              	 .loc 2 363 0
 622 0068 384B     	 ldr r3,.L43
 623 006a 0022     	 movs r2,#0
 624 006c 5A74     	 strb r2,[r3,#17]
 625 006e 0022     	 movs r2,#0
 626 0070 42F00102 	 orr r2,r2,#1
 627 0074 9A74     	 strb r2,[r3,#18]
 364:../cleanflight/src/main/sensors/acceleration.c ****     acc.dev.initFn(&acc.dev); // driver initialisation
 628              	 .loc 2 364 0
 629 0076 354B     	 ldr r3,.L43
 630 0078 1B68     	 ldr r3,[r3]
 631 007a 3448     	 ldr r0,.L43
 632 007c 9847     	 blx r3
 365:../cleanflight/src/main/sensors/acceleration.c ****     // set the acc sampling interval according to the gyro sampling interval
 366:../cleanflight/src/main/sensors/acceleration.c ****     switch (gyroSamplingInverval) {  // Switch statement kept in place to change acc sampling inter
 633              	 .loc 2 366 0
 634 007e 7B68     	 ldr r3,[r7,#4]
 635 0080 FA2B     	 cmp r3,#250
 636 0082 0BD0     	 beq .L36
 637 0084 FA2B     	 cmp r3,#250
 638 0086 02D8     	 bhi .L37
 639 0088 7D2B     	 cmp r3,#125
 640 008a 07D0     	 beq .L36
 641 008c 18E0     	 b .L35
 642              	.L37:
 643 008e 40F27712 	 movw r2,#375
 644 0092 9342     	 cmp r3,r2
 645 0094 02D0     	 beq .L36
 646 0096 B3F5FA7F 	 cmp r3,#500
 647 009a 11D1     	 bne .L35
 648              	.L36:
 367:../cleanflight/src/main/sensors/acceleration.c ****     case 500:
 368:../cleanflight/src/main/sensors/acceleration.c ****     case 375:
 369:../cleanflight/src/main/sensors/acceleration.c ****     case 250:
 370:../cleanflight/src/main/sensors/acceleration.c ****     case 125:
 371:../cleanflight/src/main/sensors/acceleration.c ****         acc.accSamplingInterval = 1000;
 649              	 .loc 2 371 0
 650 009c 2B4B     	 ldr r3,.L43
 651 009e 0022     	 movs r2,#0
 652 00a0 62F01702 	 orn r2,r2,#23
 653 00a4 83F82120 	 strb r2,[r3,#33]
 654 00a8 0022     	 movs r2,#0
 655 00aa 42F00302 	 orr r2,r2,#3
 656 00ae 83F82220 	 strb r2,[r3,#34]
 657 00b2 0022     	 movs r2,#0
 658 00b4 83F82320 	 strb r2,[r3,#35]
 659 00b8 0022     	 movs r2,#0
 660 00ba 83F82420 	 strb r2,[r3,#36]
 372:../cleanflight/src/main/sensors/acceleration.c ****         break;
 661              	 .loc 2 372 0
 662 00be 10E0     	 b .L38
 663              	.L35:
 373:../cleanflight/src/main/sensors/acceleration.c ****     case 1000:
 374:../cleanflight/src/main/sensors/acceleration.c ****     default:
 375:../cleanflight/src/main/sensors/acceleration.c **** #ifdef STM32F10X
 376:../cleanflight/src/main/sensors/acceleration.c ****         acc.accSamplingInterval = 1000;
 377:../cleanflight/src/main/sensors/acceleration.c **** #else
 378:../cleanflight/src/main/sensors/acceleration.c ****         acc.accSamplingInterval = 1000;
 664              	 .loc 2 378 0
 665 00c0 224B     	 ldr r3,.L43
 666 00c2 0022     	 movs r2,#0
 667 00c4 62F01702 	 orn r2,r2,#23
 668 00c8 83F82120 	 strb r2,[r3,#33]
 669 00cc 0022     	 movs r2,#0
 670 00ce 42F00302 	 orr r2,r2,#3
 671 00d2 83F82220 	 strb r2,[r3,#34]
 672 00d6 0022     	 movs r2,#0
 673 00d8 83F82320 	 strb r2,[r3,#35]
 674 00dc 0022     	 movs r2,#0
 675 00de 83F82420 	 strb r2,[r3,#36]
 676              	.L38:
 379:../cleanflight/src/main/sensors/acceleration.c **** #endif
 380:../cleanflight/src/main/sensors/acceleration.c ****     }
 381:../cleanflight/src/main/sensors/acceleration.c ****     if (accLpfCutHz) {
 677              	 .loc 2 381 0
 678 00e2 1B4B     	 ldr r3,.L43+4
 679 00e4 1B88     	 ldrh r3,[r3]
 680 00e6 002B     	 cmp r3,#0
 681 00e8 1ED0     	 beq .L39
 682              	.LBB2:
 382:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 683              	 .loc 2 382 0
 684 00ea 0023     	 movs r3,#0
 685 00ec FB60     	 str r3,[r7,#12]
 686 00ee 18E0     	 b .L40
 687              	.L41:
 383:../cleanflight/src/main/sensors/acceleration.c ****             biquadFilterInitLPF(&accFilter[axis], accLpfCutHz, acc.accSamplingInterval);
 688              	 .loc 2 383 0 discriminator 3
 689 00f0 FA68     	 ldr r2,[r7,#12]
 690 00f2 1346     	 mov r3,r2
 691 00f4 DB00     	 lsls r3,r3,#3
 692 00f6 1344     	 add r3,r3,r2
 693 00f8 9B00     	 lsls r3,r3,#2
 694 00fa 164A     	 ldr r2,.L43+8
 695 00fc 1A44     	 add r2,r2,r3
 696 00fe 144B     	 ldr r3,.L43+4
 697 0100 1B88     	 ldrh r3,[r3]
 698 0102 07EE903A 	 fmsr s15,r3
 699 0106 F8EE677A 	 fuitos s15,s15
 700 010a 104B     	 ldr r3,.L43
 701 010c D3F82130 	 ldr r3,[r3,#33]
 702 0110 1046     	 mov r0,r2
 703 0112 17EE901A 	 fmrs r1,s15
 704 0116 1A46     	 mov r2,r3
 705 0118 FFF7FEFF 	 bl biquadFilterInitLPF
 382:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 706              	 .loc 2 382 0 discriminator 3
 707 011c FB68     	 ldr r3,[r7,#12]
 708 011e 0133     	 adds r3,r3,#1
 709 0120 FB60     	 str r3,[r7,#12]
 710              	.L40:
 382:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 711              	 .loc 2 382 0 is_stmt 0 discriminator 1
 712 0122 FB68     	 ldr r3,[r7,#12]
 713 0124 022B     	 cmp r3,#2
 714 0126 E3DD     	 ble .L41
 715              	.L39:
 716              	.LBE2:
 384:../cleanflight/src/main/sensors/acceleration.c ****         }
 385:../cleanflight/src/main/sensors/acceleration.c ****     }
 386:../cleanflight/src/main/sensors/acceleration.c ****     if (accelerometerConfig()->acc_align != ALIGN_DEFAULT) {
 717              	 .loc 2 386 0 is_stmt 1
 718 0128 FFF7FEFF 	 bl accelerometerConfig
 719 012c 0346     	 mov r3,r0
 720 012e 9B78     	 ldrb r3,[r3,#2]
 721 0130 002B     	 cmp r3,#0
 722 0132 05D0     	 beq .L42
 387:../cleanflight/src/main/sensors/acceleration.c ****         acc.dev.accAlign = accelerometerConfig()->acc_align;
 723              	 .loc 2 387 0
 724 0134 FFF7FEFF 	 bl accelerometerConfig
 725 0138 0346     	 mov r3,r0
 726 013a 9A78     	 ldrb r2,[r3,#2]
 727 013c 034B     	 ldr r3,.L43
 728 013e DA76     	 strb r2,[r3,#27]
 729              	.L42:
 388:../cleanflight/src/main/sensors/acceleration.c ****     }
 389:../cleanflight/src/main/sensors/acceleration.c ****     return true;
 730              	 .loc 2 389 0
 731 0140 0123     	 movs r3,#1
 732              	.L34:
 390:../cleanflight/src/main/sensors/acceleration.c **** }
 733              	 .loc 2 390 0
 734 0142 1846     	 mov r0,r3
 735 0144 1037     	 adds r7,r7,#16
 736              	.LCFI37:
 737              	 .cfi_def_cfa_offset 8
 738 0146 BD46     	 mov sp,r7
 739              	.LCFI38:
 740              	 .cfi_def_cfa_register 13
 741              	 
 742 0148 80BD     	 pop {r7,pc}
 743              	.L44:
 744 014a 00BF     	 .align 2
 745              	.L43:
 746 014c 00000000 	 .word acc
 747 0150 00000000 	 .word accLpfCutHz
 748 0154 00000000 	 .word accFilter
 749              	 .cfi_endproc
 750              	.LFE549:
 752              	 .section .text.accSetCalibrationCycles,"ax",%progbits
 753              	 .align 2
 754              	 .global accSetCalibrationCycles
 755              	 .thumb
 756              	 .thumb_func
 758              	accSetCalibrationCycles:
 759              	.LFB550:
 391:../cleanflight/src/main/sensors/acceleration.c **** 
 392:../cleanflight/src/main/sensors/acceleration.c **** void accSetCalibrationCycles(uint16_t calibrationCyclesRequired)
 393:../cleanflight/src/main/sensors/acceleration.c **** {
 760              	 .loc 2 393 0
 761              	 .cfi_startproc
 762              	 
 763              	 
 764              	 
 765 0000 80B4     	 push {r7}
 766              	.LCFI39:
 767              	 .cfi_def_cfa_offset 4
 768              	 .cfi_offset 7,-4
 769 0002 83B0     	 sub sp,sp,#12
 770              	.LCFI40:
 771              	 .cfi_def_cfa_offset 16
 772 0004 00AF     	 add r7,sp,#0
 773              	.LCFI41:
 774              	 .cfi_def_cfa_register 7
 775 0006 0346     	 mov r3,r0
 776 0008 FB80     	 strh r3,[r7,#6]
 394:../cleanflight/src/main/sensors/acceleration.c ****     calibratingA = calibrationCyclesRequired;
 777              	 .loc 2 394 0
 778 000a 044A     	 ldr r2,.L46
 779 000c FB88     	 ldrh r3,[r7,#6]
 780 000e 1380     	 strh r3,[r2]
 395:../cleanflight/src/main/sensors/acceleration.c **** }
 781              	 .loc 2 395 0
 782 0010 0C37     	 adds r7,r7,#12
 783              	.LCFI42:
 784              	 .cfi_def_cfa_offset 4
 785 0012 BD46     	 mov sp,r7
 786              	.LCFI43:
 787              	 .cfi_def_cfa_register 13
 788              	 
 789 0014 5DF8047B 	 ldr r7,[sp],#4
 790              	.LCFI44:
 791              	 .cfi_restore 7
 792              	 .cfi_def_cfa_offset 0
 793 0018 7047     	 bx lr
 794              	.L47:
 795 001a 00BF     	 .align 2
 796              	.L46:
 797 001c 00000000 	 .word calibratingA
 798              	 .cfi_endproc
 799              	.LFE550:
 801              	 .section .text.accIsCalibrationComplete,"ax",%progbits
 802              	 .align 2
 803              	 .global accIsCalibrationComplete
 804              	 .thumb
 805              	 .thumb_func
 807              	accIsCalibrationComplete:
 808              	.LFB551:
 396:../cleanflight/src/main/sensors/acceleration.c **** 
 397:../cleanflight/src/main/sensors/acceleration.c **** bool accIsCalibrationComplete(void)
 398:../cleanflight/src/main/sensors/acceleration.c **** {
 809              	 .loc 2 398 0
 810              	 .cfi_startproc
 811              	 
 812              	 
 813              	 
 814 0000 80B4     	 push {r7}
 815              	.LCFI45:
 816              	 .cfi_def_cfa_offset 4
 817              	 .cfi_offset 7,-4
 818 0002 00AF     	 add r7,sp,#0
 819              	.LCFI46:
 820              	 .cfi_def_cfa_register 7
 399:../cleanflight/src/main/sensors/acceleration.c ****     return calibratingA == 0;
 821              	 .loc 2 399 0
 822 0004 054B     	 ldr r3,.L50
 823 0006 1B88     	 ldrh r3,[r3]
 824 0008 002B     	 cmp r3,#0
 825 000a 0CBF     	 ite eq
 826 000c 0123     	 moveq r3,#1
 827 000e 0023     	 movne r3,#0
 828 0010 DBB2     	 uxtb r3,r3
 400:../cleanflight/src/main/sensors/acceleration.c **** }
 829              	 .loc 2 400 0
 830 0012 1846     	 mov r0,r3
 831 0014 BD46     	 mov sp,r7
 832              	.LCFI47:
 833              	 .cfi_def_cfa_register 13
 834              	 
 835 0016 5DF8047B 	 ldr r7,[sp],#4
 836              	.LCFI48:
 837              	 .cfi_restore 7
 838              	 .cfi_def_cfa_offset 0
 839 001a 7047     	 bx lr
 840              	.L51:
 841              	 .align 2
 842              	.L50:
 843 001c 00000000 	 .word calibratingA
 844              	 .cfi_endproc
 845              	.LFE551:
 847              	 .section .text.isOnFinalAccelerationCalibrationCycle,"ax",%progbits
 848              	 .align 2
 849              	 .thumb
 850              	 .thumb_func
 852              	isOnFinalAccelerationCalibrationCycle:
 853              	.LFB552:
 401:../cleanflight/src/main/sensors/acceleration.c **** 
 402:../cleanflight/src/main/sensors/acceleration.c **** static bool isOnFinalAccelerationCalibrationCycle(void)
 403:../cleanflight/src/main/sensors/acceleration.c **** {
 854              	 .loc 2 403 0
 855              	 .cfi_startproc
 856              	 
 857              	 
 858              	 
 859 0000 80B4     	 push {r7}
 860              	.LCFI49:
 861              	 .cfi_def_cfa_offset 4
 862              	 .cfi_offset 7,-4
 863 0002 00AF     	 add r7,sp,#0
 864              	.LCFI50:
 865              	 .cfi_def_cfa_register 7
 404:../cleanflight/src/main/sensors/acceleration.c ****     return calibratingA == 1;
 866              	 .loc 2 404 0
 867 0004 054B     	 ldr r3,.L54
 868 0006 1B88     	 ldrh r3,[r3]
 869 0008 012B     	 cmp r3,#1
 870 000a 0CBF     	 ite eq
 871 000c 0123     	 moveq r3,#1
 872 000e 0023     	 movne r3,#0
 873 0010 DBB2     	 uxtb r3,r3
 405:../cleanflight/src/main/sensors/acceleration.c **** }
 874              	 .loc 2 405 0
 875 0012 1846     	 mov r0,r3
 876 0014 BD46     	 mov sp,r7
 877              	.LCFI51:
 878              	 .cfi_def_cfa_register 13
 879              	 
 880 0016 5DF8047B 	 ldr r7,[sp],#4
 881              	.LCFI52:
 882              	 .cfi_restore 7
 883              	 .cfi_def_cfa_offset 0
 884 001a 7047     	 bx lr
 885              	.L55:
 886              	 .align 2
 887              	.L54:
 888 001c 00000000 	 .word calibratingA
 889              	 .cfi_endproc
 890              	.LFE552:
 892              	 .section .text.isOnFirstAccelerationCalibrationCycle,"ax",%progbits
 893              	 .align 2
 894              	 .thumb
 895              	 .thumb_func
 897              	isOnFirstAccelerationCalibrationCycle:
 898              	.LFB553:
 406:../cleanflight/src/main/sensors/acceleration.c **** 
 407:../cleanflight/src/main/sensors/acceleration.c **** static bool isOnFirstAccelerationCalibrationCycle(void)
 408:../cleanflight/src/main/sensors/acceleration.c **** {
 899              	 .loc 2 408 0
 900              	 .cfi_startproc
 901              	 
 902              	 
 903              	 
 904 0000 80B4     	 push {r7}
 905              	.LCFI53:
 906              	 .cfi_def_cfa_offset 4
 907              	 .cfi_offset 7,-4
 908 0002 00AF     	 add r7,sp,#0
 909              	.LCFI54:
 910              	 .cfi_def_cfa_register 7
 409:../cleanflight/src/main/sensors/acceleration.c ****     return calibratingA == CALIBRATING_ACC_CYCLES;
 911              	 .loc 2 409 0
 912 0004 064B     	 ldr r3,.L58
 913 0006 1B88     	 ldrh r3,[r3]
 914 0008 B3F5C87F 	 cmp r3,#400
 915 000c 0CBF     	 ite eq
 916 000e 0123     	 moveq r3,#1
 917 0010 0023     	 movne r3,#0
 918 0012 DBB2     	 uxtb r3,r3
 410:../cleanflight/src/main/sensors/acceleration.c **** }
 919              	 .loc 2 410 0
 920 0014 1846     	 mov r0,r3
 921 0016 BD46     	 mov sp,r7
 922              	.LCFI55:
 923              	 .cfi_def_cfa_register 13
 924              	 
 925 0018 5DF8047B 	 ldr r7,[sp],#4
 926              	.LCFI56:
 927              	 .cfi_restore 7
 928              	 .cfi_def_cfa_offset 0
 929 001c 7047     	 bx lr
 930              	.L59:
 931 001e 00BF     	 .align 2
 932              	.L58:
 933 0020 00000000 	 .word calibratingA
 934              	 .cfi_endproc
 935              	.LFE553:
 937              	 .section .text.performAcclerationCalibration,"ax",%progbits
 938              	 .align 2
 939              	 .thumb
 940              	 .thumb_func
 942              	performAcclerationCalibration:
 943              	.LFB554:
 411:../cleanflight/src/main/sensors/acceleration.c **** 
 412:../cleanflight/src/main/sensors/acceleration.c **** static void performAcclerationCalibration(rollAndPitchTrims_t *rollAndPitchTrims)
 413:../cleanflight/src/main/sensors/acceleration.c **** {
 944              	 .loc 2 413 0
 945              	 .cfi_startproc
 946              	 
 947              	 
 948 0000 80B5     	 push {r7,lr}
 949              	.LCFI57:
 950              	 .cfi_def_cfa_offset 8
 951              	 .cfi_offset 7,-8
 952              	 .cfi_offset 14,-4
 953 0002 84B0     	 sub sp,sp,#16
 954              	.LCFI58:
 955              	 .cfi_def_cfa_offset 24
 956 0004 00AF     	 add r7,sp,#0
 957              	.LCFI59:
 958              	 .cfi_def_cfa_register 7
 959 0006 7860     	 str r0,[r7,#4]
 960              	.LBB3:
 414:../cleanflight/src/main/sensors/acceleration.c ****     static int32_t a[3];
 415:../cleanflight/src/main/sensors/acceleration.c **** 
 416:../cleanflight/src/main/sensors/acceleration.c ****     for (int axis = 0; axis < 3; axis++) {
 961              	 .loc 2 416 0
 962 0008 0023     	 movs r3,#0
 963 000a FB60     	 str r3,[r7,#12]
 964 000c 3AE0     	 b .L61
 965              	.L63:
 417:../cleanflight/src/main/sensors/acceleration.c **** 
 418:../cleanflight/src/main/sensors/acceleration.c ****         // Reset a[axis] at start of calibration
 419:../cleanflight/src/main/sensors/acceleration.c ****         if (isOnFirstAccelerationCalibrationCycle()) {
 966              	 .loc 2 419 0
 967 000e FFF7FEFF 	 bl isOnFirstAccelerationCalibrationCycle
 968 0012 0346     	 mov r3,r0
 969 0014 002B     	 cmp r3,#0
 970 0016 04D0     	 beq .L62
 420:../cleanflight/src/main/sensors/acceleration.c ****             a[axis] = 0;
 971              	 .loc 2 420 0
 972 0018 3C4A     	 ldr r2,.L65
 973 001a FB68     	 ldr r3,[r7,#12]
 974 001c 0021     	 movs r1,#0
 975 001e 42F82310 	 str r1,[r2,r3,lsl#2]
 976              	.L62:
 421:../cleanflight/src/main/sensors/acceleration.c ****         }
 422:../cleanflight/src/main/sensors/acceleration.c **** 
 423:../cleanflight/src/main/sensors/acceleration.c ****         // Sum up CALIBRATING_ACC_CYCLES readings
 424:../cleanflight/src/main/sensors/acceleration.c ****         a[axis] += acc.accADC[axis];
 977              	 .loc 2 424 0 discriminator 2
 978 0022 3A4A     	 ldr r2,.L65
 979 0024 FB68     	 ldr r3,[r7,#12]
 980 0026 52F82330 	 ldr r3,[r2,r3,lsl#2]
 981 002a 07EE903A 	 fmsr s15,r3
 982 002e F8EEE77A 	 fsitos s15,s15
 983 0032 374A     	 ldr r2,.L65+4
 984 0034 FB68     	 ldr r3,[r7,#12]
 985 0036 0833     	 adds r3,r3,#8
 986 0038 9B00     	 lsls r3,r3,#2
 987 003a 1344     	 add r3,r3,r2
 988 003c D3F80530 	 ldr r3,[r3,#5]
 989 0040 07EE103A 	 fmsr s14,r3
 990 0044 77EE877A 	 fadds s15,s15,s14
 991 0048 FDEEE77A 	 ftosizs s15,s15
 992 004c 17EE901A 	 fmrs r1,s15
 993 0050 2E4A     	 ldr r2,.L65
 994 0052 FB68     	 ldr r3,[r7,#12]
 995 0054 42F82310 	 str r1,[r2,r3,lsl#2]
 425:../cleanflight/src/main/sensors/acceleration.c **** 
 426:../cleanflight/src/main/sensors/acceleration.c ****         // Reset global variables to prevent other code from using un-calibrated data
 427:../cleanflight/src/main/sensors/acceleration.c ****         acc.accADC[axis] = 0;
 996              	 .loc 2 427 0 discriminator 2
 997 0058 2D4A     	 ldr r2,.L65+4
 998 005a FB68     	 ldr r3,[r7,#12]
 999 005c 0833     	 adds r3,r3,#8
 1000 005e 9B00     	 lsls r3,r3,#2
 1001 0060 1344     	 add r3,r3,r2
 1002 0062 0533     	 adds r3,r3,#5
 1003 0064 4FF00002 	 mov r2,#0
 1004 0068 1A60     	 str r2,[r3]
 428:../cleanflight/src/main/sensors/acceleration.c ****         accelerationTrims->raw[axis] = 0;
 1005              	 .loc 2 428 0 discriminator 2
 1006 006a 2A4B     	 ldr r3,.L65+8
 1007 006c 1A68     	 ldr r2,[r3]
 1008 006e FB68     	 ldr r3,[r7,#12]
 1009 0070 0021     	 movs r1,#0
 1010 0072 02F81310 	 strb r1,[r2,r3,lsl#1]
 1011 0076 5B00     	 lsls r3,r3,#1
 1012 0078 1344     	 add r3,r3,r2
 1013 007a 0022     	 movs r2,#0
 1014 007c 5A70     	 strb r2,[r3,#1]
 416:../cleanflight/src/main/sensors/acceleration.c **** 
 1015              	 .loc 2 416 0 discriminator 2
 1016 007e FB68     	 ldr r3,[r7,#12]
 1017 0080 0133     	 adds r3,r3,#1
 1018 0082 FB60     	 str r3,[r7,#12]
 1019              	.L61:
 416:../cleanflight/src/main/sensors/acceleration.c **** 
 1020              	 .loc 2 416 0 is_stmt 0 discriminator 1
 1021 0084 FB68     	 ldr r3,[r7,#12]
 1022 0086 022B     	 cmp r3,#2
 1023 0088 C1DD     	 ble .L63
 1024              	.LBE3:
 429:../cleanflight/src/main/sensors/acceleration.c ****     }
 430:../cleanflight/src/main/sensors/acceleration.c **** 
 431:../cleanflight/src/main/sensors/acceleration.c ****     if (isOnFinalAccelerationCalibrationCycle()) {
 1025              	 .loc 2 431 0 is_stmt 1
 1026 008a FFF7FEFF 	 bl isOnFinalAccelerationCalibrationCycle
 1027 008e 0346     	 mov r3,r0
 1028 0090 002B     	 cmp r3,#0
 1029 0092 32D0     	 beq .L64
 432:../cleanflight/src/main/sensors/acceleration.c ****         // Calculate average, shift Z down by acc_1G and store values in EEPROM at end of calibrati
 433:../cleanflight/src/main/sensors/acceleration.c ****         accelerationTrims->raw[X] = (a[X] + (CALIBRATING_ACC_CYCLES / 2)) / CALIBRATING_ACC_CYCLES;
 1030              	 .loc 2 433 0
 1031 0094 1F4B     	 ldr r3,.L65+8
 1032 0096 1A68     	 ldr r2,[r3]
 1033 0098 1C4B     	 ldr r3,.L65
 1034 009a 1B68     	 ldr r3,[r3]
 1035 009c C833     	 adds r3,r3,#200
 1036 009e 1E49     	 ldr r1,.L65+12
 1037 00a0 81FB0301 	 smull r0,r1,r1,r3
 1038 00a4 C911     	 asrs r1,r1,#7
 1039 00a6 DB17     	 asrs r3,r3,#31
 1040 00a8 CB1A     	 subs r3,r1,r3
 1041 00aa 9BB2     	 uxth r3,r3
 1042 00ac 1380     	 strh r3,[r2]
 434:../cleanflight/src/main/sensors/acceleration.c ****         accelerationTrims->raw[Y] = (a[Y] + (CALIBRATING_ACC_CYCLES / 2)) / CALIBRATING_ACC_CYCLES;
 1043              	 .loc 2 434 0
 1044 00ae 194B     	 ldr r3,.L65+8
 1045 00b0 1A68     	 ldr r2,[r3]
 1046 00b2 164B     	 ldr r3,.L65
 1047 00b4 5B68     	 ldr r3,[r3,#4]
 1048 00b6 C833     	 adds r3,r3,#200
 1049 00b8 1749     	 ldr r1,.L65+12
 1050 00ba 81FB0301 	 smull r0,r1,r1,r3
 1051 00be C911     	 asrs r1,r1,#7
 1052 00c0 DB17     	 asrs r3,r3,#31
 1053 00c2 CB1A     	 subs r3,r1,r3
 1054 00c4 9BB2     	 uxth r3,r3
 1055 00c6 5380     	 strh r3,[r2,#2]
 435:../cleanflight/src/main/sensors/acceleration.c ****         accelerationTrims->raw[Z] = (a[Z] + (CALIBRATING_ACC_CYCLES / 2)) / CALIBRATING_ACC_CYCLES 
 1056              	 .loc 2 435 0
 1057 00c8 124B     	 ldr r3,.L65+8
 1058 00ca 1A68     	 ldr r2,[r3]
 1059 00cc 0F4B     	 ldr r3,.L65
 1060 00ce 9B68     	 ldr r3,[r3,#8]
 1061 00d0 C833     	 adds r3,r3,#200
 1062 00d2 1149     	 ldr r1,.L65+12
 1063 00d4 81FB0301 	 smull r0,r1,r1,r3
 1064 00d8 C911     	 asrs r1,r1,#7
 1065 00da DB17     	 asrs r3,r3,#31
 1066 00dc CB1A     	 subs r3,r1,r3
 1067 00de 99B2     	 uxth r1,r3
 1068 00e0 0B4B     	 ldr r3,.L65+4
 1069 00e2 B3F81130 	 ldrh r3,[r3,#17]
 1070 00e6 9BB2     	 uxth r3,r3
 1071 00e8 CB1A     	 subs r3,r1,r3
 1072 00ea 9BB2     	 uxth r3,r3
 1073 00ec 9BB2     	 uxth r3,r3
 1074 00ee 9380     	 strh r3,[r2,#4]
 436:../cleanflight/src/main/sensors/acceleration.c **** 
 437:../cleanflight/src/main/sensors/acceleration.c ****         resetRollAndPitchTrims(rollAndPitchTrims);
 1075              	 .loc 2 437 0
 1076 00f0 7868     	 ldr r0,[r7,#4]
 1077 00f2 FFF7FEFF 	 bl resetRollAndPitchTrims
 438:../cleanflight/src/main/sensors/acceleration.c **** 
 439:../cleanflight/src/main/sensors/acceleration.c ****         saveConfigAndNotify();
 1078              	 .loc 2 439 0
 1079 00f6 FFF7FEFF 	 bl saveConfigAndNotify
 1080              	.L64:
 440:../cleanflight/src/main/sensors/acceleration.c ****     }
 441:../cleanflight/src/main/sensors/acceleration.c **** 
 442:../cleanflight/src/main/sensors/acceleration.c ****     calibratingA--;
 1081              	 .loc 2 442 0
 1082 00fa 084B     	 ldr r3,.L65+16
 1083 00fc 1B88     	 ldrh r3,[r3]
 1084 00fe 013B     	 subs r3,r3,#1
 1085 0100 9AB2     	 uxth r2,r3
 1086 0102 064B     	 ldr r3,.L65+16
 1087 0104 1A80     	 strh r2,[r3]
 443:../cleanflight/src/main/sensors/acceleration.c **** }
 1088              	 .loc 2 443 0
 1089 0106 1037     	 adds r7,r7,#16
 1090              	.LCFI60:
 1091              	 .cfi_def_cfa_offset 8
 1092 0108 BD46     	 mov sp,r7
 1093              	.LCFI61:
 1094              	 .cfi_def_cfa_register 13
 1095              	 
 1096 010a 80BD     	 pop {r7,pc}
 1097              	.L66:
 1098              	 .align 2
 1099              	.L65:
 1100 010c 00000000 	 .word a.13233
 1101 0110 00000000 	 .word acc
 1102 0114 00000000 	 .word accelerationTrims
 1103 0118 1F85EB51 	 .word 1374389535
 1104 011c 00000000 	 .word calibratingA
 1105              	 .cfi_endproc
 1106              	.LFE554:
 1108              	 .section .text.performInflightAccelerationCalibration,"ax",%progbits
 1109              	 .align 2
 1110              	 .thumb
 1111              	 .thumb_func
 1113              	performInflightAccelerationCalibration:
 1114              	.LFB555:
 444:../cleanflight/src/main/sensors/acceleration.c **** 
 445:../cleanflight/src/main/sensors/acceleration.c **** static void performInflightAccelerationCalibration(rollAndPitchTrims_t *rollAndPitchTrims)
 446:../cleanflight/src/main/sensors/acceleration.c **** {
 1115              	 .loc 2 446 0
 1116              	 .cfi_startproc
 1117              	 
 1118              	 
 1119 0000 80B5     	 push {r7,lr}
 1120              	.LCFI62:
 1121              	 .cfi_def_cfa_offset 8
 1122              	 .cfi_offset 7,-8
 1123              	 .cfi_offset 14,-4
 1124 0002 84B0     	 sub sp,sp,#16
 1125              	.LCFI63:
 1126              	 .cfi_def_cfa_offset 24
 1127 0004 00AF     	 add r7,sp,#0
 1128              	.LCFI64:
 1129              	 .cfi_def_cfa_register 7
 1130 0006 7860     	 str r0,[r7,#4]
 447:../cleanflight/src/main/sensors/acceleration.c ****     static int32_t b[3];
 448:../cleanflight/src/main/sensors/acceleration.c ****     static int16_t accZero_saved[3] = { 0, 0, 0 };
 449:../cleanflight/src/main/sensors/acceleration.c ****     static rollAndPitchTrims_t angleTrim_saved = { { 0, 0 } };
 450:../cleanflight/src/main/sensors/acceleration.c **** 
 451:../cleanflight/src/main/sensors/acceleration.c ****     // Saving old zeropoints before measurement
 452:../cleanflight/src/main/sensors/acceleration.c ****     if (InflightcalibratingA == 50) {
 1131              	 .loc 2 452 0
 1132 0008 664B     	 ldr r3,.L75
 1133 000a 1B88     	 ldrh r3,[r3]
 1134 000c 322B     	 cmp r3,#50
 1135 000e 20D1     	 bne .L68
 453:../cleanflight/src/main/sensors/acceleration.c ****         accZero_saved[X] = accelerationTrims->raw[X];
 1136              	 .loc 2 453 0
 1137 0010 654B     	 ldr r3,.L75+4
 1138 0012 1B68     	 ldr r3,[r3]
 1139 0014 B3F90030 	 ldrsh r3,[r3]
 1140 0018 9AB2     	 uxth r2,r3
 1141 001a 644B     	 ldr r3,.L75+8
 1142 001c 1A80     	 strh r2,[r3]
 454:../cleanflight/src/main/sensors/acceleration.c ****         accZero_saved[Y] = accelerationTrims->raw[Y];
 1143              	 .loc 2 454 0
 1144 001e 624B     	 ldr r3,.L75+4
 1145 0020 1B68     	 ldr r3,[r3]
 1146 0022 B3F90230 	 ldrsh r3,[r3,#2]
 1147 0026 9AB2     	 uxth r2,r3
 1148 0028 604B     	 ldr r3,.L75+8
 1149 002a 5A80     	 strh r2,[r3,#2]
 455:../cleanflight/src/main/sensors/acceleration.c ****         accZero_saved[Z] = accelerationTrims->raw[Z];
 1150              	 .loc 2 455 0
 1151 002c 5E4B     	 ldr r3,.L75+4
 1152 002e 1B68     	 ldr r3,[r3]
 1153 0030 B3F90430 	 ldrsh r3,[r3,#4]
 1154 0034 9AB2     	 uxth r2,r3
 1155 0036 5D4B     	 ldr r3,.L75+8
 1156 0038 9A80     	 strh r2,[r3,#4]
 456:../cleanflight/src/main/sensors/acceleration.c ****         angleTrim_saved.values.roll = rollAndPitchTrims->values.roll;
 1157              	 .loc 2 456 0
 1158 003a 7B68     	 ldr r3,[r7,#4]
 1159 003c B3F90030 	 ldrsh r3,[r3]
 1160 0040 9AB2     	 uxth r2,r3
 1161 0042 5B4B     	 ldr r3,.L75+12
 1162 0044 1A80     	 strh r2,[r3]
 457:../cleanflight/src/main/sensors/acceleration.c ****         angleTrim_saved.values.pitch = rollAndPitchTrims->values.pitch;
 1163              	 .loc 2 457 0
 1164 0046 7B68     	 ldr r3,[r7,#4]
 1165 0048 B3F90230 	 ldrsh r3,[r3,#2]
 1166 004c 9AB2     	 uxth r2,r3
 1167 004e 584B     	 ldr r3,.L75+12
 1168 0050 5A80     	 strh r2,[r3,#2]
 1169              	.L68:
 458:../cleanflight/src/main/sensors/acceleration.c ****     }
 459:../cleanflight/src/main/sensors/acceleration.c ****     if (InflightcalibratingA > 0) {
 1170              	 .loc 2 459 0
 1171 0052 544B     	 ldr r3,.L75
 1172 0054 1B88     	 ldrh r3,[r3]
 1173 0056 002B     	 cmp r3,#0
 1174 0058 69D0     	 beq .L69
 1175              	.LBB4:
 460:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < 3; axis++) {
 1176              	 .loc 2 460 0
 1177 005a 0023     	 movs r3,#0
 1178 005c FB60     	 str r3,[r7,#12]
 1179 005e 39E0     	 b .L70
 1180              	.L72:
 461:../cleanflight/src/main/sensors/acceleration.c ****             // Reset a[axis] at start of calibration
 462:../cleanflight/src/main/sensors/acceleration.c ****             if (InflightcalibratingA == 50)
 1181              	 .loc 2 462 0
 1182 0060 504B     	 ldr r3,.L75
 1183 0062 1B88     	 ldrh r3,[r3]
 1184 0064 322B     	 cmp r3,#50
 1185 0066 04D1     	 bne .L71
 463:../cleanflight/src/main/sensors/acceleration.c ****                 b[axis] = 0;
 1186              	 .loc 2 463 0
 1187 0068 524A     	 ldr r2,.L75+16
 1188 006a FB68     	 ldr r3,[r7,#12]
 1189 006c 0021     	 movs r1,#0
 1190 006e 42F82310 	 str r1,[r2,r3,lsl#2]
 1191              	.L71:
 464:../cleanflight/src/main/sensors/acceleration.c ****             // Sum up 50 readings
 465:../cleanflight/src/main/sensors/acceleration.c ****             b[axis] += acc.accADC[axis];
 1192              	 .loc 2 465 0 discriminator 2
 1193 0072 504A     	 ldr r2,.L75+16
 1194 0074 FB68     	 ldr r3,[r7,#12]
 1195 0076 52F82330 	 ldr r3,[r2,r3,lsl#2]
 1196 007a 07EE903A 	 fmsr s15,r3
 1197 007e F8EEE77A 	 fsitos s15,s15
 1198 0082 4D4A     	 ldr r2,.L75+20
 1199 0084 FB68     	 ldr r3,[r7,#12]
 1200 0086 0833     	 adds r3,r3,#8
 1201 0088 9B00     	 lsls r3,r3,#2
 1202 008a 1344     	 add r3,r3,r2
 1203 008c D3F80530 	 ldr r3,[r3,#5]
 1204 0090 07EE103A 	 fmsr s14,r3
 1205 0094 77EE877A 	 fadds s15,s15,s14
 1206 0098 FDEEE77A 	 ftosizs s15,s15
 1207 009c 17EE901A 	 fmrs r1,s15
 1208 00a0 444A     	 ldr r2,.L75+16
 1209 00a2 FB68     	 ldr r3,[r7,#12]
 1210 00a4 42F82310 	 str r1,[r2,r3,lsl#2]
 466:../cleanflight/src/main/sensors/acceleration.c ****             // Clear global variables for next reading
 467:../cleanflight/src/main/sensors/acceleration.c ****             acc.accADC[axis] = 0;
 1211              	 .loc 2 467 0 discriminator 2
 1212 00a8 434A     	 ldr r2,.L75+20
 1213 00aa FB68     	 ldr r3,[r7,#12]
 1214 00ac 0833     	 adds r3,r3,#8
 1215 00ae 9B00     	 lsls r3,r3,#2
 1216 00b0 1344     	 add r3,r3,r2
 1217 00b2 0533     	 adds r3,r3,#5
 1218 00b4 4FF00002 	 mov r2,#0
 1219 00b8 1A60     	 str r2,[r3]
 468:../cleanflight/src/main/sensors/acceleration.c ****             accelerationTrims->raw[axis] = 0;
 1220              	 .loc 2 468 0 discriminator 2
 1221 00ba 3B4B     	 ldr r3,.L75+4
 1222 00bc 1A68     	 ldr r2,[r3]
 1223 00be FB68     	 ldr r3,[r7,#12]
 1224 00c0 0021     	 movs r1,#0
 1225 00c2 02F81310 	 strb r1,[r2,r3,lsl#1]
 1226 00c6 5B00     	 lsls r3,r3,#1
 1227 00c8 1344     	 add r3,r3,r2
 1228 00ca 0022     	 movs r2,#0
 1229 00cc 5A70     	 strb r2,[r3,#1]
 460:../cleanflight/src/main/sensors/acceleration.c ****             // Reset a[axis] at start of calibration
 1230              	 .loc 2 460 0 discriminator 2
 1231 00ce FB68     	 ldr r3,[r7,#12]
 1232 00d0 0133     	 adds r3,r3,#1
 1233 00d2 FB60     	 str r3,[r7,#12]
 1234              	.L70:
 460:../cleanflight/src/main/sensors/acceleration.c ****             // Reset a[axis] at start of calibration
 1235              	 .loc 2 460 0 is_stmt 0 discriminator 1
 1236 00d4 FB68     	 ldr r3,[r7,#12]
 1237 00d6 022B     	 cmp r3,#2
 1238 00d8 C2DD     	 ble .L72
 1239              	.LBE4:
 469:../cleanflight/src/main/sensors/acceleration.c ****         }
 470:../cleanflight/src/main/sensors/acceleration.c ****         // all values are measured
 471:../cleanflight/src/main/sensors/acceleration.c ****         if (InflightcalibratingA == 1) {
 1240              	 .loc 2 471 0 is_stmt 1
 1241 00da 324B     	 ldr r3,.L75
 1242 00dc 1B88     	 ldrh r3,[r3]
 1243 00de 012B     	 cmp r3,#1
 1244 00e0 1FD1     	 bne .L73
 472:../cleanflight/src/main/sensors/acceleration.c ****             AccInflightCalibrationActive = false;
 1245              	 .loc 2 472 0
 1246 00e2 364B     	 ldr r3,.L75+24
 1247 00e4 0022     	 movs r2,#0
 1248 00e6 1A70     	 strb r2,[r3]
 473:../cleanflight/src/main/sensors/acceleration.c ****             AccInflightCalibrationMeasurementDone = true;
 1249              	 .loc 2 473 0
 1250 00e8 354B     	 ldr r3,.L75+28
 1251 00ea 0122     	 movs r2,#1
 1252 00ec 1A70     	 strb r2,[r3]
 474:../cleanflight/src/main/sensors/acceleration.c ****             beeper(BEEPER_ACC_CALIBRATION); // indicate end of calibration
 1253              	 .loc 2 474 0
 1254 00ee 0B20     	 movs r0,#11
 1255 00f0 FFF7FEFF 	 bl beeper
 475:../cleanflight/src/main/sensors/acceleration.c ****             // recover saved values to maintain current flight behaviour until new values are trans
 476:../cleanflight/src/main/sensors/acceleration.c ****             accelerationTrims->raw[X] = accZero_saved[X];
 1256              	 .loc 2 476 0
 1257 00f4 2C4B     	 ldr r3,.L75+4
 1258 00f6 1B68     	 ldr r3,[r3]
 1259 00f8 2C4A     	 ldr r2,.L75+8
 1260 00fa 1288     	 ldrh r2,[r2]
 1261 00fc 1A80     	 strh r2,[r3]
 477:../cleanflight/src/main/sensors/acceleration.c ****             accelerationTrims->raw[Y] = accZero_saved[Y];
 1262              	 .loc 2 477 0
 1263 00fe 2A4B     	 ldr r3,.L75+4
 1264 0100 1B68     	 ldr r3,[r3]
 1265 0102 2A4A     	 ldr r2,.L75+8
 1266 0104 5288     	 ldrh r2,[r2,#2]
 1267 0106 5A80     	 strh r2,[r3,#2]
 478:../cleanflight/src/main/sensors/acceleration.c ****             accelerationTrims->raw[Z] = accZero_saved[Z];
 1268              	 .loc 2 478 0
 1269 0108 274B     	 ldr r3,.L75+4
 1270 010a 1B68     	 ldr r3,[r3]
 1271 010c 274A     	 ldr r2,.L75+8
 1272 010e 9288     	 ldrh r2,[r2,#4]
 1273 0110 9A80     	 strh r2,[r3,#4]
 479:../cleanflight/src/main/sensors/acceleration.c ****             rollAndPitchTrims->values.roll = angleTrim_saved.values.roll;
 1274              	 .loc 2 479 0
 1275 0112 274B     	 ldr r3,.L75+12
 1276 0114 1A88     	 ldrh r2,[r3]
 1277 0116 7B68     	 ldr r3,[r7,#4]
 1278 0118 1A80     	 strh r2,[r3]
 480:../cleanflight/src/main/sensors/acceleration.c ****             rollAndPitchTrims->values.pitch = angleTrim_saved.values.pitch;
 1279              	 .loc 2 480 0
 1280 011a 254B     	 ldr r3,.L75+12
 1281 011c 5A88     	 ldrh r2,[r3,#2]
 1282 011e 7B68     	 ldr r3,[r7,#4]
 1283 0120 5A80     	 strh r2,[r3,#2]
 1284              	.L73:
 481:../cleanflight/src/main/sensors/acceleration.c ****         }
 482:../cleanflight/src/main/sensors/acceleration.c ****         InflightcalibratingA--;
 1285              	 .loc 2 482 0
 1286 0122 204B     	 ldr r3,.L75
 1287 0124 1B88     	 ldrh r3,[r3]
 1288 0126 013B     	 subs r3,r3,#1
 1289 0128 9AB2     	 uxth r2,r3
 1290 012a 1E4B     	 ldr r3,.L75
 1291 012c 1A80     	 strh r2,[r3]
 1292              	.L69:
 483:../cleanflight/src/main/sensors/acceleration.c ****     }
 484:../cleanflight/src/main/sensors/acceleration.c ****     // Calculate average, shift Z down by acc_1G and store values in EEPROM at end of calibration
 485:../cleanflight/src/main/sensors/acceleration.c ****     if (AccInflightCalibrationSavetoEEProm) {      // the aircraft is landed, disarmed and the comb
 1293              	 .loc 2 485 0
 1294 012e 254B     	 ldr r3,.L75+32
 1295 0130 1B78     	 ldrb r3,[r3]
 1296 0132 002B     	 cmp r3,#0
 1297 0134 32D0     	 beq .L67
 486:../cleanflight/src/main/sensors/acceleration.c ****         AccInflightCalibrationSavetoEEProm = false;
 1298              	 .loc 2 486 0
 1299 0136 234B     	 ldr r3,.L75+32
 1300 0138 0022     	 movs r2,#0
 1301 013a 1A70     	 strb r2,[r3]
 487:../cleanflight/src/main/sensors/acceleration.c ****         accelerationTrims->raw[X] = b[X] / 50;
 1302              	 .loc 2 487 0
 1303 013c 1A4B     	 ldr r3,.L75+4
 1304 013e 1A68     	 ldr r2,[r3]
 1305 0140 1C4B     	 ldr r3,.L75+16
 1306 0142 1B68     	 ldr r3,[r3]
 1307 0144 2049     	 ldr r1,.L75+36
 1308 0146 81FB0301 	 smull r0,r1,r1,r3
 1309 014a 0911     	 asrs r1,r1,#4
 1310 014c DB17     	 asrs r3,r3,#31
 1311 014e CB1A     	 subs r3,r1,r3
 1312 0150 9BB2     	 uxth r3,r3
 1313 0152 1380     	 strh r3,[r2]
 488:../cleanflight/src/main/sensors/acceleration.c ****         accelerationTrims->raw[Y] = b[Y] / 50;
 1314              	 .loc 2 488 0
 1315 0154 144B     	 ldr r3,.L75+4
 1316 0156 1A68     	 ldr r2,[r3]
 1317 0158 164B     	 ldr r3,.L75+16
 1318 015a 5B68     	 ldr r3,[r3,#4]
 1319 015c 1A49     	 ldr r1,.L75+36
 1320 015e 81FB0301 	 smull r0,r1,r1,r3
 1321 0162 0911     	 asrs r1,r1,#4
 1322 0164 DB17     	 asrs r3,r3,#31
 1323 0166 CB1A     	 subs r3,r1,r3
 1324 0168 9BB2     	 uxth r3,r3
 1325 016a 5380     	 strh r3,[r2,#2]
 489:../cleanflight/src/main/sensors/acceleration.c ****         accelerationTrims->raw[Z] = b[Z] / 50 - acc.dev.acc_1G;    // for nunchuck 200=1G
 1326              	 .loc 2 489 0
 1327 016c 0E4B     	 ldr r3,.L75+4
 1328 016e 1A68     	 ldr r2,[r3]
 1329 0170 104B     	 ldr r3,.L75+16
 1330 0172 9B68     	 ldr r3,[r3,#8]
 1331 0174 1449     	 ldr r1,.L75+36
 1332 0176 81FB0301 	 smull r0,r1,r1,r3
 1333 017a 0911     	 asrs r1,r1,#4
 1334 017c DB17     	 asrs r3,r3,#31
 1335 017e CB1A     	 subs r3,r1,r3
 1336 0180 99B2     	 uxth r1,r3
 1337 0182 0D4B     	 ldr r3,.L75+20
 1338 0184 B3F81130 	 ldrh r3,[r3,#17]
 1339 0188 9BB2     	 uxth r3,r3
 1340 018a CB1A     	 subs r3,r1,r3
 1341 018c 9BB2     	 uxth r3,r3
 1342 018e 9BB2     	 uxth r3,r3
 1343 0190 9380     	 strh r3,[r2,#4]
 490:../cleanflight/src/main/sensors/acceleration.c **** 
 491:../cleanflight/src/main/sensors/acceleration.c ****         resetRollAndPitchTrims(rollAndPitchTrims);
 1344              	 .loc 2 491 0
 1345 0192 7868     	 ldr r0,[r7,#4]
 1346 0194 FFF7FEFF 	 bl resetRollAndPitchTrims
 492:../cleanflight/src/main/sensors/acceleration.c **** 
 493:../cleanflight/src/main/sensors/acceleration.c ****         saveConfigAndNotify();
 1347              	 .loc 2 493 0
 1348 0198 FFF7FEFF 	 bl saveConfigAndNotify
 1349              	.L67:
 494:../cleanflight/src/main/sensors/acceleration.c ****     }
 495:../cleanflight/src/main/sensors/acceleration.c **** }
 1350              	 .loc 2 495 0
 1351 019c 1037     	 adds r7,r7,#16
 1352              	.LCFI65:
 1353              	 .cfi_def_cfa_offset 8
 1354 019e BD46     	 mov sp,r7
 1355              	.LCFI66:
 1356              	 .cfi_def_cfa_register 13
 1357              	 
 1358 01a0 80BD     	 pop {r7,pc}
 1359              	.L76:
 1360 01a2 00BF     	 .align 2
 1361              	.L75:
 1362 01a4 00000000 	 .word InflightcalibratingA
 1363 01a8 00000000 	 .word accelerationTrims
 1364 01ac 00000000 	 .word accZero_saved.13242
 1365 01b0 00000000 	 .word angleTrim_saved.13243
 1366 01b4 00000000 	 .word b.13241
 1367 01b8 00000000 	 .word acc
 1368 01bc 00000000 	 .word AccInflightCalibrationActive
 1369 01c0 00000000 	 .word AccInflightCalibrationMeasurementDone
 1370 01c4 00000000 	 .word AccInflightCalibrationSavetoEEProm
 1371 01c8 1F85EB51 	 .word 1374389535
 1372              	 .cfi_endproc
 1373              	.LFE555:
 1375              	 .section .text.applyAccelerationTrims,"ax",%progbits
 1376              	 .align 2
 1377              	 .thumb
 1378              	 .thumb_func
 1380              	applyAccelerationTrims:
 1381              	.LFB556:
 496:../cleanflight/src/main/sensors/acceleration.c **** 
 497:../cleanflight/src/main/sensors/acceleration.c **** static void applyAccelerationTrims(const flightDynamicsTrims_t *accelerationTrims)
 498:../cleanflight/src/main/sensors/acceleration.c **** {
 1382              	 .loc 2 498 0
 1383              	 .cfi_startproc
 1384              	 
 1385              	 
 1386              	 
 1387 0000 80B4     	 push {r7}
 1388              	.LCFI67:
 1389              	 .cfi_def_cfa_offset 4
 1390              	 .cfi_offset 7,-4
 1391 0002 83B0     	 sub sp,sp,#12
 1392              	.LCFI68:
 1393              	 .cfi_def_cfa_offset 16
 1394 0004 00AF     	 add r7,sp,#0
 1395              	.LCFI69:
 1396              	 .cfi_def_cfa_register 7
 1397 0006 7860     	 str r0,[r7,#4]
 499:../cleanflight/src/main/sensors/acceleration.c ****     acc.accADC[X] -= accelerationTrims->raw[X];
 1398              	 .loc 2 499 0
 1399 0008 244B     	 ldr r3,.L78
 1400 000a D3F82520 	 ldr r2,[r3,#37]
 1401 000e 1346     	 mov r3,r2
 1402 0010 1A46     	 mov r2,r3
 1403 0012 7B68     	 ldr r3,[r7,#4]
 1404 0014 B3F90030 	 ldrsh r3,[r3]
 1405 0018 9BB2     	 uxth r3,r3
 1406 001a 1BB2     	 sxth r3,r3
 1407 001c 07EE903A 	 fmsr s15,r3
 1408 0020 F8EEE77A 	 fsitos s15,s15
 1409 0024 07EE102A 	 fmsr s14,r2
 1410 0028 77EE677A 	 fsubs s15,s14,s15
 1411 002c 1B4B     	 ldr r3,.L78
 1412 002e 2533     	 adds r3,r3,#37
 1413 0030 17EE902A 	 fmrs r2,s15
 1414 0034 1A60     	 str r2,[r3]
 500:../cleanflight/src/main/sensors/acceleration.c ****     acc.accADC[Y] -= accelerationTrims->raw[Y];
 1415              	 .loc 2 500 0
 1416 0036 194B     	 ldr r3,.L78
 1417 0038 D3F82920 	 ldr r2,[r3,#41]
 1418 003c 1346     	 mov r3,r2
 1419 003e 1A46     	 mov r2,r3
 1420 0040 7B68     	 ldr r3,[r7,#4]
 1421 0042 B3F90230 	 ldrsh r3,[r3,#2]
 1422 0046 9BB2     	 uxth r3,r3
 1423 0048 1BB2     	 sxth r3,r3
 1424 004a 07EE903A 	 fmsr s15,r3
 1425 004e F8EEE77A 	 fsitos s15,s15
 1426 0052 07EE102A 	 fmsr s14,r2
 1427 0056 77EE677A 	 fsubs s15,s14,s15
 1428 005a 104B     	 ldr r3,.L78
 1429 005c 2933     	 adds r3,r3,#41
 1430 005e 17EE902A 	 fmrs r2,s15
 1431 0062 1A60     	 str r2,[r3]
 501:../cleanflight/src/main/sensors/acceleration.c ****     acc.accADC[Z] -= accelerationTrims->raw[Z];
 1432              	 .loc 2 501 0
 1433 0064 0D4B     	 ldr r3,.L78
 1434 0066 D3F82D20 	 ldr r2,[r3,#45]
 1435 006a 1346     	 mov r3,r2
 1436 006c 1A46     	 mov r2,r3
 1437 006e 7B68     	 ldr r3,[r7,#4]
 1438 0070 B3F90430 	 ldrsh r3,[r3,#4]
 1439 0074 9BB2     	 uxth r3,r3
 1440 0076 1BB2     	 sxth r3,r3
 1441 0078 07EE903A 	 fmsr s15,r3
 1442 007c F8EEE77A 	 fsitos s15,s15
 1443 0080 07EE102A 	 fmsr s14,r2
 1444 0084 77EE677A 	 fsubs s15,s14,s15
 1445 0088 044B     	 ldr r3,.L78
 1446 008a 2D33     	 adds r3,r3,#45
 1447 008c 17EE902A 	 fmrs r2,s15
 1448 0090 1A60     	 str r2,[r3]
 502:../cleanflight/src/main/sensors/acceleration.c **** }
 1449              	 .loc 2 502 0
 1450 0092 0C37     	 adds r7,r7,#12
 1451              	.LCFI70:
 1452              	 .cfi_def_cfa_offset 4
 1453 0094 BD46     	 mov sp,r7
 1454              	.LCFI71:
 1455              	 .cfi_def_cfa_register 13
 1456              	 
 1457 0096 5DF8047B 	 ldr r7,[sp],#4
 1458              	.LCFI72:
 1459              	 .cfi_restore 7
 1460              	 .cfi_def_cfa_offset 0
 1461 009a 7047     	 bx lr
 1462              	.L79:
 1463              	 .align 2
 1464              	.L78:
 1465 009c 00000000 	 .word acc
 1466              	 .cfi_endproc
 1467              	.LFE556:
 1469              	 .section .text.accUpdate,"ax",%progbits
 1470              	 .align 2
 1471              	 .global accUpdate
 1472              	 .thumb
 1473              	 .thumb_func
 1475              	accUpdate:
 1476              	.LFB557:
 503:../cleanflight/src/main/sensors/acceleration.c **** 
 504:../cleanflight/src/main/sensors/acceleration.c **** void accUpdate(timeUs_t currentTimeUs, rollAndPitchTrims_t *rollAndPitchTrims)
 505:../cleanflight/src/main/sensors/acceleration.c **** {
 1477              	 .loc 2 505 0
 1478              	 .cfi_startproc
 1479              	 
 1480              	 
 1481 0000 80B5     	 push {r7,lr}
 1482              	.LCFI73:
 1483              	 .cfi_def_cfa_offset 8
 1484              	 .cfi_offset 7,-8
 1485              	 .cfi_offset 14,-4
 1486 0002 86B0     	 sub sp,sp,#24
 1487              	.LCFI74:
 1488              	 .cfi_def_cfa_offset 32
 1489 0004 00AF     	 add r7,sp,#0
 1490              	.LCFI75:
 1491              	 .cfi_def_cfa_register 7
 1492 0006 7860     	 str r0,[r7,#4]
 1493 0008 3960     	 str r1,[r7]
 506:../cleanflight/src/main/sensors/acceleration.c ****     UNUSED(currentTimeUs);
 507:../cleanflight/src/main/sensors/acceleration.c **** 
 508:../cleanflight/src/main/sensors/acceleration.c ****     if (!acc.dev.readFn(&acc.dev)) {
 1494              	 .loc 2 508 0
 1495 000a 564B     	 ldr r3,.L93
 1496 000c 5B68     	 ldr r3,[r3,#4]
 1497 000e 5548     	 ldr r0,.L93
 1498 0010 9847     	 blx r3
 1499 0012 0346     	 mov r3,r0
 1500 0014 83F00103 	 eor r3,r3,#1
 1501 0018 DBB2     	 uxtb r3,r3
 1502 001a 002B     	 cmp r3,#0
 1503 001c 00D0     	 beq .L81
 509:../cleanflight/src/main/sensors/acceleration.c ****         return;
 1504              	 .loc 2 509 0
 1505 001e 9EE0     	 b .L80
 1506              	.L81:
 510:../cleanflight/src/main/sensors/acceleration.c ****     }
 511:../cleanflight/src/main/sensors/acceleration.c ****     acc.isAccelUpdatedAtLeastOnce = true;
 1507              	 .loc 2 511 0
 1508 0020 504B     	 ldr r3,.L93
 1509 0022 0122     	 movs r2,#1
 1510 0024 83F83120 	 strb r2,[r3,#49]
 1511              	.LBB5:
 512:../cleanflight/src/main/sensors/acceleration.c **** 
 513:../cleanflight/src/main/sensors/acceleration.c ****     for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1512              	 .loc 2 513 0
 1513 0028 0023     	 movs r3,#0
 1514 002a 7B61     	 str r3,[r7,#20]
 1515 002c 28E0     	 b .L83
 1516              	.L85:
 514:../cleanflight/src/main/sensors/acceleration.c ****         DEBUG_SET(DEBUG_ACCELEROMETER, axis, acc.dev.ADCRaw[axis]);
 1517              	 .loc 2 514 0
 1518 002e 4E4B     	 ldr r3,.L93+4
 1519 0030 1B78     	 ldrb r3,[r3]
 1520 0032 042B     	 cmp r3,#4
 1521 0034 0BD1     	 bne .L84
 1522              	 .loc 2 514 0 is_stmt 0 discriminator 1
 1523 0036 4B4A     	 ldr r2,.L93
 1524 0038 7B69     	 ldr r3,[r7,#20]
 1525 003a 0833     	 adds r3,r3,#8
 1526 003c 5B00     	 lsls r3,r3,#1
 1527 003e 1344     	 add r3,r3,r2
 1528 0040 B3F90330 	 ldrsh r3,[r3,#3]
 1529 0044 99B2     	 uxth r1,r3
 1530 0046 494A     	 ldr r2,.L93+8
 1531 0048 7B69     	 ldr r3,[r7,#20]
 1532 004a 22F81310 	 strh r1,[r2,r3,lsl#1]
 1533              	.L84:
 515:../cleanflight/src/main/sensors/acceleration.c ****         acc.accADC[axis] = acc.dev.ADCRaw[axis];
 1534              	 .loc 2 515 0 is_stmt 1 discriminator 2
 1535 004e 454A     	 ldr r2,.L93
 1536 0050 7B69     	 ldr r3,[r7,#20]
 1537 0052 0833     	 adds r3,r3,#8
 1538 0054 5B00     	 lsls r3,r3,#1
 1539 0056 1344     	 add r3,r3,r2
 1540 0058 B3F90330 	 ldrsh r3,[r3,#3]
 1541 005c 9BB2     	 uxth r3,r3
 1542 005e 1BB2     	 sxth r3,r3
 1543 0060 07EE903A 	 fmsr s15,r3
 1544 0064 F8EEE77A 	 fsitos s15,s15
 1545 0068 3E4A     	 ldr r2,.L93
 1546 006a 7B69     	 ldr r3,[r7,#20]
 1547 006c 0833     	 adds r3,r3,#8
 1548 006e 9B00     	 lsls r3,r3,#2
 1549 0070 1344     	 add r3,r3,r2
 1550 0072 0533     	 adds r3,r3,#5
 1551 0074 17EE902A 	 fmrs r2,s15
 1552 0078 1A60     	 str r2,[r3]
 513:../cleanflight/src/main/sensors/acceleration.c ****         DEBUG_SET(DEBUG_ACCELEROMETER, axis, acc.dev.ADCRaw[axis]);
 1553              	 .loc 2 513 0 discriminator 2
 1554 007a 7B69     	 ldr r3,[r7,#20]
 1555 007c 0133     	 adds r3,r3,#1
 1556 007e 7B61     	 str r3,[r7,#20]
 1557              	.L83:
 513:../cleanflight/src/main/sensors/acceleration.c ****         DEBUG_SET(DEBUG_ACCELEROMETER, axis, acc.dev.ADCRaw[axis]);
 1558              	 .loc 2 513 0 is_stmt 0 discriminator 1
 1559 0080 7B69     	 ldr r3,[r7,#20]
 1560 0082 022B     	 cmp r3,#2
 1561 0084 D3DD     	 ble .L85
 1562              	.LBE5:
 516:../cleanflight/src/main/sensors/acceleration.c ****     }
 517:../cleanflight/src/main/sensors/acceleration.c **** 
 518:../cleanflight/src/main/sensors/acceleration.c ****     if (accLpfCutHz) {
 1563              	 .loc 2 518 0 is_stmt 1
 1564 0086 3A4B     	 ldr r3,.L93+12
 1565 0088 1B88     	 ldrh r3,[r3]
 1566 008a 002B     	 cmp r3,#0
 1567 008c 23D0     	 beq .L86
 1568              	.LBB6:
 519:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1569              	 .loc 2 519 0
 1570 008e 0023     	 movs r3,#0
 1571 0090 3B61     	 str r3,[r7,#16]
 1572 0092 1DE0     	 b .L87
 1573              	.L88:
 520:../cleanflight/src/main/sensors/acceleration.c ****             acc.accADC[axis] = biquadFilterApply(&accFilter[axis], acc.accADC[axis]);
 1574              	 .loc 2 520 0 discriminator 3
 1575 0094 3A69     	 ldr r2,[r7,#16]
 1576 0096 1346     	 mov r3,r2
 1577 0098 DB00     	 lsls r3,r3,#3
 1578 009a 1344     	 add r3,r3,r2
 1579 009c 9B00     	 lsls r3,r3,#2
 1580 009e 354A     	 ldr r2,.L93+16
 1581 00a0 9918     	 adds r1,r3,r2
 1582 00a2 304A     	 ldr r2,.L93
 1583 00a4 3B69     	 ldr r3,[r7,#16]
 1584 00a6 0833     	 adds r3,r3,#8
 1585 00a8 9B00     	 lsls r3,r3,#2
 1586 00aa 1344     	 add r3,r3,r2
 1587 00ac D3F80530 	 ldr r3,[r3,#5]
 1588 00b0 0846     	 mov r0,r1
 1589 00b2 1946     	 mov r1,r3
 1590 00b4 FFF7FEFF 	 bl biquadFilterApply
 1591 00b8 0146     	 mov r1,r0
 1592 00ba 2A4A     	 ldr r2,.L93
 1593 00bc 3B69     	 ldr r3,[r7,#16]
 1594 00be 0833     	 adds r3,r3,#8
 1595 00c0 9B00     	 lsls r3,r3,#2
 1596 00c2 1344     	 add r3,r3,r2
 1597 00c4 0533     	 adds r3,r3,#5
 1598 00c6 0A46     	 mov r2,r1
 1599 00c8 1A60     	 str r2,[r3]
 519:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1600              	 .loc 2 519 0 discriminator 3
 1601 00ca 3B69     	 ldr r3,[r7,#16]
 1602 00cc 0133     	 adds r3,r3,#1
 1603 00ce 3B61     	 str r3,[r7,#16]
 1604              	.L87:
 519:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1605              	 .loc 2 519 0 is_stmt 0 discriminator 1
 1606 00d0 3B69     	 ldr r3,[r7,#16]
 1607 00d2 022B     	 cmp r3,#2
 1608 00d4 DEDD     	 ble .L88
 1609              	.L86:
 1610              	.LBE6:
 521:../cleanflight/src/main/sensors/acceleration.c ****         }
 522:../cleanflight/src/main/sensors/acceleration.c ****     }
 523:../cleanflight/src/main/sensors/acceleration.c **** 
 524:../cleanflight/src/main/sensors/acceleration.c ****     alignSensors(acc.accADC, acc.dev.accAlign);
 1611              	 .loc 2 524 0 is_stmt 1
 1612 00d6 234B     	 ldr r3,.L93
 1613 00d8 DB7E     	 ldrb r3,[r3,#27]
 1614 00da 2748     	 ldr r0,.L93+20
 1615 00dc 1946     	 mov r1,r3
 1616 00de FFF7FEFF 	 bl alignSensors
 525:../cleanflight/src/main/sensors/acceleration.c **** 
 526:../cleanflight/src/main/sensors/acceleration.c ****     if (!accIsCalibrationComplete()) {
 1617              	 .loc 2 526 0
 1618 00e2 FFF7FEFF 	 bl accIsCalibrationComplete
 1619 00e6 0346     	 mov r3,r0
 1620 00e8 83F00103 	 eor r3,r3,#1
 1621 00ec DBB2     	 uxtb r3,r3
 1622 00ee 002B     	 cmp r3,#0
 1623 00f0 02D0     	 beq .L89
 527:../cleanflight/src/main/sensors/acceleration.c ****         performAcclerationCalibration(rollAndPitchTrims);
 1624              	 .loc 2 527 0
 1625 00f2 3868     	 ldr r0,[r7]
 1626 00f4 FFF7FEFF 	 bl performAcclerationCalibration
 1627              	.L89:
 528:../cleanflight/src/main/sensors/acceleration.c ****     }
 529:../cleanflight/src/main/sensors/acceleration.c **** 
 530:../cleanflight/src/main/sensors/acceleration.c ****     if (feature(FEATURE_INFLIGHT_ACC_CAL)) {
 1628              	 .loc 2 530 0
 1629 00f8 0420     	 movs r0,#4
 1630 00fa FFF7FEFF 	 bl feature
 1631 00fe 0346     	 mov r3,r0
 1632 0100 002B     	 cmp r3,#0
 1633 0102 02D0     	 beq .L90
 531:../cleanflight/src/main/sensors/acceleration.c ****         performInflightAccelerationCalibration(rollAndPitchTrims);
 1634              	 .loc 2 531 0
 1635 0104 3868     	 ldr r0,[r7]
 1636 0106 FFF7FEFF 	 bl performInflightAccelerationCalibration
 1637              	.L90:
 532:../cleanflight/src/main/sensors/acceleration.c ****     }
 533:../cleanflight/src/main/sensors/acceleration.c **** 
 534:../cleanflight/src/main/sensors/acceleration.c ****     applyAccelerationTrims(accelerationTrims);
 1638              	 .loc 2 534 0
 1639 010a 1C4B     	 ldr r3,.L93+24
 1640 010c 1B68     	 ldr r3,[r3]
 1641 010e 1846     	 mov r0,r3
 1642 0110 FFF7FEFF 	 bl applyAccelerationTrims
 535:../cleanflight/src/main/sensors/acceleration.c **** 
 536:../cleanflight/src/main/sensors/acceleration.c ****     ++accumulatedMeasurementCount;
 1643              	 .loc 2 536 0
 1644 0114 1A4B     	 ldr r3,.L93+28
 1645 0116 1B68     	 ldr r3,[r3]
 1646 0118 0133     	 adds r3,r3,#1
 1647 011a 194A     	 ldr r2,.L93+28
 1648 011c 1360     	 str r3,[r2]
 1649              	.LBB7:
 537:../cleanflight/src/main/sensors/acceleration.c ****     for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1650              	 .loc 2 537 0
 1651 011e 0023     	 movs r3,#0
 1652 0120 FB60     	 str r3,[r7,#12]
 1653 0122 19E0     	 b .L91
 1654              	.L92:
 538:../cleanflight/src/main/sensors/acceleration.c ****         accumulatedMeasurements[axis] += acc.accADC[axis];
 1655              	 .loc 2 538 0 discriminator 3
 1656 0124 174A     	 ldr r2,.L93+32
 1657 0126 FB68     	 ldr r3,[r7,#12]
 1658 0128 9B00     	 lsls r3,r3,#2
 1659 012a 1344     	 add r3,r3,r2
 1660 012c D3ED007A 	 flds s15,[r3]
 1661 0130 0C4A     	 ldr r2,.L93
 1662 0132 FB68     	 ldr r3,[r7,#12]
 1663 0134 0833     	 adds r3,r3,#8
 1664 0136 9B00     	 lsls r3,r3,#2
 1665 0138 1344     	 add r3,r3,r2
 1666 013a D3F80530 	 ldr r3,[r3,#5]
 1667 013e 07EE103A 	 fmsr s14,r3
 1668 0142 77EE877A 	 fadds s15,s15,s14
 1669 0146 0F4A     	 ldr r2,.L93+32
 1670 0148 FB68     	 ldr r3,[r7,#12]
 1671 014a 9B00     	 lsls r3,r3,#2
 1672 014c 1344     	 add r3,r3,r2
 1673 014e C3ED007A 	 fsts s15,[r3]
 537:../cleanflight/src/main/sensors/acceleration.c ****     for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1674              	 .loc 2 537 0 discriminator 3
 1675 0152 FB68     	 ldr r3,[r7,#12]
 1676 0154 0133     	 adds r3,r3,#1
 1677 0156 FB60     	 str r3,[r7,#12]
 1678              	.L91:
 537:../cleanflight/src/main/sensors/acceleration.c ****     for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1679              	 .loc 2 537 0 is_stmt 0 discriminator 1
 1680 0158 FB68     	 ldr r3,[r7,#12]
 1681 015a 022B     	 cmp r3,#2
 1682 015c E2DD     	 ble .L92
 1683              	.L80:
 1684              	.LBE7:
 539:../cleanflight/src/main/sensors/acceleration.c ****     }
 540:../cleanflight/src/main/sensors/acceleration.c **** }
 1685              	 .loc 2 540 0 is_stmt 1
 1686 015e 1837     	 adds r7,r7,#24
 1687              	.LCFI76:
 1688              	 .cfi_def_cfa_offset 8
 1689 0160 BD46     	 mov sp,r7
 1690              	.LCFI77:
 1691              	 .cfi_def_cfa_register 13
 1692              	 
 1693 0162 80BD     	 pop {r7,pc}
 1694              	.L94:
 1695              	 .align 2
 1696              	.L93:
 1697 0164 00000000 	 .word acc
 1698 0168 00000000 	 .word debugMode
 1699 016c 00000000 	 .word debug
 1700 0170 00000000 	 .word accLpfCutHz
 1701 0174 00000000 	 .word accFilter
 1702 0178 25000000 	 .word acc+37
 1703 017c 00000000 	 .word accelerationTrims
 1704 0180 00000000 	 .word accumulatedMeasurementCount
 1705 0184 00000000 	 .word accumulatedMeasurements
 1706              	 .cfi_endproc
 1707              	.LFE557:
 1709              	 .section .text.accGetAccumulationAverage,"ax",%progbits
 1710              	 .align 2
 1711              	 .global accGetAccumulationAverage
 1712              	 .thumb
 1713              	 .thumb_func
 1715              	accGetAccumulationAverage:
 1716              	.LFB558:
 541:../cleanflight/src/main/sensors/acceleration.c **** 
 542:../cleanflight/src/main/sensors/acceleration.c **** bool accGetAccumulationAverage(float *accumulationAverage)
 543:../cleanflight/src/main/sensors/acceleration.c **** {
 1717              	 .loc 2 543 0
 1718              	 .cfi_startproc
 1719              	 
 1720              	 
 1721              	 
 1722 0000 80B4     	 push {r7}
 1723              	.LCFI78:
 1724              	 .cfi_def_cfa_offset 4
 1725              	 .cfi_offset 7,-4
 1726 0002 85B0     	 sub sp,sp,#20
 1727              	.LCFI79:
 1728              	 .cfi_def_cfa_offset 24
 1729 0004 00AF     	 add r7,sp,#0
 1730              	.LCFI80:
 1731              	 .cfi_def_cfa_register 7
 1732 0006 7860     	 str r0,[r7,#4]
 544:../cleanflight/src/main/sensors/acceleration.c ****     if (accumulatedMeasurementCount > 0) {
 1733              	 .loc 2 544 0
 1734 0008 214B     	 ldr r3,.L102
 1735 000a 1B68     	 ldr r3,[r3]
 1736 000c 002B     	 cmp r3,#0
 1737 000e 28DD     	 ble .L96
 1738              	.LBB8:
 545:../cleanflight/src/main/sensors/acceleration.c ****         // If we have gyro data accumulated, calculate average rate that will yield the same rotati
 546:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1739              	 .loc 2 546 0
 1740 0010 0023     	 movs r3,#0
 1741 0012 FB60     	 str r3,[r7,#12]
 1742 0014 1DE0     	 b .L97
 1743              	.L98:
 547:../cleanflight/src/main/sensors/acceleration.c ****             accumulationAverage[axis] = accumulatedMeasurements[axis] / accumulatedMeasurementCount
 1744              	 .loc 2 547 0 discriminator 3
 1745 0016 FB68     	 ldr r3,[r7,#12]
 1746 0018 9B00     	 lsls r3,r3,#2
 1747 001a 7A68     	 ldr r2,[r7,#4]
 1748 001c 1344     	 add r3,r3,r2
 1749 001e 1D49     	 ldr r1,.L102+4
 1750 0020 FA68     	 ldr r2,[r7,#12]
 1751 0022 9200     	 lsls r2,r2,#2
 1752 0024 0A44     	 add r2,r2,r1
 1753 0026 92ED007A 	 flds s14,[r2]
 1754 002a 194A     	 ldr r2,.L102
 1755 002c 1268     	 ldr r2,[r2]
 1756 002e 07EE902A 	 fmsr s15,r2
 1757 0032 F8EEE77A 	 fsitos s15,s15
 1758 0036 C7EE277A 	 fdivs s15,s14,s15
 1759 003a C3ED007A 	 fsts s15,[r3]
 548:../cleanflight/src/main/sensors/acceleration.c ****             accumulatedMeasurements[axis] = 0.0f;
 1760              	 .loc 2 548 0 discriminator 3
 1761 003e 154A     	 ldr r2,.L102+4
 1762 0040 FB68     	 ldr r3,[r7,#12]
 1763 0042 9B00     	 lsls r3,r3,#2
 1764 0044 1344     	 add r3,r3,r2
 1765 0046 4FF00002 	 mov r2,#0
 1766 004a 1A60     	 str r2,[r3]
 546:../cleanflight/src/main/sensors/acceleration.c ****             accumulationAverage[axis] = accumulatedMeasurements[axis] / accumulatedMeasurementCount
 1767              	 .loc 2 546 0 discriminator 3
 1768 004c FB68     	 ldr r3,[r7,#12]
 1769 004e 0133     	 adds r3,r3,#1
 1770 0050 FB60     	 str r3,[r7,#12]
 1771              	.L97:
 546:../cleanflight/src/main/sensors/acceleration.c ****             accumulationAverage[axis] = accumulatedMeasurements[axis] / accumulatedMeasurementCount
 1772              	 .loc 2 546 0 is_stmt 0 discriminator 1
 1773 0052 FB68     	 ldr r3,[r7,#12]
 1774 0054 022B     	 cmp r3,#2
 1775 0056 DEDD     	 ble .L98
 1776              	.LBE8:
 549:../cleanflight/src/main/sensors/acceleration.c ****         }
 550:../cleanflight/src/main/sensors/acceleration.c ****         accumulatedMeasurementCount = 0;
 1777              	 .loc 2 550 0 is_stmt 1
 1778 0058 0D4B     	 ldr r3,.L102
 1779 005a 0022     	 movs r2,#0
 1780 005c 1A60     	 str r2,[r3]
 551:../cleanflight/src/main/sensors/acceleration.c ****         return true;
 1781              	 .loc 2 551 0
 1782 005e 0123     	 movs r3,#1
 1783 0060 10E0     	 b .L99
 1784              	.L96:
 1785              	.LBB9:
 552:../cleanflight/src/main/sensors/acceleration.c ****     } else {
 553:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1786              	 .loc 2 553 0
 1787 0062 0023     	 movs r3,#0
 1788 0064 BB60     	 str r3,[r7,#8]
 1789 0066 09E0     	 b .L100
 1790              	.L101:
 554:../cleanflight/src/main/sensors/acceleration.c ****             accumulationAverage[axis] = 0.0f;
 1791              	 .loc 2 554 0 discriminator 3
 1792 0068 BB68     	 ldr r3,[r7,#8]
 1793 006a 9B00     	 lsls r3,r3,#2
 1794 006c 7A68     	 ldr r2,[r7,#4]
 1795 006e 1344     	 add r3,r3,r2
 1796 0070 4FF00002 	 mov r2,#0
 1797 0074 1A60     	 str r2,[r3]
 553:../cleanflight/src/main/sensors/acceleration.c ****             accumulationAverage[axis] = 0.0f;
 1798              	 .loc 2 553 0 discriminator 3
 1799 0076 BB68     	 ldr r3,[r7,#8]
 1800 0078 0133     	 adds r3,r3,#1
 1801 007a BB60     	 str r3,[r7,#8]
 1802              	.L100:
 553:../cleanflight/src/main/sensors/acceleration.c ****             accumulationAverage[axis] = 0.0f;
 1803              	 .loc 2 553 0 is_stmt 0 discriminator 1
 1804 007c BB68     	 ldr r3,[r7,#8]
 1805 007e 022B     	 cmp r3,#2
 1806 0080 F2DD     	 ble .L101
 1807              	.LBE9:
 555:../cleanflight/src/main/sensors/acceleration.c ****         }
 556:../cleanflight/src/main/sensors/acceleration.c ****         return false;
 1808              	 .loc 2 556 0 is_stmt 1
 1809 0082 0023     	 movs r3,#0
 1810              	.L99:
 557:../cleanflight/src/main/sensors/acceleration.c ****     }
 558:../cleanflight/src/main/sensors/acceleration.c **** }
 1811              	 .loc 2 558 0
 1812 0084 1846     	 mov r0,r3
 1813 0086 1437     	 adds r7,r7,#20
 1814              	.LCFI81:
 1815              	 .cfi_def_cfa_offset 4
 1816 0088 BD46     	 mov sp,r7
 1817              	.LCFI82:
 1818              	 .cfi_def_cfa_register 13
 1819              	 
 1820 008a 5DF8047B 	 ldr r7,[sp],#4
 1821              	.LCFI83:
 1822              	 .cfi_restore 7
 1823              	 .cfi_def_cfa_offset 0
 1824 008e 7047     	 bx lr
 1825              	.L103:
 1826              	 .align 2
 1827              	.L102:
 1828 0090 00000000 	 .word accumulatedMeasurementCount
 1829 0094 00000000 	 .word accumulatedMeasurements
 1830              	 .cfi_endproc
 1831              	.LFE558:
 1833              	 .section .text.setAccelerationTrims,"ax",%progbits
 1834              	 .align 2
 1835              	 .global setAccelerationTrims
 1836              	 .thumb
 1837              	 .thumb_func
 1839              	setAccelerationTrims:
 1840              	.LFB559:
 559:../cleanflight/src/main/sensors/acceleration.c **** 
 560:../cleanflight/src/main/sensors/acceleration.c **** void setAccelerationTrims(flightDynamicsTrims_t *accelerationTrimsToUse)
 561:../cleanflight/src/main/sensors/acceleration.c **** {
 1841              	 .loc 2 561 0
 1842              	 .cfi_startproc
 1843              	 
 1844              	 
 1845              	 
 1846 0000 80B4     	 push {r7}
 1847              	.LCFI84:
 1848              	 .cfi_def_cfa_offset 4
 1849              	 .cfi_offset 7,-4
 1850 0002 83B0     	 sub sp,sp,#12
 1851              	.LCFI85:
 1852              	 .cfi_def_cfa_offset 16
 1853 0004 00AF     	 add r7,sp,#0
 1854              	.LCFI86:
 1855              	 .cfi_def_cfa_register 7
 1856 0006 7860     	 str r0,[r7,#4]
 562:../cleanflight/src/main/sensors/acceleration.c ****     accelerationTrims = accelerationTrimsToUse;
 1857              	 .loc 2 562 0
 1858 0008 034A     	 ldr r2,.L105
 1859 000a 7B68     	 ldr r3,[r7,#4]
 1860 000c 1360     	 str r3,[r2]
 563:../cleanflight/src/main/sensors/acceleration.c **** }
 1861              	 .loc 2 563 0
 1862 000e 0C37     	 adds r7,r7,#12
 1863              	.LCFI87:
 1864              	 .cfi_def_cfa_offset 4
 1865 0010 BD46     	 mov sp,r7
 1866              	.LCFI88:
 1867              	 .cfi_def_cfa_register 13
 1868              	 
 1869 0012 5DF8047B 	 ldr r7,[sp],#4
 1870              	.LCFI89:
 1871              	 .cfi_restore 7
 1872              	 .cfi_def_cfa_offset 0
 1873 0016 7047     	 bx lr
 1874              	.L106:
 1875              	 .align 2
 1876              	.L105:
 1877 0018 00000000 	 .word accelerationTrims
 1878              	 .cfi_endproc
 1879              	.LFE559:
 1881              	 .section .text.accInitFilters,"ax",%progbits
 1882              	 .align 2
 1883              	 .global accInitFilters
 1884              	 .thumb
 1885              	 .thumb_func
 1887              	accInitFilters:
 1888              	.LFB560:
 564:../cleanflight/src/main/sensors/acceleration.c **** 
 565:../cleanflight/src/main/sensors/acceleration.c **** void accInitFilters(void)
 566:../cleanflight/src/main/sensors/acceleration.c **** {
 1889              	 .loc 2 566 0
 1890              	 .cfi_startproc
 1891              	 
 1892              	 
 1893 0000 80B5     	 push {r7,lr}
 1894              	.LCFI90:
 1895              	 .cfi_def_cfa_offset 8
 1896              	 .cfi_offset 7,-8
 1897              	 .cfi_offset 14,-4
 1898 0002 82B0     	 sub sp,sp,#8
 1899              	.LCFI91:
 1900              	 .cfi_def_cfa_offset 16
 1901 0004 00AF     	 add r7,sp,#0
 1902              	.LCFI92:
 1903              	 .cfi_def_cfa_register 7
 567:../cleanflight/src/main/sensors/acceleration.c ****     accLpfCutHz = accelerometerConfig()->acc_lpf_hz;
 1904              	 .loc 2 567 0
 1905 0006 FFF7FEFF 	 bl accelerometerConfig
 1906 000a 0346     	 mov r3,r0
 1907 000c 1B88     	 ldrh r3,[r3]
 1908 000e 9AB2     	 uxth r2,r3
 1909 0010 144B     	 ldr r3,.L111
 1910 0012 1A80     	 strh r2,[r3]
 568:../cleanflight/src/main/sensors/acceleration.c ****     if (acc.accSamplingInterval) {
 1911              	 .loc 2 568 0
 1912 0014 144B     	 ldr r3,.L111+4
 1913 0016 D3F82130 	 ldr r3,[r3,#33]
 1914 001a 002B     	 cmp r3,#0
 1915 001c 1ED0     	 beq .L107
 1916              	.LBB10:
 569:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1917              	 .loc 2 569 0
 1918 001e 0023     	 movs r3,#0
 1919 0020 7B60     	 str r3,[r7,#4]
 1920 0022 18E0     	 b .L109
 1921              	.L110:
 570:../cleanflight/src/main/sensors/acceleration.c ****             biquadFilterInitLPF(&accFilter[axis], accLpfCutHz, acc.accSamplingInterval);
 1922              	 .loc 2 570 0 discriminator 3
 1923 0024 7A68     	 ldr r2,[r7,#4]
 1924 0026 1346     	 mov r3,r2
 1925 0028 DB00     	 lsls r3,r3,#3
 1926 002a 1344     	 add r3,r3,r2
 1927 002c 9B00     	 lsls r3,r3,#2
 1928 002e 0F4A     	 ldr r2,.L111+8
 1929 0030 1A44     	 add r2,r2,r3
 1930 0032 0C4B     	 ldr r3,.L111
 1931 0034 1B88     	 ldrh r3,[r3]
 1932 0036 07EE903A 	 fmsr s15,r3
 1933 003a F8EE677A 	 fuitos s15,s15
 1934 003e 0A4B     	 ldr r3,.L111+4
 1935 0040 D3F82130 	 ldr r3,[r3,#33]
 1936 0044 1046     	 mov r0,r2
 1937 0046 17EE901A 	 fmrs r1,s15
 1938 004a 1A46     	 mov r2,r3
 1939 004c FFF7FEFF 	 bl biquadFilterInitLPF
 569:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1940              	 .loc 2 569 0 discriminator 3
 1941 0050 7B68     	 ldr r3,[r7,#4]
 1942 0052 0133     	 adds r3,r3,#1
 1943 0054 7B60     	 str r3,[r7,#4]
 1944              	.L109:
 569:../cleanflight/src/main/sensors/acceleration.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1945              	 .loc 2 569 0 is_stmt 0 discriminator 1
 1946 0056 7B68     	 ldr r3,[r7,#4]
 1947 0058 022B     	 cmp r3,#2
 1948 005a E3DD     	 ble .L110
 1949              	.L107:
 1950              	.LBE10:
 571:../cleanflight/src/main/sensors/acceleration.c ****         }
 572:../cleanflight/src/main/sensors/acceleration.c ****     }
 573:../cleanflight/src/main/sensors/acceleration.c **** }
 1951              	 .loc 2 573 0 is_stmt 1
 1952 005c 0837     	 adds r7,r7,#8
 1953              	.LCFI93:
 1954              	 .cfi_def_cfa_offset 8
 1955 005e BD46     	 mov sp,r7
 1956              	.LCFI94:
 1957              	 .cfi_def_cfa_register 13
 1958              	 
 1959 0060 80BD     	 pop {r7,pc}
 1960              	.L112:
 1961 0062 00BF     	 .align 2
 1962              	.L111:
 1963 0064 00000000 	 .word accLpfCutHz
 1964 0068 00000000 	 .word acc
 1965 006c 00000000 	 .word accFilter
 1966              	 .cfi_endproc
 1967              	.LFE560:
 1969              	 .section .bss.a.13233,"aw",%nobits
 1970              	 .align 2
 1973              	a.13233:
 1974 0000 00000000 	 .space 12
 1974      00000000 
 1974      00000000 
 1975              	 .section .bss.accZero_saved.13242,"aw",%nobits
 1976              	 .align 2
 1979              	accZero_saved.13242:
 1980 0000 00000000 	 .space 6
 1980      0000
 1981 0006 0000     	 .section .bss.angleTrim_saved.13243,"aw",%nobits
 1982              	 .align 2
 1985              	angleTrim_saved.13243:
 1986 0000 00000000 	 .space 4
 1987              	 .section .bss.b.13241,"aw",%nobits
 1988              	 .align 2
 1991              	b.13241:
 1992 0000 00000000 	 .space 12
 1992      00000000 
 1992      00000000 
 1993              	 .text
 1994              	.Letext0:
 1995              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1996              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1997              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 1998              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 1999              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 2000              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build/debug.h"
 2001              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/axis.h"
 2002              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/filter.h"
 2003              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pg.h"
 2004              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 2005              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 2006              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 2007              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus.h"
 2008              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/sensor.h"
 2009              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/accgyro/accgyro.h"
 2010              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/accgyro/accgyro_mpu.h"
 2011              	 .file 19 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 2012              	 .file 20 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/gyro.h"
 2013              	 .file 21 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 2014              	 .file 22 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/beeper.h"
 2015              	 .file 23 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/sensors.h"
 2016              	 .file 24 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/boardalignment.h"
 2017              	 .file 25 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 2018              	 .file 26 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 acceleration.c
    {standard input}:20     .text.accelerometerConfig:00000000 $t
    {standard input}:24     .text.accelerometerConfig:00000000 accelerometerConfig
    {standard input}:54     .text.accelerometerConfig:00000010 $d
                            *COM*:0000000f accelerometerConfig_System
    {standard input}:59     .text.accelerometerConfigMutable:00000000 $t
    {standard input}:63     .text.accelerometerConfigMutable:00000000 accelerometerConfigMutable
    {standard input}:92     .text.accelerometerConfigMutable:00000010 $d
                            *COM*:00000032 acc
    {standard input}:98     .bss.accumulatedMeasurements:00000000 $d
    {standard input}:101    .bss.accumulatedMeasurements:00000000 accumulatedMeasurements
    {standard input}:104    .bss.accumulatedMeasurementCount:00000000 $d
    {standard input}:107    .bss.accumulatedMeasurementCount:00000000 accumulatedMeasurementCount
    {standard input}:110    .bss.calibratingA:00000000 $d
    {standard input}:113    .bss.calibratingA:00000000 calibratingA
    {standard input}:116    .bss.accelerationTrims:00000000 $d
    {standard input}:119    .bss.accelerationTrims:00000000 accelerationTrims
    {standard input}:122    .bss.accLpfCutHz:00000000 $d
    {standard input}:125    .bss.accLpfCutHz:00000000 accLpfCutHz
    {standard input}:128    .bss.accFilter:00000000 $d
    {standard input}:131    .bss.accFilter:00000000 accFilter
                            *COM*:0000000f accelerometerConfig_Copy
    {standard input}:140    .pg_registry:00000000 accelerometerConfig_Registry
    {standard input}:137    .pg_registry:00000000 $d
    {standard input}:324    .text.pgResetFn_accelerometerConfig:00000000 pgResetFn_accelerometerConfig
    {standard input}:148    .text.resetRollAndPitchTrims:00000000 $t
    {standard input}:153    .text.resetRollAndPitchTrims:00000000 resetRollAndPitchTrims
    {standard input}:200    .text.accResetRollAndPitchTrims:00000000 $t
    {standard input}:205    .text.accResetRollAndPitchTrims:00000000 accResetRollAndPitchTrims
    {standard input}:231    .text.resetFlightDynamicsTrims:00000000 $t
    {standard input}:235    .text.resetFlightDynamicsTrims:00000000 resetFlightDynamicsTrims
    {standard input}:288    .text.accResetFlightDynamicsTrims:00000000 $t
    {standard input}:293    .text.accResetFlightDynamicsTrims:00000000 accResetFlightDynamicsTrims
    {standard input}:319    .text.pgResetFn_accelerometerConfig:00000000 $t
    {standard input}:379    .text.accDetect:00000000 $t
    {standard input}:384    .text.accDetect:00000000 accDetect
    {standard input}:416    .text.accDetect:0000001c $d
    {standard input}:429    .text.accDetect:00000050 $t
    {standard input}:451    .text.accDetect:00000074 $d
    {standard input}:455    .text.accDetect:00000084 $t
    {standard input}:544    .text.accDetect:000000e4 $d
    {standard input}:549    .text.accInit:00000000 $t
    {standard input}:554    .text.accInit:00000000 accInit
    {standard input}:746    .text.accInit:0000014c $d
    {standard input}:753    .text.accSetCalibrationCycles:00000000 $t
    {standard input}:758    .text.accSetCalibrationCycles:00000000 accSetCalibrationCycles
    {standard input}:797    .text.accSetCalibrationCycles:0000001c $d
    {standard input}:802    .text.accIsCalibrationComplete:00000000 $t
    {standard input}:807    .text.accIsCalibrationComplete:00000000 accIsCalibrationComplete
    {standard input}:843    .text.accIsCalibrationComplete:0000001c $d
    {standard input}:848    .text.isOnFinalAccelerationCalibrationCycle:00000000 $t
    {standard input}:852    .text.isOnFinalAccelerationCalibrationCycle:00000000 isOnFinalAccelerationCalibrationCycle
    {standard input}:888    .text.isOnFinalAccelerationCalibrationCycle:0000001c $d
    {standard input}:893    .text.isOnFirstAccelerationCalibrationCycle:00000000 $t
    {standard input}:897    .text.isOnFirstAccelerationCalibrationCycle:00000000 isOnFirstAccelerationCalibrationCycle
    {standard input}:933    .text.isOnFirstAccelerationCalibrationCycle:00000020 $d
    {standard input}:938    .text.performAcclerationCalibration:00000000 $t
    {standard input}:942    .text.performAcclerationCalibration:00000000 performAcclerationCalibration
    {standard input}:1100   .text.performAcclerationCalibration:0000010c $d
    {standard input}:1973   .bss.a.13233:00000000 a.13233
    {standard input}:1109   .text.performInflightAccelerationCalibration:00000000 $t
    {standard input}:1113   .text.performInflightAccelerationCalibration:00000000 performInflightAccelerationCalibration
    {standard input}:1362   .text.performInflightAccelerationCalibration:000001a4 $d
    {standard input}:1979   .bss.accZero_saved.13242:00000000 accZero_saved.13242
    {standard input}:1985   .bss.angleTrim_saved.13243:00000000 angleTrim_saved.13243
    {standard input}:1991   .bss.b.13241:00000000 b.13241
    {standard input}:1376   .text.applyAccelerationTrims:00000000 $t
    {standard input}:1380   .text.applyAccelerationTrims:00000000 applyAccelerationTrims
    {standard input}:1465   .text.applyAccelerationTrims:0000009c $d
    {standard input}:1470   .text.accUpdate:00000000 $t
    {standard input}:1475   .text.accUpdate:00000000 accUpdate
    {standard input}:1697   .text.accUpdate:00000164 $d
    {standard input}:1710   .text.accGetAccumulationAverage:00000000 $t
    {standard input}:1715   .text.accGetAccumulationAverage:00000000 accGetAccumulationAverage
    {standard input}:1828   .text.accGetAccumulationAverage:00000090 $d
    {standard input}:1834   .text.setAccelerationTrims:00000000 $t
    {standard input}:1839   .text.setAccelerationTrims:00000000 setAccelerationTrims
    {standard input}:1877   .text.setAccelerationTrims:00000018 $d
    {standard input}:1882   .text.accInitFilters:00000000 $t
    {standard input}:1887   .text.accInitFilters:00000000 accInitFilters
    {standard input}:1963   .text.accInitFilters:00000064 $d
    {standard input}:1970   .bss.a.13233:00000000 $d
    {standard input}:1976   .bss.accZero_saved.13242:00000000 $d
    {standard input}:1982   .bss.angleTrim_saved.13243:00000000 $d
    {standard input}:1988   .bss.b.13241:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
mpu6500AccDetect
sensorsSet
detectedSensors
gyroSensorBus
gyroMpuDetectionResult
biquadFilterInitLPF
saveConfigAndNotify
beeper
InflightcalibratingA
AccInflightCalibrationActive
AccInflightCalibrationMeasurementDone
AccInflightCalibrationSavetoEEProm
biquadFilterApply
alignSensors
feature
debugMode
debug
