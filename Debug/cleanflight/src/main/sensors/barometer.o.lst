   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "barometer.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.barometerConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	barometerConfig:
  25              	.LFB526:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/barometer.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** #include "drivers/barometer/barometer.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** typedef enum {
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_DEFAULT = 0,
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_NONE = 1,
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_BMP085 = 2,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_MS5611 = 3,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_BMP280 = 4,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_LPS = 5,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_QMP6988 = 6,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 	BARO_DPS310 = 7
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** } baroSensor_e;
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** #define BARO_SAMPLE_COUNT_MAX   48
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** typedef struct barometerConfig_s {
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_bustype;
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_spi_device;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     ioTag_t baro_spi_csn;                   // Also used as XCLR (positive logic) for BMP085
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_i2c_device;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_i2c_address;
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_hardware;                  // Barometer hardware to use
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_sample_count;              // size of baro filter array
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint16_t baro_noise_lpf;                // additional LPF to reduce baro noise
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint16_t baro_cf_vel;                   // apply Complimentary Filter to keep the calculated ve
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint16_t baro_cf_alt;                   // apply CF to use ACC for height estimation
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** } barometerConfig_t;
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** PG_DECLARE(barometerConfig_t, barometerConfig);
  27              	 .loc 1 52 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 52 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word barometerConfig_System
  55              	 .cfi_endproc
  56              	.LFE526:
  58              	 .comm baro,45,4
  59              	 .comm barometerConfig_System,13,4
  60              	 .comm barometerConfig_Copy,13,4
  61              	 .global barometerConfig_Registry
  62              	 .section .pg_registry,"a",%progbits
  63              	 .align 2
  66              	barometerConfig_Registry:
  67 0000 2600     	 .short 38
  68 0002 0D00     	 .short 13
  69 0004 00000000 	 .word barometerConfig_System
  70 0008 00000000 	 .word barometerConfig_Copy
  71 000c 00000000 	 .word 0
  72 0010 00000000 	 .word pgResetFn_barometerConfig
  73              	 .section .text.pgResetFn_barometerConfig,"ax",%progbits
  74              	 .align 2
  75              	 .global pgResetFn_barometerConfig
  76              	 .thumb
  77              	 .thumb_func
  79              	pgResetFn_barometerConfig:
  80              	.LFB528:
  81              	 .file 2 "../cleanflight/src/main/sensors/barometer.c"
   1:../cleanflight/src/main/sensors/barometer.c **** /*
   2:../cleanflight/src/main/sensors/barometer.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/sensors/barometer.c ****  *
   4:../cleanflight/src/main/sensors/barometer.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/sensors/barometer.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/sensors/barometer.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/sensors/barometer.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/sensors/barometer.c ****  * any later version.
   9:../cleanflight/src/main/sensors/barometer.c ****  *
  10:../cleanflight/src/main/sensors/barometer.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/sensors/barometer.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/sensors/barometer.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/sensors/barometer.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/sensors/barometer.c ****  *
  15:../cleanflight/src/main/sensors/barometer.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/sensors/barometer.c ****  * along with this software.
  17:../cleanflight/src/main/sensors/barometer.c ****  *
  18:../cleanflight/src/main/sensors/barometer.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/sensors/barometer.c ****  */
  20:../cleanflight/src/main/sensors/barometer.c **** 
  21:../cleanflight/src/main/sensors/barometer.c **** #include <stdbool.h>
  22:../cleanflight/src/main/sensors/barometer.c **** #include <stdint.h>
  23:../cleanflight/src/main/sensors/barometer.c **** #include <math.h>
  24:../cleanflight/src/main/sensors/barometer.c **** 
  25:../cleanflight/src/main/sensors/barometer.c **** #include "platform.h"
  26:../cleanflight/src/main/sensors/barometer.c **** 
  27:../cleanflight/src/main/sensors/barometer.c **** #include "common/maths.h"
  28:../cleanflight/src/main/sensors/barometer.c **** 
  29:../cleanflight/src/main/sensors/barometer.c **** #include "pg/pg.h"
  30:../cleanflight/src/main/sensors/barometer.c **** #include "pg/pg_ids.h"
  31:../cleanflight/src/main/sensors/barometer.c **** 
  32:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/bus.h"
  33:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/bus_spi.h"
  34:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/io.h"
  35:../cleanflight/src/main/sensors/barometer.c **** 
  36:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/barometer/barometer.h"
  37:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/barometer/barometer_bmp085.h"
  38:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/barometer/barometer_bmp280.h"
  39:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/barometer/barometer_qmp6988.h"
  40:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/barometer/barometer_fake.h"
  41:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/barometer/barometer_ms5611.h"
  42:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/barometer/barometer_lps.h"
  43:../cleanflight/src/main/sensors/barometer.c **** #include "drivers/barometer/barometer_dps310.h"
  44:../cleanflight/src/main/sensors/barometer.c **** 
  45:../cleanflight/src/main/sensors/barometer.c **** #include "fc/runtime_config.h"
  46:../cleanflight/src/main/sensors/barometer.c **** 
  47:../cleanflight/src/main/sensors/barometer.c **** #include "sensors/barometer.h"
  48:../cleanflight/src/main/sensors/barometer.c **** #include "sensors/sensors.h"
  49:../cleanflight/src/main/sensors/barometer.c **** 
  50:../cleanflight/src/main/sensors/barometer.c **** #ifdef USE_HARDWARE_REVISION_DETECTION
  51:../cleanflight/src/main/sensors/barometer.c **** #include "hardware_revision.h"
  52:../cleanflight/src/main/sensors/barometer.c **** #endif
  53:../cleanflight/src/main/sensors/barometer.c **** 
  54:../cleanflight/src/main/sensors/barometer.c **** baro_t baro;                        // barometer access functions
  55:../cleanflight/src/main/sensors/barometer.c **** 
  56:../cleanflight/src/main/sensors/barometer.c **** PG_REGISTER_WITH_RESET_FN(barometerConfig_t, barometerConfig, PG_BAROMETER_CONFIG, 0);
  57:../cleanflight/src/main/sensors/barometer.c **** 
  58:../cleanflight/src/main/sensors/barometer.c **** void pgResetFn_barometerConfig(barometerConfig_t *barometerConfig)
  59:../cleanflight/src/main/sensors/barometer.c **** {
  82              	 .loc 2 59 0
  83              	 .cfi_startproc
  84              	 
  85              	 
  86              	 
  87 0000 80B4     	 push {r7}
  88              	.LCFI4:
  89              	 .cfi_def_cfa_offset 4
  90              	 .cfi_offset 7,-4
  91 0002 83B0     	 sub sp,sp,#12
  92              	.LCFI5:
  93              	 .cfi_def_cfa_offset 16
  94 0004 00AF     	 add r7,sp,#0
  95              	.LCFI6:
  96              	 .cfi_def_cfa_register 7
  97 0006 7860     	 str r0,[r7,#4]
  60:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_sample_count = 21;
  98              	 .loc 2 60 0
  99 0008 7B68     	 ldr r3,[r7,#4]
 100 000a 1522     	 movs r2,#21
 101 000c 9A71     	 strb r2,[r3,#6]
  61:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_noise_lpf = 600;
 102              	 .loc 2 61 0
 103 000e 7B68     	 ldr r3,[r7,#4]
 104 0010 0022     	 movs r2,#0
 105 0012 42F05802 	 orr r2,r2,#88
 106 0016 DA71     	 strb r2,[r3,#7]
 107 0018 0022     	 movs r2,#0
 108 001a 42F00202 	 orr r2,r2,#2
 109 001e 1A72     	 strb r2,[r3,#8]
  62:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_cf_vel = 985;
 110              	 .loc 2 62 0
 111 0020 7B68     	 ldr r3,[r7,#4]
 112 0022 0022     	 movs r2,#0
 113 0024 62F02602 	 orn r2,r2,#38
 114 0028 5A72     	 strb r2,[r3,#9]
 115 002a 0022     	 movs r2,#0
 116 002c 42F00302 	 orr r2,r2,#3
 117 0030 9A72     	 strb r2,[r3,#10]
  63:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_cf_alt = 965;
 118              	 .loc 2 63 0
 119 0032 7B68     	 ldr r3,[r7,#4]
 120 0034 0022     	 movs r2,#0
 121 0036 62F03A02 	 orn r2,r2,#58
 122 003a DA72     	 strb r2,[r3,#11]
 123 003c 0022     	 movs r2,#0
 124 003e 42F00302 	 orr r2,r2,#3
 125 0042 1A73     	 strb r2,[r3,#12]
  64:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_hardware = BARO_DEFAULT;
 126              	 .loc 2 64 0
 127 0044 7B68     	 ldr r3,[r7,#4]
 128 0046 0022     	 movs r2,#0
 129 0048 5A71     	 strb r2,[r3,#5]
  65:../cleanflight/src/main/sensors/barometer.c **** 
  66:../cleanflight/src/main/sensors/barometer.c ****     // For backward compatibility; ceate a valid default value for bus parameters
  67:../cleanflight/src/main/sensors/barometer.c ****     //
  68:../cleanflight/src/main/sensors/barometer.c ****     // 1. If DEFAULT_BARO_xxx is defined, use it.
  69:../cleanflight/src/main/sensors/barometer.c ****     // 2. Determine default based on USE_BARO_xxx
  70:../cleanflight/src/main/sensors/barometer.c ****     //   a. Precedence is in the order of popularity; BMP280, MS5611 then BMP085, then
  71:../cleanflight/src/main/sensors/barometer.c ****     //   b. If SPI variant is specified, it is likely onboard, so take it.
  72:../cleanflight/src/main/sensors/barometer.c **** 
  73:../cleanflight/src/main/sensors/barometer.c **** #if !(defined(DEFAULT_BARO_SPI_BMP280) || defined(DEFAULT_BARO_BMP280) || defined(DEFAULT_BARO_SPI_
  74:../cleanflight/src/main/sensors/barometer.c **** #if defined(USE_BARO_BMP280) || defined(USE_BARO_SPI_BMP280)
  75:../cleanflight/src/main/sensors/barometer.c **** #if defined(USE_BARO_SPI_BMP280)
  76:../cleanflight/src/main/sensors/barometer.c **** #define DEFAULT_BARO_SPI_BMP280
  77:../cleanflight/src/main/sensors/barometer.c **** #else
  78:../cleanflight/src/main/sensors/barometer.c **** #define DEFAULT_BARO_BMP280
  79:../cleanflight/src/main/sensors/barometer.c **** #endif
  80:../cleanflight/src/main/sensors/barometer.c **** #elif defined(USE_BARO_MS5611) || defined(USE_BARO_SPI_MS5611)
  81:../cleanflight/src/main/sensors/barometer.c **** #if defined(USE_BARO_SPI_MS5611)
  82:../cleanflight/src/main/sensors/barometer.c **** #define DEFAULT_BARO_SPI_MS5611
  83:../cleanflight/src/main/sensors/barometer.c **** #else
  84:../cleanflight/src/main/sensors/barometer.c **** #define DEFAULT_BARO_MS5611
  85:../cleanflight/src/main/sensors/barometer.c **** #endif
  86:../cleanflight/src/main/sensors/barometer.c **** #elif defined(USE_BARO_QMP6988) || defined(USE_BARO_SPI_QMP6988)
  87:../cleanflight/src/main/sensors/barometer.c **** #if defined(USE_BARO_SPI_QMP6988)
  88:../cleanflight/src/main/sensors/barometer.c **** #define DEFAULT_BARO_SPI_QMP6988
  89:../cleanflight/src/main/sensors/barometer.c **** #else
  90:../cleanflight/src/main/sensors/barometer.c **** #define DEFAULT_BARO_QMP6988
  91:../cleanflight/src/main/sensors/barometer.c **** #endif
  92:../cleanflight/src/main/sensors/barometer.c **** #elif defined(USE_BARO_SPI_LPS)
  93:../cleanflight/src/main/sensors/barometer.c **** #define DEFAULT_BARO_SPI_LPS
  94:../cleanflight/src/main/sensors/barometer.c **** #elif defined(DEFAULT_BARO_BMP085)
  95:../cleanflight/src/main/sensors/barometer.c **** #define DEFAULT_BARO_BMP085
  96:../cleanflight/src/main/sensors/barometer.c **** #elif defined(USE_BARO_DPS310)
  97:../cleanflight/src/main/sensors/barometer.c **** #define DEFAULT_BARO_DPS310
  98:../cleanflight/src/main/sensors/barometer.c **** #endif
  99:../cleanflight/src/main/sensors/barometer.c **** #endif
 100:../cleanflight/src/main/sensors/barometer.c **** 
 101:../cleanflight/src/main/sensors/barometer.c **** #if defined(DEFAULT_BARO_SPI_BMP280)
 102:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_bustype = BUSTYPE_SPI;
 103:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_device = SPI_DEV_TO_CFG(spiDeviceByInstance(BMP280_SPI_INSTANCE));
 104:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_csn = IO_TAG(BMP280_CS_PIN);
 105:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_device = I2C_DEV_TO_CFG(I2CINVALID);
 106:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_address = 0;
 107:../cleanflight/src/main/sensors/barometer.c **** #elif defined(DEFAULT_BARO_SPI_MS5611)
 108:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_bustype = BUSTYPE_SPI;
 109:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_device = SPI_DEV_TO_CFG(spiDeviceByInstance(MS5611_SPI_INSTANCE));
 110:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_csn = IO_TAG(MS5611_CS_PIN);
 111:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_device = I2C_DEV_TO_CFG(I2CINVALID);
 112:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_address = 0;
 113:../cleanflight/src/main/sensors/barometer.c **** #elif defined(DEFAULT_BARO_SPI_QMP6988)
 114:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_bustype = BUSTYPE_SPI;
 115:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_device = SPI_DEV_TO_CFG(spiDeviceByInstance(QMP6988_SPI_INSTANCE));
 116:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_csn = IO_TAG(QMP6988_CS_PIN);
 117:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_device = I2C_DEV_TO_CFG(I2CINVALID);
 118:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_address = 0;
 119:../cleanflight/src/main/sensors/barometer.c **** #elif defined(DEFAULT_BARO_SPI_LPS)
 120:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_bustype = BUSTYPE_SPI;
 121:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_device = SPI_DEV_TO_CFG(spiDeviceByInstance(LPS_SPI_INSTANCE));
 122:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_csn = IO_TAG(LPS_CS_PIN);
 123:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_device = I2C_DEV_TO_CFG(I2CINVALID);
 124:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_address = 0;
 125:../cleanflight/src/main/sensors/barometer.c **** #elif defined(DEFAULT_BARO_MS5611) || defined(DEFAULT_BARO_BMP280) || defined(DEFAULT_BARO_BMP085)|
 126:../cleanflight/src/main/sensors/barometer.c ****     // All I2C devices shares a default config with address = 0 (per device default)
 127:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_bustype = BUSTYPE_I2C;
 130              	 .loc 2 127 0
 131 004a 7B68     	 ldr r3,[r7,#4]
 132 004c 0122     	 movs r2,#1
 133 004e 1A70     	 strb r2,[r3]
 128:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_device = I2C_DEV_TO_CFG(BARO_I2C_INSTANCE);
 134              	 .loc 2 128 0
 135 0050 7B68     	 ldr r3,[r7,#4]
 136 0052 0522     	 movs r2,#5
 137 0054 DA70     	 strb r2,[r3,#3]
 129:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_address = 0;
 138              	 .loc 2 129 0
 139 0056 7B68     	 ldr r3,[r7,#4]
 140 0058 0022     	 movs r2,#0
 141 005a 1A71     	 strb r2,[r3,#4]
 130:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_device = SPI_DEV_TO_CFG(SPIINVALID);
 142              	 .loc 2 130 0
 143 005c 7B68     	 ldr r3,[r7,#4]
 144 005e 0022     	 movs r2,#0
 145 0060 5A70     	 strb r2,[r3,#1]
 131:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_csn = IO_TAG_NONE;
 146              	 .loc 2 131 0
 147 0062 7B68     	 ldr r3,[r7,#4]
 148 0064 0022     	 movs r2,#0
 149 0066 9A70     	 strb r2,[r3,#2]
 132:../cleanflight/src/main/sensors/barometer.c **** #else
 133:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_hardware = BARO_NONE;
 134:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_bustype = BUSTYPE_NONE;
 135:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_device = I2C_DEV_TO_CFG(I2CINVALID);
 136:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_i2c_address = 0;
 137:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_device = SPI_DEV_TO_CFG(SPIINVALID);
 138:../cleanflight/src/main/sensors/barometer.c ****     barometerConfig->baro_spi_csn = IO_TAG_NONE;
 139:../cleanflight/src/main/sensors/barometer.c **** #endif
 140:../cleanflight/src/main/sensors/barometer.c **** }
 150              	 .loc 2 140 0
 151 0068 0C37     	 adds r7,r7,#12
 152              	.LCFI7:
 153              	 .cfi_def_cfa_offset 4
 154 006a BD46     	 mov sp,r7
 155              	.LCFI8:
 156              	 .cfi_def_cfa_register 13
 157              	 
 158 006c 5DF8047B 	 ldr r7,[sp],#4
 159              	.LCFI9:
 160              	 .cfi_restore 7
 161              	 .cfi_def_cfa_offset 0
 162 0070 7047     	 bx lr
 163              	 .cfi_endproc
 164              	.LFE528:
 166 0072 00BF     	 .section .bss.calibratingB,"aw",%nobits
 167              	 .align 1
 170              	calibratingB:
 171 0000 0000     	 .space 2
 172              	 .section .bss.baroPressure,"aw",%nobits
 173              	 .align 2
 176              	baroPressure:
 177 0000 00000000 	 .space 4
 178              	 .section .bss.baroTemperature,"aw",%nobits
 179              	 .align 2
 182              	baroTemperature:
 183 0000 00000000 	 .space 4
 184              	 .section .bss.baroGroundAltitude,"aw",%nobits
 185              	 .align 2
 188              	baroGroundAltitude:
 189 0000 00000000 	 .space 4
 190              	 .section .data.baroGroundPressure,"aw",%progbits
 191              	 .align 2
 194              	baroGroundPressure:
 195 0000 685E0C00 	 .word 810600
 196              	 .section .bss.baroPressureSum,"aw",%nobits
 197              	 .align 2
 200              	baroPressureSum:
 201 0000 00000000 	 .space 4
 202              	 .section .text.baroDetect,"ax",%progbits
 203              	 .align 2
 204              	 .global baroDetect
 205              	 .thumb
 206              	 .thumb_func
 208              	baroDetect:
 209              	.LFB529:
 141:../cleanflight/src/main/sensors/barometer.c **** 
 142:../cleanflight/src/main/sensors/barometer.c **** #ifdef USE_BARO
 143:../cleanflight/src/main/sensors/barometer.c **** 
 144:../cleanflight/src/main/sensors/barometer.c **** static uint16_t calibratingB = 0;      // baro calibration = get new ground pressure value
 145:../cleanflight/src/main/sensors/barometer.c **** static int32_t baroPressure = 0;
 146:../cleanflight/src/main/sensors/barometer.c **** static int32_t baroTemperature = 0;
 147:../cleanflight/src/main/sensors/barometer.c **** 
 148:../cleanflight/src/main/sensors/barometer.c **** static int32_t baroGroundAltitude = 0;
 149:../cleanflight/src/main/sensors/barometer.c **** static int32_t baroGroundPressure = 8*101325;
 150:../cleanflight/src/main/sensors/barometer.c **** static uint32_t baroPressureSum = 0;
 151:../cleanflight/src/main/sensors/barometer.c **** 
 152:../cleanflight/src/main/sensors/barometer.c **** bool baroDetect(baroDev_t *dev, baroSensor_e baroHardwareToUse)
 153:../cleanflight/src/main/sensors/barometer.c **** {
 210              	 .loc 2 153 0
 211              	 .cfi_startproc
 212              	 
 213              	 
 214 0000 90B5     	 push {r4,r7,lr}
 215              	.LCFI10:
 216              	 .cfi_def_cfa_offset 12
 217              	 .cfi_offset 4,-12
 218              	 .cfi_offset 7,-8
 219              	 .cfi_offset 14,-4
 220 0002 85B0     	 sub sp,sp,#20
 221              	.LCFI11:
 222              	 .cfi_def_cfa_offset 32
 223 0004 00AF     	 add r7,sp,#0
 224              	.LCFI12:
 225              	 .cfi_def_cfa_register 7
 226 0006 7860     	 str r0,[r7,#4]
 227 0008 0B46     	 mov r3,r1
 228 000a FB70     	 strb r3,[r7,#3]
 154:../cleanflight/src/main/sensors/barometer.c ****     // Detect what pressure sensors are available. baro->update() is set to sensor-specific update 
 155:../cleanflight/src/main/sensors/barometer.c **** 
 156:../cleanflight/src/main/sensors/barometer.c ****     baroSensor_e baroHardware = baroHardwareToUse;
 229              	 .loc 2 156 0
 230 000c FB78     	 ldrb r3,[r7,#3]
 231 000e FB73     	 strb r3,[r7,#15]
 157:../cleanflight/src/main/sensors/barometer.c **** 
 158:../cleanflight/src/main/sensors/barometer.c **** #if !defined(USE_BARO_BMP085) && !defined(USE_BARO_MS5611) && !defined(USE_BARO_SPI_MS5611) && !def
 159:../cleanflight/src/main/sensors/barometer.c ****     UNUSED(dev);
 160:../cleanflight/src/main/sensors/barometer.c **** #endif
 161:../cleanflight/src/main/sensors/barometer.c **** 
 162:../cleanflight/src/main/sensors/barometer.c ****     switch (barometerConfig()->baro_bustype) {
 232              	 .loc 2 162 0
 233 0010 FFF7FEFF 	 bl barometerConfig
 234 0014 0346     	 mov r3,r0
 235 0016 1B78     	 ldrb r3,[r3]
 236 0018 012B     	 cmp r3,#1
 237 001a 02D0     	 beq .L8
 238 001c 022B     	 cmp r3,#2
 239 001e 13D0     	 beq .L9
 240 0020 32E0     	 b .L17
 241              	.L8:
 163:../cleanflight/src/main/sensors/barometer.c ****     case BUSTYPE_I2C:
 164:../cleanflight/src/main/sensors/barometer.c **** #ifdef USE_I2C
 165:../cleanflight/src/main/sensors/barometer.c ****         dev->busdev.bustype = BUSTYPE_I2C;
 242              	 .loc 2 165 0
 243 0022 7B68     	 ldr r3,[r7,#4]
 244 0024 0122     	 movs r2,#1
 245 0026 1A70     	 strb r2,[r3]
 166:../cleanflight/src/main/sensors/barometer.c ****         dev->busdev.busdev_u.i2c.device = I2C_CFG_TO_DEV(barometerConfig()->baro_i2c_device);
 246              	 .loc 2 166 0
 247 0028 FFF7FEFF 	 bl barometerConfig
 248 002c 0346     	 mov r3,r0
 249 002e DB78     	 ldrb r3,[r3,#3]
 250 0030 013B     	 subs r3,r3,#1
 251 0032 DBB2     	 uxtb r3,r3
 252 0034 DAB2     	 uxtb r2,r3
 253 0036 7B68     	 ldr r3,[r7,#4]
 254 0038 5A70     	 strb r2,[r3,#1]
 167:../cleanflight/src/main/sensors/barometer.c ****         dev->busdev.busdev_u.i2c.address = barometerConfig()->baro_i2c_address;
 255              	 .loc 2 167 0
 256 003a FFF7FEFF 	 bl barometerConfig
 257 003e 0346     	 mov r3,r0
 258 0040 1A79     	 ldrb r2,[r3,#4]
 259 0042 7B68     	 ldr r3,[r7,#4]
 260 0044 9A70     	 strb r2,[r3,#2]
 168:../cleanflight/src/main/sensors/barometer.c **** #endif
 169:../cleanflight/src/main/sensors/barometer.c ****         break;
 261              	 .loc 2 169 0
 262 0046 21E0     	 b .L10
 263              	.L9:
 170:../cleanflight/src/main/sensors/barometer.c **** 
 171:../cleanflight/src/main/sensors/barometer.c ****     case BUSTYPE_SPI:
 172:../cleanflight/src/main/sensors/barometer.c **** #ifdef USE_SPI
 173:../cleanflight/src/main/sensors/barometer.c ****         dev->busdev.bustype = BUSTYPE_SPI;
 264              	 .loc 2 173 0
 265 0048 7B68     	 ldr r3,[r7,#4]
 266 004a 0222     	 movs r2,#2
 267 004c 1A70     	 strb r2,[r3]
 174:../cleanflight/src/main/sensors/barometer.c ****         spiBusSetInstance(&dev->busdev, spiInstanceByDevice(SPI_CFG_TO_DEV(barometerConfig()->baro_
 268              	 .loc 2 174 0
 269 004e 7C68     	 ldr r4,[r7,#4]
 270 0050 FFF7FEFF 	 bl barometerConfig
 271 0054 0346     	 mov r3,r0
 272 0056 5B78     	 ldrb r3,[r3,#1]
 273 0058 013B     	 subs r3,r3,#1
 274 005a DBB2     	 uxtb r3,r3
 275 005c DBB2     	 uxtb r3,r3
 276 005e 5BB2     	 sxtb r3,r3
 277 0060 1846     	 mov r0,r3
 278 0062 FFF7FEFF 	 bl spiInstanceByDevice
 279 0066 0346     	 mov r3,r0
 280 0068 2046     	 mov r0,r4
 281 006a 1946     	 mov r1,r3
 282 006c FFF7FEFF 	 bl spiBusSetInstance
 175:../cleanflight/src/main/sensors/barometer.c ****         dev->busdev.busdev_u.spi.csnPin = IOGetByTag(barometerConfig()->baro_spi_csn);
 283              	 .loc 2 175 0
 284 0070 FFF7FEFF 	 bl barometerConfig
 285 0074 0346     	 mov r3,r0
 286 0076 9B78     	 ldrb r3,[r3,#2]
 287 0078 1846     	 mov r0,r3
 288 007a FFF7FEFF 	 bl IOGetByTag
 289 007e 0246     	 mov r2,r0
 290 0080 7B68     	 ldr r3,[r7,#4]
 291 0082 C3F80520 	 str r2,[r3,#5]
 176:../cleanflight/src/main/sensors/barometer.c **** #endif
 177:../cleanflight/src/main/sensors/barometer.c ****         break;
 292              	 .loc 2 177 0
 293 0086 01E0     	 b .L10
 294              	.L17:
 178:../cleanflight/src/main/sensors/barometer.c **** 
 179:../cleanflight/src/main/sensors/barometer.c ****     default:
 180:../cleanflight/src/main/sensors/barometer.c ****         return false;
 295              	 .loc 2 180 0
 296 0088 0023     	 movs r3,#0
 297 008a 2DE0     	 b .L11
 298              	.L10:
 181:../cleanflight/src/main/sensors/barometer.c ****     }
 182:../cleanflight/src/main/sensors/barometer.c **** 
 183:../cleanflight/src/main/sensors/barometer.c ****     switch (baroHardware) {
 299              	 .loc 2 183 0
 300 008c FB7B     	 ldrb r3,[r7,#15]
 301 008e 072B     	 cmp r3,#7
 302 0090 1ED8     	 bhi .L12
 303 0092 01A2     	 adr r2,.L14
 304 0094 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 305              	 .p2align 2
 306              	.L14:
 307 0098 B9000000 	 .word .L13+1
 308 009c CB000000 	 .word .L15+1
 309 00a0 B9000000 	 .word .L13+1
 310 00a4 B9000000 	 .word .L13+1
 311 00a8 B9000000 	 .word .L13+1
 312 00ac B9000000 	 .word .L13+1
 313 00b0 B9000000 	 .word .L13+1
 314 00b4 B9000000 	 .word .L13+1
 315              	 .p2align 1
 316              	.L13:
 184:../cleanflight/src/main/sensors/barometer.c ****     case BARO_DEFAULT:
 185:../cleanflight/src/main/sensors/barometer.c ****         FALLTHROUGH;
 186:../cleanflight/src/main/sensors/barometer.c **** 
 187:../cleanflight/src/main/sensors/barometer.c ****     case BARO_BMP085:
 188:../cleanflight/src/main/sensors/barometer.c **** #ifdef USE_BARO_BMP085
 189:../cleanflight/src/main/sensors/barometer.c ****         {
 190:../cleanflight/src/main/sensors/barometer.c ****             const bmp085Config_t *bmp085Config = NULL;
 191:../cleanflight/src/main/sensors/barometer.c **** 
 192:../cleanflight/src/main/sensors/barometer.c **** #if defined(BARO_XCLR_GPIO) && defined(BARO_EOC_GPIO)
 193:../cleanflight/src/main/sensors/barometer.c ****             static const bmp085Config_t defaultBMP085Config = {
 194:../cleanflight/src/main/sensors/barometer.c ****                 .xclrIO = IO_TAG(BARO_XCLR_PIN),
 195:../cleanflight/src/main/sensors/barometer.c ****                 .eocIO = IO_TAG(BARO_EOC_PIN),
 196:../cleanflight/src/main/sensors/barometer.c ****             };
 197:../cleanflight/src/main/sensors/barometer.c ****             bmp085Config = &defaultBMP085Config;
 198:../cleanflight/src/main/sensors/barometer.c **** #endif
 199:../cleanflight/src/main/sensors/barometer.c **** 
 200:../cleanflight/src/main/sensors/barometer.c ****             if (bmp085Detect(bmp085Config, dev)) {
 201:../cleanflight/src/main/sensors/barometer.c ****                 baroHardware = BARO_BMP085;
 202:../cleanflight/src/main/sensors/barometer.c ****                 break;
 203:../cleanflight/src/main/sensors/barometer.c ****             }
 204:../cleanflight/src/main/sensors/barometer.c ****         }
 205:../cleanflight/src/main/sensors/barometer.c **** #endif
 206:../cleanflight/src/main/sensors/barometer.c ****         FALLTHROUGH;
 207:../cleanflight/src/main/sensors/barometer.c **** 
 208:../cleanflight/src/main/sensors/barometer.c ****     case BARO_MS5611:
 209:../cleanflight/src/main/sensors/barometer.c **** #if defined(USE_BARO_MS5611) || defined(USE_BARO_SPI_MS5611)
 210:../cleanflight/src/main/sensors/barometer.c ****         if (ms5611Detect(dev)) {
 211:../cleanflight/src/main/sensors/barometer.c ****             baroHardware = BARO_MS5611;
 212:../cleanflight/src/main/sensors/barometer.c ****             break;
 213:../cleanflight/src/main/sensors/barometer.c ****         }
 214:../cleanflight/src/main/sensors/barometer.c **** #endif
 215:../cleanflight/src/main/sensors/barometer.c ****         FALLTHROUGH;
 216:../cleanflight/src/main/sensors/barometer.c **** 
 217:../cleanflight/src/main/sensors/barometer.c ****     case BARO_LPS:
 218:../cleanflight/src/main/sensors/barometer.c **** #if defined(USE_BARO_SPI_LPS)
 219:../cleanflight/src/main/sensors/barometer.c ****         if (lpsDetect(dev)) {
 220:../cleanflight/src/main/sensors/barometer.c ****             baroHardware = BARO_LPS;
 221:../cleanflight/src/main/sensors/barometer.c ****             break;
 222:../cleanflight/src/main/sensors/barometer.c ****         }
 223:../cleanflight/src/main/sensors/barometer.c **** #endif
 224:../cleanflight/src/main/sensors/barometer.c ****         FALLTHROUGH;
 225:../cleanflight/src/main/sensors/barometer.c **** 
 226:../cleanflight/src/main/sensors/barometer.c ****     case BARO_BMP280:
 227:../cleanflight/src/main/sensors/barometer.c **** #if defined(USE_BARO_BMP280) || defined(USE_BARO_SPI_BMP280)
 228:../cleanflight/src/main/sensors/barometer.c ****         if (bmp280Detect(dev)) {
 229:../cleanflight/src/main/sensors/barometer.c ****             baroHardware = BARO_BMP280;
 230:../cleanflight/src/main/sensors/barometer.c ****             break;
 231:../cleanflight/src/main/sensors/barometer.c ****         }
 232:../cleanflight/src/main/sensors/barometer.c **** #endif
 233:../cleanflight/src/main/sensors/barometer.c ****         FALLTHROUGH;
 234:../cleanflight/src/main/sensors/barometer.c **** 	
 235:../cleanflight/src/main/sensors/barometer.c **** 	 case BARO_QMP6988:
 236:../cleanflight/src/main/sensors/barometer.c **** #if defined(USE_BARO_QMP6988) || defined(USE_BARO_SPI_QMP6988)
 237:../cleanflight/src/main/sensors/barometer.c ****         if (qmp6988Detect(dev)) {
 238:../cleanflight/src/main/sensors/barometer.c ****             baroHardware = BARO_QMP6988;
 239:../cleanflight/src/main/sensors/barometer.c ****             break;
 240:../cleanflight/src/main/sensors/barometer.c ****         }
 241:../cleanflight/src/main/sensors/barometer.c **** #endif
 242:../cleanflight/src/main/sensors/barometer.c **** 		FALLTHROUGH;
 243:../cleanflight/src/main/sensors/barometer.c **** 
 244:../cleanflight/src/main/sensors/barometer.c **** 	 case BARO_DPS310:
 245:../cleanflight/src/main/sensors/barometer.c **** #if defined(USE_BARO_DPS310)
 246:../cleanflight/src/main/sensors/barometer.c **** 		 if (dps310Detect(dev)) {
 317              	 .loc 2 246 0
 318 00b8 7868     	 ldr r0,[r7,#4]
 319 00ba FFF7FEFF 	 bl dps310Detect
 320 00be 0346     	 mov r3,r0
 321 00c0 002B     	 cmp r3,#0
 322 00c2 02D0     	 beq .L15
 247:../cleanflight/src/main/sensors/barometer.c **** 			 baroHardware = BARO_DPS310;
 323              	 .loc 2 247 0
 324 00c4 0723     	 movs r3,#7
 325 00c6 FB73     	 strb r3,[r7,#15]
 248:../cleanflight/src/main/sensors/barometer.c **** 			 break;
 326              	 .loc 2 248 0
 327 00c8 02E0     	 b .L12
 328              	.L15:
 249:../cleanflight/src/main/sensors/barometer.c **** 		 }
 250:../cleanflight/src/main/sensors/barometer.c **** #endif
 251:../cleanflight/src/main/sensors/barometer.c **** 		 FALLTHROUGH;
 252:../cleanflight/src/main/sensors/barometer.c **** 
 253:../cleanflight/src/main/sensors/barometer.c ****     case BARO_NONE:
 254:../cleanflight/src/main/sensors/barometer.c ****         baroHardware = BARO_NONE;
 329              	 .loc 2 254 0
 330 00ca 0123     	 movs r3,#1
 331 00cc FB73     	 strb r3,[r7,#15]
 255:../cleanflight/src/main/sensors/barometer.c ****         break;
 332              	 .loc 2 255 0
 333 00ce 00BF     	 nop
 334              	.L12:
 256:../cleanflight/src/main/sensors/barometer.c ****     }
 257:../cleanflight/src/main/sensors/barometer.c **** 
 258:../cleanflight/src/main/sensors/barometer.c ****     if (baroHardware == BARO_NONE) {
 335              	 .loc 2 258 0
 336 00d0 FB7B     	 ldrb r3,[r7,#15]
 337 00d2 012B     	 cmp r3,#1
 338 00d4 01D1     	 bne .L16
 259:../cleanflight/src/main/sensors/barometer.c ****         return false;
 339              	 .loc 2 259 0
 340 00d6 0023     	 movs r3,#0
 341 00d8 06E0     	 b .L11
 342              	.L16:
 260:../cleanflight/src/main/sensors/barometer.c ****     }
 261:../cleanflight/src/main/sensors/barometer.c **** 
 262:../cleanflight/src/main/sensors/barometer.c ****     detectedSensors[SENSOR_INDEX_BARO] = baroHardware;
 343              	 .loc 2 262 0
 344 00da 054A     	 ldr r2,.L18
 345 00dc FB7B     	 ldrb r3,[r7,#15]
 346 00de 9370     	 strb r3,[r2,#2]
 263:../cleanflight/src/main/sensors/barometer.c ****     sensorsSet(SENSOR_BARO);
 347              	 .loc 2 263 0
 348 00e0 0420     	 movs r0,#4
 349 00e2 FFF7FEFF 	 bl sensorsSet
 264:../cleanflight/src/main/sensors/barometer.c ****     return true;
 350              	 .loc 2 264 0
 351 00e6 0123     	 movs r3,#1
 352              	.L11:
 265:../cleanflight/src/main/sensors/barometer.c **** }
 353              	 .loc 2 265 0
 354 00e8 1846     	 mov r0,r3
 355 00ea 1437     	 adds r7,r7,#20
 356              	.LCFI13:
 357              	 .cfi_def_cfa_offset 12
 358 00ec BD46     	 mov sp,r7
 359              	.LCFI14:
 360              	 .cfi_def_cfa_register 13
 361              	 
 362 00ee 90BD     	 pop {r4,r7,pc}
 363              	.L19:
 364              	 .align 2
 365              	.L18:
 366 00f0 00000000 	 .word detectedSensors
 367              	 .cfi_endproc
 368              	.LFE529:
 370              	 .section .text.isBaroCalibrationComplete,"ax",%progbits
 371              	 .align 2
 372              	 .global isBaroCalibrationComplete
 373              	 .thumb
 374              	 .thumb_func
 376              	isBaroCalibrationComplete:
 377              	.LFB530:
 266:../cleanflight/src/main/sensors/barometer.c **** 
 267:../cleanflight/src/main/sensors/barometer.c **** bool isBaroCalibrationComplete(void)
 268:../cleanflight/src/main/sensors/barometer.c **** {
 378              	 .loc 2 268 0
 379              	 .cfi_startproc
 380              	 
 381              	 
 382              	 
 383 0000 80B4     	 push {r7}
 384              	.LCFI15:
 385              	 .cfi_def_cfa_offset 4
 386              	 .cfi_offset 7,-4
 387 0002 00AF     	 add r7,sp,#0
 388              	.LCFI16:
 389              	 .cfi_def_cfa_register 7
 269:../cleanflight/src/main/sensors/barometer.c ****     return calibratingB == 0;
 390              	 .loc 2 269 0
 391 0004 054B     	 ldr r3,.L22
 392 0006 1B88     	 ldrh r3,[r3]
 393 0008 002B     	 cmp r3,#0
 394 000a 0CBF     	 ite eq
 395 000c 0123     	 moveq r3,#1
 396 000e 0023     	 movne r3,#0
 397 0010 DBB2     	 uxtb r3,r3
 270:../cleanflight/src/main/sensors/barometer.c **** }
 398              	 .loc 2 270 0
 399 0012 1846     	 mov r0,r3
 400 0014 BD46     	 mov sp,r7
 401              	.LCFI17:
 402              	 .cfi_def_cfa_register 13
 403              	 
 404 0016 5DF8047B 	 ldr r7,[sp],#4
 405              	.LCFI18:
 406              	 .cfi_restore 7
 407              	 .cfi_def_cfa_offset 0
 408 001a 7047     	 bx lr
 409              	.L23:
 410              	 .align 2
 411              	.L22:
 412 001c 00000000 	 .word calibratingB
 413              	 .cfi_endproc
 414              	.LFE530:
 416              	 .section .text.baroSetCalibrationCycles,"ax",%progbits
 417              	 .align 2
 418              	 .global baroSetCalibrationCycles
 419              	 .thumb
 420              	 .thumb_func
 422              	baroSetCalibrationCycles:
 423              	.LFB531:
 271:../cleanflight/src/main/sensors/barometer.c **** 
 272:../cleanflight/src/main/sensors/barometer.c **** void baroSetCalibrationCycles(uint16_t calibrationCyclesRequired)
 273:../cleanflight/src/main/sensors/barometer.c **** {
 424              	 .loc 2 273 0
 425              	 .cfi_startproc
 426              	 
 427              	 
 428              	 
 429 0000 80B4     	 push {r7}
 430              	.LCFI19:
 431              	 .cfi_def_cfa_offset 4
 432              	 .cfi_offset 7,-4
 433 0002 83B0     	 sub sp,sp,#12
 434              	.LCFI20:
 435              	 .cfi_def_cfa_offset 16
 436 0004 00AF     	 add r7,sp,#0
 437              	.LCFI21:
 438              	 .cfi_def_cfa_register 7
 439 0006 0346     	 mov r3,r0
 440 0008 FB80     	 strh r3,[r7,#6]
 274:../cleanflight/src/main/sensors/barometer.c ****     calibratingB = calibrationCyclesRequired;
 441              	 .loc 2 274 0
 442 000a 044A     	 ldr r2,.L25
 443 000c FB88     	 ldrh r3,[r7,#6]
 444 000e 1380     	 strh r3,[r2]
 275:../cleanflight/src/main/sensors/barometer.c **** }
 445              	 .loc 2 275 0
 446 0010 0C37     	 adds r7,r7,#12
 447              	.LCFI22:
 448              	 .cfi_def_cfa_offset 4
 449 0012 BD46     	 mov sp,r7
 450              	.LCFI23:
 451              	 .cfi_def_cfa_register 13
 452              	 
 453 0014 5DF8047B 	 ldr r7,[sp],#4
 454              	.LCFI24:
 455              	 .cfi_restore 7
 456              	 .cfi_def_cfa_offset 0
 457 0018 7047     	 bx lr
 458              	.L26:
 459 001a 00BF     	 .align 2
 460              	.L25:
 461 001c 00000000 	 .word calibratingB
 462              	 .cfi_endproc
 463              	.LFE531:
 465              	 .section .bss.baroReady,"aw",%nobits
 468              	baroReady:
 469 0000 00       	 .space 1
 470              	 .section .text.applyBarometerMedianFilter,"ax",%progbits
 471              	 .align 2
 472              	 .thumb
 473              	 .thumb_func
 475              	applyBarometerMedianFilter:
 476              	.LFB532:
 276:../cleanflight/src/main/sensors/barometer.c **** 
 277:../cleanflight/src/main/sensors/barometer.c **** static bool baroReady = false;
 278:../cleanflight/src/main/sensors/barometer.c **** 
 279:../cleanflight/src/main/sensors/barometer.c **** #define PRESSURE_SAMPLES_MEDIAN 3
 280:../cleanflight/src/main/sensors/barometer.c **** 
 281:../cleanflight/src/main/sensors/barometer.c **** static int32_t applyBarometerMedianFilter(int32_t newPressureReading)
 282:../cleanflight/src/main/sensors/barometer.c **** {
 477              	 .loc 2 282 0
 478              	 .cfi_startproc
 479              	 
 480              	 
 481 0000 80B5     	 push {r7,lr}
 482              	.LCFI25:
 483              	 .cfi_def_cfa_offset 8
 484              	 .cfi_offset 7,-8
 485              	 .cfi_offset 14,-4
 486 0002 84B0     	 sub sp,sp,#16
 487              	.LCFI26:
 488              	 .cfi_def_cfa_offset 24
 489 0004 00AF     	 add r7,sp,#0
 490              	.LCFI27:
 491              	 .cfi_def_cfa_register 7
 492 0006 7860     	 str r0,[r7,#4]
 283:../cleanflight/src/main/sensors/barometer.c ****     static int32_t barometerFilterSamples[PRESSURE_SAMPLES_MEDIAN];
 284:../cleanflight/src/main/sensors/barometer.c ****     static int currentFilterSampleIndex = 0;
 285:../cleanflight/src/main/sensors/barometer.c ****     static bool medianFilterReady = false;
 286:../cleanflight/src/main/sensors/barometer.c ****     int nextSampleIndex;
 287:../cleanflight/src/main/sensors/barometer.c **** 
 288:../cleanflight/src/main/sensors/barometer.c ****     nextSampleIndex = (currentFilterSampleIndex + 1);
 493              	 .loc 2 288 0
 494 0008 114B     	 ldr r3,.L31
 495 000a 1B68     	 ldr r3,[r3]
 496 000c 0133     	 adds r3,r3,#1
 497 000e FB60     	 str r3,[r7,#12]
 289:../cleanflight/src/main/sensors/barometer.c ****     if (nextSampleIndex == PRESSURE_SAMPLES_MEDIAN) {
 498              	 .loc 2 289 0
 499 0010 FB68     	 ldr r3,[r7,#12]
 500 0012 032B     	 cmp r3,#3
 501 0014 04D1     	 bne .L28
 290:../cleanflight/src/main/sensors/barometer.c ****         nextSampleIndex = 0;
 502              	 .loc 2 290 0
 503 0016 0023     	 movs r3,#0
 504 0018 FB60     	 str r3,[r7,#12]
 291:../cleanflight/src/main/sensors/barometer.c ****         medianFilterReady = true;
 505              	 .loc 2 291 0
 506 001a 0E4B     	 ldr r3,.L31+4
 507 001c 0122     	 movs r2,#1
 508 001e 1A70     	 strb r2,[r3]
 509              	.L28:
 292:../cleanflight/src/main/sensors/barometer.c ****     }
 293:../cleanflight/src/main/sensors/barometer.c **** 
 294:../cleanflight/src/main/sensors/barometer.c ****     barometerFilterSamples[currentFilterSampleIndex] = newPressureReading;
 510              	 .loc 2 294 0
 511 0020 0B4B     	 ldr r3,.L31
 512 0022 1B68     	 ldr r3,[r3]
 513 0024 0C49     	 ldr r1,.L31+8
 514 0026 7A68     	 ldr r2,[r7,#4]
 515 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 295:../cleanflight/src/main/sensors/barometer.c ****     currentFilterSampleIndex = nextSampleIndex;
 516              	 .loc 2 295 0
 517 002c 084A     	 ldr r2,.L31
 518 002e FB68     	 ldr r3,[r7,#12]
 519 0030 1360     	 str r3,[r2]
 296:../cleanflight/src/main/sensors/barometer.c **** 
 297:../cleanflight/src/main/sensors/barometer.c ****     if (medianFilterReady)
 520              	 .loc 2 297 0
 521 0032 084B     	 ldr r3,.L31+4
 522 0034 1B78     	 ldrb r3,[r3]
 523 0036 002B     	 cmp r3,#0
 524 0038 04D0     	 beq .L29
 298:../cleanflight/src/main/sensors/barometer.c ****         return quickMedianFilter3(barometerFilterSamples);
 525              	 .loc 2 298 0
 526 003a 0748     	 ldr r0,.L31+8
 527 003c FFF7FEFF 	 bl quickMedianFilter3
 528 0040 0346     	 mov r3,r0
 529 0042 00E0     	 b .L30
 530              	.L29:
 299:../cleanflight/src/main/sensors/barometer.c ****     else
 300:../cleanflight/src/main/sensors/barometer.c ****         return newPressureReading;
 531              	 .loc 2 300 0
 532 0044 7B68     	 ldr r3,[r7,#4]
 533              	.L30:
 301:../cleanflight/src/main/sensors/barometer.c **** }
 534              	 .loc 2 301 0
 535 0046 1846     	 mov r0,r3
 536 0048 1037     	 adds r7,r7,#16
 537              	.LCFI28:
 538              	 .cfi_def_cfa_offset 8
 539 004a BD46     	 mov sp,r7
 540              	.LCFI29:
 541              	 .cfi_def_cfa_register 13
 542              	 
 543 004c 80BD     	 pop {r7,pc}
 544              	.L32:
 545 004e 00BF     	 .align 2
 546              	.L31:
 547 0050 00000000 	 .word currentFilterSampleIndex.12587
 548 0054 00000000 	 .word medianFilterReady.12588
 549 0058 00000000 	 .word barometerFilterSamples.12586
 550              	 .cfi_endproc
 551              	.LFE532:
 553              	 .section .text.recalculateBarometerTotal,"ax",%progbits
 554              	 .align 2
 555              	 .thumb
 556              	 .thumb_func
 558              	recalculateBarometerTotal:
 559              	.LFB533:
 302:../cleanflight/src/main/sensors/barometer.c **** 
 303:../cleanflight/src/main/sensors/barometer.c **** #define PRESSURE_SAMPLE_COUNT (barometerConfig()->baro_sample_count - 1)
 304:../cleanflight/src/main/sensors/barometer.c **** 
 305:../cleanflight/src/main/sensors/barometer.c **** static uint32_t recalculateBarometerTotal(uint8_t baroSampleCount, uint32_t pressureTotal, int32_t 
 306:../cleanflight/src/main/sensors/barometer.c **** {
 560              	 .loc 2 306 0
 561              	 .cfi_startproc
 562              	 
 563              	 
 564 0000 90B5     	 push {r4,r7,lr}
 565              	.LCFI30:
 566              	 .cfi_def_cfa_offset 12
 567              	 .cfi_offset 4,-12
 568              	 .cfi_offset 7,-8
 569              	 .cfi_offset 14,-4
 570 0002 87B0     	 sub sp,sp,#28
 571              	.LCFI31:
 572              	 .cfi_def_cfa_offset 40
 573 0004 00AF     	 add r7,sp,#0
 574              	.LCFI32:
 575              	 .cfi_def_cfa_register 7
 576 0006 0346     	 mov r3,r0
 577 0008 B960     	 str r1,[r7,#8]
 578 000a 7A60     	 str r2,[r7,#4]
 579 000c FB73     	 strb r3,[r7,#15]
 307:../cleanflight/src/main/sensors/barometer.c ****     static int32_t barometerSamples[BARO_SAMPLE_COUNT_MAX];
 308:../cleanflight/src/main/sensors/barometer.c ****     static int currentSampleIndex = 0;
 309:../cleanflight/src/main/sensors/barometer.c ****     int nextSampleIndex;
 310:../cleanflight/src/main/sensors/barometer.c **** 
 311:../cleanflight/src/main/sensors/barometer.c ****     // store current pressure in barometerSamples
 312:../cleanflight/src/main/sensors/barometer.c ****     nextSampleIndex = (currentSampleIndex + 1);
 580              	 .loc 2 312 0
 581 000e 174B     	 ldr r3,.L36
 582 0010 1B68     	 ldr r3,[r3]
 583 0012 0133     	 adds r3,r3,#1
 584 0014 7B61     	 str r3,[r7,#20]
 313:../cleanflight/src/main/sensors/barometer.c ****     if (nextSampleIndex == baroSampleCount) {
 585              	 .loc 2 313 0
 586 0016 FA7B     	 ldrb r2,[r7,#15]
 587 0018 7B69     	 ldr r3,[r7,#20]
 588 001a 9A42     	 cmp r2,r3
 589 001c 04D1     	 bne .L34
 314:../cleanflight/src/main/sensors/barometer.c ****         nextSampleIndex = 0;
 590              	 .loc 2 314 0
 591 001e 0023     	 movs r3,#0
 592 0020 7B61     	 str r3,[r7,#20]
 315:../cleanflight/src/main/sensors/barometer.c ****         baroReady = true;
 593              	 .loc 2 315 0
 594 0022 134B     	 ldr r3,.L36+4
 595 0024 0122     	 movs r2,#1
 596 0026 1A70     	 strb r2,[r3]
 597              	.L34:
 316:../cleanflight/src/main/sensors/barometer.c ****     }
 317:../cleanflight/src/main/sensors/barometer.c ****     barometerSamples[currentSampleIndex] = applyBarometerMedianFilter(newPressureReading);
 598              	 .loc 2 317 0
 599 0028 104B     	 ldr r3,.L36
 600 002a 1C68     	 ldr r4,[r3]
 601 002c 7868     	 ldr r0,[r7,#4]
 602 002e FFF7FEFF 	 bl applyBarometerMedianFilter
 603 0032 0246     	 mov r2,r0
 604 0034 0F4B     	 ldr r3,.L36+8
 605 0036 43F82420 	 str r2,[r3,r4,lsl#2]
 318:../cleanflight/src/main/sensors/barometer.c **** 
 319:../cleanflight/src/main/sensors/barometer.c ****     // recalculate pressure total
 320:../cleanflight/src/main/sensors/barometer.c ****     // Note, the pressure total is made up of baroSampleCount - 1 samples - See PRESSURE_SAMPLE_COU
 321:../cleanflight/src/main/sensors/barometer.c ****     pressureTotal += barometerSamples[currentSampleIndex];
 606              	 .loc 2 321 0
 607 003a 0C4B     	 ldr r3,.L36
 608 003c 1B68     	 ldr r3,[r3]
 609 003e 0D4A     	 ldr r2,.L36+8
 610 0040 52F82330 	 ldr r3,[r2,r3,lsl#2]
 611 0044 1A46     	 mov r2,r3
 612 0046 BB68     	 ldr r3,[r7,#8]
 613 0048 1344     	 add r3,r3,r2
 614 004a BB60     	 str r3,[r7,#8]
 322:../cleanflight/src/main/sensors/barometer.c ****     pressureTotal -= barometerSamples[nextSampleIndex];
 615              	 .loc 2 322 0
 616 004c 094A     	 ldr r2,.L36+8
 617 004e 7B69     	 ldr r3,[r7,#20]
 618 0050 52F82330 	 ldr r3,[r2,r3,lsl#2]
 619 0054 1A46     	 mov r2,r3
 620 0056 BB68     	 ldr r3,[r7,#8]
 621 0058 9B1A     	 subs r3,r3,r2
 622 005a BB60     	 str r3,[r7,#8]
 323:../cleanflight/src/main/sensors/barometer.c **** 
 324:../cleanflight/src/main/sensors/barometer.c ****     currentSampleIndex = nextSampleIndex;
 623              	 .loc 2 324 0
 624 005c 034A     	 ldr r2,.L36
 625 005e 7B69     	 ldr r3,[r7,#20]
 626 0060 1360     	 str r3,[r2]
 325:../cleanflight/src/main/sensors/barometer.c **** 
 326:../cleanflight/src/main/sensors/barometer.c ****     return pressureTotal;
 627              	 .loc 2 326 0
 628 0062 BB68     	 ldr r3,[r7,#8]
 327:../cleanflight/src/main/sensors/barometer.c **** }
 629              	 .loc 2 327 0
 630 0064 1846     	 mov r0,r3
 631 0066 1C37     	 adds r7,r7,#28
 632              	.LCFI33:
 633              	 .cfi_def_cfa_offset 12
 634 0068 BD46     	 mov sp,r7
 635              	.LCFI34:
 636              	 .cfi_def_cfa_register 13
 637              	 
 638 006a 90BD     	 pop {r4,r7,pc}
 639              	.L37:
 640              	 .align 2
 641              	.L36:
 642 006c 00000000 	 .word currentSampleIndex.12596
 643 0070 00000000 	 .word baroReady
 644 0074 00000000 	 .word barometerSamples.12595
 645              	 .cfi_endproc
 646              	.LFE533:
 648              	 .section .text.isBaroReady,"ax",%progbits
 649              	 .align 2
 650              	 .global isBaroReady
 651              	 .thumb
 652              	 .thumb_func
 654              	isBaroReady:
 655              	.LFB534:
 328:../cleanflight/src/main/sensors/barometer.c **** 
 329:../cleanflight/src/main/sensors/barometer.c **** typedef enum {
 330:../cleanflight/src/main/sensors/barometer.c ****     BAROMETER_NEEDS_SAMPLES = 0,
 331:../cleanflight/src/main/sensors/barometer.c ****     BAROMETER_NEEDS_CALCULATION
 332:../cleanflight/src/main/sensors/barometer.c **** } barometerState_e;
 333:../cleanflight/src/main/sensors/barometer.c **** 
 334:../cleanflight/src/main/sensors/barometer.c **** 
 335:../cleanflight/src/main/sensors/barometer.c **** bool isBaroReady(void) {
 656              	 .loc 2 335 0
 657              	 .cfi_startproc
 658              	 
 659              	 
 660              	 
 661 0000 80B4     	 push {r7}
 662              	.LCFI35:
 663              	 .cfi_def_cfa_offset 4
 664              	 .cfi_offset 7,-4
 665 0002 00AF     	 add r7,sp,#0
 666              	.LCFI36:
 667              	 .cfi_def_cfa_register 7
 336:../cleanflight/src/main/sensors/barometer.c ****     return baroReady;
 668              	 .loc 2 336 0
 669 0004 034B     	 ldr r3,.L40
 670 0006 1B78     	 ldrb r3,[r3]
 337:../cleanflight/src/main/sensors/barometer.c **** }
 671              	 .loc 2 337 0
 672 0008 1846     	 mov r0,r3
 673 000a BD46     	 mov sp,r7
 674              	.LCFI37:
 675              	 .cfi_def_cfa_register 13
 676              	 
 677 000c 5DF8047B 	 ldr r7,[sp],#4
 678              	.LCFI38:
 679              	 .cfi_restore 7
 680              	 .cfi_def_cfa_offset 0
 681 0010 7047     	 bx lr
 682              	.L41:
 683 0012 00BF     	 .align 2
 684              	.L40:
 685 0014 00000000 	 .word baroReady
 686              	 .cfi_endproc
 687              	.LFE534:
 689              	 .section .text.baroUpdate,"ax",%progbits
 690              	 .align 2
 691              	 .global baroUpdate
 692              	 .thumb
 693              	 .thumb_func
 695              	baroUpdate:
 696              	.LFB535:
 338:../cleanflight/src/main/sensors/barometer.c **** 
 339:../cleanflight/src/main/sensors/barometer.c **** uint32_t baroUpdate(void)
 340:../cleanflight/src/main/sensors/barometer.c **** {
 697              	 .loc 2 340 0
 698              	 .cfi_startproc
 699              	 
 700              	 
 701 0000 80B5     	 push {r7,lr}
 702              	.LCFI39:
 703              	 .cfi_def_cfa_offset 8
 704              	 .cfi_offset 7,-8
 705              	 .cfi_offset 14,-4
 706 0002 00AF     	 add r7,sp,#0
 707              	.LCFI40:
 708              	 .cfi_def_cfa_register 7
 341:../cleanflight/src/main/sensors/barometer.c ****     static barometerState_e state = BAROMETER_NEEDS_SAMPLES;
 342:../cleanflight/src/main/sensors/barometer.c **** 
 343:../cleanflight/src/main/sensors/barometer.c ****     switch (state) {
 709              	 .loc 2 343 0
 710 0004 244B     	 ldr r3,.L46
 711 0006 1B78     	 ldrb r3,[r3]
 712 0008 012B     	 cmp r3,#1
 713 000a 11D0     	 beq .L44
 344:../cleanflight/src/main/sensors/barometer.c ****         default:
 345:../cleanflight/src/main/sensors/barometer.c ****         case BAROMETER_NEEDS_SAMPLES:
 346:../cleanflight/src/main/sensors/barometer.c ****             baro.dev.get_ut(&baro.dev);
 714              	 .loc 2 346 0
 715 000c 234B     	 ldr r3,.L46+4
 716 000e D3F81130 	 ldr r3,[r3,#17]
 717 0012 2248     	 ldr r0,.L46+4
 718 0014 9847     	 blx r3
 347:../cleanflight/src/main/sensors/barometer.c ****             baro.dev.start_up(&baro.dev);
 719              	 .loc 2 347 0
 720 0016 214B     	 ldr r3,.L46+4
 721 0018 D3F81530 	 ldr r3,[r3,#21]
 722 001c 1F48     	 ldr r0,.L46+4
 723 001e 9847     	 blx r3
 348:../cleanflight/src/main/sensors/barometer.c ****             state = BAROMETER_NEEDS_CALCULATION;
 724              	 .loc 2 348 0
 725 0020 1D4B     	 ldr r3,.L46
 726 0022 0122     	 movs r2,#1
 727 0024 1A70     	 strb r2,[r3]
 349:../cleanflight/src/main/sensors/barometer.c ****             return baro.dev.up_delay;
 728              	 .loc 2 349 0
 729 0026 1D4B     	 ldr r3,.L46+4
 730 0028 B3F80B30 	 ldrh r3,[r3,#11]
 731 002c 9BB2     	 uxth r3,r3
 732 002e 30E0     	 b .L45
 733              	.L44:
 350:../cleanflight/src/main/sensors/barometer.c ****         break;
 351:../cleanflight/src/main/sensors/barometer.c **** 
 352:../cleanflight/src/main/sensors/barometer.c ****         case BAROMETER_NEEDS_CALCULATION:
 353:../cleanflight/src/main/sensors/barometer.c ****             baro.dev.get_up(&baro.dev);
 734              	 .loc 2 353 0
 735 0030 1A4B     	 ldr r3,.L46+4
 736 0032 D3F81930 	 ldr r3,[r3,#25]
 737 0036 1948     	 ldr r0,.L46+4
 738 0038 9847     	 blx r3
 354:../cleanflight/src/main/sensors/barometer.c ****             baro.dev.start_ut(&baro.dev);
 739              	 .loc 2 354 0
 740 003a 184B     	 ldr r3,.L46+4
 741 003c D3F80D30 	 ldr r3,[r3,#13]
 742 0040 1648     	 ldr r0,.L46+4
 743 0042 9847     	 blx r3
 355:../cleanflight/src/main/sensors/barometer.c ****             baro.dev.calculate(&baroPressure, &baroTemperature);
 744              	 .loc 2 355 0
 745 0044 154B     	 ldr r3,.L46+4
 746 0046 D3F81D30 	 ldr r3,[r3,#29]
 747 004a 1548     	 ldr r0,.L46+8
 748 004c 1549     	 ldr r1,.L46+12
 749 004e 9847     	 blx r3
 356:../cleanflight/src/main/sensors/barometer.c ****             baro.baroPressure = baroPressure;
 750              	 .loc 2 356 0
 751 0050 134B     	 ldr r3,.L46+8
 752 0052 1B68     	 ldr r3,[r3]
 753 0054 114A     	 ldr r2,.L46+4
 754 0056 C2F82930 	 str r3,[r2,#41]
 357:../cleanflight/src/main/sensors/barometer.c ****             baro.baroTemperature = baroTemperature;
 755              	 .loc 2 357 0
 756 005a 124B     	 ldr r3,.L46+12
 757 005c 1B68     	 ldr r3,[r3]
 758 005e 0F4A     	 ldr r2,.L46+4
 759 0060 C2F82530 	 str r3,[r2,#37]
 358:../cleanflight/src/main/sensors/barometer.c ****             baroPressureSum = recalculateBarometerTotal(barometerConfig()->baro_sample_count, baroP
 760              	 .loc 2 358 0
 761 0064 FFF7FEFF 	 bl barometerConfig
 762 0068 0346     	 mov r3,r0
 763 006a 9979     	 ldrb r1,[r3,#6]
 764 006c 0E4B     	 ldr r3,.L46+16
 765 006e 1A68     	 ldr r2,[r3]
 766 0070 0B4B     	 ldr r3,.L46+8
 767 0072 1B68     	 ldr r3,[r3]
 768 0074 0846     	 mov r0,r1
 769 0076 1146     	 mov r1,r2
 770 0078 1A46     	 mov r2,r3
 771 007a FFF7FEFF 	 bl recalculateBarometerTotal
 772 007e 0246     	 mov r2,r0
 773 0080 094B     	 ldr r3,.L46+16
 774 0082 1A60     	 str r2,[r3]
 359:../cleanflight/src/main/sensors/barometer.c ****             state = BAROMETER_NEEDS_SAMPLES;
 775              	 .loc 2 359 0
 776 0084 044B     	 ldr r3,.L46
 777 0086 0022     	 movs r2,#0
 778 0088 1A70     	 strb r2,[r3]
 360:../cleanflight/src/main/sensors/barometer.c ****             return baro.dev.ut_delay;
 779              	 .loc 2 360 0
 780 008a 044B     	 ldr r3,.L46+4
 781 008c B3F80930 	 ldrh r3,[r3,#9]
 782 0090 9BB2     	 uxth r3,r3
 783              	.L45:
 361:../cleanflight/src/main/sensors/barometer.c ****         break;
 362:../cleanflight/src/main/sensors/barometer.c ****     }
 363:../cleanflight/src/main/sensors/barometer.c **** }
 784              	 .loc 2 363 0
 785 0092 1846     	 mov r0,r3
 786 0094 80BD     	 pop {r7,pc}
 787              	.L47:
 788 0096 00BF     	 .align 2
 789              	.L46:
 790 0098 00000000 	 .word state.12608
 791 009c 00000000 	 .word baro
 792 00a0 00000000 	 .word baroPressure
 793 00a4 00000000 	 .word baroTemperature
 794 00a8 00000000 	 .word baroPressureSum
 795              	 .cfi_endproc
 796              	.LFE535:
 798              	 .section .text.baroCalculateAltitude,"ax",%progbits
 799              	 .align 2
 800              	 .global baroCalculateAltitude
 801              	 .thumb
 802              	 .thumb_func
 804              	baroCalculateAltitude:
 805              	.LFB536:
 364:../cleanflight/src/main/sensors/barometer.c **** 
 365:../cleanflight/src/main/sensors/barometer.c **** int32_t baroCalculateAltitude(void)
 366:../cleanflight/src/main/sensors/barometer.c **** {
 806              	 .loc 2 366 0
 807              	 .cfi_startproc
 808              	 
 809              	 
 810 0000 90B5     	 push {r4,r7,lr}
 811              	.LCFI41:
 812              	 .cfi_def_cfa_offset 12
 813              	 .cfi_offset 4,-12
 814              	 .cfi_offset 7,-8
 815              	 .cfi_offset 14,-4
 816 0002 2DED028B 	 fstmfdd sp!,{d8}
 817              	.LCFI42:
 818              	 .cfi_def_cfa_offset 20
 819              	 .cfi_offset 80,-20
 820              	 .cfi_offset 81,-16
 821 0006 83B0     	 sub sp,sp,#12
 822              	.LCFI43:
 823              	 .cfi_def_cfa_offset 32
 824 0008 00AF     	 add r7,sp,#0
 825              	.LCFI44:
 826              	 .cfi_def_cfa_register 7
 367:../cleanflight/src/main/sensors/barometer.c ****     int32_t BaroAlt_tmp;
 368:../cleanflight/src/main/sensors/barometer.c **** 
 369:../cleanflight/src/main/sensors/barometer.c ****     // calculates height from ground via baro readings
 370:../cleanflight/src/main/sensors/barometer.c ****     // see: https://github.com/diydrones/ardupilot/blob/master/libraries/AP_Baro/AP_Baro.cpp#L140
 371:../cleanflight/src/main/sensors/barometer.c ****     if (isBaroCalibrationComplete()) {
 827              	 .loc 2 371 0
 828 000a FFF7FEFF 	 bl isBaroCalibrationComplete
 829 000e 0346     	 mov r3,r0
 830 0010 002B     	 cmp r3,#0
 831 0012 64D0     	 beq .L49
 372:../cleanflight/src/main/sensors/barometer.c ****         BaroAlt_tmp = lrintf((1.0f - pow_approx((float)(baroPressureSum / PRESSURE_SAMPLE_COUNT) / 
 832              	 .loc 2 372 0
 833 0014 3D4B     	 ldr r3,.L52
 834 0016 1C68     	 ldr r4,[r3]
 835 0018 FFF7FEFF 	 bl barometerConfig
 836 001c 0346     	 mov r3,r0
 837 001e 9B79     	 ldrb r3,[r3,#6]
 838 0020 013B     	 subs r3,r3,#1
 839 0022 B4FBF3F3 	 udiv r3,r4,r3
 840 0026 07EE903A 	 fmsr s15,r3
 841 002a F8EE677A 	 fuitos s15,s15
 842 002e 9FED387A 	 flds s14,.L52+4
 843 0032 C7EE877A 	 fdivs s15,s15,s14
 844 0036 17EE900A 	 fmrs r0,s15
 845 003a 3649     	 ldr r1,.L52+8
 846 003c FFF7FEFF 	 bl pow_approx
 847 0040 07EE100A 	 fmsr s14,r0
 848 0044 F7EE007A 	 fconsts s15,#112
 849 0048 77EEC77A 	 fsubs s15,s15,s14
 850 004c 9FED327A 	 flds s14,.L52+12
 851 0050 67EE877A 	 fmuls s15,s15,s14
 852 0054 17EE900A 	 fmrs r0,s15
 853 0058 FFF7FEFF 	 bl lrintf
 854 005c 7860     	 str r0,[r7,#4]
 373:../cleanflight/src/main/sensors/barometer.c ****         BaroAlt_tmp -= baroGroundAltitude;
 855              	 .loc 2 373 0
 856 005e 2F4B     	 ldr r3,.L52+16
 857 0060 1B68     	 ldr r3,[r3]
 858 0062 7A68     	 ldr r2,[r7,#4]
 859 0064 D31A     	 subs r3,r2,r3
 860 0066 7B60     	 str r3,[r7,#4]
 374:../cleanflight/src/main/sensors/barometer.c ****         baro.BaroAlt = lrintf((float)baro.BaroAlt * CONVERT_PARAMETER_TO_FLOAT(barometerConfig()->b
 861              	 .loc 2 374 0
 862 0068 2D4B     	 ldr r3,.L52+20
 863 006a D3F82130 	 ldr r3,[r3,#33]
 864 006e 07EE903A 	 fmsr s15,r3
 865 0072 B8EEE78A 	 fsitos s16,s15
 866 0076 FFF7FEFF 	 bl barometerConfig
 867 007a 0346     	 mov r3,r0
 868 007c B3F80730 	 ldrh r3,[r3,#7]
 869 0080 9BB2     	 uxth r3,r3
 870 0082 07EE903A 	 fmsr s15,r3
 871 0086 F8EEE77A 	 fsitos s15,s15
 872 008a 9FED267A 	 flds s14,.L52+24
 873 008e 67EE877A 	 fmuls s15,s15,s14
 874 0092 28EE278A 	 fmuls s16,s16,s15
 875 0096 7B68     	 ldr r3,[r7,#4]
 876 0098 07EE903A 	 fmsr s15,r3
 877 009c F8EEE78A 	 fsitos s17,s15
 878 00a0 FFF7FEFF 	 bl barometerConfig
 879 00a4 0346     	 mov r3,r0
 880 00a6 B3F80730 	 ldrh r3,[r3,#7]
 881 00aa 9BB2     	 uxth r3,r3
 882 00ac 07EE903A 	 fmsr s15,r3
 883 00b0 F8EEE77A 	 fsitos s15,s15
 884 00b4 9FED1B7A 	 flds s14,.L52+24
 885 00b8 67EE877A 	 fmuls s15,s15,s14
 886 00bc B7EE007A 	 fconsts s14,#112
 887 00c0 77EE677A 	 fsubs s15,s14,s15
 888 00c4 68EEA77A 	 fmuls s15,s17,s15
 889 00c8 78EE277A 	 fadds s15,s16,s15
 890 00cc 17EE900A 	 fmrs r0,s15
 891 00d0 FFF7FEFF 	 bl lrintf
 892 00d4 0246     	 mov r2,r0
 893 00d6 124B     	 ldr r3,.L52+20
 894 00d8 C3F82120 	 str r2,[r3,#33]
 895 00dc 0CE0     	 b .L50
 896              	.L49:
 375:../cleanflight/src/main/sensors/barometer.c ****     }
 376:../cleanflight/src/main/sensors/barometer.c ****     else {
 377:../cleanflight/src/main/sensors/barometer.c ****         baro.BaroAlt = 0;
 897              	 .loc 2 377 0
 898 00de 104B     	 ldr r3,.L52+20
 899 00e0 0022     	 movs r2,#0
 900 00e2 83F82120 	 strb r2,[r3,#33]
 901 00e6 0022     	 movs r2,#0
 902 00e8 83F82220 	 strb r2,[r3,#34]
 903 00ec 0022     	 movs r2,#0
 904 00ee 83F82320 	 strb r2,[r3,#35]
 905 00f2 0022     	 movs r2,#0
 906 00f4 83F82420 	 strb r2,[r3,#36]
 907              	.L50:
 378:../cleanflight/src/main/sensors/barometer.c ****     }
 379:../cleanflight/src/main/sensors/barometer.c ****     return baro.BaroAlt;
 908              	 .loc 2 379 0
 909 00f8 094B     	 ldr r3,.L52+20
 910 00fa D3F82130 	 ldr r3,[r3,#33]
 380:../cleanflight/src/main/sensors/barometer.c **** }
 911              	 .loc 2 380 0
 912 00fe 1846     	 mov r0,r3
 913 0100 0C37     	 adds r7,r7,#12
 914              	.LCFI45:
 915              	 .cfi_def_cfa_offset 20
 916 0102 BD46     	 mov sp,r7
 917              	.LCFI46:
 918              	 .cfi_def_cfa_register 13
 919              	 
 920 0104 BDEC028B 	 fldmfdd sp!,{d8}
 921              	.LCFI47:
 922              	 .cfi_restore 80
 923              	 .cfi_restore 81
 924              	 .cfi_def_cfa_offset 12
 925 0108 90BD     	 pop {r4,r7,pc}
 926              	.L53:
 927 010a 00BF     	 .align 2
 928              	.L52:
 929 010c 00000000 	 .word baroPressureSum
 930 0110 80E6C547 	 .word 1204151936
 931 0114 B1DC423E 	 .word 1044569265
 932 0118 D048874A 	 .word 1250379984
 933 011c 00000000 	 .word baroGroundAltitude
 934 0120 00000000 	 .word baro
 935 0124 6F12833A 	 .word 981668463
 936              	 .cfi_endproc
 937              	.LFE536:
 939              	 .section .text.performBaroCalibrationCycle,"ax",%progbits
 940              	 .align 2
 941              	 .global performBaroCalibrationCycle
 942              	 .thumb
 943              	 .thumb_func
 945              	performBaroCalibrationCycle:
 946              	.LFB537:
 381:../cleanflight/src/main/sensors/barometer.c **** 
 382:../cleanflight/src/main/sensors/barometer.c **** void performBaroCalibrationCycle(void)
 383:../cleanflight/src/main/sensors/barometer.c **** {
 947              	 .loc 2 383 0
 948              	 .cfi_startproc
 949              	 
 950              	 
 951 0000 98B5     	 push {r3,r4,r7,lr}
 952              	.LCFI48:
 953              	 .cfi_def_cfa_offset 16
 954              	 .cfi_offset 3,-16
 955              	 .cfi_offset 4,-12
 956              	 .cfi_offset 7,-8
 957              	 .cfi_offset 14,-4
 958 0002 00AF     	 add r7,sp,#0
 959              	.LCFI49:
 960              	 .cfi_def_cfa_register 7
 384:../cleanflight/src/main/sensors/barometer.c ****     static int32_t savedGroundPressure = 0;
 385:../cleanflight/src/main/sensors/barometer.c **** 
 386:../cleanflight/src/main/sensors/barometer.c ****     baroGroundPressure -= baroGroundPressure / 8;
 961              	 .loc 2 386 0
 962 0004 284B     	 ldr r3,.L59
 963 0006 1A68     	 ldr r2,[r3]
 964 0008 274B     	 ldr r3,.L59
 965 000a 1B68     	 ldr r3,[r3]
 966 000c 002B     	 cmp r3,#0
 967 000e 00DA     	 bge .L55
 968 0010 0733     	 adds r3,r3,#7
 969              	.L55:
 970 0012 DB10     	 asrs r3,r3,#3
 971 0014 D31A     	 subs r3,r2,r3
 972 0016 244A     	 ldr r2,.L59
 973 0018 1360     	 str r3,[r2]
 387:../cleanflight/src/main/sensors/barometer.c ****     baroGroundPressure += baroPressureSum / PRESSURE_SAMPLE_COUNT;
 974              	 .loc 2 387 0
 975 001a 244B     	 ldr r3,.L59+4
 976 001c 1C68     	 ldr r4,[r3]
 977 001e FFF7FEFF 	 bl barometerConfig
 978 0022 0346     	 mov r3,r0
 979 0024 9B79     	 ldrb r3,[r3,#6]
 980 0026 013B     	 subs r3,r3,#1
 981 0028 B4FBF3F3 	 udiv r3,r4,r3
 982 002c 1E4A     	 ldr r2,.L59
 983 002e 1268     	 ldr r2,[r2]
 984 0030 1344     	 add r3,r3,r2
 985 0032 1A46     	 mov r2,r3
 986 0034 1C4B     	 ldr r3,.L59
 987 0036 1A60     	 str r2,[r3]
 388:../cleanflight/src/main/sensors/barometer.c ****     baroGroundAltitude = (1.0f - pow_approx((baroGroundPressure / 8) / 101325.0f, 0.190295f)) * 443
 988              	 .loc 2 388 0
 989 0038 1B4B     	 ldr r3,.L59
 990 003a 1B68     	 ldr r3,[r3]
 991 003c 002B     	 cmp r3,#0
 992 003e 00DA     	 bge .L56
 993 0040 0733     	 adds r3,r3,#7
 994              	.L56:
 995 0042 DB10     	 asrs r3,r3,#3
 996 0044 07EE903A 	 fmsr s15,r3
 997 0048 F8EEE77A 	 fsitos s15,s15
 998 004c 9FED187A 	 flds s14,.L59+8
 999 0050 C7EE877A 	 fdivs s15,s15,s14
 1000 0054 17EE900A 	 fmrs r0,s15
 1001 0058 1649     	 ldr r1,.L59+12
 1002 005a FFF7FEFF 	 bl pow_approx
 1003 005e 07EE100A 	 fmsr s14,r0
 1004 0062 F7EE007A 	 fconsts s15,#112
 1005 0066 77EEC77A 	 fsubs s15,s15,s14
 1006 006a 9FED137A 	 flds s14,.L59+16
 1007 006e 67EE877A 	 fmuls s15,s15,s14
 1008 0072 FDEEE77A 	 ftosizs s15,s15
 1009 0076 17EE902A 	 fmrs r2,s15
 1010 007a 104B     	 ldr r3,.L59+20
 1011 007c 1A60     	 str r2,[r3]
 389:../cleanflight/src/main/sensors/barometer.c **** 
 390:../cleanflight/src/main/sensors/barometer.c ****     if (baroGroundPressure == savedGroundPressure)
 1012              	 .loc 2 390 0
 1013 007e 0A4B     	 ldr r3,.L59
 1014 0080 1A68     	 ldr r2,[r3]
 1015 0082 0F4B     	 ldr r3,.L59+24
 1016 0084 1B68     	 ldr r3,[r3]
 1017 0086 9A42     	 cmp r2,r3
 1018 0088 03D1     	 bne .L57
 391:../cleanflight/src/main/sensors/barometer.c ****       calibratingB = 0;
 1019              	 .loc 2 391 0
 1020 008a 0E4B     	 ldr r3,.L59+28
 1021 008c 0022     	 movs r2,#0
 1022 008e 1A80     	 strh r2,[r3]
 1023 0090 09E0     	 b .L54
 1024              	.L57:
 392:../cleanflight/src/main/sensors/barometer.c ****     else {
 393:../cleanflight/src/main/sensors/barometer.c ****       calibratingB--;
 1025              	 .loc 2 393 0
 1026 0092 0C4B     	 ldr r3,.L59+28
 1027 0094 1B88     	 ldrh r3,[r3]
 1028 0096 013B     	 subs r3,r3,#1
 1029 0098 9AB2     	 uxth r2,r3
 1030 009a 0A4B     	 ldr r3,.L59+28
 1031 009c 1A80     	 strh r2,[r3]
 394:../cleanflight/src/main/sensors/barometer.c ****       savedGroundPressure=baroGroundPressure;
 1032              	 .loc 2 394 0
 1033 009e 024B     	 ldr r3,.L59
 1034 00a0 1B68     	 ldr r3,[r3]
 1035 00a2 074A     	 ldr r2,.L59+24
 1036 00a4 1360     	 str r3,[r2]
 1037              	.L54:
 395:../cleanflight/src/main/sensors/barometer.c ****     }
 396:../cleanflight/src/main/sensors/barometer.c **** }
 1038              	 .loc 2 396 0
 1039 00a6 98BD     	 pop {r3,r4,r7,pc}
 1040              	.L60:
 1041              	 .align 2
 1042              	.L59:
 1043 00a8 00000000 	 .word baroGroundPressure
 1044 00ac 00000000 	 .word baroPressureSum
 1045 00b0 80E6C547 	 .word 1204151936
 1046 00b4 B1DC423E 	 .word 1044569265
 1047 00b8 D048874A 	 .word 1250379984
 1048 00bc 00000000 	 .word baroGroundAltitude
 1049 00c0 00000000 	 .word savedGroundPressure.12619
 1050 00c4 00000000 	 .word calibratingB
 1051              	 .cfi_endproc
 1052              	.LFE537:
 1054              	 .section .bss.currentFilterSampleIndex.12587,"aw",%nobits
 1055              	 .align 2
 1058              	currentFilterSampleIndex.12587:
 1059 0000 00000000 	 .space 4
 1060              	 .section .bss.medianFilterReady.12588,"aw",%nobits
 1063              	medianFilterReady.12588:
 1064 0000 00       	 .space 1
 1065              	 .section .bss.barometerFilterSamples.12586,"aw",%nobits
 1066              	 .align 2
 1069              	barometerFilterSamples.12586:
 1070 0000 00000000 	 .space 12
 1070      00000000 
 1070      00000000 
 1071              	 .section .bss.currentSampleIndex.12596,"aw",%nobits
 1072              	 .align 2
 1075              	currentSampleIndex.12596:
 1076 0000 00000000 	 .space 4
 1077              	 .section .bss.barometerSamples.12595,"aw",%nobits
 1078              	 .align 2
 1081              	barometerSamples.12595:
 1082 0000 00000000 	 .space 192
 1082      00000000 
 1082      00000000 
 1082      00000000 
 1082      00000000 
 1083              	 .section .bss.state.12608,"aw",%nobits
 1086              	state.12608:
 1087 0000 00       	 .space 1
 1088              	 .section .bss.savedGroundPressure.12619,"aw",%nobits
 1089              	 .align 2
 1092              	savedGroundPressure.12619:
 1093 0000 00000000 	 .space 4
 1094              	 .text
 1095              	.Letext0:
 1096              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1097              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1098              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 1099              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 1100              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 1101              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pg.h"
 1102              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 1103              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 1104              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus.h"
 1105              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_spi.h"
 1106              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 1107              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/barometer/barometer.h"
 1108              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/sensors.h"
 1109              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 1110              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 barometer.c
    {standard input}:20     .text.barometerConfig:00000000 $t
    {standard input}:24     .text.barometerConfig:00000000 barometerConfig
    {standard input}:54     .text.barometerConfig:00000010 $d
                            *COM*:0000000d barometerConfig_System
                            *COM*:0000002d baro
                            *COM*:0000000d barometerConfig_Copy
    {standard input}:66     .pg_registry:00000000 barometerConfig_Registry
    {standard input}:63     .pg_registry:00000000 $d
    {standard input}:79     .text.pgResetFn_barometerConfig:00000000 pgResetFn_barometerConfig
    {standard input}:74     .text.pgResetFn_barometerConfig:00000000 $t
    {standard input}:167    .bss.calibratingB:00000000 $d
    {standard input}:170    .bss.calibratingB:00000000 calibratingB
    {standard input}:173    .bss.baroPressure:00000000 $d
    {standard input}:176    .bss.baroPressure:00000000 baroPressure
    {standard input}:179    .bss.baroTemperature:00000000 $d
    {standard input}:182    .bss.baroTemperature:00000000 baroTemperature
    {standard input}:185    .bss.baroGroundAltitude:00000000 $d
    {standard input}:188    .bss.baroGroundAltitude:00000000 baroGroundAltitude
    {standard input}:191    .data.baroGroundPressure:00000000 $d
    {standard input}:194    .data.baroGroundPressure:00000000 baroGroundPressure
    {standard input}:197    .bss.baroPressureSum:00000000 $d
    {standard input}:200    .bss.baroPressureSum:00000000 baroPressureSum
    {standard input}:203    .text.baroDetect:00000000 $t
    {standard input}:208    .text.baroDetect:00000000 baroDetect
    {standard input}:307    .text.baroDetect:00000098 $d
    {standard input}:315    .text.baroDetect:000000b8 $t
    {standard input}:366    .text.baroDetect:000000f0 $d
    {standard input}:371    .text.isBaroCalibrationComplete:00000000 $t
    {standard input}:376    .text.isBaroCalibrationComplete:00000000 isBaroCalibrationComplete
    {standard input}:412    .text.isBaroCalibrationComplete:0000001c $d
    {standard input}:417    .text.baroSetCalibrationCycles:00000000 $t
    {standard input}:422    .text.baroSetCalibrationCycles:00000000 baroSetCalibrationCycles
    {standard input}:461    .text.baroSetCalibrationCycles:0000001c $d
    {standard input}:468    .bss.baroReady:00000000 baroReady
    {standard input}:469    .bss.baroReady:00000000 $d
    {standard input}:471    .text.applyBarometerMedianFilter:00000000 $t
    {standard input}:475    .text.applyBarometerMedianFilter:00000000 applyBarometerMedianFilter
    {standard input}:547    .text.applyBarometerMedianFilter:00000050 $d
    {standard input}:1058   .bss.currentFilterSampleIndex.12587:00000000 currentFilterSampleIndex.12587
    {standard input}:1063   .bss.medianFilterReady.12588:00000000 medianFilterReady.12588
    {standard input}:1069   .bss.barometerFilterSamples.12586:00000000 barometerFilterSamples.12586
    {standard input}:554    .text.recalculateBarometerTotal:00000000 $t
    {standard input}:558    .text.recalculateBarometerTotal:00000000 recalculateBarometerTotal
    {standard input}:642    .text.recalculateBarometerTotal:0000006c $d
    {standard input}:1075   .bss.currentSampleIndex.12596:00000000 currentSampleIndex.12596
    {standard input}:1081   .bss.barometerSamples.12595:00000000 barometerSamples.12595
    {standard input}:649    .text.isBaroReady:00000000 $t
    {standard input}:654    .text.isBaroReady:00000000 isBaroReady
    {standard input}:685    .text.isBaroReady:00000014 $d
    {standard input}:690    .text.baroUpdate:00000000 $t
    {standard input}:695    .text.baroUpdate:00000000 baroUpdate
    {standard input}:790    .text.baroUpdate:00000098 $d
    {standard input}:1086   .bss.state.12608:00000000 state.12608
    {standard input}:799    .text.baroCalculateAltitude:00000000 $t
    {standard input}:804    .text.baroCalculateAltitude:00000000 baroCalculateAltitude
    {standard input}:929    .text.baroCalculateAltitude:0000010c $d
    {standard input}:940    .text.performBaroCalibrationCycle:00000000 $t
    {standard input}:945    .text.performBaroCalibrationCycle:00000000 performBaroCalibrationCycle
    {standard input}:1043   .text.performBaroCalibrationCycle:000000a8 $d
    {standard input}:1092   .bss.savedGroundPressure.12619:00000000 savedGroundPressure.12619
    {standard input}:1055   .bss.currentFilterSampleIndex.12587:00000000 $d
    {standard input}:1064   .bss.medianFilterReady.12588:00000000 $d
    {standard input}:1066   .bss.barometerFilterSamples.12586:00000000 $d
    {standard input}:1072   .bss.currentSampleIndex.12596:00000000 $d
    {standard input}:1078   .bss.barometerSamples.12595:00000000 $d
    {standard input}:1087   .bss.state.12608:00000000 $d
    {standard input}:1089   .bss.savedGroundPressure.12619:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
spiInstanceByDevice
spiBusSetInstance
IOGetByTag
dps310Detect
sensorsSet
detectedSensors
quickMedianFilter3
pow_approx
lrintf
