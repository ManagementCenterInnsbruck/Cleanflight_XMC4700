   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "gyro.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.cmpTimeUs,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	cmpTimeUs:
  25              	.LFB528:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #include <stdbool.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #include <stdint.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #include "platform.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #include "pg/pg.h"
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** 
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** // time difference, 32 bits always sufficient
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** typedef int32_t timeDelta_t;
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** // millisecond time
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** typedef uint32_t timeMs_t ;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** // microsecond time
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #ifdef USE_64BIT_TIME
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** typedef uint64_t timeUs_t;
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #define TIMEUS_MAX UINT64_MAX
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #else
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** typedef uint32_t timeUs_t;
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #define TIMEUS_MAX UINT32_MAX
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** #endif
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** 
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common\time.h **** static inline timeDelta_t cmpTimeUs(timeUs_t a, timeUs_t b) { return (timeDelta_t)(a - b); }
  27              	 .loc 1 43 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 3960     	 str r1,[r7]
  44              	 .loc 1 43 0
  45 000a 7A68     	 ldr r2,[r7,#4]
  46 000c 3B68     	 ldr r3,[r7]
  47 000e D31A     	 subs r3,r2,r3
  48 0010 1846     	 mov r0,r3
  49 0012 0C37     	 adds r7,r7,#12
  50              	.LCFI3:
  51              	 .cfi_def_cfa_offset 4
  52 0014 BD46     	 mov sp,r7
  53              	.LCFI4:
  54              	 .cfi_def_cfa_register 13
  55              	 
  56 0016 5DF8047B 	 ldr r7,[sp],#4
  57              	.LCFI5:
  58              	 .cfi_restore 7
  59              	 .cfi_def_cfa_offset 0
  60 001a 7047     	 bx lr
  61              	 .cfi_endproc
  62              	.LFE528:
  64              	 .section .text.gyroConfig,"ax",%progbits
  65              	 .align 2
  66              	 .thumb
  67              	 .thumb_func
  69              	gyroConfig:
  70              	.LFB531:
  71              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/gyro.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "common/axis.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "common/time.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "drivers/bus.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #include "drivers/sensor.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_NONE = 0,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_DEFAULT,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU6050,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_L3G4200D,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU3050,
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_L3GD20,
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU6000,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU6500,
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_MPU9250,
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20601,
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20602,
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20608G,
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20649,
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_ICM20689,
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_BMI160,
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_FAKE
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyroSensor_e;
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef struct gyro_s {
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint32_t targetLooptime;
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     float gyroADCf[XYZ_AXIS_COUNT];
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyro_t;
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** extern gyro_t gyro;
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef enum {
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_OVERFLOW_CHECK_NONE = 0,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_OVERFLOW_CHECK_YAW,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     GYRO_OVERFLOW_CHECK_ALL_AXES
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyroOverflowCheck_e;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #define GYRO_CONFIG_USE_GYRO_1      0
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #define GYRO_CONFIG_USE_GYRO_2      1
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** #define GYRO_CONFIG_USE_GYRO_BOTH   2
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef enum {
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     FILTER_LOWPASS = 0,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     FILTER_LOWPASS2
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } filterSlots;
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** typedef struct gyroConfig_s {
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_align;                       // gyro alignment
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyroMovementCalibrationThreshold; // people keep forgetting that moving model while in
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_sync_denom;                  // Gyro sample divider
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_hardware_lpf;                // gyro DLPF setting
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_32khz_hardware_lpf;          // gyro 32khz DLPF setting
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_high_fsr;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_use_32khz;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_to_use;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_lowpass_hz;
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_lowpass2_hz;
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_hz_1;
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_cutoff_1;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_hz_2;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyro_soft_notch_cutoff_2;
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     int16_t  gyro_offset_yaw;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  checkOverflow;
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     // Lowpass primary/secondary
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_lowpass_type;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  gyro_lowpass2_type;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t  yaw_spin_recovery;
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     int16_t  yaw_spin_threshold;
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint16_t gyroCalibrationDuration;  // Gyro calibration duration in 1/100 second
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t dyn_notch_quality; // bandpass quality factor, 100 for steep sided bandpass
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h ****     uint8_t dyn_notch_width_percent;
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** } gyroConfig_t;
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** 
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\gyro.h **** PG_DECLARE(gyroConfig_t, gyroConfig);
  72              	 .loc 2 103 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 00AF     	 add r7,sp,#0
  82              	.LCFI7:
  83              	 .cfi_def_cfa_register 7
  84              	 .loc 2 103 0
  85 0004 024B     	 ldr r3,.L5
  86 0006 1846     	 mov r0,r3
  87 0008 BD46     	 mov sp,r7
  88              	.LCFI8:
  89              	 .cfi_def_cfa_register 13
  90              	 
  91 000a 5DF8047B 	 ldr r7,[sp],#4
  92              	.LCFI9:
  93              	 .cfi_restore 7
  94              	 .cfi_def_cfa_offset 0
  95 000e 7047     	 bx lr
  96              	.L6:
  97              	 .align 2
  98              	.L5:
  99 0010 00000000 	 .word gyroConfig_System
 100              	 .cfi_endproc
 101              	.LFE531:
 103              	 .section .text.gyroConfigMutable,"ax",%progbits
 104              	 .align 2
 105              	 .thumb
 106              	 .thumb_func
 108              	gyroConfigMutable:
 109              	.LFB532:
 110              	 .loc 2 103 0
 111              	 .cfi_startproc
 112              	 
 113              	 
 114              	 
 115 0000 80B4     	 push {r7}
 116              	.LCFI10:
 117              	 .cfi_def_cfa_offset 4
 118              	 .cfi_offset 7,-4
 119 0002 00AF     	 add r7,sp,#0
 120              	.LCFI11:
 121              	 .cfi_def_cfa_register 7
 122              	 .loc 2 103 0
 123 0004 024B     	 ldr r3,.L9
 124 0006 1846     	 mov r0,r3
 125 0008 BD46     	 mov sp,r7
 126              	.LCFI12:
 127              	 .cfi_def_cfa_register 13
 128              	 
 129 000a 5DF8047B 	 ldr r7,[sp],#4
 130              	.LCFI13:
 131              	 .cfi_restore 7
 132              	 .cfi_def_cfa_offset 0
 133 000e 7047     	 bx lr
 134              	.L10:
 135              	 .align 2
 136              	.L9:
 137 0010 00000000 	 .word gyroConfig_System
 138              	 .cfi_endproc
 139              	.LFE532:
 141              	 .comm gyro,16,4
 142              	 .section .bss.gyroDebugMode,"aw",%nobits
 145              	gyroDebugMode:
 146 0000 00       	 .space 1
 147              	 .section .bss.gyroToUse,"aw",%nobits
 150              	gyroToUse:
 151 0000 00       	 .space 1
 152              	 .section .bss.overflowAxisMask,"aw",%nobits
 155              	overflowAxisMask:
 156 0000 00       	 .space 1
 157              	 .section .bss.accumulatedMeasurements,"aw",%nobits
 158              	 .align 2
 161              	accumulatedMeasurements:
 162 0000 00000000 	 .space 12
 162      00000000 
 162      00000000 
 163              	 .section .bss.gyroPrevious,"aw",%nobits
 164              	 .align 2
 167              	gyroPrevious:
 168 0000 00000000 	 .space 12
 168      00000000 
 168      00000000 
 169              	 .section .bss.accumulatedMeasurementTimeUs,"aw",%nobits
 170              	 .align 2
 173              	accumulatedMeasurementTimeUs:
 174 0000 00000000 	 .space 4
 175              	 .section .bss.accumulationLastTimeSampledUs,"aw",%nobits
 176              	 .align 2
 179              	accumulationLastTimeSampledUs:
 180 0000 00000000 	 .space 4
 181              	 .section .data.gyroHasOverflowProtection,"aw",%progbits
 184              	gyroHasOverflowProtection:
 185 0000 01       	 .byte 1
 186              	 .global firstArmingCalibrationWasStarted
 187              	 .section .bss.firstArmingCalibrationWasStarted,"aw",%nobits
 190              	firstArmingCalibrationWasStarted:
 191 0000 00       	 .space 1
 192              	 .section .bss.gyroSensor1,"aw",%nobits
 193              	 .align 2
 196              	gyroSensor1:
 197 0000 00000000 	 .space 747
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              	 .comm gyroConfig_System,32,4
 199              	 .comm gyroConfig_Copy,32,4
 200              	 .global gyroConfig_Registry
 201 02eb 00       	 .section .pg_registry,"a",%progbits
 202              	 .align 2
 205              	gyroConfig_Registry:
 206 0000 0A40     	 .short 16394
 207 0002 2000     	 .short 32
 208 0004 00000000 	 .word gyroConfig_System
 209 0008 00000000 	 .word gyroConfig_Copy
 210 000c 00000000 	 .word 0
 211 0010 00000000 	 .word pgResetTemplate_gyroConfig
 212              	 .global pgResetTemplate_gyroConfig
 213              	 .section .pg_resetdata,"a",%progbits
 214              	 .align 1
 217              	pgResetTemplate_gyroConfig:
 218 0000 00       	 .byte 0
 219 0001 30       	 .byte 48
 220 0002 03       	 .byte 3
 221 0003 00       	 .byte 0
 222 0004 00       	 .byte 0
 223 0005 00       	 .byte 0
 224 0006 00       	 .byte 0
 225 0007 00       	 .byte 0
 226 0008 6400     	 .short 100
 227 000a 2C01     	 .short 300
 228 000c 0000     	 .short 0
 229 000e 0000     	 .short 0
 230 0010 0000     	 .short 0
 231 0012 0000     	 .short 0
 232 0014 0000     	 .short 0
 233 0016 02       	 .byte 2
 234 0017 00       	 .byte 0
 235 0018 00       	 .byte 0
 236 0019 01       	 .byte 1
 237 001a 9E07     	 .short 1950
 238 001c 7D00     	 .short 125
 239 001e 46       	 .byte 70
 240 001f 32       	 .byte 50
 241              	 .section .text.gyroSensorBus,"ax",%progbits
 242              	 .align 2
 243              	 .global gyroSensorBus
 244              	 .thumb
 245              	 .thumb_func
 247              	gyroSensorBus:
 248              	.LFB543:
 249              	 .file 3 "../cleanflight/src/main/sensors/gyro.c"
   1:../cleanflight/src/main/sensors/gyro.c **** /*
   2:../cleanflight/src/main/sensors/gyro.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/sensors/gyro.c ****  *
   4:../cleanflight/src/main/sensors/gyro.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/sensors/gyro.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/sensors/gyro.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/sensors/gyro.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/sensors/gyro.c ****  * any later version.
   9:../cleanflight/src/main/sensors/gyro.c ****  *
  10:../cleanflight/src/main/sensors/gyro.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/sensors/gyro.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/sensors/gyro.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/sensors/gyro.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/sensors/gyro.c ****  *
  15:../cleanflight/src/main/sensors/gyro.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/sensors/gyro.c ****  * along with this software.
  17:../cleanflight/src/main/sensors/gyro.c ****  *
  18:../cleanflight/src/main/sensors/gyro.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/sensors/gyro.c ****  */
  20:../cleanflight/src/main/sensors/gyro.c **** 
  21:../cleanflight/src/main/sensors/gyro.c **** #include <stdbool.h>
  22:../cleanflight/src/main/sensors/gyro.c **** #include <stdint.h>
  23:../cleanflight/src/main/sensors/gyro.c **** #include <string.h>
  24:../cleanflight/src/main/sensors/gyro.c **** #include <math.h>
  25:../cleanflight/src/main/sensors/gyro.c **** #include <stdlib.h>
  26:../cleanflight/src/main/sensors/gyro.c **** 
  27:../cleanflight/src/main/sensors/gyro.c **** #include "platform.h"
  28:../cleanflight/src/main/sensors/gyro.c **** 
  29:../cleanflight/src/main/sensors/gyro.c **** #include "build/debug.h"
  30:../cleanflight/src/main/sensors/gyro.c **** 
  31:../cleanflight/src/main/sensors/gyro.c **** #include "common/axis.h"
  32:../cleanflight/src/main/sensors/gyro.c **** #include "common/maths.h"
  33:../cleanflight/src/main/sensors/gyro.c **** #include "common/filter.h"
  34:../cleanflight/src/main/sensors/gyro.c **** 
  35:../cleanflight/src/main/sensors/gyro.c **** #include "config/feature.h"
  36:../cleanflight/src/main/sensors/gyro.c **** 
  37:../cleanflight/src/main/sensors/gyro.c **** #include "pg/pg.h"
  38:../cleanflight/src/main/sensors/gyro.c **** #include "pg/pg_ids.h"
  39:../cleanflight/src/main/sensors/gyro.c **** 
  40:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro.h"
  41:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_fake.h"
  42:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_mpu.h"
  43:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_mpu3050.h"
  44:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_mpu6050.h"
  45:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_mpu6500.h"
  46:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_spi_bmi160.h"
  47:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_spi_icm20649.h"
  48:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_spi_icm20689.h"
  49:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_spi_mpu6000.h"
  50:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_spi_mpu6500.h"
  51:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/accgyro_spi_mpu9250.h"
  52:../cleanflight/src/main/sensors/gyro.c **** 
  53:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_L3G4200D
  54:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro_legacy/accgyro_l3g4200d.h"
  55:../cleanflight/src/main/sensors/gyro.c **** #endif
  56:../cleanflight/src/main/sensors/gyro.c **** 
  57:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_L3GD20
  58:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro_legacy/accgyro_l3gd20.h"
  59:../cleanflight/src/main/sensors/gyro.c **** #endif
  60:../cleanflight/src/main/sensors/gyro.c **** 
  61:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/accgyro/gyro_sync.h"
  62:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/bus_spi.h"
  63:../cleanflight/src/main/sensors/gyro.c **** #include "drivers/io.h"
  64:../cleanflight/src/main/sensors/gyro.c **** 
  65:../cleanflight/src/main/sensors/gyro.c **** #include "fc/config.h"
  66:../cleanflight/src/main/sensors/gyro.c **** #include "fc/runtime_config.h"
  67:../cleanflight/src/main/sensors/gyro.c **** 
  68:../cleanflight/src/main/sensors/gyro.c **** #include "io/beeper.h"
  69:../cleanflight/src/main/sensors/gyro.c **** #include "io/statusindicator.h"
  70:../cleanflight/src/main/sensors/gyro.c **** 
  71:../cleanflight/src/main/sensors/gyro.c **** #include "scheduler/scheduler.h"
  72:../cleanflight/src/main/sensors/gyro.c **** 
  73:../cleanflight/src/main/sensors/gyro.c **** #include "sensors/boardalignment.h"
  74:../cleanflight/src/main/sensors/gyro.c **** #include "sensors/gyro.h"
  75:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_DATA_ANALYSE
  76:../cleanflight/src/main/sensors/gyro.c **** #include "sensors/gyroanalyse.h"
  77:../cleanflight/src/main/sensors/gyro.c **** #endif
  78:../cleanflight/src/main/sensors/gyro.c **** #include "sensors/sensors.h"
  79:../cleanflight/src/main/sensors/gyro.c **** 
  80:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_HARDWARE_REVISION_DETECTION
  81:../cleanflight/src/main/sensors/gyro.c **** #include "hardware_revision.h"
  82:../cleanflight/src/main/sensors/gyro.c **** #endif
  83:../cleanflight/src/main/sensors/gyro.c **** 
  84:../cleanflight/src/main/sensors/gyro.c **** #if ((FLASH_SIZE > 128) && (defined(USE_GYRO_SPI_ICM20601) || defined(USE_GYRO_SPI_ICM20689) || def
  85:../cleanflight/src/main/sensors/gyro.c **** #define USE_GYRO_SLEW_LIMITER
  86:../cleanflight/src/main/sensors/gyro.c **** #endif
  87:../cleanflight/src/main/sensors/gyro.c **** 
  88:../cleanflight/src/main/sensors/gyro.c **** FAST_RAM_ZERO_INIT gyro_t gyro;
  89:../cleanflight/src/main/sensors/gyro.c **** static FAST_RAM_ZERO_INIT uint8_t gyroDebugMode;
  90:../cleanflight/src/main/sensors/gyro.c **** 
  91:../cleanflight/src/main/sensors/gyro.c **** static uint8_t gyroToUse = 0;
  92:../cleanflight/src/main/sensors/gyro.c **** 
  93:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_OVERFLOW_CHECK
  94:../cleanflight/src/main/sensors/gyro.c **** static FAST_RAM_ZERO_INIT uint8_t overflowAxisMask;
  95:../cleanflight/src/main/sensors/gyro.c **** #endif
  96:../cleanflight/src/main/sensors/gyro.c **** static FAST_RAM_ZERO_INIT float accumulatedMeasurements[XYZ_AXIS_COUNT];
  97:../cleanflight/src/main/sensors/gyro.c **** static FAST_RAM_ZERO_INIT float gyroPrevious[XYZ_AXIS_COUNT];
  98:../cleanflight/src/main/sensors/gyro.c **** static FAST_RAM_ZERO_INIT timeUs_t accumulatedMeasurementTimeUs;
  99:../cleanflight/src/main/sensors/gyro.c **** static FAST_RAM_ZERO_INIT timeUs_t accumulationLastTimeSampledUs;
 100:../cleanflight/src/main/sensors/gyro.c **** 
 101:../cleanflight/src/main/sensors/gyro.c **** static bool gyroHasOverflowProtection = true;
 102:../cleanflight/src/main/sensors/gyro.c **** 
 103:../cleanflight/src/main/sensors/gyro.c **** typedef struct gyroCalibration_s {
 104:../cleanflight/src/main/sensors/gyro.c ****     float sum[XYZ_AXIS_COUNT];
 105:../cleanflight/src/main/sensors/gyro.c ****     stdev_t var[XYZ_AXIS_COUNT];
 106:../cleanflight/src/main/sensors/gyro.c ****     int32_t cyclesRemaining;
 107:../cleanflight/src/main/sensors/gyro.c **** } gyroCalibration_t;
 108:../cleanflight/src/main/sensors/gyro.c **** 
 109:../cleanflight/src/main/sensors/gyro.c **** bool firstArmingCalibrationWasStarted = false;
 110:../cleanflight/src/main/sensors/gyro.c **** 
 111:../cleanflight/src/main/sensors/gyro.c **** typedef union gyroLowpassFilter_u {
 112:../cleanflight/src/main/sensors/gyro.c ****     pt1Filter_t pt1FilterState;
 113:../cleanflight/src/main/sensors/gyro.c ****     biquadFilter_t biquadFilterState;
 114:../cleanflight/src/main/sensors/gyro.c **** } gyroLowpassFilter_t;
 115:../cleanflight/src/main/sensors/gyro.c **** 
 116:../cleanflight/src/main/sensors/gyro.c **** typedef struct gyroSensor_s {
 117:../cleanflight/src/main/sensors/gyro.c ****     gyroDev_t gyroDev;
 118:../cleanflight/src/main/sensors/gyro.c ****     gyroCalibration_t calibration;
 119:../cleanflight/src/main/sensors/gyro.c **** 
 120:../cleanflight/src/main/sensors/gyro.c ****     // lowpass gyro soft filter
 121:../cleanflight/src/main/sensors/gyro.c ****     filterApplyFnPtr lowpassFilterApplyFn;
 122:../cleanflight/src/main/sensors/gyro.c ****     gyroLowpassFilter_t lowpassFilter[XYZ_AXIS_COUNT];
 123:../cleanflight/src/main/sensors/gyro.c **** 
 124:../cleanflight/src/main/sensors/gyro.c ****     // lowpass2 gyro soft filter
 125:../cleanflight/src/main/sensors/gyro.c ****     filterApplyFnPtr lowpass2FilterApplyFn;
 126:../cleanflight/src/main/sensors/gyro.c ****     gyroLowpassFilter_t lowpass2Filter[XYZ_AXIS_COUNT];
 127:../cleanflight/src/main/sensors/gyro.c **** 
 128:../cleanflight/src/main/sensors/gyro.c ****     // notch filters
 129:../cleanflight/src/main/sensors/gyro.c ****     filterApplyFnPtr notchFilter1ApplyFn;
 130:../cleanflight/src/main/sensors/gyro.c ****     biquadFilter_t notchFilter1[XYZ_AXIS_COUNT];
 131:../cleanflight/src/main/sensors/gyro.c **** 
 132:../cleanflight/src/main/sensors/gyro.c ****     filterApplyFnPtr notchFilter2ApplyFn;
 133:../cleanflight/src/main/sensors/gyro.c ****     biquadFilter_t notchFilter2[XYZ_AXIS_COUNT];
 134:../cleanflight/src/main/sensors/gyro.c **** 
 135:../cleanflight/src/main/sensors/gyro.c ****     filterApplyFnPtr notchFilterDynApplyFn;
 136:../cleanflight/src/main/sensors/gyro.c ****     biquadFilter_t notchFilterDyn[XYZ_AXIS_COUNT];
 137:../cleanflight/src/main/sensors/gyro.c **** 
 138:../cleanflight/src/main/sensors/gyro.c ****     // overflow and recovery
 139:../cleanflight/src/main/sensors/gyro.c ****     timeUs_t overflowTimeUs;
 140:../cleanflight/src/main/sensors/gyro.c ****     bool overflowDetected;
 141:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_YAW_SPIN_RECOVERY
 142:../cleanflight/src/main/sensors/gyro.c ****     timeUs_t yawSpinTimeUs;
 143:../cleanflight/src/main/sensors/gyro.c ****     bool yawSpinDetected;
 144:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_YAW_SPIN_RECOVERY
 145:../cleanflight/src/main/sensors/gyro.c **** 
 146:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_DATA_ANALYSE
 147:../cleanflight/src/main/sensors/gyro.c ****     gyroAnalyseState_t gyroAnalyseState;
 148:../cleanflight/src/main/sensors/gyro.c **** #endif
 149:../cleanflight/src/main/sensors/gyro.c **** } gyroSensor_t;
 150:../cleanflight/src/main/sensors/gyro.c **** 
 151:../cleanflight/src/main/sensors/gyro.c **** STATIC_UNIT_TESTED FAST_RAM_ZERO_INIT gyroSensor_t gyroSensor1;
 152:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 153:../cleanflight/src/main/sensors/gyro.c **** STATIC_UNIT_TESTED FAST_RAM_ZERO_INIT gyroSensor_t gyroSensor2;
 154:../cleanflight/src/main/sensors/gyro.c **** #endif
 155:../cleanflight/src/main/sensors/gyro.c **** 
 156:../cleanflight/src/main/sensors/gyro.c **** #ifdef UNIT_TEST
 157:../cleanflight/src/main/sensors/gyro.c **** STATIC_UNIT_TESTED gyroSensor_t * const gyroSensorPtr = &gyroSensor1;
 158:../cleanflight/src/main/sensors/gyro.c **** STATIC_UNIT_TESTED gyroDev_t * const gyroDevPtr = &gyroSensor1.gyroDev;
 159:../cleanflight/src/main/sensors/gyro.c **** #endif
 160:../cleanflight/src/main/sensors/gyro.c **** 
 161:../cleanflight/src/main/sensors/gyro.c **** static void gyroInitSensorFilters(gyroSensor_t *gyroSensor);
 162:../cleanflight/src/main/sensors/gyro.c **** static void gyroInitLowpassFilterLpf(gyroSensor_t *gyroSensor, int slot, int type, uint16_t lpfHz);
 163:../cleanflight/src/main/sensors/gyro.c **** 
 164:../cleanflight/src/main/sensors/gyro.c **** #define DEBUG_GYRO_CALIBRATION 3
 165:../cleanflight/src/main/sensors/gyro.c **** 
 166:../cleanflight/src/main/sensors/gyro.c **** #ifdef STM32F10X
 167:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_SYNC_DENOM_DEFAULT 8
 168:../cleanflight/src/main/sensors/gyro.c **** #elif defined(USE_GYRO_SPI_MPU6000) || defined(USE_GYRO_SPI_MPU6500) || defined(USE_GYRO_SPI_ICM206
 169:../cleanflight/src/main/sensors/gyro.c ****    || defined(USE_GYRO_SPI_ICM20689)
 170:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_SYNC_DENOM_DEFAULT 1
 171:../cleanflight/src/main/sensors/gyro.c **** #else
 172:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_SYNC_DENOM_DEFAULT 3
 173:../cleanflight/src/main/sensors/gyro.c **** #endif
 174:../cleanflight/src/main/sensors/gyro.c **** 
 175:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_OVERFLOW_TRIGGER_THRESHOLD 31980  // 97.5% full scale (1950dps for 2000dps gyro)
 176:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_OVERFLOW_RESET_THRESHOLD 30340    // 92.5% full scale (1850dps for 2000dps gyro)
 177:../cleanflight/src/main/sensors/gyro.c **** 
 178:../cleanflight/src/main/sensors/gyro.c **** PG_REGISTER_WITH_RESET_TEMPLATE(gyroConfig_t, gyroConfig, PG_GYRO_CONFIG, 4);
 179:../cleanflight/src/main/sensors/gyro.c **** 
 180:../cleanflight/src/main/sensors/gyro.c **** #ifndef GYRO_CONFIG_USE_GYRO_DEFAULT
 181:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_CONFIG_USE_GYRO_DEFAULT GYRO_CONFIG_USE_GYRO_1
 182:../cleanflight/src/main/sensors/gyro.c **** #endif
 183:../cleanflight/src/main/sensors/gyro.c **** 
 184:../cleanflight/src/main/sensors/gyro.c **** PG_RESET_TEMPLATE(gyroConfig_t, gyroConfig,
 185:../cleanflight/src/main/sensors/gyro.c ****     .gyro_align = ALIGN_DEFAULT,
 186:../cleanflight/src/main/sensors/gyro.c ****     .gyroCalibrationDuration = 125,        // 1.25 seconds
 187:../cleanflight/src/main/sensors/gyro.c ****     .gyroMovementCalibrationThreshold = 48,
 188:../cleanflight/src/main/sensors/gyro.c ****     .gyro_sync_denom = GYRO_SYNC_DENOM_DEFAULT,
 189:../cleanflight/src/main/sensors/gyro.c ****     .gyro_hardware_lpf = GYRO_HARDWARE_LPF_NORMAL,
 190:../cleanflight/src/main/sensors/gyro.c ****     .gyro_32khz_hardware_lpf = GYRO_32KHZ_HARDWARE_LPF_NORMAL,
 191:../cleanflight/src/main/sensors/gyro.c ****     .gyro_lowpass_type = FILTER_PT1,
 192:../cleanflight/src/main/sensors/gyro.c ****     .gyro_lowpass_hz = 100,
 193:../cleanflight/src/main/sensors/gyro.c ****     .gyro_lowpass2_type = FILTER_PT1,
 194:../cleanflight/src/main/sensors/gyro.c ****     .gyro_lowpass2_hz = 300,
 195:../cleanflight/src/main/sensors/gyro.c ****     .gyro_high_fsr = false,
 196:../cleanflight/src/main/sensors/gyro.c ****     .gyro_use_32khz = false,
 197:../cleanflight/src/main/sensors/gyro.c ****     .gyro_to_use = GYRO_CONFIG_USE_GYRO_DEFAULT,
 198:../cleanflight/src/main/sensors/gyro.c ****     .gyro_soft_notch_hz_1 = 0,
 199:../cleanflight/src/main/sensors/gyro.c ****     .gyro_soft_notch_cutoff_1 = 0,
 200:../cleanflight/src/main/sensors/gyro.c ****     .gyro_soft_notch_hz_2 = 0,
 201:../cleanflight/src/main/sensors/gyro.c ****     .gyro_soft_notch_cutoff_2 = 0,
 202:../cleanflight/src/main/sensors/gyro.c ****     .checkOverflow = GYRO_OVERFLOW_CHECK_ALL_AXES,
 203:../cleanflight/src/main/sensors/gyro.c ****     .gyro_offset_yaw = 0,
 204:../cleanflight/src/main/sensors/gyro.c ****     .yaw_spin_recovery = true,
 205:../cleanflight/src/main/sensors/gyro.c ****     .yaw_spin_threshold = 1950,
 206:../cleanflight/src/main/sensors/gyro.c ****     .dyn_notch_quality = 70,
 207:../cleanflight/src/main/sensors/gyro.c ****     .dyn_notch_width_percent = 50,
 208:../cleanflight/src/main/sensors/gyro.c **** );
 209:../cleanflight/src/main/sensors/gyro.c **** 
 210:../cleanflight/src/main/sensors/gyro.c **** 
 211:../cleanflight/src/main/sensors/gyro.c **** const busDevice_t *gyroSensorBus(void)
 212:../cleanflight/src/main/sensors/gyro.c **** {
 250              	 .loc 3 212 0
 251              	 .cfi_startproc
 252              	 
 253              	 
 254              	 
 255 0000 80B4     	 push {r7}
 256              	.LCFI14:
 257              	 .cfi_def_cfa_offset 4
 258              	 .cfi_offset 7,-4
 259 0002 00AF     	 add r7,sp,#0
 260              	.LCFI15:
 261              	 .cfi_def_cfa_register 7
 213:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 214:../cleanflight/src/main/sensors/gyro.c ****     if (gyroToUse == GYRO_CONFIG_USE_GYRO_2) {
 215:../cleanflight/src/main/sensors/gyro.c ****         return &gyroSensor2.gyroDev.bus;
 216:../cleanflight/src/main/sensors/gyro.c ****     } else {
 217:../cleanflight/src/main/sensors/gyro.c ****         return &gyroSensor1.gyroDev.bus;
 218:../cleanflight/src/main/sensors/gyro.c ****     }
 219:../cleanflight/src/main/sensors/gyro.c **** #else
 220:../cleanflight/src/main/sensors/gyro.c ****     return &gyroSensor1.gyroDev.bus;
 262              	 .loc 3 220 0
 263 0004 024B     	 ldr r3,.L13
 221:../cleanflight/src/main/sensors/gyro.c **** #endif
 222:../cleanflight/src/main/sensors/gyro.c **** }
 264              	 .loc 3 222 0
 265 0006 1846     	 mov r0,r3
 266 0008 BD46     	 mov sp,r7
 267              	.LCFI16:
 268              	 .cfi_def_cfa_register 13
 269              	 
 270 000a 5DF8047B 	 ldr r7,[sp],#4
 271              	.LCFI17:
 272              	 .cfi_restore 7
 273              	 .cfi_def_cfa_offset 0
 274 000e 7047     	 bx lr
 275              	.L14:
 276              	 .align 2
 277              	.L13:
 278 0010 10000000 	 .word gyroSensor1+16
 279              	 .cfi_endproc
 280              	.LFE543:
 282              	 .section .text.gyroSensorBusByDevice,"ax",%progbits
 283              	 .align 2
 284              	 .global gyroSensorBusByDevice
 285              	 .thumb
 286              	 .thumb_func
 288              	gyroSensorBusByDevice:
 289              	.LFB544:
 223:../cleanflight/src/main/sensors/gyro.c **** 
 224:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_REGISTER_DUMP
 225:../cleanflight/src/main/sensors/gyro.c **** const busDevice_t *gyroSensorBusByDevice(uint8_t whichSensor)
 226:../cleanflight/src/main/sensors/gyro.c **** {
 290              	 .loc 3 226 0
 291              	 .cfi_startproc
 292              	 
 293              	 
 294              	 
 295 0000 80B4     	 push {r7}
 296              	.LCFI18:
 297              	 .cfi_def_cfa_offset 4
 298              	 .cfi_offset 7,-4
 299 0002 83B0     	 sub sp,sp,#12
 300              	.LCFI19:
 301              	 .cfi_def_cfa_offset 16
 302 0004 00AF     	 add r7,sp,#0
 303              	.LCFI20:
 304              	 .cfi_def_cfa_register 7
 305 0006 0346     	 mov r3,r0
 306 0008 FB71     	 strb r3,[r7,#7]
 227:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 228:../cleanflight/src/main/sensors/gyro.c ****     if (whichSensor == GYRO_CONFIG_USE_GYRO_2) {
 229:../cleanflight/src/main/sensors/gyro.c ****         return &gyroSensor2.gyroDev.bus;
 230:../cleanflight/src/main/sensors/gyro.c ****     } else {
 231:../cleanflight/src/main/sensors/gyro.c ****         return &gyroSensor1.gyroDev.bus;
 232:../cleanflight/src/main/sensors/gyro.c ****     }
 233:../cleanflight/src/main/sensors/gyro.c **** #else
 234:../cleanflight/src/main/sensors/gyro.c ****     UNUSED(whichSensor);
 235:../cleanflight/src/main/sensors/gyro.c ****     return &gyroSensor1.gyroDev.bus;
 307              	 .loc 3 235 0
 308 000a 034B     	 ldr r3,.L17
 236:../cleanflight/src/main/sensors/gyro.c **** #endif
 237:../cleanflight/src/main/sensors/gyro.c **** }
 309              	 .loc 3 237 0
 310 000c 1846     	 mov r0,r3
 311 000e 0C37     	 adds r7,r7,#12
 312              	.LCFI21:
 313              	 .cfi_def_cfa_offset 4
 314 0010 BD46     	 mov sp,r7
 315              	.LCFI22:
 316              	 .cfi_def_cfa_register 13
 317              	 
 318 0012 5DF8047B 	 ldr r7,[sp],#4
 319              	.LCFI23:
 320              	 .cfi_restore 7
 321              	 .cfi_def_cfa_offset 0
 322 0016 7047     	 bx lr
 323              	.L18:
 324              	 .align 2
 325              	.L17:
 326 0018 10000000 	 .word gyroSensor1+16
 327              	 .cfi_endproc
 328              	.LFE544:
 330              	 .section .text.gyroMpuConfiguration,"ax",%progbits
 331              	 .align 2
 332              	 .global gyroMpuConfiguration
 333              	 .thumb
 334              	 .thumb_func
 336              	gyroMpuConfiguration:
 337              	.LFB545:
 238:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_GYRO_REGISTER_DUMP
 239:../cleanflight/src/main/sensors/gyro.c **** 
 240:../cleanflight/src/main/sensors/gyro.c **** const mpuConfiguration_t *gyroMpuConfiguration(void)
 241:../cleanflight/src/main/sensors/gyro.c **** {
 338              	 .loc 3 241 0
 339              	 .cfi_startproc
 340              	 
 341              	 
 342              	 
 343 0000 80B4     	 push {r7}
 344              	.LCFI24:
 345              	 .cfi_def_cfa_offset 4
 346              	 .cfi_offset 7,-4
 347 0002 00AF     	 add r7,sp,#0
 348              	.LCFI25:
 349              	 .cfi_def_cfa_register 7
 242:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 243:../cleanflight/src/main/sensors/gyro.c ****     if (gyroToUse == GYRO_CONFIG_USE_GYRO_2) {
 244:../cleanflight/src/main/sensors/gyro.c ****         return &gyroSensor2.gyroDev.mpuConfiguration;
 245:../cleanflight/src/main/sensors/gyro.c ****     } else {
 246:../cleanflight/src/main/sensors/gyro.c ****         return &gyroSensor1.gyroDev.mpuConfiguration;
 247:../cleanflight/src/main/sensors/gyro.c ****     }
 248:../cleanflight/src/main/sensors/gyro.c **** #else
 249:../cleanflight/src/main/sensors/gyro.c ****     return &gyroSensor1.gyroDev.mpuConfiguration;
 350              	 .loc 3 249 0
 351 0004 024B     	 ldr r3,.L21
 250:../cleanflight/src/main/sensors/gyro.c **** #endif
 251:../cleanflight/src/main/sensors/gyro.c **** }
 352              	 .loc 3 251 0
 353 0006 1846     	 mov r0,r3
 354 0008 BD46     	 mov sp,r7
 355              	.LCFI26:
 356              	 .cfi_def_cfa_register 13
 357              	 
 358 000a 5DF8047B 	 ldr r7,[sp],#4
 359              	.LCFI27:
 360              	 .cfi_restore 7
 361              	 .cfi_def_cfa_offset 0
 362 000e 7047     	 bx lr
 363              	.L22:
 364              	 .align 2
 365              	.L21:
 366 0010 55000000 	 .word gyroSensor1+85
 367              	 .cfi_endproc
 368              	.LFE545:
 370              	 .section .text.gyroMpuDetectionResult,"ax",%progbits
 371              	 .align 2
 372              	 .global gyroMpuDetectionResult
 373              	 .thumb
 374              	 .thumb_func
 376              	gyroMpuDetectionResult:
 377              	.LFB546:
 252:../cleanflight/src/main/sensors/gyro.c **** 
 253:../cleanflight/src/main/sensors/gyro.c **** const mpuDetectionResult_t *gyroMpuDetectionResult(void)
 254:../cleanflight/src/main/sensors/gyro.c **** {
 378              	 .loc 3 254 0
 379              	 .cfi_startproc
 380              	 
 381              	 
 382              	 
 383 0000 80B4     	 push {r7}
 384              	.LCFI28:
 385              	 .cfi_def_cfa_offset 4
 386              	 .cfi_offset 7,-4
 387 0002 00AF     	 add r7,sp,#0
 388              	.LCFI29:
 389              	 .cfi_def_cfa_register 7
 255:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 256:../cleanflight/src/main/sensors/gyro.c ****     if (gyroToUse == GYRO_CONFIG_USE_GYRO_2) {
 257:../cleanflight/src/main/sensors/gyro.c ****         return &gyroSensor2.gyroDev.mpuDetectionResult;
 258:../cleanflight/src/main/sensors/gyro.c ****     } else {
 259:../cleanflight/src/main/sensors/gyro.c ****         return &gyroSensor1.gyroDev.mpuDetectionResult;
 260:../cleanflight/src/main/sensors/gyro.c ****     }
 261:../cleanflight/src/main/sensors/gyro.c **** #else
 262:../cleanflight/src/main/sensors/gyro.c ****     return &gyroSensor1.gyroDev.mpuDetectionResult;
 390              	 .loc 3 262 0
 391 0004 024B     	 ldr r3,.L25
 263:../cleanflight/src/main/sensors/gyro.c **** #endif
 264:../cleanflight/src/main/sensors/gyro.c **** }
 392              	 .loc 3 264 0
 393 0006 1846     	 mov r0,r3
 394 0008 BD46     	 mov sp,r7
 395              	.LCFI30:
 396              	 .cfi_def_cfa_register 13
 397              	 
 398 000a 5DF8047B 	 ldr r7,[sp],#4
 399              	.LCFI31:
 400              	 .cfi_restore 7
 401              	 .cfi_def_cfa_offset 0
 402 000e 7047     	 bx lr
 403              	.L26:
 404              	 .align 2
 405              	.L25:
 406 0010 59000000 	 .word gyroSensor1+89
 407              	 .cfi_endproc
 408              	.LFE546:
 410              	 .section .text.gyroDetect,"ax",%progbits
 411              	 .align 2
 412              	 .thumb
 413              	 .thumb_func
 415              	gyroDetect:
 416              	.LFB547:
 265:../cleanflight/src/main/sensors/gyro.c **** 
 266:../cleanflight/src/main/sensors/gyro.c **** STATIC_UNIT_TESTED gyroSensor_e gyroDetect(gyroDev_t *dev)
 267:../cleanflight/src/main/sensors/gyro.c **** {
 417              	 .loc 3 267 0
 418              	 .cfi_startproc
 419              	 
 420              	 
 421 0000 80B5     	 push {r7,lr}
 422              	.LCFI32:
 423              	 .cfi_def_cfa_offset 8
 424              	 .cfi_offset 7,-8
 425              	 .cfi_offset 14,-4
 426 0002 84B0     	 sub sp,sp,#16
 427              	.LCFI33:
 428              	 .cfi_def_cfa_offset 24
 429 0004 00AF     	 add r7,sp,#0
 430              	.LCFI34:
 431              	 .cfi_def_cfa_register 7
 432 0006 7860     	 str r0,[r7,#4]
 268:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor_e gyroHardware = GYRO_DEFAULT;
 433              	 .loc 3 268 0
 434 0008 0123     	 movs r3,#1
 435 000a FB73     	 strb r3,[r7,#15]
 269:../cleanflight/src/main/sensors/gyro.c **** 
 270:../cleanflight/src/main/sensors/gyro.c ****     switch (gyroHardware) {
 436              	 .loc 3 270 0
 437 000c FB7B     	 ldrb r3,[r7,#15]
 438 000e 013B     	 subs r3,r3,#1
 439 0010 0A2B     	 cmp r3,#10
 440 0012 44D8     	 bhi .L28
 441 0014 01A2     	 adr r2,.L30
 442 0016 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 443 001a 00BF     	 .p2align 2
 444              	.L30:
 445 001c 49000000 	 .word .L29+1
 446 0020 9F000000 	 .word .L28+1
 447 0024 9F000000 	 .word .L28+1
 448 0028 9F000000 	 .word .L28+1
 449 002c 9F000000 	 .word .L28+1
 450 0030 9F000000 	 .word .L28+1
 451 0034 49000000 	 .word .L29+1
 452 0038 9F000000 	 .word .L28+1
 453 003c 49000000 	 .word .L29+1
 454 0040 49000000 	 .word .L29+1
 455 0044 49000000 	 .word .L29+1
 456              	 .p2align 1
 457              	.L29:
 271:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_DEFAULT:
 272:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 273:../cleanflight/src/main/sensors/gyro.c **** 
 274:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_MPU6050
 275:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU6050:
 276:../cleanflight/src/main/sensors/gyro.c ****         if (mpu6050GyroDetect(dev)) {
 277:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_MPU6050;
 278:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_MPU6050_ALIGN
 279:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_MPU6050_ALIGN;
 280:../cleanflight/src/main/sensors/gyro.c **** #endif
 281:../cleanflight/src/main/sensors/gyro.c ****             break;
 282:../cleanflight/src/main/sensors/gyro.c ****         }
 283:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 284:../cleanflight/src/main/sensors/gyro.c **** #endif
 285:../cleanflight/src/main/sensors/gyro.c **** 
 286:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_L3G4200D
 287:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_L3G4200D:
 288:../cleanflight/src/main/sensors/gyro.c ****         if (l3g4200dDetect(dev)) {
 289:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_L3G4200D;
 290:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_L3G4200D_ALIGN
 291:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_L3G4200D_ALIGN;
 292:../cleanflight/src/main/sensors/gyro.c **** #endif
 293:../cleanflight/src/main/sensors/gyro.c ****             break;
 294:../cleanflight/src/main/sensors/gyro.c ****         }
 295:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 296:../cleanflight/src/main/sensors/gyro.c **** #endif
 297:../cleanflight/src/main/sensors/gyro.c **** 
 298:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_MPU3050
 299:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU3050:
 300:../cleanflight/src/main/sensors/gyro.c ****         if (mpu3050Detect(dev)) {
 301:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_MPU3050;
 302:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_MPU3050_ALIGN
 303:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_MPU3050_ALIGN;
 304:../cleanflight/src/main/sensors/gyro.c **** #endif
 305:../cleanflight/src/main/sensors/gyro.c ****             break;
 306:../cleanflight/src/main/sensors/gyro.c ****         }
 307:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 308:../cleanflight/src/main/sensors/gyro.c **** #endif
 309:../cleanflight/src/main/sensors/gyro.c **** 
 310:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_L3GD20
 311:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_L3GD20:
 312:../cleanflight/src/main/sensors/gyro.c ****         if (l3gd20Detect(dev)) {
 313:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_L3GD20;
 314:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_L3GD20_ALIGN
 315:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_L3GD20_ALIGN;
 316:../cleanflight/src/main/sensors/gyro.c **** #endif
 317:../cleanflight/src/main/sensors/gyro.c ****             break;
 318:../cleanflight/src/main/sensors/gyro.c ****         }
 319:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 320:../cleanflight/src/main/sensors/gyro.c **** #endif
 321:../cleanflight/src/main/sensors/gyro.c **** 
 322:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_SPI_MPU6000
 323:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU6000:
 324:../cleanflight/src/main/sensors/gyro.c ****         if (mpu6000SpiGyroDetect(dev)) {
 325:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_MPU6000;
 326:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_MPU6000_ALIGN
 327:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_MPU6000_ALIGN;
 328:../cleanflight/src/main/sensors/gyro.c **** #endif
 329:../cleanflight/src/main/sensors/gyro.c ****             break;
 330:../cleanflight/src/main/sensors/gyro.c ****         }
 331:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 332:../cleanflight/src/main/sensors/gyro.c **** #endif
 333:../cleanflight/src/main/sensors/gyro.c **** 
 334:../cleanflight/src/main/sensors/gyro.c **** #if defined(USE_GYRO_MPU6500) || defined(USE_GYRO_SPI_MPU6500)
 335:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU6500:
 336:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20601:
 337:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20602:
 338:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20608G:
 339:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_SPI_MPU6500
 340:../cleanflight/src/main/sensors/gyro.c ****         if (mpu6500GyroDetect(dev) || mpu6500SpiGyroDetect(dev)) {
 341:../cleanflight/src/main/sensors/gyro.c **** #else
 342:../cleanflight/src/main/sensors/gyro.c ****         if (mpu6500GyroDetect(dev)) {
 458              	 .loc 3 342 0
 459 0048 7868     	 ldr r0,[r7,#4]
 460 004a FFF7FEFF 	 bl mpu6500GyroDetect
 461 004e 0346     	 mov r3,r0
 462 0050 002B     	 cmp r3,#0
 463 0052 24D0     	 beq .L28
 343:../cleanflight/src/main/sensors/gyro.c **** #endif
 344:../cleanflight/src/main/sensors/gyro.c ****             switch (dev->mpuDetectionResult.sensor) {
 464              	 .loc 3 344 0
 465 0054 7B68     	 ldr r3,[r7,#4]
 466 0056 93F85930 	 ldrb r3,[r3,#89]
 467 005a 063B     	 subs r3,r3,#6
 468 005c 032B     	 cmp r3,#3
 469 005e 17D8     	 bhi .L31
 470 0060 01A2     	 adr r2,.L33
 471 0062 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 472 0066 00BF     	 .p2align 2
 473              	.L33:
 474 0068 79000000 	 .word .L32+1
 475 006c 7F000000 	 .word .L34+1
 476 0070 85000000 	 .word .L35+1
 477 0074 8B000000 	 .word .L36+1
 478              	 .p2align 1
 479              	.L32:
 345:../cleanflight/src/main/sensors/gyro.c ****             case MPU_9250_SPI:
 346:../cleanflight/src/main/sensors/gyro.c ****                 gyroHardware = GYRO_MPU9250;
 480              	 .loc 3 346 0
 481 0078 0823     	 movs r3,#8
 482 007a FB73     	 strb r3,[r7,#15]
 347:../cleanflight/src/main/sensors/gyro.c ****                 break;
 483              	 .loc 3 347 0
 484 007c 0AE0     	 b .L37
 485              	.L34:
 348:../cleanflight/src/main/sensors/gyro.c ****             case ICM_20601_SPI:
 349:../cleanflight/src/main/sensors/gyro.c ****                 gyroHardware = GYRO_ICM20601;
 486              	 .loc 3 349 0
 487 007e 0923     	 movs r3,#9
 488 0080 FB73     	 strb r3,[r7,#15]
 350:../cleanflight/src/main/sensors/gyro.c ****                 break;
 489              	 .loc 3 350 0
 490 0082 07E0     	 b .L37
 491              	.L35:
 351:../cleanflight/src/main/sensors/gyro.c ****             case ICM_20602_SPI:
 352:../cleanflight/src/main/sensors/gyro.c ****                 gyroHardware = GYRO_ICM20602;
 492              	 .loc 3 352 0
 493 0084 0A23     	 movs r3,#10
 494 0086 FB73     	 strb r3,[r7,#15]
 353:../cleanflight/src/main/sensors/gyro.c ****                 break;
 495              	 .loc 3 353 0
 496 0088 04E0     	 b .L37
 497              	.L36:
 354:../cleanflight/src/main/sensors/gyro.c ****             case ICM_20608_SPI:
 355:../cleanflight/src/main/sensors/gyro.c ****                 gyroHardware = GYRO_ICM20608G;
 498              	 .loc 3 355 0
 499 008a 0B23     	 movs r3,#11
 500 008c FB73     	 strb r3,[r7,#15]
 356:../cleanflight/src/main/sensors/gyro.c ****                 break;
 501              	 .loc 3 356 0
 502 008e 01E0     	 b .L37
 503              	.L31:
 357:../cleanflight/src/main/sensors/gyro.c ****             default:
 358:../cleanflight/src/main/sensors/gyro.c ****                 gyroHardware = GYRO_MPU6500;
 504              	 .loc 3 358 0
 505 0090 0723     	 movs r3,#7
 506 0092 FB73     	 strb r3,[r7,#15]
 507              	.L37:
 359:../cleanflight/src/main/sensors/gyro.c ****             }
 360:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_MPU6500_ALIGN
 361:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_MPU6500_ALIGN;
 508              	 .loc 3 361 0
 509 0094 7B68     	 ldr r3,[r7,#4]
 510 0096 0122     	 movs r2,#1
 511 0098 83F85B20 	 strb r2,[r3,#91]
 362:../cleanflight/src/main/sensors/gyro.c **** #endif
 363:../cleanflight/src/main/sensors/gyro.c ****             break;
 512              	 .loc 3 363 0
 513 009c 01E0     	 b .L38
 514              	.L28:
 364:../cleanflight/src/main/sensors/gyro.c ****         }
 365:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 366:../cleanflight/src/main/sensors/gyro.c **** #endif
 367:../cleanflight/src/main/sensors/gyro.c **** 
 368:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_SPI_MPU9250
 369:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU9250:
 370:../cleanflight/src/main/sensors/gyro.c ****         if (mpu9250SpiGyroDetect(dev)) {
 371:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_MPU9250;
 372:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_MPU9250_ALIGN
 373:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_MPU9250_ALIGN;
 374:../cleanflight/src/main/sensors/gyro.c **** #endif
 375:../cleanflight/src/main/sensors/gyro.c ****             break;
 376:../cleanflight/src/main/sensors/gyro.c ****         }
 377:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 378:../cleanflight/src/main/sensors/gyro.c **** #endif
 379:../cleanflight/src/main/sensors/gyro.c **** 
 380:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_SPI_ICM20649
 381:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20649:
 382:../cleanflight/src/main/sensors/gyro.c ****         if (icm20649SpiGyroDetect(dev)) {
 383:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_ICM20649;
 384:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_ICM20649_ALIGN
 385:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_ICM20649_ALIGN;
 386:../cleanflight/src/main/sensors/gyro.c **** #endif
 387:../cleanflight/src/main/sensors/gyro.c ****             break;
 388:../cleanflight/src/main/sensors/gyro.c ****         }
 389:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 390:../cleanflight/src/main/sensors/gyro.c **** #endif
 391:../cleanflight/src/main/sensors/gyro.c **** 
 392:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_SPI_ICM20689
 393:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20689:
 394:../cleanflight/src/main/sensors/gyro.c ****         if (icm20689SpiGyroDetect(dev)) {
 395:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_ICM20689;
 396:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_ICM20689_ALIGN
 397:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_ICM20689_ALIGN;
 398:../cleanflight/src/main/sensors/gyro.c **** #endif
 399:../cleanflight/src/main/sensors/gyro.c ****             break;
 400:../cleanflight/src/main/sensors/gyro.c ****         }
 401:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 402:../cleanflight/src/main/sensors/gyro.c **** #endif
 403:../cleanflight/src/main/sensors/gyro.c **** 
 404:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_ACCGYRO_BMI160
 405:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_BMI160:
 406:../cleanflight/src/main/sensors/gyro.c ****         if (bmi160SpiGyroDetect(dev)) {
 407:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_BMI160;
 408:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_BMI160_ALIGN
 409:../cleanflight/src/main/sensors/gyro.c ****             dev->gyroAlign = GYRO_BMI160_ALIGN;
 410:../cleanflight/src/main/sensors/gyro.c **** #endif
 411:../cleanflight/src/main/sensors/gyro.c ****             break;
 412:../cleanflight/src/main/sensors/gyro.c ****         }
 413:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 414:../cleanflight/src/main/sensors/gyro.c **** #endif
 415:../cleanflight/src/main/sensors/gyro.c **** 
 416:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_FAKE_GYRO
 417:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_FAKE:
 418:../cleanflight/src/main/sensors/gyro.c ****         if (fakeGyroDetect(dev)) {
 419:../cleanflight/src/main/sensors/gyro.c ****             gyroHardware = GYRO_FAKE;
 420:../cleanflight/src/main/sensors/gyro.c ****             break;
 421:../cleanflight/src/main/sensors/gyro.c ****         }
 422:../cleanflight/src/main/sensors/gyro.c ****         FALLTHROUGH;
 423:../cleanflight/src/main/sensors/gyro.c **** #endif
 424:../cleanflight/src/main/sensors/gyro.c **** 
 425:../cleanflight/src/main/sensors/gyro.c ****     default:
 426:../cleanflight/src/main/sensors/gyro.c ****         gyroHardware = GYRO_NONE;
 515              	 .loc 3 426 0
 516 009e 0023     	 movs r3,#0
 517 00a0 FB73     	 strb r3,[r7,#15]
 518              	.L38:
 427:../cleanflight/src/main/sensors/gyro.c ****     }
 428:../cleanflight/src/main/sensors/gyro.c **** 
 429:../cleanflight/src/main/sensors/gyro.c ****     if (gyroHardware != GYRO_NONE) {
 519              	 .loc 3 429 0
 520 00a2 FB7B     	 ldrb r3,[r7,#15]
 521 00a4 002B     	 cmp r3,#0
 522 00a6 05D0     	 beq .L39
 430:../cleanflight/src/main/sensors/gyro.c ****         detectedSensors[SENSOR_INDEX_GYRO] = gyroHardware;
 523              	 .loc 3 430 0
 524 00a8 054A     	 ldr r2,.L41
 525 00aa FB7B     	 ldrb r3,[r7,#15]
 526 00ac 1370     	 strb r3,[r2]
 431:../cleanflight/src/main/sensors/gyro.c ****         sensorsSet(SENSOR_GYRO);
 527              	 .loc 3 431 0
 528 00ae 0120     	 movs r0,#1
 529 00b0 FFF7FEFF 	 bl sensorsSet
 530              	.L39:
 432:../cleanflight/src/main/sensors/gyro.c ****     }
 433:../cleanflight/src/main/sensors/gyro.c **** 
 434:../cleanflight/src/main/sensors/gyro.c **** 
 435:../cleanflight/src/main/sensors/gyro.c ****     return gyroHardware;
 531              	 .loc 3 435 0
 532 00b4 FB7B     	 ldrb r3,[r7,#15]
 436:../cleanflight/src/main/sensors/gyro.c **** }
 533              	 .loc 3 436 0
 534 00b6 1846     	 mov r0,r3
 535 00b8 1037     	 adds r7,r7,#16
 536              	.LCFI35:
 537              	 .cfi_def_cfa_offset 8
 538 00ba BD46     	 mov sp,r7
 539              	.LCFI36:
 540              	 .cfi_def_cfa_register 13
 541              	 
 542 00bc 80BD     	 pop {r7,pc}
 543              	.L42:
 544 00be 00BF     	 .align 2
 545              	.L41:
 546 00c0 00000000 	 .word detectedSensors
 547              	 .cfi_endproc
 548              	.LFE547:
 550              	 .section .text.gyroInitSensor,"ax",%progbits
 551              	 .align 2
 552              	 .thumb
 553              	 .thumb_func
 555              	gyroInitSensor:
 556              	.LFB548:
 437:../cleanflight/src/main/sensors/gyro.c **** 
 438:../cleanflight/src/main/sensors/gyro.c **** static bool gyroInitSensor(gyroSensor_t *gyroSensor)
 439:../cleanflight/src/main/sensors/gyro.c **** {
 557              	 .loc 3 439 0
 558              	 .cfi_startproc
 559              	 
 560              	 
 561 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 562              	.LCFI37:
 563              	 .cfi_def_cfa_offset 20
 564              	 .cfi_offset 4,-20
 565              	 .cfi_offset 5,-16
 566              	 .cfi_offset 6,-12
 567              	 .cfi_offset 7,-8
 568              	 .cfi_offset 14,-4
 569 0002 85B0     	 sub sp,sp,#20
 570              	.LCFI38:
 571              	 .cfi_def_cfa_offset 40
 572 0004 00AF     	 add r7,sp,#0
 573              	.LCFI39:
 574              	 .cfi_def_cfa_register 7
 575 0006 7860     	 str r0,[r7,#4]
 440:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->gyroDev.gyro_high_fsr = gyroConfig()->gyro_high_fsr;
 576              	 .loc 3 440 0
 577 0008 FFF7FEFF 	 bl gyroConfig
 578 000c 0346     	 mov r3,r0
 579 000e 5B79     	 ldrb r3,[r3,#5]
 580 0010 002B     	 cmp r3,#0
 581 0012 14BF     	 ite ne
 582 0014 0123     	 movne r3,#1
 583 0016 0023     	 moveq r3,#0
 584 0018 DAB2     	 uxtb r2,r3
 585 001a 7B68     	 ldr r3,[r7,#4]
 586 001c 83F85E20 	 strb r2,[r3,#94]
 441:../cleanflight/src/main/sensors/gyro.c **** 
 442:../cleanflight/src/main/sensors/gyro.c **** #if defined(USE_GYRO_MPU6050) || defined(USE_GYRO_MPU3050) || defined(USE_GYRO_MPU6500) || defined(
 443:../cleanflight/src/main/sensors/gyro.c ****  || defined(USE_ACC_MPU6050) || defined(USE_GYRO_SPI_MPU9250) || defined(USE_GYRO_SPI_ICM20601) || 
 444:../cleanflight/src/main/sensors/gyro.c **** 
 445:../cleanflight/src/main/sensors/gyro.c ****     mpuDetect(&gyroSensor->gyroDev);
 587              	 .loc 3 445 0
 588 0020 7B68     	 ldr r3,[r7,#4]
 589 0022 1846     	 mov r0,r3
 590 0024 FFF7FEFF 	 bl mpuDetect
 446:../cleanflight/src/main/sensors/gyro.c ****     mpuResetFn = gyroSensor->gyroDev.mpuConfiguration.resetFn; // must be set after mpuDetect
 591              	 .loc 3 446 0
 592 0028 7B68     	 ldr r3,[r7,#4]
 593 002a D3F85530 	 ldr r3,[r3,#85]
 594 002e 4B4A     	 ldr r2,.L56
 595 0030 1360     	 str r3,[r2]
 447:../cleanflight/src/main/sensors/gyro.c **** #endif
 448:../cleanflight/src/main/sensors/gyro.c **** 
 449:../cleanflight/src/main/sensors/gyro.c ****     const gyroSensor_e gyroHardware = gyroDetect(&gyroSensor->gyroDev);
 596              	 .loc 3 449 0
 597 0032 7B68     	 ldr r3,[r7,#4]
 598 0034 1846     	 mov r0,r3
 599 0036 FFF7FEFF 	 bl gyroDetect
 600 003a 0346     	 mov r3,r0
 601 003c FB73     	 strb r3,[r7,#15]
 450:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->gyroDev.gyroHardware = gyroHardware;
 602              	 .loc 3 450 0
 603 003e 7B68     	 ldr r3,[r7,#4]
 604 0040 FA7B     	 ldrb r2,[r7,#15]
 605 0042 83F86420 	 strb r2,[r3,#100]
 451:../cleanflight/src/main/sensors/gyro.c ****     if (gyroHardware == GYRO_NONE) {
 606              	 .loc 3 451 0
 607 0046 FB7B     	 ldrb r3,[r7,#15]
 608 0048 002B     	 cmp r3,#0
 609 004a 01D1     	 bne .L44
 452:../cleanflight/src/main/sensors/gyro.c ****         return false;
 610              	 .loc 3 452 0
 611 004c 0023     	 movs r3,#0
 612 004e 80E0     	 b .L45
 613              	.L44:
 453:../cleanflight/src/main/sensors/gyro.c ****     }
 454:../cleanflight/src/main/sensors/gyro.c **** 
 455:../cleanflight/src/main/sensors/gyro.c ****     switch (gyroHardware) {
 614              	 .loc 3 455 0
 615 0050 FB7B     	 ldrb r3,[r7,#15]
 616 0052 072B     	 cmp r3,#7
 617 0054 03DB     	 blt .L46
 618 0056 0B2B     	 cmp r3,#11
 619 0058 07DD     	 ble .L55
 620 005a 0D2B     	 cmp r3,#13
 621 005c 05D0     	 beq .L55
 622              	.L46:
 456:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU6500:
 457:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU9250:
 458:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20601:
 459:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20602:
 460:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20608G:
 461:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20689:
 462:../cleanflight/src/main/sensors/gyro.c ****         // do nothing, as gyro supports 32kHz
 463:../cleanflight/src/main/sensors/gyro.c ****         break;
 464:../cleanflight/src/main/sensors/gyro.c ****     default:
 465:../cleanflight/src/main/sensors/gyro.c ****         // gyro does not support 32kHz
 466:../cleanflight/src/main/sensors/gyro.c ****         gyroConfigMutable()->gyro_use_32khz = false;
 623              	 .loc 3 466 0
 624 005e FFF7FEFF 	 bl gyroConfigMutable
 625 0062 0346     	 mov r3,r0
 626 0064 0022     	 movs r2,#0
 627 0066 9A71     	 strb r2,[r3,#6]
 467:../cleanflight/src/main/sensors/gyro.c ****         break;
 628              	 .loc 3 467 0
 629 0068 00E0     	 b .L48
 630              	.L55:
 463:../cleanflight/src/main/sensors/gyro.c ****     default:
 631              	 .loc 3 463 0
 632 006a 00BF     	 nop
 633              	.L48:
 468:../cleanflight/src/main/sensors/gyro.c ****     }
 469:../cleanflight/src/main/sensors/gyro.c **** 
 470:../cleanflight/src/main/sensors/gyro.c ****     // Must set gyro targetLooptime before gyroDev.init and initialisation of filters
 471:../cleanflight/src/main/sensors/gyro.c ****     gyro.targetLooptime = gyroSetSampleRate(&gyroSensor->gyroDev, gyroConfig()->gyro_hardware_lpf, 
 634              	 .loc 3 471 0
 635 006c 7E68     	 ldr r6,[r7,#4]
 636 006e FFF7FEFF 	 bl gyroConfig
 637 0072 0346     	 mov r3,r0
 638 0074 DD78     	 ldrb r5,[r3,#3]
 639 0076 FFF7FEFF 	 bl gyroConfig
 640 007a 0346     	 mov r3,r0
 641 007c 9C78     	 ldrb r4,[r3,#2]
 642 007e FFF7FEFF 	 bl gyroConfig
 643 0082 0346     	 mov r3,r0
 644 0084 9B79     	 ldrb r3,[r3,#6]
 645 0086 002B     	 cmp r3,#0
 646 0088 14BF     	 ite ne
 647 008a 0123     	 movne r3,#1
 648 008c 0023     	 moveq r3,#0
 649 008e DBB2     	 uxtb r3,r3
 650 0090 3046     	 mov r0,r6
 651 0092 2946     	 mov r1,r5
 652 0094 2246     	 mov r2,r4
 653 0096 FFF7FEFF 	 bl gyroSetSampleRate
 654 009a 0246     	 mov r2,r0
 655 009c 304B     	 ldr r3,.L56+4
 656 009e 1A60     	 str r2,[r3]
 472:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->gyroDev.hardware_lpf = gyroConfig()->gyro_hardware_lpf;
 657              	 .loc 3 472 0
 658 00a0 FFF7FEFF 	 bl gyroConfig
 659 00a4 0346     	 mov r3,r0
 660 00a6 DA78     	 ldrb r2,[r3,#3]
 661 00a8 7B68     	 ldr r3,[r7,#4]
 662 00aa 83F85F20 	 strb r2,[r3,#95]
 473:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->gyroDev.hardware_32khz_lpf = gyroConfig()->gyro_32khz_hardware_lpf;
 663              	 .loc 3 473 0
 664 00ae FFF7FEFF 	 bl gyroConfig
 665 00b2 0346     	 mov r3,r0
 666 00b4 1A79     	 ldrb r2,[r3,#4]
 667 00b6 7B68     	 ldr r3,[r7,#4]
 668 00b8 83F86020 	 strb r2,[r3,#96]
 474:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->gyroDev.initFn(&gyroSensor->gyroDev);
 669              	 .loc 3 474 0
 670 00bc 7B68     	 ldr r3,[r7,#4]
 671 00be 1B68     	 ldr r3,[r3]
 672 00c0 7A68     	 ldr r2,[r7,#4]
 673 00c2 1046     	 mov r0,r2
 674 00c4 9847     	 blx r3
 475:../cleanflight/src/main/sensors/gyro.c ****     if (gyroConfig()->gyro_align != ALIGN_DEFAULT) {
 675              	 .loc 3 475 0
 676 00c6 FFF7FEFF 	 bl gyroConfig
 677 00ca 0346     	 mov r3,r0
 678 00cc 1B78     	 ldrb r3,[r3]
 679 00ce 002B     	 cmp r3,#0
 680 00d0 06D0     	 beq .L49
 476:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroAlign = gyroConfig()->gyro_align;
 681              	 .loc 3 476 0
 682 00d2 FFF7FEFF 	 bl gyroConfig
 683 00d6 0346     	 mov r3,r0
 684 00d8 1A78     	 ldrb r2,[r3]
 685 00da 7B68     	 ldr r3,[r7,#4]
 686 00dc 83F85B20 	 strb r2,[r3,#91]
 687              	.L49:
 477:../cleanflight/src/main/sensors/gyro.c ****     }
 478:../cleanflight/src/main/sensors/gyro.c **** 
 479:../cleanflight/src/main/sensors/gyro.c ****     // As new gyros are supported, be sure to add them below based on whether they are subject to t
 480:../cleanflight/src/main/sensors/gyro.c ****     // Any gyro not explicitly defined will default to not having built-in overflow protection as a
 481:../cleanflight/src/main/sensors/gyro.c ****     switch (gyroHardware) {
 688              	 .loc 3 481 0
 689 00e0 FB7B     	 ldrb r3,[r7,#15]
 690 00e2 0F2B     	 cmp r3,#15
 691 00e4 2CD8     	 bhi .L50
 692 00e6 01A2     	 adr r2,.L52
 693 00e8 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 694              	 .p2align 2
 695              	.L52:
 696 00ec 2D010000 	 .word .L51+1
 697 00f0 2D010000 	 .word .L51+1
 698 00f4 2D010000 	 .word .L51+1
 699 00f8 2D010000 	 .word .L51+1
 700 00fc 2D010000 	 .word .L51+1
 701 0100 2D010000 	 .word .L51+1
 702 0104 2D010000 	 .word .L51+1
 703 0108 2D010000 	 .word .L51+1
 704 010c 2D010000 	 .word .L51+1
 705 0110 37010000 	 .word .L53+1
 706 0114 37010000 	 .word .L53+1
 707 0118 37010000 	 .word .L53+1
 708 011c 37010000 	 .word .L53+1
 709 0120 37010000 	 .word .L53+1
 710 0124 2D010000 	 .word .L51+1
 711 0128 2D010000 	 .word .L51+1
 712              	 .p2align 1
 713              	.L51:
 482:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_NONE:    // Won't ever actually get here, but included to account for all gyro types
 483:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_DEFAULT:
 484:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_FAKE:
 485:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU6050:
 486:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_L3G4200D:
 487:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU3050:
 488:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_L3GD20:
 489:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_BMI160:
 490:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU6000:
 491:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU6500:
 492:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_MPU9250:
 493:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroHasOverflowProtection = true;
 714              	 .loc 3 493 0
 715 012c 7B68     	 ldr r3,[r7,#4]
 716 012e 0122     	 movs r2,#1
 717 0130 83F86320 	 strb r2,[r3,#99]
 494:../cleanflight/src/main/sensors/gyro.c ****         break;
 718              	 .loc 3 494 0
 719 0134 09E0     	 b .L54
 720              	.L53:
 495:../cleanflight/src/main/sensors/gyro.c **** 
 496:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20601:
 497:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20602:
 498:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20608G:
 499:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20649:  // we don't actually know if this is affected, but as there are currently 
 500:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_ICM20689:
 501:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroHasOverflowProtection = false;
 721              	 .loc 3 501 0
 722 0136 7B68     	 ldr r3,[r7,#4]
 723 0138 0022     	 movs r2,#0
 724 013a 83F86320 	 strb r2,[r3,#99]
 502:../cleanflight/src/main/sensors/gyro.c ****         break;
 725              	 .loc 3 502 0
 726 013e 04E0     	 b .L54
 727              	.L50:
 503:../cleanflight/src/main/sensors/gyro.c **** 
 504:../cleanflight/src/main/sensors/gyro.c ****     default:
 505:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroHasOverflowProtection = false;  // default catch for newly added gy
 728              	 .loc 3 505 0
 729 0140 7B68     	 ldr r3,[r7,#4]
 730 0142 0022     	 movs r2,#0
 731 0144 83F86320 	 strb r2,[r3,#99]
 506:../cleanflight/src/main/sensors/gyro.c ****         break;
 732              	 .loc 3 506 0
 733 0148 00BF     	 nop
 734              	.L54:
 507:../cleanflight/src/main/sensors/gyro.c ****     }
 508:../cleanflight/src/main/sensors/gyro.c **** 
 509:../cleanflight/src/main/sensors/gyro.c ****     gyroInitSensorFilters(gyroSensor);
 735              	 .loc 3 509 0
 736 014a 7868     	 ldr r0,[r7,#4]
 737 014c FFF7FEFF 	 bl gyroInitSensorFilters
 510:../cleanflight/src/main/sensors/gyro.c **** 
 511:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_DATA_ANALYSE
 512:../cleanflight/src/main/sensors/gyro.c ****     gyroDataAnalyseStateInit(&gyroSensor->gyroAnalyseState, gyro.targetLooptime);
 513:../cleanflight/src/main/sensors/gyro.c **** #endif
 514:../cleanflight/src/main/sensors/gyro.c **** 
 515:../cleanflight/src/main/sensors/gyro.c ****     return true;
 738              	 .loc 3 515 0
 739 0150 0123     	 movs r3,#1
 740              	.L45:
 516:../cleanflight/src/main/sensors/gyro.c **** }
 741              	 .loc 3 516 0
 742 0152 1846     	 mov r0,r3
 743 0154 1437     	 adds r7,r7,#20
 744              	.LCFI40:
 745              	 .cfi_def_cfa_offset 20
 746 0156 BD46     	 mov sp,r7
 747              	.LCFI41:
 748              	 .cfi_def_cfa_register 13
 749              	 
 750 0158 F0BD     	 pop {r4,r5,r6,r7,pc}
 751              	.L57:
 752 015a 00BF     	 .align 2
 753              	.L56:
 754 015c 00000000 	 .word mpuResetFn
 755 0160 00000000 	 .word gyro
 756              	 .cfi_endproc
 757              	.LFE548:
 759              	 .section .text.gyroInit,"ax",%progbits
 760              	 .align 2
 761              	 .global gyroInit
 762              	 .thumb
 763              	 .thumb_func
 765              	gyroInit:
 766              	.LFB549:
 517:../cleanflight/src/main/sensors/gyro.c **** 
 518:../cleanflight/src/main/sensors/gyro.c **** bool gyroInit(void)
 519:../cleanflight/src/main/sensors/gyro.c **** {
 767              	 .loc 3 519 0
 768              	 .cfi_startproc
 769              	 
 770              	 
 771 0000 80B5     	 push {r7,lr}
 772              	.LCFI42:
 773              	 .cfi_def_cfa_offset 8
 774              	 .cfi_offset 7,-8
 775              	 .cfi_offset 14,-4
 776 0002 82B0     	 sub sp,sp,#8
 777              	.LCFI43:
 778              	 .cfi_def_cfa_offset 16
 779 0004 00AF     	 add r7,sp,#0
 780              	.LCFI44:
 781              	 .cfi_def_cfa_register 7
 520:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_OVERFLOW_CHECK
 521:../cleanflight/src/main/sensors/gyro.c ****     if (gyroConfig()->checkOverflow == GYRO_OVERFLOW_CHECK_YAW) {
 782              	 .loc 3 521 0
 783 0006 FFF7FEFF 	 bl gyroConfig
 784 000a 0346     	 mov r3,r0
 785 000c 9B7D     	 ldrb r3,[r3,#22]
 786 000e 012B     	 cmp r3,#1
 787 0010 03D1     	 bne .L59
 522:../cleanflight/src/main/sensors/gyro.c ****         overflowAxisMask = GYRO_OVERFLOW_Z;
 788              	 .loc 3 522 0
 789 0012 394B     	 ldr r3,.L69
 790 0014 0422     	 movs r2,#4
 791 0016 1A70     	 strb r2,[r3]
 792 0018 0CE0     	 b .L60
 793              	.L59:
 523:../cleanflight/src/main/sensors/gyro.c ****     } else if (gyroConfig()->checkOverflow == GYRO_OVERFLOW_CHECK_ALL_AXES) {
 794              	 .loc 3 523 0
 795 001a FFF7FEFF 	 bl gyroConfig
 796 001e 0346     	 mov r3,r0
 797 0020 9B7D     	 ldrb r3,[r3,#22]
 798 0022 022B     	 cmp r3,#2
 799 0024 03D1     	 bne .L61
 524:../cleanflight/src/main/sensors/gyro.c ****         overflowAxisMask = GYRO_OVERFLOW_X | GYRO_OVERFLOW_Y | GYRO_OVERFLOW_Z;
 800              	 .loc 3 524 0
 801 0026 344B     	 ldr r3,.L69
 802 0028 0722     	 movs r2,#7
 803 002a 1A70     	 strb r2,[r3]
 804 002c 02E0     	 b .L60
 805              	.L61:
 525:../cleanflight/src/main/sensors/gyro.c ****     } else {
 526:../cleanflight/src/main/sensors/gyro.c ****         overflowAxisMask = 0;
 806              	 .loc 3 526 0
 807 002e 324B     	 ldr r3,.L69
 808 0030 0022     	 movs r2,#0
 809 0032 1A70     	 strb r2,[r3]
 810              	.L60:
 527:../cleanflight/src/main/sensors/gyro.c ****     }
 528:../cleanflight/src/main/sensors/gyro.c **** #endif
 529:../cleanflight/src/main/sensors/gyro.c **** 
 530:../cleanflight/src/main/sensors/gyro.c ****     switch (debugMode) {
 811              	 .loc 3 530 0
 812 0034 314B     	 ldr r3,.L69+4
 813 0036 1B78     	 ldrb r3,[r3]
 814 0038 033B     	 subs r3,r3,#3
 815 003a 102B     	 cmp r3,#16
 816 003c 29D8     	 bhi .L62
 817 003e 01A2     	 adr r2,.L64
 818 0040 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 819              	 .p2align 2
 820              	.L64:
 821 0044 89000000 	 .word .L63+1
 822 0048 93000000 	 .word .L62+1
 823 004c 93000000 	 .word .L62+1
 824 0050 89000000 	 .word .L63+1
 825 0054 93000000 	 .word .L62+1
 826 0058 93000000 	 .word .L62+1
 827 005c 93000000 	 .word .L62+1
 828 0060 93000000 	 .word .L62+1
 829 0064 93000000 	 .word .L62+1
 830 0068 93000000 	 .word .L62+1
 831 006c 93000000 	 .word .L62+1
 832 0070 93000000 	 .word .L62+1
 833 0074 89000000 	 .word .L63+1
 834 0078 93000000 	 .word .L62+1
 835 007c 89000000 	 .word .L63+1
 836 0080 93000000 	 .word .L62+1
 837 0084 89000000 	 .word .L63+1
 838              	 .p2align 1
 839              	.L63:
 531:../cleanflight/src/main/sensors/gyro.c ****     case DEBUG_FFT:
 532:../cleanflight/src/main/sensors/gyro.c ****     case DEBUG_FFT_FREQ:
 533:../cleanflight/src/main/sensors/gyro.c ****     case DEBUG_GYRO_RAW:
 534:../cleanflight/src/main/sensors/gyro.c ****     case DEBUG_GYRO_SCALED:
 535:../cleanflight/src/main/sensors/gyro.c ****     case DEBUG_GYRO_FILTERED:
 536:../cleanflight/src/main/sensors/gyro.c ****         gyroDebugMode = debugMode;
 840              	 .loc 3 536 0
 841 0088 1C4B     	 ldr r3,.L69+4
 842 008a 1A78     	 ldrb r2,[r3]
 843 008c 1C4B     	 ldr r3,.L69+8
 844 008e 1A70     	 strb r2,[r3]
 537:../cleanflight/src/main/sensors/gyro.c ****         break;
 845              	 .loc 3 537 0
 846 0090 03E0     	 b .L65
 847              	.L62:
 538:../cleanflight/src/main/sensors/gyro.c ****     default:
 539:../cleanflight/src/main/sensors/gyro.c ****         // debugMode is not gyro-related
 540:../cleanflight/src/main/sensors/gyro.c ****         gyroDebugMode = DEBUG_NONE;
 848              	 .loc 3 540 0
 849 0092 1B4B     	 ldr r3,.L69+8
 850 0094 0022     	 movs r2,#0
 851 0096 1A70     	 strb r2,[r3]
 541:../cleanflight/src/main/sensors/gyro.c ****         break;
 852              	 .loc 3 541 0
 853 0098 00BF     	 nop
 854              	.L65:
 542:../cleanflight/src/main/sensors/gyro.c ****     }
 543:../cleanflight/src/main/sensors/gyro.c ****     firstArmingCalibrationWasStarted = false;
 855              	 .loc 3 543 0
 856 009a 1A4B     	 ldr r3,.L69+12
 857 009c 0022     	 movs r2,#0
 858 009e 1A70     	 strb r2,[r3]
 544:../cleanflight/src/main/sensors/gyro.c **** 
 545:../cleanflight/src/main/sensors/gyro.c ****     bool ret = false;
 859              	 .loc 3 545 0
 860 00a0 0023     	 movs r3,#0
 861 00a2 FB71     	 strb r3,[r7,#7]
 546:../cleanflight/src/main/sensors/gyro.c ****     gyroToUse = gyroConfig()->gyro_to_use;
 862              	 .loc 3 546 0
 863 00a4 FFF7FEFF 	 bl gyroConfig
 864 00a8 0346     	 mov r3,r0
 865 00aa DA79     	 ldrb r2,[r3,#7]
 866 00ac 164B     	 ldr r3,.L69+16
 867 00ae 1A70     	 strb r2,[r3]
 547:../cleanflight/src/main/sensors/gyro.c **** 
 548:../cleanflight/src/main/sensors/gyro.c **** #if defined(USE_DUAL_GYRO) && defined(GYRO_1_CS_PIN)
 549:../cleanflight/src/main/sensors/gyro.c ****     if (gyroToUse == GYRO_CONFIG_USE_GYRO_1 || gyroToUse == GYRO_CONFIG_USE_GYRO_BOTH) {
 550:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor1.gyroDev.bus.busdev_u.spi.csnPin = IOGetByTag(IO_TAG(GYRO_1_CS_PIN));
 551:../cleanflight/src/main/sensors/gyro.c ****         IOInit(gyroSensor1.gyroDev.bus.busdev_u.spi.csnPin, OWNER_MPU_CS, RESOURCE_INDEX(0));
 552:../cleanflight/src/main/sensors/gyro.c ****         IOHi(gyroSensor1.gyroDev.bus.busdev_u.spi.csnPin); // Ensure device is disabled, important 
 553:../cleanflight/src/main/sensors/gyro.c ****         IOConfigGPIO(gyroSensor1.gyroDev.bus.busdev_u.spi.csnPin, SPI_IO_CS_CFG);
 554:../cleanflight/src/main/sensors/gyro.c ****     }
 555:../cleanflight/src/main/sensors/gyro.c **** #endif
 556:../cleanflight/src/main/sensors/gyro.c **** 
 557:../cleanflight/src/main/sensors/gyro.c **** #if defined(USE_DUAL_GYRO) && defined(GYRO_2_CS_PIN)
 558:../cleanflight/src/main/sensors/gyro.c ****     if (gyroToUse == GYRO_CONFIG_USE_GYRO_2 || gyroToUse == GYRO_CONFIG_USE_GYRO_BOTH) {
 559:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor2.gyroDev.bus.busdev_u.spi.csnPin = IOGetByTag(IO_TAG(GYRO_2_CS_PIN));
 560:../cleanflight/src/main/sensors/gyro.c ****         IOInit(gyroSensor2.gyroDev.bus.busdev_u.spi.csnPin, OWNER_MPU_CS, RESOURCE_INDEX(1));
 561:../cleanflight/src/main/sensors/gyro.c ****         IOHi(gyroSensor2.gyroDev.bus.busdev_u.spi.csnPin); // Ensure device is disabled, important 
 562:../cleanflight/src/main/sensors/gyro.c ****         IOConfigGPIO(gyroSensor2.gyroDev.bus.busdev_u.spi.csnPin, SPI_IO_CS_CFG);
 563:../cleanflight/src/main/sensors/gyro.c ****     }
 564:../cleanflight/src/main/sensors/gyro.c **** #endif
 565:../cleanflight/src/main/sensors/gyro.c **** 
 566:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor1.gyroDev.gyroAlign = ALIGN_DEFAULT;
 868              	 .loc 3 566 0
 869 00b0 164B     	 ldr r3,.L69+20
 870 00b2 0022     	 movs r2,#0
 871 00b4 83F85B20 	 strb r2,[r3,#91]
 567:../cleanflight/src/main/sensors/gyro.c **** 
 568:../cleanflight/src/main/sensors/gyro.c **** #if defined(GYRO_1_EXTI_PIN)
 569:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor1.gyroDev.mpuIntExtiTag =  IO_TAG(GYRO_1_EXTI_PIN);
 570:../cleanflight/src/main/sensors/gyro.c **** #elif defined(MPU_INT_EXTI)
 571:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor1.gyroDev.mpuIntExtiTag =  IO_TAG(MPU_INT_EXTI);
 572:../cleanflight/src/main/sensors/gyro.c **** #elif defined(USE_HARDWARE_REVISION_DETECTION)
 573:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor1.gyroDev.mpuIntExtiTag =  selectMPUIntExtiConfigByHardwareRevision();
 574:../cleanflight/src/main/sensors/gyro.c **** #else
 575:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor1.gyroDev.mpuIntExtiTag =  IO_TAG_NONE;
 872              	 .loc 3 575 0
 873 00b8 144B     	 ldr r3,.L69+20
 874 00ba 0022     	 movs r2,#0
 875 00bc 83F86220 	 strb r2,[r3,#98]
 576:../cleanflight/src/main/sensors/gyro.c **** #endif // GYRO_1_EXTI_PIN
 577:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 578:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_1_ALIGN
 579:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor1.gyroDev.gyroAlign = GYRO_1_ALIGN;
 580:../cleanflight/src/main/sensors/gyro.c **** #endif
 581:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor1.gyroDev.bus.bustype = BUSTYPE_SPI;
 582:../cleanflight/src/main/sensors/gyro.c ****     spiBusSetInstance(&gyroSensor1.gyroDev.bus, GYRO_1_SPI_INSTANCE);
 583:../cleanflight/src/main/sensors/gyro.c ****     if (gyroToUse == GYRO_CONFIG_USE_GYRO_1 || gyroToUse == GYRO_CONFIG_USE_GYRO_BOTH) {
 584:../cleanflight/src/main/sensors/gyro.c ****         ret = gyroInitSensor(&gyroSensor1);
 585:../cleanflight/src/main/sensors/gyro.c ****         if (!ret) {
 586:../cleanflight/src/main/sensors/gyro.c ****             return false; // TODO handle failure of first gyro detection better. - Perhaps update t
 587:../cleanflight/src/main/sensors/gyro.c ****         }
 588:../cleanflight/src/main/sensors/gyro.c ****         gyroHasOverflowProtection =  gyroHasOverflowProtection && gyroSensor1.gyroDev.gyroHasOverfl
 589:../cleanflight/src/main/sensors/gyro.c ****     }
 590:../cleanflight/src/main/sensors/gyro.c **** #else // USE_DUAL_GYRO
 591:../cleanflight/src/main/sensors/gyro.c ****     ret = gyroInitSensor(&gyroSensor1);
 876              	 .loc 3 591 0
 877 00c0 1248     	 ldr r0,.L69+20
 878 00c2 FFF7FEFF 	 bl gyroInitSensor
 879 00c6 0346     	 mov r3,r0
 880 00c8 FB71     	 strb r3,[r7,#7]
 592:../cleanflight/src/main/sensors/gyro.c ****     gyroHasOverflowProtection =  gyroHasOverflowProtection && gyroSensor1.gyroDev.gyroHasOverflowPr
 881              	 .loc 3 592 0
 882 00ca 114B     	 ldr r3,.L69+24
 883 00cc 1B78     	 ldrb r3,[r3]
 884 00ce 002B     	 cmp r3,#0
 885 00d0 06D0     	 beq .L66
 886              	 .loc 3 592 0 is_stmt 0 discriminator 1
 887 00d2 0E4B     	 ldr r3,.L69+20
 888 00d4 93F86330 	 ldrb r3,[r3,#99]
 889 00d8 002B     	 cmp r3,#0
 890 00da 01D0     	 beq .L66
 891              	 .loc 3 592 0 discriminator 3
 892 00dc 0123     	 movs r3,#1
 893 00de 00E0     	 b .L67
 894              	.L66:
 895              	 .loc 3 592 0 discriminator 4
 896 00e0 0023     	 movs r3,#0
 897              	.L67:
 898              	 .loc 3 592 0 discriminator 6
 899 00e2 03F00103 	 and r3,r3,#1
 900 00e6 DAB2     	 uxtb r2,r3
 901 00e8 094B     	 ldr r3,.L69+24
 902 00ea 1A70     	 strb r2,[r3]
 593:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_DUAL_GYRO
 594:../cleanflight/src/main/sensors/gyro.c **** 
 595:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 596:../cleanflight/src/main/sensors/gyro.c **** 
 597:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor2.gyroDev.gyroAlign = ALIGN_DEFAULT;
 598:../cleanflight/src/main/sensors/gyro.c **** 
 599:../cleanflight/src/main/sensors/gyro.c **** #if defined(GYRO_2_EXTI_PIN)
 600:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor2.gyroDev.mpuIntExtiTag =  IO_TAG(GYRO_2_EXTI_PIN);
 601:../cleanflight/src/main/sensors/gyro.c **** #elif defined(USE_HARDWARE_REVISION_DETECTION)
 602:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor2.gyroDev.mpuIntExtiTag =  selectMPUIntExtiConfigByHardwareRevision();
 603:../cleanflight/src/main/sensors/gyro.c **** #else
 604:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor2.gyroDev.mpuIntExtiTag =  IO_TAG_NONE;
 605:../cleanflight/src/main/sensors/gyro.c **** #endif // GYRO_2_EXTI_PIN
 606:../cleanflight/src/main/sensors/gyro.c **** #ifdef GYRO_2_ALIGN
 607:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor2.gyroDev.gyroAlign = GYRO_2_ALIGN;
 608:../cleanflight/src/main/sensors/gyro.c **** #endif
 609:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor2.gyroDev.bus.bustype = BUSTYPE_SPI;
 610:../cleanflight/src/main/sensors/gyro.c ****     spiBusSetInstance(&gyroSensor2.gyroDev.bus, GYRO_2_SPI_INSTANCE);
 611:../cleanflight/src/main/sensors/gyro.c ****     if (gyroToUse == GYRO_CONFIG_USE_GYRO_2 || gyroToUse == GYRO_CONFIG_USE_GYRO_BOTH) {
 612:../cleanflight/src/main/sensors/gyro.c ****         ret = gyroInitSensor(&gyroSensor2);
 613:../cleanflight/src/main/sensors/gyro.c ****         if (!ret) {
 614:../cleanflight/src/main/sensors/gyro.c ****             return false; // TODO handle failure of second gyro detection better. - Perhaps update 
 615:../cleanflight/src/main/sensors/gyro.c ****         }
 616:../cleanflight/src/main/sensors/gyro.c ****         gyroHasOverflowProtection =  gyroHasOverflowProtection && gyroSensor2.gyroDev.gyroHasOverfl
 617:../cleanflight/src/main/sensors/gyro.c ****     }
 618:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_DUAL_GYRO
 619:../cleanflight/src/main/sensors/gyro.c **** 
 620:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 621:../cleanflight/src/main/sensors/gyro.c ****     // Only allow using both gyros simultaneously if they are the same hardware type.
 622:../cleanflight/src/main/sensors/gyro.c ****     // If the user selected "BOTH" and they are not the same type, then reset to using only the fir
 623:../cleanflight/src/main/sensors/gyro.c ****     if (gyroToUse == GYRO_CONFIG_USE_GYRO_BOTH) {
 624:../cleanflight/src/main/sensors/gyro.c ****         if (gyroSensor1.gyroDev.gyroHardware != gyroSensor2.gyroDev.gyroHardware) {
 625:../cleanflight/src/main/sensors/gyro.c ****             gyroToUse = GYRO_CONFIG_USE_GYRO_1;
 626:../cleanflight/src/main/sensors/gyro.c ****             gyroConfigMutable()->gyro_to_use = GYRO_CONFIG_USE_GYRO_1;
 627:../cleanflight/src/main/sensors/gyro.c ****             detectedSensors[SENSOR_INDEX_GYRO] = gyroSensor1.gyroDev.gyroHardware;
 628:../cleanflight/src/main/sensors/gyro.c ****             sensorsSet(SENSOR_GYRO);
 629:../cleanflight/src/main/sensors/gyro.c **** 
 630:../cleanflight/src/main/sensors/gyro.c ****         }
 631:../cleanflight/src/main/sensors/gyro.c ****     }
 632:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_DUAL_GYRO
 633:../cleanflight/src/main/sensors/gyro.c ****     return ret;
 903              	 .loc 3 633 0 is_stmt 1 discriminator 6
 904 00ec FB79     	 ldrb r3,[r7,#7]
 634:../cleanflight/src/main/sensors/gyro.c **** }
 905              	 .loc 3 634 0 discriminator 6
 906 00ee 1846     	 mov r0,r3
 907 00f0 0837     	 adds r7,r7,#8
 908              	.LCFI45:
 909              	 .cfi_def_cfa_offset 8
 910 00f2 BD46     	 mov sp,r7
 911              	.LCFI46:
 912              	 .cfi_def_cfa_register 13
 913              	 
 914 00f4 80BD     	 pop {r7,pc}
 915              	.L70:
 916 00f6 00BF     	 .align 2
 917              	.L69:
 918 00f8 00000000 	 .word overflowAxisMask
 919 00fc 00000000 	 .word debugMode
 920 0100 00000000 	 .word gyroDebugMode
 921 0104 00000000 	 .word firstArmingCalibrationWasStarted
 922 0108 00000000 	 .word gyroToUse
 923 010c 00000000 	 .word gyroSensor1
 924 0110 00000000 	 .word gyroHasOverflowProtection
 925              	 .cfi_endproc
 926              	.LFE549:
 928              	 .section .text.gyroInitLowpassFilterLpf,"ax",%progbits
 929              	 .align 2
 930              	 .thumb
 931              	 .thumb_func
 933              	gyroInitLowpassFilterLpf:
 934              	.LFB550:
 635:../cleanflight/src/main/sensors/gyro.c **** 
 636:../cleanflight/src/main/sensors/gyro.c **** void gyroInitLowpassFilterLpf(gyroSensor_t *gyroSensor, int slot, int type, uint16_t lpfHz)
 637:../cleanflight/src/main/sensors/gyro.c **** {
 935              	 .loc 3 637 0
 936              	 .cfi_startproc
 937              	 
 938              	 
 939 0000 80B5     	 push {r7,lr}
 940              	.LCFI47:
 941              	 .cfi_def_cfa_offset 8
 942              	 .cfi_offset 7,-8
 943              	 .cfi_offset 14,-4
 944 0002 8CB0     	 sub sp,sp,#48
 945              	.LCFI48:
 946              	 .cfi_def_cfa_offset 56
 947 0004 00AF     	 add r7,sp,#0
 948              	.LCFI49:
 949              	 .cfi_def_cfa_register 7
 950 0006 F860     	 str r0,[r7,#12]
 951 0008 B960     	 str r1,[r7,#8]
 952 000a 7A60     	 str r2,[r7,#4]
 953 000c 7B80     	 strh r3,[r7,#2]
 638:../cleanflight/src/main/sensors/gyro.c ****     filterApplyFnPtr *lowpassFilterApplyFn;
 639:../cleanflight/src/main/sensors/gyro.c ****     gyroLowpassFilter_t *lowpassFilter = NULL;
 954              	 .loc 3 639 0
 955 000e 0023     	 movs r3,#0
 956 0010 BB62     	 str r3,[r7,#40]
 640:../cleanflight/src/main/sensors/gyro.c **** 
 641:../cleanflight/src/main/sensors/gyro.c ****     switch (slot) {
 957              	 .loc 3 641 0
 958 0012 BB68     	 ldr r3,[r7,#8]
 959 0014 002B     	 cmp r3,#0
 960 0016 02D0     	 beq .L73
 961 0018 012B     	 cmp r3,#1
 962 001a 07D0     	 beq .L74
 642:../cleanflight/src/main/sensors/gyro.c ****     case FILTER_LOWPASS:
 643:../cleanflight/src/main/sensors/gyro.c ****         lowpassFilterApplyFn = &gyroSensor->lowpassFilterApplyFn;
 644:../cleanflight/src/main/sensors/gyro.c ****         lowpassFilter = gyroSensor->lowpassFilter;
 645:../cleanflight/src/main/sensors/gyro.c ****         break;
 646:../cleanflight/src/main/sensors/gyro.c **** 
 647:../cleanflight/src/main/sensors/gyro.c ****     case FILTER_LOWPASS2:
 648:../cleanflight/src/main/sensors/gyro.c ****         lowpassFilterApplyFn = &gyroSensor->lowpass2FilterApplyFn;
 649:../cleanflight/src/main/sensors/gyro.c ****         lowpassFilter = gyroSensor->lowpass2Filter;
 650:../cleanflight/src/main/sensors/gyro.c ****         break;
 651:../cleanflight/src/main/sensors/gyro.c **** 
 652:../cleanflight/src/main/sensors/gyro.c ****     default:
 653:../cleanflight/src/main/sensors/gyro.c ****         return;
 963              	 .loc 3 653 0
 964 001c 73E0     	 b .L71
 965              	.L73:
 643:../cleanflight/src/main/sensors/gyro.c ****         lowpassFilter = gyroSensor->lowpassFilter;
 966              	 .loc 3 643 0
 967 001e FB68     	 ldr r3,[r7,#12]
 968 0020 B133     	 adds r3,r3,#177
 969 0022 FB62     	 str r3,[r7,#44]
 644:../cleanflight/src/main/sensors/gyro.c ****         break;
 970              	 .loc 3 644 0
 971 0024 FB68     	 ldr r3,[r7,#12]
 972 0026 B533     	 adds r3,r3,#181
 973 0028 BB62     	 str r3,[r7,#40]
 645:../cleanflight/src/main/sensors/gyro.c **** 
 974              	 .loc 3 645 0
 975 002a 08E0     	 b .L75
 976              	.L74:
 648:../cleanflight/src/main/sensors/gyro.c ****         lowpassFilter = gyroSensor->lowpass2Filter;
 977              	 .loc 3 648 0
 978 002c FB68     	 ldr r3,[r7,#12]
 979 002e 03F22113 	 addw r3,r3,#289
 980 0032 FB62     	 str r3,[r7,#44]
 649:../cleanflight/src/main/sensors/gyro.c ****         break;
 981              	 .loc 3 649 0
 982 0034 FB68     	 ldr r3,[r7,#12]
 983 0036 03F22513 	 addw r3,r3,#293
 984 003a BB62     	 str r3,[r7,#40]
 650:../cleanflight/src/main/sensors/gyro.c **** 
 985              	 .loc 3 650 0
 986 003c 00BF     	 nop
 987              	.L75:
 654:../cleanflight/src/main/sensors/gyro.c ****     }
 655:../cleanflight/src/main/sensors/gyro.c **** 
 656:../cleanflight/src/main/sensors/gyro.c ****     // Establish some common constants
 657:../cleanflight/src/main/sensors/gyro.c ****     const uint32_t gyroFrequencyNyquist = 1000000 / 2 / gyro.targetLooptime;
 988              	 .loc 3 657 0
 989 003e 334B     	 ldr r3,.L83
 990 0040 1B68     	 ldr r3,[r3]
 991 0042 334A     	 ldr r2,.L83+4
 992 0044 B2FBF3F3 	 udiv r3,r2,r3
 993 0048 FB61     	 str r3,[r7,#28]
 658:../cleanflight/src/main/sensors/gyro.c ****     const float gyroDt = gyro.targetLooptime * 1e-6f;
 994              	 .loc 3 658 0
 995 004a 304B     	 ldr r3,.L83
 996 004c 1B68     	 ldr r3,[r3]
 997 004e 07EE903A 	 fmsr s15,r3
 998 0052 F8EE677A 	 fuitos s15,s15
 999 0056 9FED2F7A 	 flds s14,.L83+8
 1000 005a 67EE877A 	 fmuls s15,s15,s14
 1001 005e C7ED067A 	 fsts s15,[r7,#24]
 659:../cleanflight/src/main/sensors/gyro.c **** 
 660:../cleanflight/src/main/sensors/gyro.c ****     // Gain could be calculated a little later as it is specific to the pt1/bqrcf2/fkf branches
 661:../cleanflight/src/main/sensors/gyro.c ****     const float gain = pt1FilterGain(lpfHz, gyroDt);
 1002              	 .loc 3 661 0
 1003 0062 7B88     	 ldrh r3,[r7,#2]
 1004 0064 1846     	 mov r0,r3
 1005 0066 B969     	 ldr r1,[r7,#24]
 1006 0068 FFF7FEFF 	 bl pt1FilterGain
 1007 006c 7861     	 str r0,[r7,#20]
 662:../cleanflight/src/main/sensors/gyro.c **** 
 663:../cleanflight/src/main/sensors/gyro.c ****     // Dereference the pointer to null before checking valid cutoff and filter
 664:../cleanflight/src/main/sensors/gyro.c ****     // type. It will be overridden for positive cases.
 665:../cleanflight/src/main/sensors/gyro.c ****     *lowpassFilterApplyFn = &nullFilterApply;
 1008              	 .loc 3 665 0
 1009 006e FB6A     	 ldr r3,[r7,#44]
 1010 0070 294A     	 ldr r2,.L83+12
 1011 0072 1A60     	 str r2,[r3]
 666:../cleanflight/src/main/sensors/gyro.c **** 
 667:../cleanflight/src/main/sensors/gyro.c ****     // If lowpass cutoff has been specified and is less than the Nyquist frequency
 668:../cleanflight/src/main/sensors/gyro.c ****     if (lpfHz && lpfHz <= gyroFrequencyNyquist) {
 1012              	 .loc 3 668 0
 1013 0074 7B88     	 ldrh r3,[r7,#2]
 1014 0076 002B     	 cmp r3,#0
 1015 0078 45D0     	 beq .L71
 1016              	 .loc 3 668 0 is_stmt 0 discriminator 1
 1017 007a 7A88     	 ldrh r2,[r7,#2]
 1018 007c FB69     	 ldr r3,[r7,#28]
 1019 007e 9A42     	 cmp r2,r3
 1020 0080 41D8     	 bhi .L71
 669:../cleanflight/src/main/sensors/gyro.c ****         switch (type) {
 1021              	 .loc 3 669 0 is_stmt 1
 1022 0082 7B68     	 ldr r3,[r7,#4]
 1023 0084 002B     	 cmp r3,#0
 1024 0086 02D0     	 beq .L77
 1025 0088 012B     	 cmp r3,#1
 1026 008a 19D0     	 beq .L78
 1027 008c 3BE0     	 b .L71
 1028              	.L77:
 670:../cleanflight/src/main/sensors/gyro.c ****         case FILTER_PT1:
 671:../cleanflight/src/main/sensors/gyro.c ****             *lowpassFilterApplyFn = (filterApplyFnPtr) pt1FilterApply;
 1029              	 .loc 3 671 0
 1030 008e FB6A     	 ldr r3,[r7,#44]
 1031 0090 224A     	 ldr r2,.L83+16
 1032 0092 1A60     	 str r2,[r3]
 1033              	.LBB2:
 672:../cleanflight/src/main/sensors/gyro.c ****             for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1034              	 .loc 3 672 0
 1035 0094 0023     	 movs r3,#0
 1036 0096 7B62     	 str r3,[r7,#36]
 1037 0098 0EE0     	 b .L79
 1038              	.L80:
 673:../cleanflight/src/main/sensors/gyro.c ****                 pt1FilterInit(&lowpassFilter[axis].pt1FilterState, gain);
 1039              	 .loc 3 673 0 discriminator 3
 1040 009a 7A6A     	 ldr r2,[r7,#36]
 1041 009c 1346     	 mov r3,r2
 1042 009e DB00     	 lsls r3,r3,#3
 1043 00a0 1344     	 add r3,r3,r2
 1044 00a2 9B00     	 lsls r3,r3,#2
 1045 00a4 1A46     	 mov r2,r3
 1046 00a6 BB6A     	 ldr r3,[r7,#40]
 1047 00a8 1344     	 add r3,r3,r2
 1048 00aa 1846     	 mov r0,r3
 1049 00ac 7969     	 ldr r1,[r7,#20]
 1050 00ae FFF7FEFF 	 bl pt1FilterInit
 672:../cleanflight/src/main/sensors/gyro.c ****             for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1051              	 .loc 3 672 0 discriminator 3
 1052 00b2 7B6A     	 ldr r3,[r7,#36]
 1053 00b4 0133     	 adds r3,r3,#1
 1054 00b6 7B62     	 str r3,[r7,#36]
 1055              	.L79:
 672:../cleanflight/src/main/sensors/gyro.c ****             for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1056              	 .loc 3 672 0 is_stmt 0 discriminator 1
 1057 00b8 7B6A     	 ldr r3,[r7,#36]
 1058 00ba 022B     	 cmp r3,#2
 1059 00bc EDDD     	 ble .L80
 1060              	.LBE2:
 674:../cleanflight/src/main/sensors/gyro.c ****             }
 675:../cleanflight/src/main/sensors/gyro.c ****             break;
 1061              	 .loc 3 675 0 is_stmt 1
 1062 00be 22E0     	 b .L71
 1063              	.L78:
 676:../cleanflight/src/main/sensors/gyro.c ****         case FILTER_BIQUAD:
 677:../cleanflight/src/main/sensors/gyro.c ****             *lowpassFilterApplyFn = (filterApplyFnPtr) biquadFilterApply;
 1064              	 .loc 3 677 0
 1065 00c0 FB6A     	 ldr r3,[r7,#44]
 1066 00c2 174A     	 ldr r2,.L83+20
 1067 00c4 1A60     	 str r2,[r3]
 1068              	.LBB3:
 678:../cleanflight/src/main/sensors/gyro.c ****             for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1069              	 .loc 3 678 0
 1070 00c6 0023     	 movs r3,#0
 1071 00c8 3B62     	 str r3,[r7,#32]
 1072 00ca 18E0     	 b .L81
 1073              	.L82:
 679:../cleanflight/src/main/sensors/gyro.c ****                 biquadFilterInitLPF(&lowpassFilter[axis].biquadFilterState, lpfHz, gyro.targetLoopt
 1074              	 .loc 3 679 0 discriminator 3
 1075 00cc 3A6A     	 ldr r2,[r7,#32]
 1076 00ce 1346     	 mov r3,r2
 1077 00d0 DB00     	 lsls r3,r3,#3
 1078 00d2 1344     	 add r3,r3,r2
 1079 00d4 9B00     	 lsls r3,r3,#2
 1080 00d6 1A46     	 mov r2,r3
 1081 00d8 BB6A     	 ldr r3,[r7,#40]
 1082 00da 1344     	 add r3,r3,r2
 1083 00dc 1A46     	 mov r2,r3
 1084 00de 7B88     	 ldrh r3,[r7,#2]
 1085 00e0 07EE903A 	 fmsr s15,r3
 1086 00e4 F8EE677A 	 fuitos s15,s15
 1087 00e8 084B     	 ldr r3,.L83
 1088 00ea 1B68     	 ldr r3,[r3]
 1089 00ec 1046     	 mov r0,r2
 1090 00ee 17EE901A 	 fmrs r1,s15
 1091 00f2 1A46     	 mov r2,r3
 1092 00f4 FFF7FEFF 	 bl biquadFilterInitLPF
 678:../cleanflight/src/main/sensors/gyro.c ****             for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1093              	 .loc 3 678 0 discriminator 3
 1094 00f8 3B6A     	 ldr r3,[r7,#32]
 1095 00fa 0133     	 adds r3,r3,#1
 1096 00fc 3B62     	 str r3,[r7,#32]
 1097              	.L81:
 678:../cleanflight/src/main/sensors/gyro.c ****             for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1098              	 .loc 3 678 0 is_stmt 0 discriminator 1
 1099 00fe 3B6A     	 ldr r3,[r7,#32]
 1100 0100 022B     	 cmp r3,#2
 1101 0102 E3DD     	 ble .L82
 1102              	.LBE3:
 680:../cleanflight/src/main/sensors/gyro.c ****             }
 681:../cleanflight/src/main/sensors/gyro.c ****             break;
 1103              	 .loc 3 681 0 is_stmt 1
 1104 0104 00BF     	 nop
 1105              	.L71:
 682:../cleanflight/src/main/sensors/gyro.c ****         }
 683:../cleanflight/src/main/sensors/gyro.c ****     }
 684:../cleanflight/src/main/sensors/gyro.c **** }
 1106              	 .loc 3 684 0
 1107 0106 3037     	 adds r7,r7,#48
 1108              	.LCFI50:
 1109              	 .cfi_def_cfa_offset 8
 1110 0108 BD46     	 mov sp,r7
 1111              	.LCFI51:
 1112              	 .cfi_def_cfa_register 13
 1113              	 
 1114 010a 80BD     	 pop {r7,pc}
 1115              	.L84:
 1116              	 .align 2
 1117              	.L83:
 1118 010c 00000000 	 .word gyro
 1119 0110 20A10700 	 .word 500000
 1120 0114 BD378635 	 .word 897988541
 1121 0118 00000000 	 .word nullFilterApply
 1122 011c 00000000 	 .word pt1FilterApply
 1123 0120 00000000 	 .word biquadFilterApply
 1124              	 .cfi_endproc
 1125              	.LFE550:
 1127              	 .section .text.calculateNyquistAdjustedNotchHz,"ax",%progbits
 1128              	 .align 2
 1129              	 .thumb
 1130              	 .thumb_func
 1132              	calculateNyquistAdjustedNotchHz:
 1133              	.LFB551:
 685:../cleanflight/src/main/sensors/gyro.c **** 
 686:../cleanflight/src/main/sensors/gyro.c **** static uint16_t calculateNyquistAdjustedNotchHz(uint16_t notchHz, uint16_t notchCutoffHz)
 687:../cleanflight/src/main/sensors/gyro.c **** {
 1134              	 .loc 3 687 0
 1135              	 .cfi_startproc
 1136              	 
 1137              	 
 1138              	 
 1139 0000 80B4     	 push {r7}
 1140              	.LCFI52:
 1141              	 .cfi_def_cfa_offset 4
 1142              	 .cfi_offset 7,-4
 1143 0002 85B0     	 sub sp,sp,#20
 1144              	.LCFI53:
 1145              	 .cfi_def_cfa_offset 24
 1146 0004 00AF     	 add r7,sp,#0
 1147              	.LCFI54:
 1148              	 .cfi_def_cfa_register 7
 1149 0006 0346     	 mov r3,r0
 1150 0008 0A46     	 mov r2,r1
 1151 000a FB80     	 strh r3,[r7,#6]
 1152 000c 1346     	 mov r3,r2
 1153 000e BB80     	 strh r3,[r7,#4]
 688:../cleanflight/src/main/sensors/gyro.c ****     const uint32_t gyroFrequencyNyquist = 1000000 / 2 / gyro.targetLooptime;
 1154              	 .loc 3 688 0
 1155 0010 0C4B     	 ldr r3,.L89
 1156 0012 1B68     	 ldr r3,[r3]
 1157 0014 0C4A     	 ldr r2,.L89+4
 1158 0016 B2FBF3F3 	 udiv r3,r2,r3
 1159 001a FB60     	 str r3,[r7,#12]
 689:../cleanflight/src/main/sensors/gyro.c ****     if (notchHz > gyroFrequencyNyquist) {
 1160              	 .loc 3 689 0
 1161 001c FA88     	 ldrh r2,[r7,#6]
 1162 001e FB68     	 ldr r3,[r7,#12]
 1163 0020 9A42     	 cmp r2,r3
 1164 0022 08D9     	 bls .L86
 690:../cleanflight/src/main/sensors/gyro.c ****         if (notchCutoffHz < gyroFrequencyNyquist) {
 1165              	 .loc 3 690 0
 1166 0024 BA88     	 ldrh r2,[r7,#4]
 1167 0026 FB68     	 ldr r3,[r7,#12]
 1168 0028 9A42     	 cmp r2,r3
 1169 002a 02D2     	 bcs .L87
 691:../cleanflight/src/main/sensors/gyro.c ****             notchHz = gyroFrequencyNyquist;
 1170              	 .loc 3 691 0
 1171 002c FB68     	 ldr r3,[r7,#12]
 1172 002e FB80     	 strh r3,[r7,#6]
 1173 0030 01E0     	 b .L86
 1174              	.L87:
 692:../cleanflight/src/main/sensors/gyro.c ****         } else {
 693:../cleanflight/src/main/sensors/gyro.c ****             notchHz = 0;
 1175              	 .loc 3 693 0
 1176 0032 0023     	 movs r3,#0
 1177 0034 FB80     	 strh r3,[r7,#6]
 1178              	.L86:
 694:../cleanflight/src/main/sensors/gyro.c ****         }
 695:../cleanflight/src/main/sensors/gyro.c ****     }
 696:../cleanflight/src/main/sensors/gyro.c **** 
 697:../cleanflight/src/main/sensors/gyro.c ****     return notchHz;
 1179              	 .loc 3 697 0
 1180 0036 FB88     	 ldrh r3,[r7,#6]
 698:../cleanflight/src/main/sensors/gyro.c **** }
 1181              	 .loc 3 698 0
 1182 0038 1846     	 mov r0,r3
 1183 003a 1437     	 adds r7,r7,#20
 1184              	.LCFI55:
 1185              	 .cfi_def_cfa_offset 4
 1186 003c BD46     	 mov sp,r7
 1187              	.LCFI56:
 1188              	 .cfi_def_cfa_register 13
 1189              	 
 1190 003e 5DF8047B 	 ldr r7,[sp],#4
 1191              	.LCFI57:
 1192              	 .cfi_restore 7
 1193              	 .cfi_def_cfa_offset 0
 1194 0042 7047     	 bx lr
 1195              	.L90:
 1196              	 .align 2
 1197              	.L89:
 1198 0044 00000000 	 .word gyro
 1199 0048 20A10700 	 .word 500000
 1200              	 .cfi_endproc
 1201              	.LFE551:
 1203              	 .section .text.gyroInitFilterNotch1,"ax",%progbits
 1204              	 .align 2
 1205              	 .thumb
 1206              	 .thumb_func
 1208              	gyroInitFilterNotch1:
 1209              	.LFB552:
 699:../cleanflight/src/main/sensors/gyro.c **** 
 700:../cleanflight/src/main/sensors/gyro.c **** #if defined(USE_GYRO_SLEW_LIMITER)
 701:../cleanflight/src/main/sensors/gyro.c **** void gyroInitSlewLimiter(gyroSensor_t *gyroSensor) {
 702:../cleanflight/src/main/sensors/gyro.c **** 
 703:../cleanflight/src/main/sensors/gyro.c ****     for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 704:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroADCRawPrevious[axis] = 0;
 705:../cleanflight/src/main/sensors/gyro.c ****     }
 706:../cleanflight/src/main/sensors/gyro.c **** }
 707:../cleanflight/src/main/sensors/gyro.c **** #endif
 708:../cleanflight/src/main/sensors/gyro.c **** 
 709:../cleanflight/src/main/sensors/gyro.c **** static void gyroInitFilterNotch1(gyroSensor_t *gyroSensor, uint16_t notchHz, uint16_t notchCutoffHz
 710:../cleanflight/src/main/sensors/gyro.c **** {
 1210              	 .loc 3 710 0
 1211              	 .cfi_startproc
 1212              	 
 1213              	 
 1214 0000 80B5     	 push {r7,lr}
 1215              	.LCFI58:
 1216              	 .cfi_def_cfa_offset 8
 1217              	 .cfi_offset 7,-8
 1218              	 .cfi_offset 14,-4
 1219 0002 86B0     	 sub sp,sp,#24
 1220              	.LCFI59:
 1221              	 .cfi_def_cfa_offset 32
 1222 0004 02AF     	 add r7,sp,#8
 1223              	.LCFI60:
 1224              	 .cfi_def_cfa 7,24
 1225 0006 7860     	 str r0,[r7,#4]
 1226 0008 0B46     	 mov r3,r1
 1227 000a 7B80     	 strh r3,[r7,#2]
 1228 000c 1346     	 mov r3,r2
 1229 000e 3B80     	 strh r3,[r7]
 711:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->notchFilter1ApplyFn = nullFilterApply;
 1230              	 .loc 3 711 0
 1231 0010 7B68     	 ldr r3,[r7,#4]
 1232 0012 254A     	 ldr r2,.L95
 1233 0014 C3F89121 	 str r2,[r3,#401]
 712:../cleanflight/src/main/sensors/gyro.c **** 
 713:../cleanflight/src/main/sensors/gyro.c ****     notchHz = calculateNyquistAdjustedNotchHz(notchHz, notchCutoffHz);
 1234              	 .loc 3 713 0
 1235 0018 7A88     	 ldrh r2,[r7,#2]
 1236 001a 3B88     	 ldrh r3,[r7]
 1237 001c 1046     	 mov r0,r2
 1238 001e 1946     	 mov r1,r3
 1239 0020 FFF7FEFF 	 bl calculateNyquistAdjustedNotchHz
 1240 0024 0346     	 mov r3,r0
 1241 0026 7B80     	 strh r3,[r7,#2]
 714:../cleanflight/src/main/sensors/gyro.c **** 
 715:../cleanflight/src/main/sensors/gyro.c ****     if (notchHz != 0 && notchCutoffHz != 0) {
 1242              	 .loc 3 715 0
 1243 0028 7B88     	 ldrh r3,[r7,#2]
 1244 002a 002B     	 cmp r3,#0
 1245 002c 39D0     	 beq .L91
 1246              	 .loc 3 715 0 is_stmt 0 discriminator 1
 1247 002e 3B88     	 ldrh r3,[r7]
 1248 0030 002B     	 cmp r3,#0
 1249 0032 36D0     	 beq .L91
 1250              	.LBB4:
 716:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->notchFilter1ApplyFn = (filterApplyFnPtr)biquadFilterApply;
 1251              	 .loc 3 716 0 is_stmt 1
 1252 0034 7B68     	 ldr r3,[r7,#4]
 1253 0036 1D4A     	 ldr r2,.L95+4
 1254 0038 C3F89121 	 str r2,[r3,#401]
 717:../cleanflight/src/main/sensors/gyro.c ****         const float notchQ = filterGetNotchQ(notchHz, notchCutoffHz);
 1255              	 .loc 3 717 0
 1256 003c 7B88     	 ldrh r3,[r7,#2]
 1257 003e 07EE903A 	 fmsr s15,r3
 1258 0042 B8EE677A 	 fuitos s14,s15
 1259 0046 3B88     	 ldrh r3,[r7]
 1260 0048 07EE903A 	 fmsr s15,r3
 1261 004c F8EE677A 	 fuitos s15,s15
 1262 0050 17EE100A 	 fmrs r0,s14
 1263 0054 17EE901A 	 fmrs r1,s15
 1264 0058 FFF7FEFF 	 bl filterGetNotchQ
 1265 005c B860     	 str r0,[r7,#8]
 1266              	.LBB5:
 718:../cleanflight/src/main/sensors/gyro.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1267              	 .loc 3 718 0
 1268 005e 0023     	 movs r3,#0
 1269 0060 FB60     	 str r3,[r7,#12]
 1270 0062 1BE0     	 b .L93
 1271              	.L94:
 719:../cleanflight/src/main/sensors/gyro.c ****             biquadFilterInit(&gyroSensor->notchFilter1[axis], notchHz, gyro.targetLooptime, notchQ,
 1272              	 .loc 3 719 0 discriminator 3
 1273 0064 FA68     	 ldr r2,[r7,#12]
 1274 0066 1346     	 mov r3,r2
 1275 0068 DB00     	 lsls r3,r3,#3
 1276 006a 1344     	 add r3,r3,r2
 1277 006c 9B00     	 lsls r3,r3,#2
 1278 006e 03F5C873 	 add r3,r3,#400
 1279 0072 7A68     	 ldr r2,[r7,#4]
 1280 0074 1344     	 add r3,r3,r2
 1281 0076 591D     	 adds r1,r3,#5
 1282 0078 7B88     	 ldrh r3,[r7,#2]
 1283 007a 07EE903A 	 fmsr s15,r3
 1284 007e F8EE677A 	 fuitos s15,s15
 1285 0082 0B4B     	 ldr r3,.L95+8
 1286 0084 1A68     	 ldr r2,[r3]
 1287 0086 0123     	 movs r3,#1
 1288 0088 0093     	 str r3,[sp]
 1289 008a 0846     	 mov r0,r1
 1290 008c 17EE901A 	 fmrs r1,s15
 1291 0090 BB68     	 ldr r3,[r7,#8]
 1292 0092 FFF7FEFF 	 bl biquadFilterInit
 718:../cleanflight/src/main/sensors/gyro.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1293              	 .loc 3 718 0 discriminator 3
 1294 0096 FB68     	 ldr r3,[r7,#12]
 1295 0098 0133     	 adds r3,r3,#1
 1296 009a FB60     	 str r3,[r7,#12]
 1297              	.L93:
 718:../cleanflight/src/main/sensors/gyro.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1298              	 .loc 3 718 0 is_stmt 0 discriminator 1
 1299 009c FB68     	 ldr r3,[r7,#12]
 1300 009e 022B     	 cmp r3,#2
 1301 00a0 E0DD     	 ble .L94
 1302              	.L91:
 1303              	.LBE5:
 1304              	.LBE4:
 720:../cleanflight/src/main/sensors/gyro.c ****         }
 721:../cleanflight/src/main/sensors/gyro.c ****     }
 722:../cleanflight/src/main/sensors/gyro.c **** }
 1305              	 .loc 3 722 0 is_stmt 1
 1306 00a2 1037     	 adds r7,r7,#16
 1307              	.LCFI61:
 1308              	 .cfi_def_cfa_offset 8
 1309 00a4 BD46     	 mov sp,r7
 1310              	.LCFI62:
 1311              	 .cfi_def_cfa_register 13
 1312              	 
 1313 00a6 80BD     	 pop {r7,pc}
 1314              	.L96:
 1315              	 .align 2
 1316              	.L95:
 1317 00a8 00000000 	 .word nullFilterApply
 1318 00ac 00000000 	 .word biquadFilterApply
 1319 00b0 00000000 	 .word gyro
 1320              	 .cfi_endproc
 1321              	.LFE552:
 1323              	 .section .text.gyroInitFilterNotch2,"ax",%progbits
 1324              	 .align 2
 1325              	 .thumb
 1326              	 .thumb_func
 1328              	gyroInitFilterNotch2:
 1329              	.LFB553:
 723:../cleanflight/src/main/sensors/gyro.c **** 
 724:../cleanflight/src/main/sensors/gyro.c **** static void gyroInitFilterNotch2(gyroSensor_t *gyroSensor, uint16_t notchHz, uint16_t notchCutoffHz
 725:../cleanflight/src/main/sensors/gyro.c **** {
 1330              	 .loc 3 725 0
 1331              	 .cfi_startproc
 1332              	 
 1333              	 
 1334 0000 80B5     	 push {r7,lr}
 1335              	.LCFI63:
 1336              	 .cfi_def_cfa_offset 8
 1337              	 .cfi_offset 7,-8
 1338              	 .cfi_offset 14,-4
 1339 0002 86B0     	 sub sp,sp,#24
 1340              	.LCFI64:
 1341              	 .cfi_def_cfa_offset 32
 1342 0004 02AF     	 add r7,sp,#8
 1343              	.LCFI65:
 1344              	 .cfi_def_cfa 7,24
 1345 0006 7860     	 str r0,[r7,#4]
 1346 0008 0B46     	 mov r3,r1
 1347 000a 7B80     	 strh r3,[r7,#2]
 1348 000c 1346     	 mov r3,r2
 1349 000e 3B80     	 strh r3,[r7]
 726:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->notchFilter2ApplyFn = nullFilterApply;
 1350              	 .loc 3 726 0
 1351 0010 7B68     	 ldr r3,[r7,#4]
 1352 0012 254A     	 ldr r2,.L101
 1353 0014 C3F80122 	 str r2,[r3,#513]
 727:../cleanflight/src/main/sensors/gyro.c **** 
 728:../cleanflight/src/main/sensors/gyro.c ****     notchHz = calculateNyquistAdjustedNotchHz(notchHz, notchCutoffHz);
 1354              	 .loc 3 728 0
 1355 0018 7A88     	 ldrh r2,[r7,#2]
 1356 001a 3B88     	 ldrh r3,[r7]
 1357 001c 1046     	 mov r0,r2
 1358 001e 1946     	 mov r1,r3
 1359 0020 FFF7FEFF 	 bl calculateNyquistAdjustedNotchHz
 1360 0024 0346     	 mov r3,r0
 1361 0026 7B80     	 strh r3,[r7,#2]
 729:../cleanflight/src/main/sensors/gyro.c **** 
 730:../cleanflight/src/main/sensors/gyro.c ****     if (notchHz != 0 && notchCutoffHz != 0) {
 1362              	 .loc 3 730 0
 1363 0028 7B88     	 ldrh r3,[r7,#2]
 1364 002a 002B     	 cmp r3,#0
 1365 002c 39D0     	 beq .L97
 1366              	 .loc 3 730 0 is_stmt 0 discriminator 1
 1367 002e 3B88     	 ldrh r3,[r7]
 1368 0030 002B     	 cmp r3,#0
 1369 0032 36D0     	 beq .L97
 1370              	.LBB6:
 731:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->notchFilter2ApplyFn = (filterApplyFnPtr)biquadFilterApply;
 1371              	 .loc 3 731 0 is_stmt 1
 1372 0034 7B68     	 ldr r3,[r7,#4]
 1373 0036 1D4A     	 ldr r2,.L101+4
 1374 0038 C3F80122 	 str r2,[r3,#513]
 732:../cleanflight/src/main/sensors/gyro.c ****         const float notchQ = filterGetNotchQ(notchHz, notchCutoffHz);
 1375              	 .loc 3 732 0
 1376 003c 7B88     	 ldrh r3,[r7,#2]
 1377 003e 07EE903A 	 fmsr s15,r3
 1378 0042 B8EE677A 	 fuitos s14,s15
 1379 0046 3B88     	 ldrh r3,[r7]
 1380 0048 07EE903A 	 fmsr s15,r3
 1381 004c F8EE677A 	 fuitos s15,s15
 1382 0050 17EE100A 	 fmrs r0,s14
 1383 0054 17EE901A 	 fmrs r1,s15
 1384 0058 FFF7FEFF 	 bl filterGetNotchQ
 1385 005c B860     	 str r0,[r7,#8]
 1386              	.LBB7:
 733:../cleanflight/src/main/sensors/gyro.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1387              	 .loc 3 733 0
 1388 005e 0023     	 movs r3,#0
 1389 0060 FB60     	 str r3,[r7,#12]
 1390 0062 1BE0     	 b .L99
 1391              	.L100:
 734:../cleanflight/src/main/sensors/gyro.c ****             biquadFilterInit(&gyroSensor->notchFilter2[axis], notchHz, gyro.targetLooptime, notchQ,
 1392              	 .loc 3 734 0 discriminator 3
 1393 0064 FA68     	 ldr r2,[r7,#12]
 1394 0066 1346     	 mov r3,r2
 1395 0068 DB00     	 lsls r3,r3,#3
 1396 006a 1344     	 add r3,r3,r2
 1397 006c 9B00     	 lsls r3,r3,#2
 1398 006e 03F50073 	 add r3,r3,#512
 1399 0072 7A68     	 ldr r2,[r7,#4]
 1400 0074 1344     	 add r3,r3,r2
 1401 0076 591D     	 adds r1,r3,#5
 1402 0078 7B88     	 ldrh r3,[r7,#2]
 1403 007a 07EE903A 	 fmsr s15,r3
 1404 007e F8EE677A 	 fuitos s15,s15
 1405 0082 0B4B     	 ldr r3,.L101+8
 1406 0084 1A68     	 ldr r2,[r3]
 1407 0086 0123     	 movs r3,#1
 1408 0088 0093     	 str r3,[sp]
 1409 008a 0846     	 mov r0,r1
 1410 008c 17EE901A 	 fmrs r1,s15
 1411 0090 BB68     	 ldr r3,[r7,#8]
 1412 0092 FFF7FEFF 	 bl biquadFilterInit
 733:../cleanflight/src/main/sensors/gyro.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1413              	 .loc 3 733 0 discriminator 3
 1414 0096 FB68     	 ldr r3,[r7,#12]
 1415 0098 0133     	 adds r3,r3,#1
 1416 009a FB60     	 str r3,[r7,#12]
 1417              	.L99:
 733:../cleanflight/src/main/sensors/gyro.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1418              	 .loc 3 733 0 is_stmt 0 discriminator 1
 1419 009c FB68     	 ldr r3,[r7,#12]
 1420 009e 022B     	 cmp r3,#2
 1421 00a0 E0DD     	 ble .L100
 1422              	.L97:
 1423              	.LBE7:
 1424              	.LBE6:
 735:../cleanflight/src/main/sensors/gyro.c ****         }
 736:../cleanflight/src/main/sensors/gyro.c ****     }
 737:../cleanflight/src/main/sensors/gyro.c **** }
 1425              	 .loc 3 737 0 is_stmt 1
 1426 00a2 1037     	 adds r7,r7,#16
 1427              	.LCFI66:
 1428              	 .cfi_def_cfa_offset 8
 1429 00a4 BD46     	 mov sp,r7
 1430              	.LCFI67:
 1431              	 .cfi_def_cfa_register 13
 1432              	 
 1433 00a6 80BD     	 pop {r7,pc}
 1434              	.L102:
 1435              	 .align 2
 1436              	.L101:
 1437 00a8 00000000 	 .word nullFilterApply
 1438 00ac 00000000 	 .word biquadFilterApply
 1439 00b0 00000000 	 .word gyro
 1440              	 .cfi_endproc
 1441              	.LFE553:
 1443              	 .section .text.gyroInitSensorFilters,"ax",%progbits
 1444              	 .align 2
 1445              	 .thumb
 1446              	 .thumb_func
 1448              	gyroInitSensorFilters:
 1449              	.LFB554:
 738:../cleanflight/src/main/sensors/gyro.c **** 
 739:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_DATA_ANALYSE
 740:../cleanflight/src/main/sensors/gyro.c **** static bool isDynamicFilterActive(void)
 741:../cleanflight/src/main/sensors/gyro.c **** {
 742:../cleanflight/src/main/sensors/gyro.c ****     return feature(FEATURE_DYNAMIC_FILTER);
 743:../cleanflight/src/main/sensors/gyro.c **** }
 744:../cleanflight/src/main/sensors/gyro.c **** 
 745:../cleanflight/src/main/sensors/gyro.c **** static void gyroInitFilterDynamicNotch(gyroSensor_t *gyroSensor)
 746:../cleanflight/src/main/sensors/gyro.c **** {
 747:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->notchFilterDynApplyFn = nullFilterApply;
 748:../cleanflight/src/main/sensors/gyro.c **** 
 749:../cleanflight/src/main/sensors/gyro.c ****     if (isDynamicFilterActive()) {
 750:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->notchFilterDynApplyFn = (filterApplyFnPtr)biquadFilterApplyDF1; // must be this
 751:../cleanflight/src/main/sensors/gyro.c ****         const float notchQ = filterGetNotchQ(400, 390); //just any init value
 752:../cleanflight/src/main/sensors/gyro.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 753:../cleanflight/src/main/sensors/gyro.c ****             biquadFilterInit(&gyroSensor->notchFilterDyn[axis], 400, gyro.targetLooptime, notchQ, F
 754:../cleanflight/src/main/sensors/gyro.c ****         }
 755:../cleanflight/src/main/sensors/gyro.c ****     }
 756:../cleanflight/src/main/sensors/gyro.c **** }
 757:../cleanflight/src/main/sensors/gyro.c **** #endif
 758:../cleanflight/src/main/sensors/gyro.c **** 
 759:../cleanflight/src/main/sensors/gyro.c **** 
 760:../cleanflight/src/main/sensors/gyro.c **** static void gyroInitSensorFilters(gyroSensor_t *gyroSensor)
 761:../cleanflight/src/main/sensors/gyro.c **** {
 1450              	 .loc 3 761 0
 1451              	 .cfi_startproc
 1452              	 
 1453              	 
 1454 0000 90B5     	 push {r4,r7,lr}
 1455              	.LCFI68:
 1456              	 .cfi_def_cfa_offset 12
 1457              	 .cfi_offset 4,-12
 1458              	 .cfi_offset 7,-8
 1459              	 .cfi_offset 14,-4
 1460 0002 83B0     	 sub sp,sp,#12
 1461              	.LCFI69:
 1462              	 .cfi_def_cfa_offset 24
 1463 0004 00AF     	 add r7,sp,#0
 1464              	.LCFI70:
 1465              	 .cfi_def_cfa_register 7
 1466 0006 7860     	 str r0,[r7,#4]
 762:../cleanflight/src/main/sensors/gyro.c **** #if defined(USE_GYRO_SLEW_LIMITER)
 763:../cleanflight/src/main/sensors/gyro.c ****     gyroInitSlewLimiter(gyroSensor);
 764:../cleanflight/src/main/sensors/gyro.c **** #endif
 765:../cleanflight/src/main/sensors/gyro.c **** 
 766:../cleanflight/src/main/sensors/gyro.c ****     gyroInitLowpassFilterLpf(
 767:../cleanflight/src/main/sensors/gyro.c ****       gyroSensor,
 768:../cleanflight/src/main/sensors/gyro.c ****       FILTER_LOWPASS,
 769:../cleanflight/src/main/sensors/gyro.c ****       gyroConfig()->gyro_lowpass_type,
 1467              	 .loc 3 769 0
 1468 0008 FFF7FEFF 	 bl gyroConfig
 1469 000c 0346     	 mov r3,r0
 1470 000e DB7D     	 ldrb r3,[r3,#23]
 766:../cleanflight/src/main/sensors/gyro.c ****       gyroSensor,
 1471              	 .loc 3 766 0
 1472 0010 1C46     	 mov r4,r3
 770:../cleanflight/src/main/sensors/gyro.c ****       gyroConfig()->gyro_lowpass_hz
 1473              	 .loc 3 770 0
 1474 0012 FFF7FEFF 	 bl gyroConfig
 1475 0016 0346     	 mov r3,r0
 766:../cleanflight/src/main/sensors/gyro.c ****       gyroSensor,
 1476              	 .loc 3 766 0
 1477 0018 1B89     	 ldrh r3,[r3,#8]
 1478 001a 9BB2     	 uxth r3,r3
 1479 001c 7868     	 ldr r0,[r7,#4]
 1480 001e 0021     	 movs r1,#0
 1481 0020 2246     	 mov r2,r4
 1482 0022 FFF7FEFF 	 bl gyroInitLowpassFilterLpf
 771:../cleanflight/src/main/sensors/gyro.c ****     );
 772:../cleanflight/src/main/sensors/gyro.c **** 
 773:../cleanflight/src/main/sensors/gyro.c ****     gyroInitLowpassFilterLpf(
 774:../cleanflight/src/main/sensors/gyro.c ****       gyroSensor,
 775:../cleanflight/src/main/sensors/gyro.c ****       FILTER_LOWPASS2,
 776:../cleanflight/src/main/sensors/gyro.c ****       gyroConfig()->gyro_lowpass2_type,
 1483              	 .loc 3 776 0
 1484 0026 FFF7FEFF 	 bl gyroConfig
 1485 002a 0346     	 mov r3,r0
 1486 002c 1B7E     	 ldrb r3,[r3,#24]
 773:../cleanflight/src/main/sensors/gyro.c ****       gyroSensor,
 1487              	 .loc 3 773 0
 1488 002e 1C46     	 mov r4,r3
 777:../cleanflight/src/main/sensors/gyro.c ****       gyroConfig()->gyro_lowpass2_hz
 1489              	 .loc 3 777 0
 1490 0030 FFF7FEFF 	 bl gyroConfig
 1491 0034 0346     	 mov r3,r0
 773:../cleanflight/src/main/sensors/gyro.c ****       gyroSensor,
 1492              	 .loc 3 773 0
 1493 0036 5B89     	 ldrh r3,[r3,#10]
 1494 0038 9BB2     	 uxth r3,r3
 1495 003a 7868     	 ldr r0,[r7,#4]
 1496 003c 0121     	 movs r1,#1
 1497 003e 2246     	 mov r2,r4
 1498 0040 FFF7FEFF 	 bl gyroInitLowpassFilterLpf
 778:../cleanflight/src/main/sensors/gyro.c ****     );
 779:../cleanflight/src/main/sensors/gyro.c **** 
 780:../cleanflight/src/main/sensors/gyro.c ****     gyroInitFilterNotch1(gyroSensor, gyroConfig()->gyro_soft_notch_hz_1, gyroConfig()->gyro_soft_no
 1499              	 .loc 3 780 0
 1500 0044 FFF7FEFF 	 bl gyroConfig
 1501 0048 0346     	 mov r3,r0
 1502 004a 9B89     	 ldrh r3,[r3,#12]
 1503 004c 9CB2     	 uxth r4,r3
 1504 004e FFF7FEFF 	 bl gyroConfig
 1505 0052 0346     	 mov r3,r0
 1506 0054 DB89     	 ldrh r3,[r3,#14]
 1507 0056 9BB2     	 uxth r3,r3
 1508 0058 7868     	 ldr r0,[r7,#4]
 1509 005a 2146     	 mov r1,r4
 1510 005c 1A46     	 mov r2,r3
 1511 005e FFF7FEFF 	 bl gyroInitFilterNotch1
 781:../cleanflight/src/main/sensors/gyro.c ****     gyroInitFilterNotch2(gyroSensor, gyroConfig()->gyro_soft_notch_hz_2, gyroConfig()->gyro_soft_no
 1512              	 .loc 3 781 0
 1513 0062 FFF7FEFF 	 bl gyroConfig
 1514 0066 0346     	 mov r3,r0
 1515 0068 1B8A     	 ldrh r3,[r3,#16]
 1516 006a 9CB2     	 uxth r4,r3
 1517 006c FFF7FEFF 	 bl gyroConfig
 1518 0070 0346     	 mov r3,r0
 1519 0072 5B8A     	 ldrh r3,[r3,#18]
 1520 0074 9BB2     	 uxth r3,r3
 1521 0076 7868     	 ldr r0,[r7,#4]
 1522 0078 2146     	 mov r1,r4
 1523 007a 1A46     	 mov r2,r3
 1524 007c FFF7FEFF 	 bl gyroInitFilterNotch2
 782:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_DATA_ANALYSE
 783:../cleanflight/src/main/sensors/gyro.c ****     gyroInitFilterDynamicNotch(gyroSensor);
 784:../cleanflight/src/main/sensors/gyro.c **** #endif
 785:../cleanflight/src/main/sensors/gyro.c **** }
 1525              	 .loc 3 785 0
 1526 0080 0C37     	 adds r7,r7,#12
 1527              	.LCFI71:
 1528              	 .cfi_def_cfa_offset 12
 1529 0082 BD46     	 mov sp,r7
 1530              	.LCFI72:
 1531              	 .cfi_def_cfa_register 13
 1532              	 
 1533 0084 90BD     	 pop {r4,r7,pc}
 1534              	 .cfi_endproc
 1535              	.LFE554:
 1537              	 .section .text.gyroInitFilters,"ax",%progbits
 1538              	 .align 2
 1539              	 .global gyroInitFilters
 1540              	 .thumb
 1541              	 .thumb_func
 1543              	gyroInitFilters:
 1544              	.LFB555:
 786:../cleanflight/src/main/sensors/gyro.c **** 
 787:../cleanflight/src/main/sensors/gyro.c **** void gyroInitFilters(void)
 788:../cleanflight/src/main/sensors/gyro.c **** {
 1545              	 .loc 3 788 0
 1546              	 .cfi_startproc
 1547              	 
 1548              	 
 1549 0000 80B5     	 push {r7,lr}
 1550              	.LCFI73:
 1551              	 .cfi_def_cfa_offset 8
 1552              	 .cfi_offset 7,-8
 1553              	 .cfi_offset 14,-4
 1554 0002 00AF     	 add r7,sp,#0
 1555              	.LCFI74:
 1556              	 .cfi_def_cfa_register 7
 789:../cleanflight/src/main/sensors/gyro.c ****     gyroInitSensorFilters(&gyroSensor1);
 1557              	 .loc 3 789 0
 1558 0004 0148     	 ldr r0,.L105
 1559 0006 FFF7FEFF 	 bl gyroInitSensorFilters
 790:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 791:../cleanflight/src/main/sensors/gyro.c ****     gyroInitSensorFilters(&gyroSensor2);
 792:../cleanflight/src/main/sensors/gyro.c **** #endif
 793:../cleanflight/src/main/sensors/gyro.c **** }
 1560              	 .loc 3 793 0
 1561 000a 80BD     	 pop {r7,pc}
 1562              	.L106:
 1563              	 .align 2
 1564              	.L105:
 1565 000c 00000000 	 .word gyroSensor1
 1566              	 .cfi_endproc
 1567              	.LFE555:
 1569              	 .section .text.isGyroSensorCalibrationComplete,"ax",%progbits
 1570              	 .align 2
 1571              	 .global isGyroSensorCalibrationComplete
 1572              	 .thumb
 1573              	 .thumb_func
 1575              	isGyroSensorCalibrationComplete:
 1576              	.LFB556:
 794:../cleanflight/src/main/sensors/gyro.c **** 
 795:../cleanflight/src/main/sensors/gyro.c **** FAST_CODE bool isGyroSensorCalibrationComplete(const gyroSensor_t *gyroSensor)
 796:../cleanflight/src/main/sensors/gyro.c **** {
 1577              	 .loc 3 796 0
 1578              	 .cfi_startproc
 1579              	 
 1580              	 
 1581              	 
 1582 0000 80B4     	 push {r7}
 1583              	.LCFI75:
 1584              	 .cfi_def_cfa_offset 4
 1585              	 .cfi_offset 7,-4
 1586 0002 83B0     	 sub sp,sp,#12
 1587              	.LCFI76:
 1588              	 .cfi_def_cfa_offset 16
 1589 0004 00AF     	 add r7,sp,#0
 1590              	.LCFI77:
 1591              	 .cfi_def_cfa_register 7
 1592 0006 7860     	 str r0,[r7,#4]
 797:../cleanflight/src/main/sensors/gyro.c ****     return gyroSensor->calibration.cyclesRemaining == 0;
 1593              	 .loc 3 797 0
 1594 0008 7B68     	 ldr r3,[r7,#4]
 1595 000a D3F8AD30 	 ldr r3,[r3,#173]
 1596 000e 002B     	 cmp r3,#0
 1597 0010 0CBF     	 ite eq
 1598 0012 0123     	 moveq r3,#1
 1599 0014 0023     	 movne r3,#0
 1600 0016 DBB2     	 uxtb r3,r3
 798:../cleanflight/src/main/sensors/gyro.c **** }
 1601              	 .loc 3 798 0
 1602 0018 1846     	 mov r0,r3
 1603 001a 0C37     	 adds r7,r7,#12
 1604              	.LCFI78:
 1605              	 .cfi_def_cfa_offset 4
 1606 001c BD46     	 mov sp,r7
 1607              	.LCFI79:
 1608              	 .cfi_def_cfa_register 13
 1609              	 
 1610 001e 5DF8047B 	 ldr r7,[sp],#4
 1611              	.LCFI80:
 1612              	 .cfi_restore 7
 1613              	 .cfi_def_cfa_offset 0
 1614 0022 7047     	 bx lr
 1615              	 .cfi_endproc
 1616              	.LFE556:
 1618              	 .section .text.isGyroCalibrationComplete,"ax",%progbits
 1619              	 .align 2
 1620              	 .global isGyroCalibrationComplete
 1621              	 .thumb
 1622              	 .thumb_func
 1624              	isGyroCalibrationComplete:
 1625              	.LFB557:
 799:../cleanflight/src/main/sensors/gyro.c **** 
 800:../cleanflight/src/main/sensors/gyro.c **** FAST_CODE bool isGyroCalibrationComplete(void)
 801:../cleanflight/src/main/sensors/gyro.c **** {
 1626              	 .loc 3 801 0
 1627              	 .cfi_startproc
 1628              	 
 1629              	 
 1630 0000 80B5     	 push {r7,lr}
 1631              	.LCFI81:
 1632              	 .cfi_def_cfa_offset 8
 1633              	 .cfi_offset 7,-8
 1634              	 .cfi_offset 14,-4
 1635 0002 00AF     	 add r7,sp,#0
 1636              	.LCFI82:
 1637              	 .cfi_def_cfa_register 7
 802:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 803:../cleanflight/src/main/sensors/gyro.c ****     switch (gyroToUse) {
 804:../cleanflight/src/main/sensors/gyro.c ****         default:
 805:../cleanflight/src/main/sensors/gyro.c ****         case GYRO_CONFIG_USE_GYRO_1: {
 806:../cleanflight/src/main/sensors/gyro.c ****             return isGyroSensorCalibrationComplete(&gyroSensor1);
 807:../cleanflight/src/main/sensors/gyro.c ****         }
 808:../cleanflight/src/main/sensors/gyro.c ****         case GYRO_CONFIG_USE_GYRO_2: {
 809:../cleanflight/src/main/sensors/gyro.c ****             return isGyroSensorCalibrationComplete(&gyroSensor2);
 810:../cleanflight/src/main/sensors/gyro.c ****         }
 811:../cleanflight/src/main/sensors/gyro.c ****         case GYRO_CONFIG_USE_GYRO_BOTH: {
 812:../cleanflight/src/main/sensors/gyro.c ****             return isGyroSensorCalibrationComplete(&gyroSensor1) && isGyroSensorCalibrationComplete
 813:../cleanflight/src/main/sensors/gyro.c ****         }
 814:../cleanflight/src/main/sensors/gyro.c ****     }
 815:../cleanflight/src/main/sensors/gyro.c **** #else
 816:../cleanflight/src/main/sensors/gyro.c ****     return isGyroSensorCalibrationComplete(&gyroSensor1);
 1638              	 .loc 3 816 0
 1639 0004 0248     	 ldr r0,.L111
 1640 0006 FFF7FEFF 	 bl isGyroSensorCalibrationComplete
 1641 000a 0346     	 mov r3,r0
 817:../cleanflight/src/main/sensors/gyro.c **** #endif
 818:../cleanflight/src/main/sensors/gyro.c **** }
 1642              	 .loc 3 818 0
 1643 000c 1846     	 mov r0,r3
 1644 000e 80BD     	 pop {r7,pc}
 1645              	.L112:
 1646              	 .align 2
 1647              	.L111:
 1648 0010 00000000 	 .word gyroSensor1
 1649              	 .cfi_endproc
 1650              	.LFE557:
 1652              	 .section .text.isOnFinalGyroCalibrationCycle,"ax",%progbits
 1653              	 .align 2
 1654              	 .thumb
 1655              	 .thumb_func
 1657              	isOnFinalGyroCalibrationCycle:
 1658              	.LFB558:
 819:../cleanflight/src/main/sensors/gyro.c **** 
 820:../cleanflight/src/main/sensors/gyro.c **** static bool isOnFinalGyroCalibrationCycle(const gyroCalibration_t *gyroCalibration)
 821:../cleanflight/src/main/sensors/gyro.c **** {
 1659              	 .loc 3 821 0
 1660              	 .cfi_startproc
 1661              	 
 1662              	 
 1663              	 
 1664 0000 80B4     	 push {r7}
 1665              	.LCFI83:
 1666              	 .cfi_def_cfa_offset 4
 1667              	 .cfi_offset 7,-4
 1668 0002 83B0     	 sub sp,sp,#12
 1669              	.LCFI84:
 1670              	 .cfi_def_cfa_offset 16
 1671 0004 00AF     	 add r7,sp,#0
 1672              	.LCFI85:
 1673              	 .cfi_def_cfa_register 7
 1674 0006 7860     	 str r0,[r7,#4]
 822:../cleanflight/src/main/sensors/gyro.c ****     return gyroCalibration->cyclesRemaining == 1;
 1675              	 .loc 3 822 0
 1676 0008 7B68     	 ldr r3,[r7,#4]
 1677 000a 9B6C     	 ldr r3,[r3,#72]
 1678 000c 012B     	 cmp r3,#1
 1679 000e 0CBF     	 ite eq
 1680 0010 0123     	 moveq r3,#1
 1681 0012 0023     	 movne r3,#0
 1682 0014 DBB2     	 uxtb r3,r3
 823:../cleanflight/src/main/sensors/gyro.c **** }
 1683              	 .loc 3 823 0
 1684 0016 1846     	 mov r0,r3
 1685 0018 0C37     	 adds r7,r7,#12
 1686              	.LCFI86:
 1687              	 .cfi_def_cfa_offset 4
 1688 001a BD46     	 mov sp,r7
 1689              	.LCFI87:
 1690              	 .cfi_def_cfa_register 13
 1691              	 
 1692 001c 5DF8047B 	 ldr r7,[sp],#4
 1693              	.LCFI88:
 1694              	 .cfi_restore 7
 1695              	 .cfi_def_cfa_offset 0
 1696 0020 7047     	 bx lr
 1697              	 .cfi_endproc
 1698              	.LFE558:
 1700 0022 00BF     	 .section .text.gyroCalculateCalibratingCycles,"ax",%progbits
 1701              	 .align 2
 1702              	 .thumb
 1703              	 .thumb_func
 1705              	gyroCalculateCalibratingCycles:
 1706              	.LFB559:
 824:../cleanflight/src/main/sensors/gyro.c **** 
 825:../cleanflight/src/main/sensors/gyro.c **** static int32_t gyroCalculateCalibratingCycles(void)
 826:../cleanflight/src/main/sensors/gyro.c **** {
 1707              	 .loc 3 826 0
 1708              	 .cfi_startproc
 1709              	 
 1710              	 
 1711 0000 80B5     	 push {r7,lr}
 1712              	.LCFI89:
 1713              	 .cfi_def_cfa_offset 8
 1714              	 .cfi_offset 7,-8
 1715              	 .cfi_offset 14,-4
 1716 0002 00AF     	 add r7,sp,#0
 1717              	.LCFI90:
 1718              	 .cfi_def_cfa_register 7
 827:../cleanflight/src/main/sensors/gyro.c ****     return (gyroConfig()->gyroCalibrationDuration * 10000) / gyro.targetLooptime;
 1719              	 .loc 3 827 0
 1720 0004 FFF7FEFF 	 bl gyroConfig
 1721 0008 0346     	 mov r3,r0
 1722 000a 9B8B     	 ldrh r3,[r3,#28]
 1723 000c 9BB2     	 uxth r3,r3
 1724 000e 1A46     	 mov r2,r3
 1725 0010 42F21073 	 movw r3,#10000
 1726 0014 03FB02F3 	 mul r3,r3,r2
 1727 0018 1A46     	 mov r2,r3
 1728 001a 034B     	 ldr r3,.L117
 1729 001c 1B68     	 ldr r3,[r3]
 1730 001e B2FBF3F3 	 udiv r3,r2,r3
 828:../cleanflight/src/main/sensors/gyro.c **** }
 1731              	 .loc 3 828 0
 1732 0022 1846     	 mov r0,r3
 1733 0024 80BD     	 pop {r7,pc}
 1734              	.L118:
 1735 0026 00BF     	 .align 2
 1736              	.L117:
 1737 0028 00000000 	 .word gyro
 1738              	 .cfi_endproc
 1739              	.LFE559:
 1741              	 .section .text.isOnFirstGyroCalibrationCycle,"ax",%progbits
 1742              	 .align 2
 1743              	 .thumb
 1744              	 .thumb_func
 1746              	isOnFirstGyroCalibrationCycle:
 1747              	.LFB560:
 829:../cleanflight/src/main/sensors/gyro.c **** 
 830:../cleanflight/src/main/sensors/gyro.c **** static bool isOnFirstGyroCalibrationCycle(const gyroCalibration_t *gyroCalibration)
 831:../cleanflight/src/main/sensors/gyro.c **** {
 1748              	 .loc 3 831 0
 1749              	 .cfi_startproc
 1750              	 
 1751              	 
 1752 0000 90B5     	 push {r4,r7,lr}
 1753              	.LCFI91:
 1754              	 .cfi_def_cfa_offset 12
 1755              	 .cfi_offset 4,-12
 1756              	 .cfi_offset 7,-8
 1757              	 .cfi_offset 14,-4
 1758 0002 83B0     	 sub sp,sp,#12
 1759              	.LCFI92:
 1760              	 .cfi_def_cfa_offset 24
 1761 0004 00AF     	 add r7,sp,#0
 1762              	.LCFI93:
 1763              	 .cfi_def_cfa_register 7
 1764 0006 7860     	 str r0,[r7,#4]
 832:../cleanflight/src/main/sensors/gyro.c ****     return gyroCalibration->cyclesRemaining == gyroCalculateCalibratingCycles();
 1765              	 .loc 3 832 0
 1766 0008 7B68     	 ldr r3,[r7,#4]
 1767 000a 9C6C     	 ldr r4,[r3,#72]
 1768 000c FFF7FEFF 	 bl gyroCalculateCalibratingCycles
 1769 0010 0346     	 mov r3,r0
 1770 0012 9C42     	 cmp r4,r3
 1771 0014 0CBF     	 ite eq
 1772 0016 0123     	 moveq r3,#1
 1773 0018 0023     	 movne r3,#0
 1774 001a DBB2     	 uxtb r3,r3
 833:../cleanflight/src/main/sensors/gyro.c **** }
 1775              	 .loc 3 833 0
 1776 001c 1846     	 mov r0,r3
 1777 001e 0C37     	 adds r7,r7,#12
 1778              	.LCFI94:
 1779              	 .cfi_def_cfa_offset 12
 1780 0020 BD46     	 mov sp,r7
 1781              	.LCFI95:
 1782              	 .cfi_def_cfa_register 13
 1783              	 
 1784 0022 90BD     	 pop {r4,r7,pc}
 1785              	 .cfi_endproc
 1786              	.LFE560:
 1788              	 .section .text.gyroSetCalibrationCycles,"ax",%progbits
 1789              	 .align 2
 1790              	 .thumb
 1791              	 .thumb_func
 1793              	gyroSetCalibrationCycles:
 1794              	.LFB561:
 834:../cleanflight/src/main/sensors/gyro.c **** 
 835:../cleanflight/src/main/sensors/gyro.c **** static void gyroSetCalibrationCycles(gyroSensor_t *gyroSensor)
 836:../cleanflight/src/main/sensors/gyro.c **** {
 1795              	 .loc 3 836 0
 1796              	 .cfi_startproc
 1797              	 
 1798              	 
 1799 0000 80B5     	 push {r7,lr}
 1800              	.LCFI96:
 1801              	 .cfi_def_cfa_offset 8
 1802              	 .cfi_offset 7,-8
 1803              	 .cfi_offset 14,-4
 1804 0002 82B0     	 sub sp,sp,#8
 1805              	.LCFI97:
 1806              	 .cfi_def_cfa_offset 16
 1807 0004 00AF     	 add r7,sp,#0
 1808              	.LCFI98:
 1809              	 .cfi_def_cfa_register 7
 1810 0006 7860     	 str r0,[r7,#4]
 837:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->calibration.cyclesRemaining = gyroCalculateCalibratingCycles();
 1811              	 .loc 3 837 0
 1812 0008 FFF7FEFF 	 bl gyroCalculateCalibratingCycles
 1813 000c 0246     	 mov r2,r0
 1814 000e 7B68     	 ldr r3,[r7,#4]
 1815 0010 C3F8AD20 	 str r2,[r3,#173]
 838:../cleanflight/src/main/sensors/gyro.c **** }
 1816              	 .loc 3 838 0
 1817 0014 0837     	 adds r7,r7,#8
 1818              	.LCFI99:
 1819              	 .cfi_def_cfa_offset 8
 1820 0016 BD46     	 mov sp,r7
 1821              	.LCFI100:
 1822              	 .cfi_def_cfa_register 13
 1823              	 
 1824 0018 80BD     	 pop {r7,pc}
 1825              	 .cfi_endproc
 1826              	.LFE561:
 1828 001a 00BF     	 .section .text.gyroStartCalibration,"ax",%progbits
 1829              	 .align 2
 1830              	 .global gyroStartCalibration
 1831              	 .thumb
 1832              	 .thumb_func
 1834              	gyroStartCalibration:
 1835              	.LFB562:
 839:../cleanflight/src/main/sensors/gyro.c **** 
 840:../cleanflight/src/main/sensors/gyro.c **** void gyroStartCalibration(bool isFirstArmingCalibration)
 841:../cleanflight/src/main/sensors/gyro.c **** {
 1836              	 .loc 3 841 0
 1837              	 .cfi_startproc
 1838              	 
 1839              	 
 1840 0000 80B5     	 push {r7,lr}
 1841              	.LCFI101:
 1842              	 .cfi_def_cfa_offset 8
 1843              	 .cfi_offset 7,-8
 1844              	 .cfi_offset 14,-4
 1845 0002 82B0     	 sub sp,sp,#8
 1846              	.LCFI102:
 1847              	 .cfi_def_cfa_offset 16
 1848 0004 00AF     	 add r7,sp,#0
 1849              	.LCFI103:
 1850              	 .cfi_def_cfa_register 7
 1851 0006 0346     	 mov r3,r0
 1852 0008 FB71     	 strb r3,[r7,#7]
 842:../cleanflight/src/main/sensors/gyro.c ****     if (!(isFirstArmingCalibration && firstArmingCalibrationWasStarted)) {
 1853              	 .loc 3 842 0
 1854 000a FB79     	 ldrb r3,[r7,#7]
 1855 000c 83F00103 	 eor r3,r3,#1
 1856 0010 DBB2     	 uxtb r3,r3
 1857 0012 002B     	 cmp r3,#0
 1858 0014 06D1     	 bne .L123
 1859              	 .loc 3 842 0 is_stmt 0 discriminator 1
 1860 0016 094B     	 ldr r3,.L125
 1861 0018 1B78     	 ldrb r3,[r3]
 1862 001a 83F00103 	 eor r3,r3,#1
 1863 001e DBB2     	 uxtb r3,r3
 1864 0020 002B     	 cmp r3,#0
 1865 0022 08D0     	 beq .L122
 1866              	.L123:
 843:../cleanflight/src/main/sensors/gyro.c ****         gyroSetCalibrationCycles(&gyroSensor1);
 1867              	 .loc 3 843 0 is_stmt 1
 1868 0024 0648     	 ldr r0,.L125+4
 1869 0026 FFF7FEFF 	 bl gyroSetCalibrationCycles
 844:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
 845:../cleanflight/src/main/sensors/gyro.c ****         gyroSetCalibrationCycles(&gyroSensor2);
 846:../cleanflight/src/main/sensors/gyro.c **** #endif
 847:../cleanflight/src/main/sensors/gyro.c **** 
 848:../cleanflight/src/main/sensors/gyro.c ****         if (isFirstArmingCalibration) {
 1870              	 .loc 3 848 0
 1871 002a FB79     	 ldrb r3,[r7,#7]
 1872 002c 002B     	 cmp r3,#0
 1873 002e 02D0     	 beq .L122
 849:../cleanflight/src/main/sensors/gyro.c ****             firstArmingCalibrationWasStarted = true;
 1874              	 .loc 3 849 0
 1875 0030 024B     	 ldr r3,.L125
 1876 0032 0122     	 movs r2,#1
 1877 0034 1A70     	 strb r2,[r3]
 1878              	.L122:
 850:../cleanflight/src/main/sensors/gyro.c ****         }
 851:../cleanflight/src/main/sensors/gyro.c ****     }
 852:../cleanflight/src/main/sensors/gyro.c **** }
 1879              	 .loc 3 852 0
 1880 0036 0837     	 adds r7,r7,#8
 1881              	.LCFI104:
 1882              	 .cfi_def_cfa_offset 8
 1883 0038 BD46     	 mov sp,r7
 1884              	.LCFI105:
 1885              	 .cfi_def_cfa_register 13
 1886              	 
 1887 003a 80BD     	 pop {r7,pc}
 1888              	.L126:
 1889              	 .align 2
 1890              	.L125:
 1891 003c 00000000 	 .word firstArmingCalibrationWasStarted
 1892 0040 00000000 	 .word gyroSensor1
 1893              	 .cfi_endproc
 1894              	.LFE562:
 1896              	 .section .text.isFirstArmingGyroCalibrationRunning,"ax",%progbits
 1897              	 .align 2
 1898              	 .global isFirstArmingGyroCalibrationRunning
 1899              	 .thumb
 1900              	 .thumb_func
 1902              	isFirstArmingGyroCalibrationRunning:
 1903              	.LFB563:
 853:../cleanflight/src/main/sensors/gyro.c **** 
 854:../cleanflight/src/main/sensors/gyro.c **** bool isFirstArmingGyroCalibrationRunning(void)
 855:../cleanflight/src/main/sensors/gyro.c **** {
 1904              	 .loc 3 855 0
 1905              	 .cfi_startproc
 1906              	 
 1907              	 
 1908 0000 80B5     	 push {r7,lr}
 1909              	.LCFI106:
 1910              	 .cfi_def_cfa_offset 8
 1911              	 .cfi_offset 7,-8
 1912              	 .cfi_offset 14,-4
 1913 0002 00AF     	 add r7,sp,#0
 1914              	.LCFI107:
 1915              	 .cfi_def_cfa_register 7
 856:../cleanflight/src/main/sensors/gyro.c ****     return firstArmingCalibrationWasStarted && !isGyroCalibrationComplete();
 1916              	 .loc 3 856 0
 1917 0004 094B     	 ldr r3,.L131
 1918 0006 1B78     	 ldrb r3,[r3]
 1919 0008 002B     	 cmp r3,#0
 1920 000a 09D0     	 beq .L128
 1921              	 .loc 3 856 0 is_stmt 0 discriminator 1
 1922 000c FFF7FEFF 	 bl isGyroCalibrationComplete
 1923 0010 0346     	 mov r3,r0
 1924 0012 83F00103 	 eor r3,r3,#1
 1925 0016 DBB2     	 uxtb r3,r3
 1926 0018 002B     	 cmp r3,#0
 1927 001a 01D0     	 beq .L128
 1928              	 .loc 3 856 0 discriminator 3
 1929 001c 0123     	 movs r3,#1
 1930 001e 00E0     	 b .L129
 1931              	.L128:
 1932              	 .loc 3 856 0 discriminator 4
 1933 0020 0023     	 movs r3,#0
 1934              	.L129:
 1935              	 .loc 3 856 0 discriminator 6
 1936 0022 03F00103 	 and r3,r3,#1
 1937 0026 DBB2     	 uxtb r3,r3
 857:../cleanflight/src/main/sensors/gyro.c **** }
 1938              	 .loc 3 857 0 is_stmt 1 discriminator 6
 1939 0028 1846     	 mov r0,r3
 1940 002a 80BD     	 pop {r7,pc}
 1941              	.L132:
 1942              	 .align 2
 1943              	.L131:
 1944 002c 00000000 	 .word firstArmingCalibrationWasStarted
 1945              	 .cfi_endproc
 1946              	.LFE563:
 1948              	 .section .text.performGyroCalibration,"ax",%progbits
 1949              	 .align 2
 1950              	 .thumb
 1951              	 .thumb_func
 1953              	performGyroCalibration:
 1954              	.LFB564:
 858:../cleanflight/src/main/sensors/gyro.c **** 
 859:../cleanflight/src/main/sensors/gyro.c **** STATIC_UNIT_TESTED void performGyroCalibration(gyroSensor_t *gyroSensor, uint8_t gyroMovementCalibr
 860:../cleanflight/src/main/sensors/gyro.c **** {
 1955              	 .loc 3 860 0
 1956              	 .cfi_startproc
 1957              	 
 1958              	 
 1959 0000 90B5     	 push {r4,r7,lr}
 1960              	.LCFI108:
 1961              	 .cfi_def_cfa_offset 12
 1962              	 .cfi_offset 4,-12
 1963              	 .cfi_offset 7,-8
 1964              	 .cfi_offset 14,-4
 1965 0002 85B0     	 sub sp,sp,#20
 1966              	.LCFI109:
 1967              	 .cfi_def_cfa_offset 32
 1968 0004 00AF     	 add r7,sp,#0
 1969              	.LCFI110:
 1970              	 .cfi_def_cfa_register 7
 1971 0006 7860     	 str r0,[r7,#4]
 1972 0008 0B46     	 mov r3,r1
 1973 000a FB70     	 strb r3,[r7,#3]
 1974              	.LBB8:
 861:../cleanflight/src/main/sensors/gyro.c ****     for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 1975              	 .loc 3 861 0
 1976 000c 0023     	 movs r3,#0
 1977 000e FB60     	 str r3,[r7,#12]
 1978 0010 DFE0     	 b .L134
 1979              	.L141:
 862:../cleanflight/src/main/sensors/gyro.c ****         // Reset g[axis] at start of calibration
 863:../cleanflight/src/main/sensors/gyro.c ****         if (isOnFirstGyroCalibrationCycle(&gyroSensor->calibration)) {
 1980              	 .loc 3 863 0
 1981 0012 7B68     	 ldr r3,[r7,#4]
 1982 0014 6533     	 adds r3,r3,#101
 1983 0016 1846     	 mov r0,r3
 1984 0018 FFF7FEFF 	 bl isOnFirstGyroCalibrationCycle
 1985 001c 0346     	 mov r3,r0
 1986 001e 002B     	 cmp r3,#0
 1987 0020 1DD0     	 beq .L135
 864:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->calibration.sum[axis] = 0.0f;
 1988              	 .loc 3 864 0
 1989 0022 7A68     	 ldr r2,[r7,#4]
 1990 0024 FB68     	 ldr r3,[r7,#12]
 1991 0026 1833     	 adds r3,r3,#24
 1992 0028 9B00     	 lsls r3,r3,#2
 1993 002a 1344     	 add r3,r3,r2
 1994 002c 0533     	 adds r3,r3,#5
 1995 002e 4FF00002 	 mov r2,#0
 1996 0032 1A60     	 str r2,[r3]
 865:../cleanflight/src/main/sensors/gyro.c ****             devClear(&gyroSensor->calibration.var[axis]);
 1997              	 .loc 3 865 0
 1998 0034 FA68     	 ldr r2,[r7,#12]
 1999 0036 1346     	 mov r3,r2
 2000 0038 9B00     	 lsls r3,r3,#2
 2001 003a 1344     	 add r3,r3,r2
 2002 003c 9B00     	 lsls r3,r3,#2
 2003 003e 6833     	 adds r3,r3,#104
 2004 0040 7A68     	 ldr r2,[r7,#4]
 2005 0042 1344     	 add r3,r3,r2
 2006 0044 0933     	 adds r3,r3,#9
 2007 0046 1846     	 mov r0,r3
 2008 0048 FFF7FEFF 	 bl devClear
 866:../cleanflight/src/main/sensors/gyro.c ****             // gyroZero is set to zero until calibration complete
 867:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->gyroDev.gyroZero[axis] = 0.0f;
 2009              	 .loc 3 867 0
 2010 004c 7A68     	 ldr r2,[r7,#4]
 2011 004e FB68     	 ldr r3,[r7,#12]
 2012 0050 0633     	 adds r3,r3,#6
 2013 0052 9B00     	 lsls r3,r3,#2
 2014 0054 1344     	 add r3,r3,r2
 2015 0056 0533     	 adds r3,r3,#5
 2016 0058 4FF00002 	 mov r2,#0
 2017 005c 1A60     	 str r2,[r3]
 2018              	.L135:
 868:../cleanflight/src/main/sensors/gyro.c ****         }
 869:../cleanflight/src/main/sensors/gyro.c **** 
 870:../cleanflight/src/main/sensors/gyro.c ****         // Sum up CALIBRATING_GYRO_TIME_US readings
 871:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->calibration.sum[axis] += gyroSensor->gyroDev.gyroADCRaw[axis];
 2019              	 .loc 3 871 0
 2020 005e 7A68     	 ldr r2,[r7,#4]
 2021 0060 FB68     	 ldr r3,[r7,#12]
 2022 0062 1833     	 adds r3,r3,#24
 2023 0064 9B00     	 lsls r3,r3,#2
 2024 0066 1344     	 add r3,r3,r2
 2025 0068 D3F80510 	 ldr r1,[r3,#5]
 2026 006c 0B46     	 mov r3,r1
 2027 006e 1946     	 mov r1,r3
 2028 0070 7A68     	 ldr r2,[r7,#4]
 2029 0072 FB68     	 ldr r3,[r7,#12]
 2030 0074 2433     	 adds r3,r3,#36
 2031 0076 5B00     	 lsls r3,r3,#1
 2032 0078 1344     	 add r3,r3,r2
 2033 007a B3F90530 	 ldrsh r3,[r3,#5]
 2034 007e 9BB2     	 uxth r3,r3
 2035 0080 1BB2     	 sxth r3,r3
 2036 0082 07EE903A 	 fmsr s15,r3
 2037 0086 F8EEE77A 	 fsitos s15,s15
 2038 008a 07EE101A 	 fmsr s14,r1
 2039 008e 77EE277A 	 fadds s15,s14,s15
 2040 0092 7A68     	 ldr r2,[r7,#4]
 2041 0094 FB68     	 ldr r3,[r7,#12]
 2042 0096 1833     	 adds r3,r3,#24
 2043 0098 9B00     	 lsls r3,r3,#2
 2044 009a 1344     	 add r3,r3,r2
 2045 009c 0533     	 adds r3,r3,#5
 2046 009e 17EE902A 	 fmrs r2,s15
 2047 00a2 1A60     	 str r2,[r3]
 872:../cleanflight/src/main/sensors/gyro.c ****         devPush(&gyroSensor->calibration.var[axis], gyroSensor->gyroDev.gyroADCRaw[axis]);
 2048              	 .loc 3 872 0
 2049 00a4 FA68     	 ldr r2,[r7,#12]
 2050 00a6 1346     	 mov r3,r2
 2051 00a8 9B00     	 lsls r3,r3,#2
 2052 00aa 1344     	 add r3,r3,r2
 2053 00ac 9B00     	 lsls r3,r3,#2
 2054 00ae 6833     	 adds r3,r3,#104
 2055 00b0 7A68     	 ldr r2,[r7,#4]
 2056 00b2 1344     	 add r3,r3,r2
 2057 00b4 03F10901 	 add r1,r3,#9
 2058 00b8 7A68     	 ldr r2,[r7,#4]
 2059 00ba FB68     	 ldr r3,[r7,#12]
 2060 00bc 2433     	 adds r3,r3,#36
 2061 00be 5B00     	 lsls r3,r3,#1
 2062 00c0 1344     	 add r3,r3,r2
 2063 00c2 B3F90530 	 ldrsh r3,[r3,#5]
 2064 00c6 9BB2     	 uxth r3,r3
 2065 00c8 1BB2     	 sxth r3,r3
 2066 00ca 07EE903A 	 fmsr s15,r3
 2067 00ce F8EEE77A 	 fsitos s15,s15
 2068 00d2 0846     	 mov r0,r1
 2069 00d4 17EE901A 	 fmrs r1,s15
 2070 00d8 FFF7FEFF 	 bl devPush
 873:../cleanflight/src/main/sensors/gyro.c **** 
 874:../cleanflight/src/main/sensors/gyro.c ****         if (isOnFinalGyroCalibrationCycle(&gyroSensor->calibration)) {
 2071              	 .loc 3 874 0
 2072 00dc 7B68     	 ldr r3,[r7,#4]
 2073 00de 6533     	 adds r3,r3,#101
 2074 00e0 1846     	 mov r0,r3
 2075 00e2 FFF7FEFF 	 bl isOnFinalGyroCalibrationCycle
 2076 00e6 0346     	 mov r3,r0
 2077 00e8 002B     	 cmp r3,#0
 2078 00ea 6FD0     	 beq .L136
 2079              	.LBB9:
 875:../cleanflight/src/main/sensors/gyro.c ****             const float stddev = devStandardDeviation(&gyroSensor->calibration.var[axis]);
 2080              	 .loc 3 875 0
 2081 00ec FA68     	 ldr r2,[r7,#12]
 2082 00ee 1346     	 mov r3,r2
 2083 00f0 9B00     	 lsls r3,r3,#2
 2084 00f2 1344     	 add r3,r3,r2
 2085 00f4 9B00     	 lsls r3,r3,#2
 2086 00f6 6833     	 adds r3,r3,#104
 2087 00f8 7A68     	 ldr r2,[r7,#4]
 2088 00fa 1344     	 add r3,r3,r2
 2089 00fc 0933     	 adds r3,r3,#9
 2090 00fe 1846     	 mov r0,r3
 2091 0100 FFF7FEFF 	 bl devStandardDeviation
 2092 0104 B860     	 str r0,[r7,#8]
 876:../cleanflight/src/main/sensors/gyro.c ****             // DEBUG_GYRO_CALIBRATION records the standard deviation of roll
 877:../cleanflight/src/main/sensors/gyro.c ****             // into the spare field - debug[3], in DEBUG_GYRO_RAW
 878:../cleanflight/src/main/sensors/gyro.c ****             if (axis == X) {
 2093              	 .loc 3 878 0
 2094 0106 FB68     	 ldr r3,[r7,#12]
 2095 0108 002B     	 cmp r3,#0
 2096 010a 0AD1     	 bne .L137
 879:../cleanflight/src/main/sensors/gyro.c ****                 DEBUG_SET(DEBUG_GYRO_RAW, DEBUG_GYRO_CALIBRATION, lrintf(stddev));
 2097              	 .loc 3 879 0
 2098 010c 464B     	 ldr r3,.L145
 2099 010e 1B78     	 ldrb r3,[r3]
 2100 0110 132B     	 cmp r3,#19
 2101 0112 06D1     	 bne .L137
 2102              	 .loc 3 879 0 is_stmt 0 discriminator 1
 2103 0114 B868     	 ldr r0,[r7,#8]
 2104 0116 FFF7FEFF 	 bl lrintf
 2105 011a 0346     	 mov r3,r0
 2106 011c 9AB2     	 uxth r2,r3
 2107 011e 434B     	 ldr r3,.L145+4
 2108 0120 DA80     	 strh r2,[r3,#6]
 2109              	.L137:
 880:../cleanflight/src/main/sensors/gyro.c ****             }
 881:../cleanflight/src/main/sensors/gyro.c **** 
 882:../cleanflight/src/main/sensors/gyro.c ****             // check deviation and startover in case the model was moved
 883:../cleanflight/src/main/sensors/gyro.c ****             if (gyroMovementCalibrationThreshold && stddev > gyroMovementCalibrationThreshold) {
 2110              	 .loc 3 883 0 is_stmt 1
 2111 0122 FB78     	 ldrb r3,[r7,#3]
 2112 0124 002B     	 cmp r3,#0
 2113 0126 0FD0     	 beq .L138
 2114              	 .loc 3 883 0 is_stmt 0 discriminator 1
 2115 0128 FB78     	 ldrb r3,[r7,#3]
 2116 012a 07EE903A 	 fmsr s15,r3
 2117 012e B8EEE77A 	 fsitos s14,s15
 2118 0132 D7ED027A 	 flds s15,[r7,#8]
 2119 0136 B4EEE77A 	 fcmpes s14,s15
 2120 013a F1EE10FA 	 fmstat
 2121 013e 03D5     	 bpl .L138
 884:../cleanflight/src/main/sensors/gyro.c ****                 gyroSetCalibrationCycles(gyroSensor);
 2122              	 .loc 3 884 0 is_stmt 1
 2123 0140 7868     	 ldr r0,[r7,#4]
 2124 0142 FFF7FEFF 	 bl gyroSetCalibrationCycles
 885:../cleanflight/src/main/sensors/gyro.c ****                 return;
 2125              	 .loc 3 885 0
 2126 0146 6BE0     	 b .L133
 2127              	.L138:
 886:../cleanflight/src/main/sensors/gyro.c ****             }
 887:../cleanflight/src/main/sensors/gyro.c **** 
 888:../cleanflight/src/main/sensors/gyro.c ****             // please take care with exotic boardalignment !!
 889:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->gyroDev.gyroZero[axis] = gyroSensor->calibration.sum[axis] / gyroCalculateC
 2128              	 .loc 3 889 0
 2129 0148 7A68     	 ldr r2,[r7,#4]
 2130 014a FB68     	 ldr r3,[r7,#12]
 2131 014c 1833     	 adds r3,r3,#24
 2132 014e 9B00     	 lsls r3,r3,#2
 2133 0150 1344     	 add r3,r3,r2
 2134 0152 D3F80540 	 ldr r4,[r3,#5]
 2135 0156 2346     	 mov r3,r4
 2136 0158 1C46     	 mov r4,r3
 2137 015a FFF7FEFF 	 bl gyroCalculateCalibratingCycles
 2138 015e 07EE900A 	 fmsr s15,r0
 2139 0162 F8EEE77A 	 fsitos s15,s15
 2140 0166 07EE104A 	 fmsr s14,r4
 2141 016a C7EE277A 	 fdivs s15,s14,s15
 2142 016e 7A68     	 ldr r2,[r7,#4]
 2143 0170 FB68     	 ldr r3,[r7,#12]
 2144 0172 0633     	 adds r3,r3,#6
 2145 0174 9B00     	 lsls r3,r3,#2
 2146 0176 1344     	 add r3,r3,r2
 2147 0178 0533     	 adds r3,r3,#5
 2148 017a 17EE902A 	 fmrs r2,s15
 2149 017e 1A60     	 str r2,[r3]
 890:../cleanflight/src/main/sensors/gyro.c ****             if (axis == Z) {
 2150              	 .loc 3 890 0
 2151 0180 FB68     	 ldr r3,[r7,#12]
 2152 0182 022B     	 cmp r3,#2
 2153 0184 22D1     	 bne .L136
 891:../cleanflight/src/main/sensors/gyro.c ****               gyroSensor->gyroDev.gyroZero[axis] -= ((float)gyroConfig()->gyro_offset_yaw / 100);
 2154              	 .loc 3 891 0
 2155 0186 FFF7FEFF 	 bl gyroConfig
 2156 018a 0346     	 mov r3,r0
 2157 018c B3F91430 	 ldrsh r3,[r3,#20]
 2158 0190 9BB2     	 uxth r3,r3
 2159 0192 1BB2     	 sxth r3,r3
 2160 0194 07EE903A 	 fmsr s15,r3
 2161 0198 F8EEE77A 	 fsitos s15,s15
 2162 019c 9FED247A 	 flds s14,.L145+8
 2163 01a0 C7EE877A 	 fdivs s15,s15,s14
 2164 01a4 7A68     	 ldr r2,[r7,#4]
 2165 01a6 FB68     	 ldr r3,[r7,#12]
 2166 01a8 0633     	 adds r3,r3,#6
 2167 01aa 9B00     	 lsls r3,r3,#2
 2168 01ac 1344     	 add r3,r3,r2
 2169 01ae D3F80530 	 ldr r3,[r3,#5]
 2170 01b2 07EE103A 	 fmsr s14,r3
 2171 01b6 77EE677A 	 fsubs s15,s14,s15
 2172 01ba 7A68     	 ldr r2,[r7,#4]
 2173 01bc FB68     	 ldr r3,[r7,#12]
 2174 01be 0633     	 adds r3,r3,#6
 2175 01c0 9B00     	 lsls r3,r3,#2
 2176 01c2 1344     	 add r3,r3,r2
 2177 01c4 0533     	 adds r3,r3,#5
 2178 01c6 17EE902A 	 fmrs r2,s15
 2179 01ca 1A60     	 str r2,[r3]
 2180              	.L136:
 2181              	.LBE9:
 861:../cleanflight/src/main/sensors/gyro.c ****         // Reset g[axis] at start of calibration
 2182              	 .loc 3 861 0 discriminator 2
 2183 01cc FB68     	 ldr r3,[r7,#12]
 2184 01ce 0133     	 adds r3,r3,#1
 2185 01d0 FB60     	 str r3,[r7,#12]
 2186              	.L134:
 861:../cleanflight/src/main/sensors/gyro.c ****         // Reset g[axis] at start of calibration
 2187              	 .loc 3 861 0 is_stmt 0 discriminator 1
 2188 01d2 FB68     	 ldr r3,[r7,#12]
 2189 01d4 022B     	 cmp r3,#2
 2190 01d6 7FF71CAF 	 ble .L141
 2191              	.LBE8:
 892:../cleanflight/src/main/sensors/gyro.c ****             }
 893:../cleanflight/src/main/sensors/gyro.c ****         }
 894:../cleanflight/src/main/sensors/gyro.c ****     }
 895:../cleanflight/src/main/sensors/gyro.c **** 
 896:../cleanflight/src/main/sensors/gyro.c ****     if (isOnFinalGyroCalibrationCycle(&gyroSensor->calibration)) {
 2192              	 .loc 3 896 0 is_stmt 1
 2193 01da 7B68     	 ldr r3,[r7,#4]
 2194 01dc 6533     	 adds r3,r3,#101
 2195 01de 1846     	 mov r0,r3
 2196 01e0 FFF7FEFF 	 bl isOnFinalGyroCalibrationCycle
 2197 01e4 0346     	 mov r3,r0
 2198 01e6 002B     	 cmp r3,#0
 2199 01e8 13D0     	 beq .L142
 897:../cleanflight/src/main/sensors/gyro.c ****         schedulerResetTaskStatistics(TASK_SELF); // so calibration cycles do not pollute tasks stat
 2200              	 .loc 3 897 0
 2201 01ea 1620     	 movs r0,#22
 2202 01ec FFF7FEFF 	 bl schedulerResetTaskStatistics
 898:../cleanflight/src/main/sensors/gyro.c ****         if (!firstArmingCalibrationWasStarted || (getArmingDisableFlags() & ~ARMING_DISABLED_CALIBR
 2203              	 .loc 3 898 0
 2204 01f0 104B     	 ldr r3,.L145+12
 2205 01f2 1B78     	 ldrb r3,[r3]
 2206 01f4 83F00103 	 eor r3,r3,#1
 2207 01f8 DBB2     	 uxtb r3,r3
 2208 01fa 002B     	 cmp r3,#0
 2209 01fc 06D1     	 bne .L143
 2210              	 .loc 3 898 0 is_stmt 0 discriminator 1
 2211 01fe FFF7FEFF 	 bl getArmingDisableFlags
 2212 0202 0346     	 mov r3,r0
 2213 0204 23F40063 	 bic r3,r3,#2048
 2214 0208 002B     	 cmp r3,#0
 2215 020a 02D1     	 bne .L142
 2216              	.L143:
 899:../cleanflight/src/main/sensors/gyro.c ****             beeper(BEEPER_GYRO_CALIBRATED);
 2217              	 .loc 3 899 0 is_stmt 1
 2218 020c 0120     	 movs r0,#1
 2219 020e FFF7FEFF 	 bl beeper
 2220              	.L142:
 900:../cleanflight/src/main/sensors/gyro.c ****         }
 901:../cleanflight/src/main/sensors/gyro.c ****     }
 902:../cleanflight/src/main/sensors/gyro.c ****     --gyroSensor->calibration.cyclesRemaining;
 2221              	 .loc 3 902 0
 2222 0212 7B68     	 ldr r3,[r7,#4]
 2223 0214 D3F8AD30 	 ldr r3,[r3,#173]
 2224 0218 5A1E     	 subs r2,r3,#1
 2225 021a 7B68     	 ldr r3,[r7,#4]
 2226 021c C3F8AD20 	 str r2,[r3,#173]
 2227              	.L133:
 903:../cleanflight/src/main/sensors/gyro.c **** 
 904:../cleanflight/src/main/sensors/gyro.c **** }
 2228              	 .loc 3 904 0
 2229 0220 1437     	 adds r7,r7,#20
 2230              	.LCFI111:
 2231              	 .cfi_def_cfa_offset 12
 2232 0222 BD46     	 mov sp,r7
 2233              	.LCFI112:
 2234              	 .cfi_def_cfa_register 13
 2235              	 
 2236 0224 90BD     	 pop {r4,r7,pc}
 2237              	.L146:
 2238 0226 00BF     	 .align 2
 2239              	.L145:
 2240 0228 00000000 	 .word debugMode
 2241 022c 00000000 	 .word debug
 2242 0230 0000C842 	 .word 1120403456
 2243 0234 00000000 	 .word firstArmingCalibrationWasStarted
 2244              	 .cfi_endproc
 2245              	.LFE564:
 2247              	 .section .text.handleOverflow,"ax",%progbits
 2248              	 .align 2
 2249              	 .thumb
 2250              	 .thumb_func
 2252              	handleOverflow:
 2253              	.LFB565:
 905:../cleanflight/src/main/sensors/gyro.c **** 
 906:../cleanflight/src/main/sensors/gyro.c **** #if defined(USE_GYRO_SLEW_LIMITER)
 907:../cleanflight/src/main/sensors/gyro.c **** FAST_CODE int32_t gyroSlewLimiter(gyroSensor_t *gyroSensor, int axis)
 908:../cleanflight/src/main/sensors/gyro.c **** {
 909:../cleanflight/src/main/sensors/gyro.c ****     int32_t ret = (int32_t)gyroSensor->gyroDev.gyroADCRaw[axis];
 910:../cleanflight/src/main/sensors/gyro.c ****     if (gyroConfig()->checkOverflow || gyroHasOverflowProtection) {
 911:../cleanflight/src/main/sensors/gyro.c ****         // don't use the slew limiter if overflow checking is on or gyro is not subject to overflow
 912:../cleanflight/src/main/sensors/gyro.c ****         return ret;
 913:../cleanflight/src/main/sensors/gyro.c ****     }
 914:../cleanflight/src/main/sensors/gyro.c ****     if (abs(ret - gyroSensor->gyroDev.gyroADCRawPrevious[axis]) > (1<<14)) {
 915:../cleanflight/src/main/sensors/gyro.c ****         // there has been a large change in value, so assume overflow has occurred and return the p
 916:../cleanflight/src/main/sensors/gyro.c ****         ret = gyroSensor->gyroDev.gyroADCRawPrevious[axis];
 917:../cleanflight/src/main/sensors/gyro.c ****     } else {
 918:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroADCRawPrevious[axis] = ret;
 919:../cleanflight/src/main/sensors/gyro.c ****     }
 920:../cleanflight/src/main/sensors/gyro.c ****     return ret;
 921:../cleanflight/src/main/sensors/gyro.c **** }
 922:../cleanflight/src/main/sensors/gyro.c **** #endif
 923:../cleanflight/src/main/sensors/gyro.c **** 
 924:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_OVERFLOW_CHECK
 925:../cleanflight/src/main/sensors/gyro.c **** static FAST_CODE_NOINLINE void handleOverflow(gyroSensor_t *gyroSensor, timeUs_t currentTimeUs)
 926:../cleanflight/src/main/sensors/gyro.c **** {
 2254              	 .loc 3 926 0
 2255              	 .cfi_startproc
 2256              	 
 2257              	 
 2258 0000 80B5     	 push {r7,lr}
 2259              	.LCFI113:
 2260              	 .cfi_def_cfa_offset 8
 2261              	 .cfi_offset 7,-8
 2262              	 .cfi_offset 14,-4
 2263 0002 84B0     	 sub sp,sp,#16
 2264              	.LCFI114:
 2265              	 .cfi_def_cfa_offset 24
 2266 0004 00AF     	 add r7,sp,#0
 2267              	.LCFI115:
 2268              	 .cfi_def_cfa_register 7
 2269 0006 7860     	 str r0,[r7,#4]
 2270 0008 3960     	 str r1,[r7]
 927:../cleanflight/src/main/sensors/gyro.c ****     const float gyroOverflowResetRate = GYRO_OVERFLOW_RESET_THRESHOLD * gyroSensor->gyroDev.scale;
 2271              	 .loc 3 927 0
 2272 000a 7B68     	 ldr r3,[r7,#4]
 2273 000c D3F81930 	 ldr r3,[r3,#25]
 2274 0010 DFED317A 	 flds s15,.L157
 2275 0014 07EE103A 	 fmsr s14,r3
 2276 0018 67EE277A 	 fmuls s15,s14,s15
 2277 001c C7ED037A 	 fsts s15,[r7,#12]
 928:../cleanflight/src/main/sensors/gyro.c ****     if ((abs(gyro.gyroADCf[X]) < gyroOverflowResetRate)
 2278              	 .loc 3 928 0
 2279 0020 2E4B     	 ldr r3,.L157+4
 2280 0022 5B68     	 ldr r3,[r3,#4]
 2281 0024 07EE903A 	 fmsr s15,r3
 2282 0028 FDEEE77A 	 ftosizs s15,s15
 2283 002c 17EE903A 	 fmrs r3,s15
 2284 0030 002B     	 cmp r3,#0
 2285 0032 B8BF     	 it lt
 2286 0034 5B42     	 rsblt r3,r3,#0
 2287 0036 07EE903A 	 fmsr s15,r3
 2288 003a B8EEE77A 	 fsitos s14,s15
 2289 003e D7ED037A 	 flds s15,[r7,#12]
 2290 0042 B4EEE77A 	 fcmpes s14,s15
 2291 0046 F1EE10FA 	 fmstat
 2292 004a 3DD5     	 bpl .L148
 929:../cleanflight/src/main/sensors/gyro.c ****           && (abs(gyro.gyroADCf[Y]) < gyroOverflowResetRate)
 2293              	 .loc 3 929 0
 2294 004c 234B     	 ldr r3,.L157+4
 2295 004e 9B68     	 ldr r3,[r3,#8]
 2296 0050 07EE903A 	 fmsr s15,r3
 2297 0054 FDEEE77A 	 ftosizs s15,s15
 2298 0058 17EE903A 	 fmrs r3,s15
 2299 005c 002B     	 cmp r3,#0
 2300 005e B8BF     	 it lt
 2301 0060 5B42     	 rsblt r3,r3,#0
 2302 0062 07EE903A 	 fmsr s15,r3
 2303 0066 B8EEE77A 	 fsitos s14,s15
 2304 006a D7ED037A 	 flds s15,[r7,#12]
 2305 006e B4EEE77A 	 fcmpes s14,s15
 2306 0072 F1EE10FA 	 fmstat
 2307 0076 27D5     	 bpl .L148
 930:../cleanflight/src/main/sensors/gyro.c ****           && (abs(gyro.gyroADCf[Z]) < gyroOverflowResetRate)) {
 2308              	 .loc 3 930 0
 2309 0078 184B     	 ldr r3,.L157+4
 2310 007a DB68     	 ldr r3,[r3,#12]
 2311 007c 07EE903A 	 fmsr s15,r3
 2312 0080 FDEEE77A 	 ftosizs s15,s15
 2313 0084 17EE903A 	 fmrs r3,s15
 2314 0088 002B     	 cmp r3,#0
 2315 008a B8BF     	 it lt
 2316 008c 5B42     	 rsblt r3,r3,#0
 2317 008e 07EE903A 	 fmsr s15,r3
 2318 0092 B8EEE77A 	 fsitos s14,s15
 2319 0096 D7ED037A 	 flds s15,[r7,#12]
 2320 009a B4EEE77A 	 fcmpes s14,s15
 2321 009e F1EE10FA 	 fmstat
 2322 00a2 11D5     	 bpl .L148
 931:../cleanflight/src/main/sensors/gyro.c ****         // if we have 50ms of consecutive OK gyro vales, then assume yaw readings are OK again and 
 932:../cleanflight/src/main/sensors/gyro.c ****         // reset requires good OK values on all axes
 933:../cleanflight/src/main/sensors/gyro.c ****         if (cmpTimeUs(currentTimeUs, gyroSensor->overflowTimeUs) > 50000) {
 2323              	 .loc 3 933 0
 2324 00a4 7B68     	 ldr r3,[r7,#4]
 2325 00a6 D3F8E132 	 ldr r3,[r3,#737]
 2326 00aa 3868     	 ldr r0,[r7]
 2327 00ac 1946     	 mov r1,r3
 2328 00ae FFF7FEFF 	 bl cmpTimeUs
 2329 00b2 0246     	 mov r2,r0
 2330 00b4 4CF25033 	 movw r3,#50000
 2331 00b8 9A42     	 cmp r2,r3
 2332 00ba 04DD     	 ble .L152
 934:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->overflowDetected = false;
 2333              	 .loc 3 934 0
 2334 00bc 7B68     	 ldr r3,[r7,#4]
 2335 00be 0022     	 movs r2,#0
 2336 00c0 83F8E522 	 strb r2,[r3,#741]
 933:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->overflowDetected = false;
 2337              	 .loc 3 933 0
 2338 00c4 04E0     	 b .L147
 2339              	.L152:
 2340 00c6 03E0     	 b .L147
 2341              	.L148:
 935:../cleanflight/src/main/sensors/gyro.c ****         }
 936:../cleanflight/src/main/sensors/gyro.c ****     } else {
 937:../cleanflight/src/main/sensors/gyro.c ****         // not a consecutive OK value, so reset the overflow time
 938:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->overflowTimeUs = currentTimeUs;
 2342              	 .loc 3 938 0
 2343 00c8 7B68     	 ldr r3,[r7,#4]
 2344 00ca 3A68     	 ldr r2,[r7]
 2345 00cc C3F8E122 	 str r2,[r3,#737]
 2346              	.L147:
 939:../cleanflight/src/main/sensors/gyro.c ****     }
 940:../cleanflight/src/main/sensors/gyro.c **** }
 2347              	 .loc 3 940 0
 2348 00d0 1037     	 adds r7,r7,#16
 2349              	.LCFI116:
 2350              	 .cfi_def_cfa_offset 8
 2351 00d2 BD46     	 mov sp,r7
 2352              	.LCFI117:
 2353              	 .cfi_def_cfa_register 13
 2354              	 
 2355 00d4 80BD     	 pop {r7,pc}
 2356              	.L158:
 2357 00d6 00BF     	 .align 2
 2358              	.L157:
 2359 00d8 0008ED46 	 .word 1189939200
 2360 00dc 00000000 	 .word gyro
 2361              	 .cfi_endproc
 2362              	.LFE565:
 2364              	 .section .text.checkForOverflow,"ax",%progbits
 2365              	 .align 2
 2366              	 .thumb
 2367              	 .thumb_func
 2369              	checkForOverflow:
 2370              	.LFB566:
 941:../cleanflight/src/main/sensors/gyro.c **** 
 942:../cleanflight/src/main/sensors/gyro.c **** static FAST_CODE void checkForOverflow(gyroSensor_t *gyroSensor, timeUs_t currentTimeUs)
 943:../cleanflight/src/main/sensors/gyro.c **** {
 2371              	 .loc 3 943 0
 2372              	 .cfi_startproc
 2373              	 
 2374              	 
 2375 0000 80B5     	 push {r7,lr}
 2376              	.LCFI118:
 2377              	 .cfi_def_cfa_offset 8
 2378              	 .cfi_offset 7,-8
 2379              	 .cfi_offset 14,-4
 2380 0002 84B0     	 sub sp,sp,#16
 2381              	.LCFI119:
 2382              	 .cfi_def_cfa_offset 24
 2383 0004 00AF     	 add r7,sp,#0
 2384              	.LCFI120:
 2385              	 .cfi_def_cfa_register 7
 2386 0006 7860     	 str r0,[r7,#4]
 2387 0008 3960     	 str r1,[r7]
 944:../cleanflight/src/main/sensors/gyro.c ****     // check for overflow to handle Yaw Spin To The Moon (YSTTM)
 945:../cleanflight/src/main/sensors/gyro.c ****     // ICM gyros are specified to +/- 2000 deg/sec, in a crash they can go out of spec.
 946:../cleanflight/src/main/sensors/gyro.c ****     // This can cause an overflow and sign reversal in the output.
 947:../cleanflight/src/main/sensors/gyro.c ****     // Overflow and sign reversal seems to result in a gyro value of +1996 or -1996.
 948:../cleanflight/src/main/sensors/gyro.c ****     if (gyroSensor->overflowDetected) {
 2388              	 .loc 3 948 0
 2389 000a 7B68     	 ldr r3,[r7,#4]
 2390 000c 93F8E532 	 ldrb r3,[r3,#741]
 2391 0010 002B     	 cmp r3,#0
 2392 0012 04D0     	 beq .L160
 949:../cleanflight/src/main/sensors/gyro.c ****         handleOverflow(gyroSensor, currentTimeUs);
 2393              	 .loc 3 949 0
 2394 0014 7868     	 ldr r0,[r7,#4]
 2395 0016 3968     	 ldr r1,[r7]
 2396 0018 FFF7FEFF 	 bl handleOverflow
 2397 001c 6DE0     	 b .L159
 2398              	.L160:
 2399              	.LBB10:
 950:../cleanflight/src/main/sensors/gyro.c ****     } else {
 951:../cleanflight/src/main/sensors/gyro.c **** #ifndef SIMULATOR_BUILD
 952:../cleanflight/src/main/sensors/gyro.c ****         // check for overflow in the axes set in overflowAxisMask
 953:../cleanflight/src/main/sensors/gyro.c ****         gyroOverflow_e overflowCheck = GYRO_OVERFLOW_NONE;
 2400              	 .loc 3 953 0
 2401 001e 0023     	 movs r3,#0
 2402 0020 FB73     	 strb r3,[r7,#15]
 954:../cleanflight/src/main/sensors/gyro.c ****         const float gyroOverflowTriggerRate = GYRO_OVERFLOW_TRIGGER_THRESHOLD * gyroSensor->gyroDev
 2403              	 .loc 3 954 0
 2404 0022 7B68     	 ldr r3,[r7,#4]
 2405 0024 D3F81930 	 ldr r3,[r3,#25]
 2406 0028 DFED357A 	 flds s15,.L171
 2407 002c 07EE103A 	 fmsr s14,r3
 2408 0030 67EE277A 	 fmuls s15,s14,s15
 2409 0034 C7ED027A 	 fsts s15,[r7,#8]
 955:../cleanflight/src/main/sensors/gyro.c ****         if (abs(gyro.gyroADCf[X]) > gyroOverflowTriggerRate) {
 2410              	 .loc 3 955 0
 2411 0038 324B     	 ldr r3,.L171+4
 2412 003a 5B68     	 ldr r3,[r3,#4]
 2413 003c 07EE903A 	 fmsr s15,r3
 2414 0040 FDEEE77A 	 ftosizs s15,s15
 2415 0044 17EE903A 	 fmrs r3,s15
 2416 0048 002B     	 cmp r3,#0
 2417 004a B8BF     	 it lt
 2418 004c 5B42     	 rsblt r3,r3,#0
 2419 004e 07EE903A 	 fmsr s15,r3
 2420 0052 B8EEE77A 	 fsitos s14,s15
 2421 0056 D7ED027A 	 flds s15,[r7,#8]
 2422 005a B4EEE77A 	 fcmpes s14,s15
 2423 005e F1EE10FA 	 fmstat
 2424 0062 03DD     	 ble .L162
 956:../cleanflight/src/main/sensors/gyro.c ****             overflowCheck |= GYRO_OVERFLOW_X;
 2425              	 .loc 3 956 0
 2426 0064 FB7B     	 ldrb r3,[r7,#15]
 2427 0066 43F00103 	 orr r3,r3,#1
 2428 006a FB73     	 strb r3,[r7,#15]
 2429              	.L162:
 957:../cleanflight/src/main/sensors/gyro.c ****         }
 958:../cleanflight/src/main/sensors/gyro.c ****         if (abs(gyro.gyroADCf[Y]) > gyroOverflowTriggerRate) {
 2430              	 .loc 3 958 0
 2431 006c 254B     	 ldr r3,.L171+4
 2432 006e 9B68     	 ldr r3,[r3,#8]
 2433 0070 07EE903A 	 fmsr s15,r3
 2434 0074 FDEEE77A 	 ftosizs s15,s15
 2435 0078 17EE903A 	 fmrs r3,s15
 2436 007c 002B     	 cmp r3,#0
 2437 007e B8BF     	 it lt
 2438 0080 5B42     	 rsblt r3,r3,#0
 2439 0082 07EE903A 	 fmsr s15,r3
 2440 0086 B8EEE77A 	 fsitos s14,s15
 2441 008a D7ED027A 	 flds s15,[r7,#8]
 2442 008e B4EEE77A 	 fcmpes s14,s15
 2443 0092 F1EE10FA 	 fmstat
 2444 0096 03DD     	 ble .L164
 959:../cleanflight/src/main/sensors/gyro.c ****             overflowCheck |= GYRO_OVERFLOW_Y;
 2445              	 .loc 3 959 0
 2446 0098 FB7B     	 ldrb r3,[r7,#15]
 2447 009a 43F00203 	 orr r3,r3,#2
 2448 009e FB73     	 strb r3,[r7,#15]
 2449              	.L164:
 960:../cleanflight/src/main/sensors/gyro.c ****         }
 961:../cleanflight/src/main/sensors/gyro.c ****         if (abs(gyro.gyroADCf[Z]) > gyroOverflowTriggerRate) {
 2450              	 .loc 3 961 0
 2451 00a0 184B     	 ldr r3,.L171+4
 2452 00a2 DB68     	 ldr r3,[r3,#12]
 2453 00a4 07EE903A 	 fmsr s15,r3
 2454 00a8 FDEEE77A 	 ftosizs s15,s15
 2455 00ac 17EE903A 	 fmrs r3,s15
 2456 00b0 002B     	 cmp r3,#0
 2457 00b2 B8BF     	 it lt
 2458 00b4 5B42     	 rsblt r3,r3,#0
 2459 00b6 07EE903A 	 fmsr s15,r3
 2460 00ba B8EEE77A 	 fsitos s14,s15
 2461 00be D7ED027A 	 flds s15,[r7,#8]
 2462 00c2 B4EEE77A 	 fcmpes s14,s15
 2463 00c6 F1EE10FA 	 fmstat
 2464 00ca 03DD     	 ble .L166
 962:../cleanflight/src/main/sensors/gyro.c ****             overflowCheck |= GYRO_OVERFLOW_Z;
 2465              	 .loc 3 962 0
 2466 00cc FB7B     	 ldrb r3,[r7,#15]
 2467 00ce 43F00403 	 orr r3,r3,#4
 2468 00d2 FB73     	 strb r3,[r7,#15]
 2469              	.L166:
 963:../cleanflight/src/main/sensors/gyro.c ****         }
 964:../cleanflight/src/main/sensors/gyro.c ****         if (overflowCheck & overflowAxisMask) {
 2470              	 .loc 3 964 0
 2471 00d4 0C4B     	 ldr r3,.L171+8
 2472 00d6 1A78     	 ldrb r2,[r3]
 2473 00d8 FB7B     	 ldrb r3,[r7,#15]
 2474 00da 1340     	 ands r3,r3,r2
 2475 00dc DBB2     	 uxtb r3,r3
 2476 00de 002B     	 cmp r3,#0
 2477 00e0 0BD0     	 beq .L159
 965:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->overflowDetected = true;
 2478              	 .loc 3 965 0
 2479 00e2 7B68     	 ldr r3,[r7,#4]
 2480 00e4 0122     	 movs r2,#1
 2481 00e6 83F8E522 	 strb r2,[r3,#741]
 966:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->overflowTimeUs = currentTimeUs;
 2482              	 .loc 3 966 0
 2483 00ea 7B68     	 ldr r3,[r7,#4]
 2484 00ec 3A68     	 ldr r2,[r7]
 2485 00ee C3F8E122 	 str r2,[r3,#737]
 967:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_YAW_SPIN_RECOVERY
 968:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->yawSpinDetected = false;
 2486              	 .loc 3 968 0
 2487 00f2 7B68     	 ldr r3,[r7,#4]
 2488 00f4 0022     	 movs r2,#0
 2489 00f6 83F8EA22 	 strb r2,[r3,#746]
 2490              	.L159:
 2491              	.LBE10:
 969:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_YAW_SPIN_RECOVERY
 970:../cleanflight/src/main/sensors/gyro.c ****         }
 971:../cleanflight/src/main/sensors/gyro.c **** #endif // SIMULATOR_BUILD
 972:../cleanflight/src/main/sensors/gyro.c ****     }
 973:../cleanflight/src/main/sensors/gyro.c **** }
 2492              	 .loc 3 973 0
 2493 00fa 1037     	 adds r7,r7,#16
 2494              	.LCFI121:
 2495              	 .cfi_def_cfa_offset 8
 2496 00fc BD46     	 mov sp,r7
 2497              	.LCFI122:
 2498              	 .cfi_def_cfa_register 13
 2499              	 
 2500 00fe 80BD     	 pop {r7,pc}
 2501              	.L172:
 2502              	 .align 2
 2503              	.L171:
 2504 0100 00D8F946 	 .word 1190778880
 2505 0104 00000000 	 .word gyro
 2506 0108 00000000 	 .word overflowAxisMask
 2507              	 .cfi_endproc
 2508              	.LFE566:
 2510              	 .section .text.handleYawSpin,"ax",%progbits
 2511              	 .align 2
 2512              	 .thumb
 2513              	 .thumb_func
 2515              	handleYawSpin:
 2516              	.LFB567:
 974:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_GYRO_OVERFLOW_CHECK
 975:../cleanflight/src/main/sensors/gyro.c **** 
 976:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_YAW_SPIN_RECOVERY
 977:../cleanflight/src/main/sensors/gyro.c **** static FAST_CODE_NOINLINE void handleYawSpin(gyroSensor_t *gyroSensor, timeUs_t currentTimeUs)
 978:../cleanflight/src/main/sensors/gyro.c **** {
 2517              	 .loc 3 978 0
 2518              	 .cfi_startproc
 2519              	 
 2520              	 
 2521 0000 80B5     	 push {r7,lr}
 2522              	.LCFI123:
 2523              	 .cfi_def_cfa_offset 8
 2524              	 .cfi_offset 7,-8
 2525              	 .cfi_offset 14,-4
 2526 0002 84B0     	 sub sp,sp,#16
 2527              	.LCFI124:
 2528              	 .cfi_def_cfa_offset 24
 2529 0004 00AF     	 add r7,sp,#0
 2530              	.LCFI125:
 2531              	 .cfi_def_cfa_register 7
 2532 0006 7860     	 str r0,[r7,#4]
 2533 0008 3960     	 str r1,[r7]
 979:../cleanflight/src/main/sensors/gyro.c ****     const float yawSpinResetRate = gyroConfig()->yaw_spin_threshold - 100.0f;
 2534              	 .loc 3 979 0
 2535 000a FFF7FEFF 	 bl gyroConfig
 2536 000e 0346     	 mov r3,r0
 2537 0010 B3F91A30 	 ldrsh r3,[r3,#26]
 2538 0014 9BB2     	 uxth r3,r3
 2539 0016 1BB2     	 sxth r3,r3
 2540 0018 07EE903A 	 fmsr s15,r3
 2541 001c F8EEE77A 	 fsitos s15,s15
 2542 0020 9FED197A 	 flds s14,.L180
 2543 0024 77EEC77A 	 fsubs s15,s15,s14
 2544 0028 C7ED037A 	 fsts s15,[r7,#12]
 980:../cleanflight/src/main/sensors/gyro.c ****     if (abs(gyro.gyroADCf[Z]) < yawSpinResetRate) {
 2545              	 .loc 3 980 0
 2546 002c 174B     	 ldr r3,.L180+4
 2547 002e DB68     	 ldr r3,[r3,#12]
 2548 0030 07EE903A 	 fmsr s15,r3
 2549 0034 FDEEE77A 	 ftosizs s15,s15
 2550 0038 17EE903A 	 fmrs r3,s15
 2551 003c 002B     	 cmp r3,#0
 2552 003e B8BF     	 it lt
 2553 0040 5B42     	 rsblt r3,r3,#0
 2554 0042 07EE903A 	 fmsr s15,r3
 2555 0046 B8EEE77A 	 fsitos s14,s15
 2556 004a D7ED037A 	 flds s15,[r7,#12]
 2557 004e B4EEE77A 	 fcmpes s14,s15
 2558 0052 F1EE10FA 	 fmstat
 2559 0056 10D5     	 bpl .L179
 981:../cleanflight/src/main/sensors/gyro.c ****         // testing whether 20ms of consecutive OK gyro yaw values is enough
 982:../cleanflight/src/main/sensors/gyro.c ****         if (cmpTimeUs(currentTimeUs, gyroSensor->yawSpinTimeUs) > 20000) {
 2560              	 .loc 3 982 0
 2561 0058 7B68     	 ldr r3,[r7,#4]
 2562 005a D3F8E632 	 ldr r3,[r3,#742]
 2563 005e 3868     	 ldr r0,[r7]
 2564 0060 1946     	 mov r1,r3
 2565 0062 FFF7FEFF 	 bl cmpTimeUs
 2566 0066 0246     	 mov r2,r0
 2567 0068 44F62063 	 movw r3,#20000
 2568 006c 9A42     	 cmp r2,r3
 2569 006e 08DD     	 ble .L173
 983:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->yawSpinDetected = false;
 2570              	 .loc 3 983 0
 2571 0070 7B68     	 ldr r3,[r7,#4]
 2572 0072 0022     	 movs r2,#0
 2573 0074 83F8EA22 	 strb r2,[r3,#746]
 2574 0078 03E0     	 b .L173
 2575              	.L179:
 984:../cleanflight/src/main/sensors/gyro.c ****         }
 985:../cleanflight/src/main/sensors/gyro.c ****     } else {
 986:../cleanflight/src/main/sensors/gyro.c ****         // reset the yaw spin time
 987:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->yawSpinTimeUs = currentTimeUs;
 2576              	 .loc 3 987 0
 2577 007a 7B68     	 ldr r3,[r7,#4]
 2578 007c 3A68     	 ldr r2,[r7]
 2579 007e C3F8E622 	 str r2,[r3,#742]
 2580              	.L173:
 988:../cleanflight/src/main/sensors/gyro.c ****     }
 989:../cleanflight/src/main/sensors/gyro.c **** }
 2581              	 .loc 3 989 0
 2582 0082 1037     	 adds r7,r7,#16
 2583              	.LCFI126:
 2584              	 .cfi_def_cfa_offset 8
 2585 0084 BD46     	 mov sp,r7
 2586              	.LCFI127:
 2587              	 .cfi_def_cfa_register 13
 2588              	 
 2589 0086 80BD     	 pop {r7,pc}
 2590              	.L181:
 2591              	 .align 2
 2592              	.L180:
 2593 0088 0000C842 	 .word 1120403456
 2594 008c 00000000 	 .word gyro
 2595              	 .cfi_endproc
 2596              	.LFE567:
 2598              	 .section .text.checkForYawSpin,"ax",%progbits
 2599              	 .align 2
 2600              	 .thumb
 2601              	 .thumb_func
 2603              	checkForYawSpin:
 2604              	.LFB568:
 990:../cleanflight/src/main/sensors/gyro.c **** 
 991:../cleanflight/src/main/sensors/gyro.c **** static FAST_CODE void checkForYawSpin(gyroSensor_t *gyroSensor, timeUs_t currentTimeUs)
 992:../cleanflight/src/main/sensors/gyro.c **** {
 2605              	 .loc 3 992 0
 2606              	 .cfi_startproc
 2607              	 
 2608              	 
 2609 0000 90B5     	 push {r4,r7,lr}
 2610              	.LCFI128:
 2611              	 .cfi_def_cfa_offset 12
 2612              	 .cfi_offset 4,-12
 2613              	 .cfi_offset 7,-8
 2614              	 .cfi_offset 14,-4
 2615 0002 83B0     	 sub sp,sp,#12
 2616              	.LCFI129:
 2617              	 .cfi_def_cfa_offset 24
 2618 0004 00AF     	 add r7,sp,#0
 2619              	.LCFI130:
 2620              	 .cfi_def_cfa_register 7
 2621 0006 7860     	 str r0,[r7,#4]
 2622 0008 3960     	 str r1,[r7]
 993:../cleanflight/src/main/sensors/gyro.c ****     // if not in overflow mode, handle yaw spins above threshold
 994:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_OVERFLOW_CHECK
 995:../cleanflight/src/main/sensors/gyro.c ****     if (gyroSensor->overflowDetected) {
 2623              	 .loc 3 995 0
 2624 000a 7B68     	 ldr r3,[r7,#4]
 2625 000c 93F8E532 	 ldrb r3,[r3,#741]
 2626 0010 002B     	 cmp r3,#0
 2627 0012 04D0     	 beq .L183
 996:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->yawSpinDetected = false;
 2628              	 .loc 3 996 0
 2629 0014 7B68     	 ldr r3,[r7,#4]
 2630 0016 0022     	 movs r2,#0
 2631 0018 83F8EA22 	 strb r2,[r3,#746]
 997:../cleanflight/src/main/sensors/gyro.c ****         return;
 2632              	 .loc 3 997 0
 2633 001c 26E0     	 b .L182
 2634              	.L183:
 998:../cleanflight/src/main/sensors/gyro.c ****     }
 999:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_GYRO_OVERFLOW_CHECK
1000:../cleanflight/src/main/sensors/gyro.c **** 
1001:../cleanflight/src/main/sensors/gyro.c ****     if (gyroSensor->yawSpinDetected) {
 2635              	 .loc 3 1001 0
 2636 001e 7B68     	 ldr r3,[r7,#4]
 2637 0020 93F8EA32 	 ldrb r3,[r3,#746]
 2638 0024 002B     	 cmp r3,#0
 2639 0026 04D0     	 beq .L185
1002:../cleanflight/src/main/sensors/gyro.c ****         handleYawSpin(gyroSensor, currentTimeUs);
 2640              	 .loc 3 1002 0
 2641 0028 7868     	 ldr r0,[r7,#4]
 2642 002a 3968     	 ldr r1,[r7]
 2643 002c FFF7FEFF 	 bl handleYawSpin
 2644 0030 1CE0     	 b .L182
 2645              	.L185:
1003:../cleanflight/src/main/sensors/gyro.c ****     } else {
1004:../cleanflight/src/main/sensors/gyro.c **** #ifndef SIMULATOR_BUILD
1005:../cleanflight/src/main/sensors/gyro.c ****         // check for spin on yaw axis only
1006:../cleanflight/src/main/sensors/gyro.c ****          if (abs(gyro.gyroADCf[Z]) > gyroConfig()->yaw_spin_threshold) {
 2646              	 .loc 3 1006 0
 2647 0032 104B     	 ldr r3,.L186
 2648 0034 DB68     	 ldr r3,[r3,#12]
 2649 0036 07EE903A 	 fmsr s15,r3
 2650 003a FDEEE77A 	 ftosizs s15,s15
 2651 003e 17EE903A 	 fmrs r3,s15
 2652 0042 83EAE374 	 eor r4,r3,r3,asr#31
 2653 0046 A4EBE374 	 sub r4,r4,r3,asr#31
 2654 004a FFF7FEFF 	 bl gyroConfig
 2655 004e 0346     	 mov r3,r0
 2656 0050 B3F91A30 	 ldrsh r3,[r3,#26]
 2657 0054 9BB2     	 uxth r3,r3
 2658 0056 1BB2     	 sxth r3,r3
 2659 0058 9C42     	 cmp r4,r3
 2660 005a 07DD     	 ble .L182
1007:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->yawSpinDetected = true;
 2661              	 .loc 3 1007 0
 2662 005c 7B68     	 ldr r3,[r7,#4]
 2663 005e 0122     	 movs r2,#1
 2664 0060 83F8EA22 	 strb r2,[r3,#746]
1008:../cleanflight/src/main/sensors/gyro.c ****             gyroSensor->yawSpinTimeUs = currentTimeUs;
 2665              	 .loc 3 1008 0
 2666 0064 7B68     	 ldr r3,[r7,#4]
 2667 0066 3A68     	 ldr r2,[r7]
 2668 0068 C3F8E622 	 str r2,[r3,#742]
 2669              	.L182:
1009:../cleanflight/src/main/sensors/gyro.c ****         }
1010:../cleanflight/src/main/sensors/gyro.c **** #endif // SIMULATOR_BUILD
1011:../cleanflight/src/main/sensors/gyro.c ****     }
1012:../cleanflight/src/main/sensors/gyro.c **** }
 2670              	 .loc 3 1012 0
 2671 006c 0C37     	 adds r7,r7,#12
 2672              	.LCFI131:
 2673              	 .cfi_def_cfa_offset 12
 2674 006e BD46     	 mov sp,r7
 2675              	.LCFI132:
 2676              	 .cfi_def_cfa_register 13
 2677              	 
 2678 0070 90BD     	 pop {r4,r7,pc}
 2679              	.L187:
 2680 0072 00BF     	 .align 2
 2681              	.L186:
 2682 0074 00000000 	 .word gyro
 2683              	 .cfi_endproc
 2684              	.LFE568:
 2686              	 .section .text.filterGyro,"ax",%progbits
 2687              	 .align 2
 2688              	 .thumb
 2689              	 .thumb_func
 2691              	filterGyro:
 2692              	.LFB569:
 2693              	 .file 4 "../cleanflight/src/main/sensors/gyro_filter_impl.h"
   1:../cleanflight/src/main/sensors/gyro_filter_impl.h **** static FAST_CODE void GYRO_FILTER_FUNCTION_NAME(gyroSensor_t *gyroSensor, timeDelta_t sampleDeltaUs
   2:../cleanflight/src/main/sensors/gyro_filter_impl.h **** {
 2694              	 .loc 4 2 0
 2695              	 .cfi_startproc
 2696              	 
 2697              	 
 2698 0000 90B5     	 push {r4,r7,lr}
 2699              	.LCFI133:
 2700              	 .cfi_def_cfa_offset 12
 2701              	 .cfi_offset 4,-12
 2702              	 .cfi_offset 7,-8
 2703              	 .cfi_offset 14,-4
 2704 0002 85B0     	 sub sp,sp,#20
 2705              	.LCFI134:
 2706              	 .cfi_def_cfa_offset 32
 2707 0004 00AF     	 add r7,sp,#0
 2708              	.LCFI135:
 2709              	 .cfi_def_cfa_register 7
 2710 0006 7860     	 str r0,[r7,#4]
 2711 0008 3960     	 str r1,[r7]
 2712              	.LBB11:
   3:../cleanflight/src/main/sensors/gyro_filter_impl.h ****     for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 2713              	 .loc 4 3 0
 2714 000a 0023     	 movs r3,#0
 2715 000c FB60     	 str r3,[r7,#12]
 2716 000e 92E0     	 b .L189
 2717              	.L191:
 2718              	.LBB12:
   4:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         GYRO_FILTER_DEBUG_SET(DEBUG_GYRO_RAW, axis, gyroSensor->gyroDev.gyroADCRaw[axis]);
   5:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         // scale gyro output to degrees per second
   6:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         float gyroADCf = gyroSensor->gyroDev.gyroADC[axis] * gyroSensor->gyroDev.scale;
 2719              	 .loc 4 6 0
 2720 0010 7A68     	 ldr r2,[r7,#4]
 2721 0012 FB68     	 ldr r3,[r7,#12]
 2722 0014 0A33     	 adds r3,r3,#10
 2723 0016 9B00     	 lsls r3,r3,#2
 2724 0018 1344     	 add r3,r3,r2
 2725 001a D3F80120 	 ldr r2,[r3,#1]
 2726 001e 1346     	 mov r3,r2
 2727 0020 1A46     	 mov r2,r3
 2728 0022 7B68     	 ldr r3,[r7,#4]
 2729 0024 D3F81930 	 ldr r3,[r3,#25]
 2730 0028 07EE902A 	 fmsr s15,r2
 2731 002c 07EE103A 	 fmsr s14,r3
 2732 0030 67EE877A 	 fmuls s15,s15,s14
 2733 0034 C7ED027A 	 fsts s15,[r7,#8]
   7:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         // DEBUG_GYRO_SCALED records the unfiltered, scaled gyro output
   8:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         GYRO_FILTER_DEBUG_SET(DEBUG_GYRO_SCALED, axis, lrintf(gyroADCf));
   9:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
  10:../cleanflight/src/main/sensors/gyro_filter_impl.h **** #ifdef USE_GYRO_DATA_ANALYSE
  11:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         if (isDynamicFilterActive()) {
  12:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             if (axis == X) {
  13:../cleanflight/src/main/sensors/gyro_filter_impl.h ****                 GYRO_FILTER_DEBUG_SET(DEBUG_FFT, 0, lrintf(gyroADCf)); // store raw data
  14:../cleanflight/src/main/sensors/gyro_filter_impl.h ****                 GYRO_FILTER_DEBUG_SET(DEBUG_FFT_FREQ, 3, lrintf(gyroADCf)); // store raw data
  15:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             }
  16:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         }
  17:../cleanflight/src/main/sensors/gyro_filter_impl.h **** #endif
  18:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
  19:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         // apply static notch filters and software lowpass filters
  20:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         gyroADCf = gyroSensor->notchFilter1ApplyFn((filter_t *)&gyroSensor->notchFilter1[axis], gyr
 2734              	 .loc 4 20 0
 2735 0038 7B68     	 ldr r3,[r7,#4]
 2736 003a D3F89141 	 ldr r4,[r3,#401]
 2737 003e FA68     	 ldr r2,[r7,#12]
 2738 0040 1346     	 mov r3,r2
 2739 0042 DB00     	 lsls r3,r3,#3
 2740 0044 1344     	 add r3,r3,r2
 2741 0046 9B00     	 lsls r3,r3,#2
 2742 0048 03F5C873 	 add r3,r3,#400
 2743 004c 7A68     	 ldr r2,[r7,#4]
 2744 004e 1344     	 add r3,r3,r2
 2745 0050 0533     	 adds r3,r3,#5
 2746 0052 1846     	 mov r0,r3
 2747 0054 B968     	 ldr r1,[r7,#8]
 2748 0056 A047     	 blx r4
 2749 0058 B860     	 str r0,[r7,#8]
  21:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         gyroADCf = gyroSensor->notchFilter2ApplyFn((filter_t *)&gyroSensor->notchFilter2[axis], gyr
 2750              	 .loc 4 21 0
 2751 005a 7B68     	 ldr r3,[r7,#4]
 2752 005c D3F80142 	 ldr r4,[r3,#513]
 2753 0060 FA68     	 ldr r2,[r7,#12]
 2754 0062 1346     	 mov r3,r2
 2755 0064 DB00     	 lsls r3,r3,#3
 2756 0066 1344     	 add r3,r3,r2
 2757 0068 9B00     	 lsls r3,r3,#2
 2758 006a 03F50073 	 add r3,r3,#512
 2759 006e 7A68     	 ldr r2,[r7,#4]
 2760 0070 1344     	 add r3,r3,r2
 2761 0072 0533     	 adds r3,r3,#5
 2762 0074 1846     	 mov r0,r3
 2763 0076 B968     	 ldr r1,[r7,#8]
 2764 0078 A047     	 blx r4
 2765 007a B860     	 str r0,[r7,#8]
  22:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         gyroADCf = gyroSensor->lowpassFilterApplyFn((filter_t *)&gyroSensor->lowpassFilter[axis], g
 2766              	 .loc 4 22 0
 2767 007c 7B68     	 ldr r3,[r7,#4]
 2768 007e D3F8B140 	 ldr r4,[r3,#177]
 2769 0082 FA68     	 ldr r2,[r7,#12]
 2770 0084 1346     	 mov r3,r2
 2771 0086 DB00     	 lsls r3,r3,#3
 2772 0088 1344     	 add r3,r3,r2
 2773 008a 9B00     	 lsls r3,r3,#2
 2774 008c B033     	 adds r3,r3,#176
 2775 008e 7A68     	 ldr r2,[r7,#4]
 2776 0090 1344     	 add r3,r3,r2
 2777 0092 0533     	 adds r3,r3,#5
 2778 0094 1846     	 mov r0,r3
 2779 0096 B968     	 ldr r1,[r7,#8]
 2780 0098 A047     	 blx r4
 2781 009a B860     	 str r0,[r7,#8]
  23:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         gyroADCf = gyroSensor->lowpass2FilterApplyFn((filter_t *)&gyroSensor->lowpass2Filter[axis],
 2782              	 .loc 4 23 0
 2783 009c 7B68     	 ldr r3,[r7,#4]
 2784 009e D3F82141 	 ldr r4,[r3,#289]
 2785 00a2 FA68     	 ldr r2,[r7,#12]
 2786 00a4 1346     	 mov r3,r2
 2787 00a6 DB00     	 lsls r3,r3,#3
 2788 00a8 1344     	 add r3,r3,r2
 2789 00aa 9B00     	 lsls r3,r3,#2
 2790 00ac 03F59073 	 add r3,r3,#288
 2791 00b0 7A68     	 ldr r2,[r7,#4]
 2792 00b2 1344     	 add r3,r3,r2
 2793 00b4 0533     	 adds r3,r3,#5
 2794 00b6 1846     	 mov r0,r3
 2795 00b8 B968     	 ldr r1,[r7,#8]
 2796 00ba A047     	 blx r4
 2797 00bc B860     	 str r0,[r7,#8]
  24:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
  25:../cleanflight/src/main/sensors/gyro_filter_impl.h **** #ifdef USE_GYRO_DATA_ANALYSE
  26:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         if (isDynamicFilterActive()) {
  27:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             gyroDataAnalysePush(&gyroSensor->gyroAnalyseState, axis, gyroADCf);
  28:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             gyroADCf = gyroSensor->notchFilterDynApplyFn((filter_t *)&gyroSensor->notchFilterDyn[ax
  29:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             if (axis == X) {
  30:../cleanflight/src/main/sensors/gyro_filter_impl.h ****                 GYRO_FILTER_DEBUG_SET(DEBUG_FFT, 1, lrintf(gyroADCf)); // store data after dynamic 
  31:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             }
  32:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         }
  33:../cleanflight/src/main/sensors/gyro_filter_impl.h **** #endif
  34:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
  35:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         // DEBUG_GYRO_FILTERED records the scaled, filtered, after all software filtering has been 
  36:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         GYRO_FILTER_DEBUG_SET(DEBUG_GYRO_FILTERED, axis, lrintf(gyroADCf));
  37:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
  38:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         gyroSensor->gyroDev.gyroADCf[axis] = gyroADCf;
 2798              	 .loc 4 38 0
 2799 00be 7A68     	 ldr r2,[r7,#4]
 2800 00c0 FB68     	 ldr r3,[r7,#12]
 2801 00c2 0C33     	 adds r3,r3,#12
 2802 00c4 9B00     	 lsls r3,r3,#2
 2803 00c6 1344     	 add r3,r3,r2
 2804 00c8 0533     	 adds r3,r3,#5
 2805 00ca BA68     	 ldr r2,[r7,#8]
 2806 00cc 1A60     	 str r2,[r3]
  39:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         if (!gyroSensor->overflowDetected) {
 2807              	 .loc 4 39 0
 2808 00ce 7B68     	 ldr r3,[r7,#4]
 2809 00d0 93F8E532 	 ldrb r3,[r3,#741]
 2810 00d4 83F00103 	 eor r3,r3,#1
 2811 00d8 DBB2     	 uxtb r3,r3
 2812 00da 002B     	 cmp r3,#0
 2813 00dc 28D0     	 beq .L190
  40:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             // integrate using trapezium rule to avoid bias
  41:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             accumulatedMeasurements[axis] += 0.5f * (gyroPrevious[axis] + gyroADCf) * sampleDeltaUs
 2814              	 .loc 4 41 0
 2815 00de 194A     	 ldr r2,.L192
 2816 00e0 FB68     	 ldr r3,[r7,#12]
 2817 00e2 9B00     	 lsls r3,r3,#2
 2818 00e4 1344     	 add r3,r3,r2
 2819 00e6 93ED007A 	 flds s14,[r3]
 2820 00ea 174A     	 ldr r2,.L192+4
 2821 00ec FB68     	 ldr r3,[r7,#12]
 2822 00ee 9B00     	 lsls r3,r3,#2
 2823 00f0 1344     	 add r3,r3,r2
 2824 00f2 D3ED006A 	 flds s13,[r3]
 2825 00f6 D7ED027A 	 flds s15,[r7,#8]
 2826 00fa 76EEA77A 	 fadds s15,s13,s15
 2827 00fe F6EE006A 	 fconsts s13,#96
 2828 0102 67EEA66A 	 fmuls s13,s15,s13
 2829 0106 3B68     	 ldr r3,[r7]
 2830 0108 07EE903A 	 fmsr s15,r3
 2831 010c F8EEE77A 	 fsitos s15,s15
 2832 0110 66EEA77A 	 fmuls s15,s13,s15
 2833 0114 77EE277A 	 fadds s15,s14,s15
 2834 0118 0A4A     	 ldr r2,.L192
 2835 011a FB68     	 ldr r3,[r7,#12]
 2836 011c 9B00     	 lsls r3,r3,#2
 2837 011e 1344     	 add r3,r3,r2
 2838 0120 C3ED007A 	 fsts s15,[r3]
  42:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             gyroPrevious[axis] = gyroADCf;
 2839              	 .loc 4 42 0
 2840 0124 084A     	 ldr r2,.L192+4
 2841 0126 FB68     	 ldr r3,[r7,#12]
 2842 0128 9B00     	 lsls r3,r3,#2
 2843 012a 1344     	 add r3,r3,r2
 2844 012c BA68     	 ldr r2,[r7,#8]
 2845 012e 1A60     	 str r2,[r3]
 2846              	.L190:
 2847              	.LBE12:
   3:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         GYRO_FILTER_DEBUG_SET(DEBUG_GYRO_RAW, axis, gyroSensor->gyroDev.gyroADCRaw[axis]);
 2848              	 .loc 4 3 0 discriminator 2
 2849 0130 FB68     	 ldr r3,[r7,#12]
 2850 0132 0133     	 adds r3,r3,#1
 2851 0134 FB60     	 str r3,[r7,#12]
 2852              	.L189:
   3:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         GYRO_FILTER_DEBUG_SET(DEBUG_GYRO_RAW, axis, gyroSensor->gyroDev.gyroADCRaw[axis]);
 2853              	 .loc 4 3 0 is_stmt 0 discriminator 1
 2854 0136 FB68     	 ldr r3,[r7,#12]
 2855 0138 022B     	 cmp r3,#2
 2856 013a 7FF769AF 	 ble .L191
 2857              	.LBE11:
  43:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         }
  44:../cleanflight/src/main/sensors/gyro_filter_impl.h ****     }
  45:../cleanflight/src/main/sensors/gyro_filter_impl.h **** }
 2858              	 .loc 4 45 0 is_stmt 1
 2859 013e 1437     	 adds r7,r7,#20
 2860              	.LCFI136:
 2861              	 .cfi_def_cfa_offset 12
 2862 0140 BD46     	 mov sp,r7
 2863              	.LCFI137:
 2864              	 .cfi_def_cfa_register 13
 2865              	 
 2866 0142 90BD     	 pop {r4,r7,pc}
 2867              	.L193:
 2868              	 .align 2
 2869              	.L192:
 2870 0144 00000000 	 .word accumulatedMeasurements
 2871 0148 00000000 	 .word gyroPrevious
 2872              	 .cfi_endproc
 2873              	.LFE569:
 2875              	 .section .text.filterGyroDebug,"ax",%progbits
 2876              	 .align 2
 2877              	 .thumb
 2878              	 .thumb_func
 2880              	filterGyroDebug:
 2881              	.LFB570:
   2:../cleanflight/src/main/sensors/gyro_filter_impl.h ****     for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 2882              	 .loc 4 2 0
 2883              	 .cfi_startproc
 2884              	 
 2885              	 
 2886 0000 90B5     	 push {r4,r7,lr}
 2887              	.LCFI138:
 2888              	 .cfi_def_cfa_offset 12
 2889              	 .cfi_offset 4,-12
 2890              	 .cfi_offset 7,-8
 2891              	 .cfi_offset 14,-4
 2892 0002 85B0     	 sub sp,sp,#20
 2893              	.LCFI139:
 2894              	 .cfi_def_cfa_offset 32
 2895 0004 00AF     	 add r7,sp,#0
 2896              	.LCFI140:
 2897              	 .cfi_def_cfa_register 7
 2898 0006 7860     	 str r0,[r7,#4]
 2899 0008 3960     	 str r1,[r7]
 2900              	.LBB13:
   3:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         GYRO_FILTER_DEBUG_SET(DEBUG_GYRO_RAW, axis, gyroSensor->gyroDev.gyroADCRaw[axis]);
 2901              	 .loc 4 3 0
 2902 000a 0023     	 movs r3,#0
 2903 000c FB60     	 str r3,[r7,#12]
 2904 000e BCE0     	 b .L195
 2905              	.L200:
 2906              	.LBB14:
   4:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         // scale gyro output to degrees per second
 2907              	 .loc 4 4 0
 2908 0010 614B     	 ldr r3,.L201
 2909 0012 1B78     	 ldrb r3,[r3]
 2910 0014 132B     	 cmp r3,#19
 2911 0016 0BD1     	 bne .L196
   4:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         // scale gyro output to degrees per second
 2912              	 .loc 4 4 0 is_stmt 0 discriminator 1
 2913 0018 7A68     	 ldr r2,[r7,#4]
 2914 001a FB68     	 ldr r3,[r7,#12]
 2915 001c 2433     	 adds r3,r3,#36
 2916 001e 5B00     	 lsls r3,r3,#1
 2917 0020 1344     	 add r3,r3,r2
 2918 0022 B3F90530 	 ldrsh r3,[r3,#5]
 2919 0026 99B2     	 uxth r1,r3
 2920 0028 5C4A     	 ldr r2,.L201+4
 2921 002a FB68     	 ldr r3,[r7,#12]
 2922 002c 22F81310 	 strh r1,[r2,r3,lsl#1]
 2923              	.L196:
   6:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         // DEBUG_GYRO_SCALED records the unfiltered, scaled gyro output
 2924              	 .loc 4 6 0 is_stmt 1
 2925 0030 7A68     	 ldr r2,[r7,#4]
 2926 0032 FB68     	 ldr r3,[r7,#12]
 2927 0034 0A33     	 adds r3,r3,#10
 2928 0036 9B00     	 lsls r3,r3,#2
 2929 0038 1344     	 add r3,r3,r2
 2930 003a D3F80120 	 ldr r2,[r3,#1]
 2931 003e 1346     	 mov r3,r2
 2932 0040 1A46     	 mov r2,r3
 2933 0042 7B68     	 ldr r3,[r7,#4]
 2934 0044 D3F81930 	 ldr r3,[r3,#25]
 2935 0048 07EE902A 	 fmsr s15,r2
 2936 004c 07EE103A 	 fmsr s14,r3
 2937 0050 67EE877A 	 fmuls s15,s15,s14
 2938 0054 C7ED027A 	 fsts s15,[r7,#8]
   8:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
 2939              	 .loc 4 8 0
 2940 0058 4F4B     	 ldr r3,.L201
 2941 005a 1B78     	 ldrb r3,[r3]
 2942 005c 062B     	 cmp r3,#6
 2943 005e 08D1     	 bne .L197
   8:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
 2944              	 .loc 4 8 0 is_stmt 0 discriminator 1
 2945 0060 B868     	 ldr r0,[r7,#8]
 2946 0062 FFF7FEFF 	 bl lrintf
 2947 0066 0346     	 mov r3,r0
 2948 0068 99B2     	 uxth r1,r3
 2949 006a 4C4A     	 ldr r2,.L201+4
 2950 006c FB68     	 ldr r3,[r7,#12]
 2951 006e 22F81310 	 strh r1,[r2,r3,lsl#1]
 2952              	.L197:
  20:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         gyroADCf = gyroSensor->notchFilter2ApplyFn((filter_t *)&gyroSensor->notchFilter2[axis], gyr
 2953              	 .loc 4 20 0 is_stmt 1
 2954 0072 7B68     	 ldr r3,[r7,#4]
 2955 0074 D3F89141 	 ldr r4,[r3,#401]
 2956 0078 FA68     	 ldr r2,[r7,#12]
 2957 007a 1346     	 mov r3,r2
 2958 007c DB00     	 lsls r3,r3,#3
 2959 007e 1344     	 add r3,r3,r2
 2960 0080 9B00     	 lsls r3,r3,#2
 2961 0082 03F5C873 	 add r3,r3,#400
 2962 0086 7A68     	 ldr r2,[r7,#4]
 2963 0088 1344     	 add r3,r3,r2
 2964 008a 0533     	 adds r3,r3,#5
 2965 008c 1846     	 mov r0,r3
 2966 008e B968     	 ldr r1,[r7,#8]
 2967 0090 A047     	 blx r4
 2968 0092 B860     	 str r0,[r7,#8]
  21:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         gyroADCf = gyroSensor->lowpassFilterApplyFn((filter_t *)&gyroSensor->lowpassFilter[axis], g
 2969              	 .loc 4 21 0
 2970 0094 7B68     	 ldr r3,[r7,#4]
 2971 0096 D3F80142 	 ldr r4,[r3,#513]
 2972 009a FA68     	 ldr r2,[r7,#12]
 2973 009c 1346     	 mov r3,r2
 2974 009e DB00     	 lsls r3,r3,#3
 2975 00a0 1344     	 add r3,r3,r2
 2976 00a2 9B00     	 lsls r3,r3,#2
 2977 00a4 03F50073 	 add r3,r3,#512
 2978 00a8 7A68     	 ldr r2,[r7,#4]
 2979 00aa 1344     	 add r3,r3,r2
 2980 00ac 0533     	 adds r3,r3,#5
 2981 00ae 1846     	 mov r0,r3
 2982 00b0 B968     	 ldr r1,[r7,#8]
 2983 00b2 A047     	 blx r4
 2984 00b4 B860     	 str r0,[r7,#8]
  22:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         gyroADCf = gyroSensor->lowpass2FilterApplyFn((filter_t *)&gyroSensor->lowpass2Filter[axis],
 2985              	 .loc 4 22 0
 2986 00b6 7B68     	 ldr r3,[r7,#4]
 2987 00b8 D3F8B140 	 ldr r4,[r3,#177]
 2988 00bc FA68     	 ldr r2,[r7,#12]
 2989 00be 1346     	 mov r3,r2
 2990 00c0 DB00     	 lsls r3,r3,#3
 2991 00c2 1344     	 add r3,r3,r2
 2992 00c4 9B00     	 lsls r3,r3,#2
 2993 00c6 B033     	 adds r3,r3,#176
 2994 00c8 7A68     	 ldr r2,[r7,#4]
 2995 00ca 1344     	 add r3,r3,r2
 2996 00cc 0533     	 adds r3,r3,#5
 2997 00ce 1846     	 mov r0,r3
 2998 00d0 B968     	 ldr r1,[r7,#8]
 2999 00d2 A047     	 blx r4
 3000 00d4 B860     	 str r0,[r7,#8]
  23:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
 3001              	 .loc 4 23 0
 3002 00d6 7B68     	 ldr r3,[r7,#4]
 3003 00d8 D3F82141 	 ldr r4,[r3,#289]
 3004 00dc FA68     	 ldr r2,[r7,#12]
 3005 00de 1346     	 mov r3,r2
 3006 00e0 DB00     	 lsls r3,r3,#3
 3007 00e2 1344     	 add r3,r3,r2
 3008 00e4 9B00     	 lsls r3,r3,#2
 3009 00e6 03F59073 	 add r3,r3,#288
 3010 00ea 7A68     	 ldr r2,[r7,#4]
 3011 00ec 1344     	 add r3,r3,r2
 3012 00ee 0533     	 adds r3,r3,#5
 3013 00f0 1846     	 mov r0,r3
 3014 00f2 B968     	 ldr r1,[r7,#8]
 3015 00f4 A047     	 blx r4
 3016 00f6 B860     	 str r0,[r7,#8]
  36:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
 3017              	 .loc 4 36 0
 3018 00f8 274B     	 ldr r3,.L201
 3019 00fa 1B78     	 ldrb r3,[r3]
 3020 00fc 032B     	 cmp r3,#3
 3021 00fe 08D1     	 bne .L198
  36:../cleanflight/src/main/sensors/gyro_filter_impl.h **** 
 3022              	 .loc 4 36 0 is_stmt 0 discriminator 1
 3023 0100 B868     	 ldr r0,[r7,#8]
 3024 0102 FFF7FEFF 	 bl lrintf
 3025 0106 0346     	 mov r3,r0
 3026 0108 99B2     	 uxth r1,r3
 3027 010a 244A     	 ldr r2,.L201+4
 3028 010c FB68     	 ldr r3,[r7,#12]
 3029 010e 22F81310 	 strh r1,[r2,r3,lsl#1]
 3030              	.L198:
  38:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         if (!gyroSensor->overflowDetected) {
 3031              	 .loc 4 38 0 is_stmt 1
 3032 0112 7A68     	 ldr r2,[r7,#4]
 3033 0114 FB68     	 ldr r3,[r7,#12]
 3034 0116 0C33     	 adds r3,r3,#12
 3035 0118 9B00     	 lsls r3,r3,#2
 3036 011a 1344     	 add r3,r3,r2
 3037 011c 0533     	 adds r3,r3,#5
 3038 011e BA68     	 ldr r2,[r7,#8]
 3039 0120 1A60     	 str r2,[r3]
  39:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             // integrate using trapezium rule to avoid bias
 3040              	 .loc 4 39 0
 3041 0122 7B68     	 ldr r3,[r7,#4]
 3042 0124 93F8E532 	 ldrb r3,[r3,#741]
 3043 0128 83F00103 	 eor r3,r3,#1
 3044 012c DBB2     	 uxtb r3,r3
 3045 012e 002B     	 cmp r3,#0
 3046 0130 28D0     	 beq .L199
  41:../cleanflight/src/main/sensors/gyro_filter_impl.h ****             gyroPrevious[axis] = gyroADCf;
 3047              	 .loc 4 41 0
 3048 0132 1B4A     	 ldr r2,.L201+8
 3049 0134 FB68     	 ldr r3,[r7,#12]
 3050 0136 9B00     	 lsls r3,r3,#2
 3051 0138 1344     	 add r3,r3,r2
 3052 013a 93ED007A 	 flds s14,[r3]
 3053 013e 194A     	 ldr r2,.L201+12
 3054 0140 FB68     	 ldr r3,[r7,#12]
 3055 0142 9B00     	 lsls r3,r3,#2
 3056 0144 1344     	 add r3,r3,r2
 3057 0146 D3ED006A 	 flds s13,[r3]
 3058 014a D7ED027A 	 flds s15,[r7,#8]
 3059 014e 76EEA77A 	 fadds s15,s13,s15
 3060 0152 F6EE006A 	 fconsts s13,#96
 3061 0156 67EEA66A 	 fmuls s13,s15,s13
 3062 015a 3B68     	 ldr r3,[r7]
 3063 015c 07EE903A 	 fmsr s15,r3
 3064 0160 F8EEE77A 	 fsitos s15,s15
 3065 0164 66EEA77A 	 fmuls s15,s13,s15
 3066 0168 77EE277A 	 fadds s15,s14,s15
 3067 016c 0C4A     	 ldr r2,.L201+8
 3068 016e FB68     	 ldr r3,[r7,#12]
 3069 0170 9B00     	 lsls r3,r3,#2
 3070 0172 1344     	 add r3,r3,r2
 3071 0174 C3ED007A 	 fsts s15,[r3]
  42:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         }
 3072              	 .loc 4 42 0
 3073 0178 0A4A     	 ldr r2,.L201+12
 3074 017a FB68     	 ldr r3,[r7,#12]
 3075 017c 9B00     	 lsls r3,r3,#2
 3076 017e 1344     	 add r3,r3,r2
 3077 0180 BA68     	 ldr r2,[r7,#8]
 3078 0182 1A60     	 str r2,[r3]
 3079              	.L199:
 3080              	.LBE14:
   3:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         GYRO_FILTER_DEBUG_SET(DEBUG_GYRO_RAW, axis, gyroSensor->gyroDev.gyroADCRaw[axis]);
 3081              	 .loc 4 3 0 discriminator 2
 3082 0184 FB68     	 ldr r3,[r7,#12]
 3083 0186 0133     	 adds r3,r3,#1
 3084 0188 FB60     	 str r3,[r7,#12]
 3085              	.L195:
   3:../cleanflight/src/main/sensors/gyro_filter_impl.h ****         GYRO_FILTER_DEBUG_SET(DEBUG_GYRO_RAW, axis, gyroSensor->gyroDev.gyroADCRaw[axis]);
 3086              	 .loc 4 3 0 is_stmt 0 discriminator 1
 3087 018a FB68     	 ldr r3,[r7,#12]
 3088 018c 022B     	 cmp r3,#2
 3089 018e 7FF73FAF 	 ble .L200
 3090              	.LBE13:
 3091              	 .loc 4 45 0 is_stmt 1
 3092 0192 1437     	 adds r7,r7,#20
 3093              	.LCFI141:
 3094              	 .cfi_def_cfa_offset 12
 3095 0194 BD46     	 mov sp,r7
 3096              	.LCFI142:
 3097              	 .cfi_def_cfa_register 13
 3098              	 
 3099 0196 90BD     	 pop {r4,r7,pc}
 3100              	.L202:
 3101              	 .align 2
 3102              	.L201:
 3103 0198 00000000 	 .word debugMode
 3104 019c 00000000 	 .word debug
 3105 01a0 00000000 	 .word accumulatedMeasurements
 3106 01a4 00000000 	 .word gyroPrevious
 3107              	 .cfi_endproc
 3108              	.LFE570:
 3110              	 .section .text.gyroUpdateSensor,"ax",%progbits
 3111              	 .align 2
 3112              	 .thumb
 3113              	 .thumb_func
 3115              	gyroUpdateSensor:
 3116              	.LFB571:
1013:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_YAW_SPIN_RECOVERY
1014:../cleanflight/src/main/sensors/gyro.c **** 
1015:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_FILTER_FUNCTION_NAME filterGyro
1016:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_FILTER_DEBUG_SET(...)
1017:../cleanflight/src/main/sensors/gyro.c **** #include "gyro_filter_impl.h"
1018:../cleanflight/src/main/sensors/gyro.c **** #undef GYRO_FILTER_FUNCTION_NAME
1019:../cleanflight/src/main/sensors/gyro.c **** #undef GYRO_FILTER_DEBUG_SET
1020:../cleanflight/src/main/sensors/gyro.c **** 
1021:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_FILTER_FUNCTION_NAME filterGyroDebug
1022:../cleanflight/src/main/sensors/gyro.c **** #define GYRO_FILTER_DEBUG_SET DEBUG_SET
1023:../cleanflight/src/main/sensors/gyro.c **** #include "gyro_filter_impl.h"
1024:../cleanflight/src/main/sensors/gyro.c **** #undef GYRO_FILTER_FUNCTION_NAME
1025:../cleanflight/src/main/sensors/gyro.c **** #undef GYRO_FILTER_DEBUG_SET
1026:../cleanflight/src/main/sensors/gyro.c **** 
1027:../cleanflight/src/main/sensors/gyro.c **** static FAST_CODE FAST_CODE_NOINLINE void gyroUpdateSensor(gyroSensor_t *gyroSensor, timeUs_t curren
1028:../cleanflight/src/main/sensors/gyro.c **** {
 3117              	 .loc 3 1028 0
 3118              	 .cfi_startproc
 3119              	 
 3120              	 
 3121 0000 80B5     	 push {r7,lr}
 3122              	.LCFI143:
 3123              	 .cfi_def_cfa_offset 8
 3124              	 .cfi_offset 7,-8
 3125              	 .cfi_offset 14,-4
 3126 0002 84B0     	 sub sp,sp,#16
 3127              	.LCFI144:
 3128              	 .cfi_def_cfa_offset 24
 3129 0004 00AF     	 add r7,sp,#0
 3130              	.LCFI145:
 3131              	 .cfi_def_cfa_register 7
 3132 0006 7860     	 str r0,[r7,#4]
 3133 0008 3960     	 str r1,[r7]
1029:../cleanflight/src/main/sensors/gyro.c ****     if (!gyroSensor->gyroDev.readFn(&gyroSensor->gyroDev)) {
 3134              	 .loc 3 1029 0
 3135 000a 7B68     	 ldr r3,[r7,#4]
 3136 000c 5B68     	 ldr r3,[r3,#4]
 3137 000e 7A68     	 ldr r2,[r7,#4]
 3138 0010 1046     	 mov r0,r2
 3139 0012 9847     	 blx r3
 3140 0014 0346     	 mov r3,r0
 3141 0016 83F00103 	 eor r3,r3,#1
 3142 001a DBB2     	 uxtb r3,r3
 3143 001c 002B     	 cmp r3,#0
 3144 001e 00D0     	 beq .L204
1030:../cleanflight/src/main/sensors/gyro.c ****         return;
 3145              	 .loc 3 1030 0
 3146 0020 92E0     	 b .L203
 3147              	.L204:
1031:../cleanflight/src/main/sensors/gyro.c ****     }
1032:../cleanflight/src/main/sensors/gyro.c ****     gyroSensor->gyroDev.dataReady = false;
 3148              	 .loc 3 1032 0
 3149 0022 7B68     	 ldr r3,[r7,#4]
 3150 0024 0022     	 movs r2,#0
 3151 0026 83F85D20 	 strb r2,[r3,#93]
1033:../cleanflight/src/main/sensors/gyro.c **** 
1034:../cleanflight/src/main/sensors/gyro.c ****     if (isGyroSensorCalibrationComplete(gyroSensor)) {
 3152              	 .loc 3 1034 0
 3153 002a 7868     	 ldr r0,[r7,#4]
 3154 002c FFF7FEFF 	 bl isGyroSensorCalibrationComplete
 3155 0030 0346     	 mov r3,r0
 3156 0032 002B     	 cmp r3,#0
 3157 0034 5DD0     	 beq .L206
1035:../cleanflight/src/main/sensors/gyro.c ****         // move 16-bit gyro data into 32-bit variables to avoid overflows in calculations
1036:../cleanflight/src/main/sensors/gyro.c **** 
1037:../cleanflight/src/main/sensors/gyro.c **** #if defined(USE_GYRO_SLEW_LIMITER)
1038:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroADC[X] = gyroSlewLimiter(gyroSensor, X) - gyroSensor->gyroDev.gyroZ
1039:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroADC[Y] = gyroSlewLimiter(gyroSensor, Y) - gyroSensor->gyroDev.gyroZ
1040:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroADC[Z] = gyroSlewLimiter(gyroSensor, Z) - gyroSensor->gyroDev.gyroZ
1041:../cleanflight/src/main/sensors/gyro.c **** #else
1042:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroADC[X] = gyroSensor->gyroDev.gyroADCRaw[X] - gyroSensor->gyroDev.gy
 3158              	 .loc 3 1042 0
 3159 0036 7B68     	 ldr r3,[r7,#4]
 3160 0038 B3F94D30 	 ldrsh r3,[r3,#77]
 3161 003c 9BB2     	 uxth r3,r3
 3162 003e 1BB2     	 sxth r3,r3
 3163 0040 07EE903A 	 fmsr s15,r3
 3164 0044 F8EEE77A 	 fsitos s15,s15
 3165 0048 7B68     	 ldr r3,[r7,#4]
 3166 004a D3F81D30 	 ldr r3,[r3,#29]
 3167 004e 07EE103A 	 fmsr s14,r3
 3168 0052 77EEC77A 	 fsubs s15,s15,s14
 3169 0056 7B68     	 ldr r3,[r7,#4]
 3170 0058 2933     	 adds r3,r3,#41
 3171 005a 17EE902A 	 fmrs r2,s15
 3172 005e 1A60     	 str r2,[r3]
1043:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroADC[Y] = gyroSensor->gyroDev.gyroADCRaw[Y] - gyroSensor->gyroDev.gy
 3173              	 .loc 3 1043 0
 3174 0060 7B68     	 ldr r3,[r7,#4]
 3175 0062 B3F94F30 	 ldrsh r3,[r3,#79]
 3176 0066 9BB2     	 uxth r3,r3
 3177 0068 1BB2     	 sxth r3,r3
 3178 006a 07EE903A 	 fmsr s15,r3
 3179 006e F8EEE77A 	 fsitos s15,s15
 3180 0072 7B68     	 ldr r3,[r7,#4]
 3181 0074 D3F82130 	 ldr r3,[r3,#33]
 3182 0078 07EE103A 	 fmsr s14,r3
 3183 007c 77EEC77A 	 fsubs s15,s15,s14
 3184 0080 7B68     	 ldr r3,[r7,#4]
 3185 0082 2D33     	 adds r3,r3,#45
 3186 0084 17EE902A 	 fmrs r2,s15
 3187 0088 1A60     	 str r2,[r3]
1044:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor->gyroDev.gyroADC[Z] = gyroSensor->gyroDev.gyroADCRaw[Z] - gyroSensor->gyroDev.gy
 3188              	 .loc 3 1044 0
 3189 008a 7B68     	 ldr r3,[r7,#4]
 3190 008c B3F95130 	 ldrsh r3,[r3,#81]
 3191 0090 9BB2     	 uxth r3,r3
 3192 0092 1BB2     	 sxth r3,r3
 3193 0094 07EE903A 	 fmsr s15,r3
 3194 0098 F8EEE77A 	 fsitos s15,s15
 3195 009c 7B68     	 ldr r3,[r7,#4]
 3196 009e D3F82530 	 ldr r3,[r3,#37]
 3197 00a2 07EE103A 	 fmsr s14,r3
 3198 00a6 77EEC77A 	 fsubs s15,s15,s14
 3199 00aa 7B68     	 ldr r3,[r7,#4]
 3200 00ac 3133     	 adds r3,r3,#49
 3201 00ae 17EE902A 	 fmrs r2,s15
 3202 00b2 1A60     	 str r2,[r3]
1045:../cleanflight/src/main/sensors/gyro.c **** #endif
1046:../cleanflight/src/main/sensors/gyro.c **** 
1047:../cleanflight/src/main/sensors/gyro.c ****         alignSensors(gyroSensor->gyroDev.gyroADC, gyroSensor->gyroDev.gyroAlign);
 3203              	 .loc 3 1047 0
 3204 00b4 7B68     	 ldr r3,[r7,#4]
 3205 00b6 03F12902 	 add r2,r3,#41
 3206 00ba 7B68     	 ldr r3,[r7,#4]
 3207 00bc 93F85B30 	 ldrb r3,[r3,#91]
 3208 00c0 1046     	 mov r0,r2
 3209 00c2 1946     	 mov r1,r3
 3210 00c4 FFF7FEFF 	 bl alignSensors
1048:../cleanflight/src/main/sensors/gyro.c ****     } else {
1049:../cleanflight/src/main/sensors/gyro.c ****         performGyroCalibration(gyroSensor, gyroConfig()->gyroMovementCalibrationThreshold);
1050:../cleanflight/src/main/sensors/gyro.c ****         // still calibrating, so no need to further process gyro data
1051:../cleanflight/src/main/sensors/gyro.c ****         return;
1052:../cleanflight/src/main/sensors/gyro.c ****     }
1053:../cleanflight/src/main/sensors/gyro.c **** 
1054:../cleanflight/src/main/sensors/gyro.c ****     const timeDelta_t sampleDeltaUs = currentTimeUs - accumulationLastTimeSampledUs;
 3211              	 .loc 3 1054 0
 3212 00c8 214B     	 ldr r3,.L212
 3213 00ca 1B68     	 ldr r3,[r3]
 3214 00cc 3A68     	 ldr r2,[r7]
 3215 00ce D31A     	 subs r3,r2,r3
 3216 00d0 FB60     	 str r3,[r7,#12]
1055:../cleanflight/src/main/sensors/gyro.c ****     accumulationLastTimeSampledUs = currentTimeUs;
 3217              	 .loc 3 1055 0
 3218 00d2 1F4A     	 ldr r2,.L212
 3219 00d4 3B68     	 ldr r3,[r7]
 3220 00d6 1360     	 str r3,[r2]
1056:../cleanflight/src/main/sensors/gyro.c ****     accumulatedMeasurementTimeUs += sampleDeltaUs;
 3221              	 .loc 3 1056 0
 3222 00d8 1E4B     	 ldr r3,.L212+4
 3223 00da 1A68     	 ldr r2,[r3]
 3224 00dc FB68     	 ldr r3,[r7,#12]
 3225 00de 1344     	 add r3,r3,r2
 3226 00e0 1C4A     	 ldr r2,.L212+4
 3227 00e2 1360     	 str r3,[r2]
1057:../cleanflight/src/main/sensors/gyro.c **** 
1058:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_OVERFLOW_CHECK
1059:../cleanflight/src/main/sensors/gyro.c ****     if (gyroConfig()->checkOverflow && !gyroHasOverflowProtection) {
 3228              	 .loc 3 1059 0
 3229 00e4 FFF7FEFF 	 bl gyroConfig
 3230 00e8 0346     	 mov r3,r0
 3231 00ea 9B7D     	 ldrb r3,[r3,#22]
 3232 00ec 002B     	 cmp r3,#0
 3233 00ee 14D0     	 beq .L208
 3234 00f0 08E0     	 b .L211
 3235              	.L206:
1049:../cleanflight/src/main/sensors/gyro.c ****         // still calibrating, so no need to further process gyro data
 3236              	 .loc 3 1049 0
 3237 00f2 FFF7FEFF 	 bl gyroConfig
 3238 00f6 0346     	 mov r3,r0
 3239 00f8 5B78     	 ldrb r3,[r3,#1]
 3240 00fa 7868     	 ldr r0,[r7,#4]
 3241 00fc 1946     	 mov r1,r3
 3242 00fe FFF7FEFF 	 bl performGyroCalibration
1051:../cleanflight/src/main/sensors/gyro.c ****     }
 3243              	 .loc 3 1051 0
 3244 0102 21E0     	 b .L203
 3245              	.L211:
 3246              	 .loc 3 1059 0 discriminator 1
 3247 0104 144B     	 ldr r3,.L212+8
 3248 0106 1B78     	 ldrb r3,[r3]
 3249 0108 83F00103 	 eor r3,r3,#1
 3250 010c DBB2     	 uxtb r3,r3
 3251 010e 002B     	 cmp r3,#0
 3252 0110 03D0     	 beq .L208
1060:../cleanflight/src/main/sensors/gyro.c ****         checkForOverflow(gyroSensor, currentTimeUs);
 3253              	 .loc 3 1060 0
 3254 0112 7868     	 ldr r0,[r7,#4]
 3255 0114 3968     	 ldr r1,[r7]
 3256 0116 FFF7FEFF 	 bl checkForOverflow
 3257              	.L208:
1061:../cleanflight/src/main/sensors/gyro.c ****     }
1062:../cleanflight/src/main/sensors/gyro.c **** #endif
1063:../cleanflight/src/main/sensors/gyro.c **** 
1064:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_YAW_SPIN_RECOVERY
1065:../cleanflight/src/main/sensors/gyro.c ****     if (gyroConfig()->yaw_spin_recovery) {
 3258              	 .loc 3 1065 0
 3259 011a FFF7FEFF 	 bl gyroConfig
 3260 011e 0346     	 mov r3,r0
 3261 0120 5B7E     	 ldrb r3,[r3,#25]
 3262 0122 002B     	 cmp r3,#0
 3263 0124 03D0     	 beq .L209
1066:../cleanflight/src/main/sensors/gyro.c ****         checkForYawSpin(gyroSensor, currentTimeUs);
 3264              	 .loc 3 1066 0
 3265 0126 7868     	 ldr r0,[r7,#4]
 3266 0128 3968     	 ldr r1,[r7]
 3267 012a FFF7FEFF 	 bl checkForYawSpin
 3268              	.L209:
1067:../cleanflight/src/main/sensors/gyro.c ****     }
1068:../cleanflight/src/main/sensors/gyro.c **** #endif
1069:../cleanflight/src/main/sensors/gyro.c **** 
1070:../cleanflight/src/main/sensors/gyro.c ****     if (gyroDebugMode == DEBUG_NONE) {
 3269              	 .loc 3 1070 0
 3270 012e 0B4B     	 ldr r3,.L212+12
 3271 0130 1B78     	 ldrb r3,[r3]
 3272 0132 002B     	 cmp r3,#0
 3273 0134 04D1     	 bne .L210
1071:../cleanflight/src/main/sensors/gyro.c ****         filterGyro(gyroSensor, sampleDeltaUs);
 3274              	 .loc 3 1071 0
 3275 0136 7868     	 ldr r0,[r7,#4]
 3276 0138 F968     	 ldr r1,[r7,#12]
 3277 013a FFF7FEFF 	 bl filterGyro
 3278 013e 03E0     	 b .L203
 3279              	.L210:
1072:../cleanflight/src/main/sensors/gyro.c ****     } else {
1073:../cleanflight/src/main/sensors/gyro.c ****         filterGyroDebug(gyroSensor, sampleDeltaUs);
 3280              	 .loc 3 1073 0
 3281 0140 7868     	 ldr r0,[r7,#4]
 3282 0142 F968     	 ldr r1,[r7,#12]
 3283 0144 FFF7FEFF 	 bl filterGyroDebug
 3284              	.L203:
1074:../cleanflight/src/main/sensors/gyro.c ****     }
1075:../cleanflight/src/main/sensors/gyro.c **** 
1076:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_DATA_ANALYSE
1077:../cleanflight/src/main/sensors/gyro.c ****     if (isDynamicFilterActive()) {
1078:../cleanflight/src/main/sensors/gyro.c ****         gyroDataAnalyse(&gyroSensor->gyroAnalyseState, gyroSensor->notchFilterDyn);
1079:../cleanflight/src/main/sensors/gyro.c ****     }
1080:../cleanflight/src/main/sensors/gyro.c **** #endif
1081:../cleanflight/src/main/sensors/gyro.c **** }
 3285              	 .loc 3 1081 0
 3286 0148 1037     	 adds r7,r7,#16
 3287              	.LCFI146:
 3288              	 .cfi_def_cfa_offset 8
 3289 014a BD46     	 mov sp,r7
 3290              	.LCFI147:
 3291              	 .cfi_def_cfa_register 13
 3292              	 
 3293 014c 80BD     	 pop {r7,pc}
 3294              	.L213:
 3295 014e 00BF     	 .align 2
 3296              	.L212:
 3297 0150 00000000 	 .word accumulationLastTimeSampledUs
 3298 0154 00000000 	 .word accumulatedMeasurementTimeUs
 3299 0158 00000000 	 .word gyroHasOverflowProtection
 3300 015c 00000000 	 .word gyroDebugMode
 3301              	 .cfi_endproc
 3302              	.LFE571:
 3304              	 .section .text.gyroUpdate,"ax",%progbits
 3305              	 .align 2
 3306              	 .global gyroUpdate
 3307              	 .thumb
 3308              	 .thumb_func
 3310              	gyroUpdate:
 3311              	.LFB572:
1082:../cleanflight/src/main/sensors/gyro.c **** 
1083:../cleanflight/src/main/sensors/gyro.c **** FAST_CODE void gyroUpdate(timeUs_t currentTimeUs)
1084:../cleanflight/src/main/sensors/gyro.c **** {
 3312              	 .loc 3 1084 0
 3313              	 .cfi_startproc
 3314              	 
 3315              	 
 3316 0000 80B5     	 push {r7,lr}
 3317              	.LCFI148:
 3318              	 .cfi_def_cfa_offset 8
 3319              	 .cfi_offset 7,-8
 3320              	 .cfi_offset 14,-4
 3321 0002 82B0     	 sub sp,sp,#8
 3322              	.LCFI149:
 3323              	 .cfi_def_cfa_offset 16
 3324 0004 00AF     	 add r7,sp,#0
 3325              	.LCFI150:
 3326              	 .cfi_def_cfa_register 7
 3327 0006 7860     	 str r0,[r7,#4]
1085:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
1086:../cleanflight/src/main/sensors/gyro.c ****     switch (gyroToUse) {
1087:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_CONFIG_USE_GYRO_1:
1088:../cleanflight/src/main/sensors/gyro.c ****         gyroUpdateSensor(&gyroSensor1, currentTimeUs);
1089:../cleanflight/src/main/sensors/gyro.c ****         if (isGyroSensorCalibrationComplete(&gyroSensor1)) {
1090:../cleanflight/src/main/sensors/gyro.c ****             gyro.gyroADCf[X] = gyroSensor1.gyroDev.gyroADCf[X];
1091:../cleanflight/src/main/sensors/gyro.c ****             gyro.gyroADCf[Y] = gyroSensor1.gyroDev.gyroADCf[Y];
1092:../cleanflight/src/main/sensors/gyro.c ****             gyro.gyroADCf[Z] = gyroSensor1.gyroDev.gyroADCf[Z];
1093:../cleanflight/src/main/sensors/gyro.c ****         }
1094:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_RAW, 0, gyroSensor1.gyroDev.gyroADCRaw[X]);
1095:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_RAW, 1, gyroSensor1.gyroDev.gyroADCRaw[Y]);
1096:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO, 0, lrintf(gyroSensor1.gyroDev.gyroADCf[X]));
1097:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO, 1, lrintf(gyroSensor1.gyroDev.gyroADCf[Y]));
1098:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_COMBINE, 0, lrintf(gyro.gyroADCf[X]));
1099:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_COMBINE, 1, lrintf(gyro.gyroADCf[Y]));
1100:../cleanflight/src/main/sensors/gyro.c ****         break;
1101:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_CONFIG_USE_GYRO_2:
1102:../cleanflight/src/main/sensors/gyro.c ****         gyroUpdateSensor(&gyroSensor2, currentTimeUs);
1103:../cleanflight/src/main/sensors/gyro.c ****         if (isGyroSensorCalibrationComplete(&gyroSensor2)) {
1104:../cleanflight/src/main/sensors/gyro.c ****             gyro.gyroADCf[X] = gyroSensor2.gyroDev.gyroADCf[X];
1105:../cleanflight/src/main/sensors/gyro.c ****             gyro.gyroADCf[Y] = gyroSensor2.gyroDev.gyroADCf[Y];
1106:../cleanflight/src/main/sensors/gyro.c ****             gyro.gyroADCf[Z] = gyroSensor2.gyroDev.gyroADCf[Z];
1107:../cleanflight/src/main/sensors/gyro.c ****         }
1108:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_RAW, 2, gyroSensor2.gyroDev.gyroADCRaw[X]);
1109:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_RAW, 3, gyroSensor2.gyroDev.gyroADCRaw[Y]);
1110:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO, 2, lrintf(gyroSensor2.gyroDev.gyroADCf[X]));
1111:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO, 3, lrintf(gyroSensor2.gyroDev.gyroADCf[Y]));
1112:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_COMBINE, 2, lrintf(gyro.gyroADCf[X]));
1113:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_COMBINE, 3, lrintf(gyro.gyroADCf[Y]));
1114:../cleanflight/src/main/sensors/gyro.c ****         break;
1115:../cleanflight/src/main/sensors/gyro.c ****     case GYRO_CONFIG_USE_GYRO_BOTH:
1116:../cleanflight/src/main/sensors/gyro.c ****         gyroUpdateSensor(&gyroSensor1, currentTimeUs);
1117:../cleanflight/src/main/sensors/gyro.c ****         gyroUpdateSensor(&gyroSensor2, currentTimeUs);
1118:../cleanflight/src/main/sensors/gyro.c ****         if (isGyroSensorCalibrationComplete(&gyroSensor1) && isGyroSensorCalibrationComplete(&gyroS
1119:../cleanflight/src/main/sensors/gyro.c ****             gyro.gyroADCf[X] = (gyroSensor1.gyroDev.gyroADCf[X] + gyroSensor2.gyroDev.gyroADCf[X]) 
1120:../cleanflight/src/main/sensors/gyro.c ****             gyro.gyroADCf[Y] = (gyroSensor1.gyroDev.gyroADCf[Y] + gyroSensor2.gyroDev.gyroADCf[Y]) 
1121:../cleanflight/src/main/sensors/gyro.c ****             gyro.gyroADCf[Z] = (gyroSensor1.gyroDev.gyroADCf[Z] + gyroSensor2.gyroDev.gyroADCf[Z]) 
1122:../cleanflight/src/main/sensors/gyro.c ****         }
1123:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_RAW, 0, gyroSensor1.gyroDev.gyroADCRaw[X]);
1124:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_RAW, 1, gyroSensor1.gyroDev.gyroADCRaw[Y]);
1125:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO, 0, lrintf(gyroSensor1.gyroDev.gyroADCf[X]));
1126:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO, 1, lrintf(gyroSensor1.gyroDev.gyroADCf[Y]));
1127:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_RAW, 2, gyroSensor2.gyroDev.gyroADCRaw[X]);
1128:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_RAW, 3, gyroSensor2.gyroDev.gyroADCRaw[Y]);
1129:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO, 2, lrintf(gyroSensor2.gyroDev.gyroADCf[X]));
1130:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO, 3, lrintf(gyroSensor2.gyroDev.gyroADCf[Y]));
1131:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_COMBINE, 1, lrintf(gyro.gyroADCf[X]));
1132:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_COMBINE, 2, lrintf(gyro.gyroADCf[Y]));
1133:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_DIFF, 0, lrintf(gyroSensor1.gyroDev.gyroADCf[X] - gyroSensor2.gyr
1134:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_DIFF, 1, lrintf(gyroSensor1.gyroDev.gyroADCf[Y] - gyroSensor2.gyr
1135:../cleanflight/src/main/sensors/gyro.c ****         DEBUG_SET(DEBUG_DUAL_GYRO_DIFF, 2, lrintf(gyroSensor1.gyroDev.gyroADCf[Z] - gyroSensor2.gyr
1136:../cleanflight/src/main/sensors/gyro.c ****         break;
1137:../cleanflight/src/main/sensors/gyro.c ****     }
1138:../cleanflight/src/main/sensors/gyro.c **** #else
1139:../cleanflight/src/main/sensors/gyro.c ****     gyroUpdateSensor(&gyroSensor1, currentTimeUs);
 3328              	 .loc 3 1139 0
 3329 0008 0A48     	 ldr r0,.L215
 3330 000a 7968     	 ldr r1,[r7,#4]
 3331 000c FFF7FEFF 	 bl gyroUpdateSensor
1140:../cleanflight/src/main/sensors/gyro.c ****     gyro.gyroADCf[X] = gyroSensor1.gyroDev.gyroADCf[X];
 3332              	 .loc 3 1140 0
 3333 0010 084B     	 ldr r3,.L215
 3334 0012 D3F83530 	 ldr r3,[r3,#53]
 3335 0016 084A     	 ldr r2,.L215+4
 3336 0018 5360     	 str r3,[r2,#4]
1141:../cleanflight/src/main/sensors/gyro.c ****     gyro.gyroADCf[Y] = gyroSensor1.gyroDev.gyroADCf[Y];
 3337              	 .loc 3 1141 0
 3338 001a 064B     	 ldr r3,.L215
 3339 001c D3F83930 	 ldr r3,[r3,#57]
 3340 0020 054A     	 ldr r2,.L215+4
 3341 0022 9360     	 str r3,[r2,#8]
1142:../cleanflight/src/main/sensors/gyro.c ****     gyro.gyroADCf[Z] = gyroSensor1.gyroDev.gyroADCf[Z];
 3342              	 .loc 3 1142 0
 3343 0024 034B     	 ldr r3,.L215
 3344 0026 D3F83D30 	 ldr r3,[r3,#61]
 3345 002a 034A     	 ldr r2,.L215+4
 3346 002c D360     	 str r3,[r2,#12]
1143:../cleanflight/src/main/sensors/gyro.c **** #endif
1144:../cleanflight/src/main/sensors/gyro.c **** }
 3347              	 .loc 3 1144 0
 3348 002e 0837     	 adds r7,r7,#8
 3349              	.LCFI151:
 3350              	 .cfi_def_cfa_offset 8
 3351 0030 BD46     	 mov sp,r7
 3352              	.LCFI152:
 3353              	 .cfi_def_cfa_register 13
 3354              	 
 3355 0032 80BD     	 pop {r7,pc}
 3356              	.L216:
 3357              	 .align 2
 3358              	.L215:
 3359 0034 00000000 	 .word gyroSensor1
 3360 0038 00000000 	 .word gyro
 3361              	 .cfi_endproc
 3362              	.LFE572:
 3364              	 .section .text.gyroGetAccumulationAverage,"ax",%progbits
 3365              	 .align 2
 3366              	 .global gyroGetAccumulationAverage
 3367              	 .thumb
 3368              	 .thumb_func
 3370              	gyroGetAccumulationAverage:
 3371              	.LFB573:
1145:../cleanflight/src/main/sensors/gyro.c **** 
1146:../cleanflight/src/main/sensors/gyro.c **** bool gyroGetAccumulationAverage(float *accumulationAverage)
1147:../cleanflight/src/main/sensors/gyro.c **** {
 3372              	 .loc 3 1147 0
 3373              	 .cfi_startproc
 3374              	 
 3375              	 
 3376              	 
 3377 0000 80B4     	 push {r7}
 3378              	.LCFI153:
 3379              	 .cfi_def_cfa_offset 4
 3380              	 .cfi_offset 7,-4
 3381 0002 85B0     	 sub sp,sp,#20
 3382              	.LCFI154:
 3383              	 .cfi_def_cfa_offset 24
 3384 0004 00AF     	 add r7,sp,#0
 3385              	.LCFI155:
 3386              	 .cfi_def_cfa_register 7
 3387 0006 7860     	 str r0,[r7,#4]
1148:../cleanflight/src/main/sensors/gyro.c ****     if (accumulatedMeasurementTimeUs > 0) {
 3388              	 .loc 3 1148 0
 3389 0008 214B     	 ldr r3,.L224
 3390 000a 1B68     	 ldr r3,[r3]
 3391 000c 002B     	 cmp r3,#0
 3392 000e 28D0     	 beq .L218
 3393              	.LBB15:
1149:../cleanflight/src/main/sensors/gyro.c ****         // If we have gyro data accumulated, calculate average rate that will yield the same rotati
1150:../cleanflight/src/main/sensors/gyro.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 3394              	 .loc 3 1150 0
 3395 0010 0023     	 movs r3,#0
 3396 0012 FB60     	 str r3,[r7,#12]
 3397 0014 1DE0     	 b .L219
 3398              	.L220:
1151:../cleanflight/src/main/sensors/gyro.c ****             accumulationAverage[axis] = accumulatedMeasurements[axis] / accumulatedMeasurementTimeU
 3399              	 .loc 3 1151 0 discriminator 3
 3400 0016 FB68     	 ldr r3,[r7,#12]
 3401 0018 9B00     	 lsls r3,r3,#2
 3402 001a 7A68     	 ldr r2,[r7,#4]
 3403 001c 1344     	 add r3,r3,r2
 3404 001e 1D49     	 ldr r1,.L224+4
 3405 0020 FA68     	 ldr r2,[r7,#12]
 3406 0022 9200     	 lsls r2,r2,#2
 3407 0024 0A44     	 add r2,r2,r1
 3408 0026 92ED007A 	 flds s14,[r2]
 3409 002a 194A     	 ldr r2,.L224
 3410 002c 1268     	 ldr r2,[r2]
 3411 002e 07EE902A 	 fmsr s15,r2
 3412 0032 F8EE677A 	 fuitos s15,s15
 3413 0036 C7EE277A 	 fdivs s15,s14,s15
 3414 003a C3ED007A 	 fsts s15,[r3]
1152:../cleanflight/src/main/sensors/gyro.c ****             accumulatedMeasurements[axis] = 0.0f;
 3415              	 .loc 3 1152 0 discriminator 3
 3416 003e 154A     	 ldr r2,.L224+4
 3417 0040 FB68     	 ldr r3,[r7,#12]
 3418 0042 9B00     	 lsls r3,r3,#2
 3419 0044 1344     	 add r3,r3,r2
 3420 0046 4FF00002 	 mov r2,#0
 3421 004a 1A60     	 str r2,[r3]
1150:../cleanflight/src/main/sensors/gyro.c ****             accumulationAverage[axis] = accumulatedMeasurements[axis] / accumulatedMeasurementTimeU
 3422              	 .loc 3 1150 0 discriminator 3
 3423 004c FB68     	 ldr r3,[r7,#12]
 3424 004e 0133     	 adds r3,r3,#1
 3425 0050 FB60     	 str r3,[r7,#12]
 3426              	.L219:
1150:../cleanflight/src/main/sensors/gyro.c ****             accumulationAverage[axis] = accumulatedMeasurements[axis] / accumulatedMeasurementTimeU
 3427              	 .loc 3 1150 0 is_stmt 0 discriminator 1
 3428 0052 FB68     	 ldr r3,[r7,#12]
 3429 0054 022B     	 cmp r3,#2
 3430 0056 DEDD     	 ble .L220
 3431              	.LBE15:
1153:../cleanflight/src/main/sensors/gyro.c ****         }
1154:../cleanflight/src/main/sensors/gyro.c ****         accumulatedMeasurementTimeUs = 0;
 3432              	 .loc 3 1154 0 is_stmt 1
 3433 0058 0D4B     	 ldr r3,.L224
 3434 005a 0022     	 movs r2,#0
 3435 005c 1A60     	 str r2,[r3]
1155:../cleanflight/src/main/sensors/gyro.c ****         return true;
 3436              	 .loc 3 1155 0
 3437 005e 0123     	 movs r3,#1
 3438 0060 10E0     	 b .L221
 3439              	.L218:
 3440              	.LBB16:
1156:../cleanflight/src/main/sensors/gyro.c ****     } else {
1157:../cleanflight/src/main/sensors/gyro.c ****         for (int axis = 0; axis < XYZ_AXIS_COUNT; axis++) {
 3441              	 .loc 3 1157 0
 3442 0062 0023     	 movs r3,#0
 3443 0064 BB60     	 str r3,[r7,#8]
 3444 0066 09E0     	 b .L222
 3445              	.L223:
1158:../cleanflight/src/main/sensors/gyro.c ****             accumulationAverage[axis] = 0.0f;
 3446              	 .loc 3 1158 0 discriminator 3
 3447 0068 BB68     	 ldr r3,[r7,#8]
 3448 006a 9B00     	 lsls r3,r3,#2
 3449 006c 7A68     	 ldr r2,[r7,#4]
 3450 006e 1344     	 add r3,r3,r2
 3451 0070 4FF00002 	 mov r2,#0
 3452 0074 1A60     	 str r2,[r3]
1157:../cleanflight/src/main/sensors/gyro.c ****             accumulationAverage[axis] = 0.0f;
 3453              	 .loc 3 1157 0 discriminator 3
 3454 0076 BB68     	 ldr r3,[r7,#8]
 3455 0078 0133     	 adds r3,r3,#1
 3456 007a BB60     	 str r3,[r7,#8]
 3457              	.L222:
1157:../cleanflight/src/main/sensors/gyro.c ****             accumulationAverage[axis] = 0.0f;
 3458              	 .loc 3 1157 0 is_stmt 0 discriminator 1
 3459 007c BB68     	 ldr r3,[r7,#8]
 3460 007e 022B     	 cmp r3,#2
 3461 0080 F2DD     	 ble .L223
 3462              	.LBE16:
1159:../cleanflight/src/main/sensors/gyro.c ****         }
1160:../cleanflight/src/main/sensors/gyro.c ****         return false;
 3463              	 .loc 3 1160 0 is_stmt 1
 3464 0082 0023     	 movs r3,#0
 3465              	.L221:
1161:../cleanflight/src/main/sensors/gyro.c ****     }
1162:../cleanflight/src/main/sensors/gyro.c **** }
 3466              	 .loc 3 1162 0
 3467 0084 1846     	 mov r0,r3
 3468 0086 1437     	 adds r7,r7,#20
 3469              	.LCFI156:
 3470              	 .cfi_def_cfa_offset 4
 3471 0088 BD46     	 mov sp,r7
 3472              	.LCFI157:
 3473              	 .cfi_def_cfa_register 13
 3474              	 
 3475 008a 5DF8047B 	 ldr r7,[sp],#4
 3476              	.LCFI158:
 3477              	 .cfi_restore 7
 3478              	 .cfi_def_cfa_offset 0
 3479 008e 7047     	 bx lr
 3480              	.L225:
 3481              	 .align 2
 3482              	.L224:
 3483 0090 00000000 	 .word accumulatedMeasurementTimeUs
 3484 0094 00000000 	 .word accumulatedMeasurements
 3485              	 .cfi_endproc
 3486              	.LFE573:
 3488              	 .section .text.gyroReadTemperature,"ax",%progbits
 3489              	 .align 2
 3490              	 .global gyroReadTemperature
 3491              	 .thumb
 3492              	 .thumb_func
 3494              	gyroReadTemperature:
 3495              	.LFB574:
1163:../cleanflight/src/main/sensors/gyro.c **** 
1164:../cleanflight/src/main/sensors/gyro.c **** void gyroReadTemperature(void)
1165:../cleanflight/src/main/sensors/gyro.c **** {
 3496              	 .loc 3 1165 0
 3497              	 .cfi_startproc
 3498              	 
 3499              	 
 3500 0000 80B5     	 push {r7,lr}
 3501              	.LCFI159:
 3502              	 .cfi_def_cfa_offset 8
 3503              	 .cfi_offset 7,-8
 3504              	 .cfi_offset 14,-4
 3505 0002 00AF     	 add r7,sp,#0
 3506              	.LCFI160:
 3507              	 .cfi_def_cfa_register 7
1166:../cleanflight/src/main/sensors/gyro.c ****     if (gyroSensor1.gyroDev.temperatureFn) {
 3508              	 .loc 3 1166 0
 3509 0004 044B     	 ldr r3,.L228
 3510 0006 9B68     	 ldr r3,[r3,#8]
 3511 0008 002B     	 cmp r3,#0
 3512 000a 04D0     	 beq .L226
1167:../cleanflight/src/main/sensors/gyro.c ****         gyroSensor1.gyroDev.temperatureFn(&gyroSensor1.gyroDev, &gyroSensor1.gyroDev.temperature);
 3513              	 .loc 3 1167 0
 3514 000c 024B     	 ldr r3,.L228
 3515 000e 9B68     	 ldr r3,[r3,#8]
 3516 0010 0148     	 ldr r0,.L228
 3517 0012 0249     	 ldr r1,.L228+4
 3518 0014 9847     	 blx r3
 3519              	.L226:
1168:../cleanflight/src/main/sensors/gyro.c ****     }
1169:../cleanflight/src/main/sensors/gyro.c **** }
 3520              	 .loc 3 1169 0
 3521 0016 80BD     	 pop {r7,pc}
 3522              	.L229:
 3523              	 .align 2
 3524              	.L228:
 3525 0018 00000000 	 .word gyroSensor1
 3526 001c 53000000 	 .word gyroSensor1+83
 3527              	 .cfi_endproc
 3528              	.LFE574:
 3530              	 .section .text.gyroGetTemperature,"ax",%progbits
 3531              	 .align 2
 3532              	 .global gyroGetTemperature
 3533              	 .thumb
 3534              	 .thumb_func
 3536              	gyroGetTemperature:
 3537              	.LFB575:
1170:../cleanflight/src/main/sensors/gyro.c **** 
1171:../cleanflight/src/main/sensors/gyro.c **** int16_t gyroGetTemperature(void)
1172:../cleanflight/src/main/sensors/gyro.c **** {
 3538              	 .loc 3 1172 0
 3539              	 .cfi_startproc
 3540              	 
 3541              	 
 3542              	 
 3543 0000 80B4     	 push {r7}
 3544              	.LCFI161:
 3545              	 .cfi_def_cfa_offset 4
 3546              	 .cfi_offset 7,-4
 3547 0002 00AF     	 add r7,sp,#0
 3548              	.LCFI162:
 3549              	 .cfi_def_cfa_register 7
1173:../cleanflight/src/main/sensors/gyro.c ****     return gyroSensor1.gyroDev.temperature;
 3550              	 .loc 3 1173 0
 3551 0004 044B     	 ldr r3,.L232
 3552 0006 B3F95330 	 ldrsh r3,[r3,#83]
 3553 000a 9BB2     	 uxth r3,r3
 3554 000c 1BB2     	 sxth r3,r3
1174:../cleanflight/src/main/sensors/gyro.c **** }
 3555              	 .loc 3 1174 0
 3556 000e 1846     	 mov r0,r3
 3557 0010 BD46     	 mov sp,r7
 3558              	.LCFI163:
 3559              	 .cfi_def_cfa_register 13
 3560              	 
 3561 0012 5DF8047B 	 ldr r7,[sp],#4
 3562              	.LCFI164:
 3563              	 .cfi_restore 7
 3564              	 .cfi_def_cfa_offset 0
 3565 0016 7047     	 bx lr
 3566              	.L233:
 3567              	 .align 2
 3568              	.L232:
 3569 0018 00000000 	 .word gyroSensor1
 3570              	 .cfi_endproc
 3571              	.LFE575:
 3573              	 .section .text.gyroRateDps,"ax",%progbits
 3574              	 .align 2
 3575              	 .global gyroRateDps
 3576              	 .thumb
 3577              	 .thumb_func
 3579              	gyroRateDps:
 3580              	.LFB576:
1175:../cleanflight/src/main/sensors/gyro.c **** 
1176:../cleanflight/src/main/sensors/gyro.c **** int16_t gyroRateDps(int axis)
1177:../cleanflight/src/main/sensors/gyro.c **** {
 3581              	 .loc 3 1177 0
 3582              	 .cfi_startproc
 3583              	 
 3584              	 
 3585 0000 80B5     	 push {r7,lr}
 3586              	.LCFI165:
 3587              	 .cfi_def_cfa_offset 8
 3588              	 .cfi_offset 7,-8
 3589              	 .cfi_offset 14,-4
 3590 0002 82B0     	 sub sp,sp,#8
 3591              	.LCFI166:
 3592              	 .cfi_def_cfa_offset 16
 3593 0004 00AF     	 add r7,sp,#0
 3594              	.LCFI167:
 3595              	 .cfi_def_cfa_register 7
 3596 0006 7860     	 str r0,[r7,#4]
1178:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_DUAL_GYRO
1179:../cleanflight/src/main/sensors/gyro.c ****     if (gyroToUse == GYRO_CONFIG_USE_GYRO_2) {
1180:../cleanflight/src/main/sensors/gyro.c ****         return lrintf(gyro.gyroADCf[axis] / gyroSensor2.gyroDev.scale);
1181:../cleanflight/src/main/sensors/gyro.c ****     } else {
1182:../cleanflight/src/main/sensors/gyro.c ****         return lrintf(gyro.gyroADCf[axis] / gyroSensor1.gyroDev.scale);
1183:../cleanflight/src/main/sensors/gyro.c ****     }
1184:../cleanflight/src/main/sensors/gyro.c **** #else
1185:../cleanflight/src/main/sensors/gyro.c ****     return lrintf(gyro.gyroADCf[axis] / gyroSensor1.gyroDev.scale);
 3597              	 .loc 3 1185 0
 3598 0008 0D4A     	 ldr r2,.L236
 3599 000a 7B68     	 ldr r3,[r7,#4]
 3600 000c 9B00     	 lsls r3,r3,#2
 3601 000e 1344     	 add r3,r3,r2
 3602 0010 5A68     	 ldr r2,[r3,#4]
 3603 0012 1346     	 mov r3,r2
 3604 0014 1A46     	 mov r2,r3
 3605 0016 0B4B     	 ldr r3,.L236+4
 3606 0018 D3F81930 	 ldr r3,[r3,#25]
 3607 001c 07EE902A 	 fmsr s15,r2
 3608 0020 07EE103A 	 fmsr s14,r3
 3609 0024 C7EE877A 	 fdivs s15,s15,s14
 3610 0028 17EE900A 	 fmrs r0,s15
 3611 002c FFF7FEFF 	 bl lrintf
 3612 0030 0346     	 mov r3,r0
 3613 0032 9BB2     	 uxth r3,r3
 3614 0034 1BB2     	 sxth r3,r3
1186:../cleanflight/src/main/sensors/gyro.c **** #endif
1187:../cleanflight/src/main/sensors/gyro.c **** }
 3615              	 .loc 3 1187 0
 3616 0036 1846     	 mov r0,r3
 3617 0038 0837     	 adds r7,r7,#8
 3618              	.LCFI168:
 3619              	 .cfi_def_cfa_offset 8
 3620 003a BD46     	 mov sp,r7
 3621              	.LCFI169:
 3622              	 .cfi_def_cfa_register 13
 3623              	 
 3624 003c 80BD     	 pop {r7,pc}
 3625              	.L237:
 3626 003e 00BF     	 .align 2
 3627              	.L236:
 3628 0040 00000000 	 .word gyro
 3629 0044 00000000 	 .word gyroSensor1
 3630              	 .cfi_endproc
 3631              	.LFE576:
 3633              	 .section .text.gyroOverflowDetected,"ax",%progbits
 3634              	 .align 2
 3635              	 .global gyroOverflowDetected
 3636              	 .thumb
 3637              	 .thumb_func
 3639              	gyroOverflowDetected:
 3640              	.LFB577:
1188:../cleanflight/src/main/sensors/gyro.c **** 
1189:../cleanflight/src/main/sensors/gyro.c **** bool gyroOverflowDetected(void)
1190:../cleanflight/src/main/sensors/gyro.c **** {
 3641              	 .loc 3 1190 0
 3642              	 .cfi_startproc
 3643              	 
 3644              	 
 3645              	 
 3646 0000 80B4     	 push {r7}
 3647              	.LCFI170:
 3648              	 .cfi_def_cfa_offset 4
 3649              	 .cfi_offset 7,-4
 3650 0002 00AF     	 add r7,sp,#0
 3651              	.LCFI171:
 3652              	 .cfi_def_cfa_register 7
1191:../cleanflight/src/main/sensors/gyro.c ****     return gyroSensor1.overflowDetected;
 3653              	 .loc 3 1191 0
 3654 0004 034B     	 ldr r3,.L240
 3655 0006 93F8E532 	 ldrb r3,[r3,#741]
1192:../cleanflight/src/main/sensors/gyro.c **** }
 3656              	 .loc 3 1192 0
 3657 000a 1846     	 mov r0,r3
 3658 000c BD46     	 mov sp,r7
 3659              	.LCFI172:
 3660              	 .cfi_def_cfa_register 13
 3661              	 
 3662 000e 5DF8047B 	 ldr r7,[sp],#4
 3663              	.LCFI173:
 3664              	 .cfi_restore 7
 3665              	 .cfi_def_cfa_offset 0
 3666 0012 7047     	 bx lr
 3667              	.L241:
 3668              	 .align 2
 3669              	.L240:
 3670 0014 00000000 	 .word gyroSensor1
 3671              	 .cfi_endproc
 3672              	.LFE577:
 3674              	 .section .text.gyroYawSpinDetected,"ax",%progbits
 3675              	 .align 2
 3676              	 .global gyroYawSpinDetected
 3677              	 .thumb
 3678              	 .thumb_func
 3680              	gyroYawSpinDetected:
 3681              	.LFB578:
1193:../cleanflight/src/main/sensors/gyro.c **** 
1194:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_YAW_SPIN_RECOVERY
1195:../cleanflight/src/main/sensors/gyro.c **** bool gyroYawSpinDetected(void)
1196:../cleanflight/src/main/sensors/gyro.c **** {
 3682              	 .loc 3 1196 0
 3683              	 .cfi_startproc
 3684              	 
 3685              	 
 3686              	 
 3687 0000 80B4     	 push {r7}
 3688              	.LCFI174:
 3689              	 .cfi_def_cfa_offset 4
 3690              	 .cfi_offset 7,-4
 3691 0002 00AF     	 add r7,sp,#0
 3692              	.LCFI175:
 3693              	 .cfi_def_cfa_register 7
1197:../cleanflight/src/main/sensors/gyro.c ****     return gyroSensor1.yawSpinDetected;
 3694              	 .loc 3 1197 0
 3695 0004 034B     	 ldr r3,.L244
 3696 0006 93F8EA32 	 ldrb r3,[r3,#746]
1198:../cleanflight/src/main/sensors/gyro.c **** }
 3697              	 .loc 3 1198 0
 3698 000a 1846     	 mov r0,r3
 3699 000c BD46     	 mov sp,r7
 3700              	.LCFI176:
 3701              	 .cfi_def_cfa_register 13
 3702              	 
 3703 000e 5DF8047B 	 ldr r7,[sp],#4
 3704              	.LCFI177:
 3705              	 .cfi_restore 7
 3706              	 .cfi_def_cfa_offset 0
 3707 0012 7047     	 bx lr
 3708              	.L245:
 3709              	 .align 2
 3710              	.L244:
 3711 0014 00000000 	 .word gyroSensor1
 3712              	 .cfi_endproc
 3713              	.LFE578:
 3715              	 .section .text.gyroAbsRateDps,"ax",%progbits
 3716              	 .align 2
 3717              	 .global gyroAbsRateDps
 3718              	 .thumb
 3719              	 .thumb_func
 3721              	gyroAbsRateDps:
 3722              	.LFB579:
1199:../cleanflight/src/main/sensors/gyro.c **** #endif // USE_YAW_SPIN_RECOVERY
1200:../cleanflight/src/main/sensors/gyro.c **** 
1201:../cleanflight/src/main/sensors/gyro.c **** uint16_t gyroAbsRateDps(int axis)
1202:../cleanflight/src/main/sensors/gyro.c **** {
 3723              	 .loc 3 1202 0
 3724              	 .cfi_startproc
 3725              	 
 3726              	 
 3727              	 
 3728 0000 80B4     	 push {r7}
 3729              	.LCFI178:
 3730              	 .cfi_def_cfa_offset 4
 3731              	 .cfi_offset 7,-4
 3732 0002 83B0     	 sub sp,sp,#12
 3733              	.LCFI179:
 3734              	 .cfi_def_cfa_offset 16
 3735 0004 00AF     	 add r7,sp,#0
 3736              	.LCFI180:
 3737              	 .cfi_def_cfa_register 7
 3738 0006 7860     	 str r0,[r7,#4]
1203:../cleanflight/src/main/sensors/gyro.c ****     return fabsf(gyro.gyroADCf[axis]);
 3739              	 .loc 3 1203 0
 3740 0008 0A4A     	 ldr r2,.L248
 3741 000a 7B68     	 ldr r3,[r7,#4]
 3742 000c 9B00     	 lsls r3,r3,#2
 3743 000e 1344     	 add r3,r3,r2
 3744 0010 5B68     	 ldr r3,[r3,#4]
 3745 0012 07EE903A 	 fmsr s15,r3
 3746 0016 F0EEE77A 	 fabss s15,s15
 3747 001a FCEEE77A 	 ftouizs s15,s15
 3748 001e C7ED007A 	 fsts s15,[r7]
 3749 0022 3B88     	 ldrh r3,[r7]
 3750 0024 9BB2     	 uxth r3,r3
1204:../cleanflight/src/main/sensors/gyro.c **** }
 3751              	 .loc 3 1204 0
 3752 0026 1846     	 mov r0,r3
 3753 0028 0C37     	 adds r7,r7,#12
 3754              	.LCFI181:
 3755              	 .cfi_def_cfa_offset 4
 3756 002a BD46     	 mov sp,r7
 3757              	.LCFI182:
 3758              	 .cfi_def_cfa_register 13
 3759              	 
 3760 002c 5DF8047B 	 ldr r7,[sp],#4
 3761              	.LCFI183:
 3762              	 .cfi_restore 7
 3763              	 .cfi_def_cfa_offset 0
 3764 0030 7047     	 bx lr
 3765              	.L249:
 3766 0032 00BF     	 .align 2
 3767              	.L248:
 3768 0034 00000000 	 .word gyro
 3769              	 .cfi_endproc
 3770              	.LFE579:
 3772              	 .section .text.gyroReadRegister,"ax",%progbits
 3773              	 .align 2
 3774              	 .global gyroReadRegister
 3775              	 .thumb
 3776              	 .thumb_func
 3778              	gyroReadRegister:
 3779              	.LFB580:
1205:../cleanflight/src/main/sensors/gyro.c **** 
1206:../cleanflight/src/main/sensors/gyro.c **** #ifdef USE_GYRO_REGISTER_DUMP
1207:../cleanflight/src/main/sensors/gyro.c **** uint8_t gyroReadRegister(uint8_t whichSensor, uint8_t reg)
1208:../cleanflight/src/main/sensors/gyro.c **** {
 3780              	 .loc 3 1208 0
 3781              	 .cfi_startproc
 3782              	 
 3783              	 
 3784 0000 80B5     	 push {r7,lr}
 3785              	.LCFI184:
 3786              	 .cfi_def_cfa_offset 8
 3787              	 .cfi_offset 7,-8
 3788              	 .cfi_offset 14,-4
 3789 0002 82B0     	 sub sp,sp,#8
 3790              	.LCFI185:
 3791              	 .cfi_def_cfa_offset 16
 3792 0004 00AF     	 add r7,sp,#0
 3793              	.LCFI186:
 3794              	 .cfi_def_cfa_register 7
 3795 0006 0346     	 mov r3,r0
 3796 0008 0A46     	 mov r2,r1
 3797 000a FB71     	 strb r3,[r7,#7]
 3798 000c 1346     	 mov r3,r2
 3799 000e BB71     	 strb r3,[r7,#6]
1209:../cleanflight/src/main/sensors/gyro.c ****     return mpuGyroReadRegister(gyroSensorBusByDevice(whichSensor), reg);
 3800              	 .loc 3 1209 0
 3801 0010 FB79     	 ldrb r3,[r7,#7]
 3802 0012 1846     	 mov r0,r3
 3803 0014 FFF7FEFF 	 bl gyroSensorBusByDevice
 3804 0018 0246     	 mov r2,r0
 3805 001a BB79     	 ldrb r3,[r7,#6]
 3806 001c 1046     	 mov r0,r2
 3807 001e 1946     	 mov r1,r3
 3808 0020 FFF7FEFF 	 bl mpuGyroReadRegister
 3809 0024 0346     	 mov r3,r0
1210:../cleanflight/src/main/sensors/gyro.c **** }
 3810              	 .loc 3 1210 0
 3811 0026 1846     	 mov r0,r3
 3812 0028 0837     	 adds r7,r7,#8
 3813              	.LCFI187:
 3814              	 .cfi_def_cfa_offset 8
 3815 002a BD46     	 mov sp,r7
 3816              	.LCFI188:
 3817              	 .cfi_def_cfa_register 13
 3818              	 
 3819 002c 80BD     	 pop {r7,pc}
 3820              	 .cfi_endproc
 3821              	.LFE580:
 3823 002e 00BF     	 .text
 3824              	.Letext0:
 3825              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3826              	 .file 6 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3827              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 3828              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 3829              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 3830              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/build/debug.h"
 3831              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/axis.h"
 3832              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/maths.h"
 3833              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/filter.h"
 3834              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/pg.h"
 3835              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 3836              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 3837              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/exti.h"
 3838              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 3839              	 .file 19 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus.h"
 3840              	 .file 20 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/sensor.h"
 3841              	 .file 21 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/accgyro/accgyro.h"
 3842              	 .file 22 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/accgyro/accgyro_mpu.h"
 3843              	 .file 23 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/resource.h"
 3844              	 .file 24 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 3845              	 .file 25 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/runtime_config.h"
 3846              	 .file 26 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/beeper.h"
 3847              	 .file 27 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/scheduler/scheduler.h"
 3848              	 .file 28 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/boardalignment.h"
 3849              	 .file 29 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/sensors.h"
 3850              	 .file 30 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 3851              	 .file 31 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gyro.c
    {standard input}:20     .text.cmpTimeUs:00000000 $t
    {standard input}:24     .text.cmpTimeUs:00000000 cmpTimeUs
    {standard input}:65     .text.gyroConfig:00000000 $t
    {standard input}:69     .text.gyroConfig:00000000 gyroConfig
    {standard input}:99     .text.gyroConfig:00000010 $d
                            *COM*:00000020 gyroConfig_System
    {standard input}:104    .text.gyroConfigMutable:00000000 $t
    {standard input}:108    .text.gyroConfigMutable:00000000 gyroConfigMutable
    {standard input}:137    .text.gyroConfigMutable:00000010 $d
                            *COM*:00000010 gyro
    {standard input}:145    .bss.gyroDebugMode:00000000 gyroDebugMode
    {standard input}:146    .bss.gyroDebugMode:00000000 $d
    {standard input}:150    .bss.gyroToUse:00000000 gyroToUse
    {standard input}:151    .bss.gyroToUse:00000000 $d
    {standard input}:155    .bss.overflowAxisMask:00000000 overflowAxisMask
    {standard input}:156    .bss.overflowAxisMask:00000000 $d
    {standard input}:158    .bss.accumulatedMeasurements:00000000 $d
    {standard input}:161    .bss.accumulatedMeasurements:00000000 accumulatedMeasurements
    {standard input}:164    .bss.gyroPrevious:00000000 $d
    {standard input}:167    .bss.gyroPrevious:00000000 gyroPrevious
    {standard input}:170    .bss.accumulatedMeasurementTimeUs:00000000 $d
    {standard input}:173    .bss.accumulatedMeasurementTimeUs:00000000 accumulatedMeasurementTimeUs
    {standard input}:176    .bss.accumulationLastTimeSampledUs:00000000 $d
    {standard input}:179    .bss.accumulationLastTimeSampledUs:00000000 accumulationLastTimeSampledUs
    {standard input}:184    .data.gyroHasOverflowProtection:00000000 gyroHasOverflowProtection
    {standard input}:190    .bss.firstArmingCalibrationWasStarted:00000000 firstArmingCalibrationWasStarted
    {standard input}:191    .bss.firstArmingCalibrationWasStarted:00000000 $d
    {standard input}:193    .bss.gyroSensor1:00000000 $d
    {standard input}:196    .bss.gyroSensor1:00000000 gyroSensor1
                            *COM*:00000020 gyroConfig_Copy
    {standard input}:205    .pg_registry:00000000 gyroConfig_Registry
    {standard input}:202    .pg_registry:00000000 $d
    {standard input}:217    .pg_resetdata:00000000 pgResetTemplate_gyroConfig
    {standard input}:214    .pg_resetdata:00000000 $d
    {standard input}:242    .text.gyroSensorBus:00000000 $t
    {standard input}:247    .text.gyroSensorBus:00000000 gyroSensorBus
    {standard input}:278    .text.gyroSensorBus:00000010 $d
    {standard input}:283    .text.gyroSensorBusByDevice:00000000 $t
    {standard input}:288    .text.gyroSensorBusByDevice:00000000 gyroSensorBusByDevice
    {standard input}:326    .text.gyroSensorBusByDevice:00000018 $d
    {standard input}:331    .text.gyroMpuConfiguration:00000000 $t
    {standard input}:336    .text.gyroMpuConfiguration:00000000 gyroMpuConfiguration
    {standard input}:366    .text.gyroMpuConfiguration:00000010 $d
    {standard input}:371    .text.gyroMpuDetectionResult:00000000 $t
    {standard input}:376    .text.gyroMpuDetectionResult:00000000 gyroMpuDetectionResult
    {standard input}:406    .text.gyroMpuDetectionResult:00000010 $d
    {standard input}:411    .text.gyroDetect:00000000 $t
    {standard input}:415    .text.gyroDetect:00000000 gyroDetect
    {standard input}:445    .text.gyroDetect:0000001c $d
    {standard input}:456    .text.gyroDetect:00000048 $t
    {standard input}:474    .text.gyroDetect:00000068 $d
    {standard input}:478    .text.gyroDetect:00000078 $t
    {standard input}:546    .text.gyroDetect:000000c0 $d
    {standard input}:551    .text.gyroInitSensor:00000000 $t
    {standard input}:555    .text.gyroInitSensor:00000000 gyroInitSensor
    {standard input}:696    .text.gyroInitSensor:000000ec $d
    {standard input}:712    .text.gyroInitSensor:0000012c $t
    {standard input}:1448   .text.gyroInitSensorFilters:00000000 gyroInitSensorFilters
    {standard input}:754    .text.gyroInitSensor:0000015c $d
    {standard input}:760    .text.gyroInit:00000000 $t
    {standard input}:765    .text.gyroInit:00000000 gyroInit
    {standard input}:821    .text.gyroInit:00000044 $d
    {standard input}:838    .text.gyroInit:00000088 $t
    {standard input}:918    .text.gyroInit:000000f8 $d
    {standard input}:929    .text.gyroInitLowpassFilterLpf:00000000 $t
    {standard input}:933    .text.gyroInitLowpassFilterLpf:00000000 gyroInitLowpassFilterLpf
    {standard input}:1118   .text.gyroInitLowpassFilterLpf:0000010c $d
    {standard input}:1128   .text.calculateNyquistAdjustedNotchHz:00000000 $t
    {standard input}:1132   .text.calculateNyquistAdjustedNotchHz:00000000 calculateNyquistAdjustedNotchHz
    {standard input}:1198   .text.calculateNyquistAdjustedNotchHz:00000044 $d
    {standard input}:1204   .text.gyroInitFilterNotch1:00000000 $t
    {standard input}:1208   .text.gyroInitFilterNotch1:00000000 gyroInitFilterNotch1
    {standard input}:1317   .text.gyroInitFilterNotch1:000000a8 $d
    {standard input}:1324   .text.gyroInitFilterNotch2:00000000 $t
    {standard input}:1328   .text.gyroInitFilterNotch2:00000000 gyroInitFilterNotch2
    {standard input}:1437   .text.gyroInitFilterNotch2:000000a8 $d
    {standard input}:1444   .text.gyroInitSensorFilters:00000000 $t
    {standard input}:1538   .text.gyroInitFilters:00000000 $t
    {standard input}:1543   .text.gyroInitFilters:00000000 gyroInitFilters
    {standard input}:1565   .text.gyroInitFilters:0000000c $d
    {standard input}:1570   .text.isGyroSensorCalibrationComplete:00000000 $t
    {standard input}:1575   .text.isGyroSensorCalibrationComplete:00000000 isGyroSensorCalibrationComplete
    {standard input}:1619   .text.isGyroCalibrationComplete:00000000 $t
    {standard input}:1624   .text.isGyroCalibrationComplete:00000000 isGyroCalibrationComplete
    {standard input}:1648   .text.isGyroCalibrationComplete:00000010 $d
    {standard input}:1653   .text.isOnFinalGyroCalibrationCycle:00000000 $t
    {standard input}:1657   .text.isOnFinalGyroCalibrationCycle:00000000 isOnFinalGyroCalibrationCycle
    {standard input}:1701   .text.gyroCalculateCalibratingCycles:00000000 $t
    {standard input}:1705   .text.gyroCalculateCalibratingCycles:00000000 gyroCalculateCalibratingCycles
    {standard input}:1737   .text.gyroCalculateCalibratingCycles:00000028 $d
    {standard input}:1742   .text.isOnFirstGyroCalibrationCycle:00000000 $t
    {standard input}:1746   .text.isOnFirstGyroCalibrationCycle:00000000 isOnFirstGyroCalibrationCycle
    {standard input}:1789   .text.gyroSetCalibrationCycles:00000000 $t
    {standard input}:1793   .text.gyroSetCalibrationCycles:00000000 gyroSetCalibrationCycles
    {standard input}:1829   .text.gyroStartCalibration:00000000 $t
    {standard input}:1834   .text.gyroStartCalibration:00000000 gyroStartCalibration
    {standard input}:1891   .text.gyroStartCalibration:0000003c $d
    {standard input}:1897   .text.isFirstArmingGyroCalibrationRunning:00000000 $t
    {standard input}:1902   .text.isFirstArmingGyroCalibrationRunning:00000000 isFirstArmingGyroCalibrationRunning
    {standard input}:1944   .text.isFirstArmingGyroCalibrationRunning:0000002c $d
    {standard input}:1949   .text.performGyroCalibration:00000000 $t
    {standard input}:1953   .text.performGyroCalibration:00000000 performGyroCalibration
    {standard input}:2240   .text.performGyroCalibration:00000228 $d
    {standard input}:2248   .text.handleOverflow:00000000 $t
    {standard input}:2252   .text.handleOverflow:00000000 handleOverflow
    {standard input}:2359   .text.handleOverflow:000000d8 $d
    {standard input}:2365   .text.checkForOverflow:00000000 $t
    {standard input}:2369   .text.checkForOverflow:00000000 checkForOverflow
    {standard input}:2504   .text.checkForOverflow:00000100 $d
    {standard input}:2511   .text.handleYawSpin:00000000 $t
    {standard input}:2515   .text.handleYawSpin:00000000 handleYawSpin
    {standard input}:2593   .text.handleYawSpin:00000088 $d
    {standard input}:2599   .text.checkForYawSpin:00000000 $t
    {standard input}:2603   .text.checkForYawSpin:00000000 checkForYawSpin
    {standard input}:2682   .text.checkForYawSpin:00000074 $d
    {standard input}:2687   .text.filterGyro:00000000 $t
    {standard input}:2691   .text.filterGyro:00000000 filterGyro
    {standard input}:2870   .text.filterGyro:00000144 $d
    {standard input}:2876   .text.filterGyroDebug:00000000 $t
    {standard input}:2880   .text.filterGyroDebug:00000000 filterGyroDebug
    {standard input}:3103   .text.filterGyroDebug:00000198 $d
    {standard input}:3111   .text.gyroUpdateSensor:00000000 $t
    {standard input}:3115   .text.gyroUpdateSensor:00000000 gyroUpdateSensor
    {standard input}:3297   .text.gyroUpdateSensor:00000150 $d
    {standard input}:3305   .text.gyroUpdate:00000000 $t
    {standard input}:3310   .text.gyroUpdate:00000000 gyroUpdate
    {standard input}:3359   .text.gyroUpdate:00000034 $d
    {standard input}:3365   .text.gyroGetAccumulationAverage:00000000 $t
    {standard input}:3370   .text.gyroGetAccumulationAverage:00000000 gyroGetAccumulationAverage
    {standard input}:3483   .text.gyroGetAccumulationAverage:00000090 $d
    {standard input}:3489   .text.gyroReadTemperature:00000000 $t
    {standard input}:3494   .text.gyroReadTemperature:00000000 gyroReadTemperature
    {standard input}:3525   .text.gyroReadTemperature:00000018 $d
    {standard input}:3531   .text.gyroGetTemperature:00000000 $t
    {standard input}:3536   .text.gyroGetTemperature:00000000 gyroGetTemperature
    {standard input}:3569   .text.gyroGetTemperature:00000018 $d
    {standard input}:3574   .text.gyroRateDps:00000000 $t
    {standard input}:3579   .text.gyroRateDps:00000000 gyroRateDps
    {standard input}:3628   .text.gyroRateDps:00000040 $d
    {standard input}:3634   .text.gyroOverflowDetected:00000000 $t
    {standard input}:3639   .text.gyroOverflowDetected:00000000 gyroOverflowDetected
    {standard input}:3670   .text.gyroOverflowDetected:00000014 $d
    {standard input}:3675   .text.gyroYawSpinDetected:00000000 $t
    {standard input}:3680   .text.gyroYawSpinDetected:00000000 gyroYawSpinDetected
    {standard input}:3711   .text.gyroYawSpinDetected:00000014 $d
    {standard input}:3716   .text.gyroAbsRateDps:00000000 $t
    {standard input}:3721   .text.gyroAbsRateDps:00000000 gyroAbsRateDps
    {standard input}:3768   .text.gyroAbsRateDps:00000034 $d
    {standard input}:3773   .text.gyroReadRegister:00000000 $t
    {standard input}:3778   .text.gyroReadRegister:00000000 gyroReadRegister
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
mpu6500GyroDetect
sensorsSet
detectedSensors
mpuDetect
gyroSetSampleRate
mpuResetFn
debugMode
pt1FilterGain
pt1FilterInit
biquadFilterInitLPF
nullFilterApply
pt1FilterApply
biquadFilterApply
filterGetNotchQ
biquadFilterInit
devClear
devPush
devStandardDeviation
lrintf
schedulerResetTaskStatistics
getArmingDisableFlags
beeper
debug
alignSensors
mpuGyroReadRegister
