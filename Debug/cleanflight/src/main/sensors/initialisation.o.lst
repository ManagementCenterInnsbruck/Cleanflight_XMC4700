   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "initialisation.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.barometerConfig,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	barometerConfig:
  25              	.LFB541:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/barometer.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** #include "pg/pg.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** #include "drivers/barometer/barometer.h"
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** typedef enum {
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_DEFAULT = 0,
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_NONE = 1,
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_BMP085 = 2,
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_MS5611 = 3,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_BMP280 = 4,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_LPS = 5,
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     BARO_QMP6988 = 6,
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 	BARO_DPS310 = 7
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** } baroSensor_e;
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** #define BARO_SAMPLE_COUNT_MAX   48
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** typedef struct barometerConfig_s {
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_bustype;
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_spi_device;
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     ioTag_t baro_spi_csn;                   // Also used as XCLR (positive logic) for BMP085
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_i2c_device;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_i2c_address;
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_hardware;                  // Barometer hardware to use
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint8_t baro_sample_count;              // size of baro filter array
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint16_t baro_noise_lpf;                // additional LPF to reduce baro noise
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint16_t baro_cf_vel;                   // apply Complimentary Filter to keep the calculated ve
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h ****     uint16_t baro_cf_alt;                   // apply CF to use ACC for height estimation
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** } barometerConfig_t;
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** 
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors\barometer.h **** PG_DECLARE(barometerConfig_t, barometerConfig);
  27              	 .loc 1 52 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 52 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word barometerConfig_System
  55              	 .cfi_endproc
  56              	.LFE541:
  58              	 .global requestedSensors
  59              	 .section .data.requestedSensors,"aw",%progbits
  60              	 .align 2
  63              	requestedSensors:
  64 0000 00       	 .byte 0
  65 0001 01       	 .byte 1
  66 0002 01       	 .byte 1
  67 0003 01       	 .byte 1
  68 0004 00       	 .byte 0
  69              	 .global detectedSensors
  70 0005 000000   	 .section .data.detectedSensors,"aw",%progbits
  71              	 .align 2
  74              	detectedSensors:
  75 0000 00       	 .byte 0
  76 0001 01       	 .byte 1
  77 0002 01       	 .byte 1
  78 0003 01       	 .byte 1
  79 0004 00       	 .byte 0
  80 0005 000000   	 .section .text.sensorsAutodetect,"ax",%progbits
  81              	 .align 2
  82              	 .global sensorsAutodetect
  83              	 .thumb
  84              	 .thumb_func
  86              	sensorsAutodetect:
  87              	.LFB547:
  88              	 .file 2 "../cleanflight/src/main/sensors/initialisation.c"
   1:../cleanflight/src/main/sensors/initialisation.c **** /*
   2:../cleanflight/src/main/sensors/initialisation.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/sensors/initialisation.c ****  *
   4:../cleanflight/src/main/sensors/initialisation.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/sensors/initialisation.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/sensors/initialisation.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/sensors/initialisation.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/sensors/initialisation.c ****  * any later version.
   9:../cleanflight/src/main/sensors/initialisation.c ****  *
  10:../cleanflight/src/main/sensors/initialisation.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/sensors/initialisation.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/sensors/initialisation.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/sensors/initialisation.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/sensors/initialisation.c ****  *
  15:../cleanflight/src/main/sensors/initialisation.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/sensors/initialisation.c ****  * along with this software.
  17:../cleanflight/src/main/sensors/initialisation.c ****  *
  18:../cleanflight/src/main/sensors/initialisation.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/sensors/initialisation.c ****  */
  20:../cleanflight/src/main/sensors/initialisation.c **** 
  21:../cleanflight/src/main/sensors/initialisation.c **** #include <stdbool.h>
  22:../cleanflight/src/main/sensors/initialisation.c **** #include <stdint.h>
  23:../cleanflight/src/main/sensors/initialisation.c **** #include <string.h>
  24:../cleanflight/src/main/sensors/initialisation.c **** 
  25:../cleanflight/src/main/sensors/initialisation.c **** #include "platform.h"
  26:../cleanflight/src/main/sensors/initialisation.c **** 
  27:../cleanflight/src/main/sensors/initialisation.c **** #include "common/utils.h"
  28:../cleanflight/src/main/sensors/initialisation.c **** 
  29:../cleanflight/src/main/sensors/initialisation.c **** #include "config/feature.h"
  30:../cleanflight/src/main/sensors/initialisation.c **** #include "pg/pg.h"
  31:../cleanflight/src/main/sensors/initialisation.c **** #include "pg/pg_ids.h"
  32:../cleanflight/src/main/sensors/initialisation.c **** 
  33:../cleanflight/src/main/sensors/initialisation.c **** #include "fc/config.h"
  34:../cleanflight/src/main/sensors/initialisation.c **** #include "fc/runtime_config.h"
  35:../cleanflight/src/main/sensors/initialisation.c **** 
  36:../cleanflight/src/main/sensors/initialisation.c **** #include "sensors/sensors.h"
  37:../cleanflight/src/main/sensors/initialisation.c **** #include "sensors/adcinternal.h"
  38:../cleanflight/src/main/sensors/initialisation.c **** #include "sensors/acceleration.h"
  39:../cleanflight/src/main/sensors/initialisation.c **** #include "sensors/barometer.h"
  40:../cleanflight/src/main/sensors/initialisation.c **** #include "sensors/gyro.h"
  41:../cleanflight/src/main/sensors/initialisation.c **** #include "sensors/compass.h"
  42:../cleanflight/src/main/sensors/initialisation.c **** #include "sensors/rangefinder.h"
  43:../cleanflight/src/main/sensors/initialisation.c **** #include "sensors/initialisation.h"
  44:../cleanflight/src/main/sensors/initialisation.c **** 
  45:../cleanflight/src/main/sensors/initialisation.c **** // requestedSensors is not actually used
  46:../cleanflight/src/main/sensors/initialisation.c **** uint8_t requestedSensors[SENSOR_INDEX_COUNT] = { GYRO_NONE, ACC_NONE, BARO_NONE, MAG_NONE, RANGEFIN
  47:../cleanflight/src/main/sensors/initialisation.c **** uint8_t detectedSensors[SENSOR_INDEX_COUNT] = { GYRO_NONE, ACC_NONE, BARO_NONE, MAG_NONE, RANGEFIND
  48:../cleanflight/src/main/sensors/initialisation.c **** 
  49:../cleanflight/src/main/sensors/initialisation.c **** bool sensorsAutodetect(void)
  50:../cleanflight/src/main/sensors/initialisation.c **** {
  89              	 .loc 2 50 0
  90              	 .cfi_startproc
  91              	 
  92              	 
  93 0000 80B5     	 push {r7,lr}
  94              	.LCFI4:
  95              	 .cfi_def_cfa_offset 8
  96              	 .cfi_offset 7,-8
  97              	 .cfi_offset 14,-4
  98 0002 82B0     	 sub sp,sp,#8
  99              	.LCFI5:
 100              	 .cfi_def_cfa_offset 16
 101 0004 00AF     	 add r7,sp,#0
 102              	.LCFI6:
 103              	 .cfi_def_cfa_register 7
  51:../cleanflight/src/main/sensors/initialisation.c **** 
  52:../cleanflight/src/main/sensors/initialisation.c ****     // gyro must be initialised before accelerometer
  53:../cleanflight/src/main/sensors/initialisation.c **** 
  54:../cleanflight/src/main/sensors/initialisation.c ****     bool gyroDetected = gyroInit();
 104              	 .loc 2 54 0
 105 0006 FFF7FEFF 	 bl gyroInit
 106 000a 0346     	 mov r3,r0
 107 000c FB71     	 strb r3,[r7,#7]
  55:../cleanflight/src/main/sensors/initialisation.c **** 
  56:../cleanflight/src/main/sensors/initialisation.c ****     if (gyroDetected) {
 108              	 .loc 2 56 0
 109 000e FB79     	 ldrb r3,[r7,#7]
 110 0010 002B     	 cmp r3,#0
 111 0012 04D0     	 beq .L6
  57:../cleanflight/src/main/sensors/initialisation.c ****         accInit(gyro.targetLooptime);
 112              	 .loc 2 57 0
 113 0014 094B     	 ldr r3,.L8
 114 0016 1B68     	 ldr r3,[r3]
 115 0018 1846     	 mov r0,r3
 116 001a FFF7FEFF 	 bl accInit
 117              	.L6:
  58:../cleanflight/src/main/sensors/initialisation.c ****     }
  59:../cleanflight/src/main/sensors/initialisation.c **** 
  60:../cleanflight/src/main/sensors/initialisation.c **** #ifdef USE_MAG
  61:../cleanflight/src/main/sensors/initialisation.c ****     compassInit();
 118              	 .loc 2 61 0
 119 001e FFF7FEFF 	 bl compassInit
  62:../cleanflight/src/main/sensors/initialisation.c **** #endif
  63:../cleanflight/src/main/sensors/initialisation.c **** 
  64:../cleanflight/src/main/sensors/initialisation.c **** #ifdef USE_BARO
  65:../cleanflight/src/main/sensors/initialisation.c ****     baroDetect(&baro.dev, barometerConfig()->baro_hardware);
 120              	 .loc 2 65 0
 121 0022 FFF7FEFF 	 bl barometerConfig
 122 0026 0346     	 mov r3,r0
 123 0028 5B79     	 ldrb r3,[r3,#5]
 124 002a 0548     	 ldr r0,.L8+4
 125 002c 1946     	 mov r1,r3
 126 002e FFF7FEFF 	 bl baroDetect
  66:../cleanflight/src/main/sensors/initialisation.c **** #endif
  67:../cleanflight/src/main/sensors/initialisation.c **** 
  68:../cleanflight/src/main/sensors/initialisation.c **** #ifdef USE_RANGEFINDER
  69:../cleanflight/src/main/sensors/initialisation.c ****     rangefinderInit();
  70:../cleanflight/src/main/sensors/initialisation.c **** #endif
  71:../cleanflight/src/main/sensors/initialisation.c **** 
  72:../cleanflight/src/main/sensors/initialisation.c **** #ifdef USE_ADC_INTERNAL
  73:../cleanflight/src/main/sensors/initialisation.c ****     adcInternalInit();
  74:../cleanflight/src/main/sensors/initialisation.c **** #endif
  75:../cleanflight/src/main/sensors/initialisation.c **** 
  76:../cleanflight/src/main/sensors/initialisation.c ****     return gyroDetected;
 127              	 .loc 2 76 0
 128 0032 FB79     	 ldrb r3,[r7,#7]
  77:../cleanflight/src/main/sensors/initialisation.c **** }
 129              	 .loc 2 77 0
 130 0034 1846     	 mov r0,r3
 131 0036 0837     	 adds r7,r7,#8
 132              	.LCFI7:
 133              	 .cfi_def_cfa_offset 8
 134 0038 BD46     	 mov sp,r7
 135              	.LCFI8:
 136              	 .cfi_def_cfa_register 13
 137              	 
 138 003a 80BD     	 pop {r7,pc}
 139              	.L9:
 140              	 .align 2
 141              	.L8:
 142 003c 00000000 	 .word gyro
 143 0040 00000000 	 .word baro
 144              	 .cfi_endproc
 145              	.LFE547:
 147              	 .text
 148              	.Letext0:
 149              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 150              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 151              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/xmc4700.h"
 152              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMCLib/inc/xmc_usic.h"
 153              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/platform.h"
 154              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/config/feature.h"
 155              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/fc/config.h"
 156              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/sensors.h"
 157              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 158              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 159              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus_i2c.h"
 160              	 .file 14 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/bus.h"
 161              	 .file 15 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/sensor.h"
 162              	 .file 16 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/gyro.h"
 163              	 .file 17 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/acceleration.h"
 164              	 .file 18 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/barometer/barometer.h"
 165              	 .file 19 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/compass.h"
 166              	 .file 20 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/sensors/rangefinder.h"
 167              	 .file 21 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 168              	 .file 22 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 initialisation.c
    {standard input}:20     .text.barometerConfig:00000000 $t
    {standard input}:24     .text.barometerConfig:00000000 barometerConfig
    {standard input}:54     .text.barometerConfig:00000010 $d
    {standard input}:63     .data.requestedSensors:00000000 requestedSensors
    {standard input}:60     .data.requestedSensors:00000000 $d
    {standard input}:74     .data.detectedSensors:00000000 detectedSensors
    {standard input}:71     .data.detectedSensors:00000000 $d
    {standard input}:81     .text.sensorsAutodetect:00000000 $t
    {standard input}:86     .text.sensorsAutodetect:00000000 sensorsAutodetect
    {standard input}:142    .text.sensorsAutodetect:0000003c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
barometerConfig_System
gyroInit
accInit
compassInit
baroDetect
gyro
baro
