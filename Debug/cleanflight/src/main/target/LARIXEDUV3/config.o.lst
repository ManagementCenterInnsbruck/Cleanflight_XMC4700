   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "config.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.motorConfigMutable,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	motorConfigMutable:
  25              	.LFB533:
  26              	 .file 1 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight/mixer.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "platform.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "common/time.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/pwm_output_counts.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/io_types.h"
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #include "drivers/pwm_output.h"
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define QUAD_MOTOR_COUNT 4
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define BRUSHED_MOTORS_PWM_RATE 16000
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define BRUSHLESS_MOTORS_PWM_RATE 480
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Digital protocol has fixed values
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_DISARM_COMMAND      0
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_MIN_THROTTLE       48
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_MAX_THROTTLE     2047
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_3D_DEADBAND_LOW  1047
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** #define DSHOT_3D_DEADBAND_HIGH 1048
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Note: this is called MultiType/MULTITYPE_* in baseflight.
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef enum mixerMode
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** {
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_TRI = 1,
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADP = 2,
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADX = 3,
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_BICOPTER = 4,
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_GIMBAL = 5,
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_Y6 = 6,
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6 = 7,
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_FLYING_WING = 8,
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_Y4 = 9,
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6X = 10,
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOX8 = 11,
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOFLATP = 12,
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_OCTOFLATX = 13,
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_AIRPLANE = 14,        // airplane / singlecopter / dualcopter (not yet properly supported
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HELI_120_CCPM = 15,
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HELI_90_DEG = 16,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_VTAIL4 = 17,
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_HEX6H = 18,
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_RX_TO_SERVO = 19,    // PPM -> servo relay
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_DUALCOPTER = 20,
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_SINGLECOPTER = 21,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_ATAIL4 = 22,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM = 23,
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM_AIRPLANE = 24,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_CUSTOM_TRI = 25,
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     MIXER_QUADX_1234 = 26
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixerMode_e;
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Custom mixer data per motor
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct motorMixer_s {
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float throttle;
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float roll;
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float pitch;
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     float yaw;
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } motorMixer_t;
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE_ARRAY(motorMixer_t, MAX_SUPPORTED_MOTORS, customMotorMixer);
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** // Custom mixer configuration
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct mixer_s {
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t motorCount;
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t useServo;
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     const motorMixer_t *motor;
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixer_t;
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct mixerConfig_s {
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t mixerMode;
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     bool yaw_motors_reversed;
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t crashflip_motor_percent;
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } mixerConfig_t;
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE(mixerConfig_t, mixerConfig);
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** typedef struct motorConfig_s {
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     motorDevConfig_t dev;
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t digitalIdleOffsetValue;        // Idle value for DShot protocol, full motor output = 1
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t minthrottle;                   // Set the minimum throttle command sent to the ESC (El
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t maxthrottle;                   // This is the maximum value for the ESCs at full power
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint16_t mincommand;                    // This is the value for the ESCs when they are not arm
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h ****     uint8_t motorPoleCount;                // Magnetic poles in the motors for calculating actual R
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** } motorConfig_t;
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** 
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/flight\mixer.h **** PG_DECLARE(motorConfig_t, motorConfig);
  27              	 .loc 1 107 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
  39              	 .loc 1 107 0
  40 0004 024B     	 ldr r3,.L3
  41 0006 1846     	 mov r0,r3
  42 0008 BD46     	 mov sp,r7
  43              	.LCFI2:
  44              	 .cfi_def_cfa_register 13
  45              	 
  46 000a 5DF8047B 	 ldr r7,[sp],#4
  47              	.LCFI3:
  48              	 .cfi_restore 7
  49              	 .cfi_def_cfa_offset 0
  50 000e 7047     	 bx lr
  51              	.L4:
  52              	 .align 2
  53              	.L3:
  54 0010 00000000 	 .word motorConfig_System
  55              	 .cfi_endproc
  56              	.LFE533:
  58              	 .section .text.rxConfigMutable,"ax",%progbits
  59              	 .align 2
  60              	 .thumb
  61              	 .thumb_func
  63              	rxConfigMutable:
  64              	.LFB535:
  65              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg/rx.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #include "drivers/io_types.h"
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** #include "pg/pg.h"
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** typedef struct rxConfig_s {
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcmap[RX_MAPPABLE_CHANNEL_COUNT];  // mapping of radio channels to internal RPYTA+ orde
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t serialrx_provider;              // type of UART-based receiver (0 = spek 10, 1 = spek 1
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t serialrx_inverted;              // invert the serial RX protocol compared to it's defau
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t halfDuplex;                     // allow rx to operate in half duplex mode on F4, ignor
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     ioTag_t spektrum_bind_pin_override_ioTag;
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     ioTag_t spektrum_bind_plug_ioTag;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t spektrum_sat_bind;              // number of bind pulses for Spektrum satellite receive
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t spektrum_sat_bind_autoreset;    // whenever we will reset (exit) binding mode after har
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_channel;
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_scale;
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_invert;
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t midrc;                         // Some radios have not a neutral point centered on 150
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t mincheck;                      // minimum rc end
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t maxcheck;                      // maximum rc end
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolation;
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolationChannels;
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rcInterpolationInterval;
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t fpvCamAngleDegrees;             // Camera angle to be scaled into rc commands
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t airModeActivateThreshold;       // Throttle setpoint percent where airmode gets activat
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t rx_min_usec;
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint16_t rx_max_usec;
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t max_aux_channel;
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rssi_src_frame_errors;          // true to use frame drop flags in the rx protocol
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     int8_t rssi_offset;                     // offset applied to the RSSI value before it is return
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_type;              // Determines the smoothing algorithm to use: INTERPOLA
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_input_cutoff;      // Filter cutoff frequency for the input filter (0 = au
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_derivative_cutoff; // Filter cutoff frequency for the setpoint weight deri
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_debug_axis;        // Axis to log as debug values when debug_mode = RC_SMO
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_input_type;        // Input filter type (0 = PT1, 1 = BIQUAD)
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h ****     uint8_t rc_smoothing_derivative_type;   // Derivative filter type (0 = OFF, 1 = PT1, 2 = BIQUAD
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** } rxConfig_t;
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** 
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/pg\rx.h **** PG_DECLARE(rxConfig_t, rxConfig);
  66              	 .loc 2 61 0
  67              	 .cfi_startproc
  68              	 
  69              	 
  70              	 
  71 0000 80B4     	 push {r7}
  72              	.LCFI4:
  73              	 .cfi_def_cfa_offset 4
  74              	 .cfi_offset 7,-4
  75 0002 00AF     	 add r7,sp,#0
  76              	.LCFI5:
  77              	 .cfi_def_cfa_register 7
  78              	 .loc 2 61 0
  79 0004 024B     	 ldr r3,.L7
  80 0006 1846     	 mov r0,r3
  81 0008 BD46     	 mov sp,r7
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 13
  84              	 
  85 000a 5DF8047B 	 ldr r7,[sp],#4
  86              	.LCFI7:
  87              	 .cfi_restore 7
  88              	 .cfi_def_cfa_offset 0
  89 000e 7047     	 bx lr
  90              	.L8:
  91              	 .align 2
  92              	.L7:
  93 0010 00000000 	 .word rxConfig_System
  94              	 .cfi_endproc
  95              	.LFE535:
  97              	 .section .text.serialConfigMutable,"ax",%progbits
  98              	 .align 2
  99              	 .thumb
 100              	 .thumb_func
 102              	serialConfigMutable:
 103              	.LFB545:
 104              	 .file 3 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io/serial.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** /*
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * This file is part of Cleanflight and Betaflight.
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * this software and/or modify this software under the terms of the
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * GNU General Public License as published by the Free Software
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * Foundation, either version 3 of the License, or (at your option)
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * any later version.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * See the GNU General Public License for more details.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * You should have received a copy of the GNU General Public License
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * along with this software.
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  * If not, see <http://www.gnu.org/licenses/>.
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****  */
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #pragma once
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include <stdint.h>
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include <stdbool.h>
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include "pg/pg.h"
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #include "drivers/serial.h"
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     PORTSHARING_UNUSED = 0,
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     PORTSHARING_NOT_SHARED,
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     PORTSHARING_SHARED
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } portSharing_e;
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_NONE                = 0,
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_MSP                 = (1 << 0),  // 1
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_GPS                 = (1 << 1),  // 2
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_FRSKY_HUB = (1 << 2),  // 4
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_HOTT      = (1 << 3),  // 8
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_LTM       = (1 << 4),  // 16
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_SMARTPORT = (1 << 5),  // 32
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_RX_SERIAL           = (1 << 6),  // 64
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_BLACKBOX            = (1 << 7),  // 128
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_MAVLINK   = (1 << 9),  // 512
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_ESC_SENSOR          = (1 << 10), // 1024
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_VTX_SMARTAUDIO      = (1 << 11), // 2048
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_TELEMETRY_IBUS      = (1 << 12), // 4096
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_VTX_TRAMP           = (1 << 13), // 8192
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_RCDEVICE            = (1 << 14), // 16384
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     FUNCTION_LIDAR_TF            = (1 << 15), // 32768
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortFunction_e;
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define TELEMETRY_SHAREABLE_PORT_FUNCTIONS_MASK (FUNCTION_TELEMETRY_FRSKY_HUB | FUNCTION_TELEMETRY_
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define TELEMETRY_PORT_FUNCTIONS_MASK (TELEMETRY_SHAREABLE_PORT_FUNCTIONS_MASK | FUNCTION_TELEMETRY
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_AUTO = 0,
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_9600,
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_19200,
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_38400,
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_57600,
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_115200,
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_230400,
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_250000,
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_400000,
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_460800,
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_500000,
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_921600,
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_1000000,
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_1500000,
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_2000000,
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     BAUD_2470000
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } baudRate_e;
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** extern const uint32_t baudRates[];
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** // serial port identifiers are now fixed, these values are used by MSP commands.
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef enum {
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_NONE = -1,
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART1 = 0,
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART2,
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART3,
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_UART4,
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_UART5,
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART6,
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART7,
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USART8,
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_USB_VCP = 20,
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_SOFTSERIAL1 = 30,
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     SERIAL_PORT_SOFTSERIAL2,
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS1 = 40,
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS2,
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS3,
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS4,
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS5,
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 	SERIAL_PORT_SPIS6,
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortIdentifier_e;
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** extern const serialPortIdentifier_e serialPortIdentifiers[SERIAL_PORT_COUNT];
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define SERIAL_PORT_IDENTIFIER_TO_INDEX(x) (((x) <= SERIAL_PORT_USART8) ? (x) : (RESOURCE_SOFT_OFFS
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** #define SERIAL_PORT_IDENTIFIER_TO_UARTDEV(x) ((x) - SERIAL_PORT_USART1 + UARTDEV_1)
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** // runtime
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef struct serialPortUsage_s {
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPort_t *serialPort;
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortFunction_e function;
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortIdentifier_e identifier;
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortUsage_t;
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** serialPort_t *findSharedSerialPort(uint16_t functionMask, serialPortFunction_e sharedWithFunction);
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** // configuration
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** //
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef struct serialPortConfig_s {
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint16_t functionMask;
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortIdentifier_e identifier;
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t msp_baudrateIndex;
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t gps_baudrateIndex;
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t blackbox_baudrateIndex;
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t telemetry_baudrateIndex; // not used for all telemetry systems, e.g. HoTT only works at
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialPortConfig_t;
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** typedef struct serialConfig_s {
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     serialPortConfig_t portConfigs[SERIAL_PORT_COUNT];
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint16_t serial_update_rate_hz;
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h ****     uint8_t reboot_character;               // which byte is used to reboot. Default 'R', could be 
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** } serialConfig_t;
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** 
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/io\serial.h **** PG_DECLARE(serialConfig_t, serialConfig);
 105              	 .loc 3 135 0
 106              	 .cfi_startproc
 107              	 
 108              	 
 109              	 
 110 0000 80B4     	 push {r7}
 111              	.LCFI8:
 112              	 .cfi_def_cfa_offset 4
 113              	 .cfi_offset 7,-4
 114 0002 00AF     	 add r7,sp,#0
 115              	.LCFI9:
 116              	 .cfi_def_cfa_register 7
 117              	 .loc 3 135 0
 118 0004 024B     	 ldr r3,.L11
 119 0006 1846     	 mov r0,r3
 120 0008 BD46     	 mov sp,r7
 121              	.LCFI10:
 122              	 .cfi_def_cfa_register 13
 123              	 
 124 000a 5DF8047B 	 ldr r7,[sp],#4
 125              	.LCFI11:
 126              	 .cfi_restore 7
 127              	 .cfi_def_cfa_offset 0
 128 000e 7047     	 bx lr
 129              	.L12:
 130              	 .align 2
 131              	.L11:
 132 0010 00000000 	 .word serialConfig_System
 133              	 .cfi_endproc
 134              	.LFE545:
 136              	 .section .text.targetConfiguration,"ax",%progbits
 137              	 .align 2
 138              	 .global targetConfiguration
 139              	 .thumb
 140              	 .thumb_func
 142              	targetConfiguration:
 143              	.LFB546:
 144              	 .file 4 "../cleanflight/src/main/target/LARIXEDUV3/config.c"
   1:../cleanflight/src/main/target/LARIXEDUV3/config.c **** /*
   2:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * This file is part of Cleanflight and Betaflight.
   3:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  *
   4:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * Cleanflight and Betaflight are free software. You can redistribute
   5:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * this software and/or modify this software under the terms of the
   6:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * GNU General Public License as published by the Free Software
   7:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * Foundation, either version 3 of the License, or (at your option)
   8:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * any later version.
   9:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  *
  10:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * Cleanflight and Betaflight are distributed in the hope that they
  11:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * will be useful, but WITHOUT ANY WARRANTY; without even the implied
  12:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  13:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * See the GNU General Public License for more details.
  14:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  *
  15:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * You should have received a copy of the GNU General Public License
  16:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * along with this software.
  17:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  *
  18:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  * If not, see <http://www.gnu.org/licenses/>.
  19:../cleanflight/src/main/target/LARIXEDUV3/config.c ****  */
  20:../cleanflight/src/main/target/LARIXEDUV3/config.c **** 
  21:../cleanflight/src/main/target/LARIXEDUV3/config.c **** #include <stdbool.h>
  22:../cleanflight/src/main/target/LARIXEDUV3/config.c **** #include <stdint.h>
  23:../cleanflight/src/main/target/LARIXEDUV3/config.c **** 
  24:../cleanflight/src/main/target/LARIXEDUV3/config.c **** #include "platform.h"
  25:../cleanflight/src/main/target/LARIXEDUV3/config.c **** 
  26:../cleanflight/src/main/target/LARIXEDUV3/config.c **** #ifdef USE_TARGET_CONFIG
  27:../cleanflight/src/main/target/LARIXEDUV3/config.c **** 
  28:../cleanflight/src/main/target/LARIXEDUV3/config.c **** #include "flight/mixer.h"
  29:../cleanflight/src/main/target/LARIXEDUV3/config.c **** #include "rx/rx.h"
  30:../cleanflight/src/main/target/LARIXEDUV3/config.c **** #include "io/serial.h"
  31:../cleanflight/src/main/target/LARIXEDUV3/config.c **** 
  32:../cleanflight/src/main/target/LARIXEDUV3/config.c **** void targetConfiguration(void)
  33:../cleanflight/src/main/target/LARIXEDUV3/config.c **** {
 145              	 .loc 4 33 0
 146              	 .cfi_startproc
 147              	 
 148              	 
 149 0000 98B5     	 push {r3,r4,r7,lr}
 150              	.LCFI12:
 151              	 .cfi_def_cfa_offset 16
 152              	 .cfi_offset 3,-16
 153              	 .cfi_offset 4,-12
 154              	 .cfi_offset 7,-8
 155              	 .cfi_offset 14,-4
 156 0002 00AF     	 add r7,sp,#0
 157              	.LCFI13:
 158              	 .cfi_def_cfa_register 7
  34:../cleanflight/src/main/target/LARIXEDUV3/config.c ****     motorConfigMutable()->dev.motorPwmProtocol = PWM_TYPE_STANDARD;
 159              	 .loc 4 34 0
 160 0004 FFF7FEFF 	 bl motorConfigMutable
 161 0008 0346     	 mov r3,r0
 162 000a 0022     	 movs r2,#0
 163 000c 9A70     	 strb r2,[r3,#2]
  35:../cleanflight/src/main/target/LARIXEDUV3/config.c **** 
  36:../cleanflight/src/main/target/LARIXEDUV3/config.c ****     rxConfigMutable()->serialrx_provider = SERIALRX_IBUS;
 164              	 .loc 4 36 0
 165 000e FFF7FEFF 	 bl rxConfigMutable
 166 0012 0346     	 mov r3,r0
 167 0014 0722     	 movs r2,#7
 168 0016 1A72     	 strb r2,[r3,#8]
  37:../cleanflight/src/main/target/LARIXEDUV3/config.c ****     serialConfigMutable()->portConfigs[findSerialPortIndexByIdentifier(SERIALRX_UART)].functionMask
 169              	 .loc 4 37 0
 170 0018 FFF7FEFF 	 bl serialConfigMutable
 171 001c 0446     	 mov r4,r0
 172 001e 0520     	 movs r0,#5
 173 0020 FFF7FEFF 	 bl findSerialPortIndexByIdentifier
 174 0024 0246     	 mov r2,r0
 175 0026 1346     	 mov r3,r2
 176 0028 DB00     	 lsls r3,r3,#3
 177 002a 9B1A     	 subs r3,r3,r2
 178 002c 2344     	 add r3,r3,r4
 179 002e 0022     	 movs r2,#0
 180 0030 42F04002 	 orr r2,r2,#64
 181 0034 1A70     	 strb r2,[r3]
 182 0036 0022     	 movs r2,#0
 183 0038 5A70     	 strb r2,[r3,#1]
  38:../cleanflight/src/main/target/LARIXEDUV3/config.c **** 
  39:../cleanflight/src/main/target/LARIXEDUV3/config.c ****     serialConfigMutable()->portConfigs[findSerialPortIndexByIdentifier(SERIAL_PORT_SPIS3)].function
 184              	 .loc 4 39 0
 185 003a FFF7FEFF 	 bl serialConfigMutable
 186 003e 0446     	 mov r4,r0
 187 0040 2A20     	 movs r0,#42
 188 0042 FFF7FEFF 	 bl findSerialPortIndexByIdentifier
 189 0046 0246     	 mov r2,r0
 190 0048 1346     	 mov r3,r2
 191 004a DB00     	 lsls r3,r3,#3
 192 004c 9B1A     	 subs r3,r3,r2
 193 004e 2344     	 add r3,r3,r4
 194 0050 0022     	 movs r2,#0
 195 0052 42F00102 	 orr r2,r2,#1
 196 0056 1A70     	 strb r2,[r3]
 197 0058 0022     	 movs r2,#0
 198 005a 5A70     	 strb r2,[r3,#1]
  40:../cleanflight/src/main/target/LARIXEDUV3/config.c ****     serialConfigMutable()->portConfigs[findSerialPortIndexByIdentifier(SERIAL_PORT_UART4)].function
 199              	 .loc 4 40 0
 200 005c FFF7FEFF 	 bl serialConfigMutable
 201 0060 0446     	 mov r4,r0
 202 0062 0320     	 movs r0,#3
 203 0064 FFF7FEFF 	 bl findSerialPortIndexByIdentifier
 204 0068 0246     	 mov r2,r0
 205 006a 1346     	 mov r3,r2
 206 006c DB00     	 lsls r3,r3,#3
 207 006e 9B1A     	 subs r3,r3,r2
 208 0070 2344     	 add r3,r3,r4
 209 0072 0022     	 movs r2,#0
 210 0074 42F00102 	 orr r2,r2,#1
 211 0078 1A70     	 strb r2,[r3]
 212 007a 0022     	 movs r2,#0
 213 007c 5A70     	 strb r2,[r3,#1]
  41:../cleanflight/src/main/target/LARIXEDUV3/config.c **** }
 214              	 .loc 4 41 0
 215 007e 98BD     	 pop {r3,r4,r7,pc}
 216              	 .cfi_endproc
 217              	.LFE546:
 219              	 .text
 220              	.Letext0:
 221              	 .file 5 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 222              	 .file 6 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 223              	 .file 7 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/common/time.h"
 224              	 .file 8 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/io_types.h"
 225              	 .file 9 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/pwm_output.h"
 226              	 .file 10 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/rx/rx.h"
 227              	 .file 11 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/src/main/drivers/serial.h"
 228              	 .file 12 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 229              	 .file 13 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 config.c
    {standard input}:20     .text.motorConfigMutable:00000000 $t
    {standard input}:24     .text.motorConfigMutable:00000000 motorConfigMutable
    {standard input}:54     .text.motorConfigMutable:00000010 $d
    {standard input}:59     .text.rxConfigMutable:00000000 $t
    {standard input}:63     .text.rxConfigMutable:00000000 rxConfigMutable
    {standard input}:93     .text.rxConfigMutable:00000010 $d
    {standard input}:98     .text.serialConfigMutable:00000000 $t
    {standard input}:102    .text.serialConfigMutable:00000000 serialConfigMutable
    {standard input}:132    .text.serialConfigMutable:00000010 $d
    {standard input}:137    .text.targetConfiguration:00000000 $t
    {standard input}:142    .text.targetConfiguration:00000000 targetConfiguration
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
motorConfig_System
rxConfig_System
serialConfig_System
findSerialPortIndexByIdentifier
