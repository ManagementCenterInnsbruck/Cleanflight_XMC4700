   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "system_XMC4700.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global SystemCoreClock
  20              	 .section .no_init,"aw",%progbits
  21              	 .align 2
  24              	SystemCoreClock:
  25 0000 00000000 	 .space 4
  26              	 .global g_chipid
  27              	 .align 2
  30              	g_chipid:
  31 0004 00000000 	 .space 16
  31      00000000 
  31      00000000 
  31      00000000 
  32              	 .section .text.delay,"ax",%progbits
  33              	 .align 2
  34              	 .thumb
  35              	 .thumb_func
  37              	delay:
  38              	.LFB130:
  39              	 .file 1 "../cleanflight/src/main/target/system_XMC4700.c"
   1:../cleanflight/src/main/target/system_XMC4700.c **** /**************************************************************************************************
   2:../cleanflight/src/main/target/system_XMC4700.c ****  * @file     system_XMC4700.c
   3:../cleanflight/src/main/target/system_XMC4700.c ****  * @brief    CMSIS Cortex-M4 Device Peripheral Access Layer Header File for the Infineon XMC4700 De
   4:../cleanflight/src/main/target/system_XMC4700.c ****  * @version  V1.0.5
   5:../cleanflight/src/main/target/system_XMC4700.c ****  * @date     26. sep 2017
   6:../cleanflight/src/main/target/system_XMC4700.c ****  *
   7:../cleanflight/src/main/target/system_XMC4700.c ****  * @cond
   8:../cleanflight/src/main/target/system_XMC4700.c ****  **************************************************************************************************
   9:../cleanflight/src/main/target/system_XMC4700.c ****  * Copyright (c) 2015-2017, Infineon Technologies AG
  10:../cleanflight/src/main/target/system_XMC4700.c ****  * All rights reserved.
  11:../cleanflight/src/main/target/system_XMC4700.c ****  *
  12:../cleanflight/src/main/target/system_XMC4700.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../cleanflight/src/main/target/system_XMC4700.c ****  * following conditions are met:
  14:../cleanflight/src/main/target/system_XMC4700.c ****  *
  15:../cleanflight/src/main/target/system_XMC4700.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../cleanflight/src/main/target/system_XMC4700.c ****  * disclaimer.
  17:../cleanflight/src/main/target/system_XMC4700.c ****  *
  18:../cleanflight/src/main/target/system_XMC4700.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../cleanflight/src/main/target/system_XMC4700.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  20:../cleanflight/src/main/target/system_XMC4700.c ****  *
  21:../cleanflight/src/main/target/system_XMC4700.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../cleanflight/src/main/target/system_XMC4700.c ****  * products derived from this software without specific prior written permission.
  23:../cleanflight/src/main/target/system_XMC4700.c ****  *
  24:../cleanflight/src/main/target/system_XMC4700.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../cleanflight/src/main/target/system_XMC4700.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../cleanflight/src/main/target/system_XMC4700.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../cleanflight/src/main/target/system_XMC4700.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../cleanflight/src/main/target/system_XMC4700.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../cleanflight/src/main/target/system_XMC4700.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../cleanflight/src/main/target/system_XMC4700.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:../cleanflight/src/main/target/system_XMC4700.c ****  *
  32:../cleanflight/src/main/target/system_XMC4700.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../cleanflight/src/main/target/system_XMC4700.c ****  * Infineon Technologies AG dave@infineon.com).
  34:../cleanflight/src/main/target/system_XMC4700.c ****  **************************************************************************************************
  35:../cleanflight/src/main/target/system_XMC4700.c ****  *
  36:../cleanflight/src/main/target/system_XMC4700.c ****  ********************** Version History ***************************************
  37:../cleanflight/src/main/target/system_XMC4700.c ****  * V1.0.0, 03. Sep 2015, Initial version
  38:../cleanflight/src/main/target/system_XMC4700.c ****  * V1.0.1, 26. Jan 2016, Disable trap generation from clock unit
  39:../cleanflight/src/main/target/system_XMC4700.c ****  * V1.0.2, 01. Jun 2016, Fix masking of OSCHPCTRL value
  40:../cleanflight/src/main/target/system_XMC4700.c ****  * V1.0.3, 09. Feb 2017, Fix activation of USBPLL when SDMMC clock is enabled 
  41:../cleanflight/src/main/target/system_XMC4700.c ****  * V1.0.4, 19. Jun 2017, Rely on cmsis_compiler.h instead of defining __WEAK 
  42:../cleanflight/src/main/target/system_XMC4700.c ****  *                       Added support for ARM Compiler 6 (armclang) 
  43:../cleanflight/src/main/target/system_XMC4700.c ****  * V1.0.5, 26. Sep 2017, Disable FPU if FPU_USED is zero    
  44:../cleanflight/src/main/target/system_XMC4700.c ****  ******************************************************************************
  45:../cleanflight/src/main/target/system_XMC4700.c ****  * @endcond
  46:../cleanflight/src/main/target/system_XMC4700.c ****  */
  47:../cleanflight/src/main/target/system_XMC4700.c **** 
  48:../cleanflight/src/main/target/system_XMC4700.c **** /*******************************************************************************
  49:../cleanflight/src/main/target/system_XMC4700.c ****  * Default clock initialization
  50:../cleanflight/src/main/target/system_XMC4700.c ****  * fPLL = 288MHz => fSYS = 144MHz => fCPU = 144MHz
  51:../cleanflight/src/main/target/system_XMC4700.c ****  *                                => fPB  = 144MHz
  52:../cleanflight/src/main/target/system_XMC4700.c ****  *                                => fCCU = 144MHz
  53:../cleanflight/src/main/target/system_XMC4700.c ****  *                                => fETH = 72MHz
  54:../cleanflight/src/main/target/system_XMC4700.c ****  *               => fUSB = 48MHz
  55:../cleanflight/src/main/target/system_XMC4700.c ****  *               => fEBU = 72MHz
  56:../cleanflight/src/main/target/system_XMC4700.c ****  *
  57:../cleanflight/src/main/target/system_XMC4700.c ****  * fUSBPLL Disabled, only enabled if SCU_CLK_USBCLKCR_USBSEL_USBPLL is selected
  58:../cleanflight/src/main/target/system_XMC4700.c ****  *
  59:../cleanflight/src/main/target/system_XMC4700.c ****  * fOFI = 24MHz => fWDT = 24MHz
  60:../cleanflight/src/main/target/system_XMC4700.c ****  *******************************************************************************/
  61:../cleanflight/src/main/target/system_XMC4700.c **** 
  62:../cleanflight/src/main/target/system_XMC4700.c **** /*******************************************************************************
  63:../cleanflight/src/main/target/system_XMC4700.c ****  * HEADER FILES
  64:../cleanflight/src/main/target/system_XMC4700.c ****  *******************************************************************************/
  65:../cleanflight/src/main/target/system_XMC4700.c **** #include <string.h>
  66:../cleanflight/src/main/target/system_XMC4700.c **** 
  67:../cleanflight/src/main/target/system_XMC4700.c **** #include <XMC4700.h>
  68:../cleanflight/src/main/target/system_XMC4700.c **** #include "system_XMC4700.h"
  69:../cleanflight/src/main/target/system_XMC4700.c **** 
  70:../cleanflight/src/main/target/system_XMC4700.c **** /*******************************************************************************
  71:../cleanflight/src/main/target/system_XMC4700.c ****  * MACROS
  72:../cleanflight/src/main/target/system_XMC4700.c ****  *******************************************************************************/
  73:../cleanflight/src/main/target/system_XMC4700.c **** #define CHIPID_LOC ((uint8_t *)0x20000000UL)
  74:../cleanflight/src/main/target/system_XMC4700.c **** 
  75:../cleanflight/src/main/target/system_XMC4700.c **** #define PMU_FLASH_WS          (0x4U)
  76:../cleanflight/src/main/target/system_XMC4700.c **** 
  77:../cleanflight/src/main/target/system_XMC4700.c **** #define FOSCREF               (2500000U)
  78:../cleanflight/src/main/target/system_XMC4700.c **** 
  79:../cleanflight/src/main/target/system_XMC4700.c **** #define DELAY_CNT_50US_50MHZ  (2500UL)
  80:../cleanflight/src/main/target/system_XMC4700.c **** #define DELAY_CNT_150US_50MHZ (7500UL)
  81:../cleanflight/src/main/target/system_XMC4700.c **** #define DELAY_CNT_50US_48MHZ  (2400UL)
  82:../cleanflight/src/main/target/system_XMC4700.c **** #define DELAY_CNT_50US_72MHZ  (3600UL)
  83:../cleanflight/src/main/target/system_XMC4700.c **** #define DELAY_CNT_50US_96MHZ  (4800UL)
  84:../cleanflight/src/main/target/system_XMC4700.c **** #define DELAY_CNT_50US_120MHZ (6000UL)
  85:../cleanflight/src/main/target/system_XMC4700.c **** #define DELAY_CNT_50US_144MHZ (7200UL)
  86:../cleanflight/src/main/target/system_XMC4700.c **** 
  87:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
  88:../cleanflight/src/main/target/system_XMC4700.c ****                                      SCU_PLL_PLLSTAT_PLLLV_Msk | \
  89:../cleanflight/src/main/target/system_XMC4700.c ****                                      SCU_PLL_PLLSTAT_PLLSP_Msk)
  90:../cleanflight/src/main/target/system_XMC4700.c **** 
  91:../cleanflight/src/main/target/system_XMC4700.c **** /*
  92:../cleanflight/src/main/target/system_XMC4700.c **** //-------- <<< Use Configuration Wizard in Context Menu >>> ------------------
  93:../cleanflight/src/main/target/system_XMC4700.c **** */
  94:../cleanflight/src/main/target/system_XMC4700.c **** 
  95:../cleanflight/src/main/target/system_XMC4700.c **** /*
  96:../cleanflight/src/main/target/system_XMC4700.c **** // <h> Clock configuration
  97:../cleanflight/src/main/target/system_XMC4700.c **** */
  98:../cleanflight/src/main/target/system_XMC4700.c **** 
  99:../cleanflight/src/main/target/system_XMC4700.c **** /*
 100:../cleanflight/src/main/target/system_XMC4700.c **** //    <o> External crystal frequency [Hz]
 101:../cleanflight/src/main/target/system_XMC4700.c **** //       <8000000=> 8MHz
 102:../cleanflight/src/main/target/system_XMC4700.c **** //       <12000000=> 12MHz
 103:../cleanflight/src/main/target/system_XMC4700.c **** //       <16000000=> 16MHz
 104:../cleanflight/src/main/target/system_XMC4700.c **** //    <i> Defines external crystal frequency
 105:../cleanflight/src/main/target/system_XMC4700.c **** //    <i> Default: 8MHz
 106:../cleanflight/src/main/target/system_XMC4700.c **** */
 107:../cleanflight/src/main/target/system_XMC4700.c **** #define OSCHP_FREQUENCY (12000000U)
 108:../cleanflight/src/main/target/system_XMC4700.c **** 
 109:../cleanflight/src/main/target/system_XMC4700.c **** /* USB PLL settings, fUSBPLL = 48MHz and fUSBPLLVCO = 384 MHz */
 110:../cleanflight/src/main/target/system_XMC4700.c **** /* Note: Implicit divider of 2 and fUSBPLLVCO >= 260 MHz and fUSBPLLVCO <= 520 MHz*/
 111:../cleanflight/src/main/target/system_XMC4700.c **** #if OSCHP_FREQUENCY == 8000000U
 112:../cleanflight/src/main/target/system_XMC4700.c **** #define USB_PDIV (1U)
 113:../cleanflight/src/main/target/system_XMC4700.c **** #define USB_NDIV (95U)
 114:../cleanflight/src/main/target/system_XMC4700.c **** 
 115:../cleanflight/src/main/target/system_XMC4700.c **** #elif OSCHP_FREQUENCY == 12000000U
 116:../cleanflight/src/main/target/system_XMC4700.c **** #define USB_PDIV (1U)
 117:../cleanflight/src/main/target/system_XMC4700.c **** #define USB_NDIV (63U)
 118:../cleanflight/src/main/target/system_XMC4700.c **** 
 119:../cleanflight/src/main/target/system_XMC4700.c **** #elif OSCHP_FREQUENCY == 16000000U
 120:../cleanflight/src/main/target/system_XMC4700.c **** #define USB_PDIV (1U)
 121:../cleanflight/src/main/target/system_XMC4700.c **** #define USB_NDIV (47U)
 122:../cleanflight/src/main/target/system_XMC4700.c **** 
 123:../cleanflight/src/main/target/system_XMC4700.c **** #else
 124:../cleanflight/src/main/target/system_XMC4700.c **** #error "External crystal frequency not supported"
 125:../cleanflight/src/main/target/system_XMC4700.c **** 
 126:../cleanflight/src/main/target/system_XMC4700.c **** #endif
 127:../cleanflight/src/main/target/system_XMC4700.c **** 
 128:../cleanflight/src/main/target/system_XMC4700.c **** /*
 129:../cleanflight/src/main/target/system_XMC4700.c **** //    <o> Backup clock calibration mode
 130:../cleanflight/src/main/target/system_XMC4700.c **** //       <0=> Factory calibration
 131:../cleanflight/src/main/target/system_XMC4700.c **** //       <1=> Automatic calibration
 132:../cleanflight/src/main/target/system_XMC4700.c **** //    <i> Default: Automatic calibration
 133:../cleanflight/src/main/target/system_XMC4700.c **** */
 134:../cleanflight/src/main/target/system_XMC4700.c **** #define FOFI_CALIBRATION_MODE 1
 135:../cleanflight/src/main/target/system_XMC4700.c **** #define FOFI_CALIBRATION_MODE_FACTORY 0
 136:../cleanflight/src/main/target/system_XMC4700.c **** #define FOFI_CALIBRATION_MODE_AUTOMATIC 1
 137:../cleanflight/src/main/target/system_XMC4700.c **** 
 138:../cleanflight/src/main/target/system_XMC4700.c **** /*
 139:../cleanflight/src/main/target/system_XMC4700.c **** //    <o> Standby clock (fSTDBY) source selection
 140:../cleanflight/src/main/target/system_XMC4700.c **** //       <0=> Internal slow oscillator (32768Hz)
 141:../cleanflight/src/main/target/system_XMC4700.c **** //       <1=> External crystal (32768Hz)
 142:../cleanflight/src/main/target/system_XMC4700.c **** //    <i> Default: Internal slow oscillator (32768Hz)
 143:../cleanflight/src/main/target/system_XMC4700.c **** */
 144:../cleanflight/src/main/target/system_XMC4700.c **** #define STDBY_CLOCK_SRC 0
 145:../cleanflight/src/main/target/system_XMC4700.c **** #define STDBY_CLOCK_SRC_OSI 0
 146:../cleanflight/src/main/target/system_XMC4700.c **** #define STDBY_CLOCK_SRC_OSCULP 1
 147:../cleanflight/src/main/target/system_XMC4700.c **** 
 148:../cleanflight/src/main/target/system_XMC4700.c **** /*
 149:../cleanflight/src/main/target/system_XMC4700.c **** //    <o> PLL clock source selection
 150:../cleanflight/src/main/target/system_XMC4700.c **** //       <0=> External crystal
 151:../cleanflight/src/main/target/system_XMC4700.c **** //       <1=> Internal fast oscillator
 152:../cleanflight/src/main/target/system_XMC4700.c **** //    <i> Default: External crystal
 153:../cleanflight/src/main/target/system_XMC4700.c **** */
 154:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_CLOCK_SRC 0
 155:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_CLOCK_SRC_EXT_XTAL 0
 156:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_CLOCK_SRC_OFI 1
 157:../cleanflight/src/main/target/system_XMC4700.c **** 
 158:../cleanflight/src/main/target/system_XMC4700.c **** /* PLL settings, fPLL = 288MHz */
 159:../cleanflight/src/main/target/system_XMC4700.c **** #if PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL
 160:../cleanflight/src/main/target/system_XMC4700.c **** #if OSCHP_FREQUENCY == 8000000U
 161:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_PDIV (1U)
 162:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_NDIV (71U)
 163:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_K2DIV (0U)
 164:../cleanflight/src/main/target/system_XMC4700.c **** 
 165:../cleanflight/src/main/target/system_XMC4700.c **** #elif OSCHP_FREQUENCY == 12000000U
 166:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_PDIV (1U)
 167:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_NDIV (47U)
 168:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_K2DIV (0U)
 169:../cleanflight/src/main/target/system_XMC4700.c **** 
 170:../cleanflight/src/main/target/system_XMC4700.c **** #elif OSCHP_FREQUENCY == 16000000U
 171:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_PDIV (1U)
 172:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_NDIV (35U)
 173:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_K2DIV (0U)
 174:../cleanflight/src/main/target/system_XMC4700.c **** 
 175:../cleanflight/src/main/target/system_XMC4700.c **** #else
 176:../cleanflight/src/main/target/system_XMC4700.c **** #error "External crystal frequency not supported"
 177:../cleanflight/src/main/target/system_XMC4700.c **** 
 178:../cleanflight/src/main/target/system_XMC4700.c **** #endif
 179:../cleanflight/src/main/target/system_XMC4700.c **** 
 180:../cleanflight/src/main/target/system_XMC4700.c **** #define VCO ((OSCHP_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 181:../cleanflight/src/main/target/system_XMC4700.c **** 
 182:../cleanflight/src/main/target/system_XMC4700.c **** #else /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL */
 183:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_PDIV (1U)
 184:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_NDIV (23U)
 185:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_K2DIV (0U)
 186:../cleanflight/src/main/target/system_XMC4700.c **** 
 187:../cleanflight/src/main/target/system_XMC4700.c **** #define VCO ((OFI_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 188:../cleanflight/src/main/target/system_XMC4700.c **** 
 189:../cleanflight/src/main/target/system_XMC4700.c **** #endif /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_OFI */
 190:../cleanflight/src/main/target/system_XMC4700.c **** 
 191:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_K2DIV_24MHZ  ((VCO / OFI_FREQUENCY) - 1UL)
 192:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_K2DIV_48MHZ  ((VCO / 48000000U) - 1UL)
 193:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_K2DIV_72MHZ  ((VCO / 72000000U) - 1UL)
 194:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_K2DIV_96MHZ  ((VCO / 96000000U) - 1UL)
 195:../cleanflight/src/main/target/system_XMC4700.c **** #define PLL_K2DIV_120MHZ ((VCO / 120000000U) - 1UL)
 196:../cleanflight/src/main/target/system_XMC4700.c **** 
 197:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_USBCLK SCU_CLK_CLKCLR_USBCDI_Msk
 198:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_MMCCLK SCU_CLK_CLKCLR_MMCCDI_Msk
 199:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_ETHCLK SCU_CLK_CLKCLR_ETH0CDI_Msk
 200:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_EBUCLK SCU_CLK_CLKCLR_EBUCDI_Msk
 201:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_CCUCLK SCU_CLK_CLKCLR_CCUCDI_Msk
 202:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_WDTCLK SCU_CLK_CLKCLR_WDTCDI_Msk
 203:../cleanflight/src/main/target/system_XMC4700.c **** 
 204:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_SYSCLKCR_SYSSEL_OFI      (0U << SCU_CLK_SYSCLKCR_SYSSEL_Pos)
 205:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_SYSCLKCR_SYSSEL_PLL      (1U << SCU_CLK_SYSCLKCR_SYSSEL_Pos)
 206:../cleanflight/src/main/target/system_XMC4700.c **** 
 207:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_USBCLKCR_USBSEL_USBPLL   (0U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 208:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_USBCLKCR_USBSEL_PLL      (1U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 209:../cleanflight/src/main/target/system_XMC4700.c **** 
 210:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_OFI      (0U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 211:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_STANDBY  (1U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 212:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_PLL      (2U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 213:../cleanflight/src/main/target/system_XMC4700.c **** 
 214:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_SYS      (0U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 215:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_USBPLL   (2U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 216:../cleanflight/src/main/target/system_XMC4700.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_PLL      (3U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 217:../cleanflight/src/main/target/system_XMC4700.c **** 
 218:../cleanflight/src/main/target/system_XMC4700.c **** #define EXTCLK_PIN_P0_8  (1)
 219:../cleanflight/src/main/target/system_XMC4700.c **** #define EXTCLK_PIN_P1_15 (2)
 220:../cleanflight/src/main/target/system_XMC4700.c **** 
 221:../cleanflight/src/main/target/system_XMC4700.c **** /*
 222:../cleanflight/src/main/target/system_XMC4700.c **** //    <h> Clock tree
 223:../cleanflight/src/main/target/system_XMC4700.c **** //        <o1.16> System clock source selection
 224:../cleanflight/src/main/target/system_XMC4700.c **** //                      <0=> fOFI
 225:../cleanflight/src/main/target/system_XMC4700.c **** //                      <1=> fPLL
 226:../cleanflight/src/main/target/system_XMC4700.c **** //                      <i> Default: fPLL
 227:../cleanflight/src/main/target/system_XMC4700.c **** //        <o1.0..7> System clock divider <1-256><#-1>
 228:../cleanflight/src/main/target/system_XMC4700.c **** //                      <i> Default: 2
 229:../cleanflight/src/main/target/system_XMC4700.c **** //        <o2.0> CPU clock divider
 230:../cleanflight/src/main/target/system_XMC4700.c **** //                      <0=> fCPU = fSYS
 231:../cleanflight/src/main/target/system_XMC4700.c **** //                      <1=> fCPU = fSYS / 2
 232:../cleanflight/src/main/target/system_XMC4700.c **** //                      <i> Default: fCPU = fSYS
 233:../cleanflight/src/main/target/system_XMC4700.c **** //        <o3.0>  Peripheral clock divider
 234:../cleanflight/src/main/target/system_XMC4700.c **** //                      <0=> fPB = fCPU
 235:../cleanflight/src/main/target/system_XMC4700.c **** //                      <1=> fPB = fCPU / 2
 236:../cleanflight/src/main/target/system_XMC4700.c **** //                      <i> Default: fPB = fCPU
 237:../cleanflight/src/main/target/system_XMC4700.c **** //        <o4.0>  CCU clock divider
 238:../cleanflight/src/main/target/system_XMC4700.c **** //                      <0=> fCCU = fCPU
 239:../cleanflight/src/main/target/system_XMC4700.c **** //                      <1=> fCCU = fCPU / 2
 240:../cleanflight/src/main/target/system_XMC4700.c **** //                      <i> Default: fCCU = fCPU
 241:../cleanflight/src/main/target/system_XMC4700.c **** //        <e.5> Enable WDT clock
 242:../cleanflight/src/main/target/system_XMC4700.c **** //             <o5.16..17> WDT clock source <0=> fOFI
 243:../cleanflight/src/main/target/system_XMC4700.c **** //                                          <1=> fSTDBY
 244:../cleanflight/src/main/target/system_XMC4700.c **** //                                          <2=> fPLL
 245:../cleanflight/src/main/target/system_XMC4700.c **** //                      <i> Default: fOFI
 246:../cleanflight/src/main/target/system_XMC4700.c **** //             <o5.0..7> WDT clock divider <1-256><#-1>
 247:../cleanflight/src/main/target/system_XMC4700.c **** //                      <i> Default: 1
 248:../cleanflight/src/main/target/system_XMC4700.c **** //        </e>
 249:../cleanflight/src/main/target/system_XMC4700.c **** //        <e.3> Enable EBU clock
 250:../cleanflight/src/main/target/system_XMC4700.c **** //             <o6.0..5>  EBU clock divider  <1-64><#-1>
 251:../cleanflight/src/main/target/system_XMC4700.c **** //             <i> Default: 4
 252:../cleanflight/src/main/target/system_XMC4700.c **** //        </e>
 253:../cleanflight/src/main/target/system_XMC4700.c **** //        <e.2> Enable ETH clock
 254:../cleanflight/src/main/target/system_XMC4700.c **** //        </e>
 255:../cleanflight/src/main/target/system_XMC4700.c **** //        <e.1> Enable MMC clock
 256:../cleanflight/src/main/target/system_XMC4700.c **** //        </e>
 257:../cleanflight/src/main/target/system_XMC4700.c **** //        <e.0> Enable USB clock
 258:../cleanflight/src/main/target/system_XMC4700.c **** //             <o7.16> USB clock source <0=> fUSBPLL
 259:../cleanflight/src/main/target/system_XMC4700.c **** //                                      <1=> fPLL
 260:../cleanflight/src/main/target/system_XMC4700.c **** //             <i> Default: fPLL
 261:../cleanflight/src/main/target/system_XMC4700.c **** //        </e>
 262:../cleanflight/src/main/target/system_XMC4700.c **** //        <e8> Enable external clock
 263:../cleanflight/src/main/target/system_XMC4700.c **** //             <o8.0..1> External Clock Source Selection
 264:../cleanflight/src/main/target/system_XMC4700.c **** //                  <0=> fSYS
 265:../cleanflight/src/main/target/system_XMC4700.c **** //                  <2=> fUSB
 266:../cleanflight/src/main/target/system_XMC4700.c **** //                  <3=> fPLL
 267:../cleanflight/src/main/target/system_XMC4700.c **** //                  <i> Default: fPLL
 268:../cleanflight/src/main/target/system_XMC4700.c **** //             <o8.16..24> External Clock divider <1-512><#-1>
 269:../cleanflight/src/main/target/system_XMC4700.c **** //                  <i> Default: 288
 270:../cleanflight/src/main/target/system_XMC4700.c **** //                  <i> Only valid for USB PLL and PLL clocks
 271:../cleanflight/src/main/target/system_XMC4700.c **** //             <o9.0> External Clock Pin Selection
 272:../cleanflight/src/main/target/system_XMC4700.c **** //                  <0=> Disabled
 273:../cleanflight/src/main/target/system_XMC4700.c **** //                  <1=> P0.8
 274:../cleanflight/src/main/target/system_XMC4700.c **** //                  <2=> P1.15
 275:../cleanflight/src/main/target/system_XMC4700.c **** //                  <i> Default: Disabled
 276:../cleanflight/src/main/target/system_XMC4700.c **** //        </e>
 277:../cleanflight/src/main/target/system_XMC4700.c **** //    </h>
 278:../cleanflight/src/main/target/system_XMC4700.c **** */
 279:../cleanflight/src/main/target/system_XMC4700.c **** #define __CLKSET    (0x00000000UL)
 280:../cleanflight/src/main/target/system_XMC4700.c **** #define __SYSCLKCR  (0x00010001UL)
 281:../cleanflight/src/main/target/system_XMC4700.c **** #define __CPUCLKCR  (0x00000000UL)
 282:../cleanflight/src/main/target/system_XMC4700.c **** #define __PBCLKCR   (0x00000000UL)
 283:../cleanflight/src/main/target/system_XMC4700.c **** #define __CCUCLKCR  (0x00000000UL)
 284:../cleanflight/src/main/target/system_XMC4700.c **** #define __WDTCLKCR  (0x00000000UL)
 285:../cleanflight/src/main/target/system_XMC4700.c **** #define __EBUCLKCR  (0x00000003UL)
 286:../cleanflight/src/main/target/system_XMC4700.c **** #define __USBCLKCR  (0x00010000UL)
 287:../cleanflight/src/main/target/system_XMC4700.c **** 
 288:../cleanflight/src/main/target/system_XMC4700.c **** #define __EXTCLKCR (0x01200003UL)
 289:../cleanflight/src/main/target/system_XMC4700.c **** #define __EXTCLKPIN (0U)
 290:../cleanflight/src/main/target/system_XMC4700.c **** 
 291:../cleanflight/src/main/target/system_XMC4700.c **** /*
 292:../cleanflight/src/main/target/system_XMC4700.c **** // </h>
 293:../cleanflight/src/main/target/system_XMC4700.c **** */
 294:../cleanflight/src/main/target/system_XMC4700.c **** 
 295:../cleanflight/src/main/target/system_XMC4700.c **** /*
 296:../cleanflight/src/main/target/system_XMC4700.c **** //-------- <<< end of configuration section >>> ------------------
 297:../cleanflight/src/main/target/system_XMC4700.c **** */
 298:../cleanflight/src/main/target/system_XMC4700.c **** 
 299:../cleanflight/src/main/target/system_XMC4700.c **** #define ENABLE_PLL \
 300:../cleanflight/src/main/target/system_XMC4700.c ****     (((__SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk) == SCU_CLK_SYSCLKCR_SYSSEL_PLL) || \
 301:../cleanflight/src/main/target/system_XMC4700.c ****      ((__CLKSET & SCU_CLK_CLKSET_EBUCEN_Msk) != 0) || \
 302:../cleanflight/src/main/target/system_XMC4700.c ****      (((__CLKSET & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((__USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk) 
 303:../cleanflight/src/main/target/system_XMC4700.c ****      (((__CLKSET & SCU_CLK_CLKSET_WDTCEN_Msk) != 0) && ((__WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk) 
 304:../cleanflight/src/main/target/system_XMC4700.c **** 
 305:../cleanflight/src/main/target/system_XMC4700.c **** #define ENABLE_USBPLL \
 306:../cleanflight/src/main/target/system_XMC4700.c ****      ((((__CLKSET & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((__USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk)
 307:../cleanflight/src/main/target/system_XMC4700.c ****       (((__CLKSET & SCU_CLK_CLKSET_MMCCEN_Msk) != 0) && ((__USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk)
 308:../cleanflight/src/main/target/system_XMC4700.c ****                      
 309:../cleanflight/src/main/target/system_XMC4700.c **** #if ((__USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk) == SCU_CLK_USBCLKCR_USBSEL_USBPLL)
 310:../cleanflight/src/main/target/system_XMC4700.c **** #define USB_DIV (3U)
 311:../cleanflight/src/main/target/system_XMC4700.c **** #else
 312:../cleanflight/src/main/target/system_XMC4700.c **** #define USB_DIV (5U)
 313:../cleanflight/src/main/target/system_XMC4700.c **** #endif
 314:../cleanflight/src/main/target/system_XMC4700.c ****     
 315:../cleanflight/src/main/target/system_XMC4700.c **** /*******************************************************************************
 316:../cleanflight/src/main/target/system_XMC4700.c ****  * GLOBAL VARIABLES
 317:../cleanflight/src/main/target/system_XMC4700.c ****  *******************************************************************************/
 318:../cleanflight/src/main/target/system_XMC4700.c **** #if defined ( __CC_ARM )
 319:../cleanflight/src/main/target/system_XMC4700.c **** #if defined(XMC4700_E196x2048) || defined(XMC4700_F144x2048) || defined(XMC4700_F100x2048)
 320:../cleanflight/src/main/target/system_XMC4700.c **** uint32_t SystemCoreClock __attribute__((at(0x2003FFC0)));
 321:../cleanflight/src/main/target/system_XMC4700.c **** uint8_t g_chipid[16] __attribute__((at(0x2003FFC4)));
 322:../cleanflight/src/main/target/system_XMC4700.c **** #elif defined(XMC4700_E196x1536) || defined(XMC4700_F144x1536) || defined(XMC4700_F100x1536)
 323:../cleanflight/src/main/target/system_XMC4700.c **** uint32_t SystemCoreClock __attribute__((at(0x2002CFC0)));
 324:../cleanflight/src/main/target/system_XMC4700.c **** uint8_t g_chipid[16] __attribute__((at(0x2002CFC4)));
 325:../cleanflight/src/main/target/system_XMC4700.c **** #else
 326:../cleanflight/src/main/target/system_XMC4700.c **** #error "system_XMC4700.c: device not supported" 
 327:../cleanflight/src/main/target/system_XMC4700.c **** #endif
 328:../cleanflight/src/main/target/system_XMC4700.c **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 329:../cleanflight/src/main/target/system_XMC4700.c **** #if defined(XMC4700_E196x2048) || defined(XMC4700_F144x2048) || defined(XMC4700_F100x2048)
 330:../cleanflight/src/main/target/system_XMC4700.c **** uint32_t SystemCoreClock __attribute__((section(".ARM.__at_0x2003FFC0")));
 331:../cleanflight/src/main/target/system_XMC4700.c **** uint8_t g_chipid[16] __attribute__((section(".ARM.__at_0x2003FFC4")));
 332:../cleanflight/src/main/target/system_XMC4700.c **** #elif defined(XMC4700_E196x1536) || defined(XMC4700_F144x1536) || defined(XMC4700_F100x1536)
 333:../cleanflight/src/main/target/system_XMC4700.c **** uint32_t SystemCoreClock __attribute__((section(".ARM.__at_0x2002CFC0")));
 334:../cleanflight/src/main/target/system_XMC4700.c **** uint8_t g_chipid[16] __attribute__((section(".ARM.__at_0x2002CFC4")));
 335:../cleanflight/src/main/target/system_XMC4700.c **** #else
 336:../cleanflight/src/main/target/system_XMC4700.c **** #error "system_XMC4700.c: device not supported" 
 337:../cleanflight/src/main/target/system_XMC4700.c **** #endif   
 338:../cleanflight/src/main/target/system_XMC4700.c **** #elif defined ( __ICCARM__ )
 339:../cleanflight/src/main/target/system_XMC4700.c **** #if defined(XMC4700_E196x2048) || defined(XMC4700_F144x2048) || defined(XMC4700_F100x2048) || \
 340:../cleanflight/src/main/target/system_XMC4700.c ****     defined(XMC4700_E196x1536) || defined(XMC4700_F144x1536) || defined(XMC4700_F100x1536)
 341:../cleanflight/src/main/target/system_XMC4700.c **** __no_init uint32_t SystemCoreClock;
 342:../cleanflight/src/main/target/system_XMC4700.c **** __no_init uint8_t g_chipid[16];
 343:../cleanflight/src/main/target/system_XMC4700.c **** #else
 344:../cleanflight/src/main/target/system_XMC4700.c **** #error "system_XMC4700.c: device not supported" 
 345:../cleanflight/src/main/target/system_XMC4700.c **** #endif    
 346:../cleanflight/src/main/target/system_XMC4700.c **** #elif defined ( __GNUC__ )
 347:../cleanflight/src/main/target/system_XMC4700.c **** #if defined(XMC4700_E196x2048) || defined(XMC4700_F144x2048) || defined(XMC4700_F100x2048) || \
 348:../cleanflight/src/main/target/system_XMC4700.c ****     defined(XMC4700_E196x1536) || defined(XMC4700_F144x1536) || defined(XMC4700_F100x1536)
 349:../cleanflight/src/main/target/system_XMC4700.c **** uint32_t SystemCoreClock __attribute__((section(".no_init")));
 350:../cleanflight/src/main/target/system_XMC4700.c **** uint8_t g_chipid[16] __attribute__((section(".no_init")));
 351:../cleanflight/src/main/target/system_XMC4700.c **** #else
 352:../cleanflight/src/main/target/system_XMC4700.c **** #error "system_XMC4700.c: device not supported" 
 353:../cleanflight/src/main/target/system_XMC4700.c **** #endif    
 354:../cleanflight/src/main/target/system_XMC4700.c **** #elif defined ( __TASKING__ )
 355:../cleanflight/src/main/target/system_XMC4700.c **** #if defined(XMC4700_E196x2048) || defined(XMC4700_F144x2048) || defined(XMC4700_F100x2048)
 356:../cleanflight/src/main/target/system_XMC4700.c **** uint32_t SystemCoreClock __at( 0x2003FFC0 );
 357:../cleanflight/src/main/target/system_XMC4700.c **** uint8_t g_chipid[16] __at( 0x2003FFC4 );
 358:../cleanflight/src/main/target/system_XMC4700.c **** #elif defined(XMC4700_E196x1536) || defined(XMC4700_F144x1536) || defined(XMC4700_F100x1536)
 359:../cleanflight/src/main/target/system_XMC4700.c **** uint32_t SystemCoreClock __at( 0x2002CFC0 );
 360:../cleanflight/src/main/target/system_XMC4700.c **** uint8_t g_chipid[16] __at( 0x2002CFC4 );
 361:../cleanflight/src/main/target/system_XMC4700.c **** #else
 362:../cleanflight/src/main/target/system_XMC4700.c **** #error "system_XMC4700.c: device not supported" 
 363:../cleanflight/src/main/target/system_XMC4700.c **** #endif    
 364:../cleanflight/src/main/target/system_XMC4700.c **** #else
 365:../cleanflight/src/main/target/system_XMC4700.c **** #error "system_XMC4700.c: compiler not supported" 
 366:../cleanflight/src/main/target/system_XMC4700.c **** #endif    
 367:../cleanflight/src/main/target/system_XMC4700.c **** 
 368:../cleanflight/src/main/target/system_XMC4700.c **** extern uint32_t __Vectors;
 369:../cleanflight/src/main/target/system_XMC4700.c **** 
 370:../cleanflight/src/main/target/system_XMC4700.c **** /*******************************************************************************
 371:../cleanflight/src/main/target/system_XMC4700.c ****  * LOCAL FUNCTIONS
 372:../cleanflight/src/main/target/system_XMC4700.c ****  *******************************************************************************/
 373:../cleanflight/src/main/target/system_XMC4700.c **** static void delay(uint32_t cycles)
 374:../cleanflight/src/main/target/system_XMC4700.c **** {
  40              	 .loc 1 374 0
  41              	 .cfi_startproc
  42              	 
  43              	 
  44              	 
  45 0000 80B4     	 push {r7}
  46              	.LCFI0:
  47              	 .cfi_def_cfa_offset 4
  48              	 .cfi_offset 7,-4
  49 0002 85B0     	 sub sp,sp,#20
  50              	.LCFI1:
  51              	 .cfi_def_cfa_offset 24
  52 0004 00AF     	 add r7,sp,#0
  53              	.LCFI2:
  54              	 .cfi_def_cfa_register 7
  55 0006 7860     	 str r0,[r7,#4]
 375:../cleanflight/src/main/target/system_XMC4700.c ****   volatile uint32_t i;
 376:../cleanflight/src/main/target/system_XMC4700.c **** 
 377:../cleanflight/src/main/target/system_XMC4700.c ****   for(i = 0UL; i < cycles ;++i)
  56              	 .loc 1 377 0
  57 0008 0023     	 movs r3,#0
  58 000a FB60     	 str r3,[r7,#12]
  59 000c 03E0     	 b .L2
  60              	.L3:
 378:../cleanflight/src/main/target/system_XMC4700.c ****   {
 379:../cleanflight/src/main/target/system_XMC4700.c ****     __NOP();
  61              	 .loc 1 379 0 discriminator 3
  62              	
  63 000e 00BF     	 nop
  64              	
 377:../cleanflight/src/main/target/system_XMC4700.c ****   {
  65              	 .loc 1 377 0 discriminator 3
  66              	 .thumb
  67 0010 FB68     	 ldr r3,[r7,#12]
  68 0012 0133     	 adds r3,r3,#1
  69 0014 FB60     	 str r3,[r7,#12]
  70              	.L2:
 377:../cleanflight/src/main/target/system_XMC4700.c ****   {
  71              	 .loc 1 377 0 is_stmt 0 discriminator 1
  72 0016 FA68     	 ldr r2,[r7,#12]
  73 0018 7B68     	 ldr r3,[r7,#4]
  74 001a 9A42     	 cmp r2,r3
  75 001c F7D3     	 bcc .L3
 380:../cleanflight/src/main/target/system_XMC4700.c ****   }
 381:../cleanflight/src/main/target/system_XMC4700.c **** }
  76              	 .loc 1 381 0 is_stmt 1
  77 001e 1437     	 adds r7,r7,#20
  78              	.LCFI3:
  79              	 .cfi_def_cfa_offset 4
  80 0020 BD46     	 mov sp,r7
  81              	.LCFI4:
  82              	 .cfi_def_cfa_register 13
  83              	 
  84 0022 5DF8047B 	 ldr r7,[sp],#4
  85              	.LCFI5:
  86              	 .cfi_restore 7
  87              	 .cfi_def_cfa_offset 0
  88 0026 7047     	 bx lr
  89              	 .cfi_endproc
  90              	.LFE130:
  92              	 .section .text.SystemInit,"ax",%progbits
  93              	 .align 2
  94              	 .weak SystemInit
  95              	 .thumb
  96              	 .thumb_func
  98              	SystemInit:
  99              	.LFB131:
 382:../cleanflight/src/main/target/system_XMC4700.c **** 
 383:../cleanflight/src/main/target/system_XMC4700.c **** /*******************************************************************************
 384:../cleanflight/src/main/target/system_XMC4700.c ****  * API IMPLEMENTATION
 385:../cleanflight/src/main/target/system_XMC4700.c ****  *******************************************************************************/
 386:../cleanflight/src/main/target/system_XMC4700.c **** 
 387:../cleanflight/src/main/target/system_XMC4700.c **** __WEAK void SystemInit(void)
 388:../cleanflight/src/main/target/system_XMC4700.c **** {
 100              	 .loc 1 388 0
 101              	 .cfi_startproc
 102              	 
 103              	 
 104 0000 98B5     	 push {r3,r4,r7,lr}
 105              	.LCFI6:
 106              	 .cfi_def_cfa_offset 16
 107              	 .cfi_offset 3,-16
 108              	 .cfi_offset 4,-12
 109              	 .cfi_offset 7,-8
 110              	 .cfi_offset 14,-4
 111 0002 00AF     	 add r7,sp,#0
 112              	.LCFI7:
 113              	 .cfi_def_cfa_register 7
 389:../cleanflight/src/main/target/system_XMC4700.c ****   memcpy(g_chipid, CHIPID_LOC, 16);
 114              	 .loc 1 389 0
 115 0004 054A     	 ldr r2,.L5
 116 0006 4FF00053 	 mov r3,#536870912
 117 000a 1446     	 mov r4,r2
 118 000c 0FCB     	 ldmia r3,{r0,r1,r2,r3}
 119 000e 84E80F00 	 stmia r4,{r0,r1,r2,r3}
 390:../cleanflight/src/main/target/system_XMC4700.c ****   
 391:../cleanflight/src/main/target/system_XMC4700.c ****   SystemCoreSetup();
 120              	 .loc 1 391 0
 121 0012 FFF7FEFF 	 bl SystemCoreSetup
 392:../cleanflight/src/main/target/system_XMC4700.c ****   SystemCoreClockSetup(); 
 122              	 .loc 1 392 0
 123 0016 FFF7FEFF 	 bl SystemCoreClockSetup
 393:../cleanflight/src/main/target/system_XMC4700.c **** }
 124              	 .loc 1 393 0
 125 001a 98BD     	 pop {r3,r4,r7,pc}
 126              	.L6:
 127              	 .align 2
 128              	.L5:
 129 001c 00000000 	 .word g_chipid
 130              	 .cfi_endproc
 131              	.LFE131:
 133              	 .section .text.SystemCoreSetup,"ax",%progbits
 134              	 .align 2
 135              	 .weak SystemCoreSetup
 136              	 .thumb
 137              	 .thumb_func
 139              	SystemCoreSetup:
 140              	.LFB132:
 394:../cleanflight/src/main/target/system_XMC4700.c **** 
 395:../cleanflight/src/main/target/system_XMC4700.c **** __WEAK void SystemCoreSetup(void)
 396:../cleanflight/src/main/target/system_XMC4700.c **** {
 141              	 .loc 1 396 0
 142              	 .cfi_startproc
 143              	 
 144              	 
 145              	 
 146 0000 80B4     	 push {r7}
 147              	.LCFI8:
 148              	 .cfi_def_cfa_offset 4
 149              	 .cfi_offset 7,-4
 150 0002 83B0     	 sub sp,sp,#12
 151              	.LCFI9:
 152              	 .cfi_def_cfa_offset 16
 153 0004 00AF     	 add r7,sp,#0
 154              	.LCFI10:
 155              	 .cfi_def_cfa_register 7
 156              	.LBB8:
 157              	.LBB9:
 158              	 .file 2 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/cmsis_gcc.h"
   1:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * @version  V5.0.3
   5:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * @date     16. January 2018
   6:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /*
   8:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2017 ARM Limited. All rights reserved.
   9:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  *
  10:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  *
  12:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  *
  16:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  *
  18:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * limitations under the License.
  23:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
  24:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
  25:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
  28:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
  34:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  38:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
  39:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  43:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  46:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  49:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif                                           
  52:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  55:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __USED
  56:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  58:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  61:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  64:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  67:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  70:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  78:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  86:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
  94:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 102:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 110:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 113:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 116:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 117:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 118:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   @{
 122:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 123:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 124:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 125:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 129:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 133:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 134:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 135:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 136:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 140:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 142:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 159              	 .loc 2 142 0
 160              	
 161 0006 72B6     	 cpsid i
 162              	
 163              	 .thumb
 164              	.LBE9:
 165              	.LBE8:
 397:../cleanflight/src/main/target/system_XMC4700.c ****   uint32_t temp;
 398:../cleanflight/src/main/target/system_XMC4700.c **** 	
 399:../cleanflight/src/main/target/system_XMC4700.c ****   /* relocate vector table */
 400:../cleanflight/src/main/target/system_XMC4700.c ****   __disable_irq();
 401:../cleanflight/src/main/target/system_XMC4700.c ****   SCB->VTOR = (uint32_t)(&__Vectors);
 166              	 .loc 1 401 0
 167 0008 1C4B     	 ldr r3,.L8
 168 000a 1D4A     	 ldr r2,.L8+4
 169 000c 9968     	 ldr r1,[r3,#8]
 170 000e 0021     	 movs r1,#0
 171 0010 0A43     	 orrs r2,r2,r1
 172 0012 9A60     	 str r2,[r3,#8]
 173              	.LBB10:
 174              	.LBB11:
 143:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 144:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 145:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 146:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 147:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Control Register
 148:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Control Register value
 150:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 151:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 153:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 154:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 155:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 157:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 158:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 159:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 160:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 162:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 165:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 166:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 168:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 169:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 170:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 172:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 173:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 174:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 175:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 176:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 177:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Control Register
 178:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 181:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 183:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 185:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 186:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 187:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 189:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 193:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 195:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 197:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 198:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 199:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 200:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 201:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 202:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               IPSR Register value
 204:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 205:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 207:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 208:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 209:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 211:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 212:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 213:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 214:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 215:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 216:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               APSR Register value
 218:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 219:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 221:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 222:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 223:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 225:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 226:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 227:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 228:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 229:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 230:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               xPSR Register value
 232:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 233:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 235:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 236:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 237:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 239:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 240:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 241:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 242:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 243:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               PSP Register value
 246:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 247:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 249:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 250:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 251:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 253:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 254:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 255:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 256:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 258:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               PSP Register value
 261:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 262:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 264:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 265:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 266:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 268:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 269:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 270:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 271:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 272:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 273:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 277:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 279:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 281:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 282:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 283:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 285:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 289:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 291:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 293:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 294:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 295:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 296:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 297:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               MSP Register value
 300:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 301:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 303:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 304:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 305:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 307:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 308:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 309:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 310:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 312:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               MSP Register value
 315:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 316:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 318:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 319:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 320:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 322:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 323:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 324:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 325:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 326:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 327:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 331:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 333:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 335:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 336:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 337:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 339:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 343:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 345:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 347:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 348:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 349:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 350:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 352:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               SP Register value
 355:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 356:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 358:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 359:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 360:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 362:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 363:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 364:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 365:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 366:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 370:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 372:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 374:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 375:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 376:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 377:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 378:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 379:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Priority Mask value
 381:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 382:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 384:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 385:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 386:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 388:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 389:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 390:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 391:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 393:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Priority Mask value
 396:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 397:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 399:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 400:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 401:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 403:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 404:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 405:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 406:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 407:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 408:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 409:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 412:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 414:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 416:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 417:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 418:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 420:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 424:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 426:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 428:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 429:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 430:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 431:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 435:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 436:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 439:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 441:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 443:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 444:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 445:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 446:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 447:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 450:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 452:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 454:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 455:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 456:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 457:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 458:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Base Priority register value
 460:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 461:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 463:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 464:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 465:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 467:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 468:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 469:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 470:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 472:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Base Priority register value
 475:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 476:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 478:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 479:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 480:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 482:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 483:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 484:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 485:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 486:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 487:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 488:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 491:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 493:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 495:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 496:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 497:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 499:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 503:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 505:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 507:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 508:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 509:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 510:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 511:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 516:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 518:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 520:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 521:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 522:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 523:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 524:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 526:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 527:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 529:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 530:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 531:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 533:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 534:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 535:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 536:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 538:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 541:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 542:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 544:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 545:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 546:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 548:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 549:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 550:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 551:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 552:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 553:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 554:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 557:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 559:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 561:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 562:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 563:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 565:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 569:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 571:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 573:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 574:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 575:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 579:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 580:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 583:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 584:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   mode.
 588:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   
 589:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 591:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 592:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 594:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return 0U;
 598:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 599:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 600:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return result;
 602:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 603:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 604:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 605:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 607:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 611:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 613:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 614:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 616:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return 0U;
 619:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 620:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 621:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return result;
 623:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 624:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 625:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 626:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 627:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 628:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 629:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   mode.
 633:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   
 634:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 637:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 639:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 644:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 646:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 647:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 648:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 649:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 651:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 655:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 658:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 660:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 664:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 666:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 667:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 668:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 669:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 670:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 671:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   mode.
 675:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 676:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 678:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 679:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 681:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return 0U;
 685:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 686:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 687:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return result;
 689:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 690:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 691:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 692:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 693:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 695:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 699:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 701:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 702:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 704:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return 0U;
 707:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 708:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   register uint32_t result;
 709:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return result;
 711:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 712:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 713:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 714:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 715:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 716:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 717:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   mode.
 721:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 722:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 725:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 727:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 732:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 734:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 735:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 736:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 737:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 739:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 743:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 746:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 748:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 752:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 754:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 755:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 756:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 757:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 760:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 761:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 762:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 763:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 764:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 765:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 766:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 767:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 768:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 769:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 770:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 771:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 772:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 773:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 774:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 775:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 776:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 777:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   uint32_t result;
 778:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 779:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 780:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(result);
 781:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 782:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 783:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   return(0U);
 784:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 785:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 786:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 787:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 788:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 789:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 790:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 791:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 792:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 793:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 794:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 795:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 796:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 797:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr) || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >=
 798:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 799:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 800:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 801:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 802:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 803:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 804:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   (void)fpscr;
 805:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 806:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 807:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 808:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 809:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 810:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 811:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 812:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 813:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 814:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 815:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 816:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 817:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 818:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   Access to dedicated instructions
 819:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   @{
 820:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** */
 821:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 822:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 823:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 824:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 825:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 826:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 827:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 828:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 829:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #else
 830:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 831:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 832:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 833:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #endif
 834:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 835:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 836:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   No Operation
 837:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 838:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 839:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 840:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 841:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 842:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 843:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 844:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 845:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 846:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 847:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 848:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 849:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Wait For Event
 850:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 851:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 852:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 853:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 854:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 855:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 856:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 857:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Send Event
 858:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 859:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 860:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 861:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 862:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 863:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 864:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 865:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 866:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 867:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            after the instruction has been completed.
 868:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 869:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 870:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 871:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 872:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 873:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 874:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** 
 875:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** /**
 876:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 877:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 878:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 879:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****  */
 880:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 881:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** {
 882:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 175              	 .loc 2 882 0
 176              	
 177 0014 BFF34F8F 	 dsb 0xF
 178              	
 179              	 .thumb
 180              	.LBE11:
 181              	.LBE10:
 182              	.LBB12:
 183              	.LBB13:
 131:D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include\cmsis_gcc.h **** }
 184              	 .loc 2 131 0
 185              	
 186 0018 62B6     	 cpsie i
 187              	
 188              	 .thumb
 189              	.LBE13:
 190              	.LBE12:
 402:../cleanflight/src/main/target/system_XMC4700.c ****   __DSB();
 403:../cleanflight/src/main/target/system_XMC4700.c ****   __enable_irq();
 404:../cleanflight/src/main/target/system_XMC4700.c ****     
 405:../cleanflight/src/main/target/system_XMC4700.c ****   /* __FPU_PRESENT = 1 defined in device header file */
 406:../cleanflight/src/main/target/system_XMC4700.c ****   /* __FPU_USED value depends on compiler/linker options. */
 407:../cleanflight/src/main/target/system_XMC4700.c ****   /* __FPU_USED = 0 if -mfloat-abi=soft is selected */
 408:../cleanflight/src/main/target/system_XMC4700.c ****   /* __FPU_USED = 1 if -mfloat-abi=softfp or –mfloat-abi=hard */
 409:../cleanflight/src/main/target/system_XMC4700.c **** 
 410:../cleanflight/src/main/target/system_XMC4700.c **** #if ((__FPU_PRESENT == 1) && (__FPU_USED == 1))
 411:../cleanflight/src/main/target/system_XMC4700.c ****   SCB->CPACR |= ((3UL << 10*2) |                 /* set CP10 Full Access */
 191              	 .loc 1 411 0
 192 001a 184B     	 ldr r3,.L8
 193 001c 174A     	 ldr r2,.L8
 194 001e D2F88820 	 ldr r2,[r2,#136]
 195 0022 42F47002 	 orr r2,r2,#15728640
 196 0026 D3F88810 	 ldr r1,[r3,#136]
 197 002a 0021     	 movs r1,#0
 198 002c 0A43     	 orrs r2,r2,r1
 199 002e C3F88820 	 str r2,[r3,#136]
 412:../cleanflight/src/main/target/system_XMC4700.c ****                  (3UL << 11*2)  );               /* set CP11 Full Access */
 413:../cleanflight/src/main/target/system_XMC4700.c **** #else
 414:../cleanflight/src/main/target/system_XMC4700.c ****   SCB->CPACR = 0;
 415:../cleanflight/src/main/target/system_XMC4700.c **** #endif
 416:../cleanflight/src/main/target/system_XMC4700.c **** 
 417:../cleanflight/src/main/target/system_XMC4700.c ****   /* Enable unaligned memory access - SCB_CCR.UNALIGN_TRP = 0 */
 418:../cleanflight/src/main/target/system_XMC4700.c ****   SCB->CCR &= ~(SCB_CCR_UNALIGN_TRP_Msk);
 200              	 .loc 1 418 0
 201 0032 124B     	 ldr r3,.L8
 202 0034 114A     	 ldr r2,.L8
 203 0036 5269     	 ldr r2,[r2,#20]
 204 0038 22F00802 	 bic r2,r2,#8
 205 003c 5969     	 ldr r1,[r3,#20]
 206 003e 0021     	 movs r1,#0
 207 0040 0A43     	 orrs r2,r2,r1
 208 0042 5A61     	 str r2,[r3,#20]
 419:../cleanflight/src/main/target/system_XMC4700.c **** 
 420:../cleanflight/src/main/target/system_XMC4700.c ****   temp = FLASH0->FCON;
 209              	 .loc 1 420 0
 210 0044 0F4B     	 ldr r3,.L8+8
 211 0046 03F58053 	 add r3,r3,#4096
 212 004a 1433     	 adds r3,r3,#20
 213 004c 1B68     	 ldr r3,[r3]
 214 004e 7B60     	 str r3,[r7,#4]
 421:../cleanflight/src/main/target/system_XMC4700.c ****   temp &= ~FLASH_FCON_WSPFLASH_Msk;
 215              	 .loc 1 421 0
 216 0050 7B68     	 ldr r3,[r7,#4]
 217 0052 23F00F03 	 bic r3,r3,#15
 218 0056 7B60     	 str r3,[r7,#4]
 422:../cleanflight/src/main/target/system_XMC4700.c ****   temp |= PMU_FLASH_WS;
 219              	 .loc 1 422 0
 220 0058 7B68     	 ldr r3,[r7,#4]
 221 005a 43F00403 	 orr r3,r3,#4
 222 005e 7B60     	 str r3,[r7,#4]
 423:../cleanflight/src/main/target/system_XMC4700.c ****   FLASH0->FCON = temp;
 223              	 .loc 1 423 0
 224 0060 084B     	 ldr r3,.L8+8
 225 0062 03F58053 	 add r3,r3,#4096
 226 0066 1433     	 adds r3,r3,#20
 227 0068 1A68     	 ldr r2,[r3]
 228 006a 0021     	 movs r1,#0
 229 006c 7A68     	 ldr r2,[r7,#4]
 230 006e 0A43     	 orrs r2,r2,r1
 231 0070 1A60     	 str r2,[r3]
 424:../cleanflight/src/main/target/system_XMC4700.c **** }
 232              	 .loc 1 424 0
 233 0072 0C37     	 adds r7,r7,#12
 234              	.LCFI11:
 235              	 .cfi_def_cfa_offset 4
 236 0074 BD46     	 mov sp,r7
 237              	.LCFI12:
 238              	 .cfi_def_cfa_register 13
 239              	 
 240 0076 5DF8047B 	 ldr r7,[sp],#4
 241              	.LCFI13:
 242              	 .cfi_restore 7
 243              	 .cfi_def_cfa_offset 0
 244 007a 7047     	 bx lr
 245              	.L9:
 246              	 .align 2
 247              	.L8:
 248 007c 00ED00E0 	 .word -536810240
 249 0080 00000000 	 .word __Vectors
 250 0084 00100058 	 .word 1476399104
 251              	 .cfi_endproc
 252              	.LFE132:
 254              	 .section .text.SystemCoreClockSetup,"ax",%progbits
 255              	 .align 2
 256              	 .weak SystemCoreClockSetup
 257              	 .thumb
 258              	 .thumb_func
 260              	SystemCoreClockSetup:
 261              	.LFB133:
 425:../cleanflight/src/main/target/system_XMC4700.c **** 
 426:../cleanflight/src/main/target/system_XMC4700.c **** __WEAK void SystemCoreClockSetup(void)
 427:../cleanflight/src/main/target/system_XMC4700.c **** {
 262              	 .loc 1 427 0
 263              	 .cfi_startproc
 264              	 
 265              	 
 266 0000 80B5     	 push {r7,lr}
 267              	.LCFI14:
 268              	 .cfi_def_cfa_offset 8
 269              	 .cfi_offset 7,-8
 270              	 .cfi_offset 14,-4
 271 0002 00AF     	 add r7,sp,#0
 272              	.LCFI15:
 273              	 .cfi_def_cfa_register 7
 428:../cleanflight/src/main/target/system_XMC4700.c **** #if FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_FACTORY
 429:../cleanflight/src/main/target/system_XMC4700.c ****   /* Enable factory calibration */
 430:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FOTR_Msk;
 431:../cleanflight/src/main/target/system_XMC4700.c **** #else
 432:../cleanflight/src/main/target/system_XMC4700.c ****   /* Automatic calibration uses the fSTDBY */
 433:../cleanflight/src/main/target/system_XMC4700.c **** 
 434:../cleanflight/src/main/target/system_XMC4700.c ****   /* Enable HIB domain */
 435:../cleanflight/src/main/target/system_XMC4700.c ****   /* Power up HIB domain if and only if it is currently powered down */
 436:../cleanflight/src/main/target/system_XMC4700.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 274              	 .loc 1 436 0
 275 0004 9C4B     	 ldr r3,.L18
 276 0006 1B68     	 ldr r3,[r3]
 277 0008 03F00103 	 and r3,r3,#1
 278 000c 002B     	 cmp r3,#0
 279 000e 0FD1     	 bne .L11
 437:../cleanflight/src/main/target/system_XMC4700.c ****   {
 438:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_POWER->PWRSET |= SCU_POWER_PWRSET_HIB_Msk;
 280              	 .loc 1 438 0
 281 0010 994B     	 ldr r3,.L18
 282 0012 994A     	 ldr r2,.L18
 283 0014 5268     	 ldr r2,[r2,#4]
 284 0016 42F00102 	 orr r2,r2,#1
 285 001a 5968     	 ldr r1,[r3,#4]
 286 001c 0021     	 movs r1,#0
 287 001e 0A43     	 orrs r2,r2,r1
 288 0020 5A60     	 str r2,[r3,#4]
 439:../cleanflight/src/main/target/system_XMC4700.c **** 
 440:../cleanflight/src/main/target/system_XMC4700.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 289              	 .loc 1 440 0
 290 0022 00BF     	 nop
 291              	.L12:
 292              	 .loc 1 440 0 is_stmt 0 discriminator 1
 293 0024 944B     	 ldr r3,.L18
 294 0026 1B68     	 ldr r3,[r3]
 295 0028 03F00103 	 and r3,r3,#1
 296 002c 002B     	 cmp r3,#0
 297 002e F9D0     	 beq .L12
 298              	.L11:
 441:../cleanflight/src/main/target/system_XMC4700.c ****     {
 442:../cleanflight/src/main/target/system_XMC4700.c ****       /* wait until HIB domain is enabled */
 443:../cleanflight/src/main/target/system_XMC4700.c ****     }
 444:../cleanflight/src/main/target/system_XMC4700.c ****   }
 445:../cleanflight/src/main/target/system_XMC4700.c **** 
 446:../cleanflight/src/main/target/system_XMC4700.c ****   /* Remove the reset only if HIB domain were in a state of reset */
 447:../cleanflight/src/main/target/system_XMC4700.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 299              	 .loc 1 447 0 is_stmt 1
 300 0030 924B     	 ldr r3,.L18+4
 301 0032 1B68     	 ldr r3,[r3]
 302 0034 03F40073 	 and r3,r3,#512
 303 0038 002B     	 cmp r3,#0
 304 003a 0CD0     	 beq .L13
 448:../cleanflight/src/main/target/system_XMC4700.c ****   {
 449:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_RESET->RSTCLR |= SCU_RESET_RSTCLR_HIBRS_Msk;
 305              	 .loc 1 449 0
 306 003c 8F4B     	 ldr r3,.L18+4
 307 003e 8F4A     	 ldr r2,.L18+4
 308 0040 9268     	 ldr r2,[r2,#8]
 309 0042 42F40072 	 orr r2,r2,#512
 310 0046 9968     	 ldr r1,[r3,#8]
 311 0048 0021     	 movs r1,#0
 312 004a 0A43     	 orrs r2,r2,r1
 313 004c 9A60     	 str r2,[r3,#8]
 450:../cleanflight/src/main/target/system_XMC4700.c ****     delay(DELAY_CNT_150US_50MHZ);
 314              	 .loc 1 450 0
 315 004e 41F64C50 	 movw r0,#7500
 316 0052 FFF7FEFF 	 bl delay
 317              	.L13:
 451:../cleanflight/src/main/target/system_XMC4700.c ****   }
 452:../cleanflight/src/main/target/system_XMC4700.c ****   
 453:../cleanflight/src/main/target/system_XMC4700.c **** #if STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP
 454:../cleanflight/src/main/target/system_XMC4700.c ****   /* Enable OSC_ULP */
 455:../cleanflight/src/main/target/system_XMC4700.c ****   if ((SCU_HIBERNATE->OSCULCTRL & SCU_HIBERNATE_OSCULCTRL_MODE_Msk) != 0UL)
 456:../cleanflight/src/main/target/system_XMC4700.c ****   {
 457:../cleanflight/src/main/target/system_XMC4700.c ****     /*enable OSC_ULP*/
 458:../cleanflight/src/main/target/system_XMC4700.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 459:../cleanflight/src/main/target/system_XMC4700.c ****     {
 460:../cleanflight/src/main/target/system_XMC4700.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 461:../cleanflight/src/main/target/system_XMC4700.c ****     }
 462:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 463:../cleanflight/src/main/target/system_XMC4700.c **** 
 464:../cleanflight/src/main/target/system_XMC4700.c ****     /* Check if the clock is OK using OSCULP Oscillator Watchdog*/
 465:../cleanflight/src/main/target/system_XMC4700.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 466:../cleanflight/src/main/target/system_XMC4700.c ****     {
 467:../cleanflight/src/main/target/system_XMC4700.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 468:../cleanflight/src/main/target/system_XMC4700.c ****     }
 469:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 470:../cleanflight/src/main/target/system_XMC4700.c **** 
 471:../cleanflight/src/main/target/system_XMC4700.c ****     /* wait till clock is stable */
 472:../cleanflight/src/main/target/system_XMC4700.c ****     do
 473:../cleanflight/src/main/target/system_XMC4700.c ****     {
 474:../cleanflight/src/main/target/system_XMC4700.c ****       while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 475:../cleanflight/src/main/target/system_XMC4700.c ****       {
 476:../cleanflight/src/main/target/system_XMC4700.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 477:../cleanflight/src/main/target/system_XMC4700.c ****       }
 478:../cleanflight/src/main/target/system_XMC4700.c ****       SCU_HIBERNATE->HDCLR |= SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 479:../cleanflight/src/main/target/system_XMC4700.c **** 
 480:../cleanflight/src/main/target/system_XMC4700.c ****       delay(DELAY_CNT_50US_50MHZ);
 481:../cleanflight/src/main/target/system_XMC4700.c **** 
 482:../cleanflight/src/main/target/system_XMC4700.c ****     } while ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) != 0UL);
 483:../cleanflight/src/main/target/system_XMC4700.c **** 
 484:../cleanflight/src/main/target/system_XMC4700.c ****   }
 485:../cleanflight/src/main/target/system_XMC4700.c **** 
 486:../cleanflight/src/main/target/system_XMC4700.c ****   /* now OSC_ULP is running and can be used*/
 487:../cleanflight/src/main/target/system_XMC4700.c ****   /* Select OSC_ULP as the clock source for RTC and STDBY*/
 488:../cleanflight/src/main/target/system_XMC4700.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 489:../cleanflight/src/main/target/system_XMC4700.c ****   {
 490:../cleanflight/src/main/target/system_XMC4700.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 491:../cleanflight/src/main/target/system_XMC4700.c ****   }
 492:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_RCS_Msk | SCU_HIBERNATE_HDCR_STDBYSEL_Msk;
 493:../cleanflight/src/main/target/system_XMC4700.c **** #endif /* STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP */
 494:../cleanflight/src/main/target/system_XMC4700.c **** 
 495:../cleanflight/src/main/target/system_XMC4700.c ****   /* Enable automatic calibration of internal fast oscillator */
 496:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_AOTREN_Msk;
 318              	 .loc 1 496 0
 319 0056 8A4B     	 ldr r3,.L18+8
 320 0058 894A     	 ldr r2,.L18+8
 321 005a 5268     	 ldr r2,[r2,#4]
 322 005c 42F40022 	 orr r2,r2,#524288
 323 0060 5968     	 ldr r1,[r3,#4]
 324 0062 0021     	 movs r1,#0
 325 0064 0A43     	 orrs r2,r2,r1
 326 0066 5A60     	 str r2,[r3,#4]
 497:../cleanflight/src/main/target/system_XMC4700.c **** #endif /* FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_AUTOMATIC */
 498:../cleanflight/src/main/target/system_XMC4700.c **** 
 499:../cleanflight/src/main/target/system_XMC4700.c ****   delay(DELAY_CNT_50US_50MHZ);
 327              	 .loc 1 499 0
 328 0068 40F6C410 	 movw r0,#2500
 329 006c FFF7FEFF 	 bl delay
 500:../cleanflight/src/main/target/system_XMC4700.c **** 
 501:../cleanflight/src/main/target/system_XMC4700.c **** #if ENABLE_PLL
 502:../cleanflight/src/main/target/system_XMC4700.c **** 
 503:../cleanflight/src/main/target/system_XMC4700.c ****   /* enable PLL */
 504:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 330              	 .loc 1 504 0
 331 0070 834A     	 ldr r2,.L18+8
 332 0072 834B     	 ldr r3,.L18+8
 333 0074 5B68     	 ldr r3,[r3,#4]
 334 0076 23F48033 	 bic r3,r3,#65536
 335 007a 23F00203 	 bic r3,r3,#2
 336 007e 5168     	 ldr r1,[r2,#4]
 337 0080 0021     	 movs r1,#0
 338 0082 0B43     	 orrs r3,r3,r1
 339 0084 5360     	 str r3,[r2,#4]
 505:../cleanflight/src/main/target/system_XMC4700.c **** 
 506:../cleanflight/src/main/target/system_XMC4700.c **** #if PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI
 507:../cleanflight/src/main/target/system_XMC4700.c ****   /* enable OSC_HP */
 508:../cleanflight/src/main/target/system_XMC4700.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 340              	 .loc 1 508 0
 341 0086 7F4B     	 ldr r3,.L18+12
 342 0088 5B68     	 ldr r3,[r3,#4]
 343 008a 03F03003 	 and r3,r3,#48
 344 008e 002B     	 cmp r3,#0
 345 0090 35D0     	 beq .L14
 509:../cleanflight/src/main/target/system_XMC4700.c ****   {
 510:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 346              	 .loc 1 510 0
 347 0092 7C4A     	 ldr r2,.L18+12
 348 0094 7B4B     	 ldr r3,.L18+12
 349 0096 5B68     	 ldr r3,[r3,#4]
 350 0098 23F47023 	 bic r3,r3,#983040
 351 009c 23F03003 	 bic r3,r3,#48
 352 00a0 5168     	 ldr r1,[r2,#4]
 353 00a2 0021     	 movs r1,#0
 354 00a4 0B43     	 orrs r3,r3,r1
 355 00a6 5360     	 str r3,[r2,#4]
 511:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 356              	 .loc 1 511 0
 357 00a8 FFF7FEFF 	 bl OSCHP_GetFrequency
 358 00ac 0246     	 mov r2,r0
 359 00ae 764B     	 ldr r3,.L18+16
 360 00b0 A3FB0223 	 umull r2,r3,r3,r2
 361 00b4 1B0D     	 lsrs r3,r3,#20
 362 00b6 013B     	 subs r3,r3,#1
 363 00b8 1A04     	 lsls r2,r3,#16
 364 00ba 724B     	 ldr r3,.L18+12
 365 00bc 7149     	 ldr r1,.L18+12
 366 00be 4968     	 ldr r1,[r1,#4]
 367 00c0 0A43     	 orrs r2,r2,r1
 368 00c2 5968     	 ldr r1,[r3,#4]
 369 00c4 0021     	 movs r1,#0
 370 00c6 0A43     	 orrs r2,r2,r1
 371 00c8 5A60     	 str r2,[r3,#4]
 512:../cleanflight/src/main/target/system_XMC4700.c **** 
 513:../cleanflight/src/main/target/system_XMC4700.c ****     /* select OSC_HP clock as PLL input */
 514:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_PLL->PLLCON2 &= ~SCU_PLL_PLLCON2_PINSEL_Msk;
 372              	 .loc 1 514 0
 373 00ca 6D4B     	 ldr r3,.L18+8
 374 00cc 6C4A     	 ldr r2,.L18+8
 375 00ce D268     	 ldr r2,[r2,#12]
 376 00d0 22F00102 	 bic r2,r2,#1
 377 00d4 D968     	 ldr r1,[r3,#12]
 378 00d6 0021     	 movs r1,#0
 379 00d8 0A43     	 orrs r2,r2,r1
 380 00da DA60     	 str r2,[r3,#12]
 515:../cleanflight/src/main/target/system_XMC4700.c **** 
 516:../cleanflight/src/main/target/system_XMC4700.c ****     /* restart OSC Watchdog */
 517:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 381              	 .loc 1 517 0
 382 00dc 684B     	 ldr r3,.L18+8
 383 00de 684A     	 ldr r2,.L18+8
 384 00e0 5268     	 ldr r2,[r2,#4]
 385 00e2 22F40032 	 bic r2,r2,#131072
 386 00e6 5968     	 ldr r1,[r3,#4]
 387 00e8 0021     	 movs r1,#0
 388 00ea 0A43     	 orrs r2,r2,r1
 389 00ec 5A60     	 str r2,[r3,#4]
 518:../cleanflight/src/main/target/system_XMC4700.c **** 
 519:../cleanflight/src/main/target/system_XMC4700.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 390              	 .loc 1 519 0
 391 00ee 00BF     	 nop
 392              	.L15:
 393              	 .loc 1 519 0 is_stmt 0 discriminator 1
 394 00f0 634B     	 ldr r3,.L18+8
 395 00f2 1B68     	 ldr r3,[r3]
 396 00f4 03F46073 	 and r3,r3,#896
 397 00f8 B3F5607F 	 cmp r3,#896
 398 00fc F8D1     	 bne .L15
 399              	.L14:
 520:../cleanflight/src/main/target/system_XMC4700.c ****     {
 521:../cleanflight/src/main/target/system_XMC4700.c ****       /* wait till OSC_HP output frequency is usable */
 522:../cleanflight/src/main/target/system_XMC4700.c ****     }   
 523:../cleanflight/src/main/target/system_XMC4700.c ****   }
 524:../cleanflight/src/main/target/system_XMC4700.c **** #else /* PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI */
 525:../cleanflight/src/main/target/system_XMC4700.c **** 
 526:../cleanflight/src/main/target/system_XMC4700.c ****   /* select backup clock as PLL input */
 527:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON2 |= SCU_PLL_PLLCON2_PINSEL_Msk;
 528:../cleanflight/src/main/target/system_XMC4700.c **** #endif
 529:../cleanflight/src/main/target/system_XMC4700.c **** 
 530:../cleanflight/src/main/target/system_XMC4700.c ****   /* Go to bypass the Main PLL */
 531:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_VCOBYP_Msk;
 400              	 .loc 1 531 0 is_stmt 1
 401 00fe 604B     	 ldr r3,.L18+8
 402 0100 5F4A     	 ldr r2,.L18+8
 403 0102 5268     	 ldr r2,[r2,#4]
 404 0104 42F00102 	 orr r2,r2,#1
 405 0108 5968     	 ldr r1,[r3,#4]
 406 010a 0021     	 movs r1,#0
 407 010c 0A43     	 orrs r2,r2,r1
 408 010e 5A60     	 str r2,[r3,#4]
 532:../cleanflight/src/main/target/system_XMC4700.c **** 
 533:../cleanflight/src/main/target/system_XMC4700.c ****   /* disconnect Oscillator from PLL */
 534:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FINDIS_Msk;
 409              	 .loc 1 534 0
 410 0110 5B4B     	 ldr r3,.L18+8
 411 0112 5B4A     	 ldr r2,.L18+8
 412 0114 5268     	 ldr r2,[r2,#4]
 413 0116 42F01002 	 orr r2,r2,#16
 414 011a 5968     	 ldr r1,[r3,#4]
 415 011c 0021     	 movs r1,#0
 416 011e 0A43     	 orrs r2,r2,r1
 417 0120 5A60     	 str r2,[r3,#4]
 535:../cleanflight/src/main/target/system_XMC4700.c **** 
 536:../cleanflight/src/main/target/system_XMC4700.c ****   /* Setup divider settings for main PLL */
 537:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 418              	 .loc 1 537 0
 419 0122 574A     	 ldr r2,.L18+8
 420 0124 9368     	 ldr r3,[r2,#8]
 421 0126 0021     	 movs r1,#0
 422 0128 584B     	 ldr r3,.L18+20
 423 012a 0B43     	 orrs r3,r3,r1
 424 012c 9360     	 str r3,[r2,#8]
 538:../cleanflight/src/main/target/system_XMC4700.c ****                       (PLL_K2DIV_24MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 539:../cleanflight/src/main/target/system_XMC4700.c ****                       (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 540:../cleanflight/src/main/target/system_XMC4700.c **** 
 541:../cleanflight/src/main/target/system_XMC4700.c ****   /* Set OSCDISCDIS */
 542:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 425              	 .loc 1 542 0
 426 012e 544B     	 ldr r3,.L18+8
 427 0130 534A     	 ldr r2,.L18+8
 428 0132 5268     	 ldr r2,[r2,#4]
 429 0134 42F04002 	 orr r2,r2,#64
 430 0138 5968     	 ldr r1,[r3,#4]
 431 013a 0021     	 movs r1,#0
 432 013c 0A43     	 orrs r2,r2,r1
 433 013e 5A60     	 str r2,[r3,#4]
 543:../cleanflight/src/main/target/system_XMC4700.c **** 
 544:../cleanflight/src/main/target/system_XMC4700.c ****   /* connect Oscillator to PLL */
 545:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_FINDIS_Msk;
 434              	 .loc 1 545 0
 435 0140 4F4B     	 ldr r3,.L18+8
 436 0142 4F4A     	 ldr r2,.L18+8
 437 0144 5268     	 ldr r2,[r2,#4]
 438 0146 22F01002 	 bic r2,r2,#16
 439 014a 5968     	 ldr r1,[r3,#4]
 440 014c 0021     	 movs r1,#0
 441 014e 0A43     	 orrs r2,r2,r1
 442 0150 5A60     	 str r2,[r3,#4]
 546:../cleanflight/src/main/target/system_XMC4700.c **** 
 547:../cleanflight/src/main/target/system_XMC4700.c ****   /* restart PLL Lock detection */
 548:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_RESLD_Msk;
 443              	 .loc 1 548 0
 444 0152 4B4B     	 ldr r3,.L18+8
 445 0154 4A4A     	 ldr r2,.L18+8
 446 0156 5268     	 ldr r2,[r2,#4]
 447 0158 42F48022 	 orr r2,r2,#262144
 448 015c 5968     	 ldr r1,[r3,#4]
 449 015e 0021     	 movs r1,#0
 450 0160 0A43     	 orrs r2,r2,r1
 451 0162 5A60     	 str r2,[r3,#4]
 549:../cleanflight/src/main/target/system_XMC4700.c **** 
 550:../cleanflight/src/main/target/system_XMC4700.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 452              	 .loc 1 550 0
 453 0164 00BF     	 nop
 454              	.L16:
 455              	 .loc 1 550 0 is_stmt 0 discriminator 1
 456 0166 464B     	 ldr r3,.L18+8
 457 0168 1B68     	 ldr r3,[r3]
 458 016a 03F00403 	 and r3,r3,#4
 459 016e 002B     	 cmp r3,#0
 460 0170 F9D0     	 beq .L16
 551:../cleanflight/src/main/target/system_XMC4700.c ****   {
 552:../cleanflight/src/main/target/system_XMC4700.c ****     /* wait for PLL Lock at 24MHz*/
 553:../cleanflight/src/main/target/system_XMC4700.c ****   }
 554:../cleanflight/src/main/target/system_XMC4700.c **** 
 555:../cleanflight/src/main/target/system_XMC4700.c ****   /* Disable bypass- put PLL clock back */
 556:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_VCOBYP_Msk;
 461              	 .loc 1 556 0 is_stmt 1
 462 0172 434B     	 ldr r3,.L18+8
 463 0174 424A     	 ldr r2,.L18+8
 464 0176 5268     	 ldr r2,[r2,#4]
 465 0178 22F00102 	 bic r2,r2,#1
 466 017c 5968     	 ldr r1,[r3,#4]
 467 017e 0021     	 movs r1,#0
 468 0180 0A43     	 orrs r2,r2,r1
 469 0182 5A60     	 str r2,[r3,#4]
 557:../cleanflight/src/main/target/system_XMC4700.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 470              	 .loc 1 557 0
 471 0184 00BF     	 nop
 472              	.L17:
 473              	 .loc 1 557 0 is_stmt 0 discriminator 1
 474 0186 3E4B     	 ldr r3,.L18+8
 475 0188 1B68     	 ldr r3,[r3]
 476 018a 03F00103 	 and r3,r3,#1
 477 018e 002B     	 cmp r3,#0
 478 0190 F9D1     	 bne .L17
 558:../cleanflight/src/main/target/system_XMC4700.c ****   {
 559:../cleanflight/src/main/target/system_XMC4700.c ****     /* wait for normal mode */
 560:../cleanflight/src/main/target/system_XMC4700.c ****   } 
 561:../cleanflight/src/main/target/system_XMC4700.c **** #endif /* ENABLE_PLL */
 562:../cleanflight/src/main/target/system_XMC4700.c **** 
 563:../cleanflight/src/main/target/system_XMC4700.c ****   /* Before scaling to final frequency we need to setup the clock dividers */
 564:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_CLK->SYSCLKCR = __SYSCLKCR;
 479              	 .loc 1 564 0 is_stmt 1
 480 0192 3F4B     	 ldr r3,.L18+24
 481 0194 DA68     	 ldr r2,[r3,#12]
 482 0196 0022     	 movs r2,#0
 483 0198 42F00112 	 orr r2,r2,#65537
 484 019c DA60     	 str r2,[r3,#12]
 565:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_CLK->PBCLKCR = __PBCLKCR;
 485              	 .loc 1 565 0
 486 019e 3C4B     	 ldr r3,.L18+24
 487 01a0 5A69     	 ldr r2,[r3,#20]
 488 01a2 0022     	 movs r2,#0
 489 01a4 5A61     	 str r2,[r3,#20]
 566:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_CLK->CPUCLKCR = __CPUCLKCR;
 490              	 .loc 1 566 0
 491 01a6 3A4B     	 ldr r3,.L18+24
 492 01a8 1A69     	 ldr r2,[r3,#16]
 493 01aa 0022     	 movs r2,#0
 494 01ac 1A61     	 str r2,[r3,#16]
 567:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_CLK->CCUCLKCR = __CCUCLKCR;
 495              	 .loc 1 567 0
 496 01ae 384B     	 ldr r3,.L18+24
 497 01b0 1A6A     	 ldr r2,[r3,#32]
 498 01b2 0022     	 movs r2,#0
 499 01b4 1A62     	 str r2,[r3,#32]
 568:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_CLK->WDTCLKCR = __WDTCLKCR;
 500              	 .loc 1 568 0
 501 01b6 364B     	 ldr r3,.L18+24
 502 01b8 5A6A     	 ldr r2,[r3,#36]
 503 01ba 0022     	 movs r2,#0
 504 01bc 5A62     	 str r2,[r3,#36]
 569:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_CLK->EBUCLKCR = __EBUCLKCR;
 505              	 .loc 1 569 0
 506 01be 344B     	 ldr r3,.L18+24
 507 01c0 DA69     	 ldr r2,[r3,#28]
 508 01c2 0022     	 movs r2,#0
 509 01c4 42F00302 	 orr r2,r2,#3
 510 01c8 DA61     	 str r2,[r3,#28]
 570:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_CLK->USBCLKCR = __USBCLKCR | USB_DIV;
 511              	 .loc 1 570 0
 512 01ca 314A     	 ldr r2,.L18+24
 513 01cc 9369     	 ldr r3,[r2,#24]
 514 01ce 0023     	 movs r3,#0
 515 01d0 43F48033 	 orr r3,r3,#65536
 516 01d4 43F00503 	 orr r3,r3,#5
 517 01d8 9361     	 str r3,[r2,#24]
 571:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_CLK->EXTCLKCR = __EXTCLKCR;
 518              	 .loc 1 571 0
 519 01da 2D4A     	 ldr r2,.L18+24
 520 01dc 936A     	 ldr r3,[r2,#40]
 521 01de 0023     	 movs r3,#0
 522 01e0 43F09073 	 orr r3,r3,#18874368
 523 01e4 43F00303 	 orr r3,r3,#3
 524 01e8 9362     	 str r3,[r2,#40]
 572:../cleanflight/src/main/target/system_XMC4700.c **** 
 573:../cleanflight/src/main/target/system_XMC4700.c **** #if ENABLE_PLL
 574:../cleanflight/src/main/target/system_XMC4700.c ****   /* PLL frequency stepping...*/
 575:../cleanflight/src/main/target/system_XMC4700.c ****   /* Reset OSCDISCDIS */
 576:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 525              	 .loc 1 576 0
 526 01ea 254B     	 ldr r3,.L18+8
 527 01ec 244A     	 ldr r2,.L18+8
 528 01ee 5268     	 ldr r2,[r2,#4]
 529 01f0 22F04002 	 bic r2,r2,#64
 530 01f4 5968     	 ldr r1,[r3,#4]
 531 01f6 0021     	 movs r1,#0
 532 01f8 0A43     	 orrs r2,r2,r1
 533 01fa 5A60     	 str r2,[r3,#4]
 577:../cleanflight/src/main/target/system_XMC4700.c ****   
 578:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 534              	 .loc 1 578 0
 535 01fc 204A     	 ldr r2,.L18+8
 536 01fe 9368     	 ldr r3,[r2,#8]
 537 0200 0021     	 movs r1,#0
 538 0202 244B     	 ldr r3,.L18+28
 539 0204 0B43     	 orrs r3,r3,r1
 540 0206 9360     	 str r3,[r2,#8]
 579:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_K2DIV_48MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 580:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 581:../cleanflight/src/main/target/system_XMC4700.c **** 
 582:../cleanflight/src/main/target/system_XMC4700.c ****   delay(DELAY_CNT_50US_48MHZ);
 541              	 .loc 1 582 0
 542 0208 4FF41660 	 mov r0,#2400
 543 020c FFF7FEFF 	 bl delay
 583:../cleanflight/src/main/target/system_XMC4700.c **** 
 584:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 544              	 .loc 1 584 0
 545 0210 1B4A     	 ldr r2,.L18+8
 546 0212 9368     	 ldr r3,[r2,#8]
 547 0214 0021     	 movs r1,#0
 548 0216 204B     	 ldr r3,.L18+32
 549 0218 0B43     	 orrs r3,r3,r1
 550 021a 9360     	 str r3,[r2,#8]
 585:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_K2DIV_72MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 586:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 587:../cleanflight/src/main/target/system_XMC4700.c **** 
 588:../cleanflight/src/main/target/system_XMC4700.c ****   delay(DELAY_CNT_50US_72MHZ);
 551              	 .loc 1 588 0
 552 021c 4FF46160 	 mov r0,#3600
 553 0220 FFF7FEFF 	 bl delay
 589:../cleanflight/src/main/target/system_XMC4700.c **** 
 590:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 554              	 .loc 1 590 0
 555 0224 164A     	 ldr r2,.L18+8
 556 0226 9368     	 ldr r3,[r2,#8]
 557 0228 0023     	 movs r3,#0
 558 022a 43F08173 	 orr r3,r3,#16908288
 559 022e 43F43C53 	 orr r3,r3,#12032
 560 0232 9360     	 str r3,[r2,#8]
 591:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_K2DIV_96MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 592:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 593:../cleanflight/src/main/target/system_XMC4700.c **** 
 594:../cleanflight/src/main/target/system_XMC4700.c ****   delay(DELAY_CNT_50US_96MHZ);
 561              	 .loc 1 594 0
 562 0234 4FF49650 	 mov r0,#4800
 563 0238 FFF7FEFF 	 bl delay
 595:../cleanflight/src/main/target/system_XMC4700.c **** 
 596:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 564              	 .loc 1 596 0
 565 023c 104A     	 ldr r2,.L18+8
 566 023e 9368     	 ldr r3,[r2,#8]
 567 0240 0021     	 movs r1,#0
 568 0242 164B     	 ldr r3,.L18+36
 569 0244 0B43     	 orrs r3,r3,r1
 570 0246 9360     	 str r3,[r2,#8]
 597:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_K2DIV_120MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 598:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 599:../cleanflight/src/main/target/system_XMC4700.c **** 
 600:../cleanflight/src/main/target/system_XMC4700.c ****   delay(DELAY_CNT_50US_120MHZ);
 571              	 .loc 1 600 0
 572 0248 41F27070 	 movw r0,#6000
 573 024c FFF7FEFF 	 bl delay
 601:../cleanflight/src/main/target/system_XMC4700.c **** 
 602:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 574              	 .loc 1 602 0
 575 0250 0B4A     	 ldr r2,.L18+8
 576 0252 9368     	 ldr r3,[r2,#8]
 577 0254 0023     	 movs r3,#0
 578 0256 43F08073 	 orr r3,r3,#16777216
 579 025a 43F43C53 	 orr r3,r3,#12032
 580 025e 9360     	 str r3,[r2,#8]
 603:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_K2DIV << SCU_PLL_PLLCON1_K2DIV_Pos) |
 604:../cleanflight/src/main/target/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 605:../cleanflight/src/main/target/system_XMC4700.c **** 
 606:../cleanflight/src/main/target/system_XMC4700.c ****   delay(DELAY_CNT_50US_144MHZ);
 581              	 .loc 1 606 0
 582 0260 4FF4E150 	 mov r0,#7200
 583 0264 FFF7FEFF 	 bl delay
 607:../cleanflight/src/main/target/system_XMC4700.c ****   
 608:../cleanflight/src/main/target/system_XMC4700.c **** #endif /* ENABLE_PLL */
 609:../cleanflight/src/main/target/system_XMC4700.c **** 
 610:../cleanflight/src/main/target/system_XMC4700.c **** #if ENABLE_USBPLL
 611:../cleanflight/src/main/target/system_XMC4700.c ****   /* enable USB PLL first */
 612:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->USBPLLCON &= ~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 613:../cleanflight/src/main/target/system_XMC4700.c **** 
 614:../cleanflight/src/main/target/system_XMC4700.c ****   /* USB PLL uses as clock input the OSC_HP */
 615:../cleanflight/src/main/target/system_XMC4700.c ****   /* check and if not already running enable OSC_HP */
 616:../cleanflight/src/main/target/system_XMC4700.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 617:../cleanflight/src/main/target/system_XMC4700.c ****   {
 618:../cleanflight/src/main/target/system_XMC4700.c ****     /* check if Main PLL is switched on for OSC WDG*/
 619:../cleanflight/src/main/target/system_XMC4700.c ****     if ((SCU_PLL->PLLCON0 &(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk)) != 0UL)
 620:../cleanflight/src/main/target/system_XMC4700.c ****     {
 621:../cleanflight/src/main/target/system_XMC4700.c ****       /* enable PLL first */
 622:../cleanflight/src/main/target/system_XMC4700.c ****       SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 623:../cleanflight/src/main/target/system_XMC4700.c ****     }
 624:../cleanflight/src/main/target/system_XMC4700.c **** 
 625:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 626:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 627:../cleanflight/src/main/target/system_XMC4700.c **** 
 628:../cleanflight/src/main/target/system_XMC4700.c ****     /* restart OSC Watchdog */
 629:../cleanflight/src/main/target/system_XMC4700.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 630:../cleanflight/src/main/target/system_XMC4700.c **** 
 631:../cleanflight/src/main/target/system_XMC4700.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 632:../cleanflight/src/main/target/system_XMC4700.c ****     {
 633:../cleanflight/src/main/target/system_XMC4700.c ****       /* wait till OSC_HP output frequency is usable */
 634:../cleanflight/src/main/target/system_XMC4700.c ****     }
 635:../cleanflight/src/main/target/system_XMC4700.c ****   }
 636:../cleanflight/src/main/target/system_XMC4700.c **** 
 637:../cleanflight/src/main/target/system_XMC4700.c **** 
 638:../cleanflight/src/main/target/system_XMC4700.c ****   /* Setup USB PLL */
 639:../cleanflight/src/main/target/system_XMC4700.c ****   /* Go to bypass the USB PLL */
 640:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_VCOBYP_Msk;
 641:../cleanflight/src/main/target/system_XMC4700.c **** 
 642:../cleanflight/src/main/target/system_XMC4700.c ****   /* disconnect Oscillator from USB PLL */
 643:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_FINDIS_Msk;
 644:../cleanflight/src/main/target/system_XMC4700.c **** 
 645:../cleanflight/src/main/target/system_XMC4700.c ****   /* Setup Divider settings for USB PLL */
 646:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->USBPLLCON = ((USB_NDIV << SCU_PLL_USBPLLCON_NDIV_Pos) |
 647:../cleanflight/src/main/target/system_XMC4700.c ****                         (USB_PDIV << SCU_PLL_USBPLLCON_PDIV_Pos));
 648:../cleanflight/src/main/target/system_XMC4700.c **** 
 649:../cleanflight/src/main/target/system_XMC4700.c ****   /* Set OSCDISCDIS */
 650:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 651:../cleanflight/src/main/target/system_XMC4700.c **** 
 652:../cleanflight/src/main/target/system_XMC4700.c ****   /* connect Oscillator to USB PLL */
 653:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_FINDIS_Msk;
 654:../cleanflight/src/main/target/system_XMC4700.c **** 
 655:../cleanflight/src/main/target/system_XMC4700.c ****   /* restart PLL Lock detection */
 656:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_RESLD_Msk;
 657:../cleanflight/src/main/target/system_XMC4700.c **** 
 658:../cleanflight/src/main/target/system_XMC4700.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 659:../cleanflight/src/main/target/system_XMC4700.c ****   {
 660:../cleanflight/src/main/target/system_XMC4700.c ****     /* wait for PLL Lock */
 661:../cleanflight/src/main/target/system_XMC4700.c ****   }  
 662:../cleanflight/src/main/target/system_XMC4700.c **** #endif
 663:../cleanflight/src/main/target/system_XMC4700.c **** 
 664:../cleanflight/src/main/target/system_XMC4700.c **** 
 665:../cleanflight/src/main/target/system_XMC4700.c ****   /* Enable selected clocks */
 666:../cleanflight/src/main/target/system_XMC4700.c ****   SCU_CLK->CLKSET = __CLKSET;
 584              	 .loc 1 666 0
 585 0268 094B     	 ldr r3,.L18+24
 586 026a 5A68     	 ldr r2,[r3,#4]
 587 026c 0022     	 movs r2,#0
 588 026e 5A60     	 str r2,[r3,#4]
 667:../cleanflight/src/main/target/system_XMC4700.c **** 
 668:../cleanflight/src/main/target/system_XMC4700.c **** #if __EXTCLKPIN != 0
 669:../cleanflight/src/main/target/system_XMC4700.c **** #if __EXTCLKPIN == EXTCLK_PIN_P1_15
 670:../cleanflight/src/main/target/system_XMC4700.c ****   /* P1.15 */
 671:../cleanflight/src/main/target/system_XMC4700.c ****   PORT1->PDR1 &= ~PORT1_PDR1_PD15_Msk;
 672:../cleanflight/src/main/target/system_XMC4700.c ****   PORT1->IOCR12 = (PORT1->IOCR12 & ~PORT0_IOCR12_PC15_Msk) | (0x11U << PORT0_IOCR12_PC15_Pos);
 673:../cleanflight/src/main/target/system_XMC4700.c **** #else
 674:../cleanflight/src/main/target/system_XMC4700.c ****   /* P0.8 */
 675:../cleanflight/src/main/target/system_XMC4700.c ****   PORT0->HWSEL &= ~PORT0_HWSEL_HW8_Msk;
 676:../cleanflight/src/main/target/system_XMC4700.c ****   PORT0->PDR1 &= ~PORT0_PDR1_PD8_Msk;
 677:../cleanflight/src/main/target/system_XMC4700.c ****   PORT0->IOCR8 = (PORT0->IOCR8 & ~PORT0_IOCR8_PC8_Msk) | (0x11U << PORT0_IOCR8_PC8_Pos);
 678:../cleanflight/src/main/target/system_XMC4700.c **** #endif
 679:../cleanflight/src/main/target/system_XMC4700.c **** #endif  /* ENABLE_EXTCLK == 1  */
 680:../cleanflight/src/main/target/system_XMC4700.c **** 
 681:../cleanflight/src/main/target/system_XMC4700.c ****   SystemCoreClockUpdate();
 589              	 .loc 1 681 0
 590 0270 FFF7FEFF 	 bl SystemCoreClockUpdate
 682:../cleanflight/src/main/target/system_XMC4700.c **** }
 591              	 .loc 1 682 0
 592 0274 80BD     	 pop {r7,pc}
 593              	.L19:
 594 0276 00BF     	 .align 2
 595              	.L18:
 596 0278 00420050 	 .word 1342194176
 597 027c 00440050 	 .word 1342194688
 598 0280 10470050 	 .word 1342195472
 599 0284 00470050 	 .word 1342195456
 600 0288 6BCA5F6B 	 .word 1801439851
 601 028c 002F0B01 	 .word 17510144
 602 0290 00460050 	 .word 1342195200
 603 0294 002F0501 	 .word 17116928
 604 0298 002F0301 	 .word 16985856
 605 029c 002F0101 	 .word 16854784
 606              	 .cfi_endproc
 607              	.LFE133:
 609              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
 610              	 .align 2
 611              	 .weak SystemCoreClockUpdate
 612              	 .thumb
 613              	 .thumb_func
 615              	SystemCoreClockUpdate:
 616              	.LFB134:
 683:../cleanflight/src/main/target/system_XMC4700.c **** 
 684:../cleanflight/src/main/target/system_XMC4700.c **** __WEAK void SystemCoreClockUpdate(void)
 685:../cleanflight/src/main/target/system_XMC4700.c **** {
 617              	 .loc 1 685 0
 618              	 .cfi_startproc
 619              	 
 620              	 
 621 0000 80B5     	 push {r7,lr}
 622              	.LCFI16:
 623              	 .cfi_def_cfa_offset 8
 624              	 .cfi_offset 7,-8
 625              	 .cfi_offset 14,-4
 626 0002 84B0     	 sub sp,sp,#16
 627              	.LCFI17:
 628              	 .cfi_def_cfa_offset 24
 629 0004 00AF     	 add r7,sp,#0
 630              	.LCFI18:
 631              	 .cfi_def_cfa_register 7
 686:../cleanflight/src/main/target/system_XMC4700.c ****   uint32_t pdiv;
 687:../cleanflight/src/main/target/system_XMC4700.c ****   uint32_t ndiv;
 688:../cleanflight/src/main/target/system_XMC4700.c ****   uint32_t kdiv;
 689:../cleanflight/src/main/target/system_XMC4700.c ****   uint32_t temp;
 690:../cleanflight/src/main/target/system_XMC4700.c **** 
 691:../cleanflight/src/main/target/system_XMC4700.c ****   if (SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk)
 632              	 .loc 1 691 0
 633 0006 2F4B     	 ldr r3,.L27
 634 0008 DB68     	 ldr r3,[r3,#12]
 635 000a 03F48033 	 and r3,r3,#65536
 636 000e 002B     	 cmp r3,#0
 637 0010 3ED0     	 beq .L21
 692:../cleanflight/src/main/target/system_XMC4700.c ****   {
 693:../cleanflight/src/main/target/system_XMC4700.c ****     /* fPLL is clock source for fSYS */
 694:../cleanflight/src/main/target/system_XMC4700.c ****     if(SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk)
 638              	 .loc 1 694 0
 639 0012 2D4B     	 ldr r3,.L27+4
 640 0014 DB68     	 ldr r3,[r3,#12]
 641 0016 03F00103 	 and r3,r3,#1
 642 001a 002B     	 cmp r3,#0
 643 001c 02D0     	 beq .L22
 695:../cleanflight/src/main/target/system_XMC4700.c ****     {
 696:../cleanflight/src/main/target/system_XMC4700.c ****       /* PLL input clock is the backup clock (fOFI) */
 697:../cleanflight/src/main/target/system_XMC4700.c ****       temp = OFI_FREQUENCY;
 644              	 .loc 1 697 0
 645 001e 2B4B     	 ldr r3,.L27+8
 646 0020 FB60     	 str r3,[r7,#12]
 647 0022 02E0     	 b .L23
 648              	.L22:
 698:../cleanflight/src/main/target/system_XMC4700.c ****     }
 699:../cleanflight/src/main/target/system_XMC4700.c ****     else
 700:../cleanflight/src/main/target/system_XMC4700.c ****     {
 701:../cleanflight/src/main/target/system_XMC4700.c ****       /* PLL input clock is the high performance osicllator (fOSCHP) */
 702:../cleanflight/src/main/target/system_XMC4700.c ****       temp = OSCHP_GetFrequency();
 649              	 .loc 1 702 0
 650 0024 FFF7FEFF 	 bl OSCHP_GetFrequency
 651 0028 F860     	 str r0,[r7,#12]
 652              	.L23:
 703:../cleanflight/src/main/target/system_XMC4700.c ****     }
 704:../cleanflight/src/main/target/system_XMC4700.c **** 
 705:../cleanflight/src/main/target/system_XMC4700.c ****     /* check if PLL is locked */
 706:../cleanflight/src/main/target/system_XMC4700.c ****     if (SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk)
 653              	 .loc 1 706 0
 654 002a 274B     	 ldr r3,.L27+4
 655 002c 1B68     	 ldr r3,[r3]
 656 002e 03F00403 	 and r3,r3,#4
 657 0032 002B     	 cmp r3,#0
 658 0034 20D0     	 beq .L24
 707:../cleanflight/src/main/target/system_XMC4700.c ****     {
 708:../cleanflight/src/main/target/system_XMC4700.c ****       /* PLL normal mode */
 709:../cleanflight/src/main/target/system_XMC4700.c ****       /* read back divider settings */
 710:../cleanflight/src/main/target/system_XMC4700.c ****       pdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Pos) + 1;
 659              	 .loc 1 710 0
 660 0036 244B     	 ldr r3,.L27+4
 661 0038 9B68     	 ldr r3,[r3,#8]
 662 003a 03F07063 	 and r3,r3,#251658240
 663 003e 1B0E     	 lsrs r3,r3,#24
 664 0040 0133     	 adds r3,r3,#1
 665 0042 BB60     	 str r3,[r7,#8]
 711:../cleanflight/src/main/target/system_XMC4700.c ****       ndiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Pos) + 1;
 666              	 .loc 1 711 0
 667 0044 204B     	 ldr r3,.L27+4
 668 0046 9B68     	 ldr r3,[r3,#8]
 669 0048 03F4FE43 	 and r3,r3,#32512
 670 004c 1B0A     	 lsrs r3,r3,#8
 671 004e 0133     	 adds r3,r3,#1
 672 0050 7B60     	 str r3,[r7,#4]
 712:../cleanflight/src/main/target/system_XMC4700.c ****       kdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_Pos) + 1;
 673              	 .loc 1 712 0
 674 0052 1D4B     	 ldr r3,.L27+4
 675 0054 9B68     	 ldr r3,[r3,#8]
 676 0056 03F4FE03 	 and r3,r3,#8323072
 677 005a 1B0C     	 lsrs r3,r3,#16
 678 005c 0133     	 adds r3,r3,#1
 679 005e 3B60     	 str r3,[r7]
 713:../cleanflight/src/main/target/system_XMC4700.c **** 
 714:../cleanflight/src/main/target/system_XMC4700.c ****       temp = (temp / (pdiv * kdiv)) * ndiv;
 680              	 .loc 1 714 0
 681 0060 BB68     	 ldr r3,[r7,#8]
 682 0062 3A68     	 ldr r2,[r7]
 683 0064 02FB03F3 	 mul r3,r2,r3
 684 0068 FA68     	 ldr r2,[r7,#12]
 685 006a B2FBF3F3 	 udiv r3,r2,r3
 686 006e 7A68     	 ldr r2,[r7,#4]
 687 0070 02FB03F3 	 mul r3,r2,r3
 688 0074 FB60     	 str r3,[r7,#12]
 689 0076 0DE0     	 b .L26
 690              	.L24:
 715:../cleanflight/src/main/target/system_XMC4700.c ****     }
 716:../cleanflight/src/main/target/system_XMC4700.c ****     else
 717:../cleanflight/src/main/target/system_XMC4700.c ****     {
 718:../cleanflight/src/main/target/system_XMC4700.c ****       /* PLL prescalar mode */
 719:../cleanflight/src/main/target/system_XMC4700.c ****       /* read back divider settings */
 720:../cleanflight/src/main/target/system_XMC4700.c ****       kdiv  = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_Pos) + 1;
 691              	 .loc 1 720 0
 692 0078 134B     	 ldr r3,.L27+4
 693 007a 9B68     	 ldr r3,[r3,#8]
 694 007c 03F07F03 	 and r3,r3,#127
 695 0080 0133     	 adds r3,r3,#1
 696 0082 3B60     	 str r3,[r7]
 721:../cleanflight/src/main/target/system_XMC4700.c ****       
 722:../cleanflight/src/main/target/system_XMC4700.c ****       temp = (temp / kdiv);
 697              	 .loc 1 722 0
 698 0084 FA68     	 ldr r2,[r7,#12]
 699 0086 3B68     	 ldr r3,[r7]
 700 0088 B2FBF3F3 	 udiv r3,r2,r3
 701 008c FB60     	 str r3,[r7,#12]
 702 008e 01E0     	 b .L26
 703              	.L21:
 723:../cleanflight/src/main/target/system_XMC4700.c ****     }
 724:../cleanflight/src/main/target/system_XMC4700.c ****   }
 725:../cleanflight/src/main/target/system_XMC4700.c ****   else
 726:../cleanflight/src/main/target/system_XMC4700.c ****   {
 727:../cleanflight/src/main/target/system_XMC4700.c ****     /* fOFI is clock source for fSYS */    
 728:../cleanflight/src/main/target/system_XMC4700.c ****     temp = OFI_FREQUENCY;
 704              	 .loc 1 728 0
 705 0090 0E4B     	 ldr r3,.L27+8
 706 0092 FB60     	 str r3,[r7,#12]
 707              	.L26:
 729:../cleanflight/src/main/target/system_XMC4700.c ****   }
 730:../cleanflight/src/main/target/system_XMC4700.c **** 
 731:../cleanflight/src/main/target/system_XMC4700.c ****   temp = temp / ((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) + 1);
 708              	 .loc 1 731 0
 709 0094 0B4B     	 ldr r3,.L27
 710 0096 DB68     	 ldr r3,[r3,#12]
 711 0098 DBB2     	 uxtb r3,r3
 712 009a 0133     	 adds r3,r3,#1
 713 009c FA68     	 ldr r2,[r7,#12]
 714 009e B2FBF3F3 	 udiv r3,r2,r3
 715 00a2 FB60     	 str r3,[r7,#12]
 732:../cleanflight/src/main/target/system_XMC4700.c ****   temp = temp / ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) + 1);
 716              	 .loc 1 732 0
 717 00a4 074B     	 ldr r3,.L27
 718 00a6 1B69     	 ldr r3,[r3,#16]
 719 00a8 03F00103 	 and r3,r3,#1
 720 00ac 0133     	 adds r3,r3,#1
 721 00ae FA68     	 ldr r2,[r7,#12]
 722 00b0 B2FBF3F3 	 udiv r3,r2,r3
 723 00b4 FB60     	 str r3,[r7,#12]
 733:../cleanflight/src/main/target/system_XMC4700.c **** 
 734:../cleanflight/src/main/target/system_XMC4700.c ****   SystemCoreClock = temp;
 724              	 .loc 1 734 0
 725 00b6 064A     	 ldr r2,.L27+12
 726 00b8 FB68     	 ldr r3,[r7,#12]
 727 00ba 1360     	 str r3,[r2]
 735:../cleanflight/src/main/target/system_XMC4700.c **** }
 728              	 .loc 1 735 0
 729 00bc 1037     	 adds r7,r7,#16
 730              	.LCFI19:
 731              	 .cfi_def_cfa_offset 8
 732 00be BD46     	 mov sp,r7
 733              	.LCFI20:
 734              	 .cfi_def_cfa_register 13
 735              	 
 736 00c0 80BD     	 pop {r7,pc}
 737              	.L28:
 738 00c2 00BF     	 .align 2
 739              	.L27:
 740 00c4 00460050 	 .word 1342195200
 741 00c8 10470050 	 .word 1342195472
 742 00cc 00366E01 	 .word 24000000
 743 00d0 00000000 	 .word SystemCoreClock
 744              	 .cfi_endproc
 745              	.LFE134:
 747              	 .section .text.OSCHP_GetFrequency,"ax",%progbits
 748              	 .align 2
 749              	 .weak OSCHP_GetFrequency
 750              	 .thumb
 751              	 .thumb_func
 753              	OSCHP_GetFrequency:
 754              	.LFB135:
 736:../cleanflight/src/main/target/system_XMC4700.c **** 
 737:../cleanflight/src/main/target/system_XMC4700.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 738:../cleanflight/src/main/target/system_XMC4700.c **** {
 755              	 .loc 1 738 0
 756              	 .cfi_startproc
 757              	 
 758              	 
 759              	 
 760 0000 80B4     	 push {r7}
 761              	.LCFI21:
 762              	 .cfi_def_cfa_offset 4
 763              	 .cfi_offset 7,-4
 764 0002 00AF     	 add r7,sp,#0
 765              	.LCFI22:
 766              	 .cfi_def_cfa_register 7
 739:../cleanflight/src/main/target/system_XMC4700.c ****   return OSCHP_FREQUENCY;
 767              	 .loc 1 739 0
 768 0004 024B     	 ldr r3,.L31
 740:../cleanflight/src/main/target/system_XMC4700.c **** }
 769              	 .loc 1 740 0
 770 0006 1846     	 mov r0,r3
 771 0008 BD46     	 mov sp,r7
 772              	.LCFI23:
 773              	 .cfi_def_cfa_register 13
 774              	 
 775 000a 5DF8047B 	 ldr r7,[sp],#4
 776              	.LCFI24:
 777              	 .cfi_restore 7
 778              	 .cfi_def_cfa_offset 0
 779 000e 7047     	 bx lr
 780              	.L32:
 781              	 .align 2
 782              	.L31:
 783 0010 001BB700 	 .word 12000000
 784              	 .cfi_endproc
 785              	.LFE135:
 787              	 .text
 788              	.Letext0:
 789              	 .file 3 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 790              	 .file 4 "d:\\xmc\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 791              	 .file 5 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/CMSIS/Core/Include/core_cm4.h"
 792              	 .file 6 "D:/XMC/Projekte/Temp/CF_XMC4700/cleanflight/lib/main/XMC4000/XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_XMC4700.c
    {standard input}:24     .no_init:00000000 SystemCoreClock
    {standard input}:21     .no_init:00000000 $d
    {standard input}:30     .no_init:00000004 g_chipid
    {standard input}:33     .text.delay:00000000 $t
    {standard input}:37     .text.delay:00000000 delay
    {standard input}:93     .text.SystemInit:00000000 $t
    {standard input}:98     .text.SystemInit:00000000 SystemInit
    {standard input}:139    .text.SystemCoreSetup:00000000 SystemCoreSetup
    {standard input}:260    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
    {standard input}:129    .text.SystemInit:0000001c $d
    {standard input}:134    .text.SystemCoreSetup:00000000 $t
    {standard input}:248    .text.SystemCoreSetup:0000007c $d
    {standard input}:255    .text.SystemCoreClockSetup:00000000 $t
    {standard input}:753    .text.OSCHP_GetFrequency:00000000 OSCHP_GetFrequency
    {standard input}:615    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:596    .text.SystemCoreClockSetup:00000278 $d
    {standard input}:610    .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:740    .text.SystemCoreClockUpdate:000000c4 $d
    {standard input}:748    .text.OSCHP_GetFrequency:00000000 $t
    {standard input}:783    .text.OSCHP_GetFrequency:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__Vectors
